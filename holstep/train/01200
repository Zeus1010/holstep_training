N Leaf_cell.FCHKUGT
C |- (!V. (!u0. (!u1. (!u2. (!u2'. (((saturated V) /\ ((packing V) /\ (((cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))) ==> (u2 = u2')))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c= * part ccc_A0 cCONS f1 cCONS f2 cCONS f3 cNIL * part ccc_A0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c= f3 f4
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D FORALL_BOOL_THM
A |- ((!b. (P b)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D Hypermap.THREE
A |- ((NUMERAL (BIT1 (BIT1 _0))) = (SUC (NUMERAL (BIT0 (BIT1 _0)))))
T c= cNUMERAL cBIT1 cBIT1 c_0 cSUC cNUMERAL cBIT0 cBIT1 c_0
D HD
A |- ((HD ((CONS h) t)) = h)
T c= cHD cCONS f0 f1 f0
D TL
A |- ((TL ((CONS h) t)) = t)
T c= cTL cCONS f0 f1 f1
D EL
A |- ((((EL (NUMERAL _0)) l) = (HD l)) /\ (((EL (SUC n)) l) = ((EL n) (TL l))))
T c/\ c= cEL cNUMERAL c_0 f0 cHD f0 c= cEL cSUC f1 f0 cEL f1 cTL f0
D CONS_11
A |- (!h1. (!h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2)))))))
T c= c= cCONS f0 f1 cCONS f2 f3 c/\ c= f0 f2 c= f1 f3
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D Misc_defs_and_lemmas.IN_ELIM_THM'
A |- ((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_UNION
A |- (!s. (!t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t))))))
T c= cIN f0 * * part cUNION f1 f2 c\/ cIN f0 f1 cIN f0 f2
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D HULL_SUBSET
A |- (!P. (!s. (s SUBSET ((hull P) s))))
T cSUBSET f0 * * part chull f1 f0
D Trigonometry.JLWZFBH4
A |- (!s. ((coplanar s) = (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))
T c= ccoplanar f0 c? / c? / c? / cSUBSET f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
D AFF_GT_SUBSET_AFFINE_HULL
A |- (!s. (!t. (((aff_gt s) t) SUBSET ((hull affine) (s UNION t)))))
T cSUBSET * * part caff_gt f0 f1 * * part chull part caffine * * part cUNION f0 f1
D Geomdetail.PAIR_EQ_EXPAND
A |- (((a INSERT (b INSERT EMPTY)) = (c INSERT (d INSERT EMPTY))) = (((a = c) /\ (b = d)) \/ ((a = d) /\ (b = c))))
T c= c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c/\ c= f0 f2 c= f1 f3 c/\ c= f0 f3 c= f1 f2
D Pack_defs.edgeX
A |- (!V. (!X. (((edgeX V) X) = (GSPEC (\GEN%PVAR%5988. (?u. (?v. (((SETSPEC GEN%PVAR%5988) ((((VX V) X) u) /\ ((((VX V) X) v) /\ (~ (u = v))))) (u INSERT (v INSERT EMPTY))))))))))
T c= * * part cedgeX f0 f1 * part cGSPEC / c? / c? / cSETSPEC b0 c/\ cVX f0 f1 b1 c/\ cVX f0 f1 b2 c~ c= b1 b2 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
D Packing3.IN_TRANS
A |- (!x. (!s. (!t. (((x IN t) /\ (t SUBSET s)) ==> (x IN s)))))
T c==> c/\ cIN f0 f1 cSUBSET f1 f2 cIN f0 f2
D Local_lemmas.X_IN_AFF_GT_X
A |- (x IN ((aff_gt S) (x INSERT EMPTY)))
T cIN f0 * * part caff_gt f1 * * part cINSERT f0 part cEMPTY
D Leaf_cell.ZASUVOR
A |- (!V. (!u0. (!u1. (!u2. (((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))) ==> (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL
D Leaf_cell.cc_A0
A |- (!ul. ((cc_A0 ul) = ((aff_gt (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))) (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY))))
T c= * part ccc_A0 f0 * * part caff_gt * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 part cEMPTY * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY
D Leaf_cell.CC_KE_34
A |- (!V. (!ul. ((((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0)))) \/ (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))
T c\/ c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
D Leaf_cell.NUNRRDS_0
A |- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (((cc_A0 ul) INTER ((cc_cell V) ul)) = EMPTY)))))
T c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 f1 c~ c= * * part cINTER * part ccc_A0 f1 * * part ccc_cell f0 f1 part cEMPTY
D Leaf_cell.CFFONNL
A |- (!V. (!ul. (!X. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ ((X IN (mcell_set V)) /\ (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) X)) /\ ((~ ((X INTER (cc_A0 ul)) = EMPTY)) /\ (~ (X = ((cc_cell V) ul))))))))) ==> (X = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cIN f2 * part cmcell_set f0 c/\ cIN * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 part cEMPTY * * part cedgeX f0 f2 c/\ c~ c= * * part cINTER f2 * part ccc_A0 f1 part cEMPTY c~ c= f2 * * part ccc_cell f0 f1 c= f2 * * part ccc_cell f0 cCONS cEL cNUMERAL cBIT1 c_0 f1 cCONS cEL cNUMERAL c_0 f1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f1 cNIL
D Leaf_cell.CC_CELL_IN_MCELL_SET
A |- (!V. (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V)))))
T c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 cIN * * part ccc_cell f0 f1 * part cmcell_set f0
D Leaf_cell.CC_CELL_NOT_COPLANAR_EXTREME
A |- (!V. (!ul. (!pp. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ ((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = pp)))) ==> (~ (coplanar (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (pp INSERT EMPTY))))))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 f2 c~ ccoplanar * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT f2 part cEMPTY
D Leaf_cell.LIST_OF_CC_UH
A |- (!V. (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_uh V) ul) = ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL))))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 c= ccc_uh f0 f1 cCONS cEL cNUMERAL c_0 f1 cCONS cEL cNUMERAL cBIT1 c_0 f1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cNIL
D Leaf_cell.STEM_OF_LEAF
A |- (!V. (!ul. (((leaf V) ul) ==> ((stem ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))))))
T c==> cleaf f0 f1 c= * part cstem f1 * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 part cEMPTY
D Leaf_cell.FUEIMOV_4
A |- (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ ((((cc_cell V) ul) = ((cc_cell V) vl)) /\ (((stem ul) = (stem vl)) /\ ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (ul = vl))))))))) ==> (((cc_uh V) vl) = ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c/\ c= * part cstem f1 * part cstem f2 c/\ c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= f1 f2 c= ccc_uh f0 f2 cCONS cEL cNUMERAL cBIT1 c_0 f1 cCONS cEL cNUMERAL c_0 f1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f1 cNIL
D Leaf_cell.FUEIMOV_3
A |- (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ ((((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT EMPTY))) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> (ul = vl)))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 part cEMPTY c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= f1 f2
D Leaf_cell.STEM_EDGEX
A |- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 f1 cIN * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 f1
+ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), ((u0 INSERT (u1 INSERT (u2 INSERT EMPTY))) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) |- (((u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) ==> ((u0 INSERT (u1 INSERT (u2' INSERT (u2 INSERT EMPTY)))) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))) /\ (u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))))
T c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (x = u2) |- (((~ (_7137591 = u0)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137591)) = ((~ (_7137591 = u0)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137591)))
T c==> c= f0 f1 c= c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2
+ |- ((!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2))))) = (!x. ((x IN ((u0 INSERT (u1 INSERT EMPTY)) UNION (u2 INSERT EMPTY))) = (x IN (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))))
T c= ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c= cIN b0 * * part cUNION * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ ((((cc_cell V) ul) = ((cc_cell V) vl)) /\ (((stem ul) = (stem vl)) /\ ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (ul = vl))))))))) ==> (((cc_uh V) vl) = ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL))))))))) ==> ((\V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ ((((cc_cell V) ul) = ((cc_cell V) vl)) /\ (((stem ul) = (stem vl)) /\ ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (ul = vl))))))))) ==> (((cc_uh V) vl) = ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL))))))))) V)) = ((\V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ ((((cc_cell V) ul) = ((cc_cell V) vl)) /\ (((stem ul) = (stem vl)) /\ ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (ul = vl))))))))) ==> (((cc_uh V) vl) = ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL))))))))) V))
T c= c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c/\ c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c/\ c= * part cstem b1 * part cstem b2 c/\ c= ccc_ke b0 b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= b1 b2 c= ccc_uh b0 b2 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b1 cNIL * / ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c/\ c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c/\ c= * part cstem b1 * part cstem b2 c/\ c= ccc_ke b0 b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= b1 b2 c= ccc_uh b0 b2 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b1 cNIL f0 * / ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c/\ c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c/\ c= * part cstem b1 * part cstem b2 c/\ c= ccc_ke b0 b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= b1 b2 c= ccc_uh b0 b2 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b1 cNIL f0
- (x = u2), ((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))) |- (~ (u2 = u0))
T c==> c= f0 f1 c==> c/\ c/\ c/\ c~ c= f0 f2 c~ c= f0 f3 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c~ c= f1 f2
+ |- ((\V. (!u0. (!u1. (!u2. (((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))) ==> (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))))))))) V)
T * / ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 cCONS b1 cCONS b2 cCONS b3 cNIL c/\ cleaf b0 cCONS b2 cCONS b1 cCONS b3 cNIL c= * part cstem cCONS b1 cCONS b2 cCONS b3 cNIL * part cstem cCONS b2 cCONS b1 cCONS b3 cNIL f0
+ |- ((\u0. (!u1. (!u2. (((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))) ==> (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))))))) u0)
T * / ! ! c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS b0 cCONS b1 cCONS b2 cNIL c/\ cleaf f0 cCONS b1 cCONS b0 cCONS b2 cNIL c= * part cstem cCONS b0 cCONS b1 cCONS b2 cNIL * part cstem cCONS b1 cCONS b0 cCONS b2 cNIL f1
+ (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> F)
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL cF
+ ((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) |- ((~ (x = u1)) /\ (~ (x = u2)))
T c==> c/\ c\/ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ c~ c= f0 f2 c~ c= f0 f3
+ ((\v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u))))) v) |- (((((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))) ==> F) = F)
T c==> * / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f4 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c~ c= f4 b0 c\/ c/\ c= f1 f4 c= f2 b0 c/\ c= f1 b0 c= f2 f4 f5 c= c==> c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f4 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f5 c~ c= f4 f5 c\/ c/\ c= f1 f4 c= f2 f5 c/\ c= f1 f5 c= f2 f4 cF cF
- (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u))))), (u0 = u1) |- F
T c==> c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f4 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c~ c= f4 b0 c\/ c/\ c= f1 f4 c= f2 b0 c/\ c= f1 b0 c= f2 f4 c==> c= f1 f2 cF
- (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))) |- (((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u)
T c==> c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f4 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f5 c~ c= f4 f5 c\/ c/\ c= f1 f4 c= f2 f5 c/\ c= f1 f5 c= f2 f4 cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f4
+ (~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) /\ F)
T c==> c~ c/\ c? / cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c? / cleaf b0 cCONS f1 cCONS f0 cCONS f3 cNIL c==> c/\ cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c= * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f1 cCONS f0 cCONS f3 cNIL c/\ c~ c/\ c? / cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c? / cleaf b0 cCONS f1 cCONS f0 cCONS f3 cNIL cF
+ |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) = (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))))
T c= c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1
+ |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
- |- ((_7137368 = _7137371) ==> ((~ (_7137366 = _7137369)) \/ ((~ (_7137367 = _7137370)) \/ ((((aff_gt _7137369) _7137370) _7137371) \/ (~ (((aff_gt _7137366) _7137367) _7137368))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ caff_gt f3 f5 f1 c~ caff_gt f2 f4 f0
+ (~ (u0 = u1)), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((~ (u0 = u1)) /\ ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))))))
T c==> c~ c= f0 f1 c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c/\ c~ c= f0 f1 c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f4 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f4 cNIL * part cstem cCONS f1 cCONS f0 cCONS f4 cNIL c==> c= ccc_ke f2 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f3 c==> c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c? / cleaf b0 cCONS f1 cCONS f0 cCONS f4 cNIL c? / cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ |- ((\ul. (((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) ==> (P (stem ul)))) ul)
T * / c==> c/\ c? / cleaf b1 b0 * f0 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * f0 * part cstem b0 f1
- (EMPTY = (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)
T c==> c= part cEMPTY * * part cINTER * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * part ccc_A0 cCONS f1 cCONS f2 cCONS f4 cNIL c= * * part cINTER * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * part ccc_A0 cCONS f1 cCONS f2 cCONS f4 cNIL part cEMPTY
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
- |- ((((~ (~ F)) = F) ==> (F ==> (~ (~ F)))) = (F ==> (~ (~ F))))
T c= c==> c= c~ c~ cF cF c==> cF c~ c~ cF c==> cF c~ c~ cF
+ (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)), (x = u2) |- ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2) ==> F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f2 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 cF
+ |- (T = (((F ==> B) /\ F) ==> B))
T c= cT c==> c/\ c==> cF f0 cF f0
+ |- ((\p'. (!q'. ((((((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL)))))) = p') ==> ((p' ==> ((u2 = u2') = q')) ==> ((((((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL)))))) ==> (u2 = u2')) = (p' ==> q')))))) p')
T * / ! c==> c= c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cNIL b0 c==> c==> b0 c= c= f2 f4 b1 c= c==> c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cNIL c= f2 f4 c==> b0 b1 f5
+ |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
+ (u0 = u1), ((\v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u))))) v) |- (((\v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u))))) v) /\ F)
T c==> c= f0 f1 c==> * / c/\ c/\ cVX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL f4 c/\ cVX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL b0 c~ c= f4 b0 c\/ c/\ c= f0 f4 c= f1 b0 c/\ c= f0 b0 c= f1 f4 f5 c/\ * / c/\ c/\ cVX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL f4 c/\ cVX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL b0 c~ c= f4 b0 c\/ c/\ c= f0 f4 c= f1 b0 c/\ c= f0 b0 c= f1 f4 f5 cF
+ (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f3 cNIL c==> c~ c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f3 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f4 cNIL cF
- (_7137337 = _7137340) |- ((_7137337 = _7137340) /\ ((~ (_7137335 = _7137338)) \/ ((~ (_7137336 = _7137339)) \/ ((((VX _7137338) _7137339) _7137340) \/ (~ (((VX _7137335) _7137336) _7137337))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ cVX f3 f5 f1 c~ cVX f2 f4 f0
- (x = u2) |- ((~ (x = u1)) = (~ (u2 = u1)))
T c==> c= f0 f1 c= c~ c= f0 f2 c~ c= f1 f2
+ (~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- F
T c==> c~ c/\ c? / cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c? / cleaf b0 cCONS f1 cCONS f0 cCONS f3 cNIL c==> c/\ cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c= * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f1 cCONS f0 cCONS f3 cNIL cF
+ (u0 = u1) |- (((\v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u))))) v) ==> F)
T c==> c= f0 f1 c==> * / c/\ c/\ cVX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL f4 c/\ cVX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL b0 c~ c= f4 b0 c\/ c/\ c= f0 f4 c= f1 b0 c/\ c= f0 b0 c= f1 f4 f5 cF
+ |- ((s SUBSET ((hull P) s)) = T)
T c= cSUBSET f0 * * part chull f1 f0 cT
- (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) |- (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))
T c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL
- (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) |- ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))
T c==> c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL ! c= cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL
+ (a = T) |- ((((T /\ (b /\ (~ c))) ==> d) = ((T /\ b) ==> (c \/ d))) = (((a /\ (b /\ (~ c))) ==> d) = ((a /\ b) ==> (c \/ d))))
T c==> c= f0 cT c= c= c==> c/\ cT c/\ f1 c~ f2 f3 c==> c/\ cT f1 c\/ f2 f3 c= c==> c/\ f0 c/\ f1 c~ f2 f3 c==> c/\ f0 f1 c\/ f2 f3
- |- ((((((u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) ==> B) /\ (u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))) ==> B) ==> ((((u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) ==> B) /\ (u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))) ==> B)) = ((((u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) ==> B) /\ (u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))) ==> B))
T c= c==> c==> c/\ c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c/\ c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c/\ c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ (a = F) |- ((a = F) /\ (((a /\ (b /\ (~ c))) ==> d) = ((a /\ b) ==> (c \/ d))))
T c==> c= f0 cF c/\ c= f0 cF c= c==> c/\ f0 c/\ f1 c~ f2 f3 c==> c/\ f0 f1 c\/ f2 f3
- |- ((~ (u1 = u1)) ==> (u1 = u1))
T c==> c~ c= f0 f0 c= f0 f0
+ (~ (u0 = u1)), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> (u2 = u2'))
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= ccc_ke f2 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f4 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f4 cNIL * part cstem cCONS f1 cCONS f0 cCONS f4 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f2 cCONS f1 cCONS f0 cCONS f4 cNIL c= f4 f3
- (~ F), (~ (P b)), (P c), (b = c) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c/\ c~ cF cF
+ |- ((\V. (!X. (((edgeX V) X) = (GSPEC (\GEN%PVAR%5988. (?u. (?v. (((SETSPEC GEN%PVAR%5988) ((((VX V) X) u) /\ ((((VX V) X) v) /\ (~ (u = v))))) (u INSERT (v INSERT EMPTY)))))))))) V)
T * / ! c= * * part cedgeX b0 b1 * part cGSPEC / c? / c? / cSETSPEC b2 c/\ cVX b0 b1 b3 c/\ cVX b0 b1 b4 c~ c= b3 b4 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f0
- (!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) |- ((~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) _7137355)) \/ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) _7137355))
T c==> ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c\/ c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY f4
+ (~ (u0 = u1)), (packing V), (saturated V), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) INSERT EMPTY))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))))))))) ==> (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> (u2 = u2'))
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f2 cCONS f1 cCONS f0 cCONS f4 cNIL c==> c= ccc_ke f2 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f4 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f4 cNIL * part cstem cCONS f1 cCONS f0 cCONS f4 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c==> c/\ csaturated f2 c/\ cpacking f2 c/\ cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f4 cNIL c/\ c= ccc_ke f2 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f0 cCONS f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f0 cCONS f4 cNIL part cEMPTY c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f2 cCONS f1 cCONS f0 cCONS f4 cNIL c= cCONS f0 cCONS f1 cCONS f3 cNIL cCONS f1 cCONS f0 cCONS f4 cNIL c= f4 f3
+ |- (((!ul. (!X. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ ((X IN (mcell_set V)) /\ (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) X)) /\ ((~ ((X INTER (cc_A0 ul)) = EMPTY)) /\ (~ (X = ((cc_cell V) ul))))))))) ==> (X = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))))))) ==> ((\ul. (!X. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ ((X IN (mcell_set V)) /\ (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) X)) /\ ((~ ((X INTER (cc_A0 ul)) = EMPTY)) /\ (~ (X = ((cc_cell V) ul))))))))) ==> (X = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))))))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = ((\ul. (!X. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ ((X IN (mcell_set V)) /\ (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) X)) /\ ((~ ((X INTER (cc_A0 ul)) = EMPTY)) /\ (~ (X = ((cc_cell V) ul))))))))) ==> (X = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))))))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))
T c= c==> ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 b0 c/\ cIN b1 * part cmcell_set f0 c/\ cIN * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cedgeX f0 b1 c/\ c~ c= * * part cINTER b1 * part ccc_A0 b0 part cEMPTY c~ c= b1 * * part ccc_cell f0 b0 c= b1 * * part ccc_cell f0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b0 cNIL * / ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 b0 c/\ cIN b1 * part cmcell_set f0 c/\ cIN * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cedgeX f0 b1 c/\ c~ c= * * part cINTER b1 * part ccc_A0 b0 part cEMPTY c~ c= b1 * * part ccc_cell f0 b0 c= b1 * * part ccc_cell f0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b0 cNIL cCONS f1 cCONS f2 cCONS f3 cNIL * / ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 b0 c/\ cIN b1 * part cmcell_set f0 c/\ cIN * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cedgeX f0 b1 c/\ c~ c= * * part cINTER b1 * part ccc_A0 b0 part cEMPTY c~ c= b1 * * part ccc_cell f0 b0 c= b1 * * part ccc_cell f0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b0 cNIL cCONS f1 cCONS f2 cCONS f3 cNIL
+ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))), (!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) |- (((!x. (((\x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))) x) ==> F)) ==> ((?x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))) ==> F)) = ((?x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))) ==> F))
T c==> ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c==> ! c= caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c= c==> ! c==> * / c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b1 ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 b0 cF c==> c? / c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 cF c==> c? / c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 cF
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
+ |- (((F /\ (b /\ (~ c))) ==> d) = ((F /\ b) ==> (c \/ d)))
T c= c==> c/\ cF c/\ f0 c~ f1 f2 c==> c/\ cF f0 c\/ f1 f2
+ (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ ((\x. ((\v. ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = v))) x)) (((EL (NUMERAL _0)) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) INSERT EMPTY)))) ==> ((\x. ((\v. ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = v))) x)) (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) = ((\x. ((\v. ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = v))) x)) (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))))
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c= c==> c/\ c? / cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL * / * / c/\ c? / cleaf b2 cCONS f0 cCONS f1 cCONS f3 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY b1 b0 * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f0 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f0 cCONS f2 cNIL part cEMPTY * / * / c/\ c? / cleaf b2 cCONS f0 cCONS f1 cCONS f3 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY b1 b0 * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL * / * / c/\ c? / cleaf b2 cCONS f0 cCONS f1 cCONS f3 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY b1 b0 * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL
- |- ((~ (_7137560 = _7137561)) \/ ((BIT1 _7137560) = (BIT1 _7137561)))
T c\/ c~ c= f0 f1 c= cBIT1 f0 cBIT1 f1
- (x = u2') |- (((~ (_7137590 = u1)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137590)) = ((~ (_7137590 = u1)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137590)))
T c==> c= f0 f1 c= c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f4 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f2 c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f4 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f2
+ (~ (u0 = u1)), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY))
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f3 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f4 cNIL c~ c= * * part cINTER * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY
+ (~ (u0 = u1)), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F))))
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f3 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f4 cNIL c==> c= ccc_ke f2 cCONS f0 cCONS f1 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS f1 cCONS f0 cCONS f3 cNIL c==> c~ c/\ c? / cleaf b0 cCONS f1 cCONS f0 cCONS f3 cNIL c? / cleaf b0 cCONS f0 cCONS f1 cCONS f4 cNIL cF
- (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))) |- (((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v)
T c==> c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f4 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f5 c~ c= f4 f5 c\/ c/\ c= f1 f4 c= f2 f5 c/\ c= f1 f5 c= f2 f4 cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f5
+ |- ((a = T) ==> (((a /\ (b /\ (~ c))) ==> d) = ((a /\ b) ==> (c \/ d))))
T c==> c= f0 cT c= c==> c/\ f0 c/\ f1 c~ f2 f3 c==> c/\ f0 f1 c\/ f2 f3
- (_7137335 = _7137338), (_7137337 = _7137340) |- ((_7137335 = _7137338) /\ ((~ (_7137336 = _7137339)) \/ ((((VX _7137338) _7137339) _7137340) \/ (~ (((VX _7137335) _7137336) _7137337)))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ c~ c= f4 f5 c\/ cVX f1 f5 f3 c~ cVX f0 f4 f2
+ |- (((\x. ((\v. (v = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) x)) (stem ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) = ((\v. (v = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) (stem ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))
T c= * / * / c= b1 * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL b0 * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL * / c= b0 * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL
- (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))), (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)), (x = u0) |- ((~ F) ==> F)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f0 c==> c~ cF cF
- |- (((!u2. (!u1. (!u0. ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F)))) ==> ((\u2. (!u1. (!u0. ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F)))) u2)) = ((\u2. (!u1. (!u0. ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F)))) u2))
T c= c==> ! ! ! c==> c~ ! c= c\/ c\/ c= b3 b2 c= b3 b1 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 cF * / ! ! c==> c~ ! c= c\/ c\/ c= b3 b2 c= b3 b1 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 cF f0 * / ! ! c==> c~ ! c= c\/ c\/ c= b3 b2 c= b3 b1 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 cF f0
+ (x = u2') |- ((~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)) = (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2')))
T c==> c= f0 f1 c= c~ chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c~ chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1
+ |- ((u0 INSERT (u1 INSERT (u2 INSERT EMPTY))) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))
T cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- ((u0 = v) /\ (u1 = u)) |- ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) = (((VX V) ((cc_cell V) ((CONS u0) ((CONS u) ((CONS u2) NIL))))) u))
T c==> c/\ c= f0 f1 c= f2 f3 c= cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f2 cCONS f5 cNIL f3 cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS f5 cNIL f3
+ (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) |- (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u1)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1
+ |- ((!x. ((x IN (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) ==> (x IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))))) ==> ((u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) ==> (!x. ((x IN (u0 INSERT (u1 INSERT (u2' INSERT (u2 INSERT EMPTY))))) ==> (x IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))))))
T c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (u0 = u1)), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) INTER ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) = EMPTY)) ==> (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY))) = EMPTY))))
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f4 cNIL c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f3 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL part cEMPTY c~ c= * * part cINTER * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY part cEMPTY
+ |- (((!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul))))) ==> ((\ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul))))) ul)) = ((\ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul))))) ul))
T c= c==> ! c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 b0 cIN * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 b0 * / c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 b0 cIN * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 b0 f1 * / c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 b0 cIN * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 b0 f1
+ |- ((\c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))) c)
T * / c==> c==> f0 c= f1 b0 ! c==> c/\ f0 * b1 b0 * b1 f1 f2
+ |- ((\ul. (((leaf V) ul) ==> ((stem ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))))) ul)
T * / c==> cleaf f0 b0 c= * part cstem b0 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY f1
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((((EL (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((u2 = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- F
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f1 cCONS f3 cNIL cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c= f3 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f4 cNIL c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f1 cCONS f3 cNIL cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL cF
+ (u0 = u1), ((u0 = v) /\ (u1 = u)), (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))) |- (((u0 = v) /\ (u1 = u)) /\ F)
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c==> c/\ c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f5 cNIL f3 c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f5 cNIL f2 c~ c= f3 f2 c\/ c/\ c= f0 f3 c= f1 f2 c/\ c= f0 f2 c= f1 f3 c/\ c/\ c= f0 f2 c= f1 f3 cF
+ |- ((\y. (((\x. ((\v. ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = v))) x)) y) = ((\v. ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = v))) y))) (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))
T * / c= * / * / c/\ c? / cleaf b3 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY b2 b1 b0 * / c/\ c? / cleaf b2 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY b1 b0 * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL
+ ((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))) |- ((x = u1) ==> F)
T c==> c/\ c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f2 cF
+ |- (((!u0. (!u2. (!V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F)))))))))))))) ==> ((\u0. (!u2. (!V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F)))))))))))))) u0)) = ((\u0. (!u2. (!V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F)))))))))))))) u0))
T c= c==> ! ! ! c==> csaturated b2 c==> cpacking b2 c==> c= * * part caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cleaf b2 cCONS b0 cCONS f0 cCONS b1 cNIL c==> cleaf b2 cCONS b0 cCONS f0 cCONS f1 cNIL c==> c~ c= b0 f0 c==> c/\ cleaf b2 cCONS f0 cCONS b0 cCONS b1 cNIL c= * part cstem cCONS b0 cCONS f0 cCONS b1 cNIL * part cstem cCONS f0 cCONS b0 cCONS b1 cNIL c==> c= ccc_ke b2 cCONS b0 cCONS f0 cCONS f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b1 f1 c==> c= * * part ccc_cell b2 cCONS b0 cCONS f0 cCONS f1 cNIL * * part ccc_cell b2 cCONS b0 cCONS f0 cCONS b1 cNIL c==> c~ c/\ c? / cleaf b3 cCONS f0 cCONS b0 cCONS b1 cNIL c? / cleaf b3 cCONS b0 cCONS f0 cCONS f1 cNIL cF * / ! ! c==> csaturated b2 c==> cpacking b2 c==> c= * * part caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cleaf b2 cCONS b0 cCONS f0 cCONS b1 cNIL c==> cleaf b2 cCONS b0 cCONS f0 cCONS f1 cNIL c==> c~ c= b0 f0 c==> c/\ cleaf b2 cCONS f0 cCONS b0 cCONS b1 cNIL c= * part cstem cCONS b0 cCONS f0 cCONS b1 cNIL * part cstem cCONS f0 cCONS b0 cCONS b1 cNIL c==> c= ccc_ke b2 cCONS b0 cCONS f0 cCONS f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b1 f1 c==> c= * * part ccc_cell b2 cCONS b0 cCONS f0 cCONS f1 cNIL * * part ccc_cell b2 cCONS b0 cCONS f0 cCONS b1 cNIL c==> c~ c/\ c? / cleaf b3 cCONS f0 cCONS b0 cCONS b1 cNIL c? / cleaf b3 cCONS b0 cCONS f0 cCONS f1 cNIL cF f2 * / ! ! c==> csaturated b2 c==> cpacking b2 c==> c= * * part caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cleaf b2 cCONS b0 cCONS f0 cCONS b1 cNIL c==> cleaf b2 cCONS b0 cCONS f0 cCONS f1 cNIL c==> c~ c= b0 f0 c==> c/\ cleaf b2 cCONS f0 cCONS b0 cCONS b1 cNIL c= * part cstem cCONS b0 cCONS f0 cCONS b1 cNIL * part cstem cCONS f0 cCONS b0 cCONS b1 cNIL c==> c= ccc_ke b2 cCONS b0 cCONS f0 cCONS f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b1 f1 c==> c= * * part ccc_cell b2 cCONS b0 cCONS f0 cCONS f1 cNIL * * part ccc_cell b2 cCONS b0 cCONS f0 cCONS b1 cNIL c==> c~ c/\ c? / cleaf b3 cCONS f0 cCONS b0 cCONS b1 cNIL c? / cleaf b3 cCONS b0 cCONS f0 cCONS f1 cNIL cF f2
+ (P c), (b = c) |- (P b)
T c==> * f0 f1 c==> c= f2 f1 * f0 f2
- ((u0 = v) /\ (u1 = u)), (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))) |- (((VX V) ((cc_cell V) ((CONS v) ((CONS u) ((CONS u2) NIL))))) u)
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f2 cCONS f5 cNIL f3 c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f2 cCONS f5 cNIL f1 c~ c= f3 f1 c\/ c/\ c= f0 f3 c= f2 f1 c/\ c= f0 f1 c= f2 f3 cVX f4 * * part ccc_cell f4 cCONS f1 cCONS f3 cCONS f5 cNIL f3
+ (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL
+ |- ((!u2'. (((saturated V) /\ ((packing V) /\ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))) ==> (u2 = u2'))) = T)
T c= ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS b0 cNIL c= f3 b0 cT
+ |- ((\P. (!ul. (((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) ==> (P (stem ul))))) P)
T * / ! c==> c/\ c? / cleaf b2 b1 * b0 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * b0 * part cstem b1 f0
+ |- (((!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ ((((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT EMPTY))) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> (ul = vl)))) ==> ((\ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ ((((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT EMPTY))) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> (ul = vl)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) = ((\ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ ((((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT EMPTY))) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> (ul = vl)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))
T c= c==> ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 b0 c/\ cleaf f0 b1 c/\ c= ccc_ke f0 b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY c= * * part ccc_cell f0 b0 * * part ccc_cell f0 b1 c= b0 b1 * / ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 b0 c/\ cleaf f0 b1 c/\ c= ccc_ke f0 b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY c= * * part ccc_cell f0 b0 * * part ccc_cell f0 b1 c= b0 b1 cCONS f1 cCONS f2 cCONS f3 cNIL * / ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 b0 c/\ cleaf f0 b1 c/\ c= ccc_ke f0 b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY c= * * part ccc_cell f0 b0 * * part ccc_cell f0 b1 c= b0 b1 cCONS f1 cCONS f2 cCONS f3 cNIL
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ |- (T = (((F /\ (~ c)) ==> d) = (F ==> (c \/ d))))
T c= cT c= c==> c/\ cF c~ f0 f1 c==> cF c\/ f0 f1
- (_7137335 = _7137338), (_7137336 = _7137339), (_7137337 = _7137340) |- ((((((VX _7137335) _7137336) _7137337) = (((VX _7137338) _7137339) _7137340)) ==> ((((VX _7137338) _7137339) _7137340) \/ (~ (((VX _7137335) _7137336) _7137337)))) = ((((VX _7137338) _7137339) _7137340) \/ (~ (((VX _7137335) _7137336) _7137337))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c= c==> c= cVX f0 f2 f4 cVX f1 f3 f5 c\/ cVX f1 f3 f5 c~ cVX f0 f2 f4 c\/ cVX f1 f3 f5 c~ cVX f0 f2 f4
+ |- (((T /\ (~ c)) ==> d) = (T ==> (c \/ d)))
T c= c==> c/\ cT c~ f0 f1 c==> cT c\/ f0 f1
+ (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((u2 = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- F
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= f3 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f4 cNIL c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f1 cCONS f3 cNIL cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL cF
+ (c = F) |- ((c = F) /\ (((~ c) ==> d) = (c \/ d)))
T c==> c= f0 cF c/\ c= f0 cF c= c==> c~ f0 f1 c\/ f0 f1
+ |- (((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1))) = (((u0 INSERT (u1 INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))) ==> (~ (u0 = u1))))
T c= c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c~ c= f1 f2
- (_7137360 = _7137363), (_7137361 = _7137364), (_7137362 = _7137365) |- ((((((cc_cell _7137360) _7137361) _7137362) = (((cc_cell _7137363) _7137364) _7137365)) ==> ((((cc_cell _7137363) _7137364) _7137365) \/ (~ (((cc_cell _7137360) _7137361) _7137362)))) = ((((cc_cell _7137363) _7137364) _7137365) \/ (~ (((cc_cell _7137360) _7137361) _7137362))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c= c==> c= ccc_cell f0 f2 f4 ccc_cell f1 f3 f5 c\/ ccc_cell f1 f3 f5 c~ ccc_cell f0 f2 f4 c\/ ccc_cell f1 f3 f5 c~ ccc_cell f0 f2 f4
+ |- (((b = c) ==> (!P. ((P c) ==> (P b)))) = T)
T c= c==> c= f0 f1 ! c==> * b0 f1 * b0 f0 cT
+ ((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) |- (((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) /\ F)
T c==> c/\ c\/ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ c/\ c\/ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 cF
+ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) |- ((u0 INSERT (u1 INSERT (u2' INSERT (u2 INSERT EMPTY)))) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))
T c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (!ul. (!P. (((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) ==> (P (stem ul))))) |- (!ul. (((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) ==> (P (stem ul))))
T c==> ! ! c==> c/\ c? / cleaf b2 b0 * b1 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * b1 * part cstem b0 ! c==> c/\ c? / cleaf b1 b0 * f0 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * f0 * part cstem b0
+ (!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))), (~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) |- ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) /\ (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x))))))
T c==> ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL b0 c/\ c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL b0 c~ ! c~ c/\ ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0
- |- ((_7137542 = _7137544) ==> ((~ (_7137543 = _7137545)) \/ (((leaf _7137544) _7137545) \/ (~ ((leaf _7137542) _7137543)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cleaf f1 f3 c~ cleaf f0 f2
+ |- (((((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))))))))) ==> (((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL)))))) ==> F) = F)
T c= c==> c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f4 cNIL c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f4 cNIL c/\ c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f4 cNIL c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= cCONS f1 cCONS f2 cCONS f3 cNIL cCONS f2 cCONS f1 cCONS f4 cNIL c= ccc_uh f0 cCONS f2 cCONS f1 cCONS f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL cF cF
- |- (((!u2. (!u1. (!u0. (!u2'. (!V. ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F)))))) ==> ((\u2. (!u1. (!u0. (!u2'. (!V. ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F)))))) u2)) = ((\u2. (!u1. (!u0. (!u2'. (!V. ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F)))))) u2))
T c= c==> ! ! ! ! ! c==> c~ c==> csaturated b4 c==> cpacking b4 c==> ! c= caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b5 caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 part cEMPTY b5 c==> cleaf b4 cCONS b2 cCONS b1 cCONS b0 cNIL c==> cleaf b4 cCONS b2 cCONS b1 cCONS b3 cNIL c==> c~ c= b2 b1 c==> c/\ cleaf b4 cCONS b1 cCONS b2 cCONS b0 cNIL ! c= cstem cCONS b2 cCONS b1 cCONS b0 cNIL b5 cstem cCONS b1 cCONS b2 cCONS b0 cNIL b5 c==> c~ ! c~ c/\ caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 part cEMPTY b5 ccc_cell b4 cCONS b2 cCONS b1 cCONS b3 cNIL b5 c~ ! c~ c/\ ccc_cell b4 cCONS b2 cCONS b1 cCONS b3 cNIL b5 caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b5 cF * / ! ! ! ! c==> c~ c==> csaturated b4 c==> cpacking b4 c==> ! c= caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b5 caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 part cEMPTY b5 c==> cleaf b4 cCONS b2 cCONS b1 cCONS b0 cNIL c==> cleaf b4 cCONS b2 cCONS b1 cCONS b3 cNIL c==> c~ c= b2 b1 c==> c/\ cleaf b4 cCONS b1 cCONS b2 cCONS b0 cNIL ! c= cstem cCONS b2 cCONS b1 cCONS b0 cNIL b5 cstem cCONS b1 cCONS b2 cCONS b0 cNIL b5 c==> c~ ! c~ c/\ caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 part cEMPTY b5 ccc_cell b4 cCONS b2 cCONS b1 cCONS b3 cNIL b5 c~ ! c~ c/\ ccc_cell b4 cCONS b2 cCONS b1 cCONS b3 cNIL b5 caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b5 cF f0 * / ! ! ! ! c==> c~ c==> csaturated b4 c==> cpacking b4 c==> ! c= caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b5 caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 part cEMPTY b5 c==> cleaf b4 cCONS b2 cCONS b1 cCONS b0 cNIL c==> cleaf b4 cCONS b2 cCONS b1 cCONS b3 cNIL c==> c~ c= b2 b1 c==> c/\ cleaf b4 cCONS b1 cCONS b2 cCONS b0 cNIL ! c= cstem cCONS b2 cCONS b1 cCONS b0 cNIL b5 cstem cCONS b1 cCONS b2 cCONS b0 cNIL b5 c==> c~ ! c~ c/\ caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 part cEMPTY b5 ccc_cell b4 cCONS b2 cCONS b1 cCONS b3 cNIL b5 c~ ! c~ c/\ ccc_cell b4 cCONS b2 cCONS b1 cCONS b3 cNIL b5 caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b5 cF f0
- (x = u2') |- (((~ (_7137590 = u2)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137590)) = ((~ (_7137590 = u2)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137590)))
T c==> c= f0 f1 c= c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f2 c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f2
+ (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) |- (((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2) ==> F) = F)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 cF cF
+ |- (((!s. (s SUBSET ((hull P) s))) ==> ((\s. (s SUBSET ((hull P) s))) s)) = ((\s. (s SUBSET ((hull P) s))) s))
T c= c==> ! cSUBSET b0 * * part chull f0 b0 * / cSUBSET b0 * * part chull f0 b0 f1 * / cSUBSET b0 * * part chull f0 b0 f1
+ |- (((F /\ (~ c)) ==> d) = (F ==> (c \/ d)))
T c= c==> c/\ cF c~ f0 f1 c==> cF c\/ f0 f1
+ (A = F) |- ((((A ==> B) /\ A) ==> B) = (((F ==> B) /\ F) ==> B))
T c==> c= f0 cF c= c==> c/\ c==> f0 f1 f0 f1 c==> c/\ c==> cF f1 cF f1
+ (?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))), (u0 = u1) |- ((u0 = u1) /\ F)
T c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c==> c= f1 f2 c/\ c= f1 f2 cF
+ (!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) |- ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))
T c==> ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL ! c= cstem cCONS f0 cCONS f1 cCONS f2 cNIL b0 cstem cCONS f1 cCONS f0 cCONS f2 cNIL b0 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL b0 c~ ! c~ c/\ ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0
- |- ((\u2'. ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F)) u2')
T * / c==> c~ c==> ! c==> c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b1 f0 c\/ c= b1 f1 c\/ c= b1 b0 c= b1 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cF f3
- |- ((!x'. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x') \/ (~ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) = ((!x. ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x)) \/ (~ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x))))
T c= ! c\/ cstem cCONS f0 cCONS f1 cCONS f2 cNIL b0 c~ cstem cCONS f1 cCONS f0 cCONS f2 cNIL f3 c\/ ! cstem cCONS f0 cCONS f1 cCONS f2 cNIL b0 c~ cstem cCONS f1 cCONS f0 cCONS f2 cNIL f3
+ |- ((!u1. (!u2. (!u2'. (((saturated V) /\ ((packing V) /\ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))) ==> (u2 = u2'))))) = T)
T c= ! ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c= * * part caff_gt * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cleaf f0 cCONS f1 cCONS b0 cCONS b1 cNIL cleaf f0 cCONS f1 cCONS b0 cCONS b2 cNIL c= b1 b2 cT
+ |- ((((((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL)))))) ==> ((u2 = u2') = q')) ==> ((((((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL)))))) ==> (u2 = u2')) = (((((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL)))))) ==> q')))
T c==> c==> c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cNIL c= c= f2 f4 f5 c= c==> c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cNIL c= f2 f4 c==> c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cNIL f5
- |- ((!u2'. (!V. ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x))))))))))))))) = T)
T c= ! ! c==> csaturated b1 c==> cpacking b1 c==> ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b2 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY b2 c==> cleaf b1 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf b1 cCONS f0 cCONS f1 cCONS b0 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf b1 cCONS f1 cCONS f0 cCONS f2 cNIL ! c= cstem cCONS f0 cCONS f1 cCONS f2 cNIL b2 cstem cCONS f1 cCONS f0 cCONS f2 cNIL b2 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY b2 ccc_cell b1 cCONS f0 cCONS f1 cCONS b0 cNIL b2 c~ ! c~ c/\ ccc_cell b1 cCONS f0 cCONS f1 cCONS b0 cNIL b2 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b2 cT
- (x = u2), ((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c\/ c= f0 f2 c= f0 f3 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c==> c~ cF cF
+ ((u0 INSERT (u1 INSERT (u2 INSERT EMPTY))) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) |- ((u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) ==> ((u0 INSERT (u1 INSERT (u2' INSERT (u2 INSERT EMPTY)))) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))))
T c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x)) |- ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x)) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))
T c==> c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3 ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL f3 c==> c~ ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL f3 ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL f3
+ |- ((!u2. (!V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))))))))))))) = T)
T c= ! ! c==> csaturated b1 c==> cpacking b1 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cleaf b1 cCONS f0 cCONS f1 cCONS b0 cNIL c==> cleaf b1 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf b1 cCONS f1 cCONS f0 cCONS b0 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS b0 cNIL * part cstem cCONS f1 cCONS f0 cCONS b0 cNIL c==> c= ccc_ke b1 cCONS f0 cCONS f1 cCONS f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b0 f2 c==> c= * * part ccc_cell b1 cCONS f0 cCONS f1 cCONS f2 cNIL * * part ccc_cell b1 cCONS f0 cCONS f1 cCONS b0 cNIL c/\ c? / cleaf b2 cCONS f1 cCONS f0 cCONS b0 cNIL c? / cleaf b2 cCONS f0 cCONS f1 cCONS f2 cNIL cT
+ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x)) |- (((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) ==> (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x))
T c==> c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3 ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL f3 c= c==> caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY f3 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY f3
+ (!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) |- ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) \/ (~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x)))) /\ (!x. ((~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)) \/ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))))
T c==> ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ ! c\/ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c\/ c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0
- (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) |- (((~ (EMPTY = (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))))) ==> ((EMPTY = (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))) = F)) = ((EMPTY = (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))) = F))
T c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c= c==> c~ c= part cEMPTY * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL c= c= part cEMPTY * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL cF c= c= part cEMPTY * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL cF
+ |- ((\ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V)))) ul)
T * / c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 b0 cIN * * part ccc_cell f0 b0 * part cmcell_set f0 f1
- ((u0 = v) /\ (u1 = u)), (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))) |- (((VX V) ((cc_cell V) ((CONS u0) ((CONS u) ((CONS u2) NIL))))) u)
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f2 cCONS f5 cNIL f3 c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f2 cCONS f5 cNIL f1 c~ c= f3 f1 c\/ c/\ c= f0 f3 c= f2 f1 c/\ c= f0 f1 c= f2 f3 cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS f5 cNIL f3
- |- (((((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F) ==> ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F)) ==> (((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F) ==> ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F))) = (((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F) ==> ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F)))
T c= c==> c==> c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF
- |- ((~ (_7137362 = _7137365)) \/ ((~ (_7137360 = _7137363)) \/ ((~ (_7137361 = _7137364)) \/ ((((cc_cell _7137363) _7137364) _7137365) \/ (~ (((cc_cell _7137360) _7137361) _7137362))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ ccc_cell f3 f5 f1 c~ ccc_cell f2 f4 f0
+ (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) |- (!x. (((~ (x = u0)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)) /\ (((~ (x = u1)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)) /\ ((~ (x = u2)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ c\/ c~ c= b0 f0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c\/ c~ c= b0 f1 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ c~ c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0
+ |- (T = (((F /\ (b /\ (~ c))) ==> d) = ((F /\ b) ==> (c \/ d))))
T c= cT c= c==> c/\ cF c/\ f0 c~ f1 f2 c==> c/\ cF f0 c\/ f1 f2
- (_7137548 = _7137549) |- ((((saturated _7137548) = (saturated _7137549)) ==> ((saturated _7137549) \/ (~ (saturated _7137548)))) = ((saturated _7137549) \/ (~ (saturated _7137548))))
T c==> c= f0 f1 c= c==> c= csaturated f0 csaturated f1 c\/ csaturated f1 c~ csaturated f0 c\/ csaturated f1 c~ csaturated f0
+ |- ((((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) \/ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> (u2 = u2')) = (((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) \/ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL)))))) ==> (u2 = u2')))
T c= c==> c\/ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f4 cNIL c= f4 f3 c==> c\/ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f4 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f4 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f4 cNIL cNIL c= f4 f3
+ |- ((t \/ T) = T)
T c= c\/ f0 cT cT
+ (u0 = u1), ((u0 = v) /\ (u1 = u)) |- (v = u)
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c= f2 f3
+ ((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) |- ((x = u2) ==> F)
T c==> c/\ c\/ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c==> c= f0 f3 cF
+ (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) |- ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) ==> F) = F)
T c==> c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL c= c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL cF cF
+ |- (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) SUBSET ((hull affine) ((u0 INSERT (u1 INSERT EMPTY)) UNION (u2 INSERT EMPTY))))
T cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cUNION * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (u2 = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((packing V) /\ ((saturated V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ ((((COND (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) = u2)))) ==> (~ (coplanar (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (u2 INSERT EMPTY))))))) ==> F)
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= f3 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c= cCOND c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f4 cNIL cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f4 cNIL f3 c~ ccoplanar * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part cINSERT f3 part cEMPTY cF
+ |- (((!V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F)))))))))))) ==> ((\V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F)))))))))))) V)) = ((\V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F)))))))))))) V))
T c= c==> ! c==> csaturated b0 c==> cpacking b0 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_ke b0 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f2 f3 c==> c= * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c~ c/\ c? / cleaf b1 cCONS f1 cCONS f0 cCONS f2 cNIL c? / cleaf b1 cCONS f0 cCONS f1 cCONS f3 cNIL cF * / c==> csaturated b0 c==> cpacking b0 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_ke b0 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f2 f3 c==> c= * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c~ c/\ c? / cleaf b1 cCONS f1 cCONS f0 cCONS f2 cNIL c? / cleaf b1 cCONS f0 cCONS f1 cCONS f3 cNIL cF f4 * / c==> csaturated b0 c==> cpacking b0 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_ke b0 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f2 f3 c==> c= * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c~ c/\ c? / cleaf b1 cCONS f1 cCONS f0 cCONS f2 cNIL c? / cleaf b1 cCONS f0 cCONS f1 cCONS f3 cNIL cF f4
- (_7137671 = _7137674), (_7137672 = _7137675) |- ((_7137671 = _7137674) /\ ((~ (_7137670 = _7137673)) \/ ((((hull _7137673) _7137674) _7137675) \/ (~ (((hull _7137670) _7137671) _7137672)))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ c~ c= f4 f5 c\/ chull f5 f1 f3 c~ chull f4 f0 f2
- |- ((!x'. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) \/ (~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x')))) = ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) \/ (!x. (~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x)))))
T c= ! c\/ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3 c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3 ! c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY b0
+ (~ (u0 = u1)), (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) |- ((((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL))))) ==> F)
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c= ccc_uh f2 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f4 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f4 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f0 cCONS f1 cCONS f4 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f4 cNIL cNIL cF
- (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) |- (((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) = F)) = ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) = F))
T c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c= c==> c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c= c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL cF c= c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL cF
- (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))), (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u0)) |- ((~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u0)) /\ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u0))
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 c/\ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0
+ (x = u0) |- ((~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)) = (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u0)))
T c==> c= f0 f1 c= c~ chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1
+ (~ (u0 = u1)), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) \/ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (u2 = u2')
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= ccc_ke f2 cCONS f0 cCONS f1 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f3 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL c==> c\/ c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS f1 cCONS f0 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f4 cNIL c= f3 f4
- |- ((!x'. ((~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x')) \/ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) = ((!x. (~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x))) \/ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x)))
T c= ! c\/ c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c\/ ! c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY f4
+ (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((\x. ((\v. (v = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) x)) (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY))))
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c/\ c? / cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL * / * / c= b1 * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL b0 * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY
- (!V. (~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))), (~ F), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((~ F) /\ F)
T c==> ! c~ cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c~ cF c==> cleaf f3 cCONS f0 cCONS f1 cCONS f2 cNIL c/\ c~ cF cF
+ (!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))
T c==> ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c/\ cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL ! c= cstem cCONS f0 cCONS f1 cCONS f2 cNIL b0 cstem cCONS f1 cCONS f0 cCONS f2 cNIL b0 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL b0 c~ ! c~ c/\ ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0
- |- (((!u2. (!V. ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F))) ==> ((\u2. (!V. ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F))) u2)) = ((\u2. (!V. ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F))) u2))
T c= c==> ! ! c==> c~ c==> c? / c? / c/\ c/\ cVX b1 * * part ccc_cell b1 cCONS f0 cCONS f1 cCONS b0 cNIL b2 c/\ cVX b1 * * part ccc_cell b1 cCONS f0 cCONS f1 cCONS b0 cNIL b3 c~ c= b2 b3 c\/ c/\ c= f0 b2 c= f1 b3 c/\ c= f0 b3 c= f1 b2 c~ c= f0 f1 cF * / ! c==> c~ c==> c? / c? / c/\ c/\ cVX b1 * * part ccc_cell b1 cCONS f0 cCONS f1 cCONS b0 cNIL b2 c/\ cVX b1 * * part ccc_cell b1 cCONS f0 cCONS f1 cCONS b0 cNIL b3 c~ c= b2 b3 c\/ c/\ c= f0 b2 c= f1 b3 c/\ c= f0 b3 c= f1 b2 c~ c= f0 f1 cF f2 * / ! c==> c~ c==> c? / c? / c/\ c/\ cVX b1 * * part ccc_cell b1 cCONS f0 cCONS f1 cCONS b0 cNIL b2 c/\ cVX b1 * * part ccc_cell b1 cCONS f0 cCONS f1 cCONS b0 cNIL b3 c~ c= b2 b3 c\/ c/\ c= f0 b2 c= f1 b3 c/\ c= f0 b3 c= f1 b2 c~ c= f0 f1 cF f2
- ((u0 = v) /\ (u1 = u)) |- ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) = (((VX V) ((cc_cell V) ((CONS u0) ((CONS u) ((CONS u2) NIL))))) v))
T c==> c/\ c= f0 f1 c= f2 f3 c= cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f2 cCONS f5 cNIL f1 cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS f5 cNIL f1
+ |- ((b = T) ==> (((b /\ (~ c)) ==> d) = (b ==> (c \/ d))))
T c==> c= f0 cT c= c==> c/\ f0 c~ f1 f2 c==> f0 c\/ f1 f2
+ |- ((~ (((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) /\ (((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (u2' = u2))))))))) ==> (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL))))))) = ((((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) /\ (((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))))))) ==> (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL)))))) ==> F))
T c= c~ c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= f3 f4 c= ccc_uh f0 cCONS f1 cCONS f2 cCONS f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL c==> c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= cCONS f1 cCONS f2 cCONS f3 cNIL cCONS f1 cCONS f2 cCONS f4 cNIL c= ccc_uh f0 cCONS f1 cCONS f2 cCONS f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL cF
+ (!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) |- ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) _7137354) \/ (~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) _7137354)))
T c==> ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4 c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY f4
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul)))))) |- ((\V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul)))))) V)
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 cIN * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * * part cedgeX b0 * * part ccc_cell b0 b1 * / ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 cIN * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * * part cedgeX b0 * * part ccc_cell b0 b1 f0
- (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) |- ((!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) \/ (~ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) /\ (!x. ((~ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x)) \/ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x))))
T c==> c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL ! c= cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ ! c\/ cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 c~ cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 ! c\/ c~ cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0
- |- ((?V. (P V)) = ((P T) \/ (P F)))
T c= c? / * f0 b0 c\/ * f0 cT * f0 cF
+ |- (((!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul))))) ==> ((\ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul))))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = ((\ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul))))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))
T c= c==> ! c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 b0 cIN * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 b0 * / c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 b0 cIN * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 b0 cCONS f1 cCONS f2 cCONS f3 cNIL * / c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 b0 cIN * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 b0 cCONS f1 cCONS f2 cCONS f3 cNIL
+ |- (((!h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2)))))) ==> ((\h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2)))))) h2)) = ((\h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2)))))) h2))
T c= c==> ! ! ! c= c= cCONS f0 b1 cCONS b0 b2 c/\ c= f0 b0 c= b1 b2 * / ! ! c= c= cCONS f0 b1 cCONS b0 b2 c/\ c= f0 b0 c= b1 b2 f1 * / ! ! c= c= cCONS f0 b1 cCONS b0 b2 c/\ c= f0 b0 c= b1 b2 f1
+ |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) = F)
T c= c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF
- |- ((((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F) ==> ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F)) = ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F))
T c= c==> c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF
+ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) |- ((\v. (?w. ((u0 INSERT (u1 INSERT (u2' INSERT (u2 INSERT EMPTY)))) SUBSET ((hull affine) (u0 INSERT (v INSERT (w INSERT EMPTY))))))) u1)
T c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * / c? / cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1
+ |- (((~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) INTER ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) = EMPTY)) ==> (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY))) = EMPTY))) = ((~ ((((aff_gt (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY))) (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) INTER ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) = EMPTY)) ==> (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER ((aff_gt (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY))) (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY))) = EMPTY))))
T c= c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY part cEMPTY c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL * * part caff_gt * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f4 cNIL part cEMPTY * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f4 cNIL part cEMPTY part cEMPTY
+ (packing V) |- ((packing V) /\ ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x))))))))))))
T c==> cpacking f0 c/\ cpacking f0 c==> ! c= caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL ! c= cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 c~ ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0
+ (!ul. (!P. (((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) ==> (P (stem ul))))) |- ((\P. (((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) ==> (P (stem ul)))) P)
T c==> ! ! c==> c/\ c? / cleaf b2 b0 * b1 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * b1 * part cstem b0 * / c==> c/\ c? / cleaf b1 f0 * b0 * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 part cEMPTY * b0 * part cstem f0 f1
+ (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) \/ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((~ (u2 = u2')) /\ F)
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> c\/ c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c/\ c~ c= f2 f3 cF
+ |- (((!ul. ((cc_A0 ul) = ((aff_gt (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))) (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY)))) ==> ((\ul. ((cc_A0 ul) = ((aff_gt (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))) (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY)))) ul)) = ((\ul. ((cc_A0 ul) = ((aff_gt (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))) (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY)))) ul))
T c= c==> ! c= * part ccc_A0 b0 * * part caff_gt * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 part cEMPTY * / c= * part ccc_A0 b0 * * part caff_gt * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 part cEMPTY f0 * / c= * part ccc_A0 b0 * * part caff_gt * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 part cEMPTY f0
+ (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) |- (u2 = u2')
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c/\ c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c= f3 f4
+ |- (((!h1. (!h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2))))))) ==> ((\h1. (!h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2))))))) h1)) = ((\h1. (!h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2))))))) h1))
T c= c==> ! ! ! ! c= c= cCONS b0 b2 cCONS b1 b3 c/\ c= b0 b1 c= b2 b3 * / ! ! ! c= c= cCONS b0 b2 cCONS b1 b3 c/\ c= b0 b1 c= b2 b3 f0 * / ! ! ! c= c= cCONS b0 b2 cCONS b1 b3 c/\ c= b0 b1 c= b2 b3 f0
- |- (((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0))) /\ ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0)))))
T c/\ c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0 c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
+ (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)), (x = u0) |- (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u0))
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f0 c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0
+ (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))), (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)) |- ((x = u0) ==> F)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f0 cF
+ (u0 = u1), ((u0 = v) /\ (u1 = u)), (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))) |- ((u = u) ==> F)
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c==> c/\ c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f5 cNIL f3 c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f5 cNIL f2 c~ c= f3 f2 c\/ c/\ c= f0 f3 c= f1 f2 c/\ c= f0 f2 c= f1 f3 c==> c= f3 f3 cF
+ |- ((\vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) vl) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT EMPTY))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) vl)))))))) ==> (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = vl))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))
T * / c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 b0 c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 b0 c= cCONS f1 cCONS f2 cCONS f3 cNIL b0 cCONS f1 cCONS f2 cCONS f4 cNIL
+ (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL _0)) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) NIL))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (~ (((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= ccc_uh f0 cCONS f2 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f2 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f2 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f1 cCONS f3 cNIL cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c~ c= ccc_uh f0 cCONS f2 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f4 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f4 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f4 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f4 cNIL cNIL
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> F)
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f1 cCONS f0 cCONS f2 cNIL cF
- (!V. (~ ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), (~ F), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) |- ((~ F) /\ F)
T c==> ! c~ cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c~ cF c==> c/\ cleaf f3 cCONS f0 cCONS f1 cCONS f2 cNIL c= * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL c/\ c~ cF cF
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((saturated V) /\ ((packing V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) IN (mcell_set V)) = T)) = ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) IN (mcell_set V)) = T))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= cIN * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * part cmcell_set f0 cT c= cIN * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * part cmcell_set f0 cT
- (((u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) ==> B) /\ (u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))), ((((u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) ==> B) /\ (u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))) ==> B) |- ((((u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) ==> B) /\ (u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))) /\ B)
T c==> c/\ c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c==> c/\ c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c/\ c/\ c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
+ |- (!X. (((packing V) /\ ((saturated V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((X IN (mcell_set V)) /\ (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) X)) /\ ((~ ((X INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (X = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))))))) ==> (X = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL)))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cIN f4 * part cmcell_set f0 c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cedgeX f0 f4 c/\ c~ c= * * part cINTER f4 * part ccc_A0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY c~ c= f4 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= f4 * * part ccc_cell f0 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL
+ |- (((T /\ (b /\ (~ c))) ==> d) = ((T /\ b) ==> (c \/ d)))
T c= c==> c/\ cT c/\ f0 c~ f1 f2 c==> c/\ cT f0 c\/ f1 f2
+ (u2' = u2) |- ((~ (u2 = u2')) ==> F)
T c==> c= f0 f1 c==> c~ c= f1 f0 cF
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (x = u1), ((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))) |- (~ (u1 = u0))
T c==> c= f0 f1 c==> c/\ c/\ c/\ c~ c= f0 f2 c~ c= f0 f1 c~ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c~ c= f1 f2
+ (x = u1), ((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))) |- ((x = u1) /\ F)
T c==> c= f0 f1 c==> c/\ c/\ c/\ c~ c= f0 f2 c~ c= f0 f1 c~ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c= f0 f1 cF
+ |- ((!ul. (!P. (((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) ==> (P (stem ul))))) ==> (!P. (!ul. (((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) ==> (P (stem ul))))))
T c==> ! ! c==> c/\ c? / cleaf b2 b0 * b1 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * b1 * part cstem b0 ! ! c==> c/\ c? / cleaf b2 b1 * b0 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * b0 * part cstem b1
+ ((u0 INSERT (u1 INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY))) |- (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) = ((u0 INSERT (u1 INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))
T c==> c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c= cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL
+ |- ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = v))))
T * / ! c= * / * b0 b2 b1 * b0 b1 / c/\ c? / cleaf b1 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY b0
- (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))), (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2)) |- ((~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2)) /\ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2))
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c/\ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2
+ (a = T) |- ((a = T) /\ (((a /\ (b /\ (~ c))) ==> d) = ((a /\ b) ==> (c \/ d))))
T c==> c= f0 cT c/\ c= f0 cT c= c==> c/\ f0 c/\ f1 c~ f2 f3 c==> c/\ f0 f1 c\/ f2 f3
- |- (((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = F)
T c= c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
+ |- (((!s. ((?t. ((x IN t) /\ (t SUBSET s))) ==> (x IN s))) ==> ((\s. ((?t. ((x IN t) /\ (t SUBSET s))) ==> (x IN s))) s)) = ((\s. ((?t. ((x IN t) /\ (t SUBSET s))) ==> (x IN s))) s))
T c= c==> ! c==> c? / c/\ cIN f0 b1 cSUBSET b1 b0 cIN f0 b0 * / c==> c? / c/\ cIN f0 b1 cSUBSET b1 b0 cIN f0 b0 f1 * / c==> c? / c/\ cIN f0 b1 cSUBSET b1 b0 cIN f0 b0 f1
+ |- (((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) = ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) INSERT EMPTY))))))
T c= c/\ c? / cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c? / cleaf b0 cCONS f1 cCONS f0 cCONS f3 cNIL c/\ c? / cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c/\ c? / cleaf b0 cCONS f1 cCONS f0 cCONS f3 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f0 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f0 cCONS f3 cNIL part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY
+ (~ (u2 = u2')), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((~ (u2 = u2')) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))
T c==> c~ c= f0 f1 c==> c/\ cleaf f2 cCONS f3 cCONS f4 cCONS f0 cNIL c= * part cstem cCONS f4 cCONS f3 cCONS f0 cNIL * part cstem cCONS f3 cCONS f4 cCONS f0 cNIL c==> cleaf f2 cCONS f4 cCONS f3 cCONS f1 cNIL c/\ c~ c= f0 f1 c==> c= * * part ccc_cell f2 cCONS f4 cCONS f3 cCONS f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS f0 cNIL c/\ c? / cleaf b0 cCONS f3 cCONS f4 cCONS f0 cNIL c? / cleaf b0 cCONS f4 cCONS f3 cCONS f1 cNIL
+ |- (((T ==> B) /\ T) ==> B)
T c==> c/\ c==> cT f0 cT f0
+ |- (((!X. (((packing V) /\ ((saturated V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((X IN (mcell_set V)) /\ (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) X)) /\ ((~ ((X INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (X = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))))))) ==> (X = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL))))))) ==> ((\X. (((packing V) /\ ((saturated V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((X IN (mcell_set V)) /\ (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) X)) /\ ((~ ((X INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (X = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))))))) ==> (X = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL))))))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) = ((\X. (((packing V) /\ ((saturated V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((X IN (mcell_set V)) /\ (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) X)) /\ ((~ ((X INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (X = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))))))) ==> (X = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL))))))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))
T c= c==> ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cIN b0 * part cmcell_set f0 c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cedgeX f0 b0 c/\ c~ c= * * part cINTER b0 * part ccc_A0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY c~ c= b0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= b0 * * part ccc_cell f0 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL * / c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cIN b0 * part cmcell_set f0 c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cedgeX f0 b0 c/\ c~ c= * * part cINTER b0 * part ccc_A0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY c~ c= b0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= b0 * * part ccc_cell f0 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * / c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cIN b0 * part cmcell_set f0 c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cedgeX f0 b0 c/\ c~ c= * * part cINTER b0 * part ccc_A0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY c~ c= b0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= b0 * * part ccc_cell f0 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL
+ |- (((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) ==> F)
T c==> c/\ c\/ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 cF
- |- (((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F) = (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2))))))
T c= c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2
- (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) = F)
T c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c= c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL cF
+ (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (((((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL))))) ==> F) = (((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ ((((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL))))) ==> F)))
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c= c==> c= ccc_uh f4 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f4 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL cF c/\ c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_uh f4 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f4 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL cF
+ (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)), (x = u2') |- (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2'))
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f4 c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4
- (_7137542 = _7137544), (_7137543 = _7137545) |- (((((leaf _7137542) _7137543) = ((leaf _7137544) _7137545)) ==> (((leaf _7137544) _7137545) \/ (~ ((leaf _7137542) _7137543)))) = (((leaf _7137544) _7137545) \/ (~ ((leaf _7137542) _7137543))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cleaf f0 f2 cleaf f1 f3 c\/ cleaf f1 f3 c~ cleaf f0 f2 c\/ cleaf f1 f3 c~ cleaf f0 f2
+ |- ((\vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) vl) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT EMPTY))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) vl)))))))) ==> (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = vl))) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))
T * / c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 b0 c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 b0 c= cCONS f1 cCONS f2 cCONS f3 cNIL b0 cCONS f2 cCONS f1 cCONS f4 cNIL
+ (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (~ ((((EL (NUMERAL _0)) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((u2 = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c~ c/\ c= cEL cNUMERAL c_0 cCONS f2 cCONS f1 cCONS f3 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f1 cCONS f3 cNIL cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c= f3 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f4 cNIL c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f1 cCONS f3 cNIL cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f4 cNIL
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (saturated V) |- ((saturated V) /\ ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))
T c==> csaturated f0 c/\ csaturated f0 c==> cpacking f0 c==> ! c= caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL ! c= cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 c~ ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0
- |- ((((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F)) ==> (((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F)))
T c==> c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
+ (packing V), (saturated V), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (u2 = u2')
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= f4 f3
+ |- ((\s. ((?t. ((x IN t) /\ (t SUBSET s))) ==> (x IN s))) s)
T * / c==> c? / c/\ cIN f0 b1 cSUBSET b1 b0 cIN f0 b0 f1
- |- ((((~ (~ F)) = F) ==> ((~ (~ F)) ==> F)) = ((~ (~ F)) ==> F))
T c= c==> c= c~ c~ cF cF c==> c~ c~ cF cF c==> c~ c~ cF cF
+ |- (!V. (!u0. (!u1. (!u2. (!u2'. (((saturated V) /\ ((packing V) /\ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))) ==> (u2 = u2')))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c= f3 f4
+ (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) |- (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2
+ (x = u2), ((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))) |- F
T c==> c= f0 f1 c==> c/\ c/\ c/\ c~ c= f0 f2 c~ c= f0 f3 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 cF
+ (~ (u0 = u1)), (packing V), (saturated V), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (((((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) INSERT EMPTY))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))))))))) /\ ((((CONS u0) ((CONS u1) ((CONS u2') NIL))) = ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) ==> (u2 = u2'))) ==> ((((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) INSERT EMPTY))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))))))))) ==> (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> (u2 = u2'))) = ((((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) INSERT EMPTY))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))))))))) ==> (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> (u2 = u2')))
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f2 cCONS f1 cCONS f0 cCONS f4 cNIL c==> c= ccc_ke f2 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f4 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f4 cNIL * part cstem cCONS f1 cCONS f0 cCONS f4 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c= c==> c/\ c/\ csaturated f2 c/\ cpacking f2 c/\ cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f4 cNIL c/\ c= ccc_ke f2 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f0 cCONS f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f0 cCONS f4 cNIL part cEMPTY c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f2 cCONS f1 cCONS f0 cCONS f4 cNIL c==> c= cCONS f0 cCONS f1 cCONS f3 cNIL cCONS f1 cCONS f0 cCONS f4 cNIL c= f4 f3 c==> c==> c/\ csaturated f2 c/\ cpacking f2 c/\ cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f4 cNIL c/\ c= ccc_ke f2 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f0 cCONS f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f0 cCONS f4 cNIL part cEMPTY c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f2 cCONS f1 cCONS f0 cCONS f4 cNIL c= cCONS f0 cCONS f1 cCONS f3 cNIL cCONS f1 cCONS f0 cCONS f4 cNIL c= f4 f3 c==> c==> c/\ csaturated f2 c/\ cpacking f2 c/\ cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f4 cNIL c/\ c= ccc_ke f2 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f0 cCONS f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f0 cCONS f4 cNIL part cEMPTY c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f2 cCONS f1 cCONS f0 cCONS f4 cNIL c= cCONS f0 cCONS f1 cCONS f3 cNIL cCONS f1 cCONS f0 cCONS f4 cNIL c= f4 f3
+ (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((saturated V) /\ ((packing V) /\ ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> (((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL _0)) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) NIL)))))) ==> ((((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL))))) ==> F))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= ccc_uh f0 cCONS f2 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f2 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f2 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f1 cCONS f3 cNIL cNIL c==> c= ccc_uh f0 cCONS f2 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f4 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f4 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f4 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f4 cNIL cNIL cF
- (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))), (!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))), ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x)) |- ((~ F) ==> F)
T c==> ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c==> ! c= caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f5 ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f5 c==> c~ cF cF
+ (u0 = u1), ((u0 = u) /\ (u1 = v)), (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))) |- (~ (v = v))
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c==> c/\ c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f5 cNIL f2 c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f5 cNIL f3 c~ c= f2 f3 c\/ c/\ c= f0 f2 c= f1 f3 c/\ c= f0 f3 c= f1 f2 c~ c= f3 f3
- (((u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) ==> B) /\ (u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))) |- (((((u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) ==> B) /\ (u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))) ==> B) ==> B)
T c==> c/\ c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c==> c/\ c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 f4
+ |- ((!u2. (!V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))))))))))))) = T)
T c= ! ! c==> csaturated b1 c==> cpacking b1 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cleaf b1 cCONS f0 cCONS f1 cCONS b0 cNIL c==> cleaf b1 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf b1 cCONS f1 cCONS f0 cCONS b0 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS b0 cNIL * part cstem cCONS f1 cCONS f0 cCONS b0 cNIL c==> c= ccc_ke b1 cCONS f0 cCONS f1 cCONS f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b0 f2 c==> c= * * part ccc_cell b1 cCONS f0 cCONS f1 cCONS f2 cNIL * * part ccc_cell b1 cCONS f1 cCONS f0 cCONS b0 cNIL c/\ c? / cleaf b2 cCONS f1 cCONS f0 cCONS b0 cNIL c? / cleaf b2 cCONS f0 cCONS f1 cCONS f2 cNIL cT
+ |- ((\u2'. (!u1. (!u0. (!u2. (!V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F)))))))))))))))) u2')
T * / ! ! ! ! c==> csaturated b4 c==> cpacking b4 c==> c= * * part caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 part cEMPTY * * part caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c==> cleaf b4 cCONS b2 cCONS b1 cCONS b3 cNIL c==> cleaf b4 cCONS b2 cCONS b1 cCONS b0 cNIL c==> c~ c= b2 b1 c==> c/\ cleaf b4 cCONS b1 cCONS b2 cCONS b3 cNIL c= * part cstem cCONS b2 cCONS b1 cCONS b3 cNIL * part cstem cCONS b1 cCONS b2 cCONS b3 cNIL c==> c= ccc_ke b4 cCONS b2 cCONS b1 cCONS b0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b3 b0 c==> c= * * part ccc_cell b4 cCONS b2 cCONS b1 cCONS b0 cNIL * * part ccc_cell b4 cCONS b2 cCONS b1 cCONS b3 cNIL c==> c~ c/\ c? / cleaf b5 cCONS b1 cCONS b2 cCONS b3 cNIL c? / cleaf b5 cCONS b2 cCONS b1 cCONS b0 cNIL cF f0
- (((~ ((u2' = u2) ==> (u2 = u2'))) ==> F) ==> ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F)) |- ((((~ ((u2' = u2) ==> (u2 = u2'))) ==> F) ==> ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F)) /\ (((~ ((u2' = u2) ==> (u2 = u2'))) ==> F) ==> ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F)))
T c==> c==> c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c~ c==> c= f0 f1 c= f1 f0 cF c/\ c==> c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c~ c==> c= f0 f1 c= f1 f0 cF
+ (saturated V) |- ((saturated V) /\ ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))))))))))
T c==> csaturated f0 c/\ csaturated f0 c==> cpacking f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f3 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f4 cNIL
- (u0 = u1), ((u0 = v) /\ (u1 = u)), (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c==> c/\ c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f5 cNIL f3 c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f5 cNIL f2 c~ c= f3 f2 c\/ c/\ c= f0 f3 c= f1 f2 c/\ c= f0 f2 c= f1 f3 c==> c~ cF cF
+ |- (((F ==> B) /\ F) ==> B)
T c==> c/\ c==> cF f0 cF f0
+ (~ (u0 = u1)), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) \/ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL)))))) ==> (u2 = u2'))
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f3 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f4 cNIL c==> c\/ c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL c= f3 f4
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ |- ((!x. ((x IN ((u0 INSERT (u1 INSERT EMPTY)) UNION (u2 INSERT EMPTY))) = (x IN (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))) = (((u0 INSERT (u1 INSERT EMPTY)) UNION (u2 INSERT EMPTY)) = (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))
T c= ! c= cIN b0 * * part cUNION * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part cUNION * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (~ F), (x = u2), ((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c/\ c~ c= f0 f2 c~ c= f0 f3 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ cF cF
+ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))) |- ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) _7137351)) \/ (~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) _7137351)))
T c==> ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c\/ c~ ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f5 c~ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY f5
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) |- ((~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u1)) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u1))
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1
- |- ((_7137562 = _7137563) ==> ((BIT0 _7137562) = (BIT0 _7137563)))
T c==> c= f0 f1 c= cBIT0 f0 cBIT0 f1
- (_7137360 = _7137363), (_7137361 = _7137364), (_7137362 = _7137365) |- ((_7137361 = _7137364) /\ ((((cc_cell _7137363) _7137364) _7137365) \/ (~ (((cc_cell _7137360) _7137361) _7137362))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f2 f3 c\/ ccc_cell f1 f3 f5 c~ ccc_cell f0 f2 f4
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ ((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) |- (~ (x = u0))
T c==> c/\ c\/ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c~ c= f0 f1
- |- ((!u0. (!u2'. ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))))))) = T)
T c= ! ! c==> ! c==> c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 c==> chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 ! c==> c\/ c= b2 b0 c\/ c= b2 f0 c\/ c= b2 b1 c= b2 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 cT
- (_7137366 = _7137369), (_7137367 = _7137370), (_7137368 = _7137371) |- ((_7137367 = _7137370) /\ ((((aff_gt _7137369) _7137370) _7137371) \/ (~ (((aff_gt _7137366) _7137367) _7137368))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f2 f3 c\/ caff_gt f1 f3 f5 c~ caff_gt f0 f2 f4
+ ((\x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))) x) |- ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))
T c==> * / c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL b0 f4 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4 ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL f4
+ (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) |- ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) /\ ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0
+ (c = T) |- ((c = T) /\ (((~ c) ==> d) = (c \/ d)))
T c==> c= f0 cT c/\ c= f0 cT c= c==> c~ f0 f1 c\/ f0 f1
- |- (((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) = ((\x. ((\v. (v = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) x)) (stem ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))
T c= c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL * / * / c= b1 * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL b0 * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL
+ (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)), (x = u1) |- (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u1))
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f1 c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1
+ |- (T = ((u0 INSERT (u1 INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY))))
T c= cT c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) |- (~ (u0 = u1))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c~ c= f1 f2
+ (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))), (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)), (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') |- (((x = u2') \/ (x = u2)) ==> F)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> c\/ c= f3 f4 c= f3 f2 cF
- |- ((_7137546 = _7137547) ==> ((packing _7137547) \/ (~ (packing _7137546))))
T c==> c= f0 f1 c\/ cpacking f1 c~ cpacking f0
- (((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F) ==> ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F)) |- ((((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F) ==> ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F)) /\ (((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F) ==> ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F)))
T c==> c==> c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c/\ c==> c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF
+ |- (((!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2))))) ==> ((\t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2))))) t1)) = ((\t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2))))) t1))
T c= c==> ! ! c= c= cCONS f0 b0 cCONS f1 b1 c/\ c= f0 f1 c= b0 b1 * / ! c= c= cCONS f0 b0 cCONS f1 b1 c/\ c= f0 f1 c= b0 b1 f2 * / ! c= c= cCONS f0 b0 cCONS f1 b1 c/\ c= f0 f1 c= b0 b1 f2
+ |- (((!V. (!X. (((edgeX V) X) = (GSPEC (\GEN%PVAR%5988. (?u. (?v. (((SETSPEC GEN%PVAR%5988) ((((VX V) X) u) /\ ((((VX V) X) v) /\ (~ (u = v))))) (u INSERT (v INSERT EMPTY)))))))))) ==> ((\V. (!X. (((edgeX V) X) = (GSPEC (\GEN%PVAR%5988. (?u. (?v. (((SETSPEC GEN%PVAR%5988) ((((VX V) X) u) /\ ((((VX V) X) v) /\ (~ (u = v))))) (u INSERT (v INSERT EMPTY)))))))))) V)) = ((\V. (!X. (((edgeX V) X) = (GSPEC (\GEN%PVAR%5988. (?u. (?v. (((SETSPEC GEN%PVAR%5988) ((((VX V) X) u) /\ ((((VX V) X) v) /\ (~ (u = v))))) (u INSERT (v INSERT EMPTY)))))))))) V))
T c= c==> ! ! c= * * part cedgeX b0 b1 * part cGSPEC / c? / c? / cSETSPEC b2 c/\ cVX b0 b1 b3 c/\ cVX b0 b1 b4 c~ c= b3 b4 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * / ! c= * * part cedgeX b0 b1 * part cGSPEC / c? / c? / cSETSPEC b2 c/\ cVX b0 b1 b3 c/\ cVX b0 b1 b4 c~ c= b3 b4 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f0 * / ! c= * * part cedgeX b0 b1 * part cGSPEC / c? / c? / cSETSPEC b2 c/\ cVX b0 b1 b3 c/\ cVX b0 b1 b4 c~ c= b3 b4 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f0
- |- ((!x. ((((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) \/ (~ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x))) /\ ((~ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x)) \/ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) = ((!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) \/ (~ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) /\ (!x. ((~ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x)) \/ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))))
T c= ! c/\ c\/ cstem cCONS f0 cCONS f1 cCONS f2 cNIL b0 c~ cstem cCONS f1 cCONS f0 cCONS f2 cNIL b0 c\/ c~ cstem cCONS f0 cCONS f1 cCONS f2 cNIL b0 cstem cCONS f1 cCONS f0 cCONS f2 cNIL b0 c/\ ! c\/ cstem cCONS f0 cCONS f1 cCONS f2 cNIL b0 c~ cstem cCONS f1 cCONS f0 cCONS f2 cNIL b0 ! c\/ c~ cstem cCONS f0 cCONS f1 cCONS f2 cNIL b0 cstem cCONS f1 cCONS f0 cCONS f2 cNIL b0
- |- ((!x'. ((~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)) \/ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x'))) = ((~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)) \/ (!x. (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))))
T c= ! c\/ c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c\/ c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3 ! caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY b0
- ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F), (((~ ((u2' = u2) ==> (u2 = u2'))) ==> F) ==> ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F)) |- ((((~ ((u2' = u2) ==> (u2 = u2'))) ==> F) ==> ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F)) /\ ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F))
T c==> c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c==> c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c~ c==> c= f0 f1 c= f1 f0 cF c/\ c==> c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c~ c==> c= f0 f1 c= f1 f0 cF
+ |- ((\x. (!s. ((?t. ((x IN t) /\ (t SUBSET s))) ==> (x IN s)))) x)
T * / ! c==> c? / c/\ cIN b0 b2 cSUBSET b2 b1 cIN b0 b1 f0
+ |- (T = (((~ F) ==> d) = (F \/ d)))
T c= cT c= c==> c~ cF f0 c\/ cF f0
- (b = c) |- ((P c) = (P c))
T c==> c= f0 f1 c= * f2 f1 * f2 f1
+ ((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))), ((x = u0) ==> F), (((x = u1) \/ (x = u2)) ==> F) |- F
T c==> c/\ c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c==> c= f0 f1 cF c==> c==> c\/ c= f0 f2 c= f0 f3 cF cF
+ (~ (u0 = u1)), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) /\ (u2 = u2'))
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f3 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f3 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL c= f3 f4
+ (~ ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2))))), (((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))) ==> F) |- F
T c==> c~ c= c\/ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c==> c/\ c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 cF cF
+ |- ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x))))))))))))
T c==> cpacking f0 c==> ! c= caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL ! c= cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 c~ ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0
+ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))))
T c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f4 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f4 cNIL * part cstem cCONS f2 cCONS f1 cCONS f4 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f3 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f4 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f3 cNIL
+ (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) |- ((_7137588 = u0) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137588))
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c= f3 f0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
+ |- (!t. (((\t. ((x IN t) /\ (t SUBSET s))) t) ==> ((!x. (!s. (!t. (((x IN t) /\ (t SUBSET s)) ==> (x IN s))))) ==> (x IN s))))
T c==> * / c/\ cIN f0 b0 cSUBSET b0 f1 f2 c==> ! ! ! c==> c/\ cIN b0 b2 cSUBSET b2 b1 cIN b0 b1 cIN f0 f1
+ |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- (x = u0) |- (((~ (_7137588 = u2)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137588)) = ((~ (_7137588 = u2)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137588)))
T c==> c= f0 f1 c= c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2
+ |- ((\ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul))))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))
T * / c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 b0 cIN * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 b0 cCONS f1 cCONS f2 cCONS f3 cNIL
+ (~ (u0 = u1)), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) \/ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (u2 = u2'))
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f3 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL c==> c\/ c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS f1 cCONS f0 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f4 cNIL c==> c= ccc_ke f2 cCONS f0 cCONS f1 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= f3 f4
- (~ ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) |- ((~ ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))
T c==> c~ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL c/\ c~ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL
+ |- ((u2' IN ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY))) = ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) /\ (u2' IN ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)))))
T c= cIN f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) |- (((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = F)) = ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = F))
T c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c= c==> c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c= c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL cF c= c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL cF
+ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) |- (coplanar (u0 INSERT (u1 INSERT (u2' INSERT (u2 INSERT EMPTY)))))
T c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY
+ (!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) |- ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x))))))
T c==> ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL b0 c~ ! c~ c/\ ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0
- (x = u2') |- ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') = (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2'))
T c==> c= f0 f1 c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1
+ |- ((~ (((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ ((u0 = u1) /\ ((u1 = u0) /\ (u2' = u2))))))))))) ==> (((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL))))))) = ((((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))))))))) ==> (((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL)))))) ==> F))
T c= c~ c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f4 cNIL c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f4 cNIL c/\ c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f4 cNIL c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c/\ c= f1 f2 c/\ c= f2 f1 c= f3 f4 c= ccc_uh f0 cCONS f2 cCONS f1 cCONS f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL c==> c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f4 cNIL c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f4 cNIL c/\ c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f4 cNIL c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= cCONS f1 cCONS f2 cCONS f3 cNIL cCONS f2 cCONS f1 cCONS f4 cNIL c= ccc_uh f0 cCONS f2 cCONS f1 cCONS f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL cF
+ |- ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) \/ (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c\/ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))))
T c==> c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f2 cCONS f1 cCONS f4 cNIL c==> c= ccc_ke f0 cCONS f2 cCONS f1 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f3 cNIL c/\ c? / cleaf b0 cCONS f1 cCONS f2 cCONS f3 cNIL c? / cleaf b0 cCONS f2 cCONS f1 cCONS f4 cNIL
+ |- (((!u2. (!V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F))))))))))))) ==> ((\u2. (!V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F))))))))))))) u2)) = ((\u2. (!V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F))))))))))))) u2))
T c= c==> ! ! c==> csaturated b1 c==> cpacking b1 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cleaf b1 cCONS f0 cCONS f1 cCONS b0 cNIL c==> cleaf b1 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf b1 cCONS f1 cCONS f0 cCONS b0 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS b0 cNIL * part cstem cCONS f1 cCONS f0 cCONS b0 cNIL c==> c= ccc_ke b1 cCONS f0 cCONS f1 cCONS f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b0 f2 c==> c= * * part ccc_cell b1 cCONS f0 cCONS f1 cCONS f2 cNIL * * part ccc_cell b1 cCONS f0 cCONS f1 cCONS b0 cNIL c==> c~ c/\ c? / cleaf b2 cCONS f1 cCONS f0 cCONS b0 cNIL c? / cleaf b2 cCONS f0 cCONS f1 cCONS f2 cNIL cF * / ! c==> csaturated b1 c==> cpacking b1 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cleaf b1 cCONS f0 cCONS f1 cCONS b0 cNIL c==> cleaf b1 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf b1 cCONS f1 cCONS f0 cCONS b0 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS b0 cNIL * part cstem cCONS f1 cCONS f0 cCONS b0 cNIL c==> c= ccc_ke b1 cCONS f0 cCONS f1 cCONS f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b0 f2 c==> c= * * part ccc_cell b1 cCONS f0 cCONS f1 cCONS f2 cNIL * * part ccc_cell b1 cCONS f0 cCONS f1 cCONS b0 cNIL c==> c~ c/\ c? / cleaf b2 cCONS f1 cCONS f0 cCONS b0 cNIL c? / cleaf b2 cCONS f0 cCONS f1 cCONS f2 cNIL cF f3 * / ! c==> csaturated b1 c==> cpacking b1 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cleaf b1 cCONS f0 cCONS f1 cCONS b0 cNIL c==> cleaf b1 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf b1 cCONS f1 cCONS f0 cCONS b0 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS b0 cNIL * part cstem cCONS f1 cCONS f0 cCONS b0 cNIL c==> c= ccc_ke b1 cCONS f0 cCONS f1 cCONS f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b0 f2 c==> c= * * part ccc_cell b1 cCONS f0 cCONS f1 cCONS f2 cNIL * * part ccc_cell b1 cCONS f0 cCONS f1 cCONS b0 cNIL c==> c~ c/\ c? / cleaf b2 cCONS f1 cCONS f0 cCONS b0 cNIL c? / cleaf b2 cCONS f0 cCONS f1 cCONS f2 cNIL cF f3
- |- (F ==> (~ (~ F)))
T c==> cF c~ c~ cF
- |- ((!u0. (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) = T)
T c= ! ! c= c\/ c\/ c= b1 b0 c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 cT
- (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = F)
T c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c= c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL cF
- (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) |- (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) \/ (~ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x))))
T c==> c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL ! c= cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 ! c\/ cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 c~ cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL
+ (u0 = u1), ((u0 = v) /\ (u1 = u)), (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))) |- (~ (u = u))
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c==> c/\ c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f5 cNIL f3 c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f5 cNIL f2 c~ c= f3 f2 c\/ c/\ c= f0 f3 c= f1 f2 c/\ c= f0 f2 c= f1 f3 c~ c= f3 f3
+ ((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) |- ((x = u0) ==> F)
T c==> c/\ c\/ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c==> c= f0 f1 cF
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((u0 INSERT (u1 INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL
+ (x = u1), ((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) |- ((x = u1) /\ F)
T c==> c= f0 f1 c==> c/\ c\/ c\/ c= f0 f2 c= f0 f1 c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c/\ c= f0 f1 cF
- |- (T = (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = u2))
T c= cT c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL f2
+ (!V. (~ ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) |- ((!V. (~ ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) /\ F)
T c==> ! c~ cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c/\ cleaf f3 cCONS f0 cCONS f1 cCONS f2 cNIL c= * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL c/\ ! c~ cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL cF
+ |- ((\t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2))))) t1)
T * / ! c= c= cCONS f0 b0 cCONS f1 b1 c/\ c= f0 f1 c= b0 b1 f2
+ |- (T = (u2' IN ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))))
T c= cT cIN f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 part cEMPTY
+ |- ((((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL))))) = (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL)))))))
T c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c= c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cNIL c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cNIL
+ |- (((!u0. (!u2. (!V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F)))))))))))))) ==> ((\u0. (!u2. (!V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F)))))))))))))) u0)) = ((\u0. (!u2. (!V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F)))))))))))))) u0))
T c= c==> ! ! ! c==> csaturated b2 c==> cpacking b2 c==> c= * * part caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cleaf b2 cCONS b0 cCONS f0 cCONS b1 cNIL c==> cleaf b2 cCONS b0 cCONS f0 cCONS f1 cNIL c==> c~ c= b0 f0 c==> c/\ cleaf b2 cCONS f0 cCONS b0 cCONS b1 cNIL c= * part cstem cCONS b0 cCONS f0 cCONS b1 cNIL * part cstem cCONS f0 cCONS b0 cCONS b1 cNIL c==> c= ccc_ke b2 cCONS b0 cCONS f0 cCONS f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b1 f1 c==> c= * * part ccc_cell b2 cCONS b0 cCONS f0 cCONS f1 cNIL * * part ccc_cell b2 cCONS f0 cCONS b0 cCONS b1 cNIL c==> c~ c/\ c? / cleaf b3 cCONS f0 cCONS b0 cCONS b1 cNIL c? / cleaf b3 cCONS b0 cCONS f0 cCONS f1 cNIL cF * / ! ! c==> csaturated b2 c==> cpacking b2 c==> c= * * part caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cleaf b2 cCONS b0 cCONS f0 cCONS b1 cNIL c==> cleaf b2 cCONS b0 cCONS f0 cCONS f1 cNIL c==> c~ c= b0 f0 c==> c/\ cleaf b2 cCONS f0 cCONS b0 cCONS b1 cNIL c= * part cstem cCONS b0 cCONS f0 cCONS b1 cNIL * part cstem cCONS f0 cCONS b0 cCONS b1 cNIL c==> c= ccc_ke b2 cCONS b0 cCONS f0 cCONS f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b1 f1 c==> c= * * part ccc_cell b2 cCONS b0 cCONS f0 cCONS f1 cNIL * * part ccc_cell b2 cCONS f0 cCONS b0 cCONS b1 cNIL c==> c~ c/\ c? / cleaf b3 cCONS f0 cCONS b0 cCONS b1 cNIL c? / cleaf b3 cCONS b0 cCONS f0 cCONS f1 cNIL cF f2 * / ! ! c==> csaturated b2 c==> cpacking b2 c==> c= * * part caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cleaf b2 cCONS b0 cCONS f0 cCONS b1 cNIL c==> cleaf b2 cCONS b0 cCONS f0 cCONS f1 cNIL c==> c~ c= b0 f0 c==> c/\ cleaf b2 cCONS f0 cCONS b0 cCONS b1 cNIL c= * part cstem cCONS b0 cCONS f0 cCONS b1 cNIL * part cstem cCONS f0 cCONS b0 cCONS b1 cNIL c==> c= ccc_ke b2 cCONS b0 cCONS f0 cCONS f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b1 f1 c==> c= * * part ccc_cell b2 cCONS b0 cCONS f0 cCONS f1 cNIL * * part ccc_cell b2 cCONS f0 cCONS b0 cCONS b1 cNIL c==> c~ c/\ c? / cleaf b3 cCONS f0 cCONS b0 cCONS b1 cNIL c? / cleaf b3 cCONS b0 cCONS f0 cCONS f1 cNIL cF f2
+ |- (((!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) vl) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT EMPTY))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) vl)))))))) ==> (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = vl))) ==> ((\vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) vl) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT EMPTY))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) vl)))))))) ==> (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = vl))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = ((\vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) vl) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT EMPTY))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) vl)))))))) ==> (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = vl))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))
T c= c==> ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 b0 c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 b0 c= cCONS f1 cCONS f2 cCONS f3 cNIL b0 * / c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 b0 c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 b0 c= cCONS f1 cCONS f2 cCONS f3 cNIL b0 cCONS f1 cCONS f2 cCONS f4 cNIL * / c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 b0 c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 b0 c= cCONS f1 cCONS f2 cCONS f3 cNIL b0 cCONS f1 cCONS f2 cCONS f4 cNIL
- (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2')), (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') |- ((~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2')) /\ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2'))
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c/\ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
+ (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))))
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c/\ c? / cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))))
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c/\ c? / cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL
- |- ((?w. t) = t)
T c= c? / f0 f0
+ (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (~ (((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> (((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL)))))))
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c~ c==> c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c= ccc_uh f4 cCONS f1 cCONS f0 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f4 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL
- |- ((?x'. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x'))) = ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (?x. (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))
T c= c? / c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3 ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3 c? / ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL b0
- (u2 = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) |- ((coplanar (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) INSERT EMPTY))))) = (coplanar (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (u2 INSERT EMPTY))))))
T c==> c= f0 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f1 cCONS f2 cCONS f3 cCONS f4 cNIL c= ccoplanar * * part cINSERT cEL cNUMERAL c_0 cCONS f2 cCONS f3 cCONS f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cCONS f4 cNIL * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f2 cCONS f3 cCONS f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f1 cCONS f2 cCONS f3 cCONS f4 cNIL part cEMPTY ccoplanar * * part cINSERT cEL cNUMERAL c_0 cCONS f2 cCONS f3 cCONS f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cCONS f4 cNIL * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f2 cCONS f3 cCONS f4 cNIL * * part cINSERT f0 part cEMPTY
- (!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) |- (!x. ((~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)) \/ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x)))
T c==> ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c\/ c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0
+ (u0 = u1), (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))) |- (((u0 = v) /\ (u1 = u)) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ cVX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL f4 c/\ cVX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL f5 c~ c= f4 f5 c\/ c/\ c= f0 f4 c= f1 f5 c/\ c= f0 f5 c= f1 f4 c==> c/\ c= f0 f5 c= f1 f4 cF
+ (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) |- ((!V. (~ ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> F)
T c==> c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL c==> ! c~ cleaf b0 cCONS f1 cCONS f2 cCONS f3 cNIL cF
- (!V. (~ ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) |- ((~ F) ==> F)
T c==> ! c~ cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c/\ cleaf f3 cCONS f0 cCONS f1 cCONS f2 cNIL c= * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL c==> c~ cF cF
+ ((b = T) ==> (((b /\ (~ c)) ==> d) = (b ==> (c \/ d)))), ((b = F) ==> (((b /\ (~ c)) ==> d) = (b ==> (c \/ d)))) |- (((b /\ (~ c)) ==> d) = (b ==> (c \/ d)))
T c==> c==> c= f0 cT c= c==> c/\ f0 c~ f1 f2 c==> f0 c\/ f1 f2 c==> c==> c= f0 cF c= c==> c/\ f0 c~ f1 f2 c==> f0 c\/ f1 f2 c= c==> c/\ f0 c~ f1 f2 c==> f0 c\/ f1 f2
+ |- ((?v. (?w. ((u0 INSERT (u1 INSERT (u2' INSERT (u2 INSERT EMPTY)))) SUBSET ((hull affine) (u0 INSERT (v INSERT (w INSERT EMPTY))))))) = ((\u. (?v. (?w. ((u0 INSERT (u1 INSERT (u2' INSERT (u2 INSERT EMPTY)))) SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) u0))
T c= c? / c? / cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / c? / c? / cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) IN (mcell_set V)) = T)
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= cIN * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * part cmcell_set f0 cT
+ |- (((x IN t) /\ (t SUBSET s)) ==> ((!x. (!s. (!t. (((x IN t) /\ (t SUBSET s)) ==> (x IN s))))) ==> (x IN s)))
T c==> c/\ cIN f0 f1 cSUBSET f1 f2 c==> ! ! ! c==> c/\ cIN b0 b2 cSUBSET b2 b1 cIN b0 b1 cIN f0 f2
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
+ (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) |- (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u0)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0
+ (packing V), (saturated V), ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) |- (u2 = u2')
T c==> cpacking f0 c==> csaturated f0 c==> c/\ c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c= f3 f4
- (~ F), (u0 = u1), ((u0 = u) /\ (u1 = v)), (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c==> c/\ c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f5 cNIL f2 c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f5 cNIL f3 c~ c= f2 f3 c\/ c/\ c= f0 f2 c= f1 f3 c/\ c= f0 f3 c= f1 f2 c/\ c~ cF cF
+ (!x. (!s. (!t. (((x IN t) /\ (t SUBSET s)) ==> (x IN s))))) |- ((\t. (((x IN t) /\ (t SUBSET s)) ==> (x IN s))) t)
T c==> ! ! ! c==> c/\ cIN b0 b2 cSUBSET b2 b1 cIN b0 b1 * / c==> c/\ cIN f0 b0 cSUBSET b0 f1 cIN f0 f1 f2
+ (A = T) |- ((A = T) /\ (((A ==> B) /\ A) ==> B))
T c==> c= f0 cT c/\ c= f0 cT c==> c/\ c==> f0 f1 f0 f1
- |- (((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))) = (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c= c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x))))))))))))) = T)
T c= c==> csaturated f0 c==> cpacking f0 c==> ! c= caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL ! c= cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 c~ ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cT
- |- ((!x'. (((~ (x' = u0)) /\ ((~ (x' = u1)) /\ (~ (x' = u2)))) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) = ((!x. ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))
T c= ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c\/ ! c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x)), ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x)) |- ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x)) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))
T c==> c~ ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f4 c==> c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f4 c/\ c~ ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f4 ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f4
- (((u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) ==> B) /\ (u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))), ((((u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) ==> B) /\ (u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))) ==> B) |- (((((u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) ==> B) /\ (u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))) ==> B) /\ B)
T c==> c/\ c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c==> c/\ c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c/\ c==> c/\ c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 f4
+ (packing V), (saturated V), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) |- (((((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL _0)) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) NIL))))) ==> (~ (((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL))))))) = ((((saturated V) /\ ((packing V) /\ ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> (((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL _0)) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) NIL)))))) ==> ((((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL))))) ==> F)))
T c==> cpacking f0 c==> csaturated f0 c==> c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL c= c==> c= ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL c~ c= ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f1 cCONS f4 cNIL cCONS cEL cNUMERAL c_0 cCONS f2 cCONS f1 cCONS f4 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f1 cCONS f4 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f2 cCONS f1 cCONS f4 cNIL cNIL c==> c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL c==> c= ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f1 cCONS f4 cNIL cCONS cEL cNUMERAL c_0 cCONS f2 cCONS f1 cCONS f4 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f1 cCONS f4 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f2 cCONS f1 cCONS f4 cNIL cNIL cF
- |- (((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) = ((\x. ((\v. ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = v))) x)) (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))))
T c= c/\ c? / cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL * / * / c/\ c? / cleaf b2 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY b1 b0 * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL
- |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ (!x. (!s. (!t. (((x IN t) /\ (t SUBSET s)) ==> (x IN s))))), ((x IN t) /\ (t SUBSET s)) |- (x IN s)
T c==> ! ! ! c==> c/\ cIN b0 b2 cSUBSET b2 b1 cIN b0 b1 c==> c/\ cIN f0 f1 cSUBSET f1 f2 cIN f0 f2
- |- ((!x'. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) \/ (~ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x')))) = (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) \/ (!x. (~ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))))
T c= ! c\/ cstem cCONS f0 cCONS f1 cCONS f2 cNIL f3 c~ cstem cCONS f1 cCONS f0 cCONS f2 cNIL b0 c\/ cstem cCONS f0 cCONS f1 cCONS f2 cNIL f3 ! c~ cstem cCONS f1 cCONS f0 cCONS f2 cNIL b0
+ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))) |- (((!x. ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x)) \/ (~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))) ==> ((\x. ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x)) \/ (~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))) _7137351)) = ((\x. ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x)) \/ (~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))) _7137351))
T c==> ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= c==> ! c\/ c~ ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c~ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 * / c\/ c~ ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c~ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 f5 * / c\/ c~ ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c~ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 f5
+ |- (((((packing V) /\ ((saturated V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) IN (mcell_set V)) /\ (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL)))))) = p') ==> ((p' ==> ((u2 = u2') = q')) ==> (((((packing V) /\ ((saturated V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) IN (mcell_set V)) /\ (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL)))))) ==> (u2 = u2')) = (p' ==> q'))))
T c==> c= c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cIN * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * part cmcell_set f0 c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * part ccc_A0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL f5 c==> c==> f5 c= c= f3 f4 f6 c= c==> c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cIN * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * part cmcell_set f0 c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * part ccc_A0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL c= f3 f4 c==> f5 f6
+ |- ((!u0. (!u2. (!V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))))))))))))) = T)
T c= ! ! ! c==> csaturated b2 c==> cpacking b2 c==> c= * * part caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cleaf b2 cCONS b0 cCONS f0 cCONS b1 cNIL c==> cleaf b2 cCONS b0 cCONS f0 cCONS f1 cNIL c==> c~ c= b0 f0 c==> c/\ cleaf b2 cCONS f0 cCONS b0 cCONS b1 cNIL c= * part cstem cCONS b0 cCONS f0 cCONS b1 cNIL * part cstem cCONS f0 cCONS b0 cCONS b1 cNIL c==> c= ccc_ke b2 cCONS b0 cCONS f0 cCONS f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b1 f1 c==> c= * * part ccc_cell b2 cCONS b0 cCONS f0 cCONS f1 cNIL * * part ccc_cell b2 cCONS f0 cCONS b0 cCONS b1 cNIL c/\ c? / cleaf b3 cCONS f0 cCONS b0 cCONS b1 cNIL c? / cleaf b3 cCONS b0 cCONS f0 cCONS f1 cNIL cT
+ |- (((((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))))))))) ==> (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> (u2 = u2')) = (u2 = u2'))
T c= c==> c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f4 cNIL part cEMPTY c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c= cCONS f1 cCONS f2 cCONS f3 cNIL cCONS f1 cCONS f2 cCONS f4 cNIL c= f4 f3 c= f4 f3
+ |- ((\t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2)))) t2)
T * / c= c= cCONS f0 f1 cCONS f2 b0 c/\ c= f0 f2 c= f1 b0 f3
+ ((\t. ((x IN t) /\ (t SUBSET s))) t) |- ((x IN t) /\ (t SUBSET s))
T c==> * / c/\ cIN f0 b0 cSUBSET b0 f1 f2 c/\ cIN f0 f2 cSUBSET f2 f1
+ (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F)
T c==> c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f2 cCONS f1 cCONS f4 cNIL c==> c~ c/\ c? / cleaf b0 cCONS f1 cCONS f2 cCONS f3 cNIL c? / cleaf b0 cCONS f2 cCONS f1 cCONS f4 cNIL cF
- (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) |- (!x. ((~ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x)) \/ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))
T c==> c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL ! c= cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 ! c\/ c~ cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0
- (_7137335 = _7137338), (_7137336 = _7137339), (_7137337 = _7137340) |- ((_7137336 = _7137339) /\ ((((VX _7137338) _7137339) _7137340) \/ (~ (((VX _7137335) _7137336) _7137337))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f2 f3 c\/ cVX f1 f3 f5 c~ cVX f0 f2 f4
+ (~ (u0 = u1)), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (((((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) \/ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL))))))) ==> (u2 = u2'))
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f3 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f4 cNIL c==> c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY * * part cedgeX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL c~ c= * * part cINTER * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY c\/ c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL c= f3 f4
- ((u0 = v) /\ (u1 = u)) |- ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u) ((CONS u2) NIL))))) v) = (((VX V) ((cc_cell V) ((CONS v) ((CONS u) ((CONS u2) NIL))))) v))
T c==> c/\ c= f0 f1 c= f2 f3 c= cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS f5 cNIL f1 cVX f4 * * part ccc_cell f4 cCONS f1 cCONS f3 cCONS f5 cNIL f1
+ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))) |- ((\x. ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x)) \/ (~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))) _7137351)
T c==> ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 * / c\/ c~ ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c~ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 f5
- (_7137670 = _7137673), (_7137671 = _7137674), (_7137672 = _7137675) |- ((((((hull _7137670) _7137671) _7137672) = (((hull _7137673) _7137674) _7137675)) ==> ((((hull _7137673) _7137674) _7137675) \/ (~ (((hull _7137670) _7137671) _7137672)))) = ((((hull _7137673) _7137674) _7137675) \/ (~ (((hull _7137670) _7137671) _7137672))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c= c==> c= chull f0 f2 f4 chull f1 f3 f5 c\/ chull f1 f3 f5 c~ chull f0 f2 f4 c\/ chull f1 f3 f5 c~ chull f0 f2 f4
+ (u0 = u1), ((u0 = u) /\ (u1 = v)), (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))) |- ((v = v) ==> F)
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c==> c/\ c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f5 cNIL f2 c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f5 cNIL f3 c~ c= f2 f3 c\/ c/\ c= f0 f2 c= f1 f3 c/\ c= f0 f3 c= f1 f2 c==> c= f3 f3 cF
+ |- (u2' IN ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)))
T cIN f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 part cEMPTY
+ |- (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) vl) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) vl)) /\ (((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem vl)) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = vl))))))))) ==> (((cc_uh V) vl) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL)))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 f4 c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 f4 c/\ c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem f4 c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= cCONS f1 cCONS f2 cCONS f3 cNIL f4 c= ccc_uh f0 f4 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL
+ (u0 = u1) |- (((!x. (((\u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) x) ==> F)) ==> ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> F)) = ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> F))
T c==> c= f0 f1 c= c==> ! c==> * / c? / c/\ c/\ cVX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL b1 c/\ cVX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL b2 c~ c= b1 b2 c\/ c/\ c= f0 b1 c= f1 b2 c/\ c= f0 b2 c= f1 b1 b0 cF c==> c? / c? / c/\ c/\ cVX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL b0 c/\ cVX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f0 b0 c= f1 b1 c/\ c= f0 b1 c= f1 b0 cF c==> c? / c? / c/\ c/\ cVX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL b0 c/\ cVX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f0 b0 c= f1 b1 c/\ c= f0 b1 c= f1 b0 cF
+ |- ((!V. (!u0. (!u1. (!u2. (!u2'. (((saturated V) /\ ((packing V) /\ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))) ==> (u2 = u2'))))))) = (!V. (!u0. (!u1. (!u2. (!u2'. (((saturated V) /\ ((packing V) /\ (((cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))) ==> (u2 = u2'))))))))
T c= ! ! ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ c= * * part caff_gt * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY * * part caff_gt * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b4 part cEMPTY c/\ cleaf b0 cCONS b1 cCONS b2 cCONS b3 cNIL cleaf b0 cCONS b1 cCONS b2 cCONS b4 cNIL c= b3 b4 ! ! ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ c= * part ccc_A0 cCONS b1 cCONS b2 cCONS b3 cNIL * part ccc_A0 cCONS b1 cCONS b2 cCONS b4 cNIL c/\ cleaf b0 cCONS b1 cCONS b2 cCONS b3 cNIL cleaf b0 cCONS b1 cCONS b2 cCONS b4 cNIL c= b3 b4
+ (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))))))))) ==> (((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL)))))) ==> F)
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c==> c/\ csaturated f4 c/\ cpacking f4 c/\ cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c/\ c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f1 cCONS f0 cCONS f2 cNIL c/\ c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c/\ c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= cCONS f0 cCONS f1 cCONS f3 cNIL cCONS f1 cCONS f0 cCONS f2 cNIL c= ccc_uh f4 cCONS f1 cCONS f0 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f4 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL cF
- |- ((~ (_7137550 = _7137551)) \/ ((stem _7137550) = (stem _7137551)))
T c\/ c~ c= f0 f1 c= * part cstem f0 * part cstem f1
+ |- (!b. (!c. ((b = c) ==> (!P. ((P c) ==> (P b))))))
T c==> c= f0 f1 ! c==> * b0 f1 * b0 f0
+ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) |- (?w. ((u0 INSERT (u1 INSERT (u2' INSERT (u2 INSERT EMPTY)))) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (w INSERT EMPTY))))))
T c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c? / cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY
+ (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ F)
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c/\ c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f1 cCONS f0 cCONS f2 cNIL cF
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (T = ((saturated V) /\ ((packing V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= cT c/\ csaturated f0 c/\ cpacking f0 cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL
- (~ (u0 = u1)), (~ (u2 = u2')), (~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) /\ F)
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> c~ c/\ c? / cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL c? / cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c/\ c~ c/\ c? / cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL c? / cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL cF
- (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) |- (((!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) \/ (~ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((\x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) \/ (~ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) _7137352)) = ((\x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) \/ (~ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) _7137352))
T c==> c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL ! c= cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 c= c==> ! c\/ cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 c~ cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 * / c\/ cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 c~ cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 f4 * / c\/ cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 c~ cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 f4
+ |- (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> ((((cc_cell V) ul) IN (mcell_set V)) = T))
T c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 c= cIN * * part ccc_cell f0 f1 * part cmcell_set f0 cT
+ (~ (P b)), (P c), (b = c) |- ((~ (P b)) /\ F)
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c/\ c~ * f0 f1 cF
+ (x = u1), ((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) |- F
T c==> c= f0 f1 c==> c/\ c\/ c\/ c= f0 f2 c= f0 f1 c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 cF
- (((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F) ==> ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F)) |- ((((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F) ==> ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F)) /\ (((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F) ==> ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F)))
T c==> c==> c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c/\ c==> c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c==> c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF
+ (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) |- (((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u0) ==> F) = F)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 cF cF
- (x = u0), ((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) |- (~ (u0 = u1))
T c==> c= f0 f1 c==> c/\ c\/ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c~ c= f1 f2
+ (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)), (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') |- ((x = u2') ==> F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> c= f3 f4 cF
+ |- (((u0 INSERT (u1 INSERT (u2' INSERT (u2 INSERT EMPTY)))) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) = ((\w. ((u0 INSERT (u1 INSERT (u2' INSERT (u2 INSERT EMPTY)))) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (w INSERT EMPTY)))))) u2))
T c= cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * / cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f3
- (x = u2), ((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) |- (~ (u2 = u1))
T c==> c= f0 f1 c==> c/\ c\/ c\/ c= f0 f2 c= f0 f3 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c~ c= f1 f3
- |- (((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F) ==> ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F))
T c==> c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- (_7137335 = _7137338), (_7137337 = _7137340) |- ((~ (_7137336 = _7137339)) \/ ((((VX _7137338) _7137339) _7137340) \/ (~ (((VX _7137335) _7137336) _7137337))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ cVX f1 f5 f3 c~ cVX f0 f4 f2
+ (~ (u0 = u1)), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((~ ((((aff_gt (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY))) (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) INTER ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) = EMPTY)) ==> (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER ((aff_gt (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY))) (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY))) = EMPTY)))
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f3 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f4 cNIL c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f4 cNIL part cEMPTY * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f4 cNIL part cEMPTY * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL part cEMPTY c~ c= * * part cINTER * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part caff_gt * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY part cEMPTY
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- (((!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V)))) ==> ((\ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V)))) ul)) = ((\ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V)))) ul))
T c= c==> ! c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 b0 cIN * * part ccc_cell f0 b0 * part cmcell_set f0 * / c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 b0 cIN * * part ccc_cell f0 b0 * part cmcell_set f0 f1 * / c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 b0 cIN * * part ccc_cell f0 b0 * part cmcell_set f0 f1
+ (~ (u0 = u1)), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) \/ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) \/ (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (u2 = u2')
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f3 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL c==> c\/ c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS f1 cCONS f0 cCONS f3 cNIL c==> c\/ c= ccc_ke f2 cCONS f0 cCONS f1 cCONS f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c= ccc_ke f2 cCONS f0 cCONS f1 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f4 cNIL c= f3 f4
- (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), (((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL)))))) /\ F)
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> c==> c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c= ccc_uh f4 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f4 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c/\ c==> c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c= ccc_uh f4 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f4 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL cF
- ((u0 INSERT (u1 INSERT (u2 INSERT EMPTY))) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) |- (((u0 INSERT (u1 INSERT (u2 INSERT EMPTY))) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) = T)
T c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ |- ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))
T c==> c==> f0 c= f1 f2 ! c==> c/\ f0 * b0 f2 * b0 f1
+ |- (((u0 = u0) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u0)) = (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u0))
T c= c==> c= f0 f0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0
+ |- (((~ (u2 = u2')) ==> F) = (u2 = u2'))
T c= c==> c~ c= f0 f1 cF c= f0 f1
+ |- ((~ ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2))))) ==> F)
T c==> c~ c= c\/ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 cF
- (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) |- ((~ ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))
T c==> c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL c==> c~ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL
- ((u0 = u) /\ (u1 = v)), (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))) |- (((VX V) ((cc_cell V) ((CONS u0) ((CONS v) ((CONS u2) NIL))))) v)
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f2 cCONS f5 cNIL f1 c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f2 cCONS f5 cNIL f3 c~ c= f1 f3 c\/ c/\ c= f0 f1 c= f2 f3 c/\ c= f0 f3 c= f2 f1 cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS f5 cNIL f3
+ |- (((u2 = u2) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2)) = (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2))
T c= c==> c= f0 f0 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY f0 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY f0
+ |- (((!x. ((x IN (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) ==> (x IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))))) ==> ((u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) ==> (!x. ((x IN (u0 INSERT (u1 INSERT (u2' INSERT (u2 INSERT EMPTY))))) ==> (x IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))))))) = (((u0 INSERT (u1 INSERT (u2 INSERT EMPTY))) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) ==> ((u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) ==> ((u0 INSERT (u1 INSERT (u2' INSERT (u2 INSERT EMPTY)))) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))))))
T c= c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (b = c) |- ((b = c) /\ (!P. ((P c) ==> (P b))))
T c==> c= f0 f1 c/\ c= f0 f1 ! c==> * b0 f1 * b0 f0
+ |- ((\ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (((cc_A0 ul) INTER ((cc_cell V) ul)) = EMPTY)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))
T * / c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 b0 c~ c= * * part cINTER * part ccc_A0 b0 * * part ccc_cell f0 b0 part cEMPTY cCONS f1 cCONS f2 cCONS f3 cNIL
- |- ((~ (_7137566 = _7137568)) \/ ((~ (_7137567 = _7137569)) \/ (((CONS _7137566) _7137567) = ((CONS _7137568) _7137569))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
- (_7137556 = _7137558), (_7137557 = _7137559) |- ((_7137557 = _7137559) /\ (((cc_ke _7137556) _7137557) = ((cc_ke _7137558) _7137559)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= ccc_ke f0 f2 ccc_ke f1 f3
+ |- (((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F) = ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))
T c= c==> c~ c/\ c? / cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c? / cleaf b0 cCONS f1 cCONS f0 cCONS f3 cNIL cF c/\ c? / cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c? / cleaf b0 cCONS f1 cCONS f0 cCONS f3 cNIL
- ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F))))))))))) |- (((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F))))))))))) /\ ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F))))))))))))
T c==> c==> csaturated f0 c==> cpacking f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f3 cNIL c==> c~ c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f3 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f4 cNIL cF c/\ c==> csaturated f0 c==> cpacking f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f3 cNIL c==> c~ c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f3 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f4 cNIL cF c==> csaturated f0 c==> cpacking f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f3 cNIL c==> c~ c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f3 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f4 cNIL cF
- (_7137368 = _7137371) |- ((_7137368 = _7137371) /\ ((~ (_7137366 = _7137369)) \/ ((~ (_7137367 = _7137370)) \/ ((((aff_gt _7137369) _7137370) _7137371) \/ (~ (((aff_gt _7137366) _7137367) _7137368))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ caff_gt f3 f5 f1 c~ caff_gt f2 f4 f0
+ |- ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) SUBSET ((hull affine) ((u0 INSERT (u1 INSERT EMPTY)) UNION (u2 INSERT EMPTY)))) ==> (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))))
T c==> cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cUNION * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (~ F), (~ (u2 = u2')), (u2' = u2) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c= f0 f1 c==> c= f1 f0 c/\ c~ cF cF
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL)))))) ==> ((u2 = u2') = q')) ==> (((((packing V) /\ ((saturated V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) IN (mcell_set V)) /\ (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL)))))) ==> (u2 = u2')) = (((((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL)))))) ==> q')))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c==> c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * part ccc_A0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL c= c= f3 f4 f5 c= c==> c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cIN * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * part cmcell_set f0 c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * part ccc_A0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL c= f3 f4 c==> c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * part ccc_A0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL f5
+ (~ (u0 = u1)), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) \/ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (u2 = u2'))
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= ccc_ke f2 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f4 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f4 cNIL * part cstem cCONS f1 cCONS f0 cCONS f4 cNIL c==> c\/ c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f2 cCONS f1 cCONS f0 cCONS f4 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f4 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c/\ c= ccc_ke f2 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c= f4 f3
+ |- (((saturated V) /\ ((packing V) /\ ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> (((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL _0)) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) NIL))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL
+ |- ((((b /\ (~ c)) ==> d) = (b ==> (c \/ d))) = (((T /\ (b /\ (~ c))) ==> d) = ((T /\ b) ==> (c \/ d))))
T c= c= c==> c/\ f0 c~ f1 f2 c==> f0 c\/ f1 f2 c= c==> c/\ cT c/\ f0 c~ f1 f2 c==> c/\ cT f0 c\/ f1 f2
+ |- ((\ul. (!pp. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ ((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = pp)))) ==> (~ (coplanar (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (pp INSERT EMPTY))))))))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))
T * / ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 b0 c= cCOND c= ccc_ke f0 b0 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 b0 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 b1 c~ ccoplanar * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT b1 part cEMPTY cCONS f1 cCONS f2 cCONS f3 cNIL
+ (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) |- (((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u1) ==> F) = F)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 cF cF
- |- ((~ (~ F)) ==> F)
T c==> c~ c~ cF cF
- (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))), ((((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL)))))) |- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL)))))
T c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cNIL c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cNIL
+ (b = T) |- ((((T /\ (~ c)) ==> d) = (T ==> (c \/ d))) = (((b /\ (~ c)) ==> d) = (b ==> (c \/ d))))
T c==> c= f0 cT c= c= c==> c/\ cT c~ f1 f2 c==> cT c\/ f1 f2 c= c==> c/\ f0 c~ f1 f2 c==> f0 c\/ f1 f2
+ |- ((coplanar (u0 INSERT (u1 INSERT (u2' INSERT (u2 INSERT EMPTY))))) = (coplanar (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (u2 INSERT EMPTY))))))
T c= ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT f3 part cEMPTY
+ |- (((~ ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2))))) ==> F) = ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))
T c= c==> c~ c= c\/ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 cF c= c\/ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3
+ |- ((\p'. (!q'. (((((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL))))) = q')) ==> (((((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL)))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL b0 c==> c==> b0 c= c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cNIL b1 c= c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cNIL c==> b0 b1 f5
+ |- (!u2'. (!u1. (!u0. (!u2. (!V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))))))))))))))))
T c==> csaturated f0 c==> cpacking f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f3 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f4 cNIL
- |- ((((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F) ==> ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F)) ==> (((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F) ==> ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F)))
T c==> c==> c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF
- |- (((!u1. (!u0. (!u2'. ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F)))) ==> ((\u1. (!u0. (!u2'. ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F)))) u1)) = ((\u1. (!u0. (!u2'. ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F)))) u1))
T c= c==> ! ! ! c==> c~ c==> ! c==> c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b3 c==> chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 ! c==> c\/ c= b3 b1 c\/ c= b3 b0 c\/ c= b3 b2 c= b3 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b3 cF * / ! ! c==> c~ c==> ! c==> c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b3 c==> chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 ! c==> c\/ c= b3 b1 c\/ c= b3 b0 c\/ c= b3 b2 c= b3 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b3 cF f1 * / ! ! c==> c~ c==> ! c==> c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b3 c==> chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 ! c==> c\/ c= b3 b1 c\/ c= b3 b0 c\/ c= b3 b2 c= b3 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b3 cF f1
+ (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))))
T c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f4 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f4 cNIL * part cstem cCONS f2 cCONS f1 cCONS f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f3 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f4 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f3 cNIL
+ (u0 = u1) |- ((((\v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u))))) v) ==> F) = T)
T c==> c= f0 f1 c= c==> * / c/\ c/\ cVX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL f4 c/\ cVX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL b0 c~ c= f4 b0 c\/ c/\ c= f0 f4 c= f1 b0 c/\ c= f0 b0 c= f1 f4 f5 cF cT
+ (A = F) |- ((((F ==> B) /\ F) ==> B) = (((A ==> B) /\ A) ==> B))
T c==> c= f0 cF c= c==> c/\ c==> cF f1 cF f1 c==> c/\ c==> f0 f1 f0 f1
+ (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> F), ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) \/ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- F
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f1 cCONS f0 cCONS f2 cNIL cF c==> c\/ c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL cF
+ |- (((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) /\ (((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))))))) ==> (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= cCONS f1 cCONS f2 cCONS f3 cNIL cCONS f1 cCONS f2 cCONS f4 cNIL c= ccc_uh f0 cCONS f1 cCONS f2 cCONS f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL
+ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) |- (?u. (?v. (?w. ((u0 INSERT (u1 INSERT (u2' INSERT (u2 INSERT EMPTY)))) SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))
T c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c? / c? / c? / cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- |- ((?x'. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x') /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))) = ((?x. (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x)) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x)))
T c= c? / c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL f4 c/\ c? / caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL f4
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
+ (x = u1), ((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))) |- (~ (u1 = u1))
T c==> c= f0 f1 c==> c/\ c/\ c/\ c~ c= f0 f2 c~ c= f0 f1 c~ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c~ c= f1 f1
- (~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))
T c==> c~ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ c~ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL
- (~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) |- F
T c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF
- (x = u0), ((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c~ cF cF
+ |- ((\pp. (((packing V) /\ ((saturated V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ ((((COND (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) = pp)))) ==> (~ (coplanar (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (pp INSERT EMPTY)))))))) u2)
T * / c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= cCOND c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c~ ccoplanar * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT b0 part cEMPTY f4
+ |- ((!u0. (!u1. (!u2. (!u2'. (((saturated V) /\ ((packing V) /\ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))) ==> (u2 = u2')))))) = T)
T c= ! ! ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c= * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cleaf f0 cCONS b0 cCONS b1 cCONS b2 cNIL cleaf f0 cCONS b0 cCONS b1 cCONS b3 cNIL c= b2 b3 cT
+ |- ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))
T c==> ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL ! c= cstem cCONS f0 cCONS f1 cCONS f2 cNIL b0 cstem cCONS f1 cCONS f0 cCONS f2 cNIL b0 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL b0 c~ ! c~ c/\ ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0
+ ((x IN t) /\ (t SUBSET s)) |- (((x IN t) /\ (t SUBSET s)) /\ ((!x. (!s. (!t. (((x IN t) /\ (t SUBSET s)) ==> (x IN s))))) ==> (x IN s)))
T c==> c/\ cIN f0 f1 cSUBSET f1 f2 c/\ c/\ cIN f0 f1 cSUBSET f1 f2 c==> ! ! ! c==> c/\ cIN b0 b2 cSUBSET b2 b1 cIN b0 b1 cIN f0 f2
+ (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) |- ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137589) \/ (~ (_7137589 = u1)))
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c~ c= f3 f1
+ (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = u2), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (~ ((((EL (NUMERAL _0)) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f2 cCONS f1 cCONS f3 cNIL f3 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c~ c/\ c= cEL cNUMERAL c_0 cCONS f2 cCONS f1 cCONS f3 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f1 cCONS f3 cNIL cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f2 cCONS f1 cCONS f3 cNIL cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f4 cNIL c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f1 cCONS f3 cNIL cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f4 cNIL
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((\x. ((\v. ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = v))) x)) (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL * / * / c/\ c? / cleaf b2 cCONS f0 cCONS f1 cCONS f3 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY b1 b0 * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL
+ (P c), (b = c) |- ((~ (P b)) ==> F)
T c==> * f0 f1 c==> c= f2 f1 c==> c~ * f0 f2 cF
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) |- ((((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))) ==> (~ (u0 = u1))) = ((((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))) ==> ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))))) ==> (~ (u0 = u1))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= c==> cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c~ c= f1 f2 c==> c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c~ c= f1 f2
+ |- (((((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))) ==> (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))))) ==> (u2 = u2')) = (u2 = u2'))
T c= c==> c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c= f3 f4 c= f3 f4
+ |- (((!ul. (((leaf V) ul) ==> ((stem ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))))) ==> ((\ul. (((leaf V) ul) ==> ((stem ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))))) ul)) = ((\ul. (((leaf V) ul) ==> ((stem ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))))) ul))
T c= c==> ! c==> cleaf f0 b0 c= * part cstem b0 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * / c==> cleaf f0 b0 c= * part cstem b0 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY f1 * / c==> cleaf f0 b0 c= * part cstem b0 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY f1
+ ((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))) |- (((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))) /\ F)
T c==> c/\ c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c/\ c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 cF
- (u0 = u1), ((u0 = v) /\ (u1 = u)) |- ((((VX V) ((cc_cell V) ((CONS v) ((CONS u) ((CONS u2) NIL))))) v) = (((VX V) ((cc_cell V) ((CONS u) ((CONS u) ((CONS u2) NIL))))) u))
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c= cVX f4 * * part ccc_cell f4 cCONS f2 cCONS f3 cCONS f5 cNIL f2 cVX f4 * * part ccc_cell f4 cCONS f3 cCONS f3 cCONS f5 cNIL f3
+ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) /\ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))
T c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f4 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f4 cNIL * part cstem cCONS f2 cCONS f1 cCONS f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f4 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f3 cNIL
+ |- ((!V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))))))))))) = T)
T c= ! c==> csaturated b0 c==> cpacking b0 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_ke b0 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f2 f3 c==> c= * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS f2 cNIL c/\ c? / cleaf b1 cCONS f1 cCONS f0 cCONS f2 cNIL c? / cleaf b1 cCONS f0 cCONS f1 cCONS f3 cNIL cT
+ (~ (u2 = u2')) |- (((~ (u2' = u2)) ==> ((u2' = u2) = F)) = ((u2' = u2) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
- |- ((!x'. ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x)) \/ (~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x')))) = ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x)) \/ (!x. (~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))
T c= ! c\/ c~ ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f4 c~ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f5 part cEMPTY b0 c\/ c~ ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f4 ! c~ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f5 part cEMPTY b0
+ |- (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) vl) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT EMPTY))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) vl)))))))) ==> (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = vl)))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 f4 c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f4 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f4 part cEMPTY c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 f4 c= cCONS f1 cCONS f2 cCONS f3 cNIL f4
- (_7137356 = _7137358), (_7137357 = _7137359) |- (((stem _7137358) _7137359) \/ (~ ((stem _7137356) _7137357)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cstem f1 f3 c~ cstem f0 f2
+ |- ((\u0. (!u2. (!V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F)))))))))))))) u0)
T * / ! ! c==> csaturated b2 c==> cpacking b2 c==> c= * * part caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cleaf b2 cCONS b0 cCONS f0 cCONS b1 cNIL c==> cleaf b2 cCONS b0 cCONS f0 cCONS f1 cNIL c==> c~ c= b0 f0 c==> c/\ cleaf b2 cCONS f0 cCONS b0 cCONS b1 cNIL c= * part cstem cCONS b0 cCONS f0 cCONS b1 cNIL * part cstem cCONS f0 cCONS b0 cCONS b1 cNIL c==> c= ccc_ke b2 cCONS b0 cCONS f0 cCONS f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b1 f1 c==> c= * * part ccc_cell b2 cCONS b0 cCONS f0 cCONS f1 cNIL * * part ccc_cell b2 cCONS f0 cCONS b0 cCONS b1 cNIL c==> c~ c/\ c? / cleaf b3 cCONS f0 cCONS b0 cCONS b1 cNIL c? / cleaf b3 cCONS b0 cCONS f0 cCONS f1 cNIL cF f2
+ (~ (u0 = u1)) |- (T = (~ (((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))) NIL)))) = ((CONS u1) ((CONS u0) ((CONS (HD (TL (TL (TL ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))) ((CONS u2') NIL)))))))
T c==> c~ c= f0 f1 c= cT c~ c= cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS f2 cNIL cNIL cCONS f1 cCONS f0 cCONS cHD cTL cTL cTL ccc_uh f3 cCONS f0 cCONS f1 cCONS f4 cNIL cCONS f4 cNIL
+ (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) |- (u2 = u2')
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c= f3 f4
- |- ((~ (_7137337 = _7137340)) \/ ((~ (_7137335 = _7137338)) \/ ((~ (_7137336 = _7137339)) \/ ((((VX _7137338) _7137339) _7137340) \/ (~ (((VX _7137335) _7137336) _7137337))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ cVX f3 f5 f1 c~ cVX f2 f4 f0
+ (~ (P b)), (b = c) |- (~ (P c))
T c==> c~ * f0 f1 c==> c= f1 f2 c~ * f0 f2
+ |- (((!V. (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V))))) ==> ((\V. (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V))))) V)) = ((\V. (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V))))) V))
T c= c==> ! ! c==> c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 cIN * * part ccc_cell b0 b1 * part cmcell_set b0 * / ! c==> c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 cIN * * part ccc_cell b0 b1 * part cmcell_set b0 f0 * / ! c==> c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 cIN * * part ccc_cell b0 b1 * part cmcell_set b0 f0
+ |- ((A = F) ==> (((A ==> B) /\ A) ==> B))
T c==> c= f0 cF c==> c/\ c==> f0 f1 f0 f1
+ (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) \/ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- F
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> c\/ c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL cF
- |- ((\u0. (!u2. (!V. ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F)))) u0)
T * / ! ! c==> c~ c==> c? / c? / c/\ c/\ cVX b2 * * part ccc_cell b2 cCONS b0 cCONS f0 cCONS b1 cNIL b3 c/\ cVX b2 * * part ccc_cell b2 cCONS b0 cCONS f0 cCONS b1 cNIL b4 c~ c= b3 b4 c\/ c/\ c= b0 b3 c= f0 b4 c/\ c= b0 b4 c= f0 b3 c~ c= b0 f0 cF f1
+ |- ((?t. ((x IN t) /\ (t SUBSET s))) ==> (x IN s))
T c==> c? / c/\ cIN f0 b0 cSUBSET b0 f1 cIN f0 f1
- (x = u0) |- ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') = (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2'))
T c==> c= f0 f1 c= chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
+ ((\v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u))))) v) |- (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u))))
T c==> * / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f4 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c~ c= f4 b0 c\/ c/\ c= f1 f4 c= f2 b0 c/\ c= f1 b0 c= f2 f4 f5 c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f4 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f5 c~ c= f4 f5 c\/ c/\ c= f1 f4 c= f2 f5 c/\ c= f1 f5 c= f2 f4
+ |- ((u0 INSERT (u1 INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)))
T c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY
+ (~ ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2))))) |- ((~ ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2))))) /\ F)
T c==> c~ c= c\/ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= c\/ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 cF
+ (u0 = u1) |- ((((\u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) u) ==> F) = T)
T c==> c= f0 f1 c= c==> * / c? / c/\ c/\ cVX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL b0 c/\ cVX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f0 b0 c= f1 b1 c/\ c= f0 b1 c= f1 b0 f4 cF cT
+ |- (((((packing V) /\ ((saturated V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ ((((COND (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) = u2)))) ==> (~ (coplanar (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (u2 INSERT EMPTY))))))) ==> F) = F)
T c= c==> c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= cCOND c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL f4 c~ ccoplanar * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT f4 part cEMPTY cF cF
- ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c==> c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) = (((u0 INSERT (u1 INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= c~ c= * * part cINTER * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * part ccc_A0 cCONS f1 cCONS f2 cCONS f4 cNIL part cEMPTY c/\ cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c~ c= * * part cINTER * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * part ccc_A0 cCONS f1 cCONS f2 cCONS f4 cNIL part cEMPTY
+ |- ((!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))) = ((!b. (!c. ((T ==> (b = c)) ==> (!P. ((T /\ (P c)) ==> (P b)))))) /\ (!b. (!c. ((F ==> (b = c)) ==> (!P. ((F /\ (P c)) ==> (P b))))))))
T c= ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 c/\ ! ! c==> c==> cT c= b0 b1 ! c==> c/\ cT * b2 b1 * b2 b0 ! ! c==> c==> cF c= b0 b1 ! c==> c/\ cF * b2 b1 * b2 b0
+ (u0 = u1) |- ((?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u))))) ==> F)
T c==> c= f0 f1 c==> c? / c/\ c/\ cVX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL f4 c/\ cVX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL b0 c~ c= f4 b0 c\/ c/\ c= f0 f4 c= f1 b0 c/\ c= f0 b0 c= f1 f4 cF
- |- ((_7137574 = _7137576) ==> ((~ (_7137575 = _7137577)) \/ (((aff_gt _7137574) _7137575) = ((aff_gt _7137576) _7137577))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part caff_gt f0 f2 * * part caff_gt f1 f3
+ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((!V. (~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ==> F)
T c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> ! c~ cleaf b0 cCONS f1 cCONS f2 cCONS f3 cNIL cF
+ |- (((((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) INSERT EMPTY))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))))))))) ==> (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> (u2 = u2')) = (u2 = u2'))
T c= c==> c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f4 cNIL c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f2 cCONS f1 cCONS f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f1 cCONS f4 cNIL part cEMPTY c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f4 cNIL c= cCONS f1 cCONS f2 cCONS f3 cNIL cCONS f2 cCONS f1 cCONS f4 cNIL c= f4 f3 c= f4 f3
- |- ((((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F))))))))))) ==> ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F)))))))))))) = ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F))))))))))))
T c= c==> c==> csaturated f0 c==> cpacking f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> c~ c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f3 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f4 cNIL cF c==> csaturated f0 c==> cpacking f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> c~ c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f3 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f4 cNIL cF c==> csaturated f0 c==> cpacking f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> c~ c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f3 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f4 cNIL cF
+ ((c = T) ==> (((~ c) ==> d) = (c \/ d))), ((c = F) ==> (((~ c) ==> d) = (c \/ d))) |- (((~ c) ==> d) = (c \/ d))
T c==> c==> c= f0 cT c= c==> c~ f0 f1 c\/ f0 f1 c==> c==> c= f0 cF c= c==> c~ f0 f1 c\/ f0 f1 c= c==> c~ f0 f1 c\/ f0 f1
+ (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))))
T c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f4 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f4 cNIL * part cstem cCONS f2 cCONS f1 cCONS f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f3 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f4 cNIL c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f4 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f3 cNIL
- |- ((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0)))
T c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0
- (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), (((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> (((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> (((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL)))))) /\ F)
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> c==> c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c= ccc_uh f4 cCONS f1 cCONS f0 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f4 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c/\ c==> c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c= ccc_uh f4 cCONS f1 cCONS f0 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f4 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL cF
+ |- (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))) ==> (~ (u0 = u1)))
T c==> cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c~ c= f0 f1
+ |- ((((u0 INSERT (u1 INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY))) = (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY))))
T c= c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cedgeX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL c~ c= * * part cINTER * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f4 cNIL part cEMPTY c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f4 cNIL part cEMPTY * * part cedgeX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL c~ c= * * part cINTER * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f4 cNIL part cEMPTY
+ |- ((c = F) ==> (((~ c) ==> d) = (c \/ d)))
T c==> c= f0 cF c= c==> c~ f0 f1 c\/ f0 f1
+ |- (((u0 INSERT (u1 INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))) ==> (~ (u0 = u1)))
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cedgeX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL c~ c= f0 f1
- |- (((((u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) ==> B) /\ (u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))) ==> B) ==> ((((u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) ==> B) /\ (u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))) ==> B))
T c==> c==> c/\ c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c/\ c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
+ (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((\x. ((\v. (v = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) x)) (stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL * / * / c= b1 * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL b0 * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL
- |- ((!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2))))) = T)
T c= ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cT
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))))
T c==> c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f2 cCONS f1 cCONS f4 cNIL c/\ c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL c==> c= ccc_ke f0 cCONS f2 cCONS f1 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f3 cNIL c/\ c? / cleaf b0 cCONS f1 cCONS f2 cCONS f3 cNIL c? / cleaf b0 cCONS f2 cCONS f1 cCONS f4 cNIL
+ (~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) |- (?x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x)))
T c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL b0 c? / c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL b0
- |- ((!x. ((P x) \/ Q)) = ((!x. (P x)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) INSERT EMPTY)))))
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c/\ c? / cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL c/\ c? / cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f0 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f0 cCONS f2 cNIL part cEMPTY
+ |- (((~ (P b)) ==> F) = (P b))
T c= c==> c~ * f0 f1 cF * f0 f1
+ |- ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))))))))
T c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f2 f3 c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f1 cCONS f0 cCONS f2 cNIL c/\ c? / cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL c? / cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL
- (x = u1), ((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) |- (~ (u1 = u0))
T c==> c= f0 f1 c==> c/\ c\/ c\/ c= f0 f2 c= f0 f1 c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c~ c= f1 f2
- |- (((((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F) ==> ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F)) ==> (((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F) ==> ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F))) = (((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F) ==> ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F)))
T c= c==> c==> c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c==> c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c==> c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF
+ |- ((\u2. (!V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F))))))))))))) u2)
T * / ! c==> csaturated b1 c==> cpacking b1 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cleaf b1 cCONS f0 cCONS f1 cCONS b0 cNIL c==> cleaf b1 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf b1 cCONS f1 cCONS f0 cCONS b0 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS b0 cNIL * part cstem cCONS f1 cCONS f0 cCONS b0 cNIL c==> c= ccc_ke b1 cCONS f0 cCONS f1 cCONS f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b0 f2 c==> c= * * part ccc_cell b1 cCONS f0 cCONS f1 cCONS f2 cNIL * * part ccc_cell b1 cCONS f0 cCONS f1 cCONS b0 cNIL c==> c~ c/\ c? / cleaf b2 cCONS f1 cCONS f0 cCONS b0 cNIL c? / cleaf b2 cCONS f0 cCONS f1 cCONS f2 cNIL cF f3
+ (!ul. (!P. (((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) ==> (P (stem ul))))) |- ((\ul. (!P. (((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) ==> (P (stem ul))))) ul)
T c==> ! ! c==> c/\ c? / cleaf b2 b0 * b1 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * b1 * part cstem b0 * / ! c==> c/\ c? / cleaf b2 b0 * b1 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * b1 * part cstem b0 f0
+ (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (((((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ ((((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL))))) ==> F)) ==> ((((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> (((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL)))))) ==> F)) = ((((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> (((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL)))))) ==> F))
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c= c==> c/\ c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_uh f4 cCONS f1 cCONS f0 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f4 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL cF c==> c==> c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c= ccc_uh f4 cCONS f1 cCONS f0 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f4 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL cF c==> c==> c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c= ccc_uh f4 cCONS f1 cCONS f0 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f4 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL cF
+ (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((\x. ((\v. (v = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) x)) (stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL * / * / c= b1 * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL b0 * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL
- (u0 = u1), ((u0 = v) /\ (u1 = u)) |- (F = F)
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c= cF cF
- |- (T = (((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0))) /\ (((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) = (SUC (NUMERAL (BIT0 (BIT1 _0))))))))
T c= cT c/\ c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0 c/\ c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 c= cNUMERAL cBIT1 cBIT1 c_0 cSUC cNUMERAL cBIT0 cBIT1 c_0
+ |- (T = ((u0 INSERT (u1 INSERT (u2 INSERT EMPTY))) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))))
T c= cT cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((!y. (((\x. ((\v. ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = v))) x)) y) = ((\v. ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = v))) y))) ==> ((\y. (((\x. ((\v. ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = v))) x)) y) = ((\v. ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = v))) y))) (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) = ((\y. (((\x. ((\v. ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = v))) x)) y) = ((\v. ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = v))) y))) (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))))
T c= c==> ! c= * / * / c/\ c? / cleaf b3 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY b2 b1 b0 * / c/\ c? / cleaf b2 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY b1 b0 * / c= * / * / c/\ c? / cleaf b3 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY b2 b1 b0 * / c/\ c? / cleaf b2 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY b1 b0 * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL * / c= * / * / c/\ c? / cleaf b3 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY b2 b1 b0 * / c/\ c? / cleaf b2 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY b1 b0 * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL
+ (!x. (!s. (!t. (((x IN t) /\ (t SUBSET s)) ==> (x IN s))))) |- ((!x. (!s. (!t. (((x IN t) /\ (t SUBSET s)) ==> (x IN s))))) /\ (!x. (!s. ((?t. ((x IN t) /\ (t SUBSET s))) ==> (x IN s)))))
T c==> ! ! ! c==> c/\ cIN b0 b2 cSUBSET b2 b1 cIN b0 b1 c/\ ! ! ! c==> c/\ cIN b0 b2 cSUBSET b2 b1 cIN b0 b1 ! ! c==> c? / c/\ cIN b0 b2 cSUBSET b2 b1 cIN b0 b1
+ |- ((\q'. ((((((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL)))))) = p') ==> ((p' ==> ((u2 = u2') = q')) ==> ((((((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL)))))) ==> (u2 = u2')) = (p' ==> q'))))) q')
T * / c==> c= c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cNIL f5 c==> c==> f5 c= c= f2 f4 b0 c= c==> c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cNIL c= f2 f4 c==> f5 b0 f6
+ (?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) |- ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) /\ (~ (u0 = u1)))
T c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2
+ |- ((c = T) ==> (((~ c) ==> d) = (c \/ d)))
T c==> c= f0 cT c= c==> c~ f0 f1 c\/ f0 f1
- |- ((?v'. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v')) \/ ((u0 = v') /\ (u1 = u))))) = (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (?v. (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u))))))
T c= c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f4 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f5 c~ c= f4 f5 c\/ c/\ c= f1 f4 c= f2 b0 c/\ c= f1 b0 c= f2 f4 c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f4 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f5 c~ c= f4 f5 c? / c\/ c/\ c= f1 f4 c= f2 b0 c/\ c= f1 b0 c= f2 f4
- (~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) |- ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) /\ F)
T c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c/\ c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF
+ (~ (u0 = u1)), (packing V), (saturated V), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) \/ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) ==> (u2 = u2'))
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f3 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL c==> c\/ c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS f1 cCONS f0 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f4 cNIL c==> c= ccc_ke f2 cCONS f0 cCONS f1 cCONS f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c= f3 f4
+ (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) /\ (((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))))))) ==> (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL)))))) ==> F)
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c==> c/\ csaturated f4 c/\ cpacking f4 c/\ cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c/\ cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c/\ c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL c/\ c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL c/\ c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= cCONS f0 cCONS f1 cCONS f3 cNIL cCONS f0 cCONS f1 cCONS f2 cNIL c= ccc_uh f4 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f4 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL cF
+ (~ (u2 = u2')), (u2' = u2) |- ((~ (u2 = u2')) /\ F)
T c==> c~ c= f0 f1 c==> c= f1 f0 c/\ c~ c= f0 f1 cF
+ (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((~ (((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> (((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL))))))) = (~ (((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ ((u0 = u1) /\ ((u1 = u0) /\ (u2' = u2))))))))))) ==> (((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL))))))))
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c= c~ c==> c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c= ccc_uh f4 cCONS f1 cCONS f0 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f4 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL c~ c==> c/\ csaturated f4 c/\ cpacking f4 c/\ cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c/\ c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f1 cCONS f0 cCONS f2 cNIL c/\ c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c/\ c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c/\ c= f0 f1 c/\ c= f1 f0 c= f3 f2 c= ccc_uh f4 cCONS f1 cCONS f0 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f4 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL
- |- ((_7137672 = _7137675) ==> ((~ (_7137671 = _7137674)) \/ ((~ (_7137670 = _7137673)) \/ ((((hull _7137673) _7137674) _7137675) \/ (~ (((hull _7137670) _7137671) _7137672))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ chull f5 f3 f1 c~ chull f4 f2 f0
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul)))))) |- ((!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul))))) = T)
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 cIN * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * * part cedgeX b0 * * part ccc_cell b0 b1 c= ! c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 b0 cIN * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 b0 cT
+ (~ ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2))))), (((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))) ==> F), (((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) ==> F) |- F
T c==> c~ c= c\/ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c==> c/\ c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 cF c==> c==> c/\ c\/ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 cF cF
+ (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL _0)) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) NIL))))) ==> (~ (((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL)))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c= ccc_uh f0 cCONS f2 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f2 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f2 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f1 cCONS f3 cNIL cNIL c~ c= ccc_uh f0 cCONS f2 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f4 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f4 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f4 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f4 cNIL cNIL
+ (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))), (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)), (x = u1) |- ((x = u1) /\ F)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f1 c/\ c= f3 f1 cF
+ |- (((u2' IN ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY))) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))) = ((\t. ((u2' IN t) /\ (t SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))))) ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY))))
T c= c/\ cIN f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * / c/\ cIN f0 b0 cSUBSET b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
+ |- (((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))))))))))) = T)
T c= c==> csaturated f0 c==> cpacking f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f3 cNIL c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f3 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f4 cNIL cT
+ |- (((!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ ((((cc_cell V) ul) = ((cc_cell V) vl)) /\ (((stem ul) = (stem vl)) /\ ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (ul = vl))))))))) ==> (((cc_uh V) vl) = ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))))))) ==> ((\ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ ((((cc_cell V) ul) = ((cc_cell V) vl)) /\ (((stem ul) = (stem vl)) /\ ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (ul = vl))))))))) ==> (((cc_uh V) vl) = ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))))))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) = ((\ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ ((((cc_cell V) ul) = ((cc_cell V) vl)) /\ (((stem ul) = (stem vl)) /\ ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (ul = vl))))))))) ==> (((cc_uh V) vl) = ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))))))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))
T c= c==> ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 b0 c/\ cleaf f0 b1 c/\ c= * * part ccc_cell f0 b0 * * part ccc_cell f0 b1 c/\ c= * part cstem b0 * part cstem b1 c/\ c= ccc_ke f0 b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= b0 b1 c= ccc_uh f0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b0 cNIL * / ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 b0 c/\ cleaf f0 b1 c/\ c= * * part ccc_cell f0 b0 * * part ccc_cell f0 b1 c/\ c= * part cstem b0 * part cstem b1 c/\ c= ccc_ke f0 b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= b0 b1 c= ccc_uh f0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b0 cNIL cCONS f1 cCONS f2 cCONS f3 cNIL * / ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 b0 c/\ cleaf f0 b1 c/\ c= * * part ccc_cell f0 b0 * * part ccc_cell f0 b1 c/\ c= * part cstem b0 * part cstem b1 c/\ c= ccc_ke f0 b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= b0 b1 c= ccc_uh f0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b0 cNIL cCONS f1 cCONS f2 cCONS f3 cNIL
+ ((A = T) ==> (((A ==> B) /\ A) ==> B)), ((A = F) ==> (((A ==> B) /\ A) ==> B)) |- (((A ==> B) /\ A) ==> B)
T c==> c==> c= f0 cT c==> c/\ c==> f0 f1 f0 f1 c==> c==> c= f0 cF c==> c/\ c==> f0 f1 f0 f1 c==> c/\ c==> f0 f1 f0 f1
+ (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> (u2 = u2'))
T c==> cpacking f0 c==> csaturated f0 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c= f4 f3
+ (~ (u2 = u2')), (u2' = u2) |- ((u2 = u2) ==> F)
T c==> c~ c= f0 f1 c==> c= f1 f0 c==> c= f0 f0 cF
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- |- ((\u1. (!u0. (!u2'. (!V. ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F))))) u1)
T * / ! ! ! c==> c~ c==> csaturated b3 c==> cpacking b3 c==> ! c= caff_gt * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b4 caff_gt * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 c==> cleaf b3 cCONS b1 cCONS b0 cCONS f0 cNIL c==> cleaf b3 cCONS b1 cCONS b0 cCONS b2 cNIL c==> c~ c= b1 b0 c==> c/\ cleaf b3 cCONS b0 cCONS b1 cCONS f0 cNIL ! c= cstem cCONS b1 cCONS b0 cCONS f0 cNIL b4 cstem cCONS b0 cCONS b1 cCONS f0 cNIL b4 c==> c~ ! c~ c/\ caff_gt * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 ccc_cell b3 cCONS b1 cCONS b0 cCONS b2 cNIL b4 c~ ! c~ c/\ ccc_cell b3 cCONS b1 cCONS b0 cCONS b2 cNIL b4 caff_gt * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b4 cF f1
+ (u0 = u1), (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))) |- (((u0 = u) /\ (u1 = v)) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ cVX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL f4 c/\ cVX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL f5 c~ c= f4 f5 c\/ c/\ c= f0 f4 c= f1 f5 c/\ c= f0 f5 c= f1 f4 c==> c/\ c= f0 f4 c= f1 f5 cF
+ ((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))) |- (((x = u1) \/ (x = u2)) ==> F)
T c==> c/\ c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c\/ c= f0 f2 c= f0 f3 cF
+ |- (((u1 = u1) ==> F) = F)
T c= c==> c= f0 f0 cF cF
- (!ul. (!P. (((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) ==> (P (stem ul))))), ((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) |- (((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) /\ (P (stem ul)))
T c==> ! ! c==> c/\ c? / cleaf b2 b0 * b1 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * b1 * part cstem b0 c==> c/\ c? / cleaf b0 f0 * f1 * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 part cEMPTY c/\ c/\ c? / cleaf b0 f0 * f1 * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 part cEMPTY * f1 * part cstem f0
+ (~ (u0 = u1)), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) \/ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (u2 = u2')
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f3 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL c==> c\/ c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS f1 cCONS f0 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f4 cNIL c= f3 f4
+ |- (((u1 = u1) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u1)) = (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u1))
T c= c==> c= f0 f0 chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f0 chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f0
- (_7137366 = _7137369), (_7137367 = _7137370), (_7137368 = _7137371) |- ((((aff_gt _7137369) _7137370) _7137371) \/ (~ (((aff_gt _7137366) _7137367) _7137368)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ caff_gt f1 f3 f5 c~ caff_gt f0 f2 f4
+ (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))), ((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))), (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') |- (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c\/ c= f3 f0 c\/ c= f3 f1 c\/ c= f3 f4 c= f3 f2 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- |- ((!u0. (!u2'. (!V. ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))))) = T)
T c= ! ! ! c==> csaturated b2 c==> cpacking b2 c==> ! c= caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b3 caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 c==> cleaf b2 cCONS b0 cCONS f0 cCONS f1 cNIL c==> cleaf b2 cCONS b0 cCONS f0 cCONS b1 cNIL c==> c~ c= b0 f0 c==> c/\ cleaf b2 cCONS f0 cCONS b0 cCONS f1 cNIL ! c= cstem cCONS b0 cCONS f0 cCONS f1 cNIL b3 cstem cCONS f0 cCONS b0 cCONS f1 cNIL b3 c==> c~ ! c~ c/\ caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 ccc_cell b2 cCONS b0 cCONS f0 cCONS b1 cNIL b3 c~ ! c~ c/\ ccc_cell b2 cCONS b0 cCONS f0 cCONS b1 cNIL b3 caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b3 cT
+ (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ ((\x. ((\v. ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = v))) x)) (((EL (NUMERAL _0)) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) INSERT EMPTY)))) ==> ((\x. ((\v. ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = v))) x)) (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) = ((\x. ((\v. ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = v))) x)) (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))))
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c= c==> c/\ c? / cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL * / * / c/\ c? / cleaf b2 cCONS f0 cCONS f1 cCONS f3 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY b1 b0 * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f0 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f0 cCONS f2 cNIL part cEMPTY * / * / c/\ c? / cleaf b2 cCONS f0 cCONS f1 cCONS f3 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY b1 b0 * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL * / * / c/\ c? / cleaf b2 cCONS f0 cCONS f1 cCONS f3 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY b1 b0 * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL
+ |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))))))
T c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f4 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f4 cNIL * part cstem cCONS f2 cCONS f1 cCONS f4 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f3 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f4 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f3 cNIL
+ (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (((((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ ((((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL))))) ==> F)) ==> ((((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL)))))) ==> F)) = ((((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL)))))) ==> F))
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c= c==> c/\ c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_uh f4 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f4 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL cF c==> c==> c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c= ccc_uh f4 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f4 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL cF c==> c==> c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c= ccc_uh f4 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f4 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL cF
+ (u0 = u1), (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))), (((u0 = v) /\ (u1 = u)) ==> F) |- F
T c==> c= f0 f1 c==> c/\ c/\ cVX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL f4 c/\ cVX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL f5 c~ c= f4 f5 c\/ c/\ c= f0 f4 c= f1 f5 c/\ c= f0 f5 c= f1 f4 c==> c==> c/\ c= f0 f5 c= f1 f4 cF cF
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul)))))) |- ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul)))))) /\ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul)))))))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 cIN * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * * part cedgeX b0 * * part ccc_cell b0 b1 c/\ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 cIN * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * * part cedgeX b0 * * part ccc_cell b0 b1 ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 cIN * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * * part cedgeX b0 * * part ccc_cell b0 b1
- (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) |- ((EMPTY = (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))) = F)
T c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c= c= part cEMPTY * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL cF
+ |- (((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))))) = ((!x. ((x IN (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) ==> (x IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))))) ==> ((u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) ==> (!x. ((x IN (u0 INSERT (u1 INSERT (u2' INSERT (u2 INSERT EMPTY))))) ==> (x IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))))))))
T c= c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((\p'. (!q'. ((((packing V) /\ ((saturated V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) IN (mcell_set V)) /\ (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))))))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL))))) = q')) ==> ((((packing V) /\ ((saturated V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) IN (mcell_set V)) /\ (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL)))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cIN * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * part cmcell_set f0 c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * part ccc_A0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c==> c==> b0 c= c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL b1 c= c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cIN * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * part cmcell_set f0 c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * part ccc_A0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL c==> b0 b1 f5
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ==> ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) = ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL
+ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) |- ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))))))))
T c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f2 f3 c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL c/\ c? / cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL c? / cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL
+ (~ (u0 = u1)), (packing V), (saturated V), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (u2 = u2')
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f2 cCONS f1 cCONS f0 cCONS f4 cNIL c==> c= ccc_ke f2 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f4 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f4 cNIL * part cstem cCONS f1 cCONS f0 cCONS f4 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c= f4 f3
- (_7137567 = _7137569), (_7137566 = _7137568) |- ((_7137567 = _7137569) /\ (((CONS _7137566) _7137567) = ((CONS _7137568) _7137569)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= cCONS f2 f0 cCONS f3 f1
- (~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) |- F
T c==> c~ c==> csaturated f0 c==> cpacking f0 c==> ! c= caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL ! c= cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 c~ ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF
+ (x = u2), ((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))) |- ((u2 = u2) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c/\ c~ c= f0 f2 c~ c= f0 f3 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c==> c= f1 f1 cF
- |- ((~ (_7137548 = _7137549)) \/ ((saturated _7137549) \/ (~ (saturated _7137548))))
T c\/ c~ c= f0 f1 c\/ csaturated f1 c~ csaturated f0
+ |- ((?w. ((u0 INSERT (u1 INSERT (u2' INSERT (u2 INSERT EMPTY)))) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (w INSERT EMPTY)))))) = ((\v. (?w. ((u0 INSERT (u1 INSERT (u2' INSERT (u2 INSERT EMPTY)))) SUBSET ((hull affine) (u0 INSERT (v INSERT (w INSERT EMPTY))))))) u1))
T c= c? / cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * / c? / cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul)))))), ((packing V) /\ ((saturated V) /\ ((leaf V) ul))) |- (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) /\ ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul))))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 cIN * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * * part cedgeX b0 * * part ccc_cell b0 b1 c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 f1 c/\ c/\ cpacking f0 c/\ csaturated f0 cleaf f0 f1 cIN * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 f1
+ (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))
T c==> c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f2 cCONS f1 cCONS f4 cNIL c/\ c? / cleaf b0 cCONS f1 cCONS f2 cCONS f3 cNIL c? / cleaf b0 cCONS f2 cCONS f1 cCONS f4 cNIL
+ (!x. (!s. (!t. (((x IN t) /\ (t SUBSET s)) ==> (x IN s))))) |- (!s. ((?t. ((x IN t) /\ (t SUBSET s))) ==> (x IN s)))
T c==> ! ! ! c==> c/\ cIN b0 b2 cSUBSET b2 b1 cIN b0 b1 ! c==> c? / c/\ cIN f0 b1 cSUBSET b1 b0 cIN f0 b0
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- ((\s. ((coplanar s) = (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) s)
T * / c= ccoplanar b0 c? / c? / c? / cSUBSET b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
- |- ((!V. ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) = T)
T c= ! c==> c? / c? / c/\ c/\ cVX b0 * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS f2 cNIL b1 c/\ cVX b0 * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS f2 cNIL b2 c~ c= b1 b2 c\/ c/\ c= f0 b1 c= f1 b2 c/\ c= f0 b2 c= f1 b1 c~ c= f0 f1 cT
+ ((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) |- (((x = u0) \/ (x = u1)) ==> F)
T c==> c/\ c\/ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c==> c\/ c= f0 f1 c= f0 f2 cF
+ |- ((\V. (!ul. (!X. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ ((X IN (mcell_set V)) /\ (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) X)) /\ ((~ ((X INTER (cc_A0 ul)) = EMPTY)) /\ (~ (X = ((cc_cell V) ul))))))))) ==> (X = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL))))))))) V)
T * / ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf b0 b1 c/\ cIN b2 * part cmcell_set b0 c/\ cIN * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * * part cedgeX b0 b2 c/\ c~ c= * * part cINTER b2 * part ccc_A0 b1 part cEMPTY c~ c= b2 * * part ccc_cell b0 b1 c= b2 * * part ccc_cell b0 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b1 cNIL f0
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- (_7137335 = _7137338), (_7137337 = _7137340) |- ((_7137336 = _7137339) ==> ((((VX _7137338) _7137339) _7137340) \/ (~ (((VX _7137335) _7137336) _7137337))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ cVX f1 f5 f3 c~ cVX f0 f4 f2
- (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u))))), (u0 = u1) |- ((?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u))))) /\ F)
T c==> c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f4 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c~ c= f4 b0 c\/ c/\ c= f1 f4 c= f2 b0 c/\ c= f1 b0 c= f2 f4 c==> c= f1 f2 c/\ c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f4 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c~ c= f4 b0 c\/ c/\ c= f1 f4 c= f2 b0 c/\ c= f1 b0 c= f2 f4 cF
+ ((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))), ((x = u2) ==> F), (((x = u0) \/ (x = u1)) ==> F) |- F
T c==> c/\ c\/ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c==> c==> c= f0 f3 cF c==> c==> c\/ c= f0 f1 c= f0 f2 cF cF
+ (!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) |- (!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) \/ (~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))))
T c==> ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c\/ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0
+ (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = u2) |- ((~ ((((EL (NUMERAL _0)) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((u2 = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))) = (~ ((((EL (NUMERAL _0)) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))))
T c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL f2 c= c~ c/\ c= cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f0 cCONS f3 cNIL c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL c_0 cCONS f1 cCONS f0 cCONS f3 cNIL c/\ c= f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f4 cCONS f1 cCONS f0 cCONS f3 cNIL c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f4 cCONS f0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f0 cCONS f3 cNIL c~ c/\ c= cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f0 cCONS f3 cNIL c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL c_0 cCONS f1 cCONS f0 cCONS f3 cNIL c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f4 cCONS f1 cCONS f0 cCONS f3 cNIL c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f4 cCONS f0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f0 cCONS f3 cNIL
+ (P c), (b = c) |- ((P c) /\ (P b))
T c==> * f0 f1 c==> c= f2 f1 c/\ * f0 f1 * f0 f2
+ |- ((!x. (((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) \/ (~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) /\ ((~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)) \/ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x)))) = ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) \/ (~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x)))) /\ (!x. ((~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)) \/ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x)))))
T c= ! c/\ c\/ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c\/ c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ ! c\/ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c\/ c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0
+ (~ (u0 = u1)), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY))) /\ (((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) \/ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL)))))) ==> (u2 = u2'))) ==> (((((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) \/ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL))))))) ==> (u2 = u2'))) = (((((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) \/ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL))))))) ==> (u2 = u2')))
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f3 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f4 cNIL c= c==> c/\ c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY * * part cedgeX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL c~ c= * * part cINTER * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY c==> c\/ c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL c= f3 f4 c==> c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY * * part cedgeX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL c~ c= * * part cINTER * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY c\/ c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL c= f3 f4 c==> c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY * * part cedgeX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL c~ c= * * part cINTER * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY c\/ c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL c= f3 f4
+ |- (((!V. (!ul. ((((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0)))) \/ (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ==> ((\V. (!ul. ((((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0)))) \/ (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) V)) = ((\V. (!ul. ((((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0)))) \/ (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) V))
T c= c==> ! ! c\/ c= ccc_ke b0 b1 cNUMERAL cBIT1 cBIT1 c_0 c= ccc_ke b0 b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * / ! c\/ c= ccc_ke b0 b1 cNUMERAL cBIT1 cBIT1 c_0 c= ccc_ke b0 b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0 * / ! c\/ c= ccc_ke b0 b1 cNUMERAL cBIT1 cBIT1 c_0 c= ccc_ke b0 b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0
- (_7137564 = _7137565) |- ((_7137564 = _7137565) /\ ((NUMERAL _7137564) = (NUMERAL _7137565)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) INSERT EMPTY)))))
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c/\ c? / cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL c/\ c? / cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f0 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f0 cCONS f2 cNIL part cEMPTY
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
+ (~ (u0 = u1)), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) \/ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (u2 = u2')
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= ccc_ke f2 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f4 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f4 cNIL * part cstem cCONS f1 cCONS f0 cCONS f4 cNIL c==> c\/ c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f2 cCONS f1 cCONS f0 cCONS f4 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f4 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c= f4 f3
+ (u0 = u1), ((u0 = u) /\ (u1 = v)) |- ((~ (u = v)) = (~ (v = v)))
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c= c~ c= f2 f3 c~ c= f3 f3
+ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x)) |- ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))
T c==> c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3 ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL f3 c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY f3 c/\ ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL f3 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY f3
+ |- ((!V. (((leaf V) ul) ==> ((stem ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))))) = ((?V. ((leaf V) ul)) ==> ((stem ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))))
T c= ! c==> cleaf b0 f0 c= * part cstem f0 * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 part cEMPTY c==> c? / cleaf b0 f0 c= * part cstem f0 * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 part cEMPTY
- (~ F), (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)), (x = u2'), (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') |- ((~ F) /\ F)
T c==> c~ cF c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f4 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c/\ c~ cF cF
+ (packing V), (saturated V), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))))))))) ==> (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> (u2 = u2'))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f4 cNIL part cEMPTY c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c= cCONS f1 cCONS f2 cCONS f3 cNIL cCONS f1 cCONS f2 cCONS f4 cNIL c= f4 f3
- |- (((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F) = ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x))))))))))))))
T c= c==> c~ c==> csaturated f0 c==> cpacking f0 c==> ! c= caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL ! c= cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 c~ ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF c==> csaturated f0 c==> cpacking f0 c==> ! c= caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL ! c= cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 c~ ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0
+ |- (T = (((T ==> B) /\ T) ==> B))
T c= cT c==> c/\ c==> cT f0 cT f0
- (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) |- (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY))
T c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY
- |- (((!u2'. (!V. ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F))) ==> ((\u2'. (!V. ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F))) u2')) = ((\u2'. (!V. ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F))) u2'))
T c= c==> ! ! c==> c~ c==> csaturated b1 c==> cpacking b1 c==> ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b2 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY b2 c==> cleaf b1 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf b1 cCONS f0 cCONS f1 cCONS b0 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf b1 cCONS f1 cCONS f0 cCONS f2 cNIL ! c= cstem cCONS f0 cCONS f1 cCONS f2 cNIL b2 cstem cCONS f1 cCONS f0 cCONS f2 cNIL b2 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY b2 ccc_cell b1 cCONS f0 cCONS f1 cCONS b0 cNIL b2 c~ ! c~ c/\ ccc_cell b1 cCONS f0 cCONS f1 cCONS b0 cNIL b2 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b2 cF * / ! c==> c~ c==> csaturated b1 c==> cpacking b1 c==> ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b2 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY b2 c==> cleaf b1 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf b1 cCONS f0 cCONS f1 cCONS b0 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf b1 cCONS f1 cCONS f0 cCONS f2 cNIL ! c= cstem cCONS f0 cCONS f1 cCONS f2 cNIL b2 cstem cCONS f1 cCONS f0 cCONS f2 cNIL b2 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY b2 ccc_cell b1 cCONS f0 cCONS f1 cCONS b0 cNIL b2 c~ ! c~ c/\ ccc_cell b1 cCONS f0 cCONS f1 cCONS b0 cNIL b2 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b2 cF f3 * / ! c==> c~ c==> csaturated b1 c==> cpacking b1 c==> ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b2 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY b2 c==> cleaf b1 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf b1 cCONS f0 cCONS f1 cCONS b0 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf b1 cCONS f1 cCONS f0 cCONS f2 cNIL ! c= cstem cCONS f0 cCONS f1 cCONS f2 cNIL b2 cstem cCONS f1 cCONS f0 cCONS f2 cNIL b2 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY b2 ccc_cell b1 cCONS f0 cCONS f1 cCONS b0 cNIL b2 c~ ! c~ c/\ ccc_cell b1 cCONS f0 cCONS f1 cCONS b0 cNIL b2 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b2 cF f3
+ |- ((\u0. (!u2. (!V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F)))))))))))))) u0)
T * / ! ! c==> csaturated b2 c==> cpacking b2 c==> c= * * part caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cleaf b2 cCONS b0 cCONS f0 cCONS b1 cNIL c==> cleaf b2 cCONS b0 cCONS f0 cCONS f1 cNIL c==> c~ c= b0 f0 c==> c/\ cleaf b2 cCONS f0 cCONS b0 cCONS b1 cNIL c= * part cstem cCONS b0 cCONS f0 cCONS b1 cNIL * part cstem cCONS f0 cCONS b0 cCONS b1 cNIL c==> c= ccc_ke b2 cCONS b0 cCONS f0 cCONS f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b1 f1 c==> c= * * part ccc_cell b2 cCONS b0 cCONS f0 cCONS f1 cNIL * * part ccc_cell b2 cCONS b0 cCONS f0 cCONS b1 cNIL c==> c~ c/\ c? / cleaf b3 cCONS f0 cCONS b0 cCONS b1 cNIL c? / cleaf b3 cCONS b0 cCONS f0 cCONS f1 cNIL cF f2
- ((u0 = u) /\ (u1 = v)), (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))) |- (((VX V) ((cc_cell V) ((CONS u) ((CONS v) ((CONS u2) NIL))))) v)
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f2 cCONS f5 cNIL f1 c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f2 cCONS f5 cNIL f3 c~ c= f1 f3 c\/ c/\ c= f0 f1 c= f2 f3 c/\ c= f0 f3 c= f2 f1 cVX f4 * * part ccc_cell f4 cCONS f1 cCONS f3 cCONS f5 cNIL f3
+ (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)), (x = u2) |- (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2))
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f2 c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2
+ |- ((!u2'. (!u1. (!u0. (!u2. (!V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))))))))))))))) = (!u2'. (!u1. (!u0. (!u2. (!V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F)))))))))))))))))
T c= ! ! ! ! ! c==> csaturated b4 c==> cpacking b4 c==> c= * * part caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 part cEMPTY * * part caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c==> cleaf b4 cCONS b2 cCONS b1 cCONS b3 cNIL c==> cleaf b4 cCONS b2 cCONS b1 cCONS b0 cNIL c==> c~ c= b2 b1 c==> c/\ cleaf b4 cCONS b1 cCONS b2 cCONS b3 cNIL c= * part cstem cCONS b2 cCONS b1 cCONS b3 cNIL * part cstem cCONS b1 cCONS b2 cCONS b3 cNIL c==> c= ccc_ke b4 cCONS b2 cCONS b1 cCONS b0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b3 b0 c==> c= * * part ccc_cell b4 cCONS b2 cCONS b1 cCONS b0 cNIL * * part ccc_cell b4 cCONS b2 cCONS b1 cCONS b3 cNIL c/\ c? / cleaf b5 cCONS b1 cCONS b2 cCONS b3 cNIL c? / cleaf b5 cCONS b2 cCONS b1 cCONS b0 cNIL ! ! ! ! ! c==> csaturated b4 c==> cpacking b4 c==> c= * * part caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 part cEMPTY * * part caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c==> cleaf b4 cCONS b2 cCONS b1 cCONS b3 cNIL c==> cleaf b4 cCONS b2 cCONS b1 cCONS b0 cNIL c==> c~ c= b2 b1 c==> c/\ cleaf b4 cCONS b1 cCONS b2 cCONS b3 cNIL c= * part cstem cCONS b2 cCONS b1 cCONS b3 cNIL * part cstem cCONS b1 cCONS b2 cCONS b3 cNIL c==> c= ccc_ke b4 cCONS b2 cCONS b1 cCONS b0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b3 b0 c==> c= * * part ccc_cell b4 cCONS b2 cCONS b1 cCONS b0 cNIL * * part ccc_cell b4 cCONS b2 cCONS b1 cCONS b3 cNIL c==> c~ c/\ c? / cleaf b5 cCONS b1 cCONS b2 cCONS b3 cNIL c? / cleaf b5 cCONS b2 cCONS b1 cCONS b0 cNIL cF
- (_7137560 = _7137561) |- ((_7137560 = _7137561) /\ ((BIT1 _7137560) = (BIT1 _7137561)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT1 f0 cBIT1 f1
- |- ((!u2. (!u1. (!u0. (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))))) = (!u2. (!u1. (!u0. ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F)))))
T c= ! ! ! ! c= c\/ c\/ c= b3 b2 c= b3 b1 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 ! ! ! c==> c~ ! c= c\/ c\/ c= b3 b2 c= b3 b1 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 cF
- ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F), (((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F) ==> ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F)) |- ((((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F) ==> ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F)) /\ ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F))
T c==> c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c==> c==> c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c/\ c==> c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF
+ (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))), (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)), (x = u0) |- ((x = u0) /\ F)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f0 c/\ c= f3 f0 cF
+ |- (((!V. (!ul. (!pp. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ ((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = pp)))) ==> (~ (coplanar (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (pp INSERT EMPTY)))))))))) ==> ((\V. (!ul. (!pp. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ ((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = pp)))) ==> (~ (coplanar (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (pp INSERT EMPTY)))))))))) V)) = ((\V. (!ul. (!pp. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ ((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = pp)))) ==> (~ (coplanar (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (pp INSERT EMPTY)))))))))) V))
T c= c==> ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf b0 b1 c= cCOND c= ccc_ke b0 b1 cNUMERAL cBIT1 cBIT1 c_0 cmxi b0 ccc_uh b0 b1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 b2 c~ ccoplanar * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT b2 part cEMPTY * / ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf b0 b1 c= cCOND c= ccc_ke b0 b1 cNUMERAL cBIT1 cBIT1 c_0 cmxi b0 ccc_uh b0 b1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 b2 c~ ccoplanar * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT b2 part cEMPTY f0 * / ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf b0 b1 c= cCOND c= ccc_ke b0 b1 cNUMERAL cBIT1 cBIT1 c_0 cmxi b0 ccc_uh b0 b1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 b2 c~ ccoplanar * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT b2 part cEMPTY f0
+ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))), (!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) |- ((((\x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))) x) ==> F) = T)
T c==> ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c==> ! c= caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c= c==> * / c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 f5 cF cT
+ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))), (!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) |- (((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x)) ==> F)
T c==> ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c==> ! c= caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f5 ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f5 cF
+ (c = F) |- ((((~ c) ==> d) = (c \/ d)) = (((~ F) ==> d) = (F \/ d)))
T c==> c= f0 cF c= c= c==> c~ f0 f1 c\/ f0 f1 c= c==> c~ cF f1 c\/ cF f1
+ (x = u1), ((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))) |- ((u1 = u1) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c/\ c~ c= f0 f2 c~ c= f0 f1 c~ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c==> c= f1 f1 cF
+ (~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((!V. (~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ==> F) |- F
T c==> c~ c/\ c? / cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c? / cleaf b0 cCONS f1 cCONS f0 cCONS f3 cNIL c==> c/\ cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c= * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL c==> c==> ! c~ cleaf b0 cCONS f1 cCONS f0 cCONS f3 cNIL cF cF
+ (b = F) |- ((((b /\ (~ c)) ==> d) = (b ==> (c \/ d))) = (((F /\ (~ c)) ==> d) = (F ==> (c \/ d))))
T c==> c= f0 cF c= c= c==> c/\ f0 c~ f1 f2 c==> f0 c\/ f1 f2 c= c==> c/\ cF c~ f1 f2 c==> cF c\/ f1 f2
- |- ((~ (_7137564 = _7137565)) \/ ((NUMERAL _7137564) = (NUMERAL _7137565)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- ((u0 = u) /\ (u1 = v)), (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))) |- (((VX V) ((cc_cell V) ((CONS u) ((CONS v) ((CONS u2) NIL))))) u)
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f2 cCONS f5 cNIL f1 c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f2 cCONS f5 cNIL f3 c~ c= f1 f3 c\/ c/\ c= f0 f1 c= f2 f3 c/\ c= f0 f3 c= f2 f1 cVX f4 * * part ccc_cell f4 cCONS f1 cCONS f3 cCONS f5 cNIL f1
- (_7137548 = _7137549) |- ((_7137548 = _7137549) /\ ((saturated _7137549) \/ (~ (saturated _7137548))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ csaturated f1 c~ csaturated f0
+ (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))), (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)), (((x = u1) \/ ((x = u2') \/ (x = u2))) ==> F), ((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) |- F
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> c\/ c= f3 f1 c\/ c= f3 f4 c= f3 f2 cF c==> c\/ c= f3 f0 c\/ c= f3 f1 c\/ c= f3 f4 c= f3 f2 cF
- |- ((_7137676 = _7137678) ==> ((~ (_7137677 = _7137679)) \/ ((_7137676 INSERT _7137677) = (_7137678 INSERT _7137679))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))) |- (((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) _7137351) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) _7137351)) ==> F)
T c==> ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c==> c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f5 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY f5 cF
+ (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (((((EL (NUMERAL _0)) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((u2 = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))) ==> F)
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c/\ c= cEL cNUMERAL c_0 cCONS f2 cCONS f1 cCONS f3 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f1 cCONS f3 cNIL cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c= f3 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f4 cNIL c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f1 cCONS f3 cNIL cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f4 cNIL cF
- (_7137677 = _7137679), (_7137676 = _7137678) |- ((_7137677 = _7137679) /\ ((_7137676 INSERT _7137677) = (_7137678 INSERT _7137679)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cINSERT f2 f0 * * part cINSERT f3 f1
- (x = u1) |- (((~ (_7137589 = u2)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137589)) = ((~ (_7137589 = u2)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137589)))
T c==> c= f0 f1 c= c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f2 c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f2
+ (x = u0), ((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) |- ((x = u0) /\ F)
T c==> c= f0 f1 c==> c/\ c\/ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ c= f0 f1 cF
+ (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))), (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)), ((x = u1) \/ ((x = u2') \/ (x = u2))), (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') |- (((x = u1) \/ ((x = u2') \/ (x = u2))) /\ F)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c\/ c= f3 f1 c\/ c= f3 f4 c= f3 f2 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c/\ c\/ c= f3 f1 c\/ c= f3 f4 c= f3 f2 cF
+ (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F))
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c~ c/\ c? / cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL c? / cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL cF
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ (x = u1), ((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) |- ((u1 = u1) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c\/ c= f0 f2 c= f0 f1 c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c==> c= f1 f1 cF
+ (!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))
T c==> ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL ! c= cstem cCONS f0 cCONS f1 cCONS f2 cNIL b0 cstem cCONS f1 cCONS f0 cCONS f2 cNIL b0 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL b0 c~ ! c~ c/\ ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0
+ |- ((\vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) vl) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) vl)) /\ (((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem vl)) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = vl))))))))) ==> (((cc_uh V) vl) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL))))))) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))
T * / c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 b0 c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 b0 c/\ c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem b0 c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= cCONS f1 cCONS f2 cCONS f3 cNIL b0 c= ccc_uh f0 b0 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL cCONS f2 cCONS f1 cCONS f4 cNIL
+ |- ((\V. (!ul. (((leaf V) ul) ==> ((stem ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))))) V)
T * / ! c==> cleaf b0 b1 c= * part cstem b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY f0
- |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
+ |- ((((~ c) ==> d) = (c \/ d)) = (((T /\ (~ c)) ==> d) = (T ==> (c \/ d))))
T c= c= c==> c~ f0 f1 c\/ f0 f1 c= c==> c/\ cT c~ f0 f1 c==> cT c\/ f0 f1
+ |- (!x. ((x IN ((u0 INSERT (u1 INSERT EMPTY)) UNION (u2 INSERT EMPTY))) = (x IN (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))))
T c= cIN f0 * * part cUNION * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (u0 = u1)), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) \/ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((~ (u2 = u2')) ==> F)
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= ccc_ke f2 cCONS f0 cCONS f1 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f3 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL c==> c\/ c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS f1 cCONS f0 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f4 cNIL c==> c~ c= f3 f4 cF
- |- (((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F))))))))))) ==> ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F))))))))))))
T c==> c==> csaturated f0 c==> cpacking f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f3 cNIL c==> c~ c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f3 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f4 cNIL cF c==> csaturated f0 c==> cpacking f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f3 cNIL c==> c~ c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f3 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f4 cNIL cF
- (_7137368 = _7137371) |- ((_7137366 = _7137369) ==> ((~ (_7137367 = _7137370)) \/ ((((aff_gt _7137369) _7137370) _7137371) \/ (~ (((aff_gt _7137366) _7137367) _7137368)))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ caff_gt f3 f5 f1 c~ caff_gt f2 f4 f0
- |- ((!u1. (!u0. (!u2. (!V. ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1))))))) = (!u1. (!u0. (!u2. (!V. ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F))))))
T c= ! ! ! ! c==> c? / c? / c/\ c/\ cVX b3 * * part ccc_cell b3 cCONS b1 cCONS b0 cCONS b2 cNIL b4 c/\ cVX b3 * * part ccc_cell b3 cCONS b1 cCONS b0 cCONS b2 cNIL b5 c~ c= b4 b5 c\/ c/\ c= b1 b4 c= b0 b5 c/\ c= b1 b5 c= b0 b4 c~ c= b1 b0 ! ! ! ! c==> c~ c==> c? / c? / c/\ c/\ cVX b3 * * part ccc_cell b3 cCONS b1 cCONS b0 cCONS b2 cNIL b4 c/\ cVX b3 * * part ccc_cell b3 cCONS b1 cCONS b0 cCONS b2 cNIL b5 c~ c= b4 b5 c\/ c/\ c= b1 b4 c= b0 b5 c/\ c= b1 b5 c= b0 b4 c~ c= b1 b0 cF
+ (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))), (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') |- ((((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)) = T)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= c==> c\/ c= f4 f0 c\/ c= f4 f1 c\/ c= f4 f3 c= f4 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 cT
+ |- ((\ul. (!X. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ ((X IN (mcell_set V)) /\ (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) X)) /\ ((~ ((X INTER (cc_A0 ul)) = EMPTY)) /\ (~ (X = ((cc_cell V) ul))))))))) ==> (X = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))))))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))
T * / ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 b0 c/\ cIN b1 * part cmcell_set f0 c/\ cIN * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cedgeX f0 b1 c/\ c~ c= * * part cINTER b1 * part ccc_A0 b0 part cEMPTY c~ c= b1 * * part ccc_cell f0 b0 c= b1 * * part ccc_cell f0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b0 cNIL cCONS f1 cCONS f2 cCONS f3 cNIL
+ (~ (u0 = u1)), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (((u0 INSERT (u1 INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)))
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f3 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cedgeX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL c~ c= * * part cINTER * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY
- ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F) |- ((((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F)) ==> ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F))
T c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
- ((u0 = v) /\ (u1 = u)), (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))) |- (((VX V) ((cc_cell V) ((CONS u0) ((CONS u) ((CONS u2) NIL))))) v)
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f2 cCONS f5 cNIL f3 c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f2 cCONS f5 cNIL f1 c~ c= f3 f1 c\/ c/\ c= f0 f3 c= f2 f1 c/\ c= f0 f1 c= f2 f3 cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS f5 cNIL f1
+ |- ((~ (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((CONS u1) ((CONS u0) ((CONS (HD (TL (TL (TL ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))) ((CONS u2') NIL)))))) = ((((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL))))) ==> F))
T c= c~ c= ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS f2 cCONS f1 cCONS cHD cTL cTL cTL ccc_uh f0 cCONS f1 cCONS f2 cCONS f4 cNIL cCONS f4 cNIL c==> c= ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f4 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f4 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f4 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f4 cNIL cNIL cF
+ (x = u0), ((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))) |- F
T c==> c= f0 f1 c==> c/\ c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 cF
+ |- (((!x. (((\t. ((x IN t) /\ (t SUBSET s))) x) ==> ((!x. (!s. (!t. (((x IN t) /\ (t SUBSET s)) ==> (x IN s))))) ==> (x IN s)))) ==> ((?t. ((x IN t) /\ (t SUBSET s))) ==> ((!x. (!s. (!t. (((x IN t) /\ (t SUBSET s)) ==> (x IN s))))) ==> (x IN s)))) = ((?t. ((x IN t) /\ (t SUBSET s))) ==> ((!x. (!s. (!t. (((x IN t) /\ (t SUBSET s)) ==> (x IN s))))) ==> (x IN s))))
T c= c==> ! c==> * / c/\ cIN f0 b1 cSUBSET b1 f1 b0 c==> ! ! ! c==> c/\ cIN b1 b3 cSUBSET b3 b2 cIN b1 b2 cIN f0 f1 c==> c? / c/\ cIN f0 b0 cSUBSET b0 f1 c==> ! ! ! c==> c/\ cIN b0 b2 cSUBSET b2 b1 cIN b0 b1 cIN f0 f1 c==> c? / c/\ cIN f0 b0 cSUBSET b0 f1 c==> ! ! ! c==> c/\ cIN b0 b2 cSUBSET b2 b1 cIN b0 b1 cIN f0 f1
- |- ((~ (_7137542 = _7137544)) \/ ((~ (_7137543 = _7137545)) \/ (((leaf _7137544) _7137545) \/ (~ ((leaf _7137542) _7137543)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cleaf f1 f3 c~ cleaf f0 f2
+ (~ (u0 = u1)) |- ((((CONS u0) ((CONS u1) ((CONS u2') NIL))) = ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) ==> (u2 = u2'))
T c==> c~ c= f0 f1 c==> c= cCONS f0 cCONS f1 cCONS f2 cNIL cCONS f1 cCONS f0 cCONS f3 cNIL c= f3 f2
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (((((packing V) /\ ((saturated V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) IN (mcell_set V)) /\ (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL)))))) ==> (u2 = u2')) = (((((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL)))))) ==> (u2 = u2')))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c= c==> c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cIN * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * part cmcell_set f0 c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * part ccc_A0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL c= f3 f4 c==> c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * part ccc_A0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL c= f3 f4
- ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F), (((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F) ==> ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F)) |- (((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F) /\ ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F))
T c==> c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c==> c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c/\ c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF
+ |- ((\ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul))))) ul)
T * / c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 b0 cIN * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 b0 f1
+ (~ (u0 = u1)), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (u2 = u2')
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f3 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f4 cNIL c= f3 f4
+ (x = u0), ((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) |- ((u0 = u0) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c==> c= f1 f1 cF
- (x = u2), ((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))) |- (~ (u2 = u1))
T c==> c= f0 f1 c==> c/\ c/\ c/\ c~ c= f0 f2 c~ c= f0 f3 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c~ c= f1 f3
- (_7137566 = _7137568) |- ((_7137567 = _7137569) ==> (((CONS _7137566) _7137567) = ((CONS _7137568) _7137569)))
T c==> c= f0 f1 c==> c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
+ ((a = T) ==> (((a /\ (b /\ (~ c))) ==> d) = ((a /\ b) ==> (c \/ d)))), ((a = F) ==> (((a /\ (b /\ (~ c))) ==> d) = ((a /\ b) ==> (c \/ d)))) |- (((a /\ (b /\ (~ c))) ==> d) = ((a /\ b) ==> (c \/ d)))
T c==> c==> c= f0 cT c= c==> c/\ f0 c/\ f1 c~ f2 f3 c==> c/\ f0 f1 c\/ f2 f3 c==> c==> c= f0 cF c= c==> c/\ f0 c/\ f1 c~ f2 f3 c==> c/\ f0 f1 c\/ f2 f3 c= c==> c/\ f0 c/\ f1 c~ f2 f3 c==> c/\ f0 f1 c\/ f2 f3
+ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) |- (?t. ((u2' IN t) /\ (t SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))))
T c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c? / c/\ cIN f3 b0 cSUBSET b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (((!u0. ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F)) ==> ((\u0. ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F)) u0)) = ((\u0. ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F)) u0))
T c= c==> ! c==> c~ ! c= c\/ c\/ c= b1 b0 c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 cF * / c==> c~ ! c= c\/ c\/ c= b1 b0 c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 cF f2 * / c==> c~ ! c= c\/ c\/ c= b1 b0 c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 cF f2
+ ((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))), ((x = u2) ==> F), ((x = u1) \/ (x = u2)) |- F
T c==> c/\ c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c==> c= f0 f3 cF c==> c\/ c= f0 f2 c= f0 f3 cF
- |- ((~ (_7137556 = _7137558)) \/ ((~ (_7137557 = _7137559)) \/ (((cc_ke _7137556) _7137557) = ((cc_ke _7137558) _7137559))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= ccc_ke f0 f2 ccc_ke f1 f3
+ |- (((!V. (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_uh V) ul) = ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))))) ==> ((\V. (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_uh V) ul) = ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))))) V)) = ((\V. (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_uh V) ul) = ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))))) V))
T c= c==> ! ! c==> c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 c= ccc_uh b0 b1 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 cNIL * / ! c==> c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 c= ccc_uh b0 b1 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 cNIL f0 * / ! c==> c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 c= ccc_uh b0 b1 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 cNIL f0
- |- (((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F) = ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1))))
T c= c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2
+ (((u0 INSERT (u1 INSERT EMPTY)) UNION (u2 INSERT EMPTY)) = (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) |- (((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) ==> (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))) = ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) SUBSET ((hull affine) ((u0 INSERT (u1 INSERT EMPTY)) UNION (u2 INSERT EMPTY)))) ==> (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))))
T c==> c= * * part cUNION * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cUNION * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((saturated V) /\ ((packing V) /\ ((leaf V) ul))) |- (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ ((((cc_cell V) ul) IN (mcell_set V)) = T))
T c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 c/\ c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 c= cIN * * part ccc_cell f0 f1 * part cmcell_set f0 cT
- |- ((\u0. (!u2'. (!V. ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F)))) u0)
T * / ! ! c==> c~ c==> csaturated b2 c==> cpacking b2 c==> ! c= caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b3 caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 c==> cleaf b2 cCONS b0 cCONS f0 cCONS f1 cNIL c==> cleaf b2 cCONS b0 cCONS f0 cCONS b1 cNIL c==> c~ c= b0 f0 c==> c/\ cleaf b2 cCONS f0 cCONS b0 cCONS f1 cNIL ! c= cstem cCONS b0 cCONS f0 cCONS f1 cNIL b3 cstem cCONS f0 cCONS b0 cCONS f1 cNIL b3 c==> c~ ! c~ c/\ caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 ccc_cell b2 cCONS b0 cCONS f0 cCONS b1 cNIL b3 c~ ! c~ c/\ ccc_cell b2 cCONS b0 cCONS f0 cCONS b1 cNIL b3 caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b3 cF f2
- (_7137556 = _7137558) |- ((_7137556 = _7137558) /\ ((~ (_7137557 = _7137559)) \/ (((cc_ke _7137556) _7137557) = ((cc_ke _7137558) _7137559))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= ccc_ke f0 f2 ccc_ke f1 f3
- (_7137546 = _7137547) |- ((_7137546 = _7137547) /\ ((packing _7137547) \/ (~ (packing _7137546))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ cpacking f1 c~ cpacking f0
+ |- (((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))) ==> F)
T c==> c/\ c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 cF
+ |- ((\V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ ((((cc_cell V) ul) = ((cc_cell V) vl)) /\ (((stem ul) = (stem vl)) /\ ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (ul = vl))))))))) ==> (((cc_uh V) vl) = ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL))))))))) V)
T * / ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c/\ c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c/\ c= * part cstem b1 * part cstem b2 c/\ c= ccc_ke b0 b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= b1 b2 c= ccc_uh b0 b2 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b1 cNIL f0
- |- ((_7137564 = _7137565) ==> ((NUMERAL _7137564) = (NUMERAL _7137565)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- |- (((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F) ==> ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F))
T c==> c==> c~ c==> csaturated f0 c==> cpacking f0 c==> ! c= caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL ! c= cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 c~ ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF c==> c~ c==> csaturated f0 c==> cpacking f0 c==> ! c= caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL ! c= cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 c~ ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF
+ |- (((!s. (!t. (((aff_gt s) t) SUBSET ((hull affine) (s UNION t))))) ==> ((\s. (!t. (((aff_gt s) t) SUBSET ((hull affine) (s UNION t))))) (u0 INSERT (u1 INSERT EMPTY)))) = ((\s. (!t. (((aff_gt s) t) SUBSET ((hull affine) (s UNION t))))) (u0 INSERT (u1 INSERT EMPTY))))
T c= c==> ! ! cSUBSET * * part caff_gt b0 b1 * * part chull part caffine * * part cUNION b0 b1 * / ! cSUBSET * * part caff_gt b0 b1 * * part chull part caffine * * part cUNION b0 b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * / ! cSUBSET * * part caff_gt b0 b1 * * part chull part caffine * * part cUNION b0 b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), ((u0 INSERT (u1 INSERT (u2 INSERT EMPTY))) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) |- ((u0 INSERT (u1 INSERT (u2' INSERT (u2 INSERT EMPTY)))) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))
T c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((~ a) \/ (~ b)) = (~ (a /\ b)))
T c= c\/ c~ f0 c~ f1 c~ c/\ f0 f1
- (_7137362 = _7137365) |- ((_7137360 = _7137363) ==> ((~ (_7137361 = _7137364)) \/ ((((cc_cell _7137363) _7137364) _7137365) \/ (~ (((cc_cell _7137360) _7137361) _7137362)))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ ccc_cell f3 f5 f1 c~ ccc_cell f2 f4 f0
- |- ((((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F) ==> ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F)) = ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F))
T c= c==> c==> c~ c==> csaturated f0 c==> cpacking f0 c==> ! c= caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL ! c= cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 c~ ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF c==> c~ c==> csaturated f0 c==> cpacking f0 c==> ! c= caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL ! c= cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 c~ ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF c==> c~ c==> csaturated f0 c==> cpacking f0 c==> ! c= caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL ! c= cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 c~ ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF
+ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) |- ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))))))))
T c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f2 f3 c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f1 cCONS f0 cCONS f2 cNIL c/\ c? / cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL c? / cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL
+ (saturated V) |- ((saturated V) /\ ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))))))))))
T c==> csaturated f0 c/\ csaturated f0 c==> cpacking f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f3 cNIL c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f3 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f4 cNIL
+ (~ (u0 = u1)), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F)))
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= ccc_ke f2 cCONS f0 cCONS f1 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f3 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f4 cNIL c==> c~ c= f3 f4 c==> c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS f1 cCONS f0 cCONS f3 cNIL c==> c~ c/\ c? / cleaf b0 cCONS f1 cCONS f0 cCONS f3 cNIL c? / cleaf b0 cCONS f0 cCONS f1 cCONS f4 cNIL cF
+ (~ (u0 = u1)), (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))) NIL))))) |- ((((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))) NIL))))) /\ (~ (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((CONS u1) ((CONS u0) ((CONS (HD (TL (TL (TL ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))) ((CONS u2') NIL)))))))
T c==> c~ c= f0 f1 c==> c= ccc_uh f2 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL c/\ c= ccc_uh f2 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL c~ c= ccc_uh f2 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS f1 cCONS f0 cCONS cHD cTL cTL cTL ccc_uh f2 cCONS f0 cCONS f1 cCONS f4 cNIL cCONS f4 cNIL
- (~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) |- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) /\ F)
T c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 c/\ c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- ((~ (_7137368 = _7137371)) \/ ((~ (_7137366 = _7137369)) \/ ((~ (_7137367 = _7137370)) \/ ((((aff_gt _7137369) _7137370) _7137371) \/ (~ (((aff_gt _7137366) _7137367) _7137368))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ caff_gt f3 f5 f1 c~ caff_gt f2 f4 f0
+ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))), (!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))), ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x)) |- (((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x)) /\ F)
T c==> ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c==> ! c= caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f5 ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f5 c/\ c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f5 ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f5 cF
+ ((A = F) ==> (((A ==> B) /\ A) ==> B)) |- (((A ==> B) /\ A) ==> B)
T c==> c==> c= f0 cF c==> c/\ c==> f0 f1 f0 f1 c==> c/\ c==> f0 f1 f0 f1
- |- ((~ (_7137676 = _7137678)) \/ ((~ (_7137677 = _7137679)) \/ ((_7137676 INSERT _7137677) = (_7137678 INSERT _7137679))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- |- (((!u1. (!u0. (!u2'. (!V. ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F))))) ==> ((\u1. (!u0. (!u2'. (!V. ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F))))) u1)) = ((\u1. (!u0. (!u2'. (!V. ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F))))) u1))
T c= c==> ! ! ! ! c==> c~ c==> csaturated b3 c==> cpacking b3 c==> ! c= caff_gt * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b4 caff_gt * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 c==> cleaf b3 cCONS b1 cCONS b0 cCONS f0 cNIL c==> cleaf b3 cCONS b1 cCONS b0 cCONS b2 cNIL c==> c~ c= b1 b0 c==> c/\ cleaf b3 cCONS b0 cCONS b1 cCONS f0 cNIL ! c= cstem cCONS b1 cCONS b0 cCONS f0 cNIL b4 cstem cCONS b0 cCONS b1 cCONS f0 cNIL b4 c==> c~ ! c~ c/\ caff_gt * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 ccc_cell b3 cCONS b1 cCONS b0 cCONS b2 cNIL b4 c~ ! c~ c/\ ccc_cell b3 cCONS b1 cCONS b0 cCONS b2 cNIL b4 caff_gt * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b4 cF * / ! ! ! c==> c~ c==> csaturated b3 c==> cpacking b3 c==> ! c= caff_gt * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b4 caff_gt * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 c==> cleaf b3 cCONS b1 cCONS b0 cCONS f0 cNIL c==> cleaf b3 cCONS b1 cCONS b0 cCONS b2 cNIL c==> c~ c= b1 b0 c==> c/\ cleaf b3 cCONS b0 cCONS b1 cCONS f0 cNIL ! c= cstem cCONS b1 cCONS b0 cCONS f0 cNIL b4 cstem cCONS b0 cCONS b1 cCONS f0 cNIL b4 c==> c~ ! c~ c/\ caff_gt * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 ccc_cell b3 cCONS b1 cCONS b0 cCONS b2 cNIL b4 c~ ! c~ c/\ ccc_cell b3 cCONS b1 cCONS b0 cCONS b2 cNIL b4 caff_gt * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b4 cF f1 * / ! ! ! c==> c~ c==> csaturated b3 c==> cpacking b3 c==> ! c= caff_gt * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b4 caff_gt * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 c==> cleaf b3 cCONS b1 cCONS b0 cCONS f0 cNIL c==> cleaf b3 cCONS b1 cCONS b0 cCONS b2 cNIL c==> c~ c= b1 b0 c==> c/\ cleaf b3 cCONS b0 cCONS b1 cCONS f0 cNIL ! c= cstem cCONS b1 cCONS b0 cCONS f0 cNIL b4 cstem cCONS b0 cCONS b1 cCONS f0 cNIL b4 c==> c~ ! c~ c/\ caff_gt * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 ccc_cell b3 cCONS b1 cCONS b0 cCONS b2 cNIL b4 c~ ! c~ c/\ ccc_cell b3 cCONS b1 cCONS b0 cCONS b2 cNIL b4 caff_gt * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b4 cF f1
+ (~ (u0 = u1)), (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) |- (~ (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((CONS u1) ((CONS u0) ((CONS (HD (TL (TL (TL ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))) ((CONS u2') NIL))))))
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c~ c= ccc_uh f2 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS f1 cCONS f0 cCONS cHD cTL cTL cTL ccc_uh f2 cCONS f0 cCONS f1 cCONS f4 cNIL cCONS f4 cNIL
- |- ((~ (_7137672 = _7137675)) \/ ((~ (_7137671 = _7137674)) \/ ((~ (_7137670 = _7137673)) \/ ((((hull _7137673) _7137674) _7137675) \/ (~ (((hull _7137670) _7137671) _7137672))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ chull f5 f3 f1 c~ chull f4 f2 f0
+ (a = F) |- ((((F /\ (b /\ (~ c))) ==> d) = ((F /\ b) ==> (c \/ d))) = (((a /\ (b /\ (~ c))) ==> d) = ((a /\ b) ==> (c \/ d))))
T c==> c= f0 cF c= c= c==> c/\ cF c/\ f1 c~ f2 f3 c==> c/\ cF f1 c\/ f2 f3 c= c==> c/\ f0 c/\ f1 c~ f2 f3 c==> c/\ f0 f1 c\/ f2 f3
+ (~ (u0 = u1)), (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) |- ((((saturated V) /\ ((packing V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))) ==> (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))) NIL)))))) ==> (~ (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((CONS u1) ((CONS u0) ((CONS (HD (TL (TL (TL ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))) ((CONS u2') NIL)))))))
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c==> c/\ csaturated f2 c/\ cpacking f2 cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c= ccc_uh f2 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL c~ c= ccc_uh f2 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS f1 cCONS f0 cCONS cHD cTL cTL cTL ccc_uh f2 cCONS f0 cCONS f1 cCONS f4 cNIL cCONS f4 cNIL
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
- |- (~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- (!V. (~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((~ F) ==> F)
T c==> ! c~ cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f3 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c~ cF cF
+ (~ (P b)), (P c), (b = c) |- F
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 cF
+ |- (T = ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) ==> (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))))
T c= cT c==> cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((\V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ ((((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT EMPTY))) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> (ul = vl))))) V)
T * / ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c/\ c= ccc_ke b0 b1 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 b2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b2 part cEMPTY c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= b1 b2 f0
- |- (((!u0. (!u2'. ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F))) ==> ((\u0. (!u2'. ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F))) u0)) = ((\u0. (!u2'. ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F))) u0))
T c= c==> ! ! c==> c~ c==> ! c==> c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 c==> chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 ! c==> c\/ c= b2 b0 c\/ c= b2 f0 c\/ c= b2 b1 c= b2 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 cF * / ! c==> c~ c==> ! c==> c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 c==> chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 ! c==> c\/ c= b2 b0 c\/ c= b2 f0 c\/ c= b2 b1 c= b2 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 cF f2 * / ! c==> c~ c==> ! c==> c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 c==> chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 ! c==> c\/ c= b2 b0 c\/ c= b2 f0 c\/ c= b2 b1 c= b2 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 cF f2
+ (~ (u0 = u1)), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) \/ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) \/ (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (u2 = u2'))
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f3 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL c==> c\/ c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS f1 cCONS f0 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f4 cNIL c==> c\/ c= ccc_ke f2 cCONS f0 cCONS f1 cCONS f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c= ccc_ke f2 cCONS f0 cCONS f1 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= f3 f4
- |- ((((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F))))))))))) ==> ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F)))))))))))) = ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F))))))))))))
T c= c==> c==> csaturated f0 c==> cpacking f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f3 cNIL c==> c~ c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f3 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f4 cNIL cF c==> csaturated f0 c==> cpacking f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f3 cNIL c==> c~ c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f3 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f4 cNIL cF c==> csaturated f0 c==> cpacking f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f3 cNIL c==> c~ c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f3 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f4 cNIL cF
- ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F) |- ((((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F) ==> ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F)) ==> ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F))
T c==> c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c==> c==> c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF
- (_7137542 = _7137544) |- ((_7137543 = _7137545) ==> (((leaf _7137544) _7137545) \/ (~ ((leaf _7137542) _7137543))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cleaf f1 f3 c~ cleaf f0 f2
- (x = u0), ((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))) |- (~ (u0 = u1))
T c==> c= f0 f1 c==> c/\ c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ c= f1 f2
- (x = u2') |- (((~ (_7137590 = u0)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137590)) = ((~ (_7137590 = u0)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137590)))
T c==> c= f0 f1 c= c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2
+ |- (((!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (((cc_A0 ul) INTER ((cc_cell V) ul)) = EMPTY)))) ==> ((\ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (((cc_A0 ul) INTER ((cc_cell V) ul)) = EMPTY)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) = ((\ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (((cc_A0 ul) INTER ((cc_cell V) ul)) = EMPTY)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))
T c= c==> ! c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 b0 c~ c= * * part cINTER * part ccc_A0 b0 * * part ccc_cell f0 b0 part cEMPTY * / c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 b0 c~ c= * * part cINTER * part ccc_A0 b0 * * part ccc_cell f0 b0 part cEMPTY cCONS f1 cCONS f2 cCONS f3 cNIL * / c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 b0 c~ c= * * part cINTER * part ccc_A0 b0 * * part ccc_cell f0 b0 part cEMPTY cCONS f1 cCONS f2 cCONS f3 cNIL
+ |- ((\h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2)))))) h2)
T * / ! ! c= c= cCONS f0 b1 cCONS b0 b2 c/\ c= f0 b0 c= b1 b2 f1
+ |- (((((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) /\ (((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))))))) ==> (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL)))))) ==> F) = F)
T c= c==> c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= cCONS f1 cCONS f2 cCONS f3 cNIL cCONS f1 cCONS f2 cCONS f4 cNIL c= ccc_uh f0 cCONS f1 cCONS f2 cCONS f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL cF cF
+ (b = c) |- ((P c) ==> (P b))
T c==> c= f0 f1 c==> * f2 f1 * f2 f0
- (u2 = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) |- (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) = u2)
T c==> c= f0 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f1 cCONS f2 cCONS f3 cCONS f4 cNIL c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f1 cCONS f2 cCONS f3 cCONS f4 cNIL f0
+ |- (((saturated V) ==> ((packing V) ==> ((!x. ((x IN ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY))) = (x IN ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. ((x IN (stem ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = (x IN (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))))) ==> ((~ (!x. ((x IN (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) INTER ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) = (x IN EMPTY)))) ==> (~ (!x. ((x IN (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)))) = (x IN EMPTY)))))))))))) = ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) INTER ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) = EMPTY)) ==> (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY))) = EMPTY)))))))))))
T c= c==> csaturated f0 c==> cpacking f0 c==> ! c= cIN b0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY cIN b0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL ! c= cIN b0 * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL cIN b0 * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> c~ ! c= cIN b0 * * part cINTER * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL cIN b0 part cEMPTY c~ ! c= cIN b0 * * part cINTER * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY cIN b0 part cEMPTY c==> csaturated f0 c==> cpacking f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL part cEMPTY c~ c= * * part cINTER * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY part cEMPTY
- |- (((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F))
T c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
+ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))))))))
T c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f3 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f4 cNIL
- ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F) |- (((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F) /\ ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F))
T c==> c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c/\ c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF
+ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))))
T c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f4 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f4 cNIL * part cstem cCONS f2 cCONS f1 cCONS f4 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f3 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f4 cNIL c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f4 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f3 cNIL
- (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))), (~ F), (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)), (x = u1) |- ((~ F) /\ F)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ cF c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f1 c/\ c~ cF cF
+ |- (((!t. (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) t) SUBSET ((hull affine) ((u0 INSERT (u1 INSERT EMPTY)) UNION t)))) ==> ((\t. (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) t) SUBSET ((hull affine) ((u0 INSERT (u1 INSERT EMPTY)) UNION t)))) (u2 INSERT EMPTY))) = ((\t. (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) t) SUBSET ((hull affine) ((u0 INSERT (u1 INSERT EMPTY)) UNION t)))) (u2 INSERT EMPTY)))
T c= c==> ! cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 * * part chull part caffine * * part cUNION * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 * / cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 * * part chull part caffine * * part cUNION * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 * * part cINSERT f2 part cEMPTY * / cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 * * part chull part caffine * * part cUNION * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 * * part cINSERT f2 part cEMPTY
- |- ((!x'. ((~ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x')) \/ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x))) = ((!x. (~ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x))) \/ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))
T c= ! c\/ c~ cstem cCONS f0 cCONS f1 cCONS f2 cNIL b0 cstem cCONS f1 cCONS f0 cCONS f2 cNIL f3 c\/ ! c~ cstem cCONS f0 cCONS f1 cCONS f2 cNIL b0 cstem cCONS f1 cCONS f0 cCONS f2 cNIL f3
+ |- (((a /\ (b /\ (~ c))) ==> d) = ((a /\ b) ==> (c \/ d)))
T c= c==> c/\ f0 c/\ f1 c~ f2 f3 c==> c/\ f0 f1 c\/ f2 f3
- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) |- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))
T c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL
+ ((\x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))) x) |- ((((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x)) ==> F) = F)
T c==> * / c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL b0 f4 c= c==> c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4 ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL f4 cF cF
+ (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))
T c==> c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f2 cCONS f1 cCONS f4 cNIL c==> c= * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f3 cNIL c/\ c? / cleaf b0 cCONS f1 cCONS f2 cCONS f3 cNIL c? / cleaf b0 cCONS f2 cCONS f1 cCONS f4 cNIL
+ (!x. (!s. (!t. (((x IN t) /\ (t SUBSET s)) ==> (x IN s))))) |- ((\s. (!t. (((x IN t) /\ (t SUBSET s)) ==> (x IN s)))) s)
T c==> ! ! ! c==> c/\ cIN b0 b2 cSUBSET b2 b1 cIN b0 b1 * / ! c==> c/\ cIN f0 b1 cSUBSET b1 b0 cIN f0 b0 f1
- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY) |- (EMPTY = (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))))
T c==> c= * * part cINTER * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * part ccc_A0 cCONS f1 cCONS f2 cCONS f4 cNIL part cEMPTY c= part cEMPTY * * part cINTER * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * part ccc_A0 cCONS f1 cCONS f2 cCONS f4 cNIL
+ |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))))))
T c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f4 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f4 cNIL * part cstem cCONS f2 cCONS f1 cCONS f4 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f3 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f4 cNIL c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f4 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f3 cNIL
- (~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) |- F
T c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
+ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))))))))
T c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f3 cNIL c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f3 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f4 cNIL
+ |- ((!u2. (!u2'. (((saturated V) /\ ((packing V) /\ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))) ==> (u2 = u2')))) = T)
T c= ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cleaf f0 cCONS f1 cCONS f2 cCONS b0 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS b1 cNIL c= b0 b1 cT
+ (!ul. (!P. (((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) ==> (P (stem ul))))) |- (((!P. (((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) ==> (P (stem ul)))) ==> ((\P. (((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) ==> (P (stem ul)))) P)) = ((\P. (((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) ==> (P (stem ul)))) P))
T c==> ! ! c==> c/\ c? / cleaf b2 b0 * b1 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * b1 * part cstem b0 c= c==> ! c==> c/\ c? / cleaf b1 f0 * b0 * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 part cEMPTY * b0 * part cstem f0 * / c==> c/\ c? / cleaf b1 f0 * b0 * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 part cEMPTY * b0 * part cstem f0 f1 * / c==> c/\ c? / cleaf b1 f0 * b0 * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 part cEMPTY * b0 * part cstem f0 f1
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (((~ ((((aff_gt (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY))) (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) INTER ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) = EMPTY)) ==> (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER ((aff_gt (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY))) (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY))) = EMPTY))) = ((((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ==> (~ (((cc_A0 ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) = EMPTY))) ==> (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY c~ c= * * part cINTER * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part caff_gt * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f4 cNIL part cEMPTY * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f4 cNIL part cEMPTY part cEMPTY c==> c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c~ c= * * part cINTER * part ccc_A0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY c~ c= * * part cINTER * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * part ccc_A0 cCONS f1 cCONS f2 cCONS f4 cNIL part cEMPTY
- (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))), ((((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL)))))) |- ((((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL))))))
T c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cNIL c/\ c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cNIL
+ (~ (u0 = u1)), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY))) /\ (((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) \/ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) NIL)))))) ==> (u2 = u2')))
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f3 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY * * part cedgeX f2 * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL c~ c= * * part cINTER * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY c==> c\/ c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL c= f3 f4
+ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) |- ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) /\ (u2' IN ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY))))
T c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f3 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- (((~ c) ==> d) = (c \/ d))
T c= c==> c~ f0 f1 c\/ f0 f1
+ |- (!y. (((\x. ((\v. ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = v))) x)) y) = ((\v. ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = v))) y)))
T c= * / * / c/\ c? / cleaf b2 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY b1 b0 f3 * / c/\ c? / cleaf b1 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY b0 f3
- (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) |- ((\x. ((~ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x)) \/ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x))) _7137353)
T c==> c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL ! c= cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 * / c\/ c~ cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 f4
+ |- (((!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) vl) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) vl)) /\ (((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem vl)) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = vl))))))))) ==> (((cc_uh V) vl) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL))))))) ==> ((\vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) vl) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) vl)) /\ (((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem vl)) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = vl))))))))) ==> (((cc_uh V) vl) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL))))))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = ((\vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) vl) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) vl)) /\ (((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem vl)) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = vl))))))))) ==> (((cc_uh V) vl) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL))))))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))
T c= c==> ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 b0 c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 b0 c/\ c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem b0 c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= cCONS f1 cCONS f2 cCONS f3 cNIL b0 c= ccc_uh f0 b0 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL * / c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 b0 c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 b0 c/\ c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem b0 c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= cCONS f1 cCONS f2 cCONS f3 cNIL b0 c= ccc_uh f0 b0 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL cCONS f1 cCONS f2 cCONS f4 cNIL * / c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 b0 c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 b0 c/\ c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem b0 c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= cCONS f1 cCONS f2 cCONS f3 cNIL b0 c= ccc_uh f0 b0 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL cCONS f1 cCONS f2 cCONS f4 cNIL
- |- (((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = F)) = (((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = F))
T c= c==> c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF c= c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF
+ |- ((!V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))))))))))) = T)
T c= ! c==> csaturated b0 c==> cpacking b0 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_ke b0 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f2 f3 c==> c= * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell b0 cCONS f1 cCONS f0 cCONS f2 cNIL c/\ c? / cleaf b1 cCONS f1 cCONS f0 cCONS f2 cNIL c? / cleaf b1 cCONS f0 cCONS f1 cCONS f3 cNIL cT
+ |- (((!u0. (!u1. (!u2. (((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))) ==> (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))))))) ==> ((\u0. (!u1. (!u2. (((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))) ==> (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))))))) u0)) = ((\u0. (!u1. (!u2. (((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))) ==> (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))))))) u0))
T c= c==> ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS b0 cCONS b1 cCONS b2 cNIL c/\ cleaf f0 cCONS b1 cCONS b0 cCONS b2 cNIL c= * part cstem cCONS b0 cCONS b1 cCONS b2 cNIL * part cstem cCONS b1 cCONS b0 cCONS b2 cNIL * / ! ! c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS b0 cCONS b1 cCONS b2 cNIL c/\ cleaf f0 cCONS b1 cCONS b0 cCONS b2 cNIL c= * part cstem cCONS b0 cCONS b1 cCONS b2 cNIL * part cstem cCONS b1 cCONS b0 cCONS b2 cNIL f1 * / ! ! c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS b0 cCONS b1 cCONS b2 cNIL c/\ cleaf f0 cCONS b1 cCONS b0 cCONS b2 cNIL c= * part cstem cCONS b0 cCONS b1 cCONS b2 cNIL * part cstem cCONS b1 cCONS b0 cCONS b2 cNIL f1
- (x = u2) |- (F = F)
T c==> c= f0 f1 c= cF cF
+ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))))))
T c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f4 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f4 cNIL * part cstem cCONS f2 cCONS f1 cCONS f4 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f3 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f4 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f3 cNIL
+ ((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))), ((x = u0) \/ (x = u1)) |- (((x = u0) \/ (x = u1)) /\ F)
T c==> c/\ c\/ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c==> c\/ c= f0 f1 c= f0 f2 c/\ c\/ c= f0 f1 c= f0 f2 cF
+ (~ (u0 = u1)) |- ((((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))) NIL))))) ==> (~ (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((CONS u1) ((CONS u0) ((CONS (HD (TL (TL (TL ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))) ((CONS u2') NIL)))))))
T c==> c~ c= f0 f1 c==> c= ccc_uh f2 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL c~ c= ccc_uh f2 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS f1 cCONS f0 cCONS cHD cTL cTL cTL ccc_uh f2 cCONS f0 cCONS f1 cCONS f4 cNIL cCONS f4 cNIL
+ (packing V) |- ((packing V) = T)
T c==> cpacking f0 c= cpacking f0 cT
+ ((a = F) ==> (((a /\ (b /\ (~ c))) ==> d) = ((a /\ b) ==> (c \/ d)))) |- (((a /\ (b /\ (~ c))) ==> d) = ((a /\ b) ==> (c \/ d)))
T c==> c==> c= f0 cF c= c==> c/\ f0 c/\ f1 c~ f2 f3 c==> c/\ f0 f1 c\/ f2 f3 c= c==> c/\ f0 c/\ f1 c~ f2 f3 c==> c/\ f0 f1 c\/ f2 f3
+ (saturated V), ((saturated V) /\ ((packing V) /\ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))))) |- (u2 = u2')
T c==> csaturated f0 c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c= f3 f4
- |- ((!u2. (!V. ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1))))) = T)
T c= ! ! c==> c? / c? / c/\ c/\ cVX b1 * * part ccc_cell b1 cCONS f0 cCONS f1 cCONS b0 cNIL b2 c/\ cVX b1 * * part ccc_cell b1 cCONS f0 cCONS f1 cCONS b0 cNIL b3 c~ c= b2 b3 c\/ c/\ c= f0 b2 c= f1 b3 c/\ c= f0 b3 c= f1 b2 c~ c= f0 f1 cT
- |- ((!u1. (!u0. (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2))))))) = T)
T c= ! ! ! c= c\/ c\/ c= b2 b1 c= b2 b0 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cT
- (_7137337 = _7137340) |- ((_7137335 = _7137338) ==> ((~ (_7137336 = _7137339)) \/ ((((VX _7137338) _7137339) _7137340) \/ (~ (((VX _7137335) _7137336) _7137337)))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ cVX f3 f5 f1 c~ cVX f2 f4 f0
+ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) |- ((u2' IN ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) = (u2' IN ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY))))
T c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c= cIN f3 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY cIN f3 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- |- ((\V. ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F)) V)
T * / c==> c~ c==> csaturated b0 c==> cpacking b0 c==> ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b1 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b1 c==> cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL ! c= cstem cCONS f0 cCONS f1 cCONS f2 cNIL b1 cstem cCONS f1 cCONS f0 cCONS f2 cNIL b1 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b1 ccc_cell b0 cCONS f0 cCONS f1 cCONS f3 cNIL b1 c~ ! c~ c/\ ccc_cell b0 cCONS f0 cCONS f1 cCONS f3 cNIL b1 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b1 cF f4
- |- ((((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F)) = ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F))
T c= c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
- (_7137552 = _7137554) |- ((_7137552 = _7137554) /\ ((~ (_7137553 = _7137555)) \/ (((cc_cell _7137552) _7137553) = ((cc_cell _7137554) _7137555))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part ccc_cell f0 f2 * * part ccc_cell f1 f3
+ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))))))
T c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f4 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f4 cNIL * part cstem cCONS f2 cCONS f1 cCONS f4 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f3 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f4 cNIL c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f4 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f3 cNIL
- |- (T = (~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))))
T c= cT c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) ==> ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)) = ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F), (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F) = ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))))))
T c= c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0
- |- ((_7137556 = _7137558) ==> ((~ (_7137557 = _7137559)) \/ (((cc_ke _7137556) _7137557) = ((cc_ke _7137558) _7137559))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= ccc_ke f0 f2 ccc_ke f1 f3
+ (~ (u0 = u1)), (packing V), (saturated V), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (T = ((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) INSERT EMPTY))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))))))))))
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f2 cCONS f1 cCONS f0 cCONS f4 cNIL c==> c= ccc_ke f2 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f4 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f4 cNIL * part cstem cCONS f1 cCONS f0 cCONS f4 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c= cT c/\ csaturated f2 c/\ cpacking f2 c/\ cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f4 cNIL c/\ c= ccc_ke f2 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f0 cCONS f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f0 cCONS f4 cNIL part cEMPTY c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f2 cCONS f1 cCONS f0 cCONS f4 cNIL
+ |- (((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))))))))) ==> (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f4 cNIL part cEMPTY c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c= cCONS f1 cCONS f2 cCONS f3 cNIL cCONS f1 cCONS f2 cCONS f4 cNIL
+ |- (((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ==> (~ (((cc_A0 ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) = EMPTY)))
T c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c~ c= * * part cINTER * part ccc_A0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY
- (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) |- ((~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2)) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2))
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2
+ |- (((!V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F)))))))))))) ==> ((\V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F)))))))))))) V)) = ((\V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F)))))))))))) V))
T c= c==> ! c==> csaturated b0 c==> cpacking b0 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_ke b0 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f2 f3 c==> c= * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell b0 cCONS f1 cCONS f0 cCONS f2 cNIL c==> c~ c/\ c? / cleaf b1 cCONS f1 cCONS f0 cCONS f2 cNIL c? / cleaf b1 cCONS f0 cCONS f1 cCONS f3 cNIL cF * / c==> csaturated b0 c==> cpacking b0 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_ke b0 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f2 f3 c==> c= * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell b0 cCONS f1 cCONS f0 cCONS f2 cNIL c==> c~ c/\ c? / cleaf b1 cCONS f1 cCONS f0 cCONS f2 cNIL c? / cleaf b1 cCONS f0 cCONS f1 cCONS f3 cNIL cF f4 * / c==> csaturated b0 c==> cpacking b0 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_ke b0 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f2 f3 c==> c= * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell b0 cCONS f1 cCONS f0 cCONS f2 cNIL c==> c~ c/\ c? / cleaf b1 cCONS f1 cCONS f0 cCONS f2 cNIL c? / cleaf b1 cCONS f0 cCONS f1 cCONS f3 cNIL cF f4
+ (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))), (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)), (x = u2) |- ((x = u2) /\ F)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f2 c/\ c= f3 f2 cF
+ (!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))), (~ (u0 = u1)) |- ((~ (u0 = u1)) /\ ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x))))))))
T c==> ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> c~ c= f0 f1 c/\ c~ c= f0 f1 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL ! c= cstem cCONS f0 cCONS f1 cCONS f2 cNIL b0 cstem cCONS f1 cCONS f0 cCONS f2 cNIL b0 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL b0 c~ ! c~ c/\ ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0
- (~ (u0 = u1)), (~ (u2 = u2')), (~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) /\ F)
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> c~ c/\ c? / cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL c? / cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c/\ c~ c/\ c? / cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL c? / cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL cF
+ |- (((!f. (!y. (((\x. (f x)) y) = (f y)))) ==> ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = v))))) = ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = v)))))
T c= c==> ! ! c= * / * b0 b2 b1 * b0 b1 * / ! c= * / * b0 b2 b1 * b0 b1 / c/\ c? / cleaf b1 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY b0 * / ! c= * / * b0 b2 b1 * b0 b1 / c/\ c? / cleaf b1 cCONS f0 cCONS f1 cCONS f2 cNIL c= * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY b0
+ |- ((\vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) vl) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) vl)) /\ (((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem vl)) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = vl))))))))) ==> (((cc_uh V) vl) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL))))))) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))
T * / c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 b0 c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 b0 c/\ c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem b0 c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= cCONS f1 cCONS f2 cCONS f3 cNIL b0 c= ccc_uh f0 b0 cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL cNIL cCONS f1 cCONS f2 cCONS f4 cNIL
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
+ (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))
T c==> c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f2 cCONS f1 cCONS f4 cNIL c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ c? / cleaf b0 cCONS f1 cCONS f2 cCONS f3 cNIL c? / cleaf b0 cCONS f2 cCONS f1 cCONS f4 cNIL
+ (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> c~ c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f3 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f4 cNIL cF
+ |- ((\u2. (!V. ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F))))))))))))) u2)
T * / ! c==> csaturated b1 c==> cpacking b1 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cleaf b1 cCONS f0 cCONS f1 cCONS b0 cNIL c==> cleaf b1 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf b1 cCONS f1 cCONS f0 cCONS b0 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS b0 cNIL * part cstem cCONS f1 cCONS f0 cCONS b0 cNIL c==> c= ccc_ke b1 cCONS f0 cCONS f1 cCONS f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b0 f2 c==> c= * * part ccc_cell b1 cCONS f0 cCONS f1 cCONS f2 cNIL * * part ccc_cell b1 cCONS f1 cCONS f0 cCONS b0 cNIL c==> c~ c/\ c? / cleaf b2 cCONS f1 cCONS f0 cCONS b0 cNIL c? / cleaf b2 cCONS f0 cCONS f1 cCONS f2 cNIL cF f3
+ |- ((\V. (!ul. ((((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0)))) \/ (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) V)
T * / ! c\/ c= ccc_ke b0 b1 cNUMERAL cBIT1 cBIT1 c_0 c= ccc_ke b0 b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0
+ (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))), (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)) |- ((x = u1) ==> F)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f1 cF
- (x = u0), ((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) |- (~ (u0 = u2))
T c==> c= f0 f1 c==> c/\ c\/ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c~ c= f1 f3
+ |- (((!ul. (((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) ==> (P (stem ul)))) ==> ((\ul. (((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) ==> (P (stem ul)))) ul)) = ((\ul. (((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) ==> (P (stem ul)))) ul))
T c= c==> ! c==> c/\ c? / cleaf b1 b0 * f0 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * f0 * part cstem b0 * / c==> c/\ c? / cleaf b1 b0 * f0 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * f0 * part cstem b0 f1 * / c==> c/\ c? / cleaf b1 b0 * f0 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * f0 * part cstem b0 f1
+ (~ (u0 = u1)), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F)))
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= ccc_ke f2 cCONS f0 cCONS f1 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f3 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f4 cNIL c==> c~ c= f3 f4 c==> c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c~ c/\ c? / cleaf b0 cCONS f1 cCONS f0 cCONS f3 cNIL c? / cleaf b0 cCONS f0 cCONS f1 cCONS f4 cNIL cF
- (u0 = u1), ((u0 = v) /\ (u1 = u)) |- ((((VX V) ((cc_cell V) ((CONS v) ((CONS u) ((CONS u2) NIL))))) u) = (((VX V) ((cc_cell V) ((CONS u) ((CONS u) ((CONS u2) NIL))))) u))
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c= cVX f4 * * part ccc_cell f4 cCONS f2 cCONS f3 cCONS f5 cNIL f3 cVX f4 * * part ccc_cell f4 cCONS f3 cCONS f3 cCONS f5 cNIL f3
+ ((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))) |- ((~ (x = u0)) /\ (~ (x = u1)))
T c==> c/\ c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f2
- |- ((_7137560 = _7137561) ==> ((BIT1 _7137560) = (BIT1 _7137561)))
T c==> c= f0 f1 c= cBIT1 f0 cBIT1 f1
- ((u0 = v) /\ (u1 = u)), (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))) |- (((VX V) ((cc_cell V) ((CONS v) ((CONS u) ((CONS u2) NIL))))) v)
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f2 cCONS f5 cNIL f3 c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f2 cCONS f5 cNIL f1 c~ c= f3 f1 c\/ c/\ c= f0 f3 c= f2 f1 c/\ c= f0 f1 c= f2 f3 cVX f4 * * part ccc_cell f4 cCONS f1 cCONS f3 cCONS f5 cNIL f1
+ (packing V), (saturated V), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- (((u2' = u2) ==> (u2 = u2')) = ((((saturated V) /\ ((packing V) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))))))))) ==> (((CONS u0) ((CONS u1) ((CONS u2') NIL))) = ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> (u2 = u2')))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= c==> c= f3 f4 c= f4 f3 c==> c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cNIL part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f4 cNIL part cEMPTY c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL c= cCONS f1 cCONS f2 cCONS f3 cNIL cCONS f1 cCONS f2 cCONS f4 cNIL c= f4 f3
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
+ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))), (!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))), ((\x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))) x) |- (((\x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))) x) /\ F)
T c==> ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c==> ! c= caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> * / c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 f5 c/\ * / c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 f5 cF
+ (b = F) |- ((((F /\ (~ c)) ==> d) = (F ==> (c \/ d))) = (((b /\ (~ c)) ==> d) = (b ==> (c \/ d))))
T c==> c= f0 cF c= c= c==> c/\ cF c~ f1 f2 c==> cF c\/ f1 f2 c= c==> c/\ f0 c~ f1 f2 c==> f0 c\/ f1 f2
+ |- (((!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))) ==> ((\a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))) a)) = ((\a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))) a))
T c= c==> ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 * / ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 f0 * / ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 f0
+ |- (((!ul. (!P. (((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) ==> (P (stem ul))))) ==> (!P. (!ul. (((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) ==> (P (stem ul)))))) = (!P. (!ul. (((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) ==> (P (stem ul))))))
T c= c==> ! ! c==> c/\ c? / cleaf b2 b0 * b1 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * b1 * part cstem b0 ! ! c==> c/\ c? / cleaf b2 b1 * b0 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * b0 * part cstem b1 ! ! c==> c/\ c? / cleaf b2 b1 * b0 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * b0 * part cstem b1
+ (~ (u0 = u1)), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F)))))
T c==> c~ c= f0 f1 c==> cpacking f2 c==> csaturated f2 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cleaf f2 cCONS f0 cCONS f1 cCONS f3 cNIL c==> cleaf f2 cCONS f0 cCONS f1 cCONS f4 cNIL c==> c/\ cleaf f2 cCONS f1 cCONS f0 cCONS f3 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f3 cNIL c==> c= ccc_ke f2 cCONS f0 cCONS f1 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f2 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f2 cCONS f1 cCONS f0 cCONS f3 cNIL c==> c~ c/\ c? / cleaf b0 cCONS f1 cCONS f0 cCONS f3 cNIL c? / cleaf b0 cCONS f0 cCONS f1 cCONS f4 cNIL cF
+ (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)), ((x = u2) ==> F), ((x = u2') \/ (x = u2)), (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') |- F
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> c= f3 f2 cF c==> c\/ c= f3 f4 c= f3 f2 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 cF
+ (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) |- ((_7137589 = u1) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137589))
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c= f3 f1 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- |- ((\u2. ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F)) u2)
T * / c==> c~ c==> c= f0 b0 c= b0 f0 cF f1
+ (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))))
T c==> c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f2 cCONS f1 cCONS f4 cNIL c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS f3 cNIL c/\ c? / cleaf b0 cCONS f1 cCONS f2 cCONS f3 cNIL c? / cleaf b0 cCONS f2 cCONS f1 cCONS f4 cNIL
- |- (((!V. ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F)) ==> ((\V. ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F)) V)) = ((\V. ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F)) V))
T c= c==> ! c==> c~ c==> csaturated b0 c==> cpacking b0 c==> ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b1 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b1 c==> cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL ! c= cstem cCONS f0 cCONS f1 cCONS f2 cNIL b1 cstem cCONS f1 cCONS f0 cCONS f2 cNIL b1 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b1 ccc_cell b0 cCONS f0 cCONS f1 cCONS f3 cNIL b1 c~ ! c~ c/\ ccc_cell b0 cCONS f0 cCONS f1 cCONS f3 cNIL b1 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b1 cF * / c==> c~ c==> csaturated b0 c==> cpacking b0 c==> ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b1 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b1 c==> cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL ! c= cstem cCONS f0 cCONS f1 cCONS f2 cNIL b1 cstem cCONS f1 cCONS f0 cCONS f2 cNIL b1 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b1 ccc_cell b0 cCONS f0 cCONS f1 cCONS f3 cNIL b1 c~ ! c~ c/\ ccc_cell b0 cCONS f0 cCONS f1 cCONS f3 cNIL b1 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b1 cF f4 * / c==> c~ c==> csaturated b0 c==> cpacking b0 c==> ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b1 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b1 c==> cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL ! c= cstem cCONS f0 cCONS f1 cCONS f2 cNIL b1 cstem cCONS f1 cCONS f0 cCONS f2 cNIL b1 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b1 ccc_cell b0 cCONS f0 cCONS f1 cCONS f3 cNIL b1 c~ ! c~ c/\ ccc_cell b0 cCONS f0 cCONS f1 cCONS f3 cNIL b1 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b1 cF f4
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul)))))), ((packing V) /\ ((saturated V) /\ ((leaf V) ul))) |- ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul)))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 cIN * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * * part cedgeX b0 * * part ccc_cell b0 b1 c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 f1 cIN * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 f1
- (_7137574 = _7137576) |- ((_7137574 = _7137576) /\ ((~ (_7137575 = _7137577)) \/ (((aff_gt _7137574) _7137575) = ((aff_gt _7137576) _7137577))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part caff_gt f0 f2 * * part caff_gt f1 f3
+ (c = T) |- ((((~ c) ==> d) = (c \/ d)) = (((~ T) ==> d) = (T \/ d)))
T c==> c= f0 cT c= c= c==> c~ f0 f1 c\/ f0 f1 c= c==> c~ cT f1 c\/ cT f1
- (_7137366 = _7137369), (_7137368 = _7137371) |- ((_7137367 = _7137370) ==> ((((aff_gt _7137369) _7137370) _7137371) \/ (~ (((aff_gt _7137366) _7137367) _7137368))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ caff_gt f1 f5 f3 c~ caff_gt f0 f4 f2
+ (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) /\ ((\x. ((\v. (v = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) x)) (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INSERT EMPTY))))
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL c/\ c? / cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL * / * / c= b1 * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL b0 * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL part cEMPTY
+ |- ((\b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))) b)
T * / ! c==> c==> f0 c= b0 b1 ! c==> c/\ f0 * b2 b1 * b2 b0 f1
+ (((u0 INSERT (u1 INSERT EMPTY)) UNION (u2 INSERT EMPTY)) = (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) |- (((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) SUBSET ((hull affine) ((u0 INSERT (u1 INSERT EMPTY)) UNION (u2 INSERT EMPTY)))) ==> (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))) = ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) ==> (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) SUBSET ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))))
T c==> c= * * part cUNION * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cUNION * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))), ((x = u1) ==> F), ((x = u0) \/ (x = u1)) |- F
T c==> c/\ c\/ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c==> c==> c= f0 f2 cF c==> c\/ c= f0 f1 c= f0 f2 cF
- (~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) |- ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) /\ F)
T c==> c~ c==> csaturated f0 c==> cpacking f0 c==> ! c= caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL ! c= cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 c~ ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ c~ c==> csaturated f0 c==> cpacking f0 c==> ! c= caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL ! c= cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 c~ ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF
+ |- ((!V. ((P V) ==> Q)) = ((?V. (P V)) ==> Q))
T c= ! c==> * f0 b0 f1 c==> c? / * f0 b0 f1
+ |- (((!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
+ |- (((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))), (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u1)) |- ((~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u1)) /\ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u1))
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c/\ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1
- |- (T = (((~ (_7137589 = u1)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137589)) = ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137589) \/ (~ (_7137589 = u1)))))
T c= cT c= c\/ c~ c= f0 f1 chull part caffine * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f0 c\/ chull part caffine * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f0 c~ c= f0 f1
- ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F) |- (((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F) /\ ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F))
T c==> c==> c~ c==> csaturated f0 c==> cpacking f0 c==> ! c= caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL ! c= cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 c~ ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF c/\ c==> c~ c==> csaturated f0 c==> cpacking f0 c==> ! c= caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL ! c= cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 c~ ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF c==> c~ c==> csaturated f0 c==> cpacking f0 c==> ! c= caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL ! c= cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 c~ ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF
- (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) |- ((~ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) _7137353)) \/ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) _7137353))
T c==> c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL ! c= cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 c\/ c~ cstem cCONS f2 cCONS f1 cCONS f3 cNIL f4 cstem cCONS f1 cCONS f2 cCONS f3 cNIL f4
- (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), (((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> (((cc_uh V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- F
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> c==> c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c= ccc_uh f4 cCONS f1 cCONS f0 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f4 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL cF
- |- ((_7137337 = _7137340) ==> ((~ (_7137335 = _7137338)) \/ ((~ (_7137336 = _7137339)) \/ ((((VX _7137338) _7137339) _7137340) \/ (~ (((VX _7137335) _7137336) _7137337))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ cVX f3 f5 f1 c~ cVX f2 f4 f0
- ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F), (((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F)) |- (((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F) /\ ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F))
T c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c/\ c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
- |- ((\u2'. (!u2. ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F))) u2')
T * / ! c==> c~ c==> c= b0 b1 c= b1 b0 cF f0
- |- (T = (((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0))) /\ ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))))
T c= cT c/\ c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0 c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
- (_7137672 = _7137675) |- ((_7137671 = _7137674) ==> ((~ (_7137670 = _7137673)) \/ ((((hull _7137673) _7137674) _7137675) \/ (~ (((hull _7137670) _7137671) _7137672)))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ chull f5 f3 f1 c~ chull f4 f2 f0
- ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F) |- (((~ ((u2' = u2) ==> (u2 = u2'))) ==> F) /\ ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F))
T c==> c==> c~ c==> c= f0 f1 c= f1 f0 cF c/\ c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c~ c==> c= f0 f1 c= f1 f0 cF
- (!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) |- ((\x. ((~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)) \/ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) _7137355)
T c==> ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 * / c\/ c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 f4
- (_7137550 = _7137551) |- ((_7137550 = _7137551) /\ ((stem _7137550) = (stem _7137551)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * part cstem f0 * part cstem f1
- |- (((((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F)) ==> (((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F))) = (((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F)))
T c= c==> c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul)))))) |- ((\ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul))))) ul)
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 cIN * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * * part cedgeX b0 * * part ccc_cell b0 b1 * / c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 b0 cIN * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 b0 f1
- (~ (P c)), (P c) |- ((~ (P c)) /\ (P c))
T c==> c~ * f0 f1 c==> * f0 f1 c/\ c~ * f0 f1 * f0 f1
- |- (~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))))
T c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- (_7137671 = _7137674), (_7137672 = _7137675) |- ((_7137670 = _7137673) ==> ((((hull _7137673) _7137674) _7137675) \/ (~ (((hull _7137670) _7137671) _7137672))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ chull f5 f1 f3 c~ chull f4 f0 f2
- |- ((((~ ((u2' = u2) ==> (u2 = u2'))) ==> F) ==> ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F)) = ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F))
T c= c==> c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c~ c==> c= f0 f1 c= f1 f0 cF
- |- (F = (~ T))
T c= cF c~ cT
- (_7137676 = _7137678) |- ((_7137677 = _7137679) ==> ((_7137676 INSERT _7137677) = (_7137678 INSERT _7137679)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- (~ (u2 = u2')), (u2' = u2) |- ((~ F) ==> F)
T c==> c~ c= f0 f1 c==> c= f1 f0 c==> c~ cF cF
- ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F), (((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F) ==> ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F)) |- ((((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F) ==> ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F)) /\ ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F))
T c==> c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c==> c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c/\ c==> c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF
- ((leaf V) ul) |- (((leaf V) ul) /\ ((stem ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))))
T c==> cleaf f0 f1 c/\ cleaf f0 f1 c= * part cstem f1 * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 part cEMPTY
- |- ((\u2. (!V. ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F))) u2)
T * / ! c==> c~ c==> c? / c? / c/\ c/\ cVX b1 * * part ccc_cell b1 cCONS f0 cCONS f1 cCONS b0 cNIL b2 c/\ cVX b1 * * part ccc_cell b1 cCONS f0 cCONS f1 cCONS b0 cNIL b3 c~ c= b2 b3 c\/ c/\ c= f0 b2 c= f1 b3 c/\ c= f0 b3 c= f1 b2 c~ c= f0 f1 cF f2
- |- ((!u2'. ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) = T)
T c= ! c==> ! c==> c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b1 f0 c\/ c= b1 f1 c\/ c= b1 b0 c= b1 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cT
- |- ((!x. (P \/ (Q x))) = (P \/ (!x. (Q x))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul)))))) |- (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul)))))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 cIN * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * * part cedgeX b0 * * part ccc_cell b0 b1 ! c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 b0 cIN * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 b0
- (~ ((u2' = u2) ==> (u2 = u2'))) |- ((~ ((u2' = u2) ==> (u2 = u2'))) /\ F)
T c==> c~ c==> c= f0 f1 c= f1 f0 c/\ c~ c==> c= f0 f1 c= f1 f0 cF
- ((u0 = v) /\ (u1 = u)) |- (F = F)
T c==> c/\ c= f0 f1 c= f2 f3 c= cF cF
- ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F) |- ((((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F) ==> ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F)) ==> ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F))
T c==> c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c==> c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF
- (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) |- (~ (EMPTY = (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))
T c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c~ c= part cEMPTY * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL
- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) /\ (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- (~ F), (x = u0), ((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ c~ cF cF
- (_7137670 = _7137673), (_7137671 = _7137674), (_7137672 = _7137675) |- ((((hull _7137673) _7137674) _7137675) \/ (~ (((hull _7137670) _7137671) _7137672)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ chull f1 f3 f5 c~ chull f0 f2 f4
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- (~ F), (x = u2), ((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c\/ c= f0 f2 c= f0 f3 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c/\ c~ cF cF
- (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) |- ((~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u0)) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u0))
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0
- (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) |- (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))))
T c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL
- |- ((_7137552 = _7137554) ==> ((~ (_7137553 = _7137555)) \/ (((cc_cell _7137552) _7137553) = ((cc_cell _7137554) _7137555))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part ccc_cell f0 f2 * * part ccc_cell f1 f3
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((~ (~ F)) ==> F) ==> (~ F)) = (~ F))
T c= c==> c==> c~ c~ cF cF c~ cF c~ cF
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) |- (((!x. ((~ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x)) \/ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x))) ==> ((\x. ((~ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x)) \/ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x))) _7137353)) = ((\x. ((~ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x)) \/ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x))) _7137353))
T c==> c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL ! c= cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 c= c==> ! c\/ c~ cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 * / c\/ c~ cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 f4 * / c\/ c~ cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 f4
- |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- (~ F), (u0 = u1), ((u0 = v) /\ (u1 = u)), (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c==> c/\ c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f5 cNIL f3 c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f5 cNIL f2 c~ c= f3 f2 c\/ c/\ c= f0 f3 c= f1 f2 c/\ c= f0 f2 c= f1 f3 c/\ c~ cF cF
- |- (((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F) ==> ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F))
T c==> c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF
- ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F))))))))))) |- (((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F))))))))))) /\ ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F))))))))))))
T c==> c==> csaturated f0 c==> cpacking f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> c~ c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f3 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f4 cNIL cF c/\ c==> csaturated f0 c==> cpacking f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> c~ c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f3 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f4 cNIL cF c==> csaturated f0 c==> cpacking f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> c~ c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f3 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f4 cNIL cF
- |- (((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F))))))))))) ==> ((saturated V) ==> ((packing V) ==> ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u2 = u2')) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) ==> ((~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))) ==> F))))))))))))
T c==> c==> csaturated f0 c==> cpacking f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> c~ c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f3 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f4 cNIL cF c==> csaturated f0 c==> cpacking f0 c==> c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS f4 cNIL c==> c~ c= f1 f2 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS f3 cNIL c= * part cstem cCONS f1 cCONS f2 cCONS f3 cNIL * part cstem cCONS f2 cCONS f1 cCONS f3 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> c~ c/\ c? / cleaf b0 cCONS f2 cCONS f1 cCONS f3 cNIL c? / cleaf b0 cCONS f1 cCONS f2 cCONS f4 cNIL cF
- (x = u2), ((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c/\ c~ c= f0 f2 c~ c= f0 f3 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c==> c~ cF cF
- (x = u1), ((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))) |- (~ (u1 = u2))
T c==> c= f0 f1 c==> c/\ c/\ c/\ c~ c= f0 f2 c~ c= f0 f1 c~ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c~ c= f1 f3
- (x = u0) |- (((~ (_7137588 = u1)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137588)) = ((~ (_7137588 = u1)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137588)))
T c==> c= f0 f1 c= c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2
- (_7137360 = _7137363), (_7137361 = _7137364), (_7137362 = _7137365) |- ((((cc_cell _7137363) _7137364) _7137365) \/ (~ (((cc_cell _7137360) _7137361) _7137362)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ ccc_cell f1 f3 f5 c~ ccc_cell f0 f2 f4
- |- (T = ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0))))
T c= cT c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
- (_7137566 = _7137568) |- ((_7137566 = _7137568) /\ ((~ (_7137567 = _7137569)) \/ (((CONS _7137566) _7137567) = ((CONS _7137568) _7137569))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
- |- ((!x'. ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x')) \/ (~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))) = ((!x. (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))) \/ (~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x))))
T c= ! c\/ c~ ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c~ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY f5 c\/ ! c~ ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c~ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY f5
- (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))), (!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))), (~ F), ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x)) |- ((~ F) /\ F)
T c==> ! c~ c/\ ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c==> ! c= caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> c~ cF c==> c/\ caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f5 ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f5 c/\ c~ cF cF
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F), (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- (_7137360 = _7137363), (_7137362 = _7137365) |- ((_7137360 = _7137363) /\ ((~ (_7137361 = _7137364)) \/ ((((cc_cell _7137363) _7137364) _7137365) \/ (~ (((cc_cell _7137360) _7137361) _7137362)))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ c~ c= f4 f5 c\/ ccc_cell f1 f5 f3 c~ ccc_cell f0 f4 f2
- (_7137574 = _7137576) |- ((_7137575 = _7137577) ==> (((aff_gt _7137574) _7137575) = ((aff_gt _7137576) _7137577)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part caff_gt f0 f2 * * part caff_gt f1 f3
- |- (((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1))) = T)
T c= c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cT
- (!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) |- (((!x. ((~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)) \/ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> ((\x. ((~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)) \/ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) _7137355)) = ((\x. ((~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)) \/ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) _7137355))
T c==> ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c= c==> ! c\/ c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 * / c\/ c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 f4 * / c\/ c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 f4
- |- ((((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F) ==> ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F)) = ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F))
T c= c==> c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF
- |- (((!u0. (!u2. (!V. ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F)))) ==> ((\u0. (!u2. (!V. ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F)))) u0)) = ((\u0. (!u2. (!V. ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F)))) u0))
T c= c==> ! ! ! c==> c~ c==> c? / c? / c/\ c/\ cVX b2 * * part ccc_cell b2 cCONS b0 cCONS f0 cCONS b1 cNIL b3 c/\ cVX b2 * * part ccc_cell b2 cCONS b0 cCONS f0 cCONS b1 cNIL b4 c~ c= b3 b4 c\/ c/\ c= b0 b3 c= f0 b4 c/\ c= b0 b4 c= f0 b3 c~ c= b0 f0 cF * / ! ! c==> c~ c==> c? / c? / c/\ c/\ cVX b2 * * part ccc_cell b2 cCONS b0 cCONS f0 cCONS b1 cNIL b3 c/\ cVX b2 * * part ccc_cell b2 cCONS b0 cCONS f0 cCONS b1 cNIL b4 c~ c= b3 b4 c\/ c/\ c= b0 b3 c= f0 b4 c/\ c= b0 b4 c= f0 b3 c~ c= b0 f0 cF f1 * / ! ! c==> c~ c==> c? / c? / c/\ c/\ cVX b2 * * part ccc_cell b2 cCONS b0 cCONS f0 cCONS b1 cNIL b3 c/\ cVX b2 * * part ccc_cell b2 cCONS b0 cCONS f0 cCONS b1 cNIL b4 c~ c= b3 b4 c\/ c/\ c= b0 b3 c= f0 b4 c/\ c= b0 b4 c= f0 b3 c~ c= b0 f0 cF f1
- (~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) |- F
T c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF
- |- (((~ ((u2' = u2) ==> (u2 = u2'))) ==> F) ==> ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F))
T c==> c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c~ c==> c= f0 f1 c= f1 f0 cF
- |- ((\u1. (!u0. (!u2. (!V. ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F))))) u1)
T * / ! ! ! c==> c~ c==> c? / c? / c/\ c/\ cVX b3 * * part ccc_cell b3 cCONS b1 cCONS b0 cCONS b2 cNIL b4 c/\ cVX b3 * * part ccc_cell b3 cCONS b1 cCONS b0 cCONS b2 cNIL b5 c~ c= b4 b5 c\/ c/\ c= b1 b4 c= b0 b5 c/\ c= b1 b5 c= b0 b4 c~ c= b1 b0 cF f0
- (_7137356 = _7137358), (_7137357 = _7137359) |- ((_7137356 = _7137358) /\ (((stem _7137358) _7137359) \/ (~ ((stem _7137356) _7137357))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ cstem f1 f3 c~ cstem f0 f2
- (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) |- (((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) ==> (((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY) = F)) = (((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY) = F))
T c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c= c==> c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c= c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY cF c= c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY cF
- |- ((!u2. ((u2' = u2) ==> (u2 = u2'))) = T)
T c= ! c==> c= f0 b0 c= b0 f0 cT
- (x = u0), ((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c==> c~ cF cF
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- |- ((((~ ((u2' = u2) ==> (u2 = u2'))) ==> F) ==> ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F)) ==> (((~ ((u2' = u2) ==> (u2 = u2'))) ==> F) ==> ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F)))
T c==> c==> c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c~ c==> c= f0 f1 c= f1 f0 cF
- (!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))), (~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)), ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x)) |- ((~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x))
T c==> ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4 c==> c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY f4 ccc_cell f5 cCONS f0 cCONS f1 cCONS f3 cNIL f4 c/\ c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4
- (u0 = u1), ((u0 = u) /\ (u1 = v)), (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c==> c/\ c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f5 cNIL f2 c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f5 cNIL f3 c~ c= f2 f3 c\/ c/\ c= f0 f2 c= f1 f3 c/\ c= f0 f3 c= f1 f2 c==> c~ cF cF
- (x = u1), ((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c/\ c~ c= f0 f2 c~ c= f0 f1 c~ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c==> c~ cF cF
- |- (((!u0. (!u2'. (!V. ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F)))) ==> ((\u0. (!u2'. (!V. ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F)))) u0)) = ((\u0. (!u2'. (!V. ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F)))) u0))
T c= c==> ! ! ! c==> c~ c==> csaturated b2 c==> cpacking b2 c==> ! c= caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b3 caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 c==> cleaf b2 cCONS b0 cCONS f0 cCONS f1 cNIL c==> cleaf b2 cCONS b0 cCONS f0 cCONS b1 cNIL c==> c~ c= b0 f0 c==> c/\ cleaf b2 cCONS f0 cCONS b0 cCONS f1 cNIL ! c= cstem cCONS b0 cCONS f0 cCONS f1 cNIL b3 cstem cCONS f0 cCONS b0 cCONS f1 cNIL b3 c==> c~ ! c~ c/\ caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 ccc_cell b2 cCONS b0 cCONS f0 cCONS b1 cNIL b3 c~ ! c~ c/\ ccc_cell b2 cCONS b0 cCONS f0 cCONS b1 cNIL b3 caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b3 cF * / ! ! c==> c~ c==> csaturated b2 c==> cpacking b2 c==> ! c= caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b3 caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 c==> cleaf b2 cCONS b0 cCONS f0 cCONS f1 cNIL c==> cleaf b2 cCONS b0 cCONS f0 cCONS b1 cNIL c==> c~ c= b0 f0 c==> c/\ cleaf b2 cCONS f0 cCONS b0 cCONS f1 cNIL ! c= cstem cCONS b0 cCONS f0 cCONS f1 cNIL b3 cstem cCONS f0 cCONS b0 cCONS f1 cNIL b3 c==> c~ ! c~ c/\ caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 ccc_cell b2 cCONS b0 cCONS f0 cCONS b1 cNIL b3 c~ ! c~ c/\ ccc_cell b2 cCONS b0 cCONS f0 cCONS b1 cNIL b3 caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b3 cF f2 * / ! ! c==> c~ c==> csaturated b2 c==> cpacking b2 c==> ! c= caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b3 caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 c==> cleaf b2 cCONS b0 cCONS f0 cCONS f1 cNIL c==> cleaf b2 cCONS b0 cCONS f0 cCONS b1 cNIL c==> c~ c= b0 f0 c==> c/\ cleaf b2 cCONS f0 cCONS b0 cCONS f1 cNIL ! c= cstem cCONS b0 cCONS f0 cCONS f1 cNIL b3 cstem cCONS f0 cCONS b0 cCONS f1 cNIL b3 c==> c~ ! c~ c/\ caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 ccc_cell b2 cCONS b0 cCONS f0 cCONS b1 cNIL b3 c~ ! c~ c/\ ccc_cell b2 cCONS b0 cCONS f0 cCONS b1 cNIL b3 caff_gt * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b3 cF f2
- (~ (u0 = u1)), (~ (u2 = u2')), (~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- F
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> c~ c/\ c? / cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL c? / cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL cF
- (x = u2) |- (((~ (_7137591 = u1)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137591)) = ((~ (_7137591 = u1)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137591)))
T c==> c= f0 f1 c= c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f4 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f4 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
- |- ((\u0. (!u2'. ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F))) u0)
T * / ! c==> c~ c==> ! c==> c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 c==> chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 ! c==> c\/ c= b2 b0 c\/ c= b2 f0 c\/ c= b2 b1 c= b2 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 cF f2
- (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) |- ((\x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) \/ (~ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) _7137352)
T c==> c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL ! c= cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 * / c\/ cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 c~ cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 f4
- |- (((~ ((u2' = u2) ==> (u2 = u2'))) ==> F) = ((u2' = u2) ==> (u2 = u2')))
T c= c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c= f0 f1 c= f1 f0
- (_7137360 = _7137363), (_7137362 = _7137365) |- ((_7137361 = _7137364) ==> ((((cc_cell _7137363) _7137364) _7137365) \/ (~ (((cc_cell _7137360) _7137361) _7137362))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ ccc_cell f1 f5 f3 c~ ccc_cell f0 f4 f2
- (_7137360 = _7137363), (_7137362 = _7137365) |- ((~ (_7137361 = _7137364)) \/ ((((cc_cell _7137363) _7137364) _7137365) \/ (~ (((cc_cell _7137360) _7137361) _7137362))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ ccc_cell f1 f5 f3 c~ ccc_cell f0 f4 f2
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- (_7137574 = _7137576), (_7137575 = _7137577) |- ((_7137575 = _7137577) /\ (((aff_gt _7137574) _7137575) = ((aff_gt _7137576) _7137577)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= * * part caff_gt f0 f2 * * part caff_gt f1 f3
- ((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) |- ((!ul. (!P. (((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) ==> (P (stem ul))))) ==> (P (stem ul)))
T c==> c/\ c? / cleaf b0 f0 * f1 * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 part cEMPTY c==> ! ! c==> c/\ c? / cleaf b2 b0 * b1 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * b1 * part cstem b0 * f1 * part cstem f0
- (x = u1) |- (((~ (_7137589 = u1)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137589)) = ((~ (_7137589 = u1)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137589)))
T c==> c= f0 f1 c= c\/ c~ c= f2 f1 chull part caffine * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f2 c\/ c~ c= f2 f1 chull part caffine * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f2
- |- ((!u1. (!u0. (!u2'. ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))))) = T)
T c= ! ! ! c==> ! c==> c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b3 c==> chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 ! c==> c\/ c= b3 b1 c\/ c= b3 b0 c\/ c= b3 b2 c= b3 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b3 cT
- |- ((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))
T c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- (u0 = u1), ((u0 = u) /\ (u1 = v)), (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))) |- (((VX V) ((cc_cell V) ((CONS v) ((CONS v) ((CONS u2) NIL))))) v)
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c==> c/\ c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f5 cNIL f2 c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f5 cNIL f3 c~ c= f2 f3 c\/ c/\ c= f0 f2 c= f1 f3 c/\ c= f0 f3 c= f1 f2 cVX f4 * * part ccc_cell f4 cCONS f3 cCONS f3 cCONS f5 cNIL f3
- ((u0 = v) /\ (u1 = u)) |- ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u) ((CONS u2) NIL))))) u) = (((VX V) ((cc_cell V) ((CONS v) ((CONS u) ((CONS u2) NIL))))) u))
T c==> c/\ c= f0 f1 c= f2 f3 c= cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS f5 cNIL f3 cVX f4 * * part ccc_cell f4 cCONS f1 cCONS f3 cCONS f5 cNIL f3
- (_7137362 = _7137365) |- ((_7137362 = _7137365) /\ ((~ (_7137360 = _7137363)) \/ ((~ (_7137361 = _7137364)) \/ ((((cc_cell _7137363) _7137364) _7137365) \/ (~ (((cc_cell _7137360) _7137361) _7137362))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ ccc_cell f3 f5 f1 c~ ccc_cell f2 f4 f0
- ((u0 = v) /\ (u1 = u)) |- ((u0 = v) = (u0 = v))
T c==> c/\ c= f0 f1 c= f2 f3 c= c= f0 f1 c= f0 f1
- (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) |- (((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY) = F)
T c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c= c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY cF
- (_7137366 = _7137369), (_7137368 = _7137371) |- ((~ (_7137367 = _7137370)) \/ ((((aff_gt _7137369) _7137370) _7137371) \/ (~ (((aff_gt _7137366) _7137367) _7137368))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ caff_gt f1 f5 f3 c~ caff_gt f0 f4 f2
- (_7137357 = _7137359) |- ((_7137357 = _7137359) /\ ((~ (_7137356 = _7137358)) \/ (((stem _7137358) _7137359) \/ (~ ((stem _7137356) _7137357)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cstem f3 f1 c~ cstem f2 f0
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- (~ F), (x = u0), ((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ cF cF
- |- (T = (((~ (_7137591 = u2)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137591)) = ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137591) \/ (~ (_7137591 = u2)))))
T c= cT c= c\/ c~ c= f0 f1 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f0 c\/ chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f0 c~ c= f0 f1
- (_7137552 = _7137554), (_7137553 = _7137555) |- ((_7137553 = _7137555) /\ (((cc_cell _7137552) _7137553) = ((cc_cell _7137554) _7137555)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= * * part ccc_cell f0 f2 * * part ccc_cell f1 f3
- (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))), (~ F), (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)), (x = u0) |- ((~ F) /\ F)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ cF c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f0 c/\ c~ cF cF
- |- ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul)))))) ==> (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul)))))))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 cIN * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * * part cedgeX b0 * * part ccc_cell b0 b1 ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 cIN * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * * part cedgeX b0 * * part ccc_cell b0 b1
- ((packing V) /\ ((saturated V) /\ ((leaf V) ul))) |- ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul)))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul))))
T c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 f1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 cIN * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * * part cedgeX b0 * * part ccc_cell b0 b1 cIN * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 f1
- |- ((\u0. ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F)) u0)
T * / c==> c~ ! c= c\/ c\/ c= b1 b0 c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 cF f2
- (~ F), (x = u1), ((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c\/ c= f0 f2 c= f0 f1 c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c/\ c~ cF cF
- (_7137366 = _7137369), (_7137368 = _7137371) |- ((_7137366 = _7137369) /\ ((~ (_7137367 = _7137370)) \/ ((((aff_gt _7137369) _7137370) _7137371) \/ (~ (((aff_gt _7137366) _7137367) _7137368)))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ c~ c= f4 f5 c\/ caff_gt f1 f5 f3 c~ caff_gt f0 f4 f2
- (_7137357 = _7137359) |- ((_7137356 = _7137358) ==> (((stem _7137358) _7137359) \/ (~ ((stem _7137356) _7137357))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cstem f3 f1 c~ cstem f2 f0
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- (((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F)) |- ((((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F)) /\ (((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F)))
T c==> c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c/\ c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
- |- ((\u2. (!u1. (!u0. (!u2'. ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F))))) u2)
T * / ! ! ! c==> c~ c==> ! c==> c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 c==> chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 ! c==> c\/ c= b4 b2 c\/ c= b4 b1 c\/ c= b4 b3 c= b4 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 cF f0
- |- (T = (((~ (_7137588 = u0)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137588)) = ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137588) \/ (~ (_7137588 = u0)))))
T c= cT c= c\/ c~ c= f0 f1 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c\/ chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ c= f0 f1
- ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F), (((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F) ==> ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F)) |- (((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F) /\ ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F))
T c==> c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c==> c==> c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c/\ c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (x = u0) |- (((~ (_7137588 = u0)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137588)) = ((~ (_7137588 = u0)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137588)))
T c==> c= f0 f1 c= c\/ c~ c= f2 f1 chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c\/ c~ c= f2 f1 chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2
- (_7137562 = _7137563) |- ((_7137562 = _7137563) /\ ((BIT0 _7137562) = (BIT0 _7137563)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))), (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)), (x = u2) |- ((~ F) ==> F)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f2 c==> c~ cF cF
- (_7137676 = _7137678) |- ((_7137676 = _7137678) /\ ((~ (_7137677 = _7137679)) \/ ((_7137676 INSERT _7137677) = (_7137678 INSERT _7137679))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- |- (((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) ==> (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) = F)) = (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) = F))
T c= c==> c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF c= c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF
- |- ((!u1. (!u0. (!u2'. (!V. ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x))))))))))))))))) = T)
T c= ! ! ! ! c==> csaturated b3 c==> cpacking b3 c==> ! c= caff_gt * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b4 caff_gt * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 c==> cleaf b3 cCONS b1 cCONS b0 cCONS f0 cNIL c==> cleaf b3 cCONS b1 cCONS b0 cCONS b2 cNIL c==> c~ c= b1 b0 c==> c/\ cleaf b3 cCONS b0 cCONS b1 cCONS f0 cNIL ! c= cstem cCONS b1 cCONS b0 cCONS f0 cNIL b4 cstem cCONS b0 cCONS b1 cCONS f0 cNIL b4 c==> c~ ! c~ c/\ caff_gt * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 ccc_cell b3 cCONS b1 cCONS b0 cCONS b2 cNIL b4 c~ ! c~ c/\ ccc_cell b3 cCONS b1 cCONS b0 cCONS b2 cNIL b4 caff_gt * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b4 cT
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul)))))), ((packing V) /\ ((saturated V) /\ ((leaf V) ul))) |- ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul)))))) /\ ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul))))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 cIN * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * * part cedgeX b0 * * part ccc_cell b0 b1 c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 f1 c/\ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 cIN * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * * part cedgeX b0 * * part ccc_cell b0 b1 cIN * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 f1
- |- ((!u2. (!u1. (!u0. (!u2'. (!V. ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))))))) = (!u2. (!u1. (!u0. (!u2'. (!V. ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F)))))))
T c= ! ! ! ! ! c==> csaturated b4 c==> cpacking b4 c==> ! c= caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b5 caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 part cEMPTY b5 c==> cleaf b4 cCONS b2 cCONS b1 cCONS b0 cNIL c==> cleaf b4 cCONS b2 cCONS b1 cCONS b3 cNIL c==> c~ c= b2 b1 c==> c/\ cleaf b4 cCONS b1 cCONS b2 cCONS b0 cNIL ! c= cstem cCONS b2 cCONS b1 cCONS b0 cNIL b5 cstem cCONS b1 cCONS b2 cCONS b0 cNIL b5 c==> c~ ! c~ c/\ caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 part cEMPTY b5 ccc_cell b4 cCONS b2 cCONS b1 cCONS b3 cNIL b5 c~ ! c~ c/\ ccc_cell b4 cCONS b2 cCONS b1 cCONS b3 cNIL b5 caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b5 ! ! ! ! ! c==> c~ c==> csaturated b4 c==> cpacking b4 c==> ! c= caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b5 caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 part cEMPTY b5 c==> cleaf b4 cCONS b2 cCONS b1 cCONS b0 cNIL c==> cleaf b4 cCONS b2 cCONS b1 cCONS b3 cNIL c==> c~ c= b2 b1 c==> c/\ cleaf b4 cCONS b1 cCONS b2 cCONS b0 cNIL ! c= cstem cCONS b2 cCONS b1 cCONS b0 cNIL b5 cstem cCONS b1 cCONS b2 cCONS b0 cNIL b5 c==> c~ ! c~ c/\ caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 part cEMPTY b5 ccc_cell b4 cCONS b2 cCONS b1 cCONS b3 cNIL b5 c~ ! c~ c/\ ccc_cell b4 cCONS b2 cCONS b1 cCONS b3 cNIL b5 caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b5 cF
- |- ((!x'. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x') \/ (~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x)))) = ((!x. (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)) \/ (~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))))
T c= ! c\/ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c\/ ! caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY f4
- (u0 = u1), ((u0 = v) /\ (u1 = u)), (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))) |- (((VX V) ((cc_cell V) ((CONS u) ((CONS u) ((CONS u2) NIL))))) u)
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c==> c/\ c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f5 cNIL f3 c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f5 cNIL f2 c~ c= f3 f2 c\/ c/\ c= f0 f3 c= f1 f2 c/\ c= f0 f2 c= f1 f3 cVX f4 * * part ccc_cell f4 cCONS f3 cCONS f3 cCONS f5 cNIL f3
- (P c) |- ((~ (P c)) ==> (P c))
T c==> * f0 f1 c==> c~ * f0 f1 * f0 f1
- (x = u2) |- (((~ (_7137591 = u2)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137591)) = ((~ (_7137591 = u2)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137591)))
T c==> c= f0 f1 c= c\/ c~ c= f2 f1 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c\/ c~ c= f2 f1 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2
- |- (((!u2. (!u1. (!u0. (!u2'. ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F))))) ==> ((\u2. (!u1. (!u0. (!u2'. ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F))))) u2)) = ((\u2. (!u1. (!u0. (!u2'. ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F))))) u2))
T c= c==> ! ! ! ! c==> c~ c==> ! c==> c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 c==> chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 ! c==> c\/ c= b4 b2 c\/ c= b4 b1 c\/ c= b4 b3 c= b4 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 cF * / ! ! ! c==> c~ c==> ! c==> c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 c==> chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 ! c==> c\/ c= b4 b2 c\/ c= b4 b1 c\/ c= b4 b3 c= b4 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 cF f0 * / ! ! ! c==> c~ c==> ! c==> c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 c==> chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 ! c==> c\/ c= b4 b2 c\/ c= b4 b1 c\/ c= b4 b3 c= b4 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 cF f0
- ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F) |- (((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F) /\ ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F))
T c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c/\ c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
- (~ F), (x = u1), ((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c/\ c~ c= f0 f2 c~ c= f0 f1 c~ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ cF cF
- |- ((\u2'. (!V. ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F))) u2')
T * / ! c==> c~ c==> csaturated b1 c==> cpacking b1 c==> ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b2 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY b2 c==> cleaf b1 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf b1 cCONS f0 cCONS f1 cCONS b0 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf b1 cCONS f1 cCONS f0 cCONS f2 cNIL ! c= cstem cCONS f0 cCONS f1 cCONS f2 cNIL b2 cstem cCONS f1 cCONS f0 cCONS f2 cNIL b2 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY b2 ccc_cell b1 cCONS f0 cCONS f1 cCONS b0 cNIL b2 c~ ! c~ c/\ ccc_cell b1 cCONS f0 cCONS f1 cCONS b0 cNIL b2 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b2 cF f3
- (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))), (~ F), (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)), (x = u2) |- ((~ F) /\ F)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ cF c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f2 c/\ c~ cF cF
- |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) = ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c= c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- (x = u2), ((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) |- (~ (u2 = u0))
T c==> c= f0 f1 c==> c/\ c\/ c\/ c= f0 f2 c= f0 f3 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c~ c= f1 f2
- |- (((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) ==> ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)) = ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
- ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- ((~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))
T c==> cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c==> c~ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL
- |- ((_7137357 = _7137359) ==> ((~ (_7137356 = _7137358)) \/ (((stem _7137358) _7137359) \/ (~ ((stem _7137356) _7137357)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cstem f3 f1 c~ cstem f2 f0
- (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') |- ((~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2')) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2'))
T c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- |- ((~ (_7137562 = _7137563)) \/ ((BIT0 _7137562) = (BIT0 _7137563)))
T c\/ c~ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- (~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) |- ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) /\ F)
T c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 c/\ c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF
- |- ((~ (_7137546 = _7137547)) \/ ((packing _7137547) \/ (~ (packing _7137546))))
T c\/ c~ c= f0 f1 c\/ cpacking f1 c~ cpacking f0
- |- ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x))))
T c= c? / c/\ f0 * f1 b0 c/\ f0 c? / * f1 b0
- (_7137552 = _7137554) |- ((_7137553 = _7137555) ==> (((cc_cell _7137552) _7137553) = ((cc_cell _7137554) _7137555)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part ccc_cell f0 f2 * * part ccc_cell f1 f3
- |- (((\t. (f t)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((\V. ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F)) V)
T * / c==> c~ c==> c? / c? / c/\ c/\ cVX b0 * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS f2 cNIL b1 c/\ cVX b0 * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS f2 cNIL b2 c~ c= b1 b2 c\/ c/\ c= f0 b1 c= f1 b2 c/\ c= f0 b2 c= f1 b1 c~ c= f0 f1 cF f3
- |- ((_7137566 = _7137568) ==> ((~ (_7137567 = _7137569)) \/ (((CONS _7137566) _7137567) = ((CONS _7137568) _7137569))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
- |- ((!x'. (((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2)))) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x'))) = (((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2)))) \/ (!x. (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))))
T c= ! c\/ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 ! chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0
- (!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))), (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)), (x = u1) |- ((~ F) ==> F)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f1 c==> c~ cF cF
- |- ((!x'. ((~ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x)) \/ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x'))) = ((~ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x)) \/ (!x. ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x))))
T c= ! c\/ c~ cstem cCONS f0 cCONS f1 cCONS f2 cNIL f3 cstem cCONS f1 cCONS f0 cCONS f2 cNIL b0 c\/ c~ cstem cCONS f0 cCONS f1 cCONS f2 cNIL f3 ! cstem cCONS f1 cCONS f0 cCONS f2 cNIL b0
- ((((u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) ==> B) /\ (u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))) ==> B) |- (((((u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) ==> B) /\ (u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))) ==> B) /\ ((((u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY))))) ==> B) /\ (u2' IN ((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))))) ==> B))
T c==> c==> c/\ c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c/\ c==> c/\ c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c/\ c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
- |- (((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul)))))) ==> (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul))))))) = (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul)))))))
T c= c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 cIN * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * * part cedgeX b0 * * part ccc_cell b0 b1 ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 cIN * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * * part cedgeX b0 * * part ccc_cell b0 b1 ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 cIN * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * * part cedgeX b0 * * part ccc_cell b0 b1
- ((u0 = v) /\ (u1 = u)) |- ((~ (u = v)) = (~ (u = v)))
T c==> c/\ c= f0 f1 c= f2 f3 c= c~ c= f3 f1 c~ c= f3 f1
- |- (((!V. ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F)) ==> ((\V. ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F)) V)) = ((\V. ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F)) V))
T c= c==> ! c==> c~ c==> c? / c? / c/\ c/\ cVX b0 * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS f2 cNIL b1 c/\ cVX b0 * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS f2 cNIL b2 c~ c= b1 b2 c\/ c/\ c= f0 b1 c= f1 b2 c/\ c= f0 b2 c= f1 b1 c~ c= f0 f1 cF * / c==> c~ c==> c? / c? / c/\ c/\ cVX b0 * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS f2 cNIL b1 c/\ cVX b0 * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS f2 cNIL b2 c~ c= b1 b2 c\/ c/\ c= f0 b1 c= f1 b2 c/\ c= f0 b2 c= f1 b1 c~ c= f0 f1 cF f3 * / c==> c~ c==> c? / c? / c/\ c/\ cVX b0 * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS f2 cNIL b1 c/\ cVX b0 * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS f2 cNIL b2 c~ c= b1 b2 c\/ c/\ c= f0 b1 c= f1 b2 c/\ c= f0 b2 c= f1 b1 c~ c= f0 f1 cF f3
- |- ((((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F) ==> ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F)) ==> (((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F) ==> ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F)))
T c==> c==> c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c==> c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cF
- |- (((u2' = u2) ==> (u2 = u2')) = T)
T c= c==> c= f0 f1 c= f1 f0 cT
- (~ (u0 = u1)), (~ (u2 = u2')), (~ ((?V. ((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) /\ (?V. ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))))), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- F
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> c~ c/\ c? / cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL c? / cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f1 cCONS f0 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL cF
- (x = u2) |- ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') = (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2'))
T c==> c= f0 f1 c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f4
- |- ((~ (_7137357 = _7137359)) \/ ((~ (_7137356 = _7137358)) \/ (((stem _7137358) _7137359) \/ (~ ((stem _7137356) _7137357)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cstem f3 f1 c~ cstem f2 f0
- |- (((!u1. (!u0. ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F))) ==> ((\u1. (!u0. ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F))) u1)) = ((\u1. (!u0. ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F))) u1))
T c= c==> ! ! c==> c~ ! c= c\/ c\/ c= b2 b1 c= b2 b0 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cF * / ! c==> c~ ! c= c\/ c\/ c= b2 b1 c= b2 b0 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cF f1 * / ! c==> c~ ! c= c\/ c\/ c= b2 b1 c= b2 b0 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cF f1
- ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F) |- (((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F) /\ ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F))
T c==> c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c/\ c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF c==> c~ c==> c? / c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c~ c= f1 f2 cF
- |- ((?v'. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v') /\ (~ (u = v')))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u))))) = ((?v. ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v))))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))
T c= c? / c/\ c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f4 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c~ c= f4 b0 c\/ c/\ c= f1 f4 c= f2 f5 c/\ c= f1 f5 c= f2 f4 c/\ c? / c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL f4 c/\ cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS f3 cNIL b0 c~ c= f4 b0 c\/ c/\ c= f1 f4 c= f2 f5 c/\ c= f1 f5 c= f2 f4
- (~ (u1 = u1)) |- ((~ (u1 = u1)) /\ (u1 = u1))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- ((u0 = u) /\ (u1 = v)), (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))) |- (((VX V) ((cc_cell V) ((CONS u0) ((CONS v) ((CONS u2) NIL))))) u)
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f2 cCONS f5 cNIL f1 c/\ cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f2 cCONS f5 cNIL f3 c~ c= f1 f3 c\/ c/\ c= f0 f1 c= f2 f3 c/\ c= f0 f3 c= f2 f1 cVX f4 * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS f5 cNIL f1
- |- (((!u2. ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F)) ==> ((\u2. ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F)) u2)) = ((\u2. ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F)) u2))
T c= c==> ! c==> c~ c==> c= f0 b0 c= b0 f0 cF * / c==> c~ c==> c= f0 b0 c= b0 f0 cF f1 * / c==> c~ c==> c= f0 b0 c= b0 f0 cF f1
- ((u0 = u) /\ (u1 = v)) |- ((~ (u = v)) = (~ (u = v)))
T c==> c/\ c= f0 f1 c= f2 f3 c= c~ c= f1 f3 c~ c= f1 f3
- |- ((~ (_7137574 = _7137576)) \/ ((~ (_7137575 = _7137577)) \/ (((aff_gt _7137574) _7137575) = ((aff_gt _7137576) _7137577))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part caff_gt f0 f2 * * part caff_gt f1 f3
- (_7137542 = _7137544), (_7137543 = _7137545) |- ((_7137543 = _7137545) /\ (((leaf _7137544) _7137545) \/ (~ ((leaf _7137542) _7137543))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ cleaf f1 f3 c~ cleaf f0 f2
- |- (((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0))) /\ (((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) = (SUC (NUMERAL (BIT0 (BIT1 _0)))))))
T c/\ c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0 c/\ c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 c= cNUMERAL cBIT1 cBIT1 c_0 cSUC cNUMERAL cBIT0 cBIT1 c_0
- ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F) |- ((((~ ((u2' = u2) ==> (u2 = u2'))) ==> F) ==> ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F)) ==> ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F))
T c==> c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c==> c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c~ c==> c= f0 f1 c= f1 f0 cF
- (_7137672 = _7137675) |- ((_7137672 = _7137675) /\ ((~ (_7137671 = _7137674)) \/ ((~ (_7137670 = _7137673)) \/ ((((hull _7137673) _7137674) _7137675) \/ (~ (((hull _7137670) _7137671) _7137672))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ chull f5 f3 f1 c~ chull f4 f2 f0
- |- ((!u0. (!u2. (!V. ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))))) = T)
T c= ! ! ! c==> c? / c? / c/\ c/\ cVX b2 * * part ccc_cell b2 cCONS b0 cCONS f0 cCONS b1 cNIL b3 c/\ cVX b2 * * part ccc_cell b2 cCONS b0 cCONS f0 cCONS b1 cNIL b4 c~ c= b3 b4 c\/ c/\ c= b0 b3 c= f0 b4 c/\ c= b0 b4 c= f0 b3 c~ c= b0 f0 cT
- ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F), (((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F)) |- ((((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F)) /\ ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F))
T c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c/\ c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
- |- (((!u2'. ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F)) ==> ((\u2'. ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F)) u2')) = ((\u2'. ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F)) u2'))
T c= c==> ! c==> c~ c==> ! c==> c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b1 f0 c\/ c= b1 f1 c\/ c= b1 b0 c= b1 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cF * / c==> c~ c==> ! c==> c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b1 f0 c\/ c= b1 f1 c\/ c= b1 b0 c= b1 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cF f3 * / c==> c~ c==> ! c==> c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b1 f0 c\/ c= b1 f1 c\/ c= b1 b0 c= b1 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cF f3
- |- (((!u1. (!u0. (!u2. (!V. ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F))))) ==> ((\u1. (!u0. (!u2. (!V. ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F))))) u1)) = ((\u1. (!u0. (!u2. (!V. ((~ ((?u. (?v. (((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) u) /\ ((((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) v) /\ (~ (u = v)))) /\ (((u0 = u) /\ (u1 = v)) \/ ((u0 = v) /\ (u1 = u)))))) ==> (~ (u0 = u1)))) ==> F))))) u1))
T c= c==> ! ! ! ! c==> c~ c==> c? / c? / c/\ c/\ cVX b3 * * part ccc_cell b3 cCONS b1 cCONS b0 cCONS b2 cNIL b4 c/\ cVX b3 * * part ccc_cell b3 cCONS b1 cCONS b0 cCONS b2 cNIL b5 c~ c= b4 b5 c\/ c/\ c= b1 b4 c= b0 b5 c/\ c= b1 b5 c= b0 b4 c~ c= b1 b0 cF * / ! ! ! c==> c~ c==> c? / c? / c/\ c/\ cVX b3 * * part ccc_cell b3 cCONS b1 cCONS b0 cCONS b2 cNIL b4 c/\ cVX b3 * * part ccc_cell b3 cCONS b1 cCONS b0 cCONS b2 cNIL b5 c~ c= b4 b5 c\/ c/\ c= b1 b4 c= b0 b5 c/\ c= b1 b5 c= b0 b4 c~ c= b1 b0 cF f0 * / ! ! ! c==> c~ c==> c? / c? / c/\ c/\ cVX b3 * * part ccc_cell b3 cCONS b1 cCONS b0 cCONS b2 cNIL b4 c/\ cVX b3 * * part ccc_cell b3 cCONS b1 cCONS b0 cCONS b2 cNIL b5 c~ c= b4 b5 c\/ c/\ c= b1 b4 c= b0 b5 c/\ c= b1 b5 c= b0 b4 c~ c= b1 b0 cF f0
- (~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) |- ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) /\ F)
T c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
- (~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x)), ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x)) |- ((~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x)) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))
T c==> c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3 c==> c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3 ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL f3 c/\ c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3
- (x = u1), ((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) |- (~ (u1 = u2))
T c==> c= f0 f1 c==> c/\ c\/ c\/ c= f0 f2 c= f0 f1 c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c~ c= f1 f3
- (_7137670 = _7137673), (_7137671 = _7137674), (_7137672 = _7137675) |- ((_7137670 = _7137673) /\ ((((hull _7137673) _7137674) _7137675) \/ (~ (((hull _7137670) _7137671) _7137672))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f0 f1 c\/ chull f1 f3 f5 c~ chull f0 f2 f4
- (_7137556 = _7137558) |- ((_7137557 = _7137559) ==> (((cc_ke _7137556) _7137557) = ((cc_ke _7137558) _7137559)))
T c==> c= f0 f1 c==> c= f2 f3 c= ccc_ke f0 f2 ccc_ke f1 f3
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- (_7137335 = _7137338), (_7137336 = _7137339), (_7137337 = _7137340) |- ((((VX _7137338) _7137339) _7137340) \/ (~ (((VX _7137335) _7137336) _7137337)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ cVX f1 f3 f5 c~ cVX f0 f2 f4
- (_7137356 = _7137358), (_7137357 = _7137359) |- (((((stem _7137356) _7137357) = ((stem _7137358) _7137359)) ==> (((stem _7137358) _7137359) \/ (~ ((stem _7137356) _7137357)))) = (((stem _7137358) _7137359) \/ (~ ((stem _7137356) _7137357))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cstem f0 f2 cstem f1 f3 c\/ cstem f1 f3 c~ cstem f0 f2 c\/ cstem f1 f3 c~ cstem f0 f2
- |- ((\u2. (!u1. (!u0. (!u2'. (!V. ((~ ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) ==> F)))))) u2)
T * / ! ! ! ! c==> c~ c==> csaturated b4 c==> cpacking b4 c==> ! c= caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b5 caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 part cEMPTY b5 c==> cleaf b4 cCONS b2 cCONS b1 cCONS b0 cNIL c==> cleaf b4 cCONS b2 cCONS b1 cCONS b3 cNIL c==> c~ c= b2 b1 c==> c/\ cleaf b4 cCONS b1 cCONS b2 cCONS b0 cNIL ! c= cstem cCONS b2 cCONS b1 cCONS b0 cNIL b5 cstem cCONS b1 cCONS b2 cCONS b0 cNIL b5 c==> c~ ! c~ c/\ caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 part cEMPTY b5 ccc_cell b4 cCONS b2 cCONS b1 cCONS b3 cNIL b5 c~ ! c~ c/\ ccc_cell b4 cCONS b2 cCONS b1 cCONS b3 cNIL b5 caff_gt * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b5 cF f0
- |- (((!u2'. (!u2. ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F))) ==> ((\u2'. (!u2. ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F))) u2')) = ((\u2'. (!u2. ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F))) u2'))
T c= c==> ! ! c==> c~ c==> c= b0 b1 c= b1 b0 cF * / ! c==> c~ c==> c= b0 b1 c= b1 b0 cF f0 * / ! c==> c~ c==> c= b0 b1 c= b1 b0 cF f0
- (x = u0), ((((~ (x = u0)) /\ (~ (x = u1))) /\ (~ (x = u2))) /\ ((x = u0) \/ ((x = u1) \/ (x = u2)))) |- (~ (u0 = u2))
T c==> c= f0 f1 c==> c/\ c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ c= f1 f3
- (~ ((u2' = u2) ==> (u2 = u2'))) |- F
T c==> c~ c==> c= f0 f1 c= f1 f0 cF
- |- (((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) = (SUC (NUMERAL (BIT0 (BIT1 _0))))))
T c/\ c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 c= cNUMERAL cBIT1 cBIT1 c_0 cSUC cNUMERAL cBIT0 cBIT1 c_0
- (~ (u0 = u1)), (~ (u2 = u2')), (packing V), (saturated V), (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) = ((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))))), (((stem ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = (stem ((CONS u1) ((CONS u0) ((CONS u2) NIL))))) ==> (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2') NIL))))) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) |- F
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> cpacking f4 c==> csaturated f4 c==> c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f3 cNIL * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f4 cCONS f1 cCONS f0 cCONS f2 cNIL c= * part cstem cCONS f0 cCONS f1 cCONS f2 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c==> c==> c= * part cstem cCONS f0 cCONS f1 cCONS f3 cNIL * part cstem cCONS f1 cCONS f0 cCONS f2 cNIL c= ccc_uh f4 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f4 cCONS f0 cCONS f1 cCONS f3 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS f3 cNIL cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS f3 cNIL cF
- |- ((_7137550 = _7137551) ==> ((stem _7137550) = (stem _7137551)))
T c==> c= f0 f1 c= * part cstem f0 * part cstem f1
- ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x)) |- ((~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x)) ==> (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))
T c==> c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3 ccc_cell f4 cCONS f0 cCONS f1 cCONS f2 cNIL f3 c==> c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- ((\u1. (!u0. ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F))) u1)
T * / ! c==> c~ ! c= c\/ c\/ c= b2 b1 c= b2 b0 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cF f1
- (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) |- (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ ((!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) \/ (~ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) /\ (!x. ((~ ((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x)) \/ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))))
T c==> c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL ! c= cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ ! c\/ cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 c~ cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 ! c\/ c~ cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0
- |- (((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))))) = T)
T c= c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f3 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cT
- |- ((\u2. (!u1. (!u0. ((~ (!x. ((((x = u0) \/ (x = u1)) \/ (x = u2)) = ((x = u0) \/ ((x = u1) \/ (x = u2)))))) ==> F)))) u2)
T * / ! ! c==> c~ ! c= c\/ c\/ c= b3 b2 c= b3 b1 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 cF f0
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))
T c==> c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- ((_7137548 = _7137549) ==> ((saturated _7137549) \/ (~ (saturated _7137548))))
T c==> c= f0 f1 c\/ csaturated f1 c~ csaturated f0
- (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) /\ ((~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) INTER (cc_A0 ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = EMPTY)) /\ (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))) |- (((((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))))) = T)
T c==> c/\ cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL c/\ c~ c= * * part cINTER * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * part ccc_A0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c= cIN * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL part cEMPTY * * part cedgeX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f4 cNIL cT
- |- ((!V. ((saturated V) ==> ((packing V) ==> ((!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) ==> ((~ (u0 = u1)) ==> ((((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) ==> ((~ (!x. (~ ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x))))) ==> (~ (!x. (~ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x) /\ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)))))))))))))) = T)
T c= ! c==> csaturated b0 c==> cpacking b0 c==> ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b1 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b1 c==> cleaf b0 cCONS f0 cCONS f1 cCONS f2 cNIL c==> cleaf b0 cCONS f0 cCONS f1 cCONS f3 cNIL c==> c~ c= f0 f1 c==> c/\ cleaf b0 cCONS f1 cCONS f0 cCONS f2 cNIL ! c= cstem cCONS f0 cCONS f1 cCONS f2 cNIL b1 cstem cCONS f1 cCONS f0 cCONS f2 cNIL b1 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b1 ccc_cell b0 cCONS f0 cCONS f1 cCONS f3 cNIL b1 c~ ! c~ c/\ ccc_cell b0 cCONS f0 cCONS f1 cCONS f3 cNIL b1 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b1 cT
- (!ul. (!P. (((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) ==> (P (stem ul))))), ((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) |- ((!ul. (!P. (((?V. ((leaf V) ul)) /\ (P (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)))) ==> (P (stem ul))))) /\ (P (stem ul)))
T c==> ! ! c==> c/\ c? / cleaf b2 b0 * b1 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * b1 * part cstem b0 c==> c/\ c? / cleaf b0 f0 * f1 * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 part cEMPTY c/\ ! ! c==> c/\ c? / cleaf b2 b0 * b1 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * b1 * part cstem b0 * f1 * part cstem f0
- (~ (P b)), (P c), (b = c) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c==> c~ cF cF
- (!x. ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x) = (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x))), ((((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2' INSERT EMPTY)) x) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2') NIL)))) x)) |- ((~ (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x)) ==> (((aff_gt (u0 INSERT (u1 INSERT EMPTY))) (u2 INSERT EMPTY)) x))
T c==> ! c= caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY f4 ccc_cell f5 cCONS f0 cCONS f1 cCONS f3 cNIL f4 c==> c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4
- |- ((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 * f1 b1 b1 * f1 f0
- (~ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)), (x = u2'), (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') |- ((~ F) ==> F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f4 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> c~ cF cF
- (x = u1), ((((x = u0) \/ (x = u1)) \/ (x = u2)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ (~ (x = u2))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c\/ c= f0 f2 c= f0 f1 c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c==> c~ cF cF
- |- (~ (~ T))
T c~ c~ cT
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul)))))) |- (((!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul))))) ==> ((\ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul))))) ul)) = ((\ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul))))) ul))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 cIN * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * * part cedgeX b0 * * part ccc_cell b0 b1 c= c==> ! c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 b0 cIN * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 b0 * / c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 b0 cIN * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 b0 f1 * / c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 b0 cIN * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 b0 f1
- (_7137671 = _7137674), (_7137672 = _7137675) |- ((~ (_7137670 = _7137673)) \/ ((((hull _7137673) _7137674) _7137675) \/ (~ (((hull _7137670) _7137671) _7137672))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ chull f5 f1 f3 c~ chull f4 f0 f2
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul)))))) |- ((((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY)) IN ((edgeX V) ((cc_cell V) ul)))) = T)
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 cIN * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * * part cedgeX b0 * * part ccc_cell b0 b1 c= c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 f1 cIN * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 part cEMPTY * * part cedgeX f0 * * part ccc_cell f0 f1 cT
- (x = u1) |- ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') = (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2'))
T c==> c= f0 f1 c= chull part caffine * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f4 chull part caffine * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f4
- |- (((((~ ((u2' = u2) ==> (u2 = u2'))) ==> F) ==> ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F)) ==> (((~ ((u2' = u2) ==> (u2 = u2'))) ==> F) ==> ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F))) = (((~ ((u2' = u2) ==> (u2 = u2'))) ==> F) ==> ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F)))
T c= c==> c==> c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c~ c==> c= f0 f1 c= f1 f0 cF
- |- ((!u2'. (!u2. ((u2' = u2) ==> (u2 = u2')))) = (!u2'. (!u2. ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F))))
T c= ! ! c==> c= b0 b1 c= b1 b0 ! ! c==> c~ c==> c= b0 b1 c= b1 b0 cF
- |- ((?x. ((P x) /\ Q)) = ((?x. (P x)) /\ Q))
T c= c? / c/\ * f0 b0 f1 c/\ c? / * f0 b0 f1
- (((leaf V) ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) /\ (!x. (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) x) = ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) x)))) |- (((stem ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) _7137352) \/ (~ ((stem ((CONS u1) ((CONS u0) ((CONS u2) NIL)))) _7137352)))
T c==> c/\ cleaf f0 cCONS f1 cCONS f2 cCONS f3 cNIL ! c= cstem cCONS f2 cCONS f1 cCONS f3 cNIL b0 cstem cCONS f1 cCONS f2 cCONS f3 cNIL b0 c\/ cstem cCONS f2 cCONS f1 cCONS f3 cNIL f4 c~ cstem cCONS f1 cCONS f2 cCONS f3 cNIL f4
- ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F), (((~ ((u2' = u2) ==> (u2 = u2'))) ==> F) ==> ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F)) |- (((~ ((u2' = u2) ==> (u2 = u2'))) ==> F) /\ ((~ ((u2' = u2) ==> (u2 = u2'))) ==> F))
T c==> c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c==> c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c~ c==> c= f0 f1 c= f1 f0 cF c/\ c==> c~ c==> c= f0 f1 c= f1 f0 cF c==> c~ c==> c= f0 f1 c= f1 f0 cF
- (_7137546 = _7137547) |- ((((packing _7137546) = (packing _7137547)) ==> ((packing _7137547) \/ (~ (packing _7137546)))) = ((packing _7137547) \/ (~ (packing _7137546))))
T c==> c= f0 f1 c= c==> c= cpacking f0 cpacking f1 c\/ cpacking f1 c~ cpacking f0 c\/ cpacking f1 c~ cpacking f0
- |- ((_7137362 = _7137365) ==> ((~ (_7137360 = _7137363)) \/ ((~ (_7137361 = _7137364)) \/ ((((cc_cell _7137363) _7137364) _7137365) \/ (~ (((cc_cell _7137360) _7137361) _7137362))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ ccc_cell f3 f5 f1 c~ ccc_cell f2 f4 f0
- |- ((!u2. (!u1. (!u0. (!u2'. ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))))))))) = (!u2. (!u1. (!u0. (!u2'. ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F))))))
T c= ! ! ! ! c==> ! c==> c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 c==> chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 ! c==> c\/ c= b4 b2 c\/ c= b4 b1 c\/ c= b4 b3 c= b4 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 ! ! ! ! c==> c~ c==> ! c==> c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 c==> chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 ! c==> c\/ c= b4 b2 c\/ c= b4 b1 c\/ c= b4 b3 c= b4 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 cF
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- |- ((~ (_7137552 = _7137554)) \/ ((~ (_7137553 = _7137555)) \/ (((cc_cell _7137552) _7137553) = ((cc_cell _7137554) _7137555))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part ccc_cell f0 f2 * * part ccc_cell f1 f3
- (x = u1) |- (((~ (_7137589 = u0)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137589)) = ((~ (_7137589 = u0)) \/ (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) _7137589)))
T c==> c= f0 f1 c= c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f2 c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f2
- (_7137542 = _7137544) |- ((_7137542 = _7137544) /\ ((~ (_7137543 = _7137545)) \/ (((leaf _7137544) _7137545) \/ (~ ((leaf _7137542) _7137543)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cleaf f1 f3 c~ cleaf f0 f2
- |- ((\u1. (!u0. (!u2'. ((~ ((!x. (((x = u0) \/ ((x = u1) \/ (x = u2))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x))) ==> ((((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) u2') ==> (!x. (((x = u0) \/ ((x = u1) \/ ((x = u2') \/ (x = u2)))) ==> (((hull affine) (u0 INSERT (u1 INSERT (u2 INSERT EMPTY)))) x)))))) ==> F)))) u1)
T * / ! ! c==> c~ c==> ! c==> c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b3 c==> chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 ! c==> c\/ c= b3 b1 c\/ c= b3 b0 c\/ c= b3 b2 c= b3 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b3 cF f1
- (_7137366 = _7137369), (_7137367 = _7137370), (_7137368 = _7137371) |- ((((((aff_gt _7137366) _7137367) _7137368) = (((aff_gt _7137369) _7137370) _7137371)) ==> ((((aff_gt _7137369) _7137370) _7137371) \/ (~ (((aff_gt _7137366) _7137367) _7137368)))) = ((((aff_gt _7137369) _7137370) _7137371) \/ (~ (((aff_gt _7137366) _7137367) _7137368))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c= c==> c= caff_gt f0 f2 f4 caff_gt f1 f3 f5 c\/ caff_gt f1 f3 f5 c~ caff_gt f0 f2 f4 c\/ caff_gt f1 f3 f5 c~ caff_gt f0 f2 f4
