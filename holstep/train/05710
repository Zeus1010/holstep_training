N Asfutbf.opposite_hypermap_map
C |- (!H. (((edge_map (opposite_hypermap H)) = ((face_map H) o (node_map H))) /\ (((node_map (opposite_hypermap H)) = (inverse (node_map H))) /\ ((face_map (opposite_hypermap H)) = (inverse (face_map H))))))
T c/\ c= * part cedge_map copposite_hypermap f0 * * part co * part cface_map f0 * part cnode_map f0 c/\ c= * part cnode_map copposite_hypermap f0 * part cinverse * part cnode_map f0 c= * part cface_map copposite_hypermap f0 * part cinverse * part cface_map f0
D TRUTH
A |- T
T cT
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D LEFT_FORALL_OR_THM
A |- (!P. (!Q. ((!x. ((P x) \/ Q)) = ((!x. (P x)) \/ Q))))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
D LEFT_OR_FORALL_THM
A |- (!P. (!Q. (((!x. (P x)) \/ Q) = (!x. ((P x) \/ Q)))))
T c= c\/ ! * f0 b0 f1 ! c\/ * f0 b0 f1
D o_ASSOC
A |- (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h)))))
T c= * * part co f0 * * part co f1 f2 * * part co * * part co f0 f1 f2
D I_O_ID
A |- (!f. (((I o f) = f) /\ ((f o I) = f)))
T c/\ c= * * part co part cI f0 f0 c= * * part co f0 part cI f0
D PERMUTES_INVERSES_o
A |- (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I)))))
T c==> cpermutes f0 f1 c/\ c= * * part co f0 * part cinverse f0 part cI c= * * part co * part cinverse f0 f0 part cI
D PERMUTES_INVERSE
A |- (!p. (!s. (((permutes p) s) ==> ((permutes (inverse p)) s))))
T c==> cpermutes f0 f1 cpermutes * part cinverse f0 f1
D Hypermap.hypermap_lemma
A |- (!H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))))
T c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
D Hypermap.lemma_hypermap_rep
A |- (!D. (!e. (!n. (!f. (((FINITE D) /\ (((permutes e) D) /\ (((permutes n) D) /\ (((permutes f) D) /\ ((e o (n o f)) = I))))) ==> (((dart (hypermap (D , (e , (n , f))))) = D) /\ (((edge_map (hypermap (D , (e , (n , f))))) = e) /\ (((node_map (hypermap (D , (e , (n , f))))) = n) /\ ((face_map (hypermap (D , (e , (n , f))))) = f)))))))))
T c==> c/\ cFINITE f0 c/\ cpermutes f1 f0 c/\ cpermutes f2 f0 c/\ cpermutes f3 f0 c= * * part co f1 * * part co f2 f3 part cI c/\ c= * part cdart chypermap c, f0 c, f1 c, f2 f3 f0 c/\ c= * part cedge_map chypermap c, f0 c, f1 c, f2 f3 f1 c/\ c= * part cnode_map chypermap c, f0 c, f1 c, f2 f3 f2 c= * part cface_map chypermap c, f0 c, f1 c, f2 f3 f3
D Hypermap.PERMUTES_COMPOSITION
A |- (!p. (!q. (!s. ((((permutes p) s) /\ ((permutes q) s)) ==> ((permutes (q o p)) s)))))
T c==> c/\ cpermutes f0 f1 cpermutes f2 f1 cpermutes * * part co f2 f0 f1
D Tame_defs.opposite_hypermap
A |- (!H. ((opposite_hypermap H) = (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))))
T c= copposite_hypermap f0 chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0
+ |- ((\q'. ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) = p') ==> ((p' ==> ((((face_map H) o (inverse (face_map H))) = I) = q')) ==> ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I)) = (p' ==> q'))))) q')
T * / c==> c= c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI f1 c==> c==> f1 c= c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI b0 c= c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> f1 b0 f2
+ |- (((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F))))) = ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F)))))
T c= c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cF c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cF
+ |- ((\p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) (node_map H))
T * / ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI * part cnode_map f0
+ |- (!H. ((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> (~ (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))))))))))
T c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c~ ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2
+ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H))))) |- ((((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))) = I) = ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = I))
T c==> c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c= c= * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI
+ ((permutes (face_map H)) (dart H)) |- (((permutes (face_map H)) (dart H)) /\ ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> (~ (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I)))))))))
T c==> cpermutes * part cface_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c~ ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI
- ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))), (((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))) ==> ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F)))))))) |- ((((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))) ==> ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F)))))))) /\ ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))))
T c==> c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c==> c==> c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c/\ c==> c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF
+ (FINITE (dart H)), (((edge_map H) o ((node_map H) o (face_map H))) = I), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- (((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = ((face_map H) o (node_map H))) /\ (((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (node_map H))) /\ ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (face_map H)))))
T c==> cFINITE * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c/\ c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * part cnode_map f0 c/\ c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0 c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cface_map f0
+ |- (!n. (!f. (((FINITE (dart H)) /\ (((permutes ((face_map H) o (node_map H))) (dart H)) /\ (((permutes n) (dart H)) /\ (((permutes f) (dart H)) /\ ((((face_map H) o (node_map H)) o (n o f)) = I))))) ==> (((dart (hypermap ((dart H) , (((face_map H) o (node_map H)) , (n , f))))) = (dart H)) /\ (((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , (n , f))))) = ((face_map H) o (node_map H))) /\ (((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , (n , f))))) = n) /\ ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , (n , f))))) = f)))))))
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * * part co * part cface_map f0 * part cnode_map f0 * part cdart f0 c/\ cpermutes f1 * part cdart f0 c/\ cpermutes f2 * part cdart f0 c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co f1 f2 part cI c/\ c= * part cdart chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, f1 f2 * part cdart f0 c/\ c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, f1 f2 * * part co * part cface_map f0 * part cnode_map f0 c/\ c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, f1 f2 f1 c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, f1 f2 f2
+ (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))), (~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) |- ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F)
T c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cF
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ |- (((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) = ((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I))) ==> ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> ((((face_map H) o (inverse (face_map H))) = I) = q')) ==> ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I)) = (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> q')))) = ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> ((((face_map H) o (inverse (face_map H))) = I) = q')) ==> ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I)) = (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> q'))))
T c= c==> c= c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c==> c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI f1 c= c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI f1 c==> c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI f1 c= c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI f1
+ ((permutes p) s) |- (((permutes p) s) /\ (((permutes (inverse p)) s) = T))
T c==> cpermutes f0 f1 c/\ cpermutes f0 f1 c= cpermutes * part cinverse f0 f1 cT
+ ((permutes (node_map H)) (dart H)) |- (((permutes (inverse (node_map H))) (dart H)) = T)
T c==> cpermutes * part cnode_map f0 * part cdart f0 c= cpermutes * part cinverse * part cnode_map f0 * part cdart f0 cT
+ (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))), (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))), (~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) |- ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) /\ F)
T c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c/\ ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cF
+ (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))), (~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) |- F
T c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 cF
+ |- (((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> F) = ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H))))))
T c= c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 cF c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0
+ ((permutes (node_map H)) (dart H)) |- (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> (~ (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))))))))
T c==> cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c~ ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))), (~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) |- ((~ ((permutes _10241122) _10241123)) \/ ((_10241122 o (inverse _10241122)) = ((inverse (node_map H)) o (node_map H))))
T c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c\/ c~ cpermutes f1 f2 c= * * part co f1 * part cinverse f1 * * part co * part cinverse * part cnode_map f0 * part cnode_map f0
+ (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))), (~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))), ((permutes (face_map H)) (dart H)) |- ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) /\ F)
T c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> cpermutes * part cface_map f0 * part cdart f0 c/\ ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF
- (_10241109 = _10241111) |- ((_10241108 = _10241110) ==> ((_10241108 o _10241109) = (_10241110 o _10241111)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part co f2 f0 * * part co f3 f1
+ |- (((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F) = F)
T c= c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cF cF
+ (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) |- ((~ ((permutes _10241122) _10241123)) \/ ((_10241122 o (inverse _10241122)) = I))
T c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI c\/ c~ cpermutes f0 f1 c= * * part co f0 * part cinverse f0 part cI
- (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) |- ((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H))))))
T c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0
- ((permutes (face_map H)) (dart H)) |- ((~ ((permutes (face_map H)) (dart H))) ==> ((permutes (face_map H)) (dart H)))
T c==> cpermutes * part cface_map f0 * part cdart f0 c==> c~ cpermutes * part cface_map f0 * part cdart f0 cpermutes * part cface_map f0 * part cdart f0
+ ((permutes (face_map H)) (dart H)) |- (((permutes (inverse (face_map H))) (dart H)) = T)
T c==> cpermutes * part cface_map f0 * part cdart f0 c= cpermutes * part cinverse * part cface_map f0 * part cdart f0 cT
+ |- (((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> ((((face_map H) o (inverse (face_map H))) = I) = (((face_map H) o (inverse (face_map H))) = I))) ==> ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I)) = (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I)))) = ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I)) = (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))))
T c= c==> c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c= c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c= c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI
+ (~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) |- (((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H))))) ==> F)
T c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 cF
- (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))), (~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))), ((permutes (face_map H)) (dart H)) |- ((~ (((face_map H) o (inverse (face_map H))) = ((inverse (node_map H)) o (node_map H)))) ==> (((face_map H) o (inverse (face_map H))) = ((inverse (node_map H)) o (node_map H))))
T c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> cpermutes * part cface_map f0 * part cdart f0 c==> c~ c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 * * part co * part cinverse * part cnode_map f0 * part cnode_map f0
+ (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) |- (((((face_map H) = (face_map H)) /\ (((node_map H) o ((inverse (node_map H)) o (inverse (face_map H)))) = (((node_map H) o (inverse (node_map H))) o (inverse (face_map H))))) ==> (((face_map H) o ((node_map H) o ((inverse (node_map H)) o (inverse (face_map H))))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) = (((face_map H) o ((node_map H) o ((inverse (node_map H)) o (inverse (face_map H))))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H))))))
T c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c= c==> c/\ c= * part cface_map f0 * part cface_map f0 c= * * part co * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c= * * part co * part cface_map f0 * * part co * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c= * * part co * part cface_map f0 * * part co * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0
- ((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = ((face_map H) o (node_map H))), ((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (node_map H))), (((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (node_map H))) /\ ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (face_map H)))) |- (((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = ((face_map H) o (node_map H))) /\ (((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (node_map H))) /\ ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (face_map H)))))
T c==> c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * part cnode_map f0 c==> c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0 c==> c/\ c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0 c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cface_map f0 c/\ c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * part cnode_map f0 c/\ c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0 c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cface_map f0
+ |- (!s. (((permutes (node_map H)) s) ==> ((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I))))
T c==> cpermutes * part cnode_map f0 f1 c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI
+ ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- (T = (((permutes (node_map H)) (dart H)) /\ ((permutes (face_map H)) (dart H))))
T c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c= cT c/\ cpermutes * part cnode_map f0 * part cdart f0 cpermutes * part cface_map f0 * part cdart f0
- (_10241162 = _10241163) |- ((_10241162 = _10241163) /\ ((dart _10241162) = (dart _10241163)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * part cdart f0 * part cdart f1
- ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))) |- (((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))) /\ ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))))
T c==> c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c/\ c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))
T c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0
- |- ((~ (_10241148 = _10241149)) \/ ((FINITE _10241149) \/ (~ (FINITE _10241148))))
T c\/ c~ c= f0 f1 c\/ cFINITE f1 c~ cFINITE f0
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
+ |- (((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F))) = ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F)))
T c= c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cF c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cF
- (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))), (~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) |- ((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) /\ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H))))))
T c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c/\ c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- ((\s. (((permutes (node_map H)) s) ==> ((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)))) (dart H))
T * / c==> cpermutes * part cnode_map f0 b0 c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI * part cdart f0
- (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))), (~ (((face_map H) o ((node_map H) o ((inverse (node_map H)) o (inverse (face_map H))))) = (((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))))) |- ((~ (((face_map H) o ((node_map H) o ((inverse (node_map H)) o (inverse (face_map H))))) = (((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))))) /\ (((face_map H) o ((node_map H) o ((inverse (node_map H)) o (inverse (face_map H))))) = (((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H))))))
T c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> c~ c= * * part co * part cface_map f0 * * part co * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c/\ c~ c= * * part co * part cface_map f0 * * part co * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c= * * part co * part cface_map f0 * * part co * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0
+ (FINITE (dart H)), (((edge_map H) o ((node_map H) o (face_map H))) = I), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))) = I))
T c==> cFINITE * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI
+ (FINITE (dart H)), (((edge_map H) o ((node_map H) o (face_map H))) = I), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))
T c==> cFINITE * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI
- |- ((~ (_10241158 = _10241159)) \/ ((node_map _10241158) = (node_map _10241159)))
T c\/ c~ c= f0 f1 c= * part cnode_map f0 * part cnode_map f1
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- (~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))), (((edge_map H) o ((node_map H) o (face_map H))) = I) |- (((edge_map H) o ((node_map H) o (face_map H))) = ((inverse (node_map H)) o (node_map H)))
T c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 * * part co * part cinverse * part cnode_map f0 * part cnode_map f0
- |- ((!s. t) = t)
T c= ! f0 f0
+ |- ((\s. ((((permutes p) s) /\ ((permutes q) s)) ==> ((permutes (q o p)) s))) s)
T * / c==> c/\ cpermutes f0 b0 cpermutes f1 b0 cpermutes * * part co f1 f0 b0 f2
+ (FINITE (dart H)), (((edge_map H) o ((node_map H) o (face_map H))) = I), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- ((FINITE (dart H)) /\ (((permutes ((face_map H) o (node_map H))) (dart H)) /\ (((permutes (inverse (node_map H))) (dart H)) /\ (((permutes (inverse (face_map H))) (dart H)) /\ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = I)))))
T c==> cFINITE * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c/\ cFINITE * part cdart f0 c/\ cpermutes * * part co * part cface_map f0 * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cinverse * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cinverse * part cface_map f0 * part cdart f0 c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI
+ |- (((!H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) ==> ((\H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) H)) = ((\H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) H))
T c= c==> ! c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI * / c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI f0 * / c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI f0
+ (FINITE (dart H)), (((edge_map H) o ((node_map H) o (face_map H))) = I), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- (((permutes ((face_map H) o (node_map H))) (dart H)) /\ (((permutes (inverse (node_map H))) (dart H)) /\ (((permutes (inverse (face_map H))) (dart H)) /\ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = I))))
T c==> cFINITE * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c/\ cpermutes * * part co * part cface_map f0 * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cinverse * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cinverse * part cface_map f0 * part cdart f0 c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI
+ (FINITE (dart H)), (((edge_map H) o ((node_map H) o (face_map H))) = I), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- ((((permutes (node_map H)) (dart H)) ==> ((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I))) ==> (((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))) = I))
T c==> cFINITE * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c==> cpermutes * part cnode_map f0 * part cdart f0 c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI
- (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) |- ((~ ((permutes _10241122) _10241123)) \/ (((inverse _10241122) o _10241122) = I))
T c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI c\/ c~ cpermutes f0 f1 c= * * part co * part cinverse f0 f0 part cI
+ ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- (((permutes (node_map H)) (dart H)) /\ ((permutes (face_map H)) (dart H)))
T c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 cpermutes * part cface_map f0 * part cdart f0
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- |- ((_10241150 = _10241151) ==> ((inverse _10241150) = (inverse _10241151)))
T c==> c= f0 f1 c= * part cinverse f0 * part cinverse f1
+ |- (((permutes (node_map H)) (dart H)) ==> ((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)))
T c==> cpermutes * part cnode_map f0 * part cdart f0 c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI
- |- ((~ (_10241144 = _10241146)) \/ ((~ (_10241145 = _10241147)) \/ (((permutes _10241146) _10241147) \/ (~ ((permutes _10241144) _10241145)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cpermutes f1 f3 c~ cpermutes f0 f2
+ (~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) |- (((~ ((permutes _10241122) _10241123)) \/ ((_10241122 o (inverse _10241122)) = I)) = ((~ ((permutes _10241122) _10241123)) \/ ((_10241122 o (inverse _10241122)) = ((inverse (node_map H)) o (node_map H)))))
T c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c= c\/ c~ cpermutes f1 f2 c= * * part co f1 * part cinverse f1 part cI c\/ c~ cpermutes f1 f2 c= * * part co f1 * part cinverse f1 * * part co * part cinverse * part cnode_map f0 * part cnode_map f0
+ |- (((((FINITE (dart H)) /\ (((permutes ((face_map H) o (node_map H))) (dart H)) /\ (((permutes (inverse (node_map H))) (dart H)) /\ (((permutes (inverse (face_map H))) (dart H)) /\ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = I))))) ==> (((dart (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (dart H)) /\ (((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = ((face_map H) o (node_map H))) /\ (((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (node_map H))) /\ ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (face_map H))))))) ==> (((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = ((face_map H) o (node_map H))) /\ (((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (node_map H))) /\ ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (face_map H)))))) = (((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = ((face_map H) o (node_map H))) /\ (((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (node_map H))) /\ ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (face_map H))))))
T c= c==> c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * * part co * part cface_map f0 * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cinverse * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cinverse * part cface_map f0 * part cdart f0 c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI c/\ c= * part cdart chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cdart f0 c/\ c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * part cnode_map f0 c/\ c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0 c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cface_map f0 c/\ c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * part cnode_map f0 c/\ c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0 c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cface_map f0 c/\ c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * part cnode_map f0 c/\ c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0 c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cface_map f0
+ |- (((!p. (!s. (((permutes p) s) ==> ((permutes (inverse p)) s)))) ==> ((\p. (!s. (((permutes p) s) ==> ((permutes (inverse p)) s)))) p)) = ((\p. (!s. (((permutes p) s) ==> ((permutes (inverse p)) s)))) p))
T c= c==> ! ! c==> cpermutes b0 b1 cpermutes * part cinverse b0 b1 * / ! c==> cpermutes b0 b1 cpermutes * part cinverse b0 b1 f0 * / ! c==> cpermutes b0 b1 cpermutes * part cinverse b0 b1 f0
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ |- (((!n. (!f. (((FINITE (dart H)) /\ (((permutes ((face_map H) o (node_map H))) (dart H)) /\ (((permutes n) (dart H)) /\ (((permutes f) (dart H)) /\ ((((face_map H) o (node_map H)) o (n o f)) = I))))) ==> (((dart (hypermap ((dart H) , (((face_map H) o (node_map H)) , (n , f))))) = (dart H)) /\ (((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , (n , f))))) = ((face_map H) o (node_map H))) /\ (((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , (n , f))))) = n) /\ ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , (n , f))))) = f))))))) ==> ((\n. (!f. (((FINITE (dart H)) /\ (((permutes ((face_map H) o (node_map H))) (dart H)) /\ (((permutes n) (dart H)) /\ (((permutes f) (dart H)) /\ ((((face_map H) o (node_map H)) o (n o f)) = I))))) ==> (((dart (hypermap ((dart H) , (((face_map H) o (node_map H)) , (n , f))))) = (dart H)) /\ (((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , (n , f))))) = ((face_map H) o (node_map H))) /\ (((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , (n , f))))) = n) /\ ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , (n , f))))) = f))))))) (inverse (node_map H)))) = ((\n. (!f. (((FINITE (dart H)) /\ (((permutes ((face_map H) o (node_map H))) (dart H)) /\ (((permutes n) (dart H)) /\ (((permutes f) (dart H)) /\ ((((face_map H) o (node_map H)) o (n o f)) = I))))) ==> (((dart (hypermap ((dart H) , (((face_map H) o (node_map H)) , (n , f))))) = (dart H)) /\ (((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , (n , f))))) = ((face_map H) o (node_map H))) /\ (((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , (n , f))))) = n) /\ ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , (n , f))))) = f))))))) (inverse (node_map H))))
T c= c==> ! ! c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * * part co * part cface_map f0 * part cnode_map f0 * part cdart f0 c/\ cpermutes b0 * part cdart f0 c/\ cpermutes b1 * part cdart f0 c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co b0 b1 part cI c/\ c= * part cdart chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, b0 b1 * part cdart f0 c/\ c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, b0 b1 * * part co * part cface_map f0 * part cnode_map f0 c/\ c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, b0 b1 b0 c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, b0 b1 b1 * / ! c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * * part co * part cface_map f0 * part cnode_map f0 * part cdart f0 c/\ cpermutes b0 * part cdart f0 c/\ cpermutes b1 * part cdart f0 c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co b0 b1 part cI c/\ c= * part cdart chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, b0 b1 * part cdart f0 c/\ c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, b0 b1 * * part co * part cface_map f0 * part cnode_map f0 c/\ c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, b0 b1 b0 c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, b0 b1 b1 * part cinverse * part cnode_map f0 * / ! c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * * part co * part cface_map f0 * part cnode_map f0 * part cdart f0 c/\ cpermutes b0 * part cdart f0 c/\ cpermutes b1 * part cdart f0 c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co b0 b1 part cI c/\ c= * part cdart chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, b0 b1 * part cdart f0 c/\ c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, b0 b1 * * part co * part cface_map f0 * part cnode_map f0 c/\ c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, b0 b1 b0 c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, b0 b1 b1 * part cinverse * part cnode_map f0
+ (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) |- (((~ ((permutes _10241122) _10241123)) \/ ((_10241122 o (inverse _10241122)) = I)) /\ ((~ ((permutes _10241122) _10241123)) \/ (((inverse _10241122) o _10241122) = I)))
T c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI c/\ c\/ c~ cpermutes f0 f1 c= * * part co f0 * part cinverse f0 part cI c\/ c~ cpermutes f0 f1 c= * * part co * part cinverse f0 f0 part cI
+ |- (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> (~ (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))))))))
T c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c~ ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI
+ |- ((\q. (!s. ((((permutes p) s) /\ ((permutes q) s)) ==> ((permutes (q o p)) s)))) q)
T * / ! c==> c/\ cpermutes f0 b1 cpermutes b0 b1 cpermutes * * part co b0 f0 b1 f1
+ |- (((!s. (((permutes p) s) ==> ((permutes (inverse p)) s))) ==> ((\s. (((permutes p) s) ==> ((permutes (inverse p)) s))) s)) = ((\s. (((permutes p) s) ==> ((permutes (inverse p)) s))) s))
T c= c==> ! c==> cpermutes f0 b0 cpermutes * part cinverse f0 b0 * / c==> cpermutes f0 b0 cpermutes * part cinverse f0 b0 f1 * / c==> cpermutes f0 b0 cpermutes * part cinverse f0 b0 f1
+ |- (((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> ((((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))) = I) = (((face_map H) o (inverse (face_map H))) = I))) ==> ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))) = I)) = (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I)))) = ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))) = I)) = (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))))
T c= c==> c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= c= * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c= c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c= c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI
- (~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) |- (((node_map H) o (inverse (node_map H))) = I)
T c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI
- (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))), (~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) |- ((~ F) ==> F)
T c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> c~ cF cF
- (~ ((face_map H) = (face_map H))) |- ((~ ((face_map H) = (face_map H))) /\ ((face_map H) = (face_map H)))
T c==> c~ c= * part cface_map f0 * part cface_map f0 c/\ c~ c= * part cface_map f0 * part cface_map f0 c= * part cface_map f0 * part cface_map f0
+ (~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) |- ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F)))
T c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cF
- |- ((_10241148 = _10241149) ==> ((FINITE _10241149) \/ (~ (FINITE _10241148))))
T c==> c= f0 f1 c\/ cFINITE f1 c~ cFINITE f0
+ (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))), (~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) |- ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) /\ ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> (~ (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))))))))
T c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c/\ ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c~ ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2
+ |- ((I o f) = f)
T c= * * part co part cI f0 f0
- (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))), (~ (((node_map H) o ((inverse (node_map H)) o (inverse (face_map H)))) = (((node_map H) o (inverse (node_map H))) o (inverse (face_map H))))) |- ((~ (((node_map H) o ((inverse (node_map H)) o (inverse (face_map H)))) = (((node_map H) o (inverse (node_map H))) o (inverse (face_map H))))) /\ (((node_map H) o ((inverse (node_map H)) o (inverse (face_map H)))) = (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))
T c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> c~ c= * * part co * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c/\ c~ c= * * part co * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c= * * part co * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0
- |- (T = (((~ (x = y)) \/ ((~ (x = z)) \/ (y = z))) = ((y = z) \/ ((~ (x = y)) \/ (~ (x = z))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ c~ c= f0 f2 c= f1 f2 c\/ c= f1 f2 c\/ c~ c= f0 f1 c~ c= f0 f2
+ |- (((!p'. (!q'. ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) = p') ==> ((p' ==> ((((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))) = I) = q')) ==> ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))) = I)) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) = p') ==> ((p' ==> ((((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))) = I) = q')) ==> ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))) = I)) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) = p') ==> ((p' ==> ((((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))) = I) = q')) ==> ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))) = I)) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI b0 c==> c==> b0 c= c= * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI b1 c= c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI c==> b0 b1 * / ! c==> c= c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI b0 c==> c==> b0 c= c= * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI b1 c= c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI c==> b0 b1 f1 * / ! c==> c= c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI b0 c==> c==> b0 c= c= * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI b1 c= c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI c==> b0 b1 f1
+ (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) |- ((((((face_map H) o ((node_map H) o ((inverse (node_map H)) o (inverse (face_map H))))) = (((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H))))) /\ (((face_map H) o ((node_map H) o ((inverse (node_map H)) o (inverse (face_map H))))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) = ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H))))))
T c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c= c==> c/\ c= * * part co * part cface_map f0 * * part co * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c= * * part co * part cface_map f0 * * part co * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0
- ((permutes (face_map H)) (dart H)) |- (T = ((permutes (face_map H)) (dart H)))
T c==> cpermutes * part cface_map f0 * part cdart f0 c= cT cpermutes * part cface_map f0 * part cdart f0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (((edge_map H) o ((node_map H) o (face_map H))) = I), ((permutes (face_map H)) (dart H)) |- ((((edge_map H) o ((node_map H) o (face_map H))) = I) /\ ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> (~ (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))))))
T c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> cpermutes * part cface_map f0 * part cdart f0 c/\ c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c~ ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> ((((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))) = I) = (((face_map H) o (inverse (face_map H))) = I)))
T c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= c= * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI
+ |- ((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> F)
T c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 cF
+ |- (!H. ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> (~ (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I)))))))))))))
T c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c~ ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI
+ (~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) |- ((((face_map H) o (inverse (face_map H))) = ((inverse (node_map H)) o (node_map H))) ==> F)
T c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 cF
- (_10241160 = _10241161) |- ((_10241160 = _10241161) /\ ((edge_map _10241160) = (edge_map _10241161)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * part cedge_map f0 * part cedge_map f1
+ |- ((\H. ((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F))))))) H)
T * / c==> c~ c= * * part co * * part co * part cface_map b0 * part cnode_map b0 * * part co * part cinverse * part cnode_map b0 * part cinverse * part cface_map b0 * * part co * part cface_map b0 * * part co * * part co * part cnode_map b0 * part cinverse * part cnode_map b0 * part cinverse * part cface_map b0 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 cF f0
+ |- ((\q'. ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) = p') ==> ((p' ==> ((((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))) = I) = q')) ==> ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))) = I)) = (p' ==> q'))))) q')
T * / c==> c= c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI f1 c==> c==> f1 c= c= * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI b0 c= c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI c==> f1 b0 f2
+ (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) |- (!p. (!s. (((~ ((permutes p) s)) \/ ((p o (inverse p)) = I)) /\ ((~ ((permutes p) s)) \/ (((inverse p) o p) = I)))))
T c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI ! ! c/\ c\/ c~ cpermutes b0 b1 c= * * part co b0 * part cinverse b0 part cI c\/ c~ cpermutes b0 b1 c= * * part co * part cinverse b0 b0 part cI
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
- |- (((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F)))))) ==> ((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F)))))))
T c==> c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cF c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cF
- |- ((!p'. ((!s. (~ ((permutes p) s))) \/ (((p' o (inverse p')) = I) /\ (((inverse p') o p') = I)))) = ((!s. (~ ((permutes p) s))) \/ (!p. (((p o (inverse p)) = I) /\ (((inverse p) o p) = I)))))
T c= ! c\/ ! c~ cpermutes f0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI c\/ ! c~ cpermutes f0 b0 ! c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI
- (~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) |- ((((node_map H) o (inverse (node_map H))) = I) = (((node_map H) o (inverse (node_map H))) = ((inverse (node_map H)) o (node_map H))))
T c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c= c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cnode_map f0
+ |- ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> ((((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))) = I) = q')) ==> ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))) = I)) = (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> q')))
T c==> c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= c= * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI f1 c= c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI f1
+ ((permutes (node_map H)) (dart H)) |- ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))) = I)) = ((((permutes (node_map H)) (dart H)) ==> ((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I))) ==> (((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))) = I)))
T c==> cpermutes * part cnode_map f0 * part cdart f0 c= c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI c==> c==> cpermutes * part cnode_map f0 * part cdart f0 c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI
- ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))), (((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))) ==> ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F)))))))) |- (((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))) /\ ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))))
T c==> c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c==> c==> c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c/\ c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF
+ |- (((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> (~ (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))))))))) = T)
T c= c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c~ ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cT
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))), (~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))), ((permutes (face_map H)) (dart H)) |- F
T c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> cpermutes * part cface_map f0 * part cdart f0 cF
+ (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) |- ((\s. (((~ ((permutes _10241122) s)) \/ ((_10241122 o (inverse _10241122)) = I)) /\ ((~ ((permutes _10241122) s)) \/ (((inverse _10241122) o _10241122) = I)))) _10241123)
T c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI * / c/\ c\/ c~ cpermutes f0 b0 c= * * part co f0 * part cinverse f0 part cI c\/ c~ cpermutes f0 b0 c= * * part co * part cinverse f0 f0 part cI f1
+ (FINITE (dart H)) |- ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> (~ (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))))))))))
T c==> cFINITE * part cdart f0 c/\ cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c~ ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI
- (~ ((permutes (face_map H)) (dart H))), ((permutes (face_map H)) (dart H)) |- ((~ ((permutes (face_map H)) (dart H))) /\ ((permutes (face_map H)) (dart H)))
T c==> c~ cpermutes * part cface_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c/\ c~ cpermutes * part cface_map f0 * part cdart f0 cpermutes * part cface_map f0 * part cdart f0
+ |- ((((permutes p) s) /\ ((permutes q) s)) ==> (((permutes (q o p)) s) = T))
T c==> c/\ cpermutes f0 f1 cpermutes f2 f1 c= cpermutes * * part co f2 f0 f1 cT
- ((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = ((face_map H) o (node_map H))), ((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (node_map H))), ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (face_map H))) |- (((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = ((face_map H) o (node_map H))) /\ (((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (node_map H))) /\ ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (face_map H)))))
T c==> c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * part cnode_map f0 c==> c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0 c==> c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cface_map f0 c/\ c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * part cnode_map f0 c/\ c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0 c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cface_map f0
+ ((permutes (face_map H)) (dart H)) |- ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> (~ (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I)))))))
T c==> cpermutes * part cface_map f0 * part cdart f0 c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c~ ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI
+ |- ((!H. ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> (~ (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))))))))))) = (!H. ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F)))))))))
T c= ! c==> cFINITE * part cdart b0 c==> cpermutes * part cedge_map b0 * part cdart b0 c==> cpermutes * part cnode_map b0 * part cdart b0 c==> cpermutes * part cface_map b0 * part cdart b0 c==> c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map b0 * part cinverse * part cnode_map b0 part cI c= * * part co * part cinverse * part cnode_map b0 * part cnode_map b0 part cI c= * * part co * part cface_map b0 * part cinverse * part cface_map b0 part cI c~ ! ! c==> cpermutes b1 b2 c/\ c= * * part co b1 * part cinverse b1 part cI c= * * part co * part cinverse b1 b1 part cI ! c==> cFINITE * part cdart b0 c==> cpermutes * part cedge_map b0 * part cdart b0 c==> cpermutes * part cnode_map b0 * part cdart b0 c==> cpermutes * part cface_map b0 * part cdart b0 c==> c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map b0 * part cinverse * part cnode_map b0 part cI c= * * part co * part cinverse * part cnode_map b0 * part cnode_map b0 part cI c= * * part co * part cface_map b0 * part cinverse * part cface_map b0 part cI c==> ! ! c==> cpermutes b1 b2 c/\ c= * * part co b1 * part cinverse b1 part cI c= * * part co * part cinverse b1 b1 part cI cF
+ |- (((!q'. ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) = p') ==> ((p' ==> ((((face_map H) o (inverse (face_map H))) = I) = q')) ==> ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I)) = (p' ==> q'))))) ==> ((\q'. ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) = p') ==> ((p' ==> ((((face_map H) o (inverse (face_map H))) = I) = q')) ==> ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I)) = (p' ==> q'))))) q')) = ((\q'. ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) = p') ==> ((p' ==> ((((face_map H) o (inverse (face_map H))) = I) = q')) ==> ((((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I)) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI f1 c==> c==> f1 c= c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI b0 c= c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> f1 b0 * / c==> c= c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI f1 c==> c==> f1 c= c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI b0 c= c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> f1 b0 f2 * / c==> c= c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI f1 c==> c==> f1 c= c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI b0 c= c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> f1 b0 f2
- (_10241144 = _10241146), (_10241145 = _10241147) |- (((((permutes _10241144) _10241145) = ((permutes _10241146) _10241147)) ==> (((permutes _10241146) _10241147) \/ (~ ((permutes _10241144) _10241145)))) = (((permutes _10241146) _10241147) \/ (~ ((permutes _10241144) _10241145))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cpermutes f0 f2 cpermutes f1 f3 c\/ cpermutes f1 f3 c~ cpermutes f0 f2 c\/ cpermutes f1 f3 c~ cpermutes f0 f2
- |- ((_10241156 = _10241157) ==> ((face_map _10241156) = (face_map _10241157)))
T c==> c= f0 f1 c= * part cface_map f0 * part cface_map f1
+ (FINITE (dart H)), (((edge_map H) o ((node_map H) o (face_map H))) = I), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- ((((FINITE (dart H)) /\ (((permutes ((face_map H) o (node_map H))) (dart H)) /\ (((permutes (inverse (node_map H))) (dart H)) /\ (((permutes (inverse (face_map H))) (dart H)) /\ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = I))))) ==> (((dart (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (dart H)) /\ (((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = ((face_map H) o (node_map H))) /\ (((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (node_map H))) /\ ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (face_map H))))))) ==> (((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = ((face_map H) o (node_map H))) /\ (((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (node_map H))) /\ ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (face_map H))))))
T c==> cFINITE * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * * part co * part cface_map f0 * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cinverse * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cinverse * part cface_map f0 * part cdart f0 c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI c/\ c= * part cdart chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cdart f0 c/\ c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * part cnode_map f0 c/\ c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0 c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cface_map f0 c/\ c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * part cnode_map f0 c/\ c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0 c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cface_map f0
+ (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))), (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))), (~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) |- ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) /\ ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> (~ (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h)))))))))
T c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c/\ ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c~ ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2
- (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))), (~ (((face_map H) o ((node_map H) o ((inverse (node_map H)) o (inverse (face_map H))))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) |- ((~ (((face_map H) o ((node_map H) o ((inverse (node_map H)) o (inverse (face_map H))))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) /\ (((face_map H) o ((node_map H) o ((inverse (node_map H)) o (inverse (face_map H))))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H))))))
T c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> c~ c= * * part co * part cface_map f0 * * part co * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c/\ c~ c= * * part co * part cface_map f0 * * part co * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c= * * part co * part cface_map f0 * * part co * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0
+ ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- (((((permutes (node_map H)) (dart H)) /\ ((permutes (face_map H)) (dart H))) ==> (((permutes ((face_map H) o (node_map H))) (dart H)) = T)) = (((permutes ((face_map H) o (node_map H))) (dart H)) = T))
T c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c= c==> c/\ cpermutes * part cnode_map f0 * part cdart f0 cpermutes * part cface_map f0 * part cdart f0 c= cpermutes * * part co * part cface_map f0 * part cnode_map f0 * part cdart f0 cT c= cpermutes * * part co * part cface_map f0 * part cnode_map f0 * part cdart f0 cT
+ |- (((!D. (!e. (!n. (!f. (((FINITE D) /\ (((permutes e) D) /\ (((permutes n) D) /\ (((permutes f) D) /\ ((e o (n o f)) = I))))) ==> (((dart (hypermap (D , (e , (n , f))))) = D) /\ (((edge_map (hypermap (D , (e , (n , f))))) = e) /\ (((node_map (hypermap (D , (e , (n , f))))) = n) /\ ((face_map (hypermap (D , (e , (n , f))))) = f))))))))) ==> ((\D. (!e. (!n. (!f. (((FINITE D) /\ (((permutes e) D) /\ (((permutes n) D) /\ (((permutes f) D) /\ ((e o (n o f)) = I))))) ==> (((dart (hypermap (D , (e , (n , f))))) = D) /\ (((edge_map (hypermap (D , (e , (n , f))))) = e) /\ (((node_map (hypermap (D , (e , (n , f))))) = n) /\ ((face_map (hypermap (D , (e , (n , f))))) = f))))))))) (dart H))) = ((\D. (!e. (!n. (!f. (((FINITE D) /\ (((permutes e) D) /\ (((permutes n) D) /\ (((permutes f) D) /\ ((e o (n o f)) = I))))) ==> (((dart (hypermap (D , (e , (n , f))))) = D) /\ (((edge_map (hypermap (D , (e , (n , f))))) = e) /\ (((node_map (hypermap (D , (e , (n , f))))) = n) /\ ((face_map (hypermap (D , (e , (n , f))))) = f))))))))) (dart H)))
T c= c==> ! ! ! ! c==> c/\ cFINITE b0 c/\ cpermutes b1 b0 c/\ cpermutes b2 b0 c/\ cpermutes b3 b0 c= * * part co b1 * * part co b2 b3 part cI c/\ c= * part cdart chypermap c, b0 c, b1 c, b2 b3 b0 c/\ c= * part cedge_map chypermap c, b0 c, b1 c, b2 b3 b1 c/\ c= * part cnode_map chypermap c, b0 c, b1 c, b2 b3 b2 c= * part cface_map chypermap c, b0 c, b1 c, b2 b3 b3 * / ! ! ! c==> c/\ cFINITE b0 c/\ cpermutes b1 b0 c/\ cpermutes b2 b0 c/\ cpermutes b3 b0 c= * * part co b1 * * part co b2 b3 part cI c/\ c= * part cdart chypermap c, b0 c, b1 c, b2 b3 b0 c/\ c= * part cedge_map chypermap c, b0 c, b1 c, b2 b3 b1 c/\ c= * part cnode_map chypermap c, b0 c, b1 c, b2 b3 b2 c= * part cface_map chypermap c, b0 c, b1 c, b2 b3 b3 * part cdart f0 * / ! ! ! c==> c/\ cFINITE b0 c/\ cpermutes b1 b0 c/\ cpermutes b2 b0 c/\ cpermutes b3 b0 c= * * part co b1 * * part co b2 b3 part cI c/\ c= * part cdart chypermap c, b0 c, b1 c, b2 b3 b0 c/\ c= * part cedge_map chypermap c, b0 c, b1 c, b2 b3 b1 c/\ c= * part cnode_map chypermap c, b0 c, b1 c, b2 b3 b2 c= * part cface_map chypermap c, b0 c, b1 c, b2 b3 b3 * part cdart f0
- |- ((f o I) = f)
T c= * * part co f0 part cI f0
+ (~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) |- ((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I))
T c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI
+ (FINITE (dart H)), (((edge_map H) o ((node_map H) o (face_map H))) = I), ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H))))), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = I)
T c==> cFINITE * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI
- (_10241148 = _10241149) |- ((_10241148 = _10241149) /\ ((FINITE _10241149) \/ (~ (FINITE _10241148))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ cFINITE f1 c~ cFINITE f0
+ |- (((!H. ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F)))))))) ==> ((\H. ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F)))))))) H)) = ((\H. ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F)))))))) H))
T c= c==> ! c==> cFINITE * part cdart b0 c==> cpermutes * part cedge_map b0 * part cdart b0 c==> cpermutes * part cnode_map b0 * part cdart b0 c==> cpermutes * part cface_map b0 * part cdart b0 c==> c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map b0 * part cinverse * part cnode_map b0 part cI c= * * part co * part cinverse * part cnode_map b0 * part cnode_map b0 part cI c= * * part co * part cface_map b0 * part cinverse * part cface_map b0 part cI c==> ! ! c==> cpermutes b1 b2 c/\ c= * * part co b1 * part cinverse b1 part cI c= * * part co * part cinverse b1 b1 part cI cF * / c==> cFINITE * part cdart b0 c==> cpermutes * part cedge_map b0 * part cdart b0 c==> cpermutes * part cnode_map b0 * part cdart b0 c==> cpermutes * part cface_map b0 * part cdart b0 c==> c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map b0 * part cinverse * part cnode_map b0 part cI c= * * part co * part cinverse * part cnode_map b0 * part cnode_map b0 part cI c= * * part co * part cface_map b0 * part cinverse * part cface_map b0 part cI c==> ! ! c==> cpermutes b1 b2 c/\ c= * * part co b1 * part cinverse b1 part cI c= * * part co * part cinverse b1 b1 part cI cF f0 * / c==> cFINITE * part cdart b0 c==> cpermutes * part cedge_map b0 * part cdart b0 c==> cpermutes * part cnode_map b0 * part cdart b0 c==> cpermutes * part cface_map b0 * part cdart b0 c==> c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map b0 * part cinverse * part cnode_map b0 part cI c= * * part co * part cinverse * part cnode_map b0 * part cnode_map b0 part cI c= * * part co * part cface_map b0 * part cinverse * part cface_map b0 part cI c==> ! ! c==> cpermutes b1 b2 c/\ c= * * part co b1 * part cinverse b1 part cI c= * * part co * part cinverse b1 b1 part cI cF f0
+ (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))), (~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) |- ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> (~ (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h)))))))
T c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c~ ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2
+ |- (((!p. (!q. (!s. ((((permutes p) s) /\ ((permutes q) s)) ==> ((permutes (q o p)) s))))) ==> ((\p. (!q. (!s. ((((permutes p) s) /\ ((permutes q) s)) ==> ((permutes (q o p)) s))))) p)) = ((\p. (!q. (!s. ((((permutes p) s) /\ ((permutes q) s)) ==> ((permutes (q o p)) s))))) p))
T c= c==> ! ! ! c==> c/\ cpermutes b0 b2 cpermutes b1 b2 cpermutes * * part co b1 b0 b2 * / ! ! c==> c/\ cpermutes b0 b2 cpermutes b1 b2 cpermutes * * part co b1 b0 b2 f0 * / ! ! c==> c/\ cpermutes b0 b2 cpermutes b1 b2 cpermutes * * part co b1 b0 b2 f0
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- (((!H. ((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F))))))) ==> ((\H. ((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F))))))) H)) = ((\H. ((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F))))))) H))
T c= c==> ! c==> c~ c= * * part co * * part co * part cface_map b0 * part cnode_map b0 * * part co * part cinverse * part cnode_map b0 * part cinverse * part cface_map b0 * * part co * part cface_map b0 * * part co * * part co * part cnode_map b0 * part cinverse * part cnode_map b0 * part cinverse * part cface_map b0 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 cF * / c==> c~ c= * * part co * * part co * part cface_map b0 * part cnode_map b0 * * part co * part cinverse * part cnode_map b0 * part cinverse * part cface_map b0 * * part co * part cface_map b0 * * part co * * part co * part cnode_map b0 * part cinverse * part cnode_map b0 * part cinverse * part cface_map b0 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 cF f0 * / c==> c~ c= * * part co * * part co * part cface_map b0 * part cnode_map b0 * * part co * part cinverse * part cnode_map b0 * part cinverse * part cface_map b0 * * part co * part cface_map b0 * * part co * * part co * part cnode_map b0 * part cinverse * part cnode_map b0 * part cinverse * part cface_map b0 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 cF f0
+ |- (((FINITE (dart H)) /\ (((permutes ((face_map H) o (node_map H))) (dart H)) /\ (((permutes (inverse (node_map H))) (dart H)) /\ (((permutes (inverse (face_map H))) (dart H)) /\ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = I))))) ==> (((dart (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (dart H)) /\ (((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = ((face_map H) o (node_map H))) /\ (((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (node_map H))) /\ ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (face_map H)))))))
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * * part co * part cface_map f0 * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cinverse * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cinverse * part cface_map f0 * part cdart f0 c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI c/\ c= * part cdart chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cdart f0 c/\ c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * part cnode_map f0 c/\ c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0 c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cface_map f0
+ (~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))), (FINITE (dart H)), (((edge_map H) o ((node_map H) o (face_map H))) = I), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F)
T c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> cFINITE * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF
+ |- (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> ((((face_map H) o (inverse (face_map H))) = I) = (((face_map H) o (inverse (face_map H))) = I)))
T c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI
+ |- (((!s. (~ ((permutes p) s))) \/ (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))) = (!s. ((~ ((permutes p) s)) \/ (((p o (inverse p)) = I) /\ (((inverse p) o p) = I)))))
T c= c\/ ! c~ cpermutes f0 b0 c/\ c= * * part co f0 * part cinverse f0 part cI c= * * part co * part cinverse f0 f0 part cI ! c\/ c~ cpermutes f0 b0 c/\ c= * * part co f0 * part cinverse f0 part cI c= * * part co * part cinverse f0 f0 part cI
- |- ((_10241160 = _10241161) ==> ((edge_map _10241160) = (edge_map _10241161)))
T c==> c= f0 f1 c= * part cedge_map f0 * part cedge_map f1
+ |- ((((node_map H) o ((inverse (node_map H)) o (inverse (face_map H)))) = (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))) = (((face_map H) = (face_map H)) /\ (((node_map H) o ((inverse (node_map H)) o (inverse (face_map H)))) = (((node_map H) o (inverse (node_map H))) o (inverse (face_map H))))))
T c= c= * * part co * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c/\ c= * part cface_map f0 * part cface_map f0 c= * * part co * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0
- ((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F)))))) |- ((((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F)))))) ==> ((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F))))))) ==> ((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F)))))))
T c==> c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cF c==> c==> c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cF c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cF c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cF
+ |- ((!H. ((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> (~ (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h)))))))))))) = (!H. ((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F))))))))
T c= ! c==> c~ c= * * part co * * part co * part cface_map b0 * part cnode_map b0 * * part co * part cinverse * part cnode_map b0 * part cinverse * part cface_map b0 * * part co * part cface_map b0 * * part co * * part co * part cnode_map b0 * part cinverse * part cnode_map b0 * part cinverse * part cface_map b0 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 c~ ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 ! c==> c~ c= * * part co * * part co * part cface_map b0 * part cnode_map b0 * * part co * part cinverse * part cnode_map b0 * part cinverse * part cface_map b0 * * part co * part cface_map b0 * * part co * * part co * part cnode_map b0 * part cinverse * part cnode_map b0 * part cinverse * part cface_map b0 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 c==> ! ! ! c= * * part co b1 * * part co b2 b3 * * part co * * part co b1 b2 b3 cF
+ |- (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> (~ (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I)))))))))
T c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c~ ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI
+ |- ((\n. (!f. (((FINITE (dart H)) /\ (((permutes ((face_map H) o (node_map H))) (dart H)) /\ (((permutes n) (dart H)) /\ (((permutes f) (dart H)) /\ ((((face_map H) o (node_map H)) o (n o f)) = I))))) ==> (((dart (hypermap ((dart H) , (((face_map H) o (node_map H)) , (n , f))))) = (dart H)) /\ (((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , (n , f))))) = ((face_map H) o (node_map H))) /\ (((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , (n , f))))) = n) /\ ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , (n , f))))) = f))))))) (inverse (node_map H)))
T * / ! c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * * part co * part cface_map f0 * part cnode_map f0 * part cdart f0 c/\ cpermutes b0 * part cdart f0 c/\ cpermutes b1 * part cdart f0 c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co b0 b1 part cI c/\ c= * part cdart chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, b0 b1 * part cdart f0 c/\ c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, b0 b1 * * part co * part cface_map f0 * part cnode_map f0 c/\ c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, b0 b1 b0 c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, b0 b1 b1 * part cinverse * part cnode_map f0
+ |- (((!f. (((I o f) = f) /\ ((f o I) = f))) ==> ((\f. (((I o f) = f) /\ ((f o I) = f))) f)) = ((\f. (((I o f) = f) /\ ((f o I) = f))) f))
T c= c==> ! c/\ c= * * part co part cI b0 b0 c= * * part co b0 part cI b0 * / c/\ c= * * part co part cI b0 b0 c= * * part co b0 part cI b0 f0 * / c/\ c= * * part co part cI b0 b0 c= * * part co b0 part cI b0 f0
- |- ((x = x) = T)
T c= c= f0 f0 cT
+ (FINITE (dart H)), (((edge_map H) o ((node_map H) o (face_map H))) = I), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- (((((dart (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (dart H)) /\ (((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = ((face_map H) o (node_map H))) /\ (((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (node_map H))) /\ ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (face_map H)))))) ==> (((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = ((face_map H) o (node_map H))) /\ (((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (node_map H))) /\ ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (face_map H)))))) = (((FINITE (dart H)) /\ (((permutes ((face_map H) o (node_map H))) (dart H)) /\ (((permutes (inverse (node_map H))) (dart H)) /\ (((permutes (inverse (face_map H))) (dart H)) /\ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = I))))) /\ ((((dart (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (dart H)) /\ (((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = ((face_map H) o (node_map H))) /\ (((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (node_map H))) /\ ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (face_map H)))))) ==> (((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = ((face_map H) o (node_map H))) /\ (((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (node_map H))) /\ ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (face_map H))))))))
T c==> cFINITE * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c= c==> c/\ c= * part cdart chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cdart f0 c/\ c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * part cnode_map f0 c/\ c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0 c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cface_map f0 c/\ c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * part cnode_map f0 c/\ c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0 c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cface_map f0 c/\ c/\ cFINITE * part cdart f0 c/\ cpermutes * * part co * part cface_map f0 * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cinverse * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cinverse * part cface_map f0 * part cdart f0 c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI c==> c/\ c= * part cdart chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cdart f0 c/\ c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * part cnode_map f0 c/\ c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0 c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cface_map f0 c/\ c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * part cnode_map f0 c/\ c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0 c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cface_map f0
+ |- (((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> ((\p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) (node_map H))) = ((\p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) (node_map H)))
T c= c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI * / ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI * part cnode_map f0 * / ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI * part cnode_map f0
+ (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))), (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))), (~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) |- ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) /\ ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> (~ (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))))))
T c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c/\ ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c~ ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2
+ |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
+ (~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) |- ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F)
T c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cF
- (_10241109 = _10241111) |- ((_10241109 = _10241111) /\ ((~ (_10241108 = _10241110)) \/ ((_10241108 o _10241109) = (_10241110 o _10241111))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part co f2 f0 * * part co f3 f1
+ |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
+ (FINITE (dart H)), ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) |- (((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = ((face_map H) o (node_map H))) /\ (((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (node_map H))) /\ ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (face_map H)))))
T c==> cFINITE * part cdart f0 c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * part cnode_map f0 c/\ c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0 c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cface_map f0
+ (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))), (~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) |- ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> (~ (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h)))))))))
T c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c~ ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2
+ |- ((\s. (((permutes p) s) ==> ((permutes (inverse p)) s))) s)
T * / c==> cpermutes f0 b0 cpermutes * part cinverse f0 b0 f1
+ (~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) |- ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F)))))
T c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cF
+ (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) |- ((((face_map H) o ((node_map H) o ((inverse (node_map H)) o (inverse (face_map H))))) = (((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H))))) /\ (((face_map H) o ((node_map H) o ((inverse (node_map H)) o (inverse (face_map H))))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H))))))
T c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c/\ c= * * part co * part cface_map f0 * * part co * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c= * * part co * part cface_map f0 * * part co * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0
+ ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- (((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = I) = (((permutes (inverse (node_map H))) (dart H)) /\ (((permutes (inverse (face_map H))) (dart H)) /\ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = I))))
T c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c= c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI c/\ cpermutes * part cinverse * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cinverse * part cface_map f0 * part cdart f0 c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI
+ |- (((permutes p) s) ==> (((permutes (inverse p)) s) = T))
T c==> cpermutes f0 f1 c= cpermutes * part cinverse f0 f1 cT
+ |- ((!H. (((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = ((face_map H) o (node_map H))) /\ (((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (node_map H))) /\ ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (face_map H)))))) = (!H. (((edge_map (opposite_hypermap H)) = ((face_map H) o (node_map H))) /\ (((node_map (opposite_hypermap H)) = (inverse (node_map H))) /\ ((face_map (opposite_hypermap H)) = (inverse (face_map H)))))))
T c= ! c/\ c= * part cedge_map chypermap c, * part cdart b0 c, * * part co * part cface_map b0 * part cnode_map b0 c, * part cinverse * part cnode_map b0 * part cinverse * part cface_map b0 * * part co * part cface_map b0 * part cnode_map b0 c/\ c= * part cnode_map chypermap c, * part cdart b0 c, * * part co * part cface_map b0 * part cnode_map b0 c, * part cinverse * part cnode_map b0 * part cinverse * part cface_map b0 * part cinverse * part cnode_map b0 c= * part cface_map chypermap c, * part cdart b0 c, * * part co * part cface_map b0 * part cnode_map b0 c, * part cinverse * part cnode_map b0 * part cinverse * part cface_map b0 * part cinverse * part cface_map b0 ! c/\ c= * part cedge_map copposite_hypermap b0 * * part co * part cface_map b0 * part cnode_map b0 c/\ c= * part cnode_map copposite_hypermap b0 * part cinverse * part cnode_map b0 c= * part cface_map copposite_hypermap b0 * part cinverse * part cface_map b0
- ((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = ((face_map H) o (node_map H))), (((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = ((face_map H) o (node_map H))) /\ (((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (node_map H))) /\ ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (face_map H))))) |- (((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = ((face_map H) o (node_map H))) /\ (((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (node_map H))) /\ ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (face_map H)))))
T c==> c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * part cnode_map f0 c==> c/\ c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * part cnode_map f0 c/\ c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0 c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cface_map f0 c/\ c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * part cnode_map f0 c/\ c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0 c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cface_map f0
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
- |- (T = (((~ (_10241118 = _10241120)) \/ ((~ (_10241119 = _10241121)) \/ ((_10241118 o _10241119) = (_10241120 o _10241121)))) = (((_10241118 o _10241119) = (_10241120 o _10241121)) \/ ((~ (_10241118 = _10241120)) \/ (~ (_10241119 = _10241121))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part co f0 f2 * * part co f1 f3 c\/ c= * * part co f0 f2 * * part co f1 f3 c\/ c~ c= f0 f1 c~ c= f2 f3
- (_10241156 = _10241157) |- ((_10241156 = _10241157) /\ ((face_map _10241156) = (face_map _10241157)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * part cface_map f0 * part cface_map f1
- (~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) |- ((FINITE (dart H)) = (FINITE (dart H)))
T c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c= cFINITE * part cdart f0 cFINITE * part cdart f0
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- |- ((!s'. ((~ ((permutes p) s)) \/ (((p o (inverse p)) = I) /\ (((inverse p) o p) = I)))) = ((~ ((permutes p) s)) \/ (!s. (((p o (inverse p)) = I) /\ (((inverse p) o p) = I)))))
T c= ! c\/ c~ cpermutes f0 f1 c/\ c= * * part co f0 * part cinverse f0 part cI c= * * part co * part cinverse f0 f0 part cI c\/ c~ cpermutes f0 f1 ! c/\ c= * * part co f0 * part cinverse f0 part cI c= * * part co * part cinverse f0 f0 part cI
- ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))) |- ((((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))) ==> ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F)))))))) ==> ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))))
T c==> c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c==> c==> c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF
- (~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) |- (F = F)
T c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c= cF cF
- (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) |- ((~ (((face_map H) o ((node_map H) o ((inverse (node_map H)) o (inverse (face_map H))))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> (((face_map H) o ((node_map H) o ((inverse (node_map H)) o (inverse (face_map H))))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H))))))
T c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> c~ c= * * part co * part cface_map f0 * * part co * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c= * * part co * part cface_map f0 * * part co * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0
- (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))), (~ F), (~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))), ((permutes (face_map H)) (dart H)) |- ((~ F) /\ F)
T c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI c==> c~ cF c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> cpermutes * part cface_map f0 * part cdart f0 c/\ c~ cF cF
- ((permutes (edge_map H)) (dart H)) |- (((permutes (edge_map H)) (dart H)) = T)
T c==> cpermutes * part cedge_map f0 * part cdart f0 c= cpermutes * part cedge_map f0 * part cdart f0 cT
- ((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = ((face_map H) o (node_map H))), (((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (node_map H))) /\ ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (face_map H)))) |- (((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = ((face_map H) o (node_map H))) /\ (((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (node_map H))) /\ ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (face_map H)))))
T c==> c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * part cnode_map f0 c==> c/\ c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0 c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cface_map f0 c/\ c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * part cnode_map f0 c/\ c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0 c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cface_map f0
- |- ((~ (_10241160 = _10241161)) \/ ((edge_map _10241160) = (edge_map _10241161)))
T c\/ c~ c= f0 f1 c= * part cedge_map f0 * part cedge_map f1
- (~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) |- (((node_map H) o (inverse (node_map H))) = ((inverse (node_map H)) o (node_map H)))
T c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cnode_map f0
- (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))), (~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) |- ((~ ((permutes _10241122) _10241123)) \/ (((inverse _10241122) o _10241122) = ((inverse (node_map H)) o (node_map H))))
T c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c\/ c~ cpermutes f1 f2 c= * * part co * part cinverse f1 f1 * * part co * part cinverse * part cnode_map f0 * part cnode_map f0
- (_10241150 = _10241151) |- ((_10241150 = _10241151) /\ ((inverse _10241150) = (inverse _10241151)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * part cinverse f0 * part cinverse f1
- (~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) |- (((permutes (node_map H)) (dart H)) = ((permutes (node_map H)) (dart H)))
T c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c= cpermutes * part cnode_map f0 * part cdart f0 cpermutes * part cnode_map f0 * part cdart f0
- (_10241144 = _10241146), (_10241145 = _10241147) |- ((_10241145 = _10241147) /\ (((permutes _10241146) _10241147) \/ (~ ((permutes _10241144) _10241145))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ cpermutes f1 f3 c~ cpermutes f0 f2
- (_10241144 = _10241146) |- ((_10241144 = _10241146) /\ ((~ (_10241145 = _10241147)) \/ (((permutes _10241146) _10241147) \/ (~ ((permutes _10241144) _10241145)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cpermutes f1 f3 c~ cpermutes f0 f2
- |- (((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))) ==> ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))))
T c==> c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF
- |- ((!p. (P \/ (Q p))) = (P \/ (!p. (Q p))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- |- ((!p'. ((!s. (~ ((permutes p') s))) \/ (((p o (inverse p)) = I) /\ (((inverse p) o p) = I)))) = ((!p. (!s. (~ ((permutes p) s)))) \/ (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))
T c= ! c\/ ! c~ cpermutes b0 b1 c/\ c= * * part co f0 * part cinverse f0 part cI c= * * part co * part cinverse f0 f0 part cI c\/ ! ! c~ cpermutes b0 b1 c/\ c= * * part co f0 * part cinverse f0 part cI c= * * part co * part cinverse f0 f0 part cI
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- (_10241144 = _10241146) |- ((_10241145 = _10241147) ==> (((permutes _10241146) _10241147) \/ (~ ((permutes _10241144) _10241145))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cpermutes f1 f3 c~ cpermutes f0 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- |- (((((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))) ==> ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F)))))))) ==> (((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))) ==> ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))))) = (((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))) ==> ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F)))))))))
T c= c==> c==> c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c==> c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c==> c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF
- (~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) |- (((permutes (face_map H)) (dart H)) = ((permutes (face_map H)) (dart H)))
T c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c= cpermutes * part cface_map f0 * part cdart f0 cpermutes * part cface_map f0 * part cdart f0
- |- ((~ ((face_map H) = (face_map H))) ==> ((face_map H) = (face_map H)))
T c==> c~ c= * part cface_map f0 * part cface_map f0 c= * part cface_map f0 * part cface_map f0
- ((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = ((face_map H) o (node_map H))), ((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (node_map H))), ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (face_map H))) |- (T = (((edge_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = ((face_map H) o (node_map H))) /\ (((node_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (node_map H))) /\ ((face_map (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = (inverse (face_map H))))))
T c==> c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * part cnode_map f0 c==> c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0 c==> c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cface_map f0 c= cT c/\ c= * part cedge_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * part cnode_map f0 c/\ c= * part cnode_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0 c= * part cface_map chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * part cinverse * part cface_map f0
- (_10241109 = _10241111), (_10241108 = _10241110) |- ((_10241108 = _10241110) /\ ((_10241108 o _10241109) = (_10241110 o _10241111)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= * * part co f2 f0 * * part co f3 f1
- (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))), (~ F), (~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) |- ((~ F) /\ F)
T c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> c~ cF c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c/\ c~ cF cF
- (~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) |- ((((edge_map H) o ((node_map H) o (face_map H))) = I) = (((edge_map H) o ((node_map H) o (face_map H))) = ((inverse (node_map H)) o (node_map H))))
T c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c= c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 * * part co * part cinverse * part cnode_map f0 * part cnode_map f0
- (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))), (~ (((face_map H) o (inverse (face_map H))) = ((inverse (node_map H)) o (node_map H)))), (~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))), ((permutes (face_map H)) (dart H)) |- ((~ (((face_map H) o (inverse (face_map H))) = ((inverse (node_map H)) o (node_map H)))) /\ (((face_map H) o (inverse (face_map H))) = ((inverse (node_map H)) o (node_map H))))
T c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI c==> c~ c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> cpermutes * part cface_map f0 * part cdart f0 c/\ c~ c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 * * part co * part cinverse * part cnode_map f0 * part cnode_map f0
- ((permutes (node_map H)) (dart H)) |- (T = ((permutes (node_map H)) (dart H)))
T c==> cpermutes * part cnode_map f0 * part cdart f0 c= cT cpermutes * part cnode_map f0 * part cdart f0
- |- ((_10241144 = _10241146) ==> ((~ (_10241145 = _10241147)) \/ (((permutes _10241146) _10241147) \/ (~ ((permutes _10241144) _10241145)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cpermutes f1 f3 c~ cpermutes f0 f2
- (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) |- ((~ (((node_map H) o ((inverse (node_map H)) o (inverse (face_map H)))) = (((node_map H) o (inverse (node_map H))) o (inverse (face_map H))))) ==> (((node_map H) o ((inverse (node_map H)) o (inverse (face_map H)))) = (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))
T c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> c~ c= * * part co * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c= * * part co * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0
- (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))), (~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))), ((permutes (face_map H)) (dart H)) |- ((~ F) ==> F)
T c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> cpermutes * part cface_map f0 * part cdart f0 c==> c~ cF cF
- |- ((!s. (P s)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- ((~ (_10241156 = _10241157)) \/ ((face_map _10241156) = (face_map _10241157)))
T c\/ c~ c= f0 f1 c= * part cface_map f0 * part cface_map f1
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- (T = (((~ ((permutes _10241122) _10241123)) \/ ((_10241122 o (inverse _10241122)) = ((inverse (node_map H)) o (node_map H)))) = (((_10241122 o (inverse _10241122)) = ((inverse (node_map H)) o (node_map H))) \/ (~ ((permutes _10241122) _10241123)))))
T c= cT c= c\/ c~ cpermutes f0 f1 c= * * part co f0 * part cinverse f0 * * part co * part cinverse * part cnode_map f2 * part cnode_map f2 c\/ c= * * part co f0 * part cinverse f0 * * part co * part cinverse * part cnode_map f2 * part cnode_map f2 c~ cpermutes f0 f1
- (_10241158 = _10241159) |- ((_10241158 = _10241159) /\ ((node_map _10241158) = (node_map _10241159)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * part cnode_map f0 * part cnode_map f1
- |- ((((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F)))))) ==> ((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F))))))) ==> (((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F)))))) ==> ((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F))))))))
T c==> c==> c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cF c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cF c==> c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cF c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cF
- (((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))) ==> ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F)))))))) |- ((((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))) ==> ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F)))))))) /\ (((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))) ==> ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F)))))))))
T c==> c==> c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c/\ c==> c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c==> c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF
- (~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) |- (((permutes (edge_map H)) (dart H)) = ((permutes (edge_map H)) (dart H)))
T c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c= cpermutes * part cedge_map f0 * part cdart f0 cpermutes * part cedge_map f0 * part cdart f0
- |- ((~ (_10241150 = _10241151)) \/ ((inverse _10241150) = (inverse _10241151)))
T c\/ c~ c= f0 f1 c= * part cinverse f0 * part cinverse f1
- |- ((~ (_10241109 = _10241111)) \/ ((~ (_10241108 = _10241110)) \/ ((_10241108 o _10241109) = (_10241110 o _10241111))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part co f2 f0 * * part co f3 f1
- |- ((((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))) ==> ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F)))))))) = ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))))
T c= c==> c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF
- |- ((_10241158 = _10241159) ==> ((node_map _10241158) = (node_map _10241159)))
T c==> c= f0 f1 c= * part cnode_map f0 * part cnode_map f1
- (_10241148 = _10241149) |- ((((FINITE _10241148) = (FINITE _10241149)) ==> ((FINITE _10241149) \/ (~ (FINITE _10241148)))) = ((FINITE _10241149) \/ (~ (FINITE _10241148))))
T c==> c= f0 f1 c= c==> c= cFINITE f0 cFINITE f1 c\/ cFINITE f1 c~ cFINITE f0 c\/ cFINITE f1 c~ cFINITE f0
- |- ((_10241109 = _10241111) ==> ((~ (_10241108 = _10241110)) \/ ((_10241108 o _10241109) = (_10241110 o _10241111))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part co f2 f0 * * part co f3 f1
- |- ((_10241162 = _10241163) ==> ((dart _10241162) = (dart _10241163)))
T c==> c= f0 f1 c= * part cdart f0 * part cdart f1
- (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) |- ((~ (((face_map H) o ((node_map H) o ((inverse (node_map H)) o (inverse (face_map H))))) = (((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))))) ==> (((face_map H) o ((node_map H) o ((inverse (node_map H)) o (inverse (face_map H))))) = (((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H))))))
T c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> c~ c= * * part co * part cface_map f0 * * part co * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c= * * part co * part cface_map f0 * * part co * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0
- |- ((((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F)))))) ==> ((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F))))))) = ((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F)))))))
T c= c==> c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cF c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cF c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cF
- ((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F)))))) |- (((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F)))))) /\ ((~ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = ((face_map H) o (((node_map H) o (inverse (node_map H))) o (inverse (face_map H)))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> ((!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h))))) ==> F)))))))
T c==> c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cF c/\ c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cF c==> c~ c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 * * part co * part cface_map f0 * * part co * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 c==> ! ! ! c= * * part co b0 * * part co b1 b2 * * part co * * part co b0 b1 b2 cF
- (~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) |- (((~ ((permutes _10241122) _10241123)) \/ (((inverse _10241122) o _10241122) = I)) = ((~ ((permutes _10241122) _10241123)) \/ (((inverse _10241122) o _10241122) = ((inverse (node_map H)) o (node_map H)))))
T c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c= c\/ c~ cpermutes f1 f2 c= * * part co * part cinverse f1 f1 part cI c\/ c~ cpermutes f1 f2 c= * * part co * part cinverse f1 f1 * * part co * part cinverse * part cnode_map f0 * part cnode_map f0
- |- ((((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))) ==> ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F)))))))) ==> (((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F))))))) ==> ((FINITE (dart H)) ==> (((permutes (edge_map H)) (dart H)) ==> (((permutes (node_map H)) (dart H)) ==> (((permutes (face_map H)) (dart H)) ==> ((((edge_map H) o ((node_map H) o (face_map H))) = I) ==> ((~ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) ==> (((face_map H) o (inverse (face_map H))) = I))) ==> ((!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) ==> F)))))))))
T c==> c==> c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c==> c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c~ c==> c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c==> ! ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI cF
- |- ((~ (_10241162 = _10241163)) \/ ((dart _10241162) = (dart _10241163)))
T c\/ c~ c= f0 f1 c= * part cdart f0 * part cdart f1
