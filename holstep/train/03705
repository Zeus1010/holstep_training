N Hypermap.lemma_cycle_orbit
C |- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> ((((POWER p) (CARD ((orbit_map p) x))) x) = x)))))
T c==> c/\ cFINITE f0 cpermutes f1 f0 c= cPOWER f1 cCARD * * part corbit_map f1 f2 f2 f2
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D Ssrnat.add0n
A |- (!n. (((NUMERAL _0) + n) = n))
T c= c+ cNUMERAL c_0 f0 f0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D ADD_ASSOC
A |- (!m. (!n. (!p. ((m + (n + p)) = ((m + n) + p)))))
T c= c+ f0 c+ f1 f2 c+ c+ f0 f1 f2
D ADD_AC
A |- (((m + n) = (n + m)) /\ ((((m + n) + p) = (m + (n + p))) /\ ((m + (n + p)) = (n + (m + p)))))
T c/\ c= c+ f0 f1 c+ f1 f0 c/\ c= c+ c+ f0 f1 f2 c+ f0 c+ f1 f2 c= c+ f0 c+ f1 f2 c+ f1 c+ f0 f2
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D ADD1
A |- (!m. ((SUC m) = (m + (NUMERAL (BIT1 _0)))))
T c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
D Ssrnat.mul0n
A |- (!n. (((NUMERAL _0) * n) = (NUMERAL _0)))
T c= c* cNUMERAL c_0 f0 cNUMERAL c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D Ssrnat.mul1n
A |- (!n. (((NUMERAL (BIT1 _0)) * n) = n))
T c= c* cNUMERAL cBIT1 c_0 f0 f0
D LEFT_ADD_DISTRIB
A |- (!m. (!n. (!p. ((m * (n + p)) = ((m * n) + (m * p))))))
T c= c* f0 c+ f1 f2 c+ c* f0 f1 c* f0 f2
D MULT_AC
A |- (((m * n) = (n * m)) /\ ((((m * n) * p) = (m * (n * p))) /\ ((m * (n * p)) = (n * (m * p)))))
T c/\ c= c* f0 f1 c* f1 f0 c/\ c= c* c* f0 f1 f2 c* f0 c* f1 f2 c= c* f0 c* f1 f2 c* f1 c* f0 f2
D Ssrnat.expnS
A |- (!m. (!n. ((m EXP (SUC n)) = (m * (m EXP n)))))
T c= cEXP f0 cSUC f1 c* f0 cEXP f0 f1
D Ssrnat.expn0
A |- (!m. ((m EXP (NUMERAL _0)) = (NUMERAL (BIT1 _0))))
T c= cEXP f0 cNUMERAL c_0 cNUMERAL cBIT1 c_0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_OF_NUM_ADD
A |- (!m. (!n. (((int_add (int_of_num m)) (int_of_num n)) = (int_of_num (m + n)))))
T c= cint_add cint_of_num f0 cint_of_num f1 cint_of_num c+ f0 f1
D INT_OF_NUM_LE
A |- (!m. (!n. (((int_le (int_of_num m)) (int_of_num n)) = (m <= n))))
T c= cint_le cint_of_num f0 cint_of_num f1 c<= f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D CARD_SUBSET
A |- (!a. (!b. (((a SUBSET b) /\ (FINITE b)) ==> ((CARD a) <= (CARD b)))))
T c==> c/\ cSUBSET f0 f1 cFINITE f1 c<= cCARD f0 cCARD f1
D Hypermap.LT_PLUS
A |- (!n. (n < (SUC n)))
T c< f0 cSUC f0
D Hypermap.lemma_orbit_finite
A |- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x))))))
T c==> c/\ cFINITE f0 cpermutes f1 f0 cFINITE * * part corbit_map f1 f2
D Hypermap.LE_SUC_PRE
A |- (!n. (((NUMERAL (BIT1 _0)) <= n) ==> ((SUC (PRE n)) = n)))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= cSUC cPRE f0 f0
D Hypermap.support_of_sequence
A |- (!n. (!p. (((support_of_sequence p) n) = (GSPEC (\GEN%PVAR%5403. (?i. (((SETSPEC GEN%PVAR%5403) (i <= n)) (p i))))))))
T c= * * part csupport_of_sequence f0 f1 * part cGSPEC / c? / cSETSPEC b0 c<= b1 f1 * f0 b1
D Hypermap.lemma_size_list
A |- (!p. (!n. (((is_inj_list p) n) ==> ((CARD ((support_of_sequence p) n)) = (SUC n)))))
T c==> cis_inj_list f0 f1 c= cCARD * * part csupport_of_sequence f0 f1 cSUC f1
D Hypermap.orbit_reflect
A |- (!f. (!x. (x IN ((orbit_map f) x))))
T cIN f0 * * part corbit_map f1 f0
D Hypermap.CARD_ATLEAST_1
A |- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((NUMERAL (BIT1 _0)) <= (CARD s)))))
T c==> c/\ cFINITE f0 cIN f1 f0 c<= cNUMERAL cBIT1 c_0 cCARD f0
D Hypermap.power_sequence
A |- (!p. (!x. (((power_sequence p) x) = (\i. (((POWER p) i) x)))))
T c= * * part cpower_sequence f0 f1 / cPOWER f0 b0 f1
D Hypermap.lemma_inj_orbit_via_list
A |- (!p. (!x. (!n. ((((inj_orbit p) x) n) = ((is_inj_list ((power_sequence p) x)) n)))))
T c= cinj_orbit f0 f1 f2 cis_inj_list * * part cpower_sequence f0 f1 f2
D Hypermap.inj_orbit_step
A |- (!s. (!p. (!x. (!n. ((((permutes p) s) /\ ((((inj_orbit p) x) n) /\ (~ ((((POWER p) (SUC n)) x) = x)))) ==> (((inj_orbit p) x) (SUC n)))))))
T c==> c/\ cpermutes f0 f1 c/\ cinj_orbit f0 f2 f3 c~ c= cPOWER f0 cSUC f3 f2 f2 cinj_orbit f0 f2 cSUC f3
D Hypermap.lemma_subset_orbit
A |- (!p. (!x. (!n. ((GSPEC (\GEN%PVAR%5410. (?i. (((SETSPEC GEN%PVAR%5410) (i <= n)) (((POWER p) i) x))))) SUBSET ((orbit_map p) x)))))
T cSUBSET * part cGSPEC / c? / cSETSPEC b0 c<= b1 f0 cPOWER f1 b1 f2 * * part corbit_map f1 f2
D Hypermap.lemma_segment_orbit
A |- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (!m. ((m < (CARD ((orbit_map p) x))) ==> (((inj_orbit p) x) m)))))))
T c==> c/\ cFINITE f0 cpermutes f1 f0 ! c==> c< b0 cCARD * * part corbit_map f1 f2 cinj_orbit f1 f2 b0
+ |- ((\s. (!p. (((FINITE s) /\ ((permutes p) s)) ==> (!x. (!m. ((m < (CARD ((orbit_map p) x))) ==> (((inj_orbit p) x) m))))))) s)
T * / ! c==> c/\ cFINITE b0 cpermutes b1 b0 ! ! c==> c< b3 cCARD * * part corbit_map b1 b2 cinj_orbit b1 b2 b3 f0
+ |- ((\p. (!x. (!n. ((((inj_orbit p) x) n) = ((is_inj_list ((power_sequence p) x)) n))))) p)
T * / ! ! c= cinj_orbit b0 b1 b2 cis_inj_list * * part cpower_sequence b0 b1 b2 f0
- |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
+ (FINITE s), ((permutes p) s) |- ((m < (CARD ((orbit_map p) x))) ==> (((inj_orbit p) x) m))
T c==> cFINITE f0 c==> cpermutes f1 f0 c==> c< f2 cCARD * * part corbit_map f1 f3 cinj_orbit f1 f3 f2
+ (FINITE s), ((CARD ((orbit_map p) x)) = (SUC m)), ((permutes p) s) |- ((((inj_orbit p) x) m) ==> ((~ ((((POWER p) (SUC m)) x) = x)) ==> ((((POWER p) (SUC m)) x) = x)))
T c==> cFINITE f0 c==> c= cCARD * * part corbit_map f1 f2 cSUC f3 c==> cpermutes f1 f0 c==> cinj_orbit f1 f2 f3 c==> c~ c= cPOWER f1 cSUC f3 f2 f2 c= cPOWER f1 cSUC f3 f2 f2
+ ((CARD ((orbit_map p) x)) = (SUC m)) |- (((((inj_orbit p) x) m) ==> ((~ ((((POWER p) (SUC m)) x) = x)) ==> ((((POWER p) (SUC m)) x) = x))) = (((m < (CARD ((orbit_map p) x))) ==> (((inj_orbit p) x) m)) ==> ((~ ((((POWER p) (SUC m)) x) = x)) ==> ((((POWER p) (CARD ((orbit_map p) x))) x) = x))))
T c==> c= cCARD * * part corbit_map f0 f1 cSUC f2 c= c==> cinj_orbit f0 f1 f2 c==> c~ c= cPOWER f0 cSUC f2 f1 f1 c= cPOWER f0 cSUC f2 f1 f1 c==> c==> c< f2 cCARD * * part corbit_map f0 f1 cinj_orbit f0 f1 f2 c==> c~ c= cPOWER f0 cSUC f2 f1 f1 c= cPOWER f0 cCARD * * part corbit_map f0 f1 f1 f1
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x)))))) |- (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x)))))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cFINITE * * part corbit_map b1 b2 ! ! c==> c/\ cFINITE f0 cpermutes b0 f0 cFINITE * * part corbit_map b0 b1
+ (FINITE s), ((FINITE s) /\ ((permutes p) s)) |- ((((POWER p) (CARD ((orbit_map p) x))) x) = x)
T c==> cFINITE f0 c==> c/\ cFINITE f0 cpermutes f1 f0 c= cPOWER f1 cCARD * * part corbit_map f1 f2 f2 f2
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (!m. ((m < (CARD ((orbit_map p) x))) ==> (((inj_orbit p) x) m))))))) |- ((\p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (!m. ((m < (CARD ((orbit_map p) x))) ==> (((inj_orbit p) x) m)))))) p)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 ! c==> c< b3 cCARD * * part corbit_map b1 b2 cinj_orbit b1 b2 b3 * / ! c==> c/\ cFINITE f0 cpermutes b0 f0 ! c==> c< b2 cCARD * * part corbit_map b0 b1 cinj_orbit b0 b1 b2 f1
+ |- (((!s. (!p. (((FINITE s) /\ ((permutes p) s)) ==> (!x. (FINITE ((orbit_map p) x)))))) ==> ((\s. (!p. (((FINITE s) /\ ((permutes p) s)) ==> (!x. (FINITE ((orbit_map p) x)))))) s)) = ((\s. (!p. (((FINITE s) /\ ((permutes p) s)) ==> (!x. (FINITE ((orbit_map p) x)))))) s))
T c= c==> ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 ! cFINITE * * part corbit_map b1 b2 * / ! c==> c/\ cFINITE b0 cpermutes b1 b0 ! cFINITE * * part corbit_map b1 b2 f0 * / ! c==> c/\ cFINITE b0 cpermutes b1 b0 ! cFINITE * * part corbit_map b1 b2 f0
+ |- ((((is_inj_list ((power_sequence p) x)) (SUC m)) ==> ((((POWER p) (SUC m)) x) = x)) = ((((inj_orbit p) x) (SUC m)) ==> ((((POWER p) (SUC m)) x) = x)))
T c= c==> cis_inj_list * * part cpower_sequence f0 f1 cSUC f2 c= cPOWER f0 cSUC f2 f1 f1 c==> cinj_orbit f0 f1 cSUC f2 c= cPOWER f0 cSUC f2 f1 f1
+ |- (((!x. (x IN ((orbit_map p) x))) ==> ((\x. (x IN ((orbit_map p) x))) x)) = ((\x. (x IN ((orbit_map p) x))) x))
T c= c==> ! cIN b0 * * part corbit_map f0 b0 * / cIN b0 * * part corbit_map f0 b0 f1 * / cIN b0 * * part corbit_map f0 b0 f1
+ (FINITE s), ((permutes p) s) |- ((FINITE s) /\ ((permutes p) s))
T c==> cFINITE f0 c==> cpermutes f1 f0 c/\ cFINITE f0 cpermutes f1 f0
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x)))))), ((FINITE s) /\ ((permutes p) s)) |- (((FINITE s) /\ ((permutes p) s)) /\ (!x. (FINITE ((orbit_map p) x))))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cFINITE * * part corbit_map b1 b2 c==> c/\ cFINITE f0 cpermutes f1 f0 c/\ c/\ cFINITE f0 cpermutes f1 f0 ! cFINITE * * part corbit_map f1 b0
+ |- ((((GSPEC (\GEN%PVAR%5410. (?i. (((SETSPEC GEN%PVAR%5410) (i <= (SUC m))) (((POWER p) i) x))))) SUBSET ((orbit_map p) x)) ==> ((FINITE ((orbit_map p) x)) ==> ((((POWER p) (SUC m)) x) = x))) = ((FINITE ((orbit_map p) x)) ==> ((((POWER p) (SUC m)) x) = x)))
T c= c==> cSUBSET * part cGSPEC / c? / cSETSPEC b0 c<= b1 cSUC f0 cPOWER f1 b1 f2 * * part corbit_map f1 f2 c==> cFINITE * * part corbit_map f1 f2 c= cPOWER f1 cSUC f0 f2 f2 c==> cFINITE * * part corbit_map f1 f2 c= cPOWER f1 cSUC f0 f2 f2
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ (FINITE s), ((PRE (CARD ((orbit_map p) x))) = m), ((FINITE ((orbit_map p) x)) /\ (x IN ((orbit_map p) x))), ((permutes p) s) |- ((((POWER p) (CARD ((orbit_map p) x))) x) = x)
T c==> cFINITE f0 c==> c= cPRE cCARD * * part corbit_map f1 f2 f3 c==> c/\ cFINITE * * part corbit_map f1 f2 cIN f2 * * part corbit_map f1 f2 c==> cpermutes f1 f0 c= cPOWER f1 cCARD * * part corbit_map f1 f2 f2 f2
+ ((CARD ((orbit_map p) x)) = (SUC m)) |- ((((SUC (SUC m)) <= (SUC m)) ==> ((((POWER p) (SUC m)) x) = x)) = (((SUC (SUC m)) <= (CARD ((orbit_map p) x))) ==> ((((POWER p) (SUC m)) x) = x)))
T c==> c= cCARD * * part corbit_map f0 f1 cSUC f2 c= c==> c<= cSUC cSUC f2 cSUC f2 c= cPOWER f0 cSUC f2 f1 f1 c==> c<= cSUC cSUC f2 cCARD * * part corbit_map f0 f1 c= cPOWER f0 cSUC f2 f1 f1
- |- ((~ (x = y)) = (((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y) \/ ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x)))
T c= c~ c= f0 f1 c\/ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
+ ((t1 /\ (t2 /\ t3)) = ((t1 /\ t2) /\ t3)) |- (((t1 /\ t2) /\ t3) = (t1 /\ (t2 /\ t3)))
T c==> c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2
- |- ((((\m. ((PRE (CARD ((orbit_map p) x))) = m)) m) ==> (?m. ((PRE (CARD ((orbit_map p) x))) = m))) = T)
T c= c==> * / c= cPRE cCARD * * part corbit_map f0 f1 b0 f2 c? / c= cPRE cCARD * * part corbit_map f0 f1 b0 cT
+ ((~ (~ ((((POWER p) (SUC m)) x) = x))) ==> ((((POWER p) (CARD ((orbit_map p) x))) x) = x)), ((~ ((((POWER p) (SUC m)) x) = x)) ==> ((((POWER p) (CARD ((orbit_map p) x))) x) = x)) |- ((((POWER p) (CARD ((orbit_map p) x))) x) = x)
T c==> c==> c~ c~ c= cPOWER f0 cSUC f1 f2 f2 c= cPOWER f0 cCARD * * part corbit_map f0 f2 f2 f2 c==> c==> c~ c= cPOWER f0 cSUC f1 f2 f2 c= cPOWER f0 cCARD * * part corbit_map f0 f2 f2 f2 c= cPOWER f0 cCARD * * part corbit_map f0 f2 f2 f2
+ (FINITE s), ((permutes p) s) |- ((\x. (!m. ((m < (CARD ((orbit_map p) x))) ==> (((inj_orbit p) x) m)))) x)
T c==> cFINITE f0 c==> cpermutes f1 f0 * / ! c==> c< b1 cCARD * * part corbit_map f1 b0 cinj_orbit f1 b0 b1 f2
+ (FINITE s), ((CARD ((orbit_map p) x)) = (SUC m)), ((permutes p) s) |- (((is_inj_list ((power_sequence p) x)) (SUC m)) ==> ((((POWER p) (SUC m)) x) = x))
T c==> cFINITE f0 c==> c= cCARD * * part corbit_map f1 f2 cSUC f3 c==> cpermutes f1 f0 c==> cis_inj_list * * part cpower_sequence f1 f2 cSUC f3 c= cPOWER f1 cSUC f3 f2 f2
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _2486141)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ (~ ((((POWER p) (m + (NUMERAL (BIT1 _0)))) x) = x)))) |- (~ ((((POWER p) (m + (NUMERAL (BIT1 _0)))) x) = x))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cPOWER f1 c+ f2 cNUMERAL cBIT1 c_0 f3 f3 c~ c= cPOWER f1 c+ f2 cNUMERAL cBIT1 c_0 f3 f3
+ |- (((!p. (((FINITE s) /\ ((permutes p) s)) ==> (!x. (FINITE ((orbit_map p) x))))) ==> ((\p. (((FINITE s) /\ ((permutes p) s)) ==> (!x. (FINITE ((orbit_map p) x))))) p)) = ((\p. (((FINITE s) /\ ((permutes p) s)) ==> (!x. (FINITE ((orbit_map p) x))))) p))
T c= c==> ! c==> c/\ cFINITE f0 cpermutes b0 f0 ! cFINITE * * part corbit_map b0 b1 * / c==> c/\ cFINITE f0 cpermutes b0 f0 ! cFINITE * * part corbit_map b0 b1 f1 * / c==> c/\ cFINITE f0 cpermutes b0 f0 ! cFINITE * * part corbit_map b0 b1 f1
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _2486141)) /\ (((real_le ((real_add (real_of_int _2486141)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_add (real_of_int _2486141)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (~ ((((POWER p) (m + (NUMERAL (BIT1 _0)))) x) = x)))) = (~ (((int_le (int_of_num (NUMERAL _0))) _2486141) ==> ((~ ((int_le ((int_add _2486141) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((int_add _2486141) (int_of_num (NUMERAL (BIT1 _0)))))) \/ ((((POWER p) (m + (NUMERAL (BIT1 _0)))) x) = x)))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= cPOWER f1 c+ f2 cNUMERAL cBIT1 c_0 f3 f3 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c\/ c~ cint_le cint_add f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 c= cPOWER f1 c+ f2 cNUMERAL cBIT1 c_0 f3 f3
+ (FINITE s), ((permutes p) s) |- ((((FINITE s) /\ ((permutes p) s)) ==> (!x. (FINITE ((orbit_map p) x)))) = (!x. (FINITE ((orbit_map p) x))))
T c==> cFINITE f0 c==> cpermutes f1 f0 c= c==> c/\ cFINITE f0 cpermutes f1 f0 ! cFINITE * * part corbit_map f1 b0 ! cFINITE * * part corbit_map f1 b0
+ (FINITE s), ((permutes p) s) |- (FINITE ((orbit_map p) x))
T c==> cFINITE f0 c==> cpermutes f1 f0 cFINITE * * part corbit_map f1 f2
+ (FINITE s), ((CARD ((orbit_map p) x)) = (SUC m)), (((permutes p) s) /\ ((((inj_orbit p) x) m) /\ (~ ((((POWER p) (SUC m)) x) = x)))), ((permutes p) s) |- ((((permutes p) s) /\ ((((inj_orbit p) x) m) /\ (~ ((((POWER p) (SUC m)) x) = x)))) /\ ((((POWER p) (SUC m)) x) = x))
T c==> cFINITE f0 c==> c= cCARD * * part corbit_map f1 f2 cSUC f3 c==> c/\ cpermutes f1 f0 c/\ cinj_orbit f1 f2 f3 c~ c= cPOWER f1 cSUC f3 f2 f2 c==> cpermutes f1 f0 c/\ c/\ cpermutes f1 f0 c/\ cinj_orbit f1 f2 f3 c~ c= cPOWER f1 cSUC f3 f2 f2 c= cPOWER f1 cSUC f3 f2 f2
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (!m. ((m < (CARD ((orbit_map p) x))) ==> (((inj_orbit p) x) m))))))) |- ((((FINITE s) /\ ((permutes p) s)) ==> (!x. (!m. ((m < (CARD ((orbit_map p) x))) ==> (((inj_orbit p) x) m))))) = T)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 ! c==> c< b3 cCARD * * part corbit_map b1 b2 cinj_orbit b1 b2 b3 c= c==> c/\ cFINITE f0 cpermutes f1 f0 ! ! c==> c< b1 cCARD * * part corbit_map f1 b0 cinj_orbit f1 b0 b1 cT
+ |- ((\n. (((NUMERAL (BIT1 _0)) <= n) ==> ((SUC (PRE n)) = n))) n)
T * / c==> c<= cNUMERAL cBIT1 c_0 b0 c= cSUC cPRE b0 b0 f0
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (FINITE s), ((CARD ((orbit_map p) x)) = (SUC m)), ((permutes p) s) |- ((((permutes p) s) /\ ((((inj_orbit p) x) m) /\ (~ ((((POWER p) (SUC m)) x) = x)))) ==> ((((POWER p) (SUC m)) x) = x))
T c==> cFINITE f0 c==> c= cCARD * * part corbit_map f1 f2 cSUC f3 c==> cpermutes f1 f0 c==> c/\ cpermutes f1 f0 c/\ cinj_orbit f1 f2 f3 c~ c= cPOWER f1 cSUC f3 f2 f2 c= cPOWER f1 cSUC f3 f2 f2
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ (FINITE s), ((PRE (CARD ((orbit_map p) x))) = m), ((permutes p) s) |- (((NUMERAL (BIT1 _0)) <= (CARD ((orbit_map p) x))) ==> ((((POWER p) (CARD ((orbit_map p) x))) x) = x))
T c==> cFINITE f0 c==> c= cPRE cCARD * * part corbit_map f1 f2 f3 c==> cpermutes f1 f0 c==> c<= cNUMERAL cBIT1 c_0 cCARD * * part corbit_map f1 f2 c= cPOWER f1 cCARD * * part corbit_map f1 f2 f2 f2
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x)))))), ((FINITE s) /\ ((permutes p) s)) |- (FINITE ((orbit_map p) x))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cFINITE * * part corbit_map b1 b2 c==> c/\ cFINITE f0 cpermutes f1 f0 cFINITE * * part corbit_map f1 f2
+ |- (((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x)))))) ==> (!s. (!p. (((FINITE s) /\ ((permutes p) s)) ==> (!x. (FINITE ((orbit_map p) x))))))) = (!s. (!p. (((FINITE s) /\ ((permutes p) s)) ==> (!x. (FINITE ((orbit_map p) x)))))))
T c= c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cFINITE * * part corbit_map b1 b2 ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 ! cFINITE * * part corbit_map b1 b2 ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 ! cFINITE * * part corbit_map b1 b2
+ (FINITE s), ((permutes p) s) |- ((((POWER p) (CARD ((orbit_map p) x))) x) = x)
T c==> cFINITE f0 c==> cpermutes f1 f0 c= cPOWER f1 cCARD * * part corbit_map f1 f2 f2 f2
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x)))))) |- (((!x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x)))) ==> ((\x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x)))) x)) = ((\x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x)))) x))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cFINITE * * part corbit_map b1 b2 c= c==> ! c==> c/\ cFINITE f0 cpermutes f1 f0 cFINITE * * part corbit_map f1 b0 * / c==> c/\ cFINITE f0 cpermutes f1 f0 cFINITE * * part corbit_map f1 b0 f2 * / c==> c/\ cFINITE f0 cpermutes f1 f0 cFINITE * * part corbit_map f1 b0 f2
+ |- (((!x. (((power_sequence p) x) = (\i. (((POWER p) i) x)))) ==> ((\x. (((power_sequence p) x) = (\i. (((POWER p) i) x)))) x)) = ((\x. (((power_sequence p) x) = (\i. (((POWER p) i) x)))) x))
T c= c==> ! c= * * part cpower_sequence f0 b0 / cPOWER f0 b1 b0 * / c= * * part cpower_sequence f0 b0 / cPOWER f0 b1 b0 f1 * / c= * * part cpower_sequence f0 b0 / cPOWER f0 b1 b0 f1
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num m)) ==> ((~ ((int_le ((int_add (int_of_num m)) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((int_add (int_of_num m)) (int_of_num (NUMERAL (BIT1 _0)))))) \/ ((((POWER p) (m + (NUMERAL (BIT1 _0)))) x) = x))) = ((~ ((int_le ((int_add (int_of_num m)) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((int_add (int_of_num m)) (int_of_num (NUMERAL (BIT1 _0)))))) \/ ((((POWER p) (m + (NUMERAL (BIT1 _0)))) x) = x)))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c\/ c~ cint_le cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 c= cPOWER f1 c+ f0 cNUMERAL cBIT1 c_0 f2 f2 c\/ c~ cint_le cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 c= cPOWER f1 c+ f0 cNUMERAL cBIT1 c_0 f2 f2
+ |- (((FINITE s) /\ ((permutes p) s)) ==> (!x. (FINITE ((orbit_map p) x))))
T c==> c/\ cFINITE f0 cpermutes f1 f0 ! cFINITE * * part corbit_map f1 b0
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
+ |- ((\p. (!x. (!n. ((GSPEC (\GEN%PVAR%5410. (?i. (((SETSPEC GEN%PVAR%5410) (i <= n)) (((POWER p) i) x))))) SUBSET ((orbit_map p) x))))) p)
T * / ! ! cSUBSET * part cGSPEC / c? / cSETSPEC b3 c<= b4 b2 cPOWER b0 b4 b1 * * part corbit_map b0 b1 f0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (FINITE s), ((permutes p) s) |- ((?m. ((PRE (CARD ((orbit_map p) x))) = m)) ==> ((x IN ((orbit_map p) x)) ==> ((((POWER p) (CARD ((orbit_map p) x))) x) = x)))
T c==> cFINITE f0 c==> cpermutes f1 f0 c==> c? / c= cPRE cCARD * * part corbit_map f1 f2 b0 c==> cIN f2 * * part corbit_map f1 f2 c= cPOWER f1 cCARD * * part corbit_map f1 f2 f2 f2
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x)))))) |- ((\p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x))))) p)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cFINITE * * part corbit_map b1 b2 * / ! c==> c/\ cFINITE f0 cpermutes b0 f0 cFINITE * * part corbit_map b0 b1 f1
+ |- ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))
T c= cint_of_num c+ f0 f1 cint_add cint_of_num f0 cint_of_num f1
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x)))))) |- (((!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x))))) ==> ((\p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x))))) p)) = ((\p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x))))) p))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cFINITE * * part corbit_map b1 b2 c= c==> ! ! c==> c/\ cFINITE f0 cpermutes b0 f0 cFINITE * * part corbit_map b0 b1 * / ! c==> c/\ cFINITE f0 cpermutes b0 f0 cFINITE * * part corbit_map b0 b1 f1 * / ! c==> c/\ cFINITE f0 cpermutes b0 f0 cFINITE * * part corbit_map b0 b1 f1
+ |- ((\n. ((((inj_orbit p) x) n) = ((is_inj_list ((power_sequence p) x)) n))) n)
T * / c= cinj_orbit f0 f1 b0 cis_inj_list * * part cpower_sequence f0 f1 b0 f2
+ |- (((!t3. (((t1 /\ t2) /\ t3) = (t1 /\ (t2 /\ t3)))) ==> ((\t3. (((t1 /\ t2) /\ t3) = (t1 /\ (t2 /\ t3)))) t3)) = ((\t3. (((t1 /\ t2) /\ t3) = (t1 /\ (t2 /\ t3)))) t3))
T c= c==> ! c= c/\ c/\ f0 f1 b0 c/\ f0 c/\ f1 b0 * / c= c/\ c/\ f0 f1 b0 c/\ f0 c/\ f1 b0 f2 * / c= c/\ c/\ f0 f1 b0 c/\ f0 c/\ f1 b0 f2
- |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
+ ((CARD ((orbit_map p) x)) = (SUC m)) |- (((((POWER p) (SUC m)) x) = x) ==> ((((POWER p) (CARD ((orbit_map p) x))) x) = x))
T c==> c= cCARD * * part corbit_map f0 f1 cSUC f2 c==> c= cPOWER f0 cSUC f2 f1 f1 c= cPOWER f0 cCARD * * part corbit_map f0 f1 f1 f1
+ |- (((SUC (SUC m)) <= (SUC m)) ==> ((((POWER p) (SUC m)) x) = x))
T c==> c<= cSUC cSUC f0 cSUC f0 c= cPOWER f1 cSUC f0 f2 f2
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (!m. ((m < (CARD ((orbit_map p) x))) ==> (((inj_orbit p) x) m))))))) |- (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (!m. ((m < (CARD ((orbit_map p) x))) ==> (((inj_orbit p) x) m))))))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 ! c==> c< b3 cCARD * * part corbit_map b1 b2 cinj_orbit b1 b2 b3 ! ! c==> c/\ cFINITE f0 cpermutes b0 f0 ! c==> c< b2 cCARD * * part corbit_map b0 b1 cinj_orbit b0 b1 b2
+ |- (((!x. (!n. ((((inj_orbit p) x) n) = ((is_inj_list ((power_sequence p) x)) n)))) ==> ((\x. (!n. ((((inj_orbit p) x) n) = ((is_inj_list ((power_sequence p) x)) n)))) x)) = ((\x. (!n. ((((inj_orbit p) x) n) = ((is_inj_list ((power_sequence p) x)) n)))) x))
T c= c==> ! ! c= cinj_orbit f0 b0 b1 cis_inj_list * * part cpower_sequence f0 b0 b1 * / ! c= cinj_orbit f0 b0 b1 cis_inj_list * * part cpower_sequence f0 b0 b1 f1 * / ! c= cinj_orbit f0 b0 b1 cis_inj_list * * part cpower_sequence f0 b0 b1 f1
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x)))))) |- ((!p. (((FINITE s) /\ ((permutes p) s)) ==> (!x. (FINITE ((orbit_map p) x))))) = T)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cFINITE * * part corbit_map b1 b2 c= ! c==> c/\ cFINITE f0 cpermutes b0 f0 ! cFINITE * * part corbit_map b0 b1 cT
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x)))))) |- ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x)))))) /\ (!s. (!p. (((FINITE s) /\ ((permutes p) s)) ==> (!x. (FINITE ((orbit_map p) x)))))))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cFINITE * * part corbit_map b1 b2 c/\ ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cFINITE * * part corbit_map b1 b2 ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 ! cFINITE * * part corbit_map b1 b2
+ ((CARD ((orbit_map p) x)) = (SUC m)) |- ((((SUC (SUC m)) <= (CARD ((orbit_map p) x))) ==> ((((POWER p) (SUC m)) x) = x)) = (((SUC (SUC m)) <= (SUC m)) ==> ((((POWER p) (SUC m)) x) = x)))
T c==> c= cCARD * * part corbit_map f0 f1 cSUC f2 c= c==> c<= cSUC cSUC f2 cCARD * * part corbit_map f0 f1 c= cPOWER f0 cSUC f2 f1 f1 c==> c<= cSUC cSUC f2 cSUC f2 c= cPOWER f0 cSUC f2 f1 f1
- |- ((?i. t) = t)
T c= c? / f0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!p. (!x. (!n. ((((inj_orbit p) x) n) = ((is_inj_list ((power_sequence p) x)) n))))) ==> ((\p. (!x. (!n. ((((inj_orbit p) x) n) = ((is_inj_list ((power_sequence p) x)) n))))) p)) = ((\p. (!x. (!n. ((((inj_orbit p) x) n) = ((is_inj_list ((power_sequence p) x)) n))))) p))
T c= c==> ! ! ! c= cinj_orbit b0 b1 b2 cis_inj_list * * part cpower_sequence b0 b1 b2 * / ! ! c= cinj_orbit b0 b1 b2 cis_inj_list * * part cpower_sequence b0 b1 b2 f0 * / ! ! c= cinj_orbit b0 b1 b2 cis_inj_list * * part cpower_sequence b0 b1 b2 f0
+ |- ((((FINITE ((orbit_map p) x)) /\ (x IN ((orbit_map p) x))) ==> ((((POWER p) (CARD ((orbit_map p) x))) x) = x)) = ((FINITE ((orbit_map p) x)) ==> ((x IN ((orbit_map p) x)) ==> ((((POWER p) (CARD ((orbit_map p) x))) x) = x))))
T c= c==> c/\ cFINITE * * part corbit_map f0 f1 cIN f1 * * part corbit_map f0 f1 c= cPOWER f0 cCARD * * part corbit_map f0 f1 f1 f1 c==> cFINITE * * part corbit_map f0 f1 c==> cIN f1 * * part corbit_map f0 f1 c= cPOWER f0 cCARD * * part corbit_map f0 f1 f1 f1
+ |- (((!t1. (!t2. (!t3. (((t1 /\ t2) /\ t3) = (t1 /\ (t2 /\ t3)))))) ==> ((\t1. (!t2. (!t3. (((t1 /\ t2) /\ t3) = (t1 /\ (t2 /\ t3)))))) t1)) = ((\t1. (!t2. (!t3. (((t1 /\ t2) /\ t3) = (t1 /\ (t2 /\ t3)))))) t1))
T c= c==> ! ! ! c= c/\ c/\ b0 b1 b2 c/\ b0 c/\ b1 b2 * / ! ! c= c/\ c/\ b0 b1 b2 c/\ b0 c/\ b1 b2 f0 * / ! ! c= c/\ c/\ b0 b1 b2 c/\ b0 c/\ b1 b2 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((PRE (CARD ((orbit_map p) x))) = m) = ((\m. ((PRE (CARD ((orbit_map p) x))) = m)) m))
T c= c= cPRE cCARD * * part corbit_map f0 f1 f2 * / c= cPRE cCARD * * part corbit_map f0 f1 b0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((\m. ((PRE (CARD ((orbit_map p) x))) = m)) m) |- ((((PRE (CARD ((orbit_map p) x))) = m) ==> (?m. ((PRE (CARD ((orbit_map p) x))) = m))) = (?m. ((PRE (CARD ((orbit_map p) x))) = m)))
T c==> * / c= cPRE cCARD * * part corbit_map f0 f1 b0 f2 c= c==> c= cPRE cCARD * * part corbit_map f0 f1 f2 c? / c= cPRE cCARD * * part corbit_map f0 f1 b0 c? / c= cPRE cCARD * * part corbit_map f0 f1 b0
- |- (((PRE (CARD ((orbit_map p) x))) = m) ==> (?m. ((PRE (CARD ((orbit_map p) x))) = m)))
T c==> c= cPRE cCARD * * part corbit_map f0 f1 f2 c? / c= cPRE cCARD * * part corbit_map f0 f1 b0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((((POWER p) (SUC m)) x) = x)), (FINITE s), ((CARD ((orbit_map p) x)) = (SUC m)), ((permutes p) s) |- ((~ ((((POWER p) (SUC m)) x) = x)) /\ ((((POWER p) (CARD ((orbit_map p) x))) x) = x))
T c==> c~ c= cPOWER f0 cSUC f1 f2 f2 c==> cFINITE f3 c==> c= cCARD * * part corbit_map f0 f2 cSUC f1 c==> cpermutes f0 f3 c/\ c~ c= cPOWER f0 cSUC f1 f2 f2 c= cPOWER f0 cCARD * * part corbit_map f0 f2 f2 f2
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((SUC (SUC m)) <= (SUC m)) ==> ((((POWER p) (SUC m)) x) = x)) = T)
T c= c==> c<= cSUC cSUC f0 cSUC f0 c= cPOWER f1 cSUC f0 f2 f2 cT
- |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. (((\m. ((PRE (CARD ((orbit_map p) x))) = m)) x) ==> (?m. ((PRE (CARD ((orbit_map p) x))) = m)))) ==> ((?m. ((PRE (CARD ((orbit_map p) x))) = m)) ==> (?m. ((PRE (CARD ((orbit_map p) x))) = m)))) = ((?m. ((PRE (CARD ((orbit_map p) x))) = m)) ==> (?m. ((PRE (CARD ((orbit_map p) x))) = m))))
T c= c==> ! c==> * / c= cPRE cCARD * * part corbit_map f0 f1 b1 b0 c? / c= cPRE cCARD * * part corbit_map f0 f1 b1 c==> c? / c= cPRE cCARD * * part corbit_map f0 f1 b0 c? / c= cPRE cCARD * * part corbit_map f0 f1 b0 c==> c? / c= cPRE cCARD * * part corbit_map f0 f1 b0 c? / c= cPRE cCARD * * part corbit_map f0 f1 b0
- ((PRE (CARD ((orbit_map p) x))) = m) |- ((\m. ((PRE (CARD ((orbit_map p) x))) = m)) m)
T c==> c= cPRE cCARD * * part corbit_map f0 f1 f2 * / c= cPRE cCARD * * part corbit_map f0 f1 b0 f2
- ((PRE (CARD ((orbit_map p) x))) = m) |- (((PRE (CARD ((orbit_map p) x))) = m) /\ (?m. ((PRE (CARD ((orbit_map p) x))) = m)))
T c==> c= cPRE cCARD * * part corbit_map f0 f1 f2 c/\ c= cPRE cCARD * * part corbit_map f0 f1 f2 c? / c= cPRE cCARD * * part corbit_map f0 f1 b0
- |- ((x = y) = ((real_of_int x) = (real_of_int y)))
T c= c= f0 f1 c= creal_of_int f0 creal_of_int f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- ((\m. ((PRE (CARD ((orbit_map p) x))) = m)) m) |- (((\m. ((PRE (CARD ((orbit_map p) x))) = m)) m) /\ (?m. ((PRE (CARD ((orbit_map p) x))) = m)))
T c==> * / c= cPRE cCARD * * part corbit_map f0 f1 b0 f2 c/\ * / c= cPRE cCARD * * part corbit_map f0 f1 b0 f2 c? / c= cPRE cCARD * * part corbit_map f0 f1 b0
- (~ ((((POWER p) (SUC m)) x) = x)), (FINITE s), ((CARD ((orbit_map p) x)) = (SUC m)), ((permutes p) s) |- ((((POWER p) (CARD ((orbit_map p) x))) x) = x)
T c==> c~ c= cPOWER f0 cSUC f1 f2 f2 c==> cFINITE f3 c==> c= cCARD * * part corbit_map f0 f2 cSUC f1 c==> cpermutes f0 f3 c= cPOWER f0 cCARD * * part corbit_map f0 f2 f2 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((NUMERAL (BIT0 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((\i. (f i)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (T = (((SUC (SUC m)) <= (SUC m)) ==> ((((POWER p) (SUC m)) x) = x)))
T c= cT c==> c<= cSUC cSUC f0 cSUC f0 c= cPOWER f1 cSUC f0 f2 f2
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((?m. ((PRE (CARD ((orbit_map p) x))) = m)) ==> (?m. ((PRE (CARD ((orbit_map p) x))) = m)))
T c==> c? / c= cPRE cCARD * * part corbit_map f0 f1 b0 c? / c= cPRE cCARD * * part corbit_map f0 f1 b0
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (!m. (((\m. ((PRE (CARD ((orbit_map p) x))) = m)) m) ==> (?m. ((PRE (CARD ((orbit_map p) x))) = m))))
T c==> * / c= cPRE cCARD * * part corbit_map f0 f1 b0 f2 c? / c= cPRE cCARD * * part corbit_map f0 f1 b0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
