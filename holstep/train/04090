N List_hypermap_iso.split_list_hyp_iso
C |- (!V. (!E. (!L. (!f. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((good_list L) ==> (((hyp_iso f) ((hypermap_of_fan (V , E)) , (hypermap_of_list L))) ==> ((good_list_nodes L) ==> ((fully_surrounded (V , E)) ==> (!d. ((d IN (dart_of_fan (V , E))) ==> ((hyp_iso (fan_list_iso (f , (V , E)))) ((hypermap_of_fan ((split_fan_face (V , E)) d)) , (hypermap_of_list ((split_list_hyp L) (f d))))))))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cgood_list f2 c==> chyp_iso f3 c, chypermap_of_fan c, f0 f1 chypermap_of_list f2 c==> cgood_list_nodes f2 c==> cfully_surrounded c, f0 f1 ! c==> cIN b0 * part cdart_of_fan c, f0 f1 chyp_iso * part cfan_list_iso c, f3 c, f0 f1 c, chypermap_of_fan csplit_fan_face c, f0 f1 b0 chypermap_of_list csplit_list_hyp f2 * f3 b0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D SELECT_AX
A |- (!P. (!x. ((P x) ==> (P (@ P)))))
T c==> * f0 f1 * f0 c@ f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D GABS_DEF
A |- (!P. ((GABS P) = (@ P)))
T c= cGABS f0 c@ f0
D GEQ_DEF
A |- (!a. (!b. (((GEQ a) b) = (a = b))))
T c= cGEQ f0 f1 c= f0 f1
D PAIR_EQ
A |- (!x. (!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))))
T c= c= c, f0 f1 c, f2 f3 c/\ c= f0 f2 c= f1 f3
D FST
A |- (!x. (!y. ((FST (x , y)) = x)))
T c= cFST c, f0 f1 f0
D SND
A |- (!x. (!y. ((SND (x , y)) = y)))
T c= cSND c, f0 f1 f1
D PAIR
A |- (!x. (((FST x) , (SND x)) = x))
T c= c, cFST f0 cSND f0 f0
D pair_INDUCT
A |- (!P. ((!x. (!y. (P (x , y)))) ==> (!p. (P p))))
T c==> ! ! * f0 c, b0 b1 ! * f0 b0
D pair_RECURSION
A |- (!PAIR'. (?fn. (!a0. (!a1. ((fn (a0 , a1)) = ((PAIR' a0) a1))))))
T c? / ! ! c= * b0 c, b1 b2 * * f0 b1 b2
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_EQ
A |- (!x. (!y. ((~ (x = y)) = (((int_lt x) y) \/ ((int_lt y) x)))))
T c= c~ c= f0 f1 c\/ cint_lt f0 f1 cint_lt f1 f0
D INT_NOT_LE
A |- (!x. (!y. ((~ ((int_le x) y)) = ((int_lt y) x))))
T c= c~ cint_le f0 f1 cint_lt f1 f0
D INT_NOT_LT
A |- (!x. (!y. ((~ ((int_lt x) y)) = ((int_le y) x))))
T c= c~ cint_lt f0 f1 cint_le f1 f0
D INT_OF_NUM_EQ
A |- (!m. (!n. (((int_of_num m) = (int_of_num n)) = (m = n))))
T c= c= cint_of_num f0 cint_of_num f1 c= f0 f1
D INT_OF_NUM_GE
A |- (!m. (!n. (((int_ge (int_of_num m)) (int_of_num n)) = (m >= n))))
T c= cint_ge cint_of_num f0 cint_of_num f1 c>= f0 f1
D INT_OF_NUM_LE
A |- (!m. (!n. (((int_le (int_of_num m)) (int_of_num n)) = (m <= n))))
T c= cint_le cint_of_num f0 cint_of_num f1 c<= f0 f1
D INT_OF_NUM_LT
A |- (!m. (!n. (((int_lt (int_of_num m)) (int_of_num n)) = (m < n))))
T c= cint_lt cint_of_num f0 cint_of_num f1 c< f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D INT_GE
A |- (!x. (!y. (((int_ge x) y) = ((int_le y) x))))
T c= cint_ge f0 f1 cint_le f1 f0
D Misc_defs_and_lemmas.IN_ELIM_THM'
A |- ((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D INJ
A |- (!t. (!s. (!f. ((((INJ f) s) t) = ((!x. ((x IN s) ==> ((f x) IN t))) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f x) = (f y)))) ==> (x = y)))))))))
T c= cINJ f0 f1 f2 c/\ ! c==> cIN b0 f1 cIN * f0 b0 f2 ! ! c==> c/\ cIN b0 f1 c/\ cIN b1 f1 c= * f0 b0 * f0 b1 c= b0 b1
D SURJ
A |- (!t. (!s. (!f. ((((SURJ f) s) t) = ((!x. ((x IN s) ==> ((f x) IN t))) /\ (!x. ((x IN t) ==> (?y. ((y IN s) /\ ((f y) = x))))))))))
T c= cSURJ f0 f1 f2 c/\ ! c==> cIN b0 f1 cIN * f0 b0 f2 ! c==> cIN b0 f2 c? / c/\ cIN b1 f1 c= * f0 b1 b0
D BIJ
A |- (!f. (!s. (!t. ((((BIJ f) s) t) = ((((INJ f) s) t) /\ (((SURJ f) s) t))))))
T c= cBIJ f0 f1 f2 c/\ cINJ f0 f1 f2 cSURJ f0 f1 f2
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_UNION
A |- (!s. (!t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t))))))
T c= cIN f0 * * part cUNION f1 f2 c\/ cIN f0 f1 cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D IN_SING
A |- (!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y))))
T c= cIN f0 * * part cINSERT f1 part cEMPTY c= f0 f1
D IN_IMAGE
A |- (!y. (!s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s)))))))
T c= cIN f0 * * part cIMAGE f1 f2 c? / c/\ c= f0 * f1 b0 cIN b0 f2
D CHOICE_DEF
A |- (!s. ((~ (s = EMPTY)) ==> ((CHOICE s) IN s)))
T c==> c~ c= f0 part cEMPTY cIN cCHOICE f0 f0
D UNION_COMM
A |- (!s. (!t. ((s UNION t) = (t UNION s))))
T c= * * part cUNION f0 f1 * * part cUNION f1 f0
D IMAGE_CLAUSES
A |- ((((IMAGE f) EMPTY) = EMPTY) /\ (((IMAGE f) (x INSERT s)) = ((f x) INSERT ((IMAGE f) s))))
T c/\ c= * * part cIMAGE f0 part cEMPTY part cEMPTY c= * * part cIMAGE f0 * * part cINSERT f1 f2 * * part cINSERT * f0 f1 * * part cIMAGE f0 f2
D IMAGE_UNION
A |- (!f. (!s. (!t. (((IMAGE f) (s UNION t)) = (((IMAGE f) s) UNION ((IMAGE f) t))))))
T c= * * part cIMAGE f0 * * part cUNION f1 f2 * * part cUNION * * part cIMAGE f0 f1 * * part cIMAGE f0 f2
D FUN_IN_IMAGE
A |- (!f. (!s. (!x. ((x IN s) ==> ((f x) IN ((IMAGE f) s))))))
T c==> cIN f0 f1 cIN * f2 f0 * * part cIMAGE f2 f1
D CARD_IMAGE_INJ
A |- (!f. (!s. (((!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f x) = (f y)))) ==> (x = y)))) /\ (FINITE s)) ==> ((CARD ((IMAGE f) s)) = (CARD s)))))
T c==> c/\ ! ! c==> c/\ cIN b0 f0 c/\ cIN b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 cFINITE f0 c= cCARD * * part cIMAGE f1 f0 cCARD f0
D set_of_list
A |- (((set_of_list NIL) = EMPTY) /\ ((set_of_list ((CONS h) t)) = (h INSERT (set_of_list t))))
T c/\ c= * part cset_of_list cNIL part cEMPTY c= * part cset_of_list cCONS f0 f1 * * part cINSERT f0 * part cset_of_list f1
D FINITE_SET_OF_LIST
A |- (!l. (FINITE (set_of_list l)))
T cFINITE * part cset_of_list f0
D IN_SET_OF_LIST
A |- (!x. (!l. ((x IN (set_of_list l)) = ((MEM x) l))))
T c= cIN f0 * part cset_of_list f1 cMEM f0 f1
D SET_OF_LIST_APPEND
A |- (!l1. (!l2. ((set_of_list ((APPEND l1) l2)) = ((set_of_list l1) UNION (set_of_list l2)))))
T c= * part cset_of_list cAPPEND f0 f1 * * part cUNION * part cset_of_list f0 * part cset_of_list f1
D Hypermap.res
A |- (!f. (!s. (!x. ((((res f) s) x) = (((COND (x IN s)) (f x)) x)))))
T c= cres f0 f1 f2 cCOND cIN f2 f1 * f0 f2 f2
D Collect_geom.PER_SET2
A |- ((a INSERT (b INSERT EMPTY)) = (b INSERT (a INSERT EMPTY)))
T c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
D Misc_defs_and_lemmas.IMAGE_SURJ
A |- (!f. (!a. (((SURJ f) a) ((IMAGE f) a))))
T cSURJ f0 f1 * * part cIMAGE f0 f1
D Hypermap.orbit_map
A |- (!f. (!x. (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5390. (?n. (((SETSPEC GEN%PVAR%5390) (n >= (NUMERAL _0))) (((POWER f) n) x))))))))
T c= * * part corbit_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER f0 b1 f1
D Hypermap.node
A |- (!H. (!x. (((node H) x) = ((orbit_map (node_map H)) x))))
T c= * * part cnode f0 f1 * * part corbit_map * part cnode_map f0 f1
D Hypermap.number_of_nodes
A |- (!H. ((number_of_nodes H) = (CARD (node_set H))))
T c= cnumber_of_nodes f0 cCARD * part cnode_set f0
D Hypermap.lemma_dart_invariant
A |- (!H. (!x. ((x IN (dart H)) ==> ((((edge_map H) x) IN (dart H)) /\ ((((node_map H) x) IN (dart H)) /\ (((face_map H) x) IN (dart H)))))))
T c==> cIN f0 * part cdart f1 c/\ cIN cedge_map f1 f0 * part cdart f1 c/\ cIN cnode_map f1 f0 * part cdart f1 cIN cface_map f1 f0 * part cdart f1
D Hypermap.lemma_dart_inveriant_under_inverse_maps
A |- (!H. (!x. ((x IN (dart H)) ==> ((((inverse (edge_map H)) x) IN (dart H)) /\ ((((inverse (node_map H)) x) IN (dart H)) /\ (((inverse (face_map H)) x) IN (dart H)))))))
T c==> cIN f0 * part cdart f1 c/\ cIN cinverse * part cedge_map f1 f0 * part cdart f1 c/\ cIN cinverse * part cnode_map f1 f0 * part cdart f1 cIN cinverse * part cface_map f1 f0 * part cdart f1
D Fan_defs.f_fan_pair_ext
A |- (!V. (!E. (!x. (((f_fan_pair_ext (V , E)) x) = (((COND (x IN (dart1_of_fan (V , E)))) ((f_fan_pair (V , E)) x)) x)))))
T c= cf_fan_pair_ext c, f0 f1 f2 cCOND cIN f2 * part cdart1_of_fan c, f0 f1 cf_fan_pair c, f0 f1 f2 f2
D Hypermap_and_fan.COMPONENTS_HYPERMAP_OF_FAN
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((dart (hypermap_of_fan (V , E))) = (dart_of_fan (V , E))) /\ (((edge_map (hypermap_of_fan (V , E))) = (e_fan_pair_ext (V , E))) /\ (((node_map (hypermap_of_fan (V , E))) = (n_fan_pair_ext (V , E))) /\ ((face_map (hypermap_of_fan (V , E))) = (f_fan_pair_ext (V , E)))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c/\ c= * part cdart chypermap_of_fan c, f0 f1 * part cdart_of_fan c, f0 f1 c/\ c= * part cedge_map chypermap_of_fan c, f0 f1 * part ce_fan_pair_ext c, f0 f1 c/\ c= * part cnode_map chypermap_of_fan c, f0 f1 * part cn_fan_pair_ext c, f0 f1 c= * part cface_map chypermap_of_fan c, f0 f1 * part cf_fan_pair_ext c, f0 f1
D Hypermap_and_fan.INVERSE_F_FAN_PAIR_EXT_EXPLICIT
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((inverse (f_fan_pair_ext (V , E))) = ((res (GABS (\f. (!v. (!w. ((GEQ (f (v , w))) ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) , v))))))) (dart1_of_fan (V , E)))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c= * part cinverse * part cf_fan_pair_ext c, f0 f1 * * part cres * part cGABS / ! ! cGEQ * b0 c, b1 b2 c, csigma_fan cvec cNUMERAL c_0 f0 f1 b1 b2 b1 * part cdart1_of_fan c, f0 f1
D Hypermap_and_fan.DART_EXISTS
A |- (!V. (!E. (!v. ((v IN V) ==> (?w. ((v , w) IN (dart_of_fan (V , E))))))))
T c==> cIN f0 f1 c? / cIN c, f0 b0 * part cdart_of_fan c, f1 f2
D Hypermap_and_fan.PAIR_IN_DART_OF_FAN
A |- (!V. (!E. (!v. (!w. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((v , w) IN (dart_of_fan (V , E)))) ==> ((v IN V) /\ (w IN V)))))))
T c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart_of_fan c, f0 f1 c/\ cIN f2 f0 cIN f3 f0
D Hypermap_and_fan.PAIR_IN_DART1_OF_FAN
A |- (!V. (!E. (!v. (!w. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((v , w) IN (dart1_of_fan (V , E)))) ==> ((v IN V) /\ ((w IN V) /\ ((w IN (((set_of_edge v) V) E)) /\ (v IN (((set_of_edge w) V) E))))))))))
T c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c/\ cIN f2 f0 c/\ cIN f3 f0 c/\ cIN f3 * * * part cset_of_edge f2 f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1
D Hypermap_and_fan.IN_DART_OF_FAN
A |- (!V. (!E. (!x. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (x IN (dart_of_fan (V , E)))) ==> (?v. (?w. ((x = (v , w)) /\ (((v , w) IN (dart_of_fan (V , E))) /\ ((v IN V) /\ (w IN V))))))))))
T c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN f2 * part cdart_of_fan c, f0 f1 c? / c? / c/\ c= f2 c, b0 b1 c/\ cIN c, b0 b1 * part cdart_of_fan c, f0 f1 c/\ cIN b0 f0 cIN b1 f0
D Hypermap_and_fan.NODE_HYPERMAP_OF_FAN_ALT
A |- (!V. (!E. (!v. (!w. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((v , w) IN (dart1_of_fan (V , E)))) ==> (((node (hypermap_of_fan (V , E))) (v , w)) = (GSPEC (\GEN%PVAR%5635. (?u. (((SETSPEC GEN%PVAR%5635) (u IN (((set_of_edge v) V) E))) (v , u)))))))))))
T c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c= * * part cnode chypermap_of_fan c, f0 f1 c, f2 f3 * part cGSPEC / c? / cSETSPEC b0 cIN b1 * * * part cset_of_edge f2 f0 f1 c, f2 b1
D Hypermap_and_fan.NODE_SET_AS_IMAGE
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (?f. ((!v. (!w. (((f v) = (f w)) ==> (v = w)))) /\ ((!v. (!x. ((x IN (f v)) ==> ((FST x) = v)))) /\ ((!v. ((FST (CHOICE (f v))) = v)) /\ ((node_set (hypermap_of_fan (V , E))) = ((IMAGE f) V)))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c? / c/\ ! ! c==> c= * b0 b1 * b0 b2 c= b1 b2 c/\ ! ! c==> cIN b2 * b0 b1 c= cFST b2 b1 c/\ ! c= cFST cCHOICE * b0 b1 b1 c= * part cnode_set chypermap_of_fan c, f0 f1 * * part cIMAGE b0 f0
D Hypermap_and_fan.FULLY_SURROUNDED_IMP_CARD_FACE_GE_3
A |- (!V. (!E. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (fully_surrounded (V , E))) ==> (!x. ((x IN (dart_of_fan (V , E))) ==> ((CARD ((face (hypermap_of_fan (V , E))) x)) >= (NUMERAL (BIT1 (BIT1 _0)))))))))
T c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cfully_surrounded c, f0 f1 ! c==> cIN b0 * part cdart_of_fan c, f0 f1 c>= cCARD * * part cface chypermap_of_fan c, f0 f1 b0 cNUMERAL cBIT1 cBIT1 c_0
D ssreflect_eq_def
A |- (!v. (!P. (((ssreflect_eq v) P) = P)))
T c= cssreflect_eq f0 f1 f1
D bool_elim
A |- (!P. (((P T) /\ (P F)) ==> (!x. (P x))))
T c==> c/\ * f0 cT * f0 cF ! * f0 b0
D Ssrbool.iffLR
A |- (!P. (!Q. ((P = Q) ==> (P ==> Q))))
T c==> c= f0 f1 c==> f0 f1
D Ssrbool.negbK
A |- (!b. ((~ (~ b)) = b))
T c= c~ c~ f0 f0
D Ssrbool.contraNN
A |- (!c. (!b. ((c ==> b) ==> ((~ b) ==> (~ c)))))
T c==> c==> f0 f1 c==> c~ f1 c~ f0
D Ssrbool.contraL
A |- (!c. (!b. ((c ==> (~ b)) ==> (b ==> (~ c)))))
T c==> c==> f0 c~ f1 c==> f1 c~ f0
D Ssrbool.andTb
A |- (!b. ((T /\ b) = b))
T c= c/\ cT f0 f0
D Ssrbool.andbT
A |- (!b. ((b /\ T) = b))
T c= c/\ f0 cT f0
D Ssrbool.negb_and
A |- (!a. (!b. ((~ (a /\ b)) = ((~ a) \/ (~ b)))))
T c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1
D Ssrbool.negb_or
A |- (!a. (!b. ((~ (a \/ b)) = ((~ a) /\ (~ b)))))
T c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D Ssrbool.implybF
A |- (!b. ((b ==> F) = (~ b)))
T c= c==> f0 cF c~ f0
D Ssrnat.ltnNge
A |- (!m. (!n. ((m < n) = (~ (n <= m)))))
T c= c< f0 f1 c~ c<= f1 f0
D Hypermap_iso.image_ext_eq
A |- (!f. (!g. (!s. ((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((IMAGE f) s) = ((IMAGE g) s))))))
T c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= * * part cIMAGE f1 f0 * * part cIMAGE f2 f0
D Hypermap_iso.finite_surj_eq_bij
A |- (!s. (!t. ((FINITE s) ==> ((FINITE t) ==> (((CARD s) = (CARD t)) ==> (!f. ((((SURJ f) s) t) = (((BIJ f) s) t))))))))
T c==> cFINITE f0 c==> cFINITE f1 c==> c= cCARD f0 cCARD f1 ! c= cSURJ b0 f0 f1 cBIJ b0 f0 f1
D Hypermap_iso.surj_res_inv_right
A |- (!f. (!s. (!t. (!y. (((((SURJ f) s) t) /\ (y IN t)) ==> (((f (((res_inv f) s) y)) = y) /\ ((((res_inv f) s) y) IN s)))))))
T c==> c/\ cSURJ f0 f1 f2 cIN f3 f2 c/\ c= * f0 cres_inv f0 f1 f3 f3 cIN cres_inv f0 f1 f3 f1
D Hypermap_iso.hyp_iso_edge_face
A |- (!G. (!f. (!H. (((hyp_iso f) (H , G)) = ((((BIJ f) (dart H)) (dart G)) /\ (!x. ((x IN (dart H)) ==> ((((edge_map G) (f x)) = (f ((edge_map H) x))) /\ (((face_map G) (f x)) = (f ((face_map H) x)))))))))))
T c= chyp_iso f0 c, f1 f2 c/\ cBIJ f0 * part cdart f1 * part cdart f2 ! c==> cIN b0 * part cdart f1 c/\ c= cedge_map f2 * f0 b0 * f0 cedge_map f1 b0 c= cface_map f2 * f0 b0 * f0 cface_map f1 b0
D Hypermap_iso.hyp_iso_surj
A |- (!G. (!H. (!f. (((hyp_iso f) (H , G)) ==> (!y. ((y IN (dart G)) ==> (?x. ((x IN (dart H)) /\ ((f x) = y)))))))))
T c==> chyp_iso f0 c, f1 f2 ! c==> cIN b0 * part cdart f2 c? / c/\ cIN b1 * part cdart f1 c= * f0 b1 b0
D Hypermap_iso.hyp_iso_dart
A |- (!H. (!f. (!G. (((hyp_iso f) (H , G)) ==> (!x. ((x IN (dart H)) ==> ((f x) IN (dart G))))))))
T c==> chyp_iso f0 c, f1 f2 ! c==> cIN b0 * part cdart f1 cIN * f0 b0 * part cdart f2
D Hypermap_iso.hyp_iso_SURJ
A |- (!f. (!H. (!G. (((hyp_iso f) (H , G)) ==> (((SURJ f) (dart H)) (dart G))))))
T c==> chyp_iso f0 c, f1 f2 cSURJ f0 * part cdart f1 * part cdart f2
D Hypermap_iso.hyp_iso_comm
A |- (!G. (!f. (!H. (((hyp_iso f) (H , G)) ==> (!x. ((x IN (dart H)) ==> ((((edge_map G) (f x)) = (f ((edge_map H) x))) /\ ((((node_map G) (f x)) = (f ((node_map H) x))) /\ (((face_map G) (f x)) = (f ((face_map H) x)))))))))))
T c==> chyp_iso f0 c, f1 f2 ! c==> cIN b0 * part cdart f1 c/\ c= cedge_map f2 * f0 b0 * f0 cedge_map f1 b0 c/\ c= cnode_map f2 * f0 b0 * f0 cnode_map f1 b0 c= cface_map f2 * f0 b0 * f0 cface_map f1 b0
D Hypermap_iso.hyp_iso_inverse_comm
A |- (!G. (!f. (!H. (((hyp_iso f) (H , G)) ==> (!x. ((x IN (dart H)) ==> ((((inverse (edge_map G)) (f x)) = (f ((inverse (edge_map H)) x))) /\ ((((inverse (node_map G)) (f x)) = (f ((inverse (node_map H)) x))) /\ (((inverse (face_map G)) (f x)) = (f ((inverse (face_map H)) x)))))))))))
T c==> chyp_iso f0 c, f1 f2 ! c==> cIN b0 * part cdart f1 c/\ c= cinverse * part cedge_map f2 * f0 b0 * f0 cinverse * part cedge_map f1 b0 c/\ c= cinverse * part cnode_map f2 * f0 b0 * f0 cinverse * part cnode_map f1 b0 c= cinverse * part cface_map f2 * f0 b0 * f0 cinverse * part cface_map f1 b0
D Hypermap_iso.hyp_iso_inv
A |- (!f. (!G. (!H. (((hyp_iso f) (H , G)) ==> ((hyp_iso ((res_inv f) (dart H))) (G , H))))))
T c==> chyp_iso f0 c, f1 f2 chyp_iso * * part cres_inv f0 * part cdart f1 c, f2 f1
D Hypermap_iso.hyp_iso_ext
A |- (!f. (!H. (!G. (((hyp_iso f) (H , G)) ==> (!g. ((!d. ((d IN (dart H)) ==> ((f d) = (g d)))) ==> ((hyp_iso g) (H , G))))))))
T c==> chyp_iso f0 c, f1 f2 ! c==> ! c==> cIN b1 * part cdart f1 c= * f0 b1 * b0 b1 chyp_iso b0 c, f1 f2
D Hypermap_iso.iso_components
A |- (!G. (!f. (!H. (((hyp_iso f) (H , G)) ==> (!d. ((d IN (dart H)) ==> ((((node G) (f d)) = ((IMAGE f) ((node H) d))) /\ ((((face G) (f d)) = ((IMAGE f) ((face H) d))) /\ (((edge G) (f d)) = ((IMAGE f) ((edge H) d)))))))))))
T c==> chyp_iso f0 c, f1 f2 ! c==> cIN b0 * part cdart f1 c/\ c= * * part cnode f2 * f0 b0 * * part cIMAGE f0 * * part cnode f1 b0 c/\ c= * * part cface f2 * f0 b0 * * part cIMAGE f0 * * part cface f1 b0 c= * * part cedge f2 * f0 b0 * * part cIMAGE f0 * * part cedge f1 b0
D Hypermap_iso.hyp_iso_card_components
A |- (!H. (!G. (!f. (((hyp_iso f) (H , G)) ==> (!x. ((x IN (dart H)) ==> (((CARD ((face H) x)) = (CARD ((face G) (f x)))) /\ (((CARD ((node H) x)) = (CARD ((node G) (f x)))) /\ ((CARD ((edge H) x)) = (CARD ((edge G) (f x))))))))))))
T c==> chyp_iso f0 c, f1 f2 ! c==> cIN b0 * part cdart f1 c/\ c= cCARD * * part cface f1 b0 cCARD * * part cface f2 * f0 b0 c/\ c= cCARD * * part cnode f1 b0 cCARD * * part cnode f2 * f0 b0 c= cCARD * * part cedge f1 b0 cCARD * * part cedge f2 * f0 b0
D Hypermap_iso.iso_number_of_nodes
A |- (!f. (!G. (!H. (((hyp_iso f) (H , G)) ==> ((number_of_nodes G) = (number_of_nodes H))))))
T c==> chyp_iso f0 c, f1 f2 c= cnumber_of_nodes f2 cnumber_of_nodes f1
D Hypermap_iso.iso_dart
A |- (!G. (!f. (!H. (((hyp_iso f) (H , G)) ==> ((dart G) = ((IMAGE f) (dart H)))))))
T c==> chyp_iso f0 c, f1 f2 c= * part cdart f2 * * part cIMAGE f0 * part cdart f1
D Hypermap_iso.dart_of_fan_eq
A |- (!V. (!E. ((dart_of_fan (V , E)) = ((dart1_of_fan (V , E)) UNION (GSPEC (\GEN%PVAR%7628. (?v. (((SETSPEC GEN%PVAR%7628) ((v IN V) /\ ((((set_of_edge v) V) E) = EMPTY))) (v , v)))))))))
T c= * part cdart_of_fan c, f0 f1 * * part cUNION * part cdart1_of_fan c, f0 f1 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 f0 c= * * * part cset_of_edge b1 f0 f1 part cEMPTY c, b1 b1
D Seq2.APPEND_cat
A |- (APPEND = cat)
T c= part cAPPEND part ccat
D Seq2.card_set_of_list_uniq
A |- (!l. ((uniq l) ==> ((CARD (set_of_list l)) = (sizel l))))
T c==> cuniq f0 c= cCARD * part cset_of_list f0 csizel f0
D Seq2.perm_eq_set_of_list_eq
A |- (!s1. (!s2. (((perm_eq s1) s2) ==> ((set_of_list s1) = (set_of_list s2)))))
T c==> cperm_eq f0 f1 c= * part cset_of_list f0 * part cset_of_list f1
D Seq2.mem_prev_el
A |- (!x. (!s. (((MEM x) s) ==> ((MEM ((prev_el s) x)) s))))
T c==> cMEM f0 f1 cMEM cprev_el f1 f0 f1
D Add_triangle.split_fan_face
A |- (!V. (!v. (!w. (!E. (((split_fan_face (V , E)) (v , w)) = (V , ((w INSERT ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) INSERT EMPTY)) INSERT E)))))))
T c= csplit_fan_face c, f0 f1 c, f2 f3 c, f0 * * part cINSERT * * part cINSERT f3 * * part cINSERT csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 part cEMPTY f1
D Add_triangle.in_dart1_in_dart
A |- (!V. (!E. (!d. ((d IN (dart1_of_fan (V , E))) ==> (d IN (dart_of_fan (V , E)))))))
T c==> cIN f0 * part cdart1_of_fan c, f1 f2 cIN f0 * part cdart_of_fan c, f1 f2
D Add_triangle.dart_switch
A |- (!V. (!E. (!v. (!w. (((v , w) IN (dart_of_fan (V , E))) = ((w , v) IN (dart_of_fan (V , E))))))))
T c= cIN c, f0 f1 * part cdart_of_fan c, f2 f3 cIN c, f1 f0 * part cdart_of_fan c, f2 f3
D Add_triangle.fully_surrounded_dart_of_fan_eq
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((dart_of_fan (V , E)) = (dart1_of_fan (V , E)))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c= * part cdart_of_fan c, f0 f1 * part cdart1_of_fan c, f0 f1
D Add_triangle.sigma_fan_inV
A |- (!E. (!V. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (!v. (!w. (((v , w) IN (dart1_of_fan (V , E))) ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) IN V)))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 ! ! c==> cIN c, b0 b1 * part cdart1_of_fan c, f0 f1 cIN csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 f0
D Add_triangle.sigma_fan_not_fixed
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (!v. (!w. ((((v , w) IN (dart_of_fan (V , E))) /\ (fully_surrounded (V , E))) ==> (~ ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 ! ! c==> c/\ cIN c, b0 b1 * part cdart_of_fan c, f0 f1 cfully_surrounded c, f0 f1 c~ c= csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 b1
D Add_triangle.pair_expand
A |- (!p. (p = ((FST p) , (SND p))))
T c= f0 c, cFST f0 cSND f0
D Add_triangle.split_fan_face_eq
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (!d. (((d IN (dart_of_fan (V , E))) /\ ((CARD ((face (hypermap_of_fan (V , E))) d)) = (NUMERAL (BIT1 (BIT1 _0))))) ==> (((split_fan_face (V , E)) d) = (V , E)))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 ! c==> c/\ cIN b0 * part cdart_of_fan c, f0 f1 c= cCARD * * part cface chypermap_of_fan c, f0 f1 b0 cNUMERAL cBIT1 cBIT1 c_0 c= csplit_fan_face c, f0 f1 b0 c, f0 f1
D Add_triangle.sigma_in_dart1
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (!v. (!w. (((v , w) IN (dart1_of_fan (V , E))) ==> ((v , (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)) IN (dart1_of_fan (V , E)))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 ! ! c==> cIN c, b0 b1 * part cdart1_of_fan c, f0 f1 cIN c, b0 csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 * part cdart1_of_fan c, f0 f1
D Add_triangle.fully_surrounded_diag_not_in_dart
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> (!v. (!w. ((((v , w) IN (dart_of_fan (V , E))) /\ ((NUMERAL (BIT1 (BIT1 _0))) < (CARD ((face (hypermap_of_fan (V , E))) (v , w))))) ==> (~ ((w , (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)) IN (dart_of_fan (V , E)))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 ! ! c==> c/\ cIN c, b0 b1 * part cdart_of_fan c, f0 f1 c< cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_fan c, f0 f1 c, b0 b1 c~ cIN c, b1 csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 * part cdart_of_fan c, f0 f1
D Add_triangle.fan_split_fan_face
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> (!v. (!w. (((v , w) IN (dart_of_fan (V , E))) ==> ((FAN ((vec (NUMERAL _0)) , ((split_fan_face (V , E)) (v , w)))) /\ (((dart_of_fan ((split_fan_face (V , E)) (v , w))) = ((dart1_of_fan (V , E)) UNION (((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) , w) INSERT ((w , (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)) INSERT EMPTY)))) /\ (fully_surrounded ((split_fan_face (V , E)) (v , w))))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 ! ! c==> cIN c, b0 b1 * part cdart_of_fan c, f0 f1 c/\ cFAN c, cvec cNUMERAL c_0 csplit_fan_face c, f0 f1 c, b0 b1 c/\ c= * part cdart_of_fan csplit_fan_face c, f0 f1 c, b0 b1 * * part cUNION * part cdart1_of_fan c, f0 f1 * * part cINSERT c, csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 b1 * * part cINSERT c, b1 csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 part cEMPTY cfully_surrounded csplit_fan_face c, f0 f1 c, b0 b1
D Add_triangle.f_split_fan_face
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> (!v. (!w. ((((v , w) IN (dart_of_fan (V , E))) /\ ((NUMERAL (BIT1 (BIT1 _0))) < (CARD ((face (hypermap_of_fan (V , E))) (v , w))))) ==> ((((LET (\w1. (\d2. (\f. (LET_END (((f (v , w)) = (w , w1)) /\ (((f (w , w1)) = (w1 , v)) /\ (((f (w1 , w)) = d2) /\ (((f ((((((sigma_fan (vec (NUMERAL _0))) V) E) w1) v) , w1)) = (w1 , w)) /\ (!d. (((d IN (dart_of_fan ((split_fan_face (V , E)) (v , w)))) /\ (~ ((d = (v , w)) \/ ((d = (w , w1)) \/ ((d = (w1 , w)) \/ (d = ((((((sigma_fan (vec (NUMERAL _0))) V) E) w1) v) , w1))))))) ==> ((f d) = ((f_fan_pair (V , E)) d))))))))))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)) ((f_fan_pair (V , E)) (v , w))) (f_fan_pair ((split_fan_face (V , E)) (v , w)))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 ! ! c==> c/\ cIN c, b0 b1 * part cdart_of_fan c, f0 f1 c< cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_fan c, f0 f1 c, b0 b1 cLET / / / cLET_END c/\ c= * b4 c, b0 b1 c, b1 b2 c/\ c= * b4 c, b1 b2 c, b2 b0 c/\ c= * b4 c, b2 b1 b3 c/\ c= * b4 c, csigma_fan cvec cNUMERAL c_0 f0 f1 b2 b0 b2 c, b2 b1 ! c==> c/\ cIN b5 * part cdart_of_fan csplit_fan_face c, f0 f1 c, b0 b1 c~ c\/ c= b5 c, b0 b1 c\/ c= b5 c, b1 b2 c\/ c= b5 c, b2 b1 c= b5 c, csigma_fan cvec cNUMERAL c_0 f0 f1 b2 b0 b2 c= * b4 b5 cf_fan_pair c, f0 f1 b5 csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 cf_fan_pair c, f0 f1 c, b0 b1 * part cf_fan_pair csplit_fan_face c, f0 f1 c, b0 b1
D List_hypermap.darts_of_list
A |- (!L. ((darts_of_list L) = (set_of_list (list_of_darts L))))
T c= * part cdarts_of_list f0 * part cset_of_list clist_of_darts f0
D List_hypermap.elements_of_list
A |- (!L. ((elements_of_list L) = (set_of_list (list_of_elements L))))
T c= * part celements_of_list f0 * part cset_of_list clist_of_elements f0
D List_hypermap.e_list
A |- (!d. ((e_list d) = ((SND d) , (FST d))))
T c= ce_list f0 c, cSND f0 cFST f0
D List_hypermap.f_list_ext
A |- (!L. ((f_list_ext L) = ((res (f_list L)) (darts_of_list L))))
T c= * part cf_list_ext f0 * * part cres * part cf_list f0 * part cdarts_of_list f0
D List_hypermap.e_list_ext
A |- (!L. ((e_list_ext L) = ((res e_list) (darts_of_list L))))
T c= * part ce_list_ext f0 * * part cres part ce_list * part cdarts_of_list f0
D List_hypermap.good_list
A |- (!L. ((good_list L) = ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))))))
T c= cgood_list f0 c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0
D List_hypermap.find_face_alt
A |- (!L. (!d. (((find_face L) d) = (list_pairs ((find_pair_list L) d)))))
T c= cfind_face f0 f1 clist_pairs cfind_pair_list f0 f1
D List_hypermap.mem_find_face
A |- (!d. (!L. (((MEM d) (list_of_darts L)) ==> ((MEM ((find_face L) d)) (list_of_faces L)))))
T c==> cMEM f0 clist_of_darts f1 cMEM cfind_face f1 f0 clist_of_faces f1
D List_hypermap.dart_in_face
A |- (!d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d)))))
T c= cMEM f0 clist_of_darts f1 cMEM f0 cfind_face f1 f0
D List_hypermap.size_list_pairs
A |- (!l. ((sizel (list_pairs l)) = (sizel l)))
T c= csizel clist_pairs f0 csizel f0
D List_hypermap.mem_find_face_imp_mem_darts
A |- (!d. (!y. (!L. (((MEM d) ((find_face L) y)) ==> ((MEM d) (list_of_darts L))))))
T c==> cMEM f0 cfind_face f1 f2 cMEM f0 clist_of_darts f1
D List_hypermap.f_list_ext_inverse
A |- (!L. ((uniq (list_of_darts L)) ==> ((inverse (f_list_ext L)) = ((res (\d. ((prev_el ((find_face L) d)) d))) (darts_of_list L)))))
T c==> cuniq clist_of_darts f0 c= * part cinverse * part cf_list_ext f0 * * part cres / cprev_el cfind_face f0 b0 b0 * part cdarts_of_list f0
D List_hypermap.components_hypermap_of_list
A |- (!L. ((good_list L) ==> (((dart (hypermap_of_list L)) = (darts_of_list L)) /\ (((edge_map (hypermap_of_list L)) = (e_list_ext L)) /\ (((node_map (hypermap_of_list L)) = (n_list_ext L)) /\ ((face_map (hypermap_of_list L)) = (f_list_ext L)))))))
T c==> cgood_list f0 c/\ c= * part cdart chypermap_of_list f0 * part cdarts_of_list f0 c/\ c= * part cedge_map chypermap_of_list f0 * part ce_list_ext f0 c/\ c= * part cnode_map chypermap_of_list f0 * part cn_list_ext f0 c= * part cface_map chypermap_of_list f0 * part cf_list_ext f0
D List_hypermap.fst_n_list_ext_power
A |- (!x. (!y. (!L. (!n. (((good_list L) /\ ((x , y) IN (darts_of_list L))) ==> ((FST (((POWER (n_list_ext L)) n) (x , y))) = x))))))
T c==> c/\ cgood_list f0 cIN c, f1 f2 * part cdarts_of_list f0 c= cFST cPOWER * part cn_list_ext f0 f3 c, f1 f2 f1
D List_hypermap.mem_list_of_elements
A |- (!x. (!L. (((MEM x) (list_of_elements L)) = (?y. ((MEM (x , y)) (list_of_darts L))))))
T c= cMEM f0 clist_of_elements f1 c? / cMEM c, f0 b0 clist_of_darts f1
D List_hypermap.uniq_list_of_elements
A |- (!L. (uniq (list_of_elements L)))
T cuniq clist_of_elements f0
D List_hypermap.good_list_nodes_condition
A |- (!L. ((good_list L) ==> ((good_list_nodes L) = ((CARD (node_set (hypermap_of_list L))) = (sizel (list_of_elements L))))))
T c==> cgood_list f0 c= cgood_list_nodes f0 c= cCARD * part cnode_set chypermap_of_list f0 csizel clist_of_elements f0
D List_hypermap.card_face_of_list
A |- (!L. (!d. (((good_list L) /\ ((MEM d) (list_of_darts L))) ==> ((CARD ((face (hypermap_of_list L)) d)) = (sizel ((find_face L) d))))))
T c==> c/\ cgood_list f0 cMEM f1 clist_of_darts f0 c= cCARD * * part cface chypermap_of_list f0 f1 csizel cfind_face f0 f1
D List_hypermap.find_face_eq
A |- (!L. (!d. (!f. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((((find_face L) d) = f) = (((MEM f) (list_of_faces L)) /\ ((MEM d) f)))))))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= c= cfind_face f0 f1 f2 c/\ cMEM f2 clist_of_faces f0 cMEM f1 f2
D List_hypermap_iso.list_hyp_diag
A |- (!L. (!d. (((list_hyp_diag L) d) = ((SND d) , (FST ((prev_el ((find_face L) d)) d))))))
T c= clist_hyp_diag f0 f1 c, cSND f1 cFST cprev_el cfind_face f0 f1 f1
D List_hypermap_iso.fan_list_nodes_iso
A |- (!f. (!x. (!V. (!E. (((fan_list_nodes_iso (f , (V , E))) x) = (FST (f (x , (((COND ((((set_of_edge x) V) E) = EMPTY)) x) (CHOICE (((set_of_edge x) V) E)))))))))))
T c= cfan_list_nodes_iso c, f0 c, f1 f2 f3 cFST * f0 c, f3 cCOND c= * * * part cset_of_edge f3 f1 f2 part cEMPTY f3 cCHOICE * * * part cset_of_edge f3 f1 f2
D List_hypermap_iso.fan_list_iso
A |- (!v. (!f. (!V. (!E. (!w. (((fan_list_iso (f , (V , E))) (v , w)) = (((fan_list_nodes_iso (f , (V , E))) v) , ((fan_list_nodes_iso (f , (V , E))) w))))))))
T c= cfan_list_iso c, f0 c, f1 f2 c, f3 f4 c, cfan_list_nodes_iso c, f0 c, f1 f2 f3 cfan_list_nodes_iso c, f0 c, f1 f2 f4
D List_hypermap_iso.fan_imp_finite_set
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (FINITE V))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 cFINITE f0
D List_hypermap_iso.e_fan_pair_ext_explicit
A |- (!V. (!E. (!v. (!w. (((v , w) IN (dart_of_fan (V , E))) ==> (((e_fan_pair_ext (V , E)) (v , w)) = (w , v)))))))
T c==> cIN c, f0 f1 * part cdart_of_fan c, f2 f3 c= ce_fan_pair_ext c, f2 f3 c, f0 f1 c, f1 f0
D List_hypermap_iso.d_not_in_dart_split_eq
A |- (!L. (!d. ((~ ((MEM d) (list_of_darts L))) ==> (((split_list_hyp L) d) = L))))
T c==> c~ cMEM f0 clist_of_darts f1 c= csplit_list_hyp f1 f0 f1
D List_hypermap_iso.darts_of_list_split
A |- (!L. (!d. (((NUMERAL (BIT1 (BIT1 _0))) < (sizel ((find_pair_list L) d))) ==> ((perm_eq (list_of_darts ((split_list_hyp L) d))) ((cat ((CONS ((list_hyp_diag L) d)) ((CONS (e_list ((list_hyp_diag L) d))) NIL))) (list_of_darts L))))))
T c==> c< cNUMERAL cBIT1 cBIT1 c_0 csizel cfind_pair_list f0 f1 cperm_eq clist_of_darts csplit_list_hyp f0 f1 ccat cCONS clist_hyp_diag f0 f1 cCONS ce_list clist_hyp_diag f0 f1 cNIL clist_of_darts f0
D List_hypermap_iso.good_list_split
A |- (!L. (!d. (((good_list L) /\ (((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ ((~ ((MEM ((list_hyp_diag L) d)) (list_of_darts L))) /\ (~ ((FST ((list_hyp_diag L) d)) = (SND ((list_hyp_diag L) d))))))) ==> (good_list ((split_list_hyp L) d)))))
T c==> c/\ cgood_list f0 c\/ c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ cMEM clist_hyp_diag f0 f1 clist_of_darts f0 c~ c= cFST clist_hyp_diag f0 f1 cSND clist_hyp_diag f0 f1 cgood_list csplit_list_hyp f0 f1
D List_hypermap_iso.hypermap_of_split_list_eq3
A |- (!L. (!d. ((((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (uniq (list_of_darts L))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))))
T c==> c/\ c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cuniq clist_of_darts f0 c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0
D List_hypermap_iso.f_split_list
A |- (!L. (!d. ((((LET (\L2. (\g. (\f. (LET_END (((good_list L) /\ (((NUMERAL (BIT1 (BIT1 _0))) < (sizel f)) /\ ((~ ((MEM g) (list_of_darts L))) /\ (~ ((FST g) = (SND g)))))) ==> ((((f_list L2) d) = g) /\ ((((f_list L2) g) = ((prev_el f) d)) /\ ((((f_list L2) (e_list g)) = ((f_list L) d)) /\ ((((f_list L2) ((prev_el f) ((prev_el f) d))) = (e_list g)) /\ (!x. ((((MEM x) (list_of_darts L2)) /\ (~ ((x = d) \/ ((x = g) \/ ((x = (e_list g)) \/ (x = ((prev_el f) ((prev_el f) d)))))))) ==> (((f_list L2) x) = ((f_list L) x)))))))))))))) ((split_list_hyp L) d)) ((list_hyp_diag L) d)) ((find_face L) d))))
T cLET / / / cLET_END c==> c/\ cgood_list f0 c/\ c< cNUMERAL cBIT1 cBIT1 c_0 csizel b2 c/\ c~ cMEM b1 clist_of_darts f0 c~ c= cFST b1 cSND b1 c/\ c= cf_list b0 f1 b1 c/\ c= cf_list b0 b1 cprev_el b2 f1 c/\ c= cf_list b0 ce_list b1 cf_list f0 f1 c/\ c= cf_list b0 cprev_el b2 cprev_el b2 f1 ce_list b1 ! c==> c/\ cMEM b3 clist_of_darts b0 c~ c\/ c= b3 f1 c\/ c= b3 b1 c\/ c= b3 ce_list b1 c= b3 cprev_el b2 cprev_el b2 f1 c= cf_list b0 b3 cf_list f0 b3 csplit_list_hyp f0 f1 clist_hyp_diag f0 f1 cfind_face f0 f1
