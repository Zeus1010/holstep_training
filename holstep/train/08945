N Xwitccn.HDPLYGY_CASE_3
C |- (((((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((k = (dimindex UNIV)) /\ (((NUMERAL (BIT0 (BIT1 _0))) < k) /\ ((~ ((GSPEC (\GEN%PVAR%7724. (?v. (((SETSPEC GEN%PVAR%7724) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))) = EMPTY)) /\ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))))))) ==> (?x. ((x IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ (!y. ((y IN (GSPEC (\GEN%PVAR%7727. (?v. (((SETSPEC GEN%PVAR%7727) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((real_le (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats y))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats y))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats y)))))))))
T c==> c/\ ctri_stable f0 f1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2 f3 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f0 c/\ c= f0 cdimindex part cUNIV c/\ c< cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c~ c= * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1 part cEMPTY ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c? / c/\ cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 ! c==> cIN b1 * part cGSPEC / c? / cSETSPEC b2 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cdimindex part cUNIV cIN crow b4 b3 part cball_annulus cCONDITION1_SY f2 f3 b3 cmatvec b3 creal_le ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LE_REFL
A |- (!n. (n <= n))
T c<= f0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LE_ADD
A |- (!m. (!n. (m <= (m + n))))
T c<= f0 c+ f0 f1
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D LIFT_ADD
A |- (!x. (!y. ((lift ((real_add x) y)) = ((vector_add (lift x)) (lift y)))))
T c= clift creal_add f0 f1 cvector_add clift f0 clift f1
D LIFT_SUB
A |- (!x. (!y. ((lift ((real_sub x) y)) = ((vector_sub (lift x)) (lift y)))))
T c= clift creal_sub f0 f1 cvector_sub clift f0 clift f1
D LIFT_CMUL
A |- (!x. (!c. ((lift ((real_mul c) x)) = ((% c) (lift x)))))
T c= clift creal_mul f0 f1 c% f0 clift f1
D CONTINUOUS_ON_SEQUENTIALLY
A |- (!f. (!s. (((continuous_on f) s) = (!x. (!a. (((a IN s) /\ ((!n. ((x n) IN s)) /\ (((--> x) a) sequentially))) ==> (((--> (f o x)) (f a)) sequentially)))))))
T c= ccontinuous_on f0 f1 ! ! c==> c/\ cIN b1 f1 c/\ ! cIN * b0 b2 f1 c--> b0 b1 csequentially c--> * * part co f0 b0 * f0 b1 csequentially
D CONTINUOUS_ON_CONST
A |- (!s. (!c. ((continuous_on (\x. c)) s)))
T ccontinuous_on / f0 f1
D CONTINUOUS_ON_CMUL
A |- (!f. (!c. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s)))))
T c==> ccontinuous_on f0 f1 ccontinuous_on / c% f2 * f0 b0 f1
D CONTINUOUS_ON_ADD
A |- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s)))))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 ccontinuous_on / cvector_add * f0 b0 * f2 b0 f1
D CONTINUOUS_ON_SUB
A |- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 ccontinuous_on / cvector_sub * f0 b0 * f2 b0 f1
D CONTINUOUS_ON_LIFT_NORM_COMPOSE
A |- (!f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s))))
T c==> ccontinuous_on f0 f1 ccontinuous_on / clift cvector_norm * f0 b0 f1
D CONTINUOUS_ATTAINS_INF
A |- (!f. (!s. (((compact s) /\ ((~ (s = EMPTY)) /\ ((continuous_on (lift o f)) s))) ==> (?x. ((x IN s) /\ (!y. ((y IN s) ==> ((real_le (f x)) (f y)))))))))
T c==> c/\ ccompact f0 c/\ c~ c= f0 part cEMPTY ccontinuous_on * * part co part clift f1 f0 c? / c/\ cIN b0 f0 ! c==> cIN b1 f0 creal_le * f1 b0 * f1 b1
D CONTINUOUS_ON_MUL
A |- (!s. (!c. (!f. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s)))))
T c==> c/\ ccontinuous_on * * part co part clift f0 f1 ccontinuous_on f2 f1 ccontinuous_on / c% * f0 b0 * f2 b0 f1
D Sphere.interp
A |- (!x. (!y2. (!y1. (!x2. (!x1. ((((((interp x1) y1) x2) y2) x) = ((real_add y1) ((real_mul ((real_sub x) x1)) ((real_div ((real_sub y2) y1)) ((real_sub x2) x1))))))))))
T c= cinterp f0 f1 f2 f3 f4 creal_add f1 creal_mul creal_sub f4 f0 creal_div creal_sub f3 f1 creal_sub f2 f0
D Sphere.ly
A |- (!y. ((ly y) = (((((interp (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0))) y)))
T c= cly f0 cinterp creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 f0
D Sphere.rho
A |- (!y. ((rho y) = ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_sub const1) ((real_mul const1) (ly y))))))
T c= crho f0 creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_sub cconst1 creal_mul cconst1 cly f0
D Dih2k_hypermap.MATVEC_VECMATS_ID
A |- ((matvec (vecmats A)) = A)
T c= cmatvec cvecmats f0 f0
D Dih2k_hypermap.LIM_VECMAT
A |- ((((--> (\n. (matvec (x n)))) (matvec l)) sequentially) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((--> (\n. ((row i) (x n)))) ((row i) l)) sequentially))))
T c==> c--> / cmatvec * f0 b0 cmatvec f1 csequentially ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c--> / crow b0 * f0 b1 crow b0 f1 csequentially
D Hdplygy.CONTINUOUS_ON_ROW
A |- (!i. (!s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV ccontinuous_on / crow f0 cvecmats b0 f1
D Hdplygy.SEQUENTIALLY_DIVH
A |- (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (lift o (\n. ((((dihV (vec (NUMERAL _0))) (f n)) (g n)) (h n))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))
T c==> c/\ c--> / * f0 b0 f1 csequentially c/\ c--> / * f2 b0 f3 csequentially c/\ c--> / * f4 b0 f5 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b0 * * part cINSERT * f2 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b0 * * part cINSERT * f4 b0 part cEMPTY c--> * * part co part clift / cdihV cvec cNUMERAL c_0 * f0 b0 * f2 b0 * f4 b0 clift cdihV cvec cNUMERAL c_0 f1 f3 f5 csequentially
D Pcrttid.COMPACT_TRI_STABLE
A |- (((((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((k = (dimindex UNIV)) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))) ==> (compact (GSPEC (\GEN%PVAR%7612. (?v. (((SETSPEC GEN%PVAR%7612) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c/\ ctri_stable f0 f1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2 f3 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f0 c/\ c= f0 cdimindex part cUNIV c< cNUMERAL cBIT0 cBIT1 c_0 f0 ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1
D Appendix.tau3
A |- (!v3. (!v1. (!v2. ((((tau3 v1) v2) v3) = ((real_add ((real_mul (rho (vector_norm v1))) ((((dihV (vec (NUMERAL _0))) v1) v2) v3))) ((real_add ((real_mul (rho (vector_norm v2))) ((((dihV (vec (NUMERAL _0))) v2) v3) v1))) ((real_sub ((real_mul (rho (vector_norm v3))) ((((dihV (vec (NUMERAL _0))) v3) v1) v2))) ((real_add pi) sol0))))))))
T c= ctau3 f0 f1 f2 creal_add creal_mul crho cvector_norm f0 cdihV cvec cNUMERAL c_0 f0 f1 f2 creal_add creal_mul crho cvector_norm f1 cdihV cvec cNUMERAL c_0 f1 f2 f0 creal_sub creal_mul crho cvector_norm f2 cdihV cvec cNUMERAL c_0 f2 f0 f1 creal_add cpi csol0
D Xwitccn.TRI_STABLE_K_EQ_3
A |- ((((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) ==> ((k = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k)))
T c==> ctri_stable f0 f1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2 f3 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f0 c/\ c= f0 cNUMERAL cBIT1 cBIT1 c_0 c< cNUMERAL cBIT0 cBIT1 c_0 f0
+ |- (((continuous_on (\x. ((% (rho (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 _0))) (vecmats x))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) = ((continuous_on (\x. (lift ((real_mul (rho (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))))) ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 _0))) (vecmats x))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c= ccontinuous_on / c% crho cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift creal_mul crho cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))) |- ((((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ ((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially)) ==> ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))))) = ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) = p') ==> ((p' ==> ((((row i) v) IN ball_annulus) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus)) = (p' ==> q'))))
T c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c==> f1 c= cIN crow f0 f2 part cball_annulus f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 cIN crow f0 f2 part cball_annulus c==> f1 f3
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((((continuous_on (\x. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((continuous_on (\x. (lift (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) = ((continuous_on (\x. (lift (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c= c==> ccontinuous_on / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (!a. (((a IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) /\ (((--> x) a) sequentially))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x)))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats a))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a))))) sequentially)))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 ! c==> c/\ cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ ! cIN * f2 b1 * part cGSPEC / c? / cSETSPEC b2 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b4 b3 part cball_annulus cCONDITION1_SY f0 f1 b3 cmatvec b3 c--> f2 b0 csequentially c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats * f2 b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f2 b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f2 b1 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 csequentially
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) /\ (((--> x) a') sequentially))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x)))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))))) sequentially))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ cIN f2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c/\ ! cIN * f3 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c--> f3 f2 csequentially c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 crow cNUMERAL cBIT1 c_0 cvecmats f2 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 csequentially
- (x = C), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- (~ (C = A))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c~ c= f1 f2
- |- ((!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B))))) = T)
T c= ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cT
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) |- ((\f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) f)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 * / ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 f0
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))) |- ((((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ ((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially)) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))))) = ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially), (((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially), (((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially), (((--> x) a') sequentially) |- ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c==> c--> f0 f3 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially ! c==> c/\ c--> / * f0 b1 f1 csequentially c/\ c--> / * f2 b1 f3 csequentially c/\ c--> / * b0 b1 f4 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b1 * * part cINSERT * f2 b1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b1 * * part cINSERT * b0 b1 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b1 * f2 b1 * b0 b1 clift cdihV cvec cNUMERAL c_0 f1 f3 f4 csequentially
- (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) |- ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) /\ ((((--> x) a') sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c/\ ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> c--> f0 f3 csequentially c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ |- ((\y. ((ly y) = (((((interp (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0))) y))) y)
T * / c= cly b0 cinterp creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 f0
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))) |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))) (NUMERAL (BIT0 (BIT1 _0))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially cNUMERAL cBIT0 cBIT1 c_0
- (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((((--> x) a') sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c==> ! cIN * f3 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c==> c--> f3 f2 csequentially c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 c_0 cvecmats f2 csequentially c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 part cEMPTY
+ (((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) |- (((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))) = ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))))
T c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c= c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((continuous_on (\x. ((vector_add (lift (real_of_num (NUMERAL (BIT1 _0))))) ((% ((real_div ((real_sub (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (lift ((real_sub (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 ccontinuous_on / cvector_add clift creal_of_num cNUMERAL cBIT1 c_0 c% creal_div creal_sub creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 clift creal_sub cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
- |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> ((((row i) v) IN ball_annulus) = (((row i) v) IN ball_annulus))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus)) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus)))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus)) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))))
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 c= cIN crow f0 f1 part cball_annulus cIN crow f0 f1 part cball_annulus c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 cIN crow f0 f1 part cball_annulus c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 cIN crow f0 f1 part cball_annulus c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 cIN crow f0 f1 part cball_annulus c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 cIN crow f0 f1 part cball_annulus
- |- ((((~ (~ F)) = F) ==> (F ==> (~ (~ F)))) = (F ==> (~ (~ F))))
T c= c==> c= c~ c~ cF cF c==> cF c~ c~ cF c==> cF c~ c~ cF
+ |- ((\f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s)))) f)
T * / ! c==> ccontinuous_on b0 b1 ccontinuous_on / clift cvector_norm * b0 b2 b1 f0
+ (((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) |- (((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))) = ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))
T c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c= c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((((a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) /\ (((--> x) a') sequentially))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x)))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))))) sequentially)) = T)
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c= c==> c/\ cIN f2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c/\ ! cIN * f3 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c--> f3 f2 csequentially c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 crow cNUMERAL cBIT1 c_0 cvecmats f2 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 csequentially cT
+ (((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) |- (((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))) = ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))))
T c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c= c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((continuous_on (lift o (\x. (rho (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 ccontinuous_on * * part co part clift / crho cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) |- ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))) |- (((((x n) IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))) = ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c= c==> c==> cIN * f2 f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f2 f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f2 f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f2 f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f2 f3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f2 f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f2 f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f2 f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f2 f3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f2 f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f2 f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f2 f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f2 f3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f2 f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f2 f3 part cEMPTY
- (x = C) |- ((~ (x = B)) = (~ (C = B)))
T c==> c= f0 f1 c= c~ c= f0 f2 c~ c= f1 f2
+ |- (T = (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ ((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT1 (BIT1 _0))))))
T c= cT c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((continuous_on (\x. ((vector_sub (lift const1)) ((% const1) (lift (ly (vector_norm ((row (NUMERAL (BIT1 _0))) (vecmats x))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 ccontinuous_on / cvector_sub clift cconst1 c% cconst1 clift cly cvector_norm crow cNUMERAL cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially), (((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially), (((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially), (((--> x) a') sequentially) |- ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c==> c--> f0 f3 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
- ((GSPEC (\GEN%PVAR%7724. (?v. (((SETSPEC GEN%PVAR%7724) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))) = EMPTY) |- (EMPTY = (GSPEC (\GEN%PVAR%7724. (?v. (((SETSPEC GEN%PVAR%7724) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))
T c==> c= * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 part cEMPTY c= part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) |- ((collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c= ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY cF
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) = ((continuous_on (\x. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c<= cNUMERAL cBIT1 cBIT1 c_0 cdimindex part cUNIV ccontinuous_on / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ |- (((!x. (!l. ((((--> (\n. (matvec (x n)))) (matvec l)) sequentially) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((--> (\n. ((row i) (x n)))) ((row i) l)) sequentially)))))) ==> ((\x. (!l. ((((--> (\n. (matvec (x n)))) (matvec l)) sequentially) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((--> (\n. ((row i) (x n)))) ((row i) l)) sequentially)))))) (\n. (vecmats (x n))))) = ((\x. (!l. ((((--> (\n. (matvec (x n)))) (matvec l)) sequentially) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((--> (\n. ((row i) (x n)))) ((row i) l)) sequentially)))))) (\n. (vecmats (x n)))))
T c= c==> ! ! c==> c--> / cmatvec * b0 b2 cmatvec b1 csequentially ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV c--> / crow b2 * b0 b3 crow b2 b1 csequentially * / ! c==> c--> / cmatvec * b0 b2 cmatvec b1 csequentially ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV c--> / crow b2 * b0 b3 crow b2 b1 csequentially / cvecmats * f0 b0 * / ! c==> c--> / cmatvec * b0 b2 cmatvec b1 csequentially ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV c--> / crow b2 * b0 b3 crow b2 b1 csequentially / cvecmats * f0 b0
+ (~ ((GSPEC (\GEN%PVAR%7724. (?v. (((SETSPEC GEN%PVAR%7724) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))) = EMPTY)), (k = (dimindex UNIV)), ((~ ((GSPEC (\GEN%PVAR%7724. (?v. (((SETSPEC GEN%PVAR%7724) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))) = EMPTY)) /\ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY)))))))))), ((NUMERAL (BIT0 (BIT1 _0))) < k), (((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) |- (?x. ((x IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ (!y. ((y IN (GSPEC (\GEN%PVAR%7727. (?v. (((SETSPEC GEN%PVAR%7727) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((real_le (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats y))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats y))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats y))))))))
T c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 part cEMPTY c==> c= f2 cdimindex part cUNIV c==> c/\ c~ c= * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 part cEMPTY ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c< cNUMERAL cBIT0 cBIT1 c_0 f2 c==> ctri_stable f2 f3 * * part c.. cNUMERAL c_0 c- f2 cNUMERAL cBIT1 c_0 f0 f1 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f2 c? / c/\ cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 ! c==> cIN b1 * part cGSPEC / c? / cSETSPEC b2 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cdimindex part cUNIV cIN crow b4 b3 part cball_annulus cCONDITION1_SY f0 f1 b3 cmatvec b3 creal_le ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b1
- |- (((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) = (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B))))))
T c= c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1
- ((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) |- ((!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially))
T c==> c/\ c--> / * f0 b0 f1 csequentially c/\ c--> / * f2 b0 f3 csequentially c/\ c--> / * f4 b0 f5 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b0 * * part cINSERT * f2 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b0 * * part cINSERT * f4 b0 part cEMPTY c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially c--> / clift cdihV cvec cNUMERAL c_0 * f0 b0 * f2 b0 * f4 b0 clift cdihV cvec cNUMERAL c_0 f1 f3 f5 csequentially
- (~ ((GSPEC (\GEN%PVAR%7724. (?v. (((SETSPEC GEN%PVAR%7724) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))) = EMPTY)) |- (((~ (EMPTY = (GSPEC (\GEN%PVAR%7724. (?v. (((SETSPEC GEN%PVAR%7724) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((EMPTY = (GSPEC (\GEN%PVAR%7724. (?v. (((SETSPEC GEN%PVAR%7724) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) = F)) = ((EMPTY = (GSPEC (\GEN%PVAR%7724. (?v. (((SETSPEC GEN%PVAR%7724) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) = F))
T c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 part cEMPTY c= c==> c~ c= part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c= c= part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 cF c= c= part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 cF
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ |- (((continuous_on (\x. (lift (ly (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((continuous_on (\x. ((% const1) (lift (ly (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> ccontinuous_on / clift cly cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / c% cconst1 clift cly cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
- |- ((~ (C = C)) ==> (C = C))
T c==> c~ c= f0 f0 c= f0 f0
+ (!s. (!c. (!f. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s))))) |- (!c. (!f. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s))))
T c==> ! ! ! c==> c/\ ccontinuous_on * * part co part clift b1 b0 ccontinuous_on b2 b0 ccontinuous_on / c% * b1 b3 * b2 b3 b0 ! ! c==> c/\ ccontinuous_on * * part co part clift b0 f0 ccontinuous_on b1 f0 ccontinuous_on / c% * b0 b2 * b1 b2 f0
- (!f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s)))), ((continuous_on f) s) |- ((!f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s)))) /\ ((continuous_on (\x. (lift (vector_norm (f x))))) s))
T c==> ! ! c==> ccontinuous_on b0 b1 ccontinuous_on / clift cvector_norm * b0 b2 b1 c==> ccontinuous_on f0 f1 c/\ ! ! c==> ccontinuous_on b0 b1 ccontinuous_on / clift cvector_norm * b0 b2 b1 ccontinuous_on / clift cvector_norm * f0 b0 f1
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))), (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially), (((--> x) a') sequentially) |- ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f1 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1 c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c==> c--> f0 f1 csequentially c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((continuous_on (\x. ((vector_sub (lift (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))))) (lift (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 ccontinuous_on / cvector_sub clift cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 clift creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((continuous_on (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) = (((continuous_on (lift o (\x. (rho (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c= ccontinuous_on / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c/\ ccontinuous_on * * part co part clift / crho cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ |- ((\f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))))) f)
T * / ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_add * b0 b3 * b1 b3 b2 f0
- (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- (!h. (!a. (!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially))))))
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially ! ! ! ! c==> c/\ c--> / * f0 b4 b1 csequentially c/\ c--> / * f1 b4 b2 csequentially c/\ c--> / * b0 b4 b3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b4 * * part cINSERT * f1 b4 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b4 * * part cINSERT * b0 b4 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b4 * f1 b4 * b0 b4 clift cdihV cvec cNUMERAL c_0 b1 b2 b3 csequentially
+ |- (((!y. ((lift ((real_add x) y)) = ((vector_add (lift x)) (lift y)))) ==> ((\y. ((lift ((real_add x) y)) = ((vector_add (lift x)) (lift y)))) y)) = ((\y. ((lift ((real_add x) y)) = ((vector_add (lift x)) (lift y)))) y))
T c= c==> ! c= clift creal_add f0 b0 cvector_add clift f0 clift b0 * / c= clift creal_add f0 b0 cvector_add clift f0 clift b0 f1 * / c= clift creal_add f0 b0 cvector_add clift f0 clift b0 f1
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((((x n) IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> c==> cIN * f0 f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f3 part cEMPTY
+ |- (((!y. ((ly y) = (((((interp (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0))) y))) ==> ((\y. ((ly y) = (((((interp (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0))) y))) y)) = ((\y. ((ly y) = (((((interp (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0))) y))) y))
T c= c==> ! c= cly b0 cinterp creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 * / c= cly b0 cinterp creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 f0 * / c= cly b0 cinterp creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 f0
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) |- ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY)))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ |- ((\v3. (!v1. (!v2. ((((tau3 v1) v2) v3) = ((real_add ((real_mul (rho (vector_norm v1))) ((((dihV (vec (NUMERAL _0))) v1) v2) v3))) ((real_add ((real_mul (rho (vector_norm v2))) ((((dihV (vec (NUMERAL _0))) v2) v3) v1))) ((real_sub ((real_mul (rho (vector_norm v3))) ((((dihV (vec (NUMERAL _0))) v3) v1) v2))) ((real_add pi) sol0)))))))) v3)
T * / ! ! c= ctau3 b1 b2 b0 creal_add creal_mul crho cvector_norm b1 cdihV cvec cNUMERAL c_0 b1 b2 b0 creal_add creal_mul crho cvector_norm b2 cdihV cvec cNUMERAL c_0 b2 b0 b1 creal_sub creal_mul crho cvector_norm b0 cdihV cvec cNUMERAL c_0 b0 b1 b2 creal_add cpi csol0 f0
- |- ((((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)) = ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F))
T c= c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF
+ (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- (((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x)))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))))) sequentially))
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially c==> c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats f1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (!a. (((a IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) /\ (((--> x) a) sequentially))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a))) ((row (NUMERAL (BIT1 _0))) (vecmats a))))) sequentially)))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 ! c==> c/\ cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ ! cIN * f2 b1 * part cGSPEC / c? / cSETSPEC b2 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b4 b3 part cball_annulus cCONDITION1_SY f0 f1 b3 cmatvec b3 c--> f2 b0 csequentially c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f2 b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f2 b1 crow cNUMERAL cBIT1 c_0 cvecmats * f2 b1 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 c_0 cvecmats b0 csequentially
- (x = B), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- (~ (B = C))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c~ c= f1 f3
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), ((a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) /\ (((--> x) a') sequentially))) |- (((a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) /\ (((--> x) a') sequentially))) /\ (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x)))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))))) sequentially))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ cIN f2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c/\ ! cIN * f3 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c--> f3 f2 csequentially c/\ c/\ cIN f2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c/\ ! cIN * f3 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c--> f3 f2 csequentially c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats f2 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 csequentially
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))), (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially), (((--> x) a') sequentially) |- ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f1 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1 c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c==> c--> f0 f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ (k = (dimindex UNIV)), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), ((NUMERAL (BIT0 (BIT1 _0))) < k), (((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) |- (((continuous_on (lift o (\x. (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) = ((compact (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (lift o (\x. (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))))
T c==> c= f0 cdimindex part cUNIV c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> c< cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ctri_stable f0 f1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2 f3 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f0 c= ccontinuous_on * * part co part clift / ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1 c/\ ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1 ccontinuous_on * * part co part clift / ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) |- ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
- |- ((\B. (!C. (!A. ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)))) B)
T * / ! ! c==> c~ ! c= c\/ c= b3 b2 c\/ c= b3 b0 c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 cF f0
- |- (((!p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) = p') ==> ((p' ==> ((((row i) v) IN ball_annulus) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus)) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) = p') ==> ((p' ==> ((((row i) v) IN ball_annulus) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus)) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) = p') ==> ((p' ==> ((((row i) v) IN ball_annulus) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus)) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= cIN crow f0 f1 part cball_annulus b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 cIN crow f0 f1 part cball_annulus c==> b0 b1 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= cIN crow f0 f1 part cball_annulus b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 cIN crow f0 f1 part cball_annulus c==> b0 b1 f2 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= cIN crow f0 f1 part cball_annulus b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 cIN crow f0 f1 part cball_annulus c==> b0 b1 f2
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((((continuous_on (\x. (lift (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. (lift (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((continuous_on (\x. ((vector_sub (lift (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))) (lift (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) = ((continuous_on (\x. ((vector_sub (lift (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))) (lift (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c= c==> c/\ ccontinuous_on / clift cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / cvector_sub clift cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 clift creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / cvector_sub clift cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 clift creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
- (!i. (!s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s)))) |- ((!i. (!s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s)))) /\ (!i. (!s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s)))))
T c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV ccontinuous_on / crow b0 cvecmats b2 b1 c/\ ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV ccontinuous_on / crow b0 cvecmats b2 b1 ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV ccontinuous_on / crow b0 cvecmats b2 b1
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((continuous_on (\x. (lift (vector_norm ((row (NUMERAL (BIT1 _0))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 ccontinuous_on / clift cvector_norm crow cNUMERAL cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
- |- (((!x. ((lift ((sum k) x)) = ((vsum k) (lift o x)))) ==> ((\x. ((lift ((sum k) x)) = ((vsum k) (lift o x)))) x)) = ((\x. ((lift ((sum k) x)) = ((vsum k) (lift o x)))) x))
T c= c==> ! c= clift csum f0 b0 cvsum f0 * * part co part clift b0 * / c= clift csum f0 b0 cvsum f0 * * part co part clift b0 f1 * / c= clift csum f0 b0 cvsum f0 * * part co part clift b0 f1
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) |- ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ |- (((continuous_on (\x. ((vector_add (lift (real_of_num (NUMERAL (BIT1 _0))))) ((% ((real_div ((real_sub (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (lift ((real_sub (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) = ((continuous_on (\x. (lift (ly (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c= ccontinuous_on / cvector_add clift creal_of_num cNUMERAL cBIT1 c_0 c% creal_div creal_sub creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 clift creal_sub cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift cly cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- (((!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially))))))) ==> ((\b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially))))))) b)) = ((\b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially))))))) b))
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially c= c==> ! ! ! ! ! c==> c/\ c--> / * b2 b5 f0 csequentially c/\ c--> / * b3 b5 b0 csequentially c/\ c--> / * b4 b5 b1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b2 b5 * * part cINSERT * b3 b5 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b2 b5 * * part cINSERT * b4 b5 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b2 b5 * b3 b5 * b4 b5 clift cdihV cvec cNUMERAL c_0 f0 b0 b1 csequentially * / ! ! ! ! c==> c/\ c--> / * b2 b5 f0 csequentially c/\ c--> / * b3 b5 b0 csequentially c/\ c--> / * b4 b5 b1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b2 b5 * * part cINSERT * b3 b5 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b2 b5 * * part cINSERT * b4 b5 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b2 b5 * b3 b5 * b4 b5 clift cdihV cvec cNUMERAL c_0 f0 b0 b1 csequentially f1 * / ! ! ! ! c==> c/\ c--> / * b2 b5 f0 csequentially c/\ c--> / * b3 b5 b0 csequentially c/\ c--> / * b4 b5 b1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b2 b5 * * part cINSERT * b3 b5 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b2 b5 * * part cINSERT * b4 b5 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b2 b5 * b3 b5 * b4 b5 clift cdihV cvec cNUMERAL c_0 f0 b0 b1 csequentially f1
- |- (((!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n)))) ==> ((\p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n)))) p)) = ((\p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n)))) p))
T c= c==> ! c= cIN b0 * * part c.. f0 f1 c/\ c<= f0 b0 c<= b0 f1 * / c= cIN b0 * * part c.. f0 f1 c/\ c<= f0 b0 c<= b0 f1 f2 * / c= cIN b0 * * part c.. f0 f1 c/\ c<= f0 b0 c<= b0 f1 f2
- (((compact (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (lift o (\x. (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> (?x. ((x IN (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ (!y. ((y IN (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((real_le (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats y))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats y))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats y))))))))) |- ((((compact (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (lift o (\x. (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> (?x. ((x IN (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ (!y. ((y IN (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((real_le (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats y))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats y))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats y))))))))) = T)
T c==> c==> c/\ ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on * * part co part clift / ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c? / c/\ cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 ! c==> cIN b1 * part cGSPEC / c? / cSETSPEC b2 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b4 b3 part cball_annulus cCONDITION1_SY f0 f1 b3 cmatvec b3 creal_le ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b1 c= c==> c/\ ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on * * part co part clift / ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c? / c/\ cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 ! c==> cIN b1 * part cGSPEC / c? / cSETSPEC b2 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b4 b3 part cball_annulus cCONDITION1_SY f0 f1 b3 cmatvec b3 creal_le ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b1 cT
+ |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) = T)
T c= c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cT
+ |- ((((continuous_on (\x. (lift const1))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. ((% const1) (lift (ly (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x)))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((continuous_on (\x. ((vector_sub (lift const1)) ((% const1) (lift (ly (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c/\ ccontinuous_on / clift cconst1 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / c% cconst1 clift cly cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / cvector_sub clift cconst1 c% cconst1 clift cly cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) |- (((!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))) ==> ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))) g)) = ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))) g))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 c= c==> ! ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_sub * f0 b2 * b0 b2 b1 * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_sub * f0 b2 * b0 b2 b1 f1 * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_sub * f0 b2 * b0 b2 b1 f1
- (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- (((!f. (!g. (!h. (!a. (!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) ==> ((\f. (!g. (!h. (!a. (!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) f)) = ((\f. (!g. (!h. (!a. (!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) f))
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially c= c==> ! ! ! ! ! ! c==> c/\ c--> / * b0 b6 b3 csequentially c/\ c--> / * b1 b6 b4 csequentially c/\ c--> / * b2 b6 b5 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b3 * * part cINSERT b5 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 b6 * * part cINSERT * b1 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 b6 * * part cINSERT * b2 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b0 b6 * b1 b6 * b2 b6 clift cdihV cvec cNUMERAL c_0 b3 b4 b5 csequentially * / ! ! ! ! ! c==> c/\ c--> / * b0 b6 b3 csequentially c/\ c--> / * b1 b6 b4 csequentially c/\ c--> / * b2 b6 b5 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b3 * * part cINSERT b5 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 b6 * * part cINSERT * b1 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 b6 * * part cINSERT * b2 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b0 b6 * b1 b6 * b2 b6 clift cdihV cvec cNUMERAL c_0 b3 b4 b5 csequentially f0 * / ! ! ! ! ! c==> c/\ c--> / * b0 b6 b3 csequentially c/\ c--> / * b1 b6 b4 csequentially c/\ c--> / * b2 b6 b5 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b3 * * part cINSERT b5 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 b6 * * part cINSERT * b1 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 b6 * * part cINSERT * b2 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b0 b6 * b1 b6 * b2 b6 clift cdihV cvec cNUMERAL c_0 b3 b4 b5 csequentially f0
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((continuous_on (\x. ((% const1) (lift (ly (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x)))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 ccontinuous_on / c% cconst1 clift cly cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))) |- ((((a' IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY)))))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))) = ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c= c==> c==> cIN f2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 part cEMPTY
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((continuous_on (\x. (lift (ly (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 ccontinuous_on / clift cly cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
- (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- ((\h. (!a. (!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))) h)
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially * / ! ! ! c==> c/\ c--> / * f0 b4 b1 csequentially c/\ c--> / * f1 b4 b2 csequentially c/\ c--> / * b0 b4 b3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b4 * * part cINSERT * f1 b4 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b4 * * part cINSERT * b0 b4 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b4 * f1 b4 * b0 b4 clift cdihV cvec cNUMERAL c_0 b1 b2 b3 csequentially f2
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially), (((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially), (((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially), (((--> x) a') sequentially) |- ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY)))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c==> c--> f0 f3 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ |- (((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))) = (((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially)) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))))
T c= c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ (!s. (!c. (!f. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s))))) |- (!s. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s)))
T c==> ! ! ! c==> c/\ ccontinuous_on * * part co part clift b1 b0 ccontinuous_on b2 b0 ccontinuous_on / c% * b1 b3 * b2 b3 b0 ! c==> c/\ ccontinuous_on * * part co part clift f0 b0 ccontinuous_on f1 b0 ccontinuous_on / c% * f0 b1 * f1 b1 b0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) |- (((!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))) ==> ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))) s)) = ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 c= c==> ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_sub * f0 b1 * f1 b1 b0 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_sub * f0 b1 * f1 b1 b0 f2 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_sub * f0 b1 * f1 b1 b0 f2
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))), (((continuous_on f) s) /\ ((continuous_on g) s)) |- ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 ccontinuous_on / cvector_sub * f0 b0 * f2 b0 f1
+ (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- ((\f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially))))) f)
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially * / ! ! c==> c/\ c--> / * b0 b3 f0 csequentially c/\ c--> / * b1 b3 f1 csequentially c/\ c--> / * b2 b3 f2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 b3 * * part cINSERT * b1 b3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 b3 * * part cINSERT * b2 b3 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b0 b3 * b1 b3 * b2 b3 clift cdihV cvec cNUMERAL c_0 f0 f1 f2 csequentially f3
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) |- ((((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))) = (((a' IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY)))))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c= c==> c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f0 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 part cEMPTY c==> c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f0 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 part cEMPTY
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((continuous_on (\x. (lift ((real_mul (rho (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))) ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 ccontinuous_on / clift creal_mul crho cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ |- ((real_neg ((real_sub ((real_mul a) b)) ((real_mul b) a))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_mul f0 f1 creal_mul f1 f0 creal_of_num cNUMERAL c_0
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) /\ (((--> x) a') sequentially)), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) |- (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))))) sequentially)
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ ! cIN * f2 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c--> f2 f3 csequentially c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f2 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f2 b0 crow cNUMERAL cBIT1 c_0 cvecmats * f2 b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 crow cNUMERAL cBIT1 c_0 cvecmats f3 csequentially
+ |- ((\t. ((\x. (t x)) = t)) t)
T * / c= / * b0 b1 b0 f0
- (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) |- ((a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((((--> x) a') sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY)))))))))))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c/\ cIN f2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c==> ! cIN * f3 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c==> c--> f3 f2 csequentially c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 c_0 cvecmats f2 csequentially c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 part cEMPTY
+ |- ((((continuous_on (lift o (\x. (rho (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((continuous_on (\x. ((% (rho (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c/\ ccontinuous_on * * part co part clift / crho cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / c% crho cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ ((NUMERAL (BIT0 (BIT1 _0))) < k) |- (((NUMERAL (BIT0 (BIT1 _0))) < k) = T)
T c==> c< cNUMERAL cBIT0 cBIT1 c_0 f0 c= c< cNUMERAL cBIT0 cBIT1 c_0 f0 cT
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ ((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT1 (BIT1 _0))))) = (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c= c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ |- ((\y1. (!x2. (!x1. ((((((interp x1) y1) x2) y2) x) = ((real_add y1) ((real_mul ((real_sub x) x1)) ((real_div ((real_sub y2) y1)) ((real_sub x2) x1)))))))) y1)
T * / ! ! c= cinterp b2 b0 b1 f0 f1 creal_add b0 creal_mul creal_sub f1 b2 creal_div creal_sub f0 b0 creal_sub b1 b2 f2
- (!f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s)))) |- ((!f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s)))) /\ (!f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s)))))
T c==> ! ! c==> ccontinuous_on b0 b1 ccontinuous_on / clift cvector_norm * b0 b2 b1 c/\ ! ! c==> ccontinuous_on b0 b1 ccontinuous_on / clift cvector_norm * b0 b2 b1 ! ! c==> ccontinuous_on b0 b1 ccontinuous_on / clift cvector_norm * b0 b2 b1
- ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F), (((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)) |- (((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) /\ ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c/\ c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF
+ (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) |- ((a' IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) = T)
T c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 cT
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((continuous_on (\x. ((vector_add ((vector_add (lift ((real_mul (rho (vector_norm ((row (NUMERAL (BIT1 _0))) (vecmats x))))) ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (lift ((real_mul (rho (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))))) ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 _0))) (vecmats x))))))) (lift ((real_mul (rho (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))) ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x)))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 ccontinuous_on / cvector_add cvector_add clift creal_mul crho cvector_norm crow cNUMERAL cBIT1 c_0 cvecmats b0 cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 clift creal_mul crho cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 c_0 cvecmats b0 clift creal_mul crho cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) |- ((((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))) = (((a' IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY)))))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c= c==> c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f0 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 part cEMPTY c==> c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f0 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 part cEMPTY
+ (k = (dimindex UNIV)), ((~ ((GSPEC (\GEN%PVAR%7724. (?v. (((SETSPEC GEN%PVAR%7724) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))) = EMPTY)) /\ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY)))))))))), ((NUMERAL (BIT0 (BIT1 _0))) < k), (((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) |- (?x. ((x IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ (!y. ((y IN (GSPEC (\GEN%PVAR%7727. (?v. (((SETSPEC GEN%PVAR%7727) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((real_le (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats y))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats y))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats y))))))))
T c==> c= f0 cdimindex part cUNIV c==> c/\ c~ c= * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 part cEMPTY ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c< cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ctri_stable f0 f3 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f1 f2 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f0 c? / c/\ cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 ! c==> cIN b1 * part cGSPEC / c? / cSETSPEC b2 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cdimindex part cUNIV cIN crow b4 b3 part cball_annulus cCONDITION1_SY f1 f2 b3 cmatvec b3 creal_le ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b1
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((continuous_on (\x. (lift (real_of_num (NUMERAL (BIT1 _0)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. (lift ((real_sub const1) ((real_mul const1) (ly (vector_norm ((row (NUMERAL (BIT1 _0))) (vecmats x))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c/\ ccontinuous_on / clift creal_of_num cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift creal_sub cconst1 creal_mul cconst1 cly cvector_norm crow cNUMERAL cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
- |- ((\C. (!A. ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F))) C)
T * / ! c==> c~ ! c= c\/ c= b2 b1 c\/ c= b2 f0 c= b2 b0 c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cF f1
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))) = T)
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c= c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f3 part cEMPTY cT
+ |- (((!s. (!c. (!f. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s))))) ==> (!c. (!f. (!s. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s)))))) = (!c. (!f. (!s. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s))))))
T c= c==> ! ! ! c==> c/\ ccontinuous_on * * part co part clift b1 b0 ccontinuous_on b2 b0 ccontinuous_on / c% * b1 b3 * b2 b3 b0 ! ! ! c==> c/\ ccontinuous_on * * part co part clift b0 b2 ccontinuous_on b1 b2 ccontinuous_on / c% * b0 b3 * b1 b3 b2 ! ! ! c==> c/\ ccontinuous_on * * part co part clift b0 b2 ccontinuous_on b1 b2 ccontinuous_on / c% * b0 b3 * b1 b3 b2
- (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) |- ((collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c= ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY cF
- (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- ((!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) /\ (!f. (!g. (!h. (!a. (!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))))
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially c/\ ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially ! ! ! ! ! ! c==> c/\ c--> / * b0 b6 b3 csequentially c/\ c--> / * b1 b6 b4 csequentially c/\ c--> / * b2 b6 b5 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b3 * * part cINSERT b5 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 b6 * * part cINSERT * b1 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 b6 * * part cINSERT * b2 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b0 b6 * b1 b6 * b2 b6 clift cdihV cvec cNUMERAL c_0 b3 b4 b5 csequentially
- ((continuous_on f) s) |- ((!f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s)))) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s))
T c==> ccontinuous_on f0 f1 c==> ! ! c==> ccontinuous_on b0 b1 ccontinuous_on / clift cvector_norm * b0 b2 b1 ccontinuous_on / clift cvector_norm * f0 b0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially ! ! ! ! ! c==> c/\ c--> / * b2 b5 f0 csequentially c/\ c--> / * b3 b5 b0 csequentially c/\ c--> / * b4 b5 b1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b2 b5 * * part cINSERT * b3 b5 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b2 b5 * * part cINSERT * b4 b5 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b2 b5 * b3 b5 * b4 b5 clift cdihV cvec cNUMERAL c_0 f0 b0 b1 csequentially
+ (!f. (!c. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s))))) |- ((!f. (!c. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s))))) /\ (!c. (!f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s))))))
T c==> ! ! ! c==> ccontinuous_on b0 b2 ccontinuous_on / c% b1 * b0 b3 b2 c/\ ! ! ! c==> ccontinuous_on b0 b2 ccontinuous_on / c% b1 * b0 b3 b2 ! ! ! c==> ccontinuous_on b1 b2 ccontinuous_on / c% b0 * b1 b3 b2
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- (((continuous_on f) s) /\ ((continuous_on g) s)) |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 ccontinuous_on / cvector_sub * f0 b0 * f2 b0 f1
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((continuous_on (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 ccontinuous_on / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
- (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- ((!g. (!h. (!a. (!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially))))))) = T)
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially c= ! ! ! ! ! c==> c/\ c--> / * f0 b5 b2 csequentially c/\ c--> / * b0 b5 b3 csequentially c/\ c--> / * b1 b5 b4 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b5 * * part cINSERT * b0 b5 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b5 * * part cINSERT * b1 b5 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b5 * b0 b5 * b1 b5 clift cdihV cvec cNUMERAL c_0 b2 b3 b4 csequentially cT
+ |- (((!s. (((compact s) /\ ((~ (s = EMPTY)) /\ ((continuous_on (lift o (\x. (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) s))) ==> (?x. ((x IN s) /\ (!y. ((y IN s) ==> ((real_le ((\x. (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) x)) ((\x. (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) y)))))))) ==> ((\s. (((compact s) /\ ((~ (s = EMPTY)) /\ ((continuous_on (lift o (\x. (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) s))) ==> (?x. ((x IN s) /\ (!y. ((y IN s) ==> ((real_le ((\x. (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) x)) ((\x. (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) y)))))))) (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) = ((\s. (((compact s) /\ ((~ (s = EMPTY)) /\ ((continuous_on (lift o (\x. (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) s))) ==> (?x. ((x IN s) /\ (!y. ((y IN s) ==> ((real_le ((\x. (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) x)) ((\x. (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) y)))))))) (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c= c==> ! c==> c/\ ccompact b0 c/\ c~ c= b0 part cEMPTY ccontinuous_on * * part co part clift / ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b1 b0 c? / c/\ cIN b1 b0 ! c==> cIN b2 b0 creal_le * / ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b3 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b3 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b3 b1 * / ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b3 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b3 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b3 b2 * / c==> c/\ ccompact b0 c/\ c~ c= b0 part cEMPTY ccontinuous_on * * part co part clift / ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b1 b0 c? / c/\ cIN b1 b0 ! c==> cIN b2 b0 creal_le * / ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b3 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b3 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b3 b1 * / ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b3 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b3 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b3 b2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 * / c==> c/\ ccompact b0 c/\ c~ c= b0 part cEMPTY ccontinuous_on * * part co part clift / ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b1 b0 c? / c/\ cIN b1 b0 ! c==> cIN b2 b0 creal_le * / ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b3 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b3 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b3 b1 * / ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b3 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b3 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b3 b2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ |- (((!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))) ==> ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))) g)) = ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))) g))
T c= c==> ! ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_sub * f0 b2 * b0 b2 b1 * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_sub * f0 b2 * b0 b2 b1 f1 * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_sub * f0 b2 * b0 b2 b1 f1
+ |- (((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))) = (((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ ((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially)) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))))
T c= c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ |- (((!f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s)))) ==> ((\f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s)))) f)) = ((\f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s)))) f))
T c= c==> ! ! c==> ccontinuous_on b0 b1 ccontinuous_on / clift cvector_norm * b0 b2 b1 * / ! c==> ccontinuous_on b0 b1 ccontinuous_on / clift cvector_norm * b0 b2 b1 f0 * / ! c==> ccontinuous_on b0 b1 ccontinuous_on / clift cvector_norm * b0 b2 b1 f0
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), (~ ((GSPEC (\GEN%PVAR%7724. (?v. (((SETSPEC GEN%PVAR%7724) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))) = EMPTY)), (k = (dimindex UNIV)), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), ((NUMERAL (BIT0 (BIT1 _0))) < k), (((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) |- (?x. ((x IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ (!y. ((y IN (GSPEC (\GEN%PVAR%7727. (?v. (((SETSPEC GEN%PVAR%7727) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((real_le (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats y))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats y))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats y))))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 part cEMPTY c==> c= f2 cdimindex part cUNIV c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> c< cNUMERAL cBIT0 cBIT1 c_0 f2 c==> ctri_stable f2 f3 * * part c.. cNUMERAL c_0 c- f2 cNUMERAL cBIT1 c_0 f0 f1 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f2 c? / c/\ cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 ! c==> cIN b1 * part cGSPEC / c? / cSETSPEC b2 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cdimindex part cUNIV cIN crow b4 b3 part cball_annulus cCONDITION1_SY f0 f1 b3 cmatvec b3 creal_le ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b1
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((!a. (((a IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) /\ (((--> x) a) sequentially))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x)))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a))) ((row (NUMERAL (BIT1 _0))) (vecmats a))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a))))) sequentially))) = T)
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c= ! c==> c/\ cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ ! cIN * f2 b1 * part cGSPEC / c? / cSETSPEC b2 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b4 b3 part cball_annulus cCONDITION1_SY f0 f1 b3 cmatvec b3 c--> f2 b0 csequentially c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f2 b1 crow cNUMERAL cBIT1 c_0 cvecmats * f2 b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f2 b1 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 csequentially cT
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> x) a') sequentially) |- (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x)))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))))) sequentially)
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c==> c--> f0 f3 csequentially c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 crow cNUMERAL cBIT1 c_0 cvecmats f3 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 csequentially
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((continuous_on (\x. (lift (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. (lift (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c/\ ccontinuous_on / clift cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ ((NUMERAL (BIT1 _0)) <= (dimindex UNIV)))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV
+ (!f. (!c. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s))))) |- (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s)))
T c==> ! ! ! c==> ccontinuous_on b0 b2 ccontinuous_on / c% b1 * b0 b3 b2 ! c==> ccontinuous_on f0 b0 ccontinuous_on / c% f1 * f0 b1 b0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- ((((((--> (\n. (matvec ((\n. (vecmats (x n))) n)))) (matvec (vecmats a'))) sequentially) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((--> (\n. ((row i) ((\n. (vecmats (x n))) n)))) ((row i) (vecmats a'))) sequentially)))) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))))))))))) = ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY)))))))))))))
T c= c==> c==> c--> / cmatvec * / cvecmats * f0 b1 b0 cmatvec cvecmats f1 csequentially ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c--> / crow b0 * / cvecmats * f0 b2 b1 crow b0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ |- ((((continuous_on (\x. (lift const1))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. ((% const1) (lift (ly (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((continuous_on (\x. ((vector_sub (lift const1)) ((% const1) (lift (ly (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c/\ ccontinuous_on / clift cconst1 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / c% cconst1 clift cly cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / cvector_sub clift cconst1 c% cconst1 clift cly cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) |- (((x n) IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) = T)
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c= cIN * f0 f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 cT
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))), (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially), (((--> x) a') sequentially) |- ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f1 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1 c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c==> c--> f0 f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
- |- ((((~ (~ F)) = F) ==> ((~ (~ F)) ==> F)) = ((~ (~ F)) ==> F))
T c= c==> c= c~ c~ cF cF c==> c~ c~ cF cF c==> c~ c~ cF cF
- (!i. (!s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s)))), (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((!i. (!s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s)))) /\ ((continuous_on (\x. ((row i) (vecmats x)))) s))
T c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV ccontinuous_on / crow b0 cvecmats b2 b1 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV ccontinuous_on / crow b0 cvecmats b2 b1 ccontinuous_on / crow f0 cvecmats b0 f1
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially), (((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially), (((--> x) a') sequentially) |- (((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially)) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f3 csequentially c==> c--> f0 f3 csequentially c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ |- ((\s. (((compact s) /\ ((~ (s = EMPTY)) /\ ((continuous_on (lift o (\x. (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) s))) ==> (?x. ((x IN s) /\ (!y. ((y IN s) ==> ((real_le ((\x. (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) x)) ((\x. (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) y)))))))) (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))
T * / c==> c/\ ccompact b0 c/\ c~ c= b0 part cEMPTY ccontinuous_on * * part co part clift / ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b1 b0 c? / c/\ cIN b1 b0 ! c==> cIN b2 b0 creal_le * / ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b3 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b3 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b3 b1 * / ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b3 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b3 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b3 b2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))), (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> x) a') sequentially) |- ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f1 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1 c==> c--> f0 f1 csequentially c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) |- ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ |- (((!y2. (!y1. (!x2. (!x1. ((((((interp x1) y1) x2) y2) x) = ((real_add y1) ((real_mul ((real_sub x) x1)) ((real_div ((real_sub y2) y1)) ((real_sub x2) x1))))))))) ==> ((\y2. (!y1. (!x2. (!x1. ((((((interp x1) y1) x2) y2) x) = ((real_add y1) ((real_mul ((real_sub x) x1)) ((real_div ((real_sub y2) y1)) ((real_sub x2) x1))))))))) y2)) = ((\y2. (!y1. (!x2. (!x1. ((((((interp x1) y1) x2) y2) x) = ((real_add y1) ((real_mul ((real_sub x) x1)) ((real_div ((real_sub y2) y1)) ((real_sub x2) x1))))))))) y2))
T c= c==> ! ! ! ! c= cinterp b3 b1 b2 b0 f0 creal_add b1 creal_mul creal_sub f0 b3 creal_div creal_sub b0 b1 creal_sub b2 b3 * / ! ! ! c= cinterp b3 b1 b2 b0 f0 creal_add b1 creal_mul creal_sub f0 b3 creal_div creal_sub b0 b1 creal_sub b2 b3 f1 * / ! ! ! c= cinterp b3 b1 b2 b0 f0 creal_add b1 creal_mul creal_sub f0 b3 creal_div creal_sub b0 b1 creal_sub b2 b3 f1
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> x) a') sequentially) |- ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c==> c--> f0 f3 csequentially c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ |- ((\c. (!f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s))))) c)
T * / ! ! c==> ccontinuous_on b1 b2 ccontinuous_on / c% b0 * b1 b3 b2 f0
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))) |- ((((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially)) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))))))))) = ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY)))))))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
- ((((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((k = (dimindex UNIV)) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))), (((((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((k = (dimindex UNIV)) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))) ==> (compact (GSPEC (\GEN%PVAR%7612. (?v. (((SETSPEC GEN%PVAR%7612) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) |- ((((((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((k = (dimindex UNIV)) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))) ==> (compact (GSPEC (\GEN%PVAR%7612. (?v. (((SETSPEC GEN%PVAR%7612) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) /\ (compact (GSPEC (\GEN%PVAR%7612. (?v. (((SETSPEC GEN%PVAR%7612) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c/\ ctri_stable f0 f1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2 f3 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f0 c/\ c= f0 cdimindex part cUNIV c< cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c==> c/\ ctri_stable f0 f1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2 f3 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f0 c/\ c= f0 cdimindex part cUNIV c< cNUMERAL cBIT0 cBIT1 c_0 f0 ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1 c/\ c==> c/\ ctri_stable f0 f1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2 f3 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f0 c/\ c= f0 cdimindex part cUNIV c< cNUMERAL cBIT0 cBIT1 c_0 f0 ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1 ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1
+ |- (((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))))))))) = (((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially)) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))))))))))
T c= c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) |- ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) = T)
T c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c= c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially cT
+ |- (((!y. ((lift ((real_sub x) y)) = ((vector_sub (lift x)) (lift y)))) ==> ((\y. ((lift ((real_sub x) y)) = ((vector_sub (lift x)) (lift y)))) y)) = ((\y. ((lift ((real_sub x) y)) = ((vector_sub (lift x)) (lift y)))) y))
T c= c==> ! c= clift creal_sub f0 b0 cvector_sub clift f0 clift b0 * / c= clift creal_sub f0 b0 cvector_sub clift f0 clift b0 f1 * / c= clift creal_sub f0 b0 cvector_sub clift f0 clift b0 f1
+ |- ((\f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) f)
T * / ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 f0
+ |- ((!f. (!c. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s))))) ==> (!c. (!f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s))))))
T c==> ! ! ! c==> ccontinuous_on b0 b2 ccontinuous_on / c% b1 * b0 b3 b2 ! ! ! c==> ccontinuous_on b1 b2 ccontinuous_on / c% b0 * b1 b3 b2
- |- ((!h. t) = t)
T c= ! f0 f0
- |- (((!n. (FINITE (m .. n))) ==> ((\n. (FINITE (m .. n))) n)) = ((\n. (FINITE (m .. n))) n))
T c= c==> ! cFINITE * * part c.. f0 b0 * / cFINITE * * part c.. f0 b0 f1 * / cFINITE * * part c.. f0 b0 f1
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))))), (((continuous_on f) s) /\ ((continuous_on g) s)) |- ((continuous_on (\x. ((vector_add (f x)) (g x)))) s)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_add * b0 b3 * b1 b3 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 ccontinuous_on / cvector_add * f0 b0 * f2 b0 f1
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ ((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0))))) = (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ ((NUMERAL (BIT1 _0)) <= (dimindex UNIV))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c= c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) |- ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((continuous_on (\x. (lift (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. (lift (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c/\ ccontinuous_on / clift cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
- |- ((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0)))
T c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))))) |- (((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s)) = T)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_add * b0 b3 * b1 b3 b2 c= c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 ccontinuous_on / cvector_add * f0 b0 * f2 b0 f1 cT
+ (k = (dimindex UNIV)), ((NUMERAL (BIT0 (BIT1 _0))) < k), (((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) |- (T = ((((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((k = (dimindex UNIV)) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))))
T c==> c= f0 cdimindex part cUNIV c==> c< cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ctri_stable f0 f1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2 f3 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f0 c= cT c/\ ctri_stable f0 f1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2 f3 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f0 c/\ c= f0 cdimindex part cUNIV c< cNUMERAL cBIT0 cBIT1 c_0 f0
+ |- ((\c. ((lift ((real_mul c) x)) = ((% c) (lift x)))) c)
T * / c= clift creal_mul b0 f0 c% b0 clift f0 f1
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((continuous_on (\x. (lift (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 ccontinuous_on / clift cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
- (x = B), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c==> c~ cF cF
+ |- (((continuous_on (\x. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((continuous_on (\x. (lift (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> ccontinuous_on / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))), (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> x) a') sequentially) |- ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f1 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1 c==> c--> f0 f1 csequentially c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))) |- ((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ ((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (((--> x) a') sequentially) |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))))))))))) = (((((--> (\n. (matvec ((\n. (vecmats (x n))) n)))) (matvec (vecmats a'))) sequentially) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((--> (\n. ((row i) ((\n. (vecmats (x n))) n)))) ((row i) (vecmats a'))) sequentially)))) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))))))))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> c--> f0 f1 csequentially c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c==> c==> c--> / cmatvec * / cvecmats * f0 b1 b0 cmatvec cvecmats f1 csequentially ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c--> / crow b0 * / cvecmats * f0 b2 b1 crow b0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((?x. ((x IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ (!y. ((y IN (GSPEC (\GEN%PVAR%7727. (?v. (((SETSPEC GEN%PVAR%7727) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((real_le (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats y))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats y))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats y)))))))) = (?x. ((x IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ (!y. ((y IN (GSPEC (\GEN%PVAR%7727. (?v. (((SETSPEC GEN%PVAR%7727) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((real_le (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats y))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats y))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats y)))))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c= c? / c/\ cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 ! c==> cIN b1 * part cGSPEC / c? / cSETSPEC b2 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b4 b3 part cball_annulus cCONDITION1_SY f0 f1 b3 cmatvec b3 creal_le ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b1 c? / c/\ cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 ! c==> cIN b1 * part cGSPEC / c? / cSETSPEC b2 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cdimindex part cUNIV cIN crow b4 b3 part cball_annulus cCONDITION1_SY f0 f1 b3 cmatvec b3 creal_le ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b1
+ |- (!l. ((((--> (\n. (matvec ((\n. (vecmats (x n))) n)))) (matvec l)) sequentially) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((--> (\n. ((row i) ((\n. (vecmats (x n))) n)))) ((row i) l)) sequentially)))))
T c==> c--> / cmatvec * / cvecmats * f0 b1 b0 cmatvec f1 csequentially ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c--> / crow b0 * / cvecmats * f0 b2 b1 crow b0 f1 csequentially
- (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) |- ((a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((((--> x) a') sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c/\ cIN f2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c==> ! cIN * f3 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c==> c--> f3 f2 csequentially c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 c_0 cvecmats f2 csequentially c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 part cEMPTY
+ |- (T = (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ ((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0))))))
T c= cT c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
+ |- (((!x. (!c. ((lift ((real_mul c) x)) = ((% c) (lift x))))) ==> ((\x. (!c. ((lift ((real_mul c) x)) = ((% c) (lift x))))) x)) = ((\x. (!c. ((lift ((real_mul c) x)) = ((% c) (lift x))))) x))
T c= c==> ! ! c= clift creal_mul b1 b0 c% b1 clift b0 * / ! c= clift creal_mul b1 b0 c% b1 clift b0 f0 * / ! c= clift creal_mul b1 b0 c% b1 clift b0 f0
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))), ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))) |- ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))), ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))) |- ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY
- (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) |- (T = (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c= cT c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) |- ((collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f0 part cEMPTY c= ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f0 part cEMPTY cF
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((((continuous_on (lift o (\x. (rho (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((continuous_on (\x. ((% (rho (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) = ((continuous_on (\x. ((% (rho (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c= c==> c/\ ccontinuous_on * * part co part clift / crho cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / c% crho cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / c% crho cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) /\ (((--> x) a') sequentially)), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) |- (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x)))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))))) sequentially)
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c--> f0 f3 csequentially c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats f3 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((continuous_on (\x. (lift (real_of_num (NUMERAL (BIT1 _0)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. (lift ((real_sub const1) ((real_mul const1) (ly (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((continuous_on (\x. ((vector_add (lift (real_of_num (NUMERAL (BIT1 _0))))) (lift ((real_sub const1) ((real_mul const1) (ly (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c/\ ccontinuous_on / clift creal_of_num cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift creal_sub cconst1 creal_mul cconst1 cly cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / cvector_add clift creal_of_num cNUMERAL cBIT1 c_0 clift creal_sub cconst1 creal_mul cconst1 cly cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((continuous_on (lift o (\x. (rho (vector_norm ((row (NUMERAL (BIT1 _0))) (vecmats x))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c/\ ccontinuous_on * * part co part clift / crho cvector_norm crow cNUMERAL cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((((x n) IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> c==> cIN * f0 f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f3 part cEMPTY
+ |- ((((compact (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (lift o (\x. (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> (?x. ((x IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ (!y. ((y IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((real_le (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats y))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats y))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats y))))))))) = (((compact (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (lift o (\x. (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> (?x. ((x IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ (!y. ((y IN (GSPEC (\GEN%PVAR%7727. (?v. (((SETSPEC GEN%PVAR%7727) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((real_le (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats y))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats y))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats y))))))))))
T c= c==> c/\ ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on * * part co part clift / ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c? / c/\ cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 ! c==> cIN b1 * part cGSPEC / c? / cSETSPEC b2 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b4 b3 part cball_annulus cCONDITION1_SY f0 f1 b3 cmatvec b3 creal_le ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b1 c==> c/\ ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on * * part co part clift / ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c? / c/\ cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 ! c==> cIN b1 * part cGSPEC / c? / cSETSPEC b2 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b4 b3 part cball_annulus cCONDITION1_SY f0 f1 b3 cmatvec b3 creal_le ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b1
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((((continuous_on (\x. (lift (real_of_num (NUMERAL (BIT1 _0)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. ((% ((real_div ((real_sub (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (lift ((real_sub (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((continuous_on (\x. ((vector_add (lift (real_of_num (NUMERAL (BIT1 _0))))) ((% ((real_div ((real_sub (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (lift ((real_sub (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) = ((continuous_on (\x. ((vector_add (lift (real_of_num (NUMERAL (BIT1 _0))))) ((% ((real_div ((real_sub (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (lift ((real_sub (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c= c==> c/\ ccontinuous_on / clift creal_of_num cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / c% creal_div creal_sub creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 clift creal_sub cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / cvector_add clift creal_of_num cNUMERAL cBIT1 c_0 c% creal_div creal_sub creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 clift creal_sub cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / cvector_add clift creal_of_num cNUMERAL cBIT1 c_0 c% creal_div creal_sub creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 clift creal_sub cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
- |- (((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))))) ==> (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s)))))) = (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))))))
T c= c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_add * b0 b3 * b1 b3 b2 ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_add * b0 b3 * b1 b3 b2 ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_add * b0 b3 * b1 b3 b2
- (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))), ((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) |- (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) /\ (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially))
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially c==> c/\ c--> / * f0 b0 f1 csequentially c/\ c--> / * f2 b0 f3 csequentially c/\ c--> / * f4 b0 f5 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b0 * * part cINSERT * f2 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b0 * * part cINSERT * f4 b0 part cEMPTY c/\ c/\ c--> / * f0 b0 f1 csequentially c/\ c--> / * f2 b0 f3 csequentially c/\ c--> / * f4 b0 f5 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b0 * * part cINSERT * f2 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b0 * * part cINSERT * f4 b0 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b0 * f2 b0 * f4 b0 clift cdihV cvec cNUMERAL c_0 f1 f3 f5 csequentially
- |- (F ==> (~ (~ F)))
T c==> cF c~ c~ cF
- |- ((\n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n))))) n)
T * / ! c= cIN b1 * * part c.. f0 b0 c/\ c<= f0 b1 c<= b1 b0 f1
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))), (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially), (((--> x) a') sequentially) |- (((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ ((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially)) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f1 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1 c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c==> c--> f0 f1 csequentially c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially), (((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially), (((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially), (((--> x) a') sequentially) |- ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c==> c--> f0 f3 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))))) |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))))) /\ (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))))))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_add * b0 b3 * b1 b3 b2 c/\ ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_add * b0 b3 * b1 b3 b2 ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_add * b0 b3 * b1 b3 b2
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), ((a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) /\ (((--> x) a') sequentially))) |- (((a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) /\ (((--> x) a') sequentially))) /\ (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))))) sequentially))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ cIN f2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c/\ ! cIN * f3 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c--> f3 f2 csequentially c/\ c/\ cIN f2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c/\ ! cIN * f3 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c--> f3 f2 csequentially c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 crow cNUMERAL cBIT1 c_0 cvecmats f2 csequentially
- |- ((\p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n)))) p)
T * / c= cIN b0 * * part c.. f0 f1 c/\ c<= f0 b0 c<= b0 f1 f2
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (((--> x) a') sequentially) |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))))) = (((((--> (\n. (matvec ((\n. (vecmats (x n))) n)))) (matvec (vecmats a'))) sequentially) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((--> (\n. ((row i) ((\n. (vecmats (x n))) n)))) ((row i) (vecmats a'))) sequentially)))) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> c--> f0 f1 csequentially c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c==> c==> c--> / cmatvec * / cvecmats * f0 b1 b0 cmatvec cvecmats f1 csequentially ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c--> / crow b0 * / cvecmats * f0 b2 b1 crow b0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((((continuous_on (\x. (lift const1))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. ((% const1) (lift (ly (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((continuous_on (\x. ((vector_sub (lift const1)) ((% const1) (lift (ly (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) = ((continuous_on (\x. ((vector_sub (lift const1)) ((% const1) (lift (ly (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c= c==> c/\ ccontinuous_on / clift cconst1 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / c% cconst1 clift cly cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / cvector_sub clift cconst1 c% cconst1 clift cly cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / cvector_sub clift cconst1 c% cconst1 clift cly cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- (((!l. ((((--> (\n. (matvec ((\n. (vecmats (x n))) n)))) (matvec l)) sequentially) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((--> (\n. ((row i) ((\n. (vecmats (x n))) n)))) ((row i) l)) sequentially))))) ==> ((\l. ((((--> (\n. (matvec ((\n. (vecmats (x n))) n)))) (matvec l)) sequentially) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((--> (\n. ((row i) ((\n. (vecmats (x n))) n)))) ((row i) l)) sequentially))))) (vecmats a'))) = ((\l. ((((--> (\n. (matvec ((\n. (vecmats (x n))) n)))) (matvec l)) sequentially) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((--> (\n. ((row i) ((\n. (vecmats (x n))) n)))) ((row i) l)) sequentially))))) (vecmats a')))
T c= c==> ! c==> c--> / cmatvec * / cvecmats * f0 b2 b1 cmatvec b0 csequentially ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c--> / crow b1 * / cvecmats * f0 b3 b2 crow b1 b0 csequentially * / c==> c--> / cmatvec * / cvecmats * f0 b2 b1 cmatvec b0 csequentially ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c--> / crow b1 * / cvecmats * f0 b3 b2 crow b1 b0 csequentially cvecmats f1 * / c==> c--> / cmatvec * / cvecmats * f0 b2 b1 cmatvec b0 csequentially ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c--> / crow b1 * / cvecmats * f0 b3 b2 crow b1 b0 csequentially cvecmats f1
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially), (((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially), (((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially), (((--> x) a') sequentially) |- ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c==> c--> f0 f3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ (!s. (!c. (!f. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s))))) |- ((!s. (!c. (!f. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s))))) /\ (!c. (!f. (!s. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s))))))
T c==> ! ! ! c==> c/\ ccontinuous_on * * part co part clift b1 b0 ccontinuous_on b2 b0 ccontinuous_on / c% * b1 b3 * b2 b3 b0 c/\ ! ! ! c==> c/\ ccontinuous_on * * part co part clift b1 b0 ccontinuous_on b2 b0 ccontinuous_on / c% * b1 b3 * b2 b3 b0 ! ! ! c==> c/\ ccontinuous_on * * part co part clift b0 b2 ccontinuous_on b1 b2 ccontinuous_on / c% * b0 b3 * b1 b3 b2
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?v. t) = t)
T c= c? / f0 f0
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))) |- ((\l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))) (x n))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY * / c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY * f2 f3
+ |- ((((continuous_on (\x. (lift (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. (lift (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((continuous_on (\x. ((vector_sub (lift (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))))) (lift (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c/\ ccontinuous_on / clift cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / cvector_sub clift cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 clift creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> x) a') sequentially) |- (((((--> (\n. (matvec ((\n. (vecmats (x n))) n)))) (matvec (vecmats a'))) sequentially) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((--> (\n. ((row i) ((\n. (vecmats (x n))) n)))) ((row i) (vecmats a'))) sequentially)))) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c==> c--> f0 f3 csequentially c==> c==> c--> / cmatvec * / cvecmats * f0 b1 b0 cmatvec cvecmats f3 csequentially ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c--> / crow b0 * / cvecmats * f0 b2 b1 crow b0 cvecmats f3 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f3 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) |- ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f3 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))))) |- (((!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s)))) ==> ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s)))) g)) = ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s)))) g))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_add * b0 b3 * b1 b3 b2 c= c==> ! ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_add * f0 b2 * b0 b2 b1 * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_add * f0 b2 * b0 b2 b1 f1 * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_add * f0 b2 * b0 b2 b1 f1
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((continuous_on (\x. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x)))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 ccontinuous_on / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))), (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> x) a') sequentially) |- ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))))))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f1 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1 c==> c--> f0 f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ ((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))))
T c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((!m. (!n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n)))))) ==> ((\m. (!n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n)))))) m)) = ((\m. (!n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n)))))) m))
T c= c==> ! ! ! c= cIN b2 * * part c.. b0 b1 c/\ c<= b0 b2 c<= b2 b1 * / ! ! c= cIN b2 * * part c.. b0 b1 c/\ c<= b0 b2 c<= b2 b1 f0 * / ! ! c= cIN b2 * * part c.. b0 b1 c/\ c<= b0 b2 c<= b2 b1 f0
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))) |- ((((a' IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY)))))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY)))))))))) = ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c= c==> c==> cIN f2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 part cEMPTY
+ (~ (((real_mul a) b) = ((real_mul b) a))) |- ((~ (((real_mul a) b) = ((real_mul b) a))) /\ F)
T c==> c~ c= creal_mul f0 f1 creal_mul f1 f0 c/\ c~ c= creal_mul f0 f1 creal_mul f1 f0 cF
+ |- ((~ (((real_mul a) b) = ((real_mul b) a))) ==> F)
T c==> c~ c= creal_mul f0 f1 creal_mul f1 f0 cF
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially), (((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially), (((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially), (((--> x) a') sequentially) |- ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c==> c--> f0 f3 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), (k = (dimindex UNIV)), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), ((NUMERAL (BIT0 (BIT1 _0))) < k), (((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) |- ((((compact (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (lift o (\x. (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> (?x. ((x IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ (!y. ((y IN (GSPEC (\GEN%PVAR%7727. (?v. (((SETSPEC GEN%PVAR%7727) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((real_le (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats y))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats y))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats y))))))))) = (?x. ((x IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ (!y. ((y IN (GSPEC (\GEN%PVAR%7727. (?v. (((SETSPEC GEN%PVAR%7727) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((real_le (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats y))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats y))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats y)))))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= f2 cdimindex part cUNIV c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> c< cNUMERAL cBIT0 cBIT1 c_0 f2 c==> ctri_stable f2 f3 * * part c.. cNUMERAL c_0 c- f2 cNUMERAL cBIT1 c_0 f0 f1 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f2 c= c==> c/\ ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on * * part co part clift / ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c? / c/\ cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 ! c==> cIN b1 * part cGSPEC / c? / cSETSPEC b2 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b4 b3 part cball_annulus cCONDITION1_SY f0 f1 b3 cmatvec b3 creal_le ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b1 c? / c/\ cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 ! c==> cIN b1 * part cGSPEC / c? / cSETSPEC b2 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b4 b3 part cball_annulus cCONDITION1_SY f0 f1 b3 cmatvec b3 creal_le ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b1
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) |- ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))) g)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_sub * f0 b2 * b0 b2 b1 f1
+ |- (((!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))))) sequentially)) = ((!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (lift o (\n. ((((dihV (vec (NUMERAL _0))) (f n)) (g n)) (h n))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))))) sequentially)))
T c= c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> * * part co part clift / cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))) |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))) (NUMERAL (BIT1 _0)))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially cNUMERAL cBIT1 c_0
+ |- (((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))) = ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY)))))))))
T c= c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f0 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f1 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f1 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f1 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f1 b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f0 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f1 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f1 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f1 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f1 b0 part cEMPTY
- (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- ((\a. (!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially))))) a)
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially * / ! ! c==> c/\ c--> / * f0 b3 b0 csequentially c/\ c--> / * f1 b3 b1 csequentially c/\ c--> / * f2 b3 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b3 * * part cINSERT * f1 b3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b3 * * part cINSERT * f2 b3 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b3 * f1 b3 * f2 b3 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially f3
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> x) a') sequentially) |- ((((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x)))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))))) sequentially)) = (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x)))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))))) sequentially))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c==> c--> f0 f3 csequentially c= c==> c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f3 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 crow cNUMERAL cBIT1 c_0 cvecmats f3 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 csequentially c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 crow cNUMERAL cBIT1 c_0 cvecmats f3 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 csequentially
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))) |- (((((x n) IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))) = ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c= c==> c==> cIN * f2 f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f2 f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f2 f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f2 f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f2 f3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f2 f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f2 f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f2 f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f2 f3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f2 f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f2 f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f2 f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f2 f3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f2 f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f2 f3 part cEMPTY
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((continuous_on (\x. ((vector_add (lift (real_of_num (NUMERAL (BIT1 _0))))) ((% ((real_div ((real_sub (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (lift ((real_sub (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 ccontinuous_on / cvector_add clift creal_of_num cNUMERAL cBIT1 c_0 c% creal_div creal_sub creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 clift creal_sub cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (!x. (!a. (((a IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) /\ (((--> x) a) sequentially))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x)))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a))) ((row (NUMERAL (BIT1 _0))) (vecmats a))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a))))) sequentially))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b1 * part cGSPEC / c? / cSETSPEC b2 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b4 b3 part cball_annulus cCONDITION1_SY f0 f1 b3 cmatvec b3 c/\ ! cIN * b0 b2 * part cGSPEC / c? / cSETSPEC b3 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b5 c<= b5 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b5 b4 part cball_annulus cCONDITION1_SY f0 f1 b4 cmatvec b4 c--> b0 b1 csequentially c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * b0 b2 crow cNUMERAL cBIT1 c_0 cvecmats * b0 b2 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * b0 b2 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b1 csequentially
- (!f. (!c. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s))))) |- (((!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s))) ==> ((\s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s))) s)) = ((\s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s))) s))
T c==> ! ! ! c==> ccontinuous_on b0 b2 ccontinuous_on / c% b1 * b0 b3 b2 c= c==> ! c==> ccontinuous_on f0 b0 ccontinuous_on / c% f1 * f0 b1 b0 * / c==> ccontinuous_on f0 b0 ccontinuous_on / c% f1 * f0 b1 b0 f2 * / c==> ccontinuous_on f0 b0 ccontinuous_on / c% f1 * f0 b1 b0 f2
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), (k = (dimindex UNIV)), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (((compact (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (lift o (\x. (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> (?x. ((x IN (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ (!y. ((y IN (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((real_le (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats y))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats y))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats y))))))))), ((NUMERAL (BIT0 (BIT1 _0))) < k), (((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) |- (?x. ((x IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ (!y. ((y IN (GSPEC (\GEN%PVAR%7727. (?v. (((SETSPEC GEN%PVAR%7727) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((real_le (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats y))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats y))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats y))))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= f2 cdimindex part cUNIV c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> c==> c/\ ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on * * part co part clift / ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c? / c/\ cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 ! c==> cIN b1 * part cGSPEC / c? / cSETSPEC b2 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b4 b3 part cball_annulus cCONDITION1_SY f0 f1 b3 cmatvec b3 creal_le ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b1 c==> c< cNUMERAL cBIT0 cBIT1 c_0 f2 c==> ctri_stable f2 f3 * * part c.. cNUMERAL c_0 c- f2 cNUMERAL cBIT1 c_0 f0 f1 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f2 c? / c/\ cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 ! c==> cIN b1 * part cGSPEC / c? / cSETSPEC b2 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b4 b3 part cball_annulus cCONDITION1_SY f0 f1 b3 cmatvec b3 creal_le ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b1
- (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))), ((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) |- ((!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) /\ (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially))
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially c==> c/\ c--> / * f0 b0 f1 csequentially c/\ c--> / * f2 b0 f3 csequentially c/\ c--> / * f4 b0 f5 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b0 * * part cINSERT * f2 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b0 * * part cINSERT * f4 b0 part cEMPTY c/\ ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially c--> / clift cdihV cvec cNUMERAL c_0 * f0 b0 * f2 b0 * f4 b0 clift cdihV cvec cNUMERAL c_0 f1 f3 f5 csequentially
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) |- ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY)))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))) = T)
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c= c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f3 part cEMPTY cT
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))), (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially), (((--> x) a') sequentially) |- ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))))))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f1 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1 c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c==> c--> f0 f1 csequentially c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))), (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially), (((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially), (((--> x) a') sequentially) |- ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f1 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1 c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c==> c--> f0 f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((((continuous_on (\x. (lift (real_of_num (NUMERAL (BIT1 _0)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. (lift ((real_sub const1) ((real_mul const1) (ly (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((continuous_on (\x. ((vector_add (lift (real_of_num (NUMERAL (BIT1 _0))))) (lift ((real_sub const1) ((real_mul const1) (ly (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) = ((continuous_on (\x. ((vector_add (lift (real_of_num (NUMERAL (BIT1 _0))))) (lift ((real_sub const1) ((real_mul const1) (ly (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c= c==> c/\ ccontinuous_on / clift creal_of_num cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift creal_sub cconst1 creal_mul cconst1 cly cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / cvector_add clift creal_of_num cNUMERAL cBIT1 c_0 clift creal_sub cconst1 creal_mul cconst1 cly cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / cvector_add clift creal_of_num cNUMERAL cBIT1 c_0 clift creal_sub cconst1 creal_mul cconst1 cly cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), ((a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) /\ (((--> x) a') sequentially))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) |- (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x)))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))))) sequentially)
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ cIN f2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c/\ ! cIN * f3 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c--> f3 f2 csequentially c==> cIN f2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats f2 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 csequentially
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((((continuous_on (\x. ((row (NUMERAL (BIT1 _0))) (vecmats x)))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((continuous_on (\x. (lift (vector_norm ((row (NUMERAL (BIT1 _0))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) = ((continuous_on (\x. (lift (vector_norm ((row (NUMERAL (BIT1 _0))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c= c==> ccontinuous_on / crow cNUMERAL cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift cvector_norm crow cNUMERAL cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift cvector_norm crow cNUMERAL cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
- |- (((!B. (!C. (!A. ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)))) ==> ((\B. (!C. (!A. ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)))) B)) = ((\B. (!C. (!A. ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)))) B))
T c= c==> ! ! ! c==> c~ ! c= c\/ c= b3 b2 c\/ c= b3 b0 c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 cF * / ! ! c==> c~ ! c= c\/ c= b3 b2 c\/ c= b3 b0 c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 cF f0 * / ! ! c==> c~ ! c= c\/ c= b3 b2 c\/ c= b3 b0 c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 cF f0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))))) |- ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))) s)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_add * b0 b3 * b1 b3 b2 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_add * f0 b1 * f1 b1 b0 f2
- (~ F), (x = A), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 c/\ c~ cF cF
+ |- ((\s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s))) s)
T * / c==> ccontinuous_on f0 b0 ccontinuous_on / c% f1 * f0 b1 b0 f2
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((((a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) /\ (((--> x) a') sequentially))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))))) sequentially)) = T)
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c= c==> c/\ cIN f2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c/\ ! cIN * f3 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c--> f3 f2 csequentially c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 crow cNUMERAL cBIT1 c_0 cvecmats f2 csequentially cT
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f3 part cEMPTY
+ |- (((!c. ((lift ((real_mul c) x)) = ((% c) (lift x)))) ==> ((\c. ((lift ((real_mul c) x)) = ((% c) (lift x)))) c)) = ((\c. ((lift ((real_mul c) x)) = ((% c) (lift x)))) c))
T c= c==> ! c= clift creal_mul b0 f0 c% b0 clift f0 * / c= clift creal_mul b0 f0 c% b0 clift f0 f1 * / c= clift creal_mul b0 f0 c% b0 clift f0 f1
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))), (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially), (((--> x) a') sequentially) |- ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY)))))))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f1 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1 c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c==> c--> f0 f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
- |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) = (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> ((((row i) v) IN ball_annulus) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus)) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> q')))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> ((((row i) v) IN ball_annulus) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus)) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> q'))))
T c= c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 c= cIN crow f0 f1 part cball_annulus f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 cIN crow f0 f1 part cball_annulus c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 c= cIN crow f0 f1 part cball_annulus f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 cIN crow f0 f1 part cball_annulus c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 f2
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
+ |- ((((((--> (\n. (matvec ((\n. (vecmats (x n))) n)))) (matvec (vecmats a'))) sequentially) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((--> (\n. ((row i) ((\n. (vecmats (x n))) n)))) ((row i) (vecmats a'))) sequentially)))) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))))) = ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))))
T c= c==> c==> c--> / cmatvec * / cvecmats * f0 b1 b0 cmatvec cvecmats f1 csequentially ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c--> / crow b0 * / cvecmats * f0 b2 b1 crow b0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
- (x = C), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- (~ (C = B))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c~ c= f1 f3
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((continuous_on (\x. (lift const1))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. ((% const1) (lift (ly (vector_norm ((row (NUMERAL (BIT1 _0))) (vecmats x)))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c/\ ccontinuous_on / clift cconst1 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / c% cconst1 clift cly cvector_norm crow cNUMERAL cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
- (!s. (!c. (!f. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s))))), (((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) |- ((!s. (!c. (!f. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s))))) /\ ((continuous_on (\x. ((% (c x)) (f x)))) s))
T c==> ! ! ! c==> c/\ ccontinuous_on * * part co part clift b1 b0 ccontinuous_on b2 b0 ccontinuous_on / c% * b1 b3 * b2 b3 b0 c==> c/\ ccontinuous_on * * part co part clift f0 f1 ccontinuous_on f2 f1 c/\ ! ! ! c==> c/\ ccontinuous_on * * part co part clift b1 b0 ccontinuous_on b2 b0 ccontinuous_on / c% * b1 b3 * b2 b3 b0 ccontinuous_on / c% * f0 b0 * f2 b0 f1
- (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- ((!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially))) = T)
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially c= ! c==> c/\ c--> / * f0 b1 f1 csequentially c/\ c--> / * f2 b1 f3 csequentially c/\ c--> / * f4 b1 b0 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b1 * * part cINSERT * f2 b1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b1 * * part cINSERT * f4 b1 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b1 * f2 b1 * f4 b1 clift cdihV cvec cNUMERAL c_0 f1 f3 b0 csequentially cT
+ (k = (dimindex UNIV)), ((NUMERAL (BIT0 (BIT1 _0))) < k), (((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) |- ((((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) ==> (?x. ((x IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ (!y. ((y IN (GSPEC (\GEN%PVAR%7727. (?v. (((SETSPEC GEN%PVAR%7727) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((real_le (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats y))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats y))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats y))))))))) = (((((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) ==> ((k = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))) ==> (?x. ((x IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ (!y. ((y IN (GSPEC (\GEN%PVAR%7727. (?v. (((SETSPEC GEN%PVAR%7727) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((real_le (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats y))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats y))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats y))))))))))
T c==> c= f0 cdimindex part cUNIV c==> c< cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ctri_stable f0 f1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2 f3 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f0 c= c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c? / c/\ cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 ! c==> cIN b1 * part cGSPEC / c? / cSETSPEC b2 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cdimindex part cUNIV cIN crow b4 b3 part cball_annulus cCONDITION1_SY f2 f3 b3 cmatvec b3 creal_le ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b1 c==> c==> ctri_stable f0 f1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2 f3 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f0 c/\ c= f0 cNUMERAL cBIT1 cBIT1 c_0 c< cNUMERAL cBIT0 cBIT1 c_0 f0 c? / c/\ cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 ! c==> cIN b1 * part cGSPEC / c? / cSETSPEC b2 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cdimindex part cUNIV cIN crow b4 b3 part cball_annulus cCONDITION1_SY f2 f3 b3 cmatvec b3 creal_le ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b1
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) |- ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) = ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c= c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((((continuous_on (\x. (lift (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. (lift (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((continuous_on (\x. ((vector_sub (lift (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))))) (lift (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) = ((continuous_on (\x. ((vector_sub (lift (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))))) (lift (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c= c==> c/\ ccontinuous_on / clift cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / cvector_sub clift cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 clift creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / cvector_sub clift cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 clift creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
- (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- (((!h. (!a. (!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))) ==> ((\h. (!a. (!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))) h)) = ((\h. (!a. (!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))) h))
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially c= c==> ! ! ! ! c==> c/\ c--> / * f0 b4 b1 csequentially c/\ c--> / * f1 b4 b2 csequentially c/\ c--> / * b0 b4 b3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b4 * * part cINSERT * f1 b4 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b4 * * part cINSERT * b0 b4 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b4 * f1 b4 * b0 b4 clift cdihV cvec cNUMERAL c_0 b1 b2 b3 csequentially * / ! ! ! c==> c/\ c--> / * f0 b4 b1 csequentially c/\ c--> / * f1 b4 b2 csequentially c/\ c--> / * b0 b4 b3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b4 * * part cINSERT * f1 b4 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b4 * * part cINSERT * b0 b4 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b4 * f1 b4 * b0 b4 clift cdihV cvec cNUMERAL c_0 b1 b2 b3 csequentially f2 * / ! ! ! c==> c/\ c--> / * f0 b4 b1 csequentially c/\ c--> / * f1 b4 b2 csequentially c/\ c--> / * b0 b4 b3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b4 * * part cINSERT * f1 b4 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b4 * * part cINSERT * b0 b4 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b4 * f1 b4 * b0 b4 clift cdihV cvec cNUMERAL c_0 b1 b2 b3 csequentially f2
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((((continuous_on (lift o (\x. (rho (vector_norm ((row (NUMERAL (BIT1 _0))) (vecmats x))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((continuous_on (\x. ((% (rho (vector_norm ((row (NUMERAL (BIT1 _0))) (vecmats x))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) = ((continuous_on (\x. ((% (rho (vector_norm ((row (NUMERAL (BIT1 _0))) (vecmats x))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c= c==> c/\ ccontinuous_on * * part co part clift / crho cvector_norm crow cNUMERAL cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / c% crho cvector_norm crow cNUMERAL cBIT1 c_0 cvecmats b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / c% crho cvector_norm crow cNUMERAL cBIT1 c_0 cvecmats b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))), (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> x) a') sequentially) |- (((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ ((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially)) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY)))))))))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f1 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1 c==> c--> f0 f1 csequentially c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
- |- ((~ (~ F)) ==> F)
T c==> c~ c~ cF cF
- (!f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s)))) |- ((\s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s))) s)
T c==> ! ! c==> ccontinuous_on b0 b1 ccontinuous_on / clift cvector_norm * b0 b2 b1 * / c==> ccontinuous_on f0 b0 ccontinuous_on / clift cvector_norm * f0 b1 b0 f1
- (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- ((!h. (!a. (!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))) = T)
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially c= ! ! ! ! c==> c/\ c--> / * f0 b4 b1 csequentially c/\ c--> / * f1 b4 b2 csequentially c/\ c--> / * b0 b4 b3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b4 * * part cINSERT * f1 b4 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b4 * * part cINSERT * b0 b4 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b4 * f1 b4 * b0 b4 clift cdihV cvec cNUMERAL c_0 b1 b2 b3 csequentially cT
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))))) |- (((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ |- ((((--> (\n. (matvec ((\n. (vecmats (x n))) n)))) (matvec (vecmats a'))) sequentially) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((--> (\n. ((row i) ((\n. (vecmats (x n))) n)))) ((row i) (vecmats a'))) sequentially))))
T c==> c--> / cmatvec * / cvecmats * f0 b1 b0 cmatvec cvecmats f1 csequentially ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c--> / crow b0 * / cvecmats * f0 b2 b1 crow b0 cvecmats f1 csequentially
- |- (((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) ==> (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))))) = (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))))
T c= c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))), (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> x) a') sequentially) |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f1 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1 c==> c--> f0 f1 csequentially c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) /\ (((--> x) a') sequentially)), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) |- (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x)))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))))) sequentially)
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ ! cIN * f2 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c--> f2 f3 csequentially c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats * f2 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f2 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f2 b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats f3 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially), (((--> x) a') sequentially) |- ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY)))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f3 csequentially c==> c--> f0 f3 csequentially c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ |- ((\v2. ((((tau3 v1) v2) v3) = ((real_add ((real_mul (rho (vector_norm v1))) ((((dihV (vec (NUMERAL _0))) v1) v2) v3))) ((real_add ((real_mul (rho (vector_norm v2))) ((((dihV (vec (NUMERAL _0))) v2) v3) v1))) ((real_sub ((real_mul (rho (vector_norm v3))) ((((dihV (vec (NUMERAL _0))) v3) v1) v2))) ((real_add pi) sol0)))))) v2)
T * / c= ctau3 f0 b0 f1 creal_add creal_mul crho cvector_norm f0 cdihV cvec cNUMERAL c_0 f0 b0 f1 creal_add creal_mul crho cvector_norm b0 cdihV cvec cNUMERAL c_0 b0 f1 f0 creal_sub creal_mul crho cvector_norm f1 cdihV cvec cNUMERAL c_0 f1 f0 b0 creal_add cpi csol0 f2
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> x) a') sequentially) |- ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c==> c--> f0 f3 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f3 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- (((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x)))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))))) sequentially))
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially c==> c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 crow cNUMERAL cBIT1 c_0 cvecmats f1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially
+ |- (((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))))))))))) = (((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ ((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially)) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))))))))))))
T c= c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))), (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
- |- ((!C. (!A. (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B))))))) = T)
T c= ! ! ! c= c\/ c= b2 b1 c\/ c= b2 f0 c= b2 b0 c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cT
+ |- (((((--> (\n. (matvec (x n)))) (matvec l)) sequentially) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((--> (\n. ((row i) (x n)))) ((row i) l)) sequentially)))) = T)
T c= c==> c--> / cmatvec * f0 b0 cmatvec f1 csequentially ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c--> / crow b0 * f0 b1 crow b0 f1 csequentially cT
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) /\ (((--> x) a') sequentially))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x)))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))))) sequentially))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ cIN f2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c/\ ! cIN * f3 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c--> f3 f2 csequentially c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats f2 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 csequentially
- (((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)) |- ((((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)) /\ (((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)))
T c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c/\ c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF
- ((((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((k = (dimindex UNIV)) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))) |- ((((((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((k = (dimindex UNIV)) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))) ==> (compact (GSPEC (\GEN%PVAR%7612. (?v. (((SETSPEC GEN%PVAR%7612) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> (compact (GSPEC (\GEN%PVAR%7612. (?v. (((SETSPEC GEN%PVAR%7612) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c/\ ctri_stable f0 f1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2 f3 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f0 c/\ c= f0 cdimindex part cUNIV c< cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c==> c/\ ctri_stable f0 f1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2 f3 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f0 c/\ c= f0 cdimindex part cUNIV c< cNUMERAL cBIT0 cBIT1 c_0 f0 ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1 ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((continuous_on (\x. (lift (real_of_num (NUMERAL (BIT1 _0)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. (lift ((real_sub const1) ((real_mul const1) (ly (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c/\ ccontinuous_on / clift creal_of_num cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift creal_sub cconst1 creal_mul cconst1 cly cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ |- ((((continuous_on (\x. (lift (real_of_num (NUMERAL (BIT1 _0)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. ((% ((real_div ((real_sub (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (lift ((real_sub (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((continuous_on (\x. ((vector_add (lift (real_of_num (NUMERAL (BIT1 _0))))) ((% ((real_div ((real_sub (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (lift ((real_sub (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c/\ ccontinuous_on / clift creal_of_num cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / c% creal_div creal_sub creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 clift creal_sub cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / cvector_add clift creal_of_num cNUMERAL cBIT1 c_0 c% creal_div creal_sub creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 clift creal_sub cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
- (x = C), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- (~ (C = A))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c~ c= f1 f2
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))) = T)
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c= c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f3 part cEMPTY cT
+ |- ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s)))) g)
T * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_add * f0 b2 * b0 b2 b1 f1
+ |- ((\y. ((rho y) = ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_sub const1) ((real_mul const1) (ly y)))))) y)
T * / c= crho b0 creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_sub cconst1 creal_mul cconst1 cly b0 f0
- |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
- |- ((\m. (!n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n)))))) m)
T * / ! ! c= cIN b2 * * part c.. b0 b1 c/\ c<= b0 b2 c<= b2 b1 f0
- (~ ((GSPEC (\GEN%PVAR%7724. (?v. (((SETSPEC GEN%PVAR%7724) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))) = EMPTY)) |- ((EMPTY = (GSPEC (\GEN%PVAR%7724. (?v. (((SETSPEC GEN%PVAR%7724) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) = F)
T c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 part cEMPTY c= c= part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 cF
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) |- ((\n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) n)
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 * / cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 f3
+ |- (((continuous_on (\x. ((vector_sub (lift const1)) ((% const1) (lift (ly (vector_norm ((row (NUMERAL (BIT1 _0))) (vecmats x))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) = (((continuous_on (\x. (lift (real_of_num (NUMERAL (BIT1 _0)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. (lift ((real_sub const1) ((real_mul const1) (ly (vector_norm ((row (NUMERAL (BIT1 _0))) (vecmats x))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))))
T c= ccontinuous_on / cvector_sub clift cconst1 c% cconst1 clift cly cvector_norm crow cNUMERAL cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c/\ ccontinuous_on / clift creal_of_num cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift creal_sub cconst1 creal_mul cconst1 cly cvector_norm crow cNUMERAL cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially))))))
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially ! ! ! ! c==> c/\ c--> / * b1 b4 f0 csequentially c/\ c--> / * b2 b4 f1 csequentially c/\ c--> / * b3 b4 b0 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b1 b4 * * part cINSERT * b2 b4 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b1 b4 * * part cINSERT * b3 b4 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b1 b4 * b2 b4 * b3 b4 clift cdihV cvec cNUMERAL c_0 f0 f1 b0 csequentially
+ |- ((\i. (!s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s)))) i)
T * / ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV ccontinuous_on / crow b0 cvecmats b2 b1 f0
+ |- (((!f. (!s. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s)))) ==> ((\f. (!s. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s)))) f)) = ((\f. (!s. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s)))) f))
T c= c==> ! ! c==> c/\ ccontinuous_on * * part co part clift f0 b1 ccontinuous_on b0 b1 ccontinuous_on / c% * f0 b2 * b0 b2 b1 * / ! c==> c/\ ccontinuous_on * * part co part clift f0 b1 ccontinuous_on b0 b1 ccontinuous_on / c% * f0 b2 * b0 b2 b1 f1 * / ! c==> c/\ ccontinuous_on * * part co part clift f0 b1 ccontinuous_on b0 b1 ccontinuous_on / c% * f0 b2 * b0 b2 b1 f1
+ |- (((continuous_on (\x. ((vector_add (lift (real_of_num (NUMERAL (BIT1 _0))))) (lift ((real_sub const1) ((real_mul const1) (ly (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) = ((continuous_on (lift o (\x. (rho (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c= ccontinuous_on / cvector_add clift creal_of_num cNUMERAL cBIT1 c_0 clift creal_sub cconst1 creal_mul cconst1 cly cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on * * part co part clift / crho cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((continuous_on (\x. ((% ((real_div ((real_sub (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((vector_sub (lift (vector_norm ((row (NUMERAL (BIT1 _0))) (vecmats x))))) (lift (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 ccontinuous_on / c% creal_div creal_sub creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_sub clift cvector_norm crow cNUMERAL cBIT1 c_0 cvecmats b0 clift creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))), (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially), (((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially), (((--> x) a') sequentially) |- ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f1 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1 c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c==> c--> f0 f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))))), (((continuous_on f) s) /\ ((continuous_on g) s)) |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))))) /\ ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_add * b0 b3 * b1 b3 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 c/\ ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_add * b0 b3 * b1 b3 b2 ccontinuous_on / cvector_add * f0 b0 * f2 b0 f1
+ |- (((!s. (((continuous_on f) s) = (!x. (!a. (((a IN s) /\ ((!n. ((x n) IN s)) /\ (((--> x) a) sequentially))) ==> (((--> (f o x)) (f a)) sequentially)))))) ==> ((\s. (((continuous_on f) s) = (!x. (!a. (((a IN s) /\ ((!n. ((x n) IN s)) /\ (((--> x) a) sequentially))) ==> (((--> (f o x)) (f a)) sequentially)))))) s)) = ((\s. (((continuous_on f) s) = (!x. (!a. (((a IN s) /\ ((!n. ((x n) IN s)) /\ (((--> x) a) sequentially))) ==> (((--> (f o x)) (f a)) sequentially)))))) s))
T c= c==> ! c= ccontinuous_on f0 b0 ! ! c==> c/\ cIN b2 b0 c/\ ! cIN * b1 b3 b0 c--> b1 b2 csequentially c--> * * part co f0 b1 * f0 b2 csequentially * / c= ccontinuous_on f0 b0 ! ! c==> c/\ cIN b2 b0 c/\ ! cIN * b1 b3 b0 c--> b1 b2 csequentially c--> * * part co f0 b1 * f0 b2 csequentially f1 * / c= ccontinuous_on f0 b0 ! ! c==> c/\ cIN b2 b0 c/\ ! cIN * b1 b3 b0 c--> b1 b2 csequentially c--> * * part co f0 b1 * f0 b2 csequentially f1
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) |- ((collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c= ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY cF
- (~ F), (x = C), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ cF cF
- (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- ((!a. (!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially))))) = T)
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially c= ! ! ! c==> c/\ c--> / * f0 b3 b0 csequentially c/\ c--> / * f1 b3 b1 csequentially c/\ c--> / * f2 b3 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b3 * * part cINSERT * f1 b3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b3 * * part cINSERT * f2 b3 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b3 * f1 b3 * f2 b3 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially cT
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((continuous_on (\x. ((% (rho (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 ccontinuous_on / c% crho cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
- |- (((!k. (!x. ((lift ((sum k) x)) = ((vsum k) (lift o x))))) ==> ((\k. (!x. ((lift ((sum k) x)) = ((vsum k) (lift o x))))) k)) = ((\k. (!x. ((lift ((sum k) x)) = ((vsum k) (lift o x))))) k))
T c= c==> ! ! c= clift csum b0 b1 cvsum b0 * * part co part clift b1 * / ! c= clift csum b0 b1 cvsum b0 * * part co part clift b1 f0 * / ! c= clift csum b0 b1 cvsum b0 * * part co part clift b1 f0
- |- (((!i. (!s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s)))) ==> (!i. (!s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s))))) = (!i. (!s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s)))))
T c= c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV ccontinuous_on / crow b0 cvecmats b2 b1 ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV ccontinuous_on / crow b0 cvecmats b2 b1 ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV ccontinuous_on / crow b0 cvecmats b2 b1
+ |- ((\v1. (!v2. ((((tau3 v1) v2) v3) = ((real_add ((real_mul (rho (vector_norm v1))) ((((dihV (vec (NUMERAL _0))) v1) v2) v3))) ((real_add ((real_mul (rho (vector_norm v2))) ((((dihV (vec (NUMERAL _0))) v2) v3) v1))) ((real_sub ((real_mul (rho (vector_norm v3))) ((((dihV (vec (NUMERAL _0))) v3) v1) v2))) ((real_add pi) sol0))))))) v1)
T * / ! c= ctau3 b0 b1 f0 creal_add creal_mul crho cvector_norm b0 cdihV cvec cNUMERAL c_0 b0 b1 f0 creal_add creal_mul crho cvector_norm b1 cdihV cvec cNUMERAL c_0 b1 f0 b0 creal_sub creal_mul crho cvector_norm f0 cdihV cvec cNUMERAL c_0 f0 b0 b1 creal_add cpi csol0 f1
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) |- (((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY)))))))) = ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f0 part cEMPTY c= c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f0 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f1 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f1 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f1 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f1 b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f0 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f1 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f1 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f1 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f1 b0 part cEMPTY
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), (~ ((GSPEC (\GEN%PVAR%7724. (?v. (((SETSPEC GEN%PVAR%7724) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))) = EMPTY)), (k = (dimindex UNIV)), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), ((NUMERAL (BIT0 (BIT1 _0))) < k), (((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) |- (?x. ((x IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ (!y. ((y IN (GSPEC (\GEN%PVAR%7727. (?v. (((SETSPEC GEN%PVAR%7727) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((real_le (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats y))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats y))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats y))))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 part cEMPTY c==> c= f2 cdimindex part cUNIV c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> c< cNUMERAL cBIT0 cBIT1 c_0 f2 c==> ctri_stable f2 f3 * * part c.. cNUMERAL c_0 c- f2 cNUMERAL cBIT1 c_0 f0 f1 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f2 c? / c/\ cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 ! c==> cIN b1 * part cGSPEC / c? / cSETSPEC b2 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b4 b3 part cball_annulus cCONDITION1_SY f0 f1 b3 cmatvec b3 creal_le ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b1
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((continuous_on (\x. ((vector_add (lift ((real_mul (rho (vector_norm ((row (NUMERAL (BIT1 _0))) (vecmats x))))) ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (lift ((real_mul (rho (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))))) ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 _0))) (vecmats x)))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. (lift ((real_mul (rho (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))) ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c/\ ccontinuous_on / cvector_add clift creal_mul crho cvector_norm crow cNUMERAL cBIT1 c_0 cvecmats b0 cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 clift creal_mul crho cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift creal_mul crho cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
- (((continuous_on f) s) /\ ((continuous_on g) s)) |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))))) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_add * b0 b3 * b1 b3 b2 ccontinuous_on / cvector_add * f0 b0 * f2 b0 f1
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))), (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> x) a') sequentially) |- ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f2 f3 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f1 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1 c==> c--> f0 f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((((continuous_on (\x. (lift (ly (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((continuous_on (\x. ((% const1) (lift (ly (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) = ((continuous_on (\x. ((% const1) (lift (ly (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c= c==> ccontinuous_on / clift cly cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / c% cconst1 clift cly cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / c% cconst1 clift cly cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially), (((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially), (((--> x) a') sequentially) |- ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f3 csequentially c==> c--> f0 f3 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT1 (BIT1 _0))))) = (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) <= (dimindex UNIV))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c= c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c<= cNUMERAL cBIT1 cBIT1 c_0 cdimindex part cUNIV
+ (!s. (!c. (!f. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s))))) |- ((\s. (!c. (!f. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s))))) s)
T c==> ! ! ! c==> c/\ ccontinuous_on * * part co part clift b1 b0 ccontinuous_on b2 b0 ccontinuous_on / c% * b1 b3 * b2 b3 b0 * / ! ! c==> c/\ ccontinuous_on * * part co part clift b1 b0 ccontinuous_on b2 b0 ccontinuous_on / c% * b1 b3 * b2 b3 b0 f0
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) |- ((collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f0 part cEMPTY c= ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f0 part cEMPTY cF
+ |- (((!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s))) ==> ((\s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s))) s)) = ((\s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s))) s))
T c= c==> ! c==> ccontinuous_on f0 b0 ccontinuous_on / clift cvector_norm * f0 b1 b0 * / c==> ccontinuous_on f0 b0 ccontinuous_on / clift cvector_norm * f0 b1 b0 f1 * / c==> ccontinuous_on f0 b0 ccontinuous_on / clift cvector_norm * f0 b1 b0 f1
- (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))) |- (((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((((--> x) a') sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))))))))))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c==> ! cIN * f3 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c==> c--> f3 f2 csequentially c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 c_0 cvecmats f2 csequentially c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 part cEMPTY
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) |- (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY
+ |- ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))) s)
T * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_add * f0 b1 * f1 b1 b0 f2
+ (!s. (!c. (!f. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s))))) |- (!f. (!s. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s))))
T c==> ! ! ! c==> c/\ ccontinuous_on * * part co part clift b1 b0 ccontinuous_on b2 b0 ccontinuous_on / c% * b1 b3 * b2 b3 b0 ! ! c==> c/\ ccontinuous_on * * part co part clift f0 b1 ccontinuous_on b0 b1 ccontinuous_on / c% * f0 b2 * b0 b2 b1
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))), (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (!a. (((a IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) /\ (((--> x) a) sequentially))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x)))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a))) ((row (NUMERAL (BIT1 _0))) (vecmats a))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a))))) sequentially)))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 ! c==> c/\ cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ ! cIN * f2 b1 * part cGSPEC / c? / cSETSPEC b2 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b4 b3 part cball_annulus cCONDITION1_SY f0 f1 b3 cmatvec b3 c--> f2 b0 csequentially c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f2 b1 crow cNUMERAL cBIT1 c_0 cvecmats * f2 b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f2 b1 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 csequentially
+ |- ((((continuous_on (\x. (lift (real_of_num (NUMERAL (BIT1 _0)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. (lift ((real_sub const1) ((real_mul const1) (ly (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((continuous_on (\x. ((vector_add (lift (real_of_num (NUMERAL (BIT1 _0))))) (lift ((real_sub const1) ((real_mul const1) (ly (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x)))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c/\ ccontinuous_on / clift creal_of_num cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift creal_sub cconst1 creal_mul cconst1 cly cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / cvector_add clift creal_of_num cNUMERAL cBIT1 c_0 clift creal_sub cconst1 creal_mul cconst1 cly cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))) |- (((((x n) IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))) = ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c= c==> c==> cIN * f2 f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f2 f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f2 f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f2 f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f2 f3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f2 f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f2 f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f2 f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f2 f3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f2 f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f2 f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f2 f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f2 f3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f2 f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f2 f3 part cEMPTY
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ |- ((\s. (!c. ((continuous_on (\x. c)) s))) s)
T * / ! ccontinuous_on / b1 b0 f0
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))), (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) |- ((!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))) = ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f0 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f0 part cEMPTY c= ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f1 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f1 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f1 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f1 b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f0 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f1 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f1 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f1 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f1 b0 part cEMPTY
+ |- (((!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (lift o (\n. ((((dihV (vec (NUMERAL _0))) (f n)) (g n)) (h n))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))))) sequentially)) = (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))))) sequentially))
T c= c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> * * part co part clift / cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially
+ |- (((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY)))))))))))) = (((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ ((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially)) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY)))))))))))))
T c= c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) |- ((a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((((--> x) a') sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c/\ cIN f2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c==> ! cIN * f3 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c==> c--> f3 f2 csequentially c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 c_0 cvecmats f2 csequentially c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 part cEMPTY
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((((continuous_on (\x. ((vector_sub (lift (vector_norm ((row (NUMERAL (BIT1 _0))) (vecmats x))))) (lift (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((continuous_on (\x. ((% ((real_div ((real_sub (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((vector_sub (lift (vector_norm ((row (NUMERAL (BIT1 _0))) (vecmats x))))) (lift (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) = ((continuous_on (\x. ((% ((real_div ((real_sub (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((vector_sub (lift (vector_norm ((row (NUMERAL (BIT1 _0))) (vecmats x))))) (lift (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c= c==> ccontinuous_on / cvector_sub clift cvector_norm crow cNUMERAL cBIT1 c_0 cvecmats b0 clift creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / c% creal_div creal_sub creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_sub clift cvector_norm crow cNUMERAL cBIT1 c_0 cvecmats b0 clift creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / c% creal_div creal_sub creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_sub clift cvector_norm crow cNUMERAL cBIT1 c_0 cvecmats b0 clift creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((continuous_on (\x. (lift (real_of_num (NUMERAL (BIT1 _0)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. (lift ((real_sub const1) ((real_mul const1) (ly (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c/\ ccontinuous_on / clift creal_of_num cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift creal_sub cconst1 creal_mul cconst1 cly cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))))) |- ((!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))) = T)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_add * b0 b3 * b1 b3 b2 c= ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_add * f0 b1 * f1 b1 b0 cT
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) |- (((a' IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY)))))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c==> c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))) |- ((((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ ((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially)) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))) = ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((continuous_on (lift o (\x. (rho (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c/\ ccontinuous_on * * part co part clift / crho cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ |- (((!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (lift o (\n. ((((dihV (vec (NUMERAL _0))) (f n)) (g n)) (h n))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x)))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))))) sequentially)) = (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x)))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))))) sequentially))
T c= c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> * * part co part clift / cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 crow cNUMERAL cBIT1 c_0 cvecmats f1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 crow cNUMERAL cBIT1 c_0 cvecmats f1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially
- |- ((p IN (m .. n)) = ((m <= p) /\ (p <= n)))
T c= cIN f0 * * part c.. f1 f2 c/\ c<= f1 f0 c<= f0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((continuous_on (\x. ((vector_add (lift (real_of_num (NUMERAL (BIT1 _0))))) (lift ((real_sub const1) ((real_mul const1) (ly (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x)))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) = ((continuous_on (lift o (\x. (rho (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c= ccontinuous_on / cvector_add clift creal_of_num cNUMERAL cBIT1 c_0 clift creal_sub cconst1 creal_mul cconst1 cly cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on * * part co part clift / crho cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
- |- ((\x. ((lift ((sum k) x)) = ((vsum k) (lift o x)))) x)
T * / c= clift csum f0 b0 cvsum f0 * * part co part clift b0 f1
+ |- ((((continuous_on (lift o (\x. (rho (vector_norm ((row (NUMERAL (BIT1 _0))) (vecmats x))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((continuous_on (\x. ((% (rho (vector_norm ((row (NUMERAL (BIT1 _0))) (vecmats x))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c/\ ccontinuous_on * * part co part clift / crho cvector_norm crow cNUMERAL cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / c% crho cvector_norm crow cNUMERAL cBIT1 c_0 cvecmats b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ ((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT1 (BIT1 _0)))))
T c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
+ |- (((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))
T c==> c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY
+ |- (((!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (lift o (\n. ((((dihV (vec (NUMERAL _0))) (f n)) (g n)) (h n))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x)))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))))) sequentially)) = (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats (x x)))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x x)))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x x))))))) (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))))) sequentially))
T c= c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> * * part co part clift / cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats f1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c--> / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats f1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))), (((--> x) a') sequentially) |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY)))))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c==> c--> f0 f3 csequentially c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f3 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))) |- ((((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ ((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially)) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))))))))))) = ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY)))))))))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))) |- ((((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ ((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially)) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY)))))))))))) = ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))))))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) |- (((a' IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY)))))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c==> c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
- (((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) |- ((!s. (!c. (!f. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s))))) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s))
T c==> c/\ ccontinuous_on * * part co part clift f0 f1 ccontinuous_on f2 f1 c==> ! ! ! c==> c/\ ccontinuous_on * * part co part clift b1 b0 ccontinuous_on b2 b0 ccontinuous_on / c% * b1 b3 * b2 b3 b0 ccontinuous_on / c% * f0 b0 * f2 b0 f1
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((continuous_on (\x. (lift (real_of_num (NUMERAL (BIT1 _0)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. ((% ((real_div ((real_sub (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (lift ((real_sub (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c/\ ccontinuous_on / clift creal_of_num cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / c% creal_div creal_sub creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 clift creal_sub cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ (!f. (!c. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s))))) |- ((!f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s)))) = T)
T c==> ! ! ! c==> ccontinuous_on b0 b2 ccontinuous_on / c% b1 * b0 b3 b2 c= ! ! c==> ccontinuous_on b0 b1 ccontinuous_on / c% f0 * b0 b2 b1 cT
+ |- ((((continuous_on (\x. (lift const1))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. ((% const1) (lift (ly (vector_norm ((row (NUMERAL (BIT1 _0))) (vecmats x)))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((continuous_on (\x. ((vector_sub (lift const1)) ((% const1) (lift (ly (vector_norm ((row (NUMERAL (BIT1 _0))) (vecmats x))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c/\ ccontinuous_on / clift cconst1 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / c% cconst1 clift cly cvector_norm crow cNUMERAL cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / cvector_sub clift cconst1 c% cconst1 clift cly cvector_norm crow cNUMERAL cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ |- ((((continuous_on (\x. (lift (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. (lift (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((continuous_on (\x. ((vector_sub (lift (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))) (lift (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c/\ ccontinuous_on / clift cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / cvector_sub clift cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 clift creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
- |- ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) = p') ==> ((p' ==> ((((row i) v) IN ball_annulus) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus)) = (p' ==> q'))))) q')
T * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c==> f1 c= cIN crow f0 f2 part cball_annulus b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 cIN crow f0 f2 part cball_annulus c==> f1 b0 f3
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((((((--> (\n. (matvec ((\n. (vecmats (x n))) n)))) (matvec (vecmats a'))) sequentially) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((--> (\n. ((row i) ((\n. (vecmats (x n))) n)))) ((row i) (vecmats a'))) sequentially)))) ==> ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))))) = ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))))
T c= c==> c==> c--> / cmatvec * / cvecmats * f0 b1 b0 cmatvec cvecmats f1 csequentially ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c--> / crow b0 * / cvecmats * f0 b2 b1 crow b0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c/\ c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 csequentially c/\ c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
- (EMPTY = (GSPEC (\GEN%PVAR%7724. (?v. (((SETSPEC GEN%PVAR%7724) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) |- ((GSPEC (\GEN%PVAR%7724. (?v. (((SETSPEC GEN%PVAR%7724) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))) = EMPTY)
T c==> c= part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c= * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 part cEMPTY
- (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))), (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) |- ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((((continuous_on (\x. ((vector_sub (lift (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))))) (lift (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((continuous_on (\x. ((% ((real_div ((real_sub (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((vector_sub (lift (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))))) (lift (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) = ((continuous_on (\x. ((% ((real_div ((real_sub (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((vector_sub (lift (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))))) (lift (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c= c==> ccontinuous_on / cvector_sub clift cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 clift creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / c% creal_div creal_sub creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_sub clift cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 clift creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / c% creal_div creal_sub creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_sub clift cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 clift creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
- (!i. (!s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s)))) |- ((\i. (!s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s)))) i)
T c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV ccontinuous_on / crow b0 cvecmats b2 b1 * / ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV ccontinuous_on / crow b0 cvecmats b2 b1 f0
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((continuous_on (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) = (((continuous_on (lift o (\x. (rho (vector_norm ((row (NUMERAL (BIT1 _0))) (vecmats x))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (\x. (lift ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c= ccontinuous_on / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c/\ ccontinuous_on * * part co part clift / crho cvector_norm crow cNUMERAL cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- (!i. (!s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s)))), (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ ((continuous_on (\x. ((row i) (vecmats x)))) s))
T c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV ccontinuous_on / crow b0 cvecmats b2 b1 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV ccontinuous_on / crow f0 cvecmats b0 f1
+ |- (((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) ==> ((\f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) f)) = ((\f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) f))
T c= c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 * / ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 f0 * / ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 f0
+ (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) |- ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
+ |- ((\y. ((lift ((real_add x) y)) = ((vector_add (lift x)) (lift y)))) y)
T * / c= clift creal_add f0 b0 cvector_add clift f0 clift b0 f1
+ |- ((real_neg ((real_sub ((real_add A) ((real_add B) ((real_sub C) D)))) ((real_sub ((real_add ((real_add A) B)) C)) D))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_add f0 creal_add f1 creal_sub f2 f3 creal_sub creal_add creal_add f0 f1 f2 f3 creal_of_num cNUMERAL c_0
+ |- ((~ (((real_add A) ((real_add B) ((real_sub C) D))) = ((real_sub ((real_add ((real_add A) B)) C)) D))) ==> F)
T c==> c~ c= creal_add f0 creal_add f1 creal_sub f2 f3 creal_sub creal_add creal_add f0 f1 f2 f3 cF
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((((continuous_on (\x. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x)))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((continuous_on (\x. (lift (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) = ((continuous_on (\x. (lift (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c= c==> ccontinuous_on / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
+ |- (((continuous_on (\x. ((vector_add ((vector_add (lift ((real_mul (rho (vector_norm ((row (NUMERAL (BIT1 _0))) (vecmats x))))) ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (lift ((real_mul (rho (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))))) ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 _0))) (vecmats x))))))) (lift ((real_mul (rho (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))) ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x)))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) = ((continuous_on (\x. (lift ((real_add ((real_add ((real_mul (rho (vector_norm ((row (NUMERAL (BIT1 _0))) (vecmats x))))) ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))) ((real_mul (rho (vector_norm ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))))) ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 _0))) (vecmats x)))))) ((real_mul (rho (vector_norm ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))))) ((((dihV (vec (NUMERAL _0))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x)))))))) (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c= ccontinuous_on / cvector_add cvector_add clift creal_mul crho cvector_norm crow cNUMERAL cBIT1 c_0 cvecmats b0 cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 clift creal_mul crho cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 c_0 cvecmats b0 clift creal_mul crho cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on / clift creal_add creal_add creal_mul crho cvector_norm crow cNUMERAL cBIT1 c_0 cvecmats b0 cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 creal_mul crho cvector_norm crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 c_0 cvecmats b0 creal_mul crho cvector_norm crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 cdihV cvec cNUMERAL c_0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
- |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))))) ==> (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))))))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_add * b0 b3 * b1 b3 b2 ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_add * b0 b3 * b1 b3 b2
+ (!s. (!c. (!f. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s))))) |- ((!f. (!s. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s)))) = T)
T c==> ! ! ! c==> c/\ ccontinuous_on * * part co part clift b1 b0 ccontinuous_on b2 b0 ccontinuous_on / c% * b1 b3 * b2 b3 b0 c= ! ! c==> c/\ ccontinuous_on * * part co part clift f0 b1 ccontinuous_on b0 b1 ccontinuous_on / c% * f0 b2 * b0 b2 b1 cT
- |- ((!A. (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) = T)
T c= ! ! c= c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f1 c= b1 f0 cT
- (((((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((k = (dimindex UNIV)) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))) ==> (compact (GSPEC (\GEN%PVAR%7612. (?v. (((SETSPEC GEN%PVAR%7612) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) |- ((((((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((k = (dimindex UNIV)) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))) ==> (compact (GSPEC (\GEN%PVAR%7612. (?v. (((SETSPEC GEN%PVAR%7612) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) /\ (((((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((k = (dimindex UNIV)) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))) ==> (compact (GSPEC (\GEN%PVAR%7612. (?v. (((SETSPEC GEN%PVAR%7612) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))))
T c==> c==> c/\ ctri_stable f0 f1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2 f3 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f0 c/\ c= f0 cdimindex part cUNIV c< cNUMERAL cBIT0 cBIT1 c_0 f0 ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1 c/\ c==> c/\ ctri_stable f0 f1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2 f3 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f0 c/\ c= f0 cdimindex part cUNIV c< cNUMERAL cBIT0 cBIT1 c_0 f0 ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1 c==> c/\ ctri_stable f0 f1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2 f3 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f0 c/\ c= f0 cdimindex part cUNIV c< cNUMERAL cBIT0 cBIT1 c_0 f0 ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1
+ |- ((\x. (!y2. (!y1. (!x2. (!x1. ((((((interp x1) y1) x2) y2) x) = ((real_add y1) ((real_mul ((real_sub x) x1)) ((real_div ((real_sub y2) y1)) ((real_sub x2) x1)))))))))) x)
T * / ! ! ! ! c= cinterp b4 b2 b3 b1 b0 creal_add b2 creal_mul creal_sub b0 b4 creal_div creal_sub b1 b2 creal_sub b3 b4 f0
- |- ((\k. (!x. ((lift ((sum k) x)) = ((vsum k) (lift o x))))) k)
T * / ! c= clift csum b0 b1 cvsum b0 * * part co part clift b1 f0
+ |- (((!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))) ==> ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))) s)) = ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))) s))
T c= c==> ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_add * f0 b1 * f1 b1 b0 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_add * f0 b1 * f1 b1 b0 f2 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_add * f0 b1 * f1 b1 b0 f2
- |- (((!C. (!A. ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F))) ==> ((\C. (!A. ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F))) C)) = ((\C. (!A. ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F))) C))
T c= c==> ! ! c==> c~ ! c= c\/ c= b2 b1 c\/ c= b2 f0 c= b2 b0 c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cF * / ! c==> c~ ! c= c\/ c= b2 b1 c\/ c= b2 f0 c= b2 b0 c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cF f1 * / ! c==> c~ ! c= c\/ c= b2 b1 c\/ c= b2 f0 c= b2 b0 c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cF f1
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) |- ((i <= (NUMERAL (BIT1 (BIT1 _0)))) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 c= c<= f0 cNUMERAL cBIT1 cBIT1 c_0 cT
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) |- (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_sub * f0 b1 * f1 b1 b0
- (x = A), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- (~ (A = C))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c~ c= f1 f3
- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))) |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))) i)
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially f2
- (!f. (!c. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s))))) |- ((((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s)) = T)
T c==> ! ! ! c==> ccontinuous_on b0 b2 ccontinuous_on / c% b1 * b0 b3 b2 c= c==> ccontinuous_on f0 f1 ccontinuous_on / c% f2 * f0 b0 f1 cT
- (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))) |- (((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY)))))))) = T)
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c= c==> cIN f2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 part cEMPTY cT
- (!f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s)))) |- (((!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s))) ==> ((\s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s))) s)) = ((\s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s))) s))
T c==> ! ! c==> ccontinuous_on b0 b1 ccontinuous_on / clift cvector_norm * b0 b2 b1 c= c==> ! c==> ccontinuous_on f0 b0 ccontinuous_on / clift cvector_norm * f0 b1 b0 * / c==> ccontinuous_on f0 b0 ccontinuous_on / clift cvector_norm * f0 b1 b0 f1 * / c==> ccontinuous_on f0 b0 ccontinuous_on / clift cvector_norm * f0 b1 b0 f1
- (!i. (!s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s)))) |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s)) = T)
T c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV ccontinuous_on / crow b0 cvecmats b2 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV ccontinuous_on / crow f0 cvecmats b0 f1 cT
- |- (FINITE (m .. n))
T cFINITE * * part c.. f0 f1
- (x = C), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c==> c~ cF cF
- |- (((!f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s)))) ==> (!f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s))))) = (!f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s)))))
T c= c==> ! ! c==> ccontinuous_on b0 b1 ccontinuous_on / clift cvector_norm * b0 b2 b1 ! ! c==> ccontinuous_on b0 b1 ccontinuous_on / clift cvector_norm * b0 b2 b1 ! ! c==> ccontinuous_on b0 b1 ccontinuous_on / clift cvector_norm * b0 b2 b1
- (!f. (!c. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s))))), ((continuous_on f) s) |- ((!f. (!c. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s))))) /\ ((continuous_on (\x. ((% c) (f x)))) s))
T c==> ! ! ! c==> ccontinuous_on b0 b2 ccontinuous_on / c% b1 * b0 b3 b2 c==> ccontinuous_on f0 f1 c/\ ! ! ! c==> ccontinuous_on b0 b2 ccontinuous_on / c% b1 * b0 b3 b2 ccontinuous_on / c% f2 * f0 b0 f1
- |- ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) = p') ==> ((p' ==> ((((row i) v) IN ball_annulus) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus)) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= cIN crow f0 f1 part cball_annulus b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 cIN crow f0 f1 part cball_annulus c==> b0 b1 f2
- (~ ((GSPEC (\GEN%PVAR%7724. (?v. (((SETSPEC GEN%PVAR%7724) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))) = EMPTY)) |- (~ (EMPTY = (GSPEC (\GEN%PVAR%7724. (?v. (((SETSPEC GEN%PVAR%7724) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 part cEMPTY c~ c= part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1
- (x = A), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- (~ (A = B))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 c~ c= f1 f2
- (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- (!a. (!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially ! ! ! c==> c/\ c--> / * f0 b3 b0 csequentially c/\ c--> / * f1 b3 b1 csequentially c/\ c--> / * f2 b3 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b3 * * part cINSERT * f1 b3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b3 * * part cINSERT * f2 b3 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b3 * f1 b3 * f2 b3 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s)))) |- ((!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s))) = T)
T c==> ! ! c==> ccontinuous_on b0 b1 ccontinuous_on / clift cvector_norm * b0 b2 b1 c= ! c==> ccontinuous_on f0 b0 ccontinuous_on / clift cvector_norm * f0 b1 b0 cT
- (x = A), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c==> c~ cF cF
- ((compact (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (lift o (\x. (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) |- ((((compact (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (lift o (\x. (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> (?x. ((x IN (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ (!y. ((y IN (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((real_le (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats y))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats y))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats y))))))))) ==> (?x. ((x IN (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ (!y. ((y IN (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((real_le (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats y))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats y))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats y)))))))))
T c==> c/\ ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on * * part co part clift / ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c==> c==> c/\ ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on * * part co part clift / ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c? / c/\ cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 ! c==> cIN b1 * part cGSPEC / c? / cSETSPEC b2 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b4 b3 part cball_annulus cCONDITION1_SY f0 f1 b3 cmatvec b3 creal_le ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b1 c? / c/\ cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 ! c==> cIN b1 * part cGSPEC / c? / cSETSPEC b2 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b4 b3 part cball_annulus cCONDITION1_SY f0 f1 b3 cmatvec b3 creal_le ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b1
- (x = C) |- (F = F)
T c==> c= f0 f1 c= cF cF
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) |- ((!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))) = T)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 c= ! ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_sub * f0 b2 * b0 b2 b1 cT
- (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- (((!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))) ==> ((\b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))) b)) = ((\b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))) b))
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially c= c==> ! ! c==> c/\ c--> / * f0 b2 f1 csequentially c/\ c--> / * f2 b2 b0 csequentially c/\ c--> / * f3 b2 b1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b2 * * part cINSERT * f2 b2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b2 * * part cINSERT * f3 b2 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b2 * f2 b2 * f3 b2 clift cdihV cvec cNUMERAL c_0 f1 b0 b1 csequentially * / ! c==> c/\ c--> / * f0 b2 f1 csequentially c/\ c--> / * f2 b2 b0 csequentially c/\ c--> / * f3 b2 b1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b2 * * part cINSERT * f2 b2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b2 * * part cINSERT * f3 b2 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b2 * f2 b2 * f3 b2 clift cdihV cvec cNUMERAL c_0 f1 b0 b1 csequentially f4 * / ! c==> c/\ c--> / * f0 b2 f1 csequentially c/\ c--> / * f2 b2 b0 csequentially c/\ c--> / * f3 b2 b1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b2 * * part cINSERT * f2 b2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b2 * * part cINSERT * f3 b2 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b2 * f2 b2 * f3 b2 clift cdihV cvec cNUMERAL c_0 f1 b0 b1 csequentially f4
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))), (((continuous_on f) s) /\ ((continuous_on g) s)) |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) /\ ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 c/\ ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 ccontinuous_on / cvector_sub * f0 b0 * f2 b0 f1
- |- ((!f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s)))) ==> (!f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s)))))
T c==> ! ! c==> ccontinuous_on b0 b1 ccontinuous_on / clift cvector_norm * b0 b2 b1 ! ! c==> ccontinuous_on b0 b1 ccontinuous_on / clift cvector_norm * b0 b2 b1
- |- ((((((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((k = (dimindex UNIV)) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))) ==> (compact (GSPEC (\GEN%PVAR%7612. (?v. (((SETSPEC GEN%PVAR%7612) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> (((((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((k = (dimindex UNIV)) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))) ==> (compact (GSPEC (\GEN%PVAR%7612. (?v. (((SETSPEC GEN%PVAR%7612) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))))
T c==> c==> c/\ ctri_stable f0 f1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2 f3 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f0 c/\ c= f0 cdimindex part cUNIV c< cNUMERAL cBIT0 cBIT1 c_0 f0 ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1 c==> c/\ ctri_stable f0 f1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2 f3 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f0 c/\ c= f0 cdimindex part cUNIV c< cNUMERAL cBIT0 cBIT1 c_0 f0 ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1
- ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F), (((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)) |- ((((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)) /\ ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c/\ c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF
- (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))) |- (((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((((--> x) a') sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c==> ! cIN * f3 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c==> c--> f3 f2 csequentially c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 c_0 cvecmats f2 csequentially c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 part cEMPTY
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) |- (((NUMERAL (BIT1 _0)) <= i) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 c= c<= cNUMERAL cBIT1 c_0 f0 cT
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- |- (((!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) = p') ==> ((p' ==> ((((row i) v) IN ball_annulus) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus)) = (p' ==> q'))))) ==> ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) = p') ==> ((p' ==> ((((row i) v) IN ball_annulus) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus)) = (p' ==> q'))))) q')) = ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) = p') ==> ((p' ==> ((((row i) v) IN ball_annulus) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus)) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c==> f1 c= cIN crow f0 f2 part cball_annulus b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 cIN crow f0 f2 part cball_annulus c==> f1 b0 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c==> f1 c= cIN crow f0 f2 part cball_annulus b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 cIN crow f0 f2 part cball_annulus c==> f1 b0 f3 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c==> f1 c= cIN crow f0 f2 part cball_annulus b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 cIN crow f0 f2 part cball_annulus c==> f1 b0 f3
- |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) ==> (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2
- (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))), (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) |- (T = ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c= cT c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY
- |- ((!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) ==> (!f. (!g. (!h. (!a. (!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))))
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially ! ! ! ! ! ! c==> c/\ c--> / * b0 b6 b3 csequentially c/\ c--> / * b1 b6 b4 csequentially c/\ c--> / * b2 b6 b5 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b3 * * part cINSERT b5 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 b6 * * part cINSERT * b1 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 b6 * * part cINSERT * b2 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b0 b6 * b1 b6 * b2 b6 clift cdihV cvec cNUMERAL c_0 b3 b4 b5 csequentially
- |- (((!A. ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)) ==> ((\A. ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)) A)) = ((\A. ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)) A))
T c= c==> ! c==> c~ ! c= c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f1 c= b1 f0 cF * / c==> c~ ! c= c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f1 c= b1 f0 cF f2 * / c==> c~ ! c= c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f1 c= b1 f0 cF f2
- (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- (!g. (!h. (!a. (!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially ! ! ! ! ! c==> c/\ c--> / * f0 b5 b2 csequentially c/\ c--> / * b0 b5 b3 csequentially c/\ c--> / * b1 b5 b4 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b5 * * part cINSERT * b0 b5 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b5 * * part cINSERT * b1 b5 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b5 * b0 b5 * b1 b5 clift cdihV cvec cNUMERAL c_0 b2 b3 b4 csequentially
- (!f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s)))) |- ((((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s)) = T)
T c==> ! ! c==> ccontinuous_on b0 b1 ccontinuous_on / clift cvector_norm * b0 b2 b1 c= c==> ccontinuous_on f0 f1 ccontinuous_on / clift cvector_norm * f0 b0 f1 cT
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))))) |- (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_add * b0 b3 * b1 b3 b2 ! ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_add * f0 b2 * b0 b2 b1
- (!i. (!s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s)))), (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((continuous_on (\x. ((row i) (vecmats x)))) s)
T c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV ccontinuous_on / crow b0 cvecmats b2 b1 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV ccontinuous_on / crow f0 cvecmats b0 f1
- (!f. (!c. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s))))) |- ((\s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s))) s)
T c==> ! ! ! c==> ccontinuous_on b0 b2 ccontinuous_on / c% b1 * b0 b3 b2 * / c==> ccontinuous_on f0 b0 ccontinuous_on / c% f1 * f0 b1 b0 f2
- |- ((\A. ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)) A)
T * / c==> c~ ! c= c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f1 c= b1 f0 cF f2
- |- (F = (~ T))
T c= cF c~ cT
- ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) |- (((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) /\ ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c/\ c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((!i. (!s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s)))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV ccontinuous_on / crow b0 cvecmats b2 b1 ccontinuous_on / crow f0 cvecmats b0 f1
- (!i. (!s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s)))) |- (!s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s)))
T c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV ccontinuous_on / crow b0 cvecmats b2 b1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV ccontinuous_on / crow f0 cvecmats b1 b0
- (~ F), (x = C), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c/\ c~ cF cF
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) |- ((!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))) = T)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 c= ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_sub * f0 b1 * f1 b1 b0 cT
- |- ((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0))))
T c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))))) |- ((!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s)))) = T)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_add * b0 b3 * b1 b3 b2 c= ! ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_add * f0 b2 * b0 b2 b1 cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((~ (~ F)) ==> F) ==> (~ F)) = (~ F))
T c= c==> c==> c~ c~ cF cF c~ cF c~ cF
- (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- ((\b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))) b)
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially * / ! c==> c/\ c--> / * f0 b2 f1 csequentially c/\ c--> / * f2 b2 b0 csequentially c/\ c--> / * f3 b2 b1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b2 * * part cINSERT * f2 b2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b2 * * part cINSERT * f3 b2 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b2 * f2 b2 * f3 b2 clift cdihV cvec cNUMERAL c_0 f1 b0 b1 csequentially f4
- (~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) |- ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) /\ F)
T c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 c/\ c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF
- (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- ((\c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially))) c)
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially * / c==> c/\ c--> / * f0 b1 f1 csequentially c/\ c--> / * f2 b1 f3 csequentially c/\ c--> / * f4 b1 b0 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b1 * * part cINSERT * f2 b1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b1 * * part cINSERT * f4 b1 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b1 * f2 b1 * f4 b1 clift cdihV cvec cNUMERAL c_0 f1 f3 b0 csequentially f5
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) /\ (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 c/\ ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2
- (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((((--> x) a') sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c==> ! cIN * f3 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c==> c--> f3 f2 csequentially c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 c_0 cvecmats f2 csequentially c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 part cEMPTY
- (!f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s)))), ((continuous_on f) s) |- ((continuous_on (\x. (lift (vector_norm (f x))))) s)
T c==> ! ! c==> ccontinuous_on b0 b1 ccontinuous_on / clift cvector_norm * b0 b2 b1 c==> ccontinuous_on f0 f1 ccontinuous_on / clift cvector_norm * f0 b0 f1
- |- ((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT1 (BIT1 _0))))
T c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))))) |- ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s)))) g)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_add * b0 b3 * b1 b3 b2 * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_add * f0 b2 * b0 b2 b1 f1
- |- ((FINITE (m .. n)) = T)
T c= cFINITE * * part c.. f0 f1 cT
- (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- ((((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)) = T)
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially c= c==> c/\ c--> / * f0 b0 f1 csequentially c/\ c--> / * f2 b0 f3 csequentially c/\ c--> / * f4 b0 f5 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b0 * * part cINSERT * f2 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b0 * * part cINSERT * f4 b0 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b0 * f2 b0 * f4 b0 clift cdihV cvec cNUMERAL c_0 f1 f3 f5 csequentially cT
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ T) = F)
T c= c~ cT cF
- (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- (((!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially))) ==> ((\c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially))) c)) = ((\c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially))) c))
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially c= c==> ! c==> c/\ c--> / * f0 b1 f1 csequentially c/\ c--> / * f2 b1 f3 csequentially c/\ c--> / * f4 b1 b0 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b1 * * part cINSERT * f2 b1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b1 * * part cINSERT * f4 b1 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b1 * f2 b1 * f4 b1 clift cdihV cvec cNUMERAL c_0 f1 f3 b0 csequentially * / c==> c/\ c--> / * f0 b1 f1 csequentially c/\ c--> / * f2 b1 f3 csequentially c/\ c--> / * f4 b1 b0 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b1 * * part cINSERT * f2 b1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b1 * * part cINSERT * f4 b1 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b1 * f2 b1 * f4 b1 clift cdihV cvec cNUMERAL c_0 f1 f3 b0 csequentially f5 * / c==> c/\ c--> / * f0 b1 f1 csequentially c/\ c--> / * f2 b1 f3 csequentially c/\ c--> / * f4 b1 b0 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b1 * * part cINSERT * f2 b1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b1 * * part cINSERT * f4 b1 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b1 * f2 b1 * f4 b1 clift cdihV cvec cNUMERAL c_0 f1 f3 b0 csequentially f5
- (!f. (!c. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s))))), ((continuous_on f) s) |- ((continuous_on (\x. ((% c) (f x)))) s)
T c==> ! ! ! c==> ccontinuous_on b0 b2 ccontinuous_on / c% b1 * b0 b3 b2 c==> ccontinuous_on f0 f1 ccontinuous_on / c% f2 * f0 b0 f1
- (x = A), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- (~ (A = B))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c~ c= f1 f2
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) |- (((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)) = T)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 c= c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 ccontinuous_on / cvector_sub * f0 b0 * f2 b0 f1 cT
- (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))) |- (((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((((--> x) a') sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c==> ! cIN * f3 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c==> c--> f3 f2 csequentially c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 c_0 cvecmats f2 csequentially c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 part cEMPTY
- |- ((((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)) ==> (((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)))
T c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF
- (!f. (!c. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s))))), ((continuous_on f) s) |- (((continuous_on f) s) /\ ((continuous_on (\x. ((% c) (f x)))) s))
T c==> ! ! ! c==> ccontinuous_on b0 b2 ccontinuous_on / c% b1 * b0 b3 b2 c==> ccontinuous_on f0 f1 c/\ ccontinuous_on f0 f1 ccontinuous_on / c% f2 * f0 b0 f1
- (x = C), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- (~ (C = B))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c~ c= f1 f3
- (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- ((\f. (!g. (!h. (!a. (!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) f)
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially * / ! ! ! ! ! c==> c/\ c--> / * b0 b6 b3 csequentially c/\ c--> / * b1 b6 b4 csequentially c/\ c--> / * b2 b6 b5 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b3 * * part cINSERT b5 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 b6 * * part cINSERT * b1 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 b6 * * part cINSERT * b2 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b0 b6 * b1 b6 * b2 b6 clift cdihV cvec cNUMERAL c_0 b3 b4 b5 csequentially f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ F), (x = A), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c/\ c~ cF cF
- (~ F), (x = B), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c/\ c~ cF cF
- (x = B), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- (~ (B = C))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c~ c= f1 f3
- ((compact (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (lift o (\x. (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (((compact (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (lift o (\x. (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> (?x. ((x IN (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ (!y. ((y IN (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((real_le (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats y))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats y))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats y))))))))) |- (((compact (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ ((continuous_on (lift o (\x. (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))))) (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) /\ (?x. ((x IN (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) /\ (!y. ((y IN (GSPEC (\GEN%PVAR%7723. (?v. (((SETSPEC GEN%PVAR%7723) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((real_le (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats x))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats x))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats x)))) (((tau3 ((row (NUMERAL (BIT1 _0))) (vecmats y))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats y))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats y)))))))))
T c==> c/\ ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on * * part co part clift / ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c==> c==> c/\ ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on * * part co part clift / ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c? / c/\ cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 ! c==> cIN b1 * part cGSPEC / c? / cSETSPEC b2 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b4 b3 part cball_annulus cCONDITION1_SY f0 f1 b3 cmatvec b3 creal_le ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b1 c/\ c/\ ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 ccontinuous_on * * part co part clift / ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c? / c/\ cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 ! c==> cIN b1 * part cGSPEC / c? / cSETSPEC b2 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b4 b3 part cball_annulus cCONDITION1_SY f0 f1 b3 cmatvec b3 creal_le ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 ctau3 crow cNUMERAL cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b1 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b1
- (x = B), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- (~ (B = A))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c~ c= f1 f2
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus)) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus)))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 cIN crow f0 f1 part cball_annulus c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 cIN crow f0 f1 part cball_annulus
- (!f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s)))) |- (!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s)))
T c==> ! ! c==> ccontinuous_on b0 b1 ccontinuous_on / clift cvector_norm * b0 b2 b1 ! c==> ccontinuous_on f0 b0 ccontinuous_on / clift cvector_norm * f0 b1 b0
- |- ((lift ((sum k) x)) = ((vsum k) (lift o x)))
T c= clift csum f0 f1 cvsum f0 * * part co part clift f1
- |- (((!n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n))))) ==> ((\n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n))))) n)) = ((\n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n))))) n))
T c= c==> ! ! c= cIN b1 * * part c.. f0 b0 c/\ c<= f0 b1 c<= b1 b0 * / ! c= cIN b1 * * part c.. f0 b0 c/\ c<= f0 b1 c<= b1 b0 f1 * / ! c= cIN b1 * * part c.. f0 b0 c/\ c<= f0 b1 c<= b1 b0 f1
- ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) |- ((((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((row i) v) IN ball_annulus) = (((row i) v) IN ball_annulus)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 c= cIN crow f0 f1 part cball_annulus cIN crow f0 f1 part cball_annulus
- (x = B), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c==> c~ cF cF
- (x = B), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- (~ (B = A))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c~ c= f1 f2
- (x = A), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 c==> c~ cF cF
- (x = C), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c==> c~ cF cF
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) |- (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 ! ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_sub * f0 b2 * b0 b2 b1
- (~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) |- F
T c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF
- |- ((!i. (!s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s)))) ==> (!i. (!s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s)))))
T c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV ccontinuous_on / crow b0 cvecmats b2 b1 ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV ccontinuous_on / crow b0 cvecmats b2 b1
- |- ((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT1 (BIT1 _0))))
T c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\m. (!n. (FINITE (m .. n)))) m)
T * / ! cFINITE * * part c.. b0 b1 f0
- |- ((!x. (P x)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- ((!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))) = T)
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially c= ! ! c==> c/\ c--> / * f0 b2 f1 csequentially c/\ c--> / * f2 b2 b0 csequentially c/\ c--> / * f3 b2 b1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b2 * * part cINSERT * f2 b2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b2 * * part cINSERT * f3 b2 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b2 * f2 b2 * f3 b2 clift cdihV cvec cNUMERAL c_0 f1 b0 b1 csequentially cT
- ((((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((k = (dimindex UNIV)) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))), (((((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((k = (dimindex UNIV)) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))) ==> (compact (GSPEC (\GEN%PVAR%7612. (?v. (((SETSPEC GEN%PVAR%7612) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) |- (((((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((k = (dimindex UNIV)) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))) /\ (compact (GSPEC (\GEN%PVAR%7612. (?v. (((SETSPEC GEN%PVAR%7612) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))
T c==> c/\ ctri_stable f0 f1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2 f3 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f0 c/\ c= f0 cdimindex part cUNIV c< cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c==> c/\ ctri_stable f0 f1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2 f3 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f0 c/\ c= f0 cdimindex part cUNIV c< cNUMERAL cBIT0 cBIT1 c_0 f0 ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1 c/\ c/\ ctri_stable f0 f1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2 f3 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f0 c/\ c= f0 cdimindex part cUNIV c< cNUMERAL cBIT0 cBIT1 c_0 f0 ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- |- (((((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)) ==> (((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F))) = (((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)))
T c= c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF
- (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- (((!g. (!h. (!a. (!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially))))))) ==> ((\g. (!h. (!a. (!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially))))))) g)) = ((\g. (!h. (!a. (!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially))))))) g))
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially c= c==> ! ! ! ! ! c==> c/\ c--> / * f0 b5 b2 csequentially c/\ c--> / * b0 b5 b3 csequentially c/\ c--> / * b1 b5 b4 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b5 * * part cINSERT * b0 b5 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b5 * * part cINSERT * b1 b5 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b5 * b0 b5 * b1 b5 clift cdihV cvec cNUMERAL c_0 b2 b3 b4 csequentially * / ! ! ! ! c==> c/\ c--> / * f0 b5 b2 csequentially c/\ c--> / * b0 b5 b3 csequentially c/\ c--> / * b1 b5 b4 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b5 * * part cINSERT * b0 b5 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b5 * * part cINSERT * b1 b5 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b5 * b0 b5 * b1 b5 clift cdihV cvec cNUMERAL c_0 b2 b3 b4 csequentially f1 * / ! ! ! ! c==> c/\ c--> / * f0 b5 b2 csequentially c/\ c--> / * b0 b5 b3 csequentially c/\ c--> / * b1 b5 b4 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b5 * * part cINSERT * b0 b5 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b5 * * part cINSERT * b1 b5 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b5 * b0 b5 * b1 b5 clift cdihV cvec cNUMERAL c_0 b2 b3 b4 csequentially f1
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) |- ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))) s)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_sub * f0 b1 * f1 b1 b0 f2
- (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- (((!a. (!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially))))) ==> ((\a. (!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially))))) a)) = ((\a. (!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially))))) a))
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially c= c==> ! ! ! c==> c/\ c--> / * f0 b3 b0 csequentially c/\ c--> / * f1 b3 b1 csequentially c/\ c--> / * f2 b3 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b3 * * part cINSERT * f1 b3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b3 * * part cINSERT * f2 b3 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b3 * f1 b3 * f2 b3 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially * / ! ! c==> c/\ c--> / * f0 b3 b0 csequentially c/\ c--> / * f1 b3 b1 csequentially c/\ c--> / * f2 b3 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b3 * * part cINSERT * f1 b3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b3 * * part cINSERT * f2 b3 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b3 * f1 b3 * f2 b3 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially f3 * / ! ! c==> c/\ c--> / * f0 b3 b0 csequentially c/\ c--> / * f1 b3 b1 csequentially c/\ c--> / * f2 b3 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b3 * * part cINSERT * f1 b3 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b3 * * part cINSERT * f2 b3 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b3 * f1 b3 * f2 b3 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially f3
- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))) |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially)) = T)
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f2 c<= f2 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow f2 cvecmats * f0 b0 crow f2 cvecmats f1 csequentially cT
- (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> ((((--> x) a') sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))))))))))))))
T c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f2 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f0 f1 b1 cmatvec b1 c==> ! cIN * f3 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f0 f1 b2 cmatvec b2 c==> c--> f3 f2 csequentially c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 c_0 cvecmats f2 csequentially c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f2 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f3 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f3 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f3 b0 part cEMPTY
- (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))), ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY)))))) |- ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 f1 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 f1 part cEMPTY
- (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially ! c==> c/\ c--> / * f0 b1 f1 csequentially c/\ c--> / * f2 b1 f3 csequentially c/\ c--> / * f4 b1 b0 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b1 * * part cINSERT * f2 b1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b1 * * part cINSERT * f4 b1 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b1 * f2 b1 * f4 b1 clift cdihV cvec cNUMERAL c_0 f1 f3 b0 csequentially
- |- (((\n. (f n)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- (!i. (!s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s)))) |- ((\s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s))) s)
T c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV ccontinuous_on / crow b0 cvecmats b2 b1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV ccontinuous_on / crow f0 cvecmats b1 b0 f1
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> ((((row i) v) IN ball_annulus) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus)) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> q')))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 c= cIN crow f0 f1 part cball_annulus f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 cIN crow f0 f1 part cball_annulus c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 f2
- |- (!p'. (!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3
- |- ((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0))))
T c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- (!i. (!s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s)))) |- (((!s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s))) ==> ((\s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s))) s)) = ((\s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s))) s))
T c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV ccontinuous_on / crow b0 cvecmats b2 b1 c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV ccontinuous_on / crow f0 cvecmats b1 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV ccontinuous_on / crow f0 cvecmats b1 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV ccontinuous_on / crow f0 cvecmats b1 b0 f1
- |- (((((((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((k = (dimindex UNIV)) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))) ==> (compact (GSPEC (\GEN%PVAR%7612. (?v. (((SETSPEC GEN%PVAR%7612) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) ==> (((((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((k = (dimindex UNIV)) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))) ==> (compact (GSPEC (\GEN%PVAR%7612. (?v. (((SETSPEC GEN%PVAR%7612) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))))) = (((((((((tri_stable k) d) ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) a) b) J) (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((k = (dimindex UNIV)) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))) ==> (compact (GSPEC (\GEN%PVAR%7612. (?v. (((SETSPEC GEN%PVAR%7612) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))))
T c= c==> c==> c/\ ctri_stable f0 f1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2 f3 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f0 c/\ c= f0 cdimindex part cUNIV c< cNUMERAL cBIT0 cBIT1 c_0 f0 ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1 c==> c/\ ctri_stable f0 f1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2 f3 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f0 c/\ c= f0 cdimindex part cUNIV c< cNUMERAL cBIT0 cBIT1 c_0 f0 ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1 c==> c/\ ctri_stable f0 f1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2 f3 f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f0 c/\ c= f0 cdimindex part cUNIV c< cNUMERAL cBIT0 cBIT1 c_0 f0 ccompact * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV cIN crow b2 b1 part cball_annulus cCONDITION1_SY f2 f3 b1 cmatvec b1
- |- (((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q')))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3 cT
- (~ (C = C)) |- ((~ (C = C)) /\ (C = C))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- |- ((!B. (!C. (!A. (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))))) = (!B. (!C. (!A. ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)))))
T c= ! ! ! ! c= c\/ c= b3 b2 c\/ c= b3 b0 c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 ! ! ! c==> c~ ! c= c\/ c= b3 b2 c\/ c= b3 b0 c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 cF
- (x = A), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- (~ (A = C))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 c~ c= f1 f3
- (!f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s)))) |- ((\f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s)))) f)
T c==> ! ! c==> ccontinuous_on b0 b1 ccontinuous_on / clift cvector_norm * b0 b2 b1 * / ! c==> ccontinuous_on b0 b1 ccontinuous_on / clift cvector_norm * b0 b2 b1 f0
- (~ F), (x = B), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ cF cF
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((\n. (FINITE (m .. n))) n)
T * / cFINITE * * part c.. f0 b0 f1
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (!f. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. (lift (vector_norm (f x))))) s)))), ((continuous_on f) s) |- (((continuous_on f) s) /\ ((continuous_on (\x. (lift (vector_norm (f x))))) s))
T c==> ! ! c==> ccontinuous_on b0 b1 ccontinuous_on / clift cvector_norm * b0 b2 b1 c==> ccontinuous_on f0 f1 c/\ ccontinuous_on f0 f1 ccontinuous_on / clift cvector_norm * f0 b0 f1
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- ((\g. (!h. (!a. (!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially))))))) g)
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially * / ! ! ! ! c==> c/\ c--> / * f0 b5 b2 csequentially c/\ c--> / * b0 b5 b3 csequentially c/\ c--> / * b1 b5 b4 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b5 * * part cINSERT * b0 b5 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b5 * * part cINSERT * b1 b5 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b5 * b0 b5 * b1 b5 clift cdihV cvec cNUMERAL c_0 b2 b3 b4 csequentially f1
- ((continuous_on f) s) |- ((!f. (!c. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s))))) ==> ((continuous_on (\x. ((% c) (f x)))) s))
T c==> ccontinuous_on f0 f1 c==> ! ! ! c==> ccontinuous_on b0 b2 ccontinuous_on / c% b1 * b0 b3 b2 ccontinuous_on / c% f2 * f0 b0 f1
- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((--> (\n. ((row i) (vecmats (x n))))) ((row i) (vecmats a'))) sequentially))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow b0 cvecmats * f0 b1 crow b0 cvecmats f1 csequentially c==> c/\ c<= cNUMERAL cBIT1 c_0 f2 c<= f2 cNUMERAL cBIT1 cBIT1 c_0 c--> / crow f2 cvecmats * f0 b0 crow f2 cvecmats f1 csequentially
- (!a. (!b. (!c. (!f. (!g. (!h. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially)))))))) |- (!b. (!c. (((((--> (\n. (f n))) a) sequentially) /\ ((((--> (\n. (g n))) b) sequentially) /\ ((((--> (\n. (h n))) c) sequentially) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (b INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (a INSERT (c INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((g n) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT ((f n) INSERT ((h n) INSERT EMPTY)))))))))))) ==> (((--> (\x. (lift ((((dihV (vec (NUMERAL _0))) (f x)) (g x)) (h x))))) (lift ((((dihV (vec (NUMERAL _0))) a) b) c))) sequentially))))
T c==> ! ! ! ! ! ! c==> c/\ c--> / * b3 b6 b0 csequentially c/\ c--> / * b4 b6 b1 csequentially c/\ c--> / * b5 b6 b2 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b4 b6 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b3 b6 * * part cINSERT * b5 b6 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * b3 b6 * b4 b6 * b5 b6 clift cdihV cvec cNUMERAL c_0 b0 b1 b2 csequentially ! ! c==> c/\ c--> / * f0 b2 f1 csequentially c/\ c--> / * f2 b2 b0 csequentially c/\ c--> / * f3 b2 b1 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b2 * * part cINSERT * f2 b2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 b2 * * part cINSERT * f3 b2 part cEMPTY c--> / clift cdihV cvec cNUMERAL c_0 * f0 b2 * f2 b2 * f3 b2 clift cdihV cvec cNUMERAL c_0 f1 b0 b1 csequentially
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))))) |- (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s)))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_add * b0 b3 * b1 b3 b2 ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_add * f0 b1 * f1 b1 b0
- |- (((!m. (!n. (FINITE (m .. n)))) ==> ((\m. (!n. (FINITE (m .. n)))) m)) = ((\m. (!n. (FINITE (m .. n)))) m))
T c= c==> ! ! cFINITE * * part c.. b0 b1 * / ! cFINITE * * part c.. b0 b1 f0 * / ! cFINITE * * part c.. b0 b1 f0
- |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> ((((row i) v) IN ball_annulus) = (((row i) v) IN ball_annulus)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 c= cIN crow f0 f1 part cball_annulus cIN crow f0 f1 part cball_annulus
- |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
- (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) |- ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) /\ ((((--> x) a') sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c/\ ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> c--> f0 f3 csequentially c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!s. (!c. (!f. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s))))), (((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) |- ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) /\ ((continuous_on (\x. ((% (c x)) (f x)))) s))
T c==> ! ! ! c==> c/\ ccontinuous_on * * part co part clift b1 b0 ccontinuous_on b2 b0 ccontinuous_on / c% * b1 b3 * b2 b3 b0 c==> c/\ ccontinuous_on * * part co part clift f0 f1 ccontinuous_on f2 f1 c/\ c/\ ccontinuous_on * * part co part clift f0 f1 ccontinuous_on f2 f1 ccontinuous_on / c% * f0 b0 * f2 b0 f1
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))), (((continuous_on f) s) /\ ((continuous_on g) s)) |- ((((continuous_on f) s) /\ ((continuous_on g) s)) /\ ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 c/\ c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 ccontinuous_on / cvector_sub * f0 b0 * f2 b0 f1
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))))), (((continuous_on f) s) /\ ((continuous_on g) s)) |- ((((continuous_on f) s) /\ ((continuous_on g) s)) /\ ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_add * b0 b3 * b1 b3 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 c/\ c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 ccontinuous_on / cvector_add * f0 b0 * f2 b0 f1
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))))) |- (((!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))) ==> ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))) s)) = ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_add * b0 b3 * b1 b3 b2 c= c==> ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_add * f0 b1 * f1 b1 b0 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_add * f0 b1 * f1 b1 b0 f2 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_add * f0 b1 * f1 b1 b0 f2
- |- (~ (~ T))
T c~ c~ cT
- (!i. (!s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s)))) |- ((!s. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((continuous_on (\x. ((row i) (vecmats x)))) s))) = T)
T c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV ccontinuous_on / crow b0 cvecmats b2 b1 c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV ccontinuous_on / crow f0 cvecmats b1 b0 cT
- (!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))), (!l. ((l IN (GSPEC (\GEN%PVAR%7725. (?v. (((SETSPEC GEN%PVAR%7725) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats l)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats l)) INSERT EMPTY))))))))), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0)))), (a' IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v)))))) |- ((!n. ((x n) IN (GSPEC (\GEN%PVAR%7726. (?v. (((SETSPEC GEN%PVAR%7726) ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((row i) v) IN ball_annulus))) /\ (((CONDITION1_SY a) b) v))) (matvec v))))))) /\ ((((--> x) a') sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 _0))) (vecmats (x n))))) ((row (NUMERAL (BIT1 _0))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((((--> (\n. ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))))) ((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a'))) sequentially) ==> ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats a')) INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats a')) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats a')) INSERT EMPTY))))) /\ (!n. ((~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT1 _0))) (vecmats (x n))) INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((row (NUMERAL (BIT1 (BIT1 _0)))) (vecmats (x n))) INSERT (((row (NUMERAL (BIT0 (BIT1 _0)))) (vecmats (x n))) INSERT EMPTY))))))))))))))
T c==> ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats b0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats b0 part cEMPTY c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cGSPEC / c? / cSETSPEC b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b2 b1 part cball_annulus cCONDITION1_SY f1 f2 b1 cmatvec b1 c/\ ! cIN * f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cNUMERAL cBIT1 cBIT1 c_0 cIN crow b3 b2 part cball_annulus cCONDITION1_SY f1 f2 b2 cmatvec b2 c==> c--> f0 f3 csequentially c==> c--> / crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 csequentially c==> c--> / crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 csequentially c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats f3 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats f3 part cEMPTY ! c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT1 c_0 cvecmats * f0 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT crow cNUMERAL cBIT1 cBIT1 c_0 cvecmats * f0 b0 * * part cINSERT crow cNUMERAL cBIT0 cBIT1 c_0 cvecmats * f0 b0 part cEMPTY
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))))) |- ((\f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))))) f)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_add * b0 b3 * b1 b3 b2 * / ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_add * b0 b3 * b1 b3 b2 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF
