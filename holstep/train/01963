N Leaf_cell.MCELL4_EXTREME_POINT
C |- (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ ((((cc_cell V) ul) = ((cc_cell V) vl)) /\ (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> ((set_of_list ((cc_uh V) ul)) = (set_of_list ((cc_uh V) vl)))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * part cset_of_list ccc_uh f0 f1 * part cset_of_list ccc_uh f0 f2
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_eq
A |- (!x. (!y. ((x = y) = ((real_of_int x) = (real_of_int y)))))
T c= c= f0 f1 c= creal_of_int f0 creal_of_int f1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D INT_OF_NUM_EQ
A |- (!m. (!n. (((int_of_num m) = (int_of_num n)) = (m = n))))
T c= c= cint_of_num f0 cint_of_num f1 c= f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D Leaf_cell.CC_CELL_CONVEX_HULL_INJ
A |- (!V. (!ul. (!vl. (!pu. (!pv. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = pu) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = pv) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (pu INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (pv INSERT EMPTY)))))))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 f3 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 f4 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT f3 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT f4 part cEMPTY
D Leaf_cell.FUEIMOV_K
A |- (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= ccc_ke f0 f1 ccc_ke f0 f2
D Leaf_cell.SET_OF_LIST_CC_UH
A |- (!V. (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> ((set_of_list ((cc_uh V) ul)) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY))))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 c= * part cset_of_list ccc_uh f0 f1 * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY
- (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))), (~ (((cc_ke V) ul) = ((cc_ke V) vl))), (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), ((leaf V) ul), ((leaf V) vl) |- ((~ (((cc_ke V) ul) = ((cc_ke V) vl))) /\ (((cc_ke V) ul) = ((cc_ke V) vl)))
T c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 c==> c~ c= ccc_ke f0 f1 ccc_ke f0 f2 c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> cleaf f0 f1 c==> cleaf f0 f2 c/\ c~ c= ccc_ke f0 f1 ccc_ke f0 f2 c= ccc_ke f0 f1 ccc_ke f0 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\V. (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> ((set_of_list ((cc_uh V) ul)) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))))))) V)
T * / ! c==> c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 c= * part cset_of_list ccc_uh b0 b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 part cEMPTY f0
+ |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
+ |- (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY))))) ==> (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY))))) = T))
T c==> c= * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f1 f0 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f1 f2 part cEMPTY c= c= * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f1 f0 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f1 f2 part cEMPTY cT
+ |- ((\t'. (!e'. (((((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> (((mxi V) ((cc_uh V) vl)) = t')) ==> (((~ g') ==> (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) = e')) ==> ((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> c==> f2 c= cmxi f0 ccc_uh f0 f1 b0 c==> c==> c~ f2 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 b1 c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cCOND f2 b0 b1 f3
+ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) |- (!vl. (((~ (saturated _7128246)) \/ ((~ (packing _7128246)) \/ ((~ ((leaf _7128246) _7128247)) \/ ((~ ((leaf _7128246) vl)) \/ (~ (((cc_cell _7128246) _7128247) = ((cc_cell _7128246) vl))))))) \/ (((cc_ke _7128246) _7128247) = ((cc_ke _7128246) vl))))
T c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 ! c\/ c\/ c~ csaturated f0 c\/ c~ cpacking f0 c\/ c~ cleaf f0 f1 c\/ c~ cleaf f0 b0 c~ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 b0 c= ccc_ke f0 f1 ccc_ke f0 b0
+ (((real_ge (real_of_int _7128244)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) /\ (((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))))) |- (((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((real_ge (real_of_int _7128244)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) /\ (((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))))) |- ((\x. (((real_mul x) ((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ (((real_ge (real_of_int _7128244)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) /\ (((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))))) |- (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ |- ((\pu. (!pv. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = pu) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = pv) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (pu INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (pv INSERT EMPTY)))))))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)))
T * / ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 b0 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 b1 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT b0 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT b1 part cEMPTY cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1
- ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))), (((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))) ==> ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F))))))))) |- ((((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))) ==> ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F))))))))) /\ ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))))
T c==> c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c==> c==> c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c/\ c==> c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF
- |- ((~ (_7128261 = _7128262)) \/ ((BIT1 _7128261) = (BIT1 _7128262)))
T c\/ c~ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ |- ((\V. (!ul. (!vl. (!pu. (!pv. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = pu) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = pv) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (pu INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (pv INSERT EMPTY))))))))))) V)
T * / ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c/\ c= cCOND c= ccc_ke b0 b1 cNUMERAL cBIT1 cBIT1 c_0 cmxi b0 ccc_uh b0 b1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 b3 c/\ c= cCOND c= ccc_ke b0 b2 cNUMERAL cBIT1 cBIT1 c_0 cmxi b0 ccc_uh b0 b2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b2 b4 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT b3 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 b2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b2 * * part cINSERT b4 part cEMPTY f0
+ |- ((F /\ T) = F)
T c= c/\ cF cT cF
- (~ (((cc_cell V) ul) = ((cc_cell V) vl))), (((cc_cell V) ul) = ((cc_cell V) vl)) |- ((~ (((cc_cell V) ul) = ((cc_cell V) vl))) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))
T c==> c~ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c/\ c~ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2
- |- (!vl. (!V. (!ul. ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (~ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))))))))))))))
T c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ (((real_ge (real_of_int _7128244)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) /\ (((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))))) |- (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _7128244))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> F) = (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c= c==> c~ c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- ((_7128249 = _7128251) ==> ((~ (_7128250 = _7128252)) \/ (((leaf _7128251) _7128252) \/ (~ ((leaf _7128249) _7128250)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cleaf f1 f3 c~ cleaf f0 f2
+ (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- ((((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY)))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY
+ |- ((((~ F) ==> (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)))) ==> ((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = (((COND F) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))))) = ((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = (((COND F) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)))))
T c= c==> c==> c~ cF c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cCOND cF cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cCOND cF cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1
- (_7128255 = _7128256) |- ((((saturated _7128255) = (saturated _7128256)) ==> ((saturated _7128256) \/ (~ (saturated _7128255)))) = ((saturated _7128256) \/ (~ (saturated _7128255))))
T c==> c= f0 f1 c= c==> c= csaturated f0 csaturated f1 c\/ csaturated f1 c~ csaturated f0 c\/ csaturated f1 c~ csaturated f0
+ |- ((\p'. (!q'. (((((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY)))))) = p') ==> ((p' ==> (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY))))) = q')) ==> (((((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY)))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY)))))) = (p' ==> q')))))) p')
T * / ! c==> c= c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY b0 c==> c==> b0 c= c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY b1 c= c==> c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY c==> b0 b1 f3
+ |- (((real_neg (real_of_num m)) = (real_of_num n)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))
T c= c= creal_neg creal_of_num f0 creal_of_num f1 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (packing V), (saturated V), (((leaf V) vl) /\ ((((cc_cell V) ul) = ((cc_cell V) vl)) /\ (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))), ((leaf V) ul), ((leaf V) vl) |- ((set_of_list ((cc_uh V) ul)) = (set_of_list ((cc_uh V) vl)))
T c==> cpacking f0 c==> csaturated f0 c==> c/\ cleaf f0 f1 c/\ c= * * part ccc_cell f0 f2 * * part ccc_cell f0 f1 c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f2 c==> cleaf f0 f1 c= * part cset_of_list ccc_uh f0 f2 * part cset_of_list ccc_uh f0 f1
+ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((((((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0)))) = F) ==> ((F ==> (((mxi V) ((cc_uh V) vl)) = t')) ==> (((~ F) ==> (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) = e')) ==> ((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = (((COND F) t') e'))))) = ((F ==> (((mxi V) ((cc_uh V) vl)) = t')) ==> (((~ F) ==> (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) = e')) ==> ((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = (((COND F) t') e')))))
T c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c==> c= c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cF c==> c==> cF c= cmxi f0 ccc_uh f0 f1 f2 c==> c==> c~ cF c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 f3 c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cCOND cF f2 f3 c==> c==> cF c= cmxi f0 ccc_uh f0 f1 f2 c==> c==> c~ cF c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 f3 c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cCOND cF f2 f3
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7128244)) /\ (((real_of_int _7128244) = (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((real_of_int _7128244) = (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7128244)) /\ (((real_of_int _7128244) = (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((real_of_int _7128244) = (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c= creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c= creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cF
+ |- ((y = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) y) = (real_of_num (NUMERAL _0)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
+ (((real_ge (real_of_int _7128244)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) /\ (((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))))) |- (((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _7128244))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (~ (packing V)), (packing V) |- ((~ (packing V)) /\ (packing V))
T c==> c~ cpacking f0 c==> cpacking f0 c/\ c~ cpacking f0 cpacking f0
- (packing V), (saturated V) |- (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (~ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2
+ |- (((~ ((int_of_num k) = (int_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) \/ (~ ((int_of_num k) = (int_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = ((k = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (~ (k = (NUMERAL (BIT1 (BIT1 _0)))))))
T c= c\/ c~ c= cint_of_num f0 cint_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= cint_of_num f0 cint_of_num cNUMERAL cBIT1 cBIT1 c_0 c==> c= f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= f0 cNUMERAL cBIT1 cBIT1 c_0
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7128244)) /\ (((real_of_int _7128244) = (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((real_of_int _7128244) = (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c= creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ (((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))))
T c= c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))), (~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- F
T c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 c==> c~ c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f2 * * part ccc_cell f0 f1 c==> c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f2 c==> cleaf f0 f1 cF
- |- ((!ul. ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (~ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl))))))))))))))) = T)
T c= ! c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 b0 c==> cleaf f0 f1 c==> c= * * part ccc_cell f0 b0 * * part ccc_cell f0 f1 c==> c= ccc_ke f0 b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ! ! ! c==> c/\ csaturated b1 c/\ cpacking b1 c/\ cleaf b1 b2 c/\ cleaf b1 b2 c= * * part ccc_cell b1 b2 * * part ccc_cell b1 b2 c= ccc_ke b1 b2 ccc_ke b1 b2 cT
- (_7128249 = _7128251), (_7128250 = _7128252) |- (((((leaf _7128249) _7128250) = ((leaf _7128251) _7128252)) ==> (((leaf _7128251) _7128252) \/ (~ ((leaf _7128249) _7128250)))) = (((leaf _7128251) _7128252) \/ (~ ((leaf _7128249) _7128250))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cleaf f0 f2 cleaf f1 f3 c\/ cleaf f1 f3 c~ cleaf f0 f2 c\/ cleaf f1 f3 c~ cleaf f0 f2
+ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))), (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- ((((((cc_ke V) ul) = ((cc_ke V) vl)) /\ (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f1 c==> cleaf f0 f2 c= c==> c/\ c= ccc_ke f0 f1 ccc_ke f0 f2 c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- (packing V), (saturated V), ((leaf V) ul), ((leaf V) vl) |- ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF
+ (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- ((((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY)))))) = (T ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY)))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f1 c==> cleaf f0 f2 c= c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY c==> cT c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY
- ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))), (((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))) ==> ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F))))))))) |- (((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))) /\ ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))))
T c==> c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c==> c==> c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c/\ c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF
- ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))) |- ((((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))) ==> ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F))))))))) ==> ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))))
T c==> c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c==> c==> c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (packing V), (saturated V), ((leaf V) vl) |- (T = ((saturated V) /\ ((packing V) /\ ((leaf V) vl))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 f1 c= cT c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1
- |- ((!ul. t) = t)
T c= ! f0 f0
- |- ((_7128263 = _7128264) ==> ((BIT0 _7128263) = (BIT0 _7128264)))
T c==> c= f0 f1 c= cBIT0 f0 cBIT0 f1
+ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))), (~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) /\ F)
T c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 c==> c~ c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f2 * * part ccc_cell f0 f1 c==> c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f2 c==> cleaf f0 f1 c/\ ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF
- |- ((_7128253 = _7128254) ==> ((packing _7128254) \/ (~ (packing _7128253))))
T c==> c= f0 f1 c\/ cpacking f1 c~ cpacking f0
+ |- ((~ F) ==> (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))))
T c==> c~ cF c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1
+ |- ((\ul. (!vl. (!pu. (!pv. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = pu) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = pv) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (pu INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (pv INSERT EMPTY)))))))))) ul)
T * / ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 b0 c/\ cleaf f0 b1 c/\ c= cCOND c= ccc_ke f0 b0 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 b0 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 b2 c/\ c= cCOND c= ccc_ke f0 b1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 b1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b1 b3 c= * * part ccc_cell f0 b0 * * part ccc_cell f0 b1 c= * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT b2 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT b3 part cEMPTY f1
- (~ (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((~ (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c==> c~ c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
- (((cc_cell V) ul) = ((cc_cell V) vl)) |- ((~ (((cc_cell V) ul) = ((cc_cell V) vl))) ==> (((cc_cell V) ul) = ((cc_cell V) vl)))
T c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c~ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2
+ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) |- ((\ul. (!vl. (((~ (saturated _7128246)) \/ ((~ (packing _7128246)) \/ ((~ ((leaf _7128246) ul)) \/ ((~ ((leaf _7128246) vl)) \/ (~ (((cc_cell _7128246) ul) = ((cc_cell _7128246) vl))))))) \/ (((cc_ke _7128246) ul) = ((cc_ke _7128246) vl))))) _7128247)
T c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 * / ! c\/ c\/ c~ csaturated f0 c\/ c~ cpacking f0 c\/ c~ cleaf f0 b0 c\/ c~ cleaf f0 b1 c~ c= * * part ccc_cell f0 b0 * * part ccc_cell f0 b1 c= ccc_ke f0 b0 ccc_ke f0 b1 f1
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- ((((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ ((((cc_cell V) ul) = ((cc_cell V) vl)) /\ (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> ((set_of_list ((cc_uh V) ul)) = (set_of_list ((cc_uh V) vl)))) = T)
T c= c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * part cset_of_list ccc_uh f0 f1 * part cset_of_list ccc_uh f0 f2 cT
- |- ((((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))) ==> ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F))))))))) ==> (((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))) ==> ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F))))))))))
T c==> c==> c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c==> c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF
+ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) |- (((!ul. (!vl. (((~ (saturated _7128246)) \/ ((~ (packing _7128246)) \/ ((~ ((leaf _7128246) ul)) \/ ((~ ((leaf _7128246) vl)) \/ (~ (((cc_cell _7128246) ul) = ((cc_cell _7128246) vl))))))) \/ (((cc_ke _7128246) ul) = ((cc_ke _7128246) vl))))) ==> ((\ul. (!vl. (((~ (saturated _7128246)) \/ ((~ (packing _7128246)) \/ ((~ ((leaf _7128246) ul)) \/ ((~ ((leaf _7128246) vl)) \/ (~ (((cc_cell _7128246) ul) = ((cc_cell _7128246) vl))))))) \/ (((cc_ke _7128246) ul) = ((cc_ke _7128246) vl))))) _7128247)) = ((\ul. (!vl. (((~ (saturated _7128246)) \/ ((~ (packing _7128246)) \/ ((~ ((leaf _7128246) ul)) \/ ((~ ((leaf _7128246) vl)) \/ (~ (((cc_cell _7128246) ul) = ((cc_cell _7128246) vl))))))) \/ (((cc_ke _7128246) ul) = ((cc_ke _7128246) vl))))) _7128247))
T c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 c= c==> ! ! c\/ c\/ c~ csaturated f0 c\/ c~ cpacking f0 c\/ c~ cleaf f0 b0 c\/ c~ cleaf f0 b1 c~ c= * * part ccc_cell f0 b0 * * part ccc_cell f0 b1 c= ccc_ke f0 b0 ccc_ke f0 b1 * / ! c\/ c\/ c~ csaturated f0 c\/ c~ cpacking f0 c\/ c~ cleaf f0 b0 c\/ c~ cleaf f0 b1 c~ c= * * part ccc_cell f0 b0 * * part ccc_cell f0 b1 c= ccc_ke f0 b0 ccc_ke f0 b1 f1 * / ! c\/ c\/ c~ csaturated f0 c\/ c~ cpacking f0 c\/ c~ cleaf f0 b0 c\/ c~ cleaf f0 b1 c~ c= * * part ccc_cell f0 b0 * * part ccc_cell f0 b1 c= ccc_ke f0 b0 ccc_ke f0 b1 f1
- |- (((!vl. (!V. (!ul. ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F))))))))))) ==> ((\vl. (!V. (!ul. ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F))))))))))) vl)) = ((\vl. (!V. (!ul. ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F))))))))))) vl))
T c= c==> ! ! ! c==> csaturated b1 c==> cpacking b1 c==> cleaf b1 b2 c==> cleaf b1 b0 c==> c= * * part ccc_cell b1 b2 * * part ccc_cell b1 b0 c==> c= ccc_ke b1 b2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke b1 b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b3 c/\ cpacking b3 c/\ cleaf b3 b3 c/\ cleaf b3 b3 c= * * part ccc_cell b3 b3 * * part ccc_cell b3 b3 c= ccc_ke b3 b3 ccc_ke b3 b3 cF * / ! ! c==> csaturated b1 c==> cpacking b1 c==> cleaf b1 b2 c==> cleaf b1 b0 c==> c= * * part ccc_cell b1 b2 * * part ccc_cell b1 b0 c==> c= ccc_ke b1 b2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke b1 b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b3 c/\ cpacking b3 c/\ cleaf b3 b3 c/\ cleaf b3 b3 c= * * part ccc_cell b3 b3 * * part ccc_cell b3 b3 c= ccc_ke b3 b3 ccc_ke b3 b3 cF f0 * / ! ! c==> csaturated b1 c==> cpacking b1 c==> cleaf b1 b2 c==> cleaf b1 b0 c==> c= * * part ccc_cell b1 b2 * * part ccc_cell b1 b0 c==> c= ccc_ke b1 b2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke b1 b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b3 c/\ cpacking b3 c/\ cleaf b3 b3 c/\ cleaf b3 b3 c= * * part ccc_cell b3 b3 * * part ccc_cell b3 b3 c= ccc_ke b3 b3 ccc_ke b3 b3 cF f0
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ |- ((\g'. (!t'. (!e'. (((((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> (((mxi V) ((cc_uh V) vl)) = t')) ==> (((~ g') ==> (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) = e')) ==> ((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= cmxi f0 ccc_uh f0 f1 b1 c==> c==> c~ b0 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 b2 c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cCOND b0 b1 b2 f2
+ |- ((\e'. (((((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> (((mxi V) ((cc_uh V) vl)) = t')) ==> (((~ g') ==> (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) = e')) ==> ((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = (((COND g') t') e')))))) e')
T * / c==> c= c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> c==> f2 c= cmxi f0 ccc_uh f0 f1 f3 c==> c==> c~ f2 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 b0 c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cCOND f2 f3 b0 f4
+ (((cc_cell V) ul) = ((cc_cell V) vl)), ((leaf V) vl) |- (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))
T c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> cleaf f0 f2 c/\ cleaf f0 f2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2
+ (packing V), (saturated V), (((leaf V) ul) /\ (((leaf V) vl) /\ ((((cc_cell V) ul) = ((cc_cell V) vl)) /\ (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))), ((leaf V) ul) |- ((set_of_list ((cc_uh V) ul)) = (set_of_list ((cc_uh V) vl)))
T c==> cpacking f0 c==> csaturated f0 c==> c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f1 c= * part cset_of_list ccc_uh f0 f1 * part cset_of_list ccc_uh f0 f2
+ |- (!pv. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = pv) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (pv INSERT EMPTY)))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 f3 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT f3 part cEMPTY
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num k)) ==> ((~ ((int_of_num k) = (int_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) \/ (~ ((int_of_num k) = (int_of_num (NUMERAL (BIT1 (BIT1 _0)))))))) = ((~ ((int_of_num k) = (int_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) \/ (~ ((int_of_num k) = (int_of_num (NUMERAL (BIT1 (BIT1 _0))))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c\/ c~ c= cint_of_num f0 cint_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= cint_of_num f0 cint_of_num cNUMERAL cBIT1 cBIT1 c_0 c\/ c~ c= cint_of_num f0 cint_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= cint_of_num f0 cint_of_num cNUMERAL cBIT1 cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (saturated V), ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ ((((cc_cell V) ul) = ((cc_cell V) vl)) /\ (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))) |- ((set_of_list ((cc_uh V) ul)) = (set_of_list ((cc_uh V) vl)))
T c==> csaturated f0 c==> c/\ cpacking f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * part cset_of_list ccc_uh f0 f1 * part cset_of_list ccc_uh f0 f2
- ((NUMERAL (BIT1 (BIT1 _0))) = k) |- (k = (NUMERAL (BIT1 (BIT1 _0))))
T c==> c= cNUMERAL cBIT1 cBIT1 c_0 f0 c= f0 cNUMERAL cBIT1 cBIT1 c_0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!V. (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> ((set_of_list ((cc_uh V) ul)) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))))))) ==> ((\V. (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> ((set_of_list ((cc_uh V) ul)) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))))))) V)) = ((\V. (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> ((set_of_list ((cc_uh V) ul)) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))))))) V))
T c= c==> ! ! c==> c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 c= * part cset_of_list ccc_uh b0 b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 part cEMPTY * / ! c==> c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 c= * part cset_of_list ccc_uh b0 b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 part cEMPTY f0 * / ! c==> c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 c= * part cset_of_list ccc_uh b0 b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 part cEMPTY f0
- |- (T = (((~ (x = y)) \/ ((~ (x = z)) \/ (y = z))) = ((y = z) \/ ((~ (x = y)) \/ (~ (x = z))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ c~ c= f0 f2 c= f1 f2 c\/ c= f1 f2 c\/ c~ c= f0 f1 c~ c= f0 f2
+ (((real_ge (real_of_int _7128244)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) /\ (((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))))) |- (((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- (F ==> (((mxi V) ((cc_uh V) vl)) = ((mxi V) ((cc_uh V) vl))))
T c==> cF c= cmxi f0 ccc_uh f0 f1 cmxi f0 ccc_uh f0 f1
+ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))), (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), ((leaf V) ul), ((leaf V) vl) |- (((cc_ke V) ul) = ((cc_ke V) vl))
T c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> cleaf f0 f1 c==> cleaf f0 f2 c= ccc_ke f0 f1 ccc_ke f0 f2
+ |- (((!g'. (!t'. (!e'. (((((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> (((mxi V) ((cc_uh V) vl)) = t')) ==> (((~ g') ==> (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) = e')) ==> ((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> (((mxi V) ((cc_uh V) vl)) = t')) ==> (((~ g') ==> (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) = e')) ==> ((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> (((mxi V) ((cc_uh V) vl)) = t')) ==> (((~ g') ==> (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) = e')) ==> ((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= cmxi f0 ccc_uh f0 f1 b1 c==> c==> c~ b0 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 b2 c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cCOND b0 b1 b2 * / ! ! c==> c= c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= cmxi f0 ccc_uh f0 f1 b1 c==> c==> c~ b0 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 b2 c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cCOND b0 b1 b2 f2 * / ! ! c==> c= c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= cmxi f0 ccc_uh f0 f1 b1 c==> c==> c~ b0 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 b2 c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cCOND b0 b1 b2 f2
+ |- ((k = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((k = (NUMERAL (BIT1 (BIT1 _0)))) = F))
T c==> c= f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c= f0 cNUMERAL cBIT1 cBIT1 c_0 cF
+ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) |- (((~ (saturated _7128246)) \/ ((~ (packing _7128246)) \/ ((~ ((leaf _7128246) _7128247)) \/ ((~ ((leaf _7128246) _7128248)) \/ (~ (((cc_cell _7128246) _7128247) = ((cc_cell _7128246) _7128248))))))) \/ (((cc_ke _7128246) _7128247) = ((cc_ke _7128246) _7128248)))
T c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 c\/ c\/ c~ csaturated f0 c\/ c~ cpacking f0 c\/ c~ cleaf f0 f1 c\/ c~ cleaf f0 f2 c~ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= ccc_ke f0 f1 ccc_ke f0 f2
+ |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))) |- (((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))) /\ ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))))
T c==> c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c/\ c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
- |- (((((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))) ==> ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F))))))))) ==> (((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))) ==> ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))))) = (((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))) ==> ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F))))))))))
T c= c==> c==> c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c==> c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c==> c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF
+ (packing V), (saturated V), ((leaf V) ul), ((leaf V) vl) |- (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY))))) = ((set_of_list ((cc_uh V) ul)) = (set_of_list ((cc_uh V) vl))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c= c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY c= * part cset_of_list ccc_uh f0 f1 * part cset_of_list ccc_uh f0 f2
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ (y = (real_of_num (NUMERAL _0)))) ==> (((real_mul x) y) = (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 c= f1 creal_of_num cNUMERAL c_0 c= creal_mul f0 f1 creal_of_num cNUMERAL c_0
- T |- (T = T)
T c==> cT c= cT cT
- (((real_ge (real_of_int _7128244)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) /\ (((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ (((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (_7128257 = _7128259), (_7128258 = _7128260) |- ((_7128258 = _7128260) /\ (((cc_ke _7128257) _7128258) = ((cc_ke _7128259) _7128260)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= ccc_ke f0 f2 ccc_ke f1 f3
- |- ((!vl'. (((~ (saturated V)) \/ ((~ (packing V)) \/ ((~ ((leaf V) ul)) \/ ((~ ((leaf V) vl')) \/ (~ (((cc_cell V) ul) = ((cc_cell V) vl'))))))) \/ (((cc_ke V) ul) = ((cc_ke V) vl)))) = ((!vl. ((~ (saturated V)) \/ ((~ (packing V)) \/ ((~ ((leaf V) ul)) \/ ((~ ((leaf V) vl)) \/ (~ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) \/ (((cc_ke V) ul) = ((cc_ke V) vl))))
T c= ! c\/ c\/ c~ csaturated f0 c\/ c~ cpacking f0 c\/ c~ cleaf f0 f1 c\/ c~ cleaf f0 b0 c~ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 b0 c= ccc_ke f0 f1 ccc_ke f0 f2 c\/ ! c\/ c~ csaturated f0 c\/ c~ cpacking f0 c\/ c~ cleaf f0 f1 c\/ c~ cleaf f0 b0 c~ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 b0 c= ccc_ke f0 f1 ccc_ke f0 f2
+ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) |- ((((cc_ke _7128246) _7128247) = ((cc_ke _7128246) _7128248)) \/ ((~ (saturated _7128246)) \/ ((~ (packing _7128246)) \/ ((~ ((leaf _7128246) _7128247)) \/ ((~ ((leaf _7128246) _7128248)) \/ (~ (((cc_cell _7128246) _7128247) = ((cc_cell _7128246) _7128248))))))))
T c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 c\/ c= ccc_ke f0 f1 ccc_ke f0 f2 c\/ c~ csaturated f0 c\/ c~ cpacking f0 c\/ c~ cleaf f0 f1 c\/ c~ cleaf f0 f2 c~ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2
+ ((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ ((((cc_cell V) ul) = ((cc_cell V) vl)) /\ (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) |- (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ ((((cc_cell V) ul) = ((cc_cell V) vl)) /\ (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) /\ ((set_of_list ((cc_uh V) ul)) = (set_of_list ((cc_uh V) vl))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * part cset_of_list ccc_uh f0 f1 * part cset_of_list ccc_uh f0 f2
- |- (((!V. (!ul. ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))))) ==> ((\V. (!ul. ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))))) V)) = ((\V. (!ul. ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))))) V))
T c= c==> ! ! c==> csaturated b0 c==> cpacking b0 c==> cleaf b0 b1 c==> cleaf b0 f0 c==> c= * * part ccc_cell b0 b1 * * part ccc_cell b0 f0 c==> c= ccc_ke b0 b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke b0 f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b2 c/\ cpacking b2 c/\ cleaf b2 b2 c/\ cleaf b2 b2 c= * * part ccc_cell b2 b2 * * part ccc_cell b2 b2 c= ccc_ke b2 b2 ccc_ke b2 b2 cF * / ! c==> csaturated b0 c==> cpacking b0 c==> cleaf b0 b1 c==> cleaf b0 f0 c==> c= * * part ccc_cell b0 b1 * * part ccc_cell b0 f0 c==> c= ccc_ke b0 b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke b0 f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b2 c/\ cpacking b2 c/\ cleaf b2 b2 c/\ cleaf b2 b2 c= * * part ccc_cell b2 b2 * * part ccc_cell b2 b2 c= ccc_ke b2 b2 ccc_ke b2 b2 cF f1 * / ! c==> csaturated b0 c==> cpacking b0 c==> cleaf b0 b1 c==> cleaf b0 f0 c==> c= * * part ccc_cell b0 b1 * * part ccc_cell b0 f0 c==> c= ccc_ke b0 b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke b0 f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b2 c/\ cpacking b2 c/\ cleaf b2 b2 c/\ cleaf b2 b2 c= * * part ccc_cell b2 b2 * * part ccc_cell b2 b2 c= ccc_ke b2 b2 ccc_ke b2 b2 cF f1
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((!ul. ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F))))))))) ==> ((\ul. ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F))))))))) ul)) = ((\ul. ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F))))))))) ul))
T c= c==> ! c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 b0 c==> cleaf f0 f1 c==> c= * * part ccc_cell f0 b0 * * part ccc_cell f0 f1 c==> c= ccc_ke f0 b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b1 c/\ cpacking b1 c/\ cleaf b1 b2 c/\ cleaf b1 b2 c= * * part ccc_cell b1 b2 * * part ccc_cell b1 b2 c= ccc_ke b1 b2 ccc_ke b1 b2 cF * / c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 b0 c==> cleaf f0 f1 c==> c= * * part ccc_cell f0 b0 * * part ccc_cell f0 f1 c==> c= ccc_ke f0 b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b1 c/\ cpacking b1 c/\ cleaf b1 b2 c/\ cleaf b1 b2 c= * * part ccc_cell b1 b2 * * part ccc_cell b1 b2 c= ccc_ke b1 b2 ccc_ke b1 b2 cF f2 * / c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 b0 c==> cleaf f0 f1 c==> c= * * part ccc_cell f0 b0 * * part ccc_cell f0 f1 c==> c= ccc_ke f0 b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b1 c/\ cpacking b1 c/\ cleaf b1 b2 c/\ cleaf b1 b2 c= * * part ccc_cell b1 b2 * * part ccc_cell b1 b2 c= ccc_ke b1 b2 ccc_ke b1 b2 cF f2
+ |- ((!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ ((((cc_cell V) ul) = ((cc_cell V) vl)) /\ (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> ((set_of_list ((cc_uh V) ul)) = (set_of_list ((cc_uh V) vl))))) = T)
T c= ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 f1 c/\ cleaf f0 b0 c/\ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 b0 c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * part cset_of_list ccc_uh f0 f1 * part cset_of_list ccc_uh f0 b0 cT
+ |- (((!pu. (!pv. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = pu) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = pv) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (pu INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (pv INSERT EMPTY)))))))) ==> ((\pu. (!pv. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = pu) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = pv) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (pu INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (pv INSERT EMPTY)))))))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)))) = ((\pu. (!pv. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = pu) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = pv) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (pu INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (pv INSERT EMPTY)))))))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))))
T c= c==> ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 b0 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 b1 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT b0 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT b1 part cEMPTY * / ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 b0 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 b1 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT b0 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT b1 part cEMPTY cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 * / ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 b0 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 b1 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT b0 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT b1 part cEMPTY cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1
+ |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7128244)) /\ (((real_of_int _7128244) = (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((real_of_int _7128244) = (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7128244)) /\ (((real_of_int _7128244) = (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((real_of_int _7128244) = (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7128244)) /\ (((real_of_int _7128244) = (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((real_of_int _7128244) = (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c= creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c= creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c= creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
- |- ((!vl'. (((~ (saturated V)) \/ ((~ (packing V)) \/ ((~ ((leaf V) ul)) \/ ((~ ((leaf V) vl)) \/ (~ (((cc_cell V) ul) = ((cc_cell V) vl))))))) \/ (((cc_ke V) ul) = ((cc_ke V) vl')))) = (((~ (saturated V)) \/ ((~ (packing V)) \/ ((~ ((leaf V) ul)) \/ ((~ ((leaf V) vl)) \/ (~ (((cc_cell V) ul) = ((cc_cell V) vl))))))) \/ (!vl. (((cc_ke V) ul) = ((cc_ke V) vl)))))
T c= ! c\/ c\/ c~ csaturated f0 c\/ c~ cpacking f0 c\/ c~ cleaf f0 f1 c\/ c~ cleaf f0 f2 c~ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= ccc_ke f0 f1 ccc_ke f0 b0 c\/ c\/ c~ csaturated f0 c\/ c~ cpacking f0 c\/ c~ cleaf f0 f1 c\/ c~ cleaf f0 f2 c~ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 ! c= ccc_ke f0 f1 ccc_ke f0 b0
+ (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- ((set_of_list ((cc_uh V) ul)) = (set_of_list ((cc_uh V) vl)))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f1 c==> cleaf f0 f2 c= * part cset_of_list ccc_uh f0 f1 * part cset_of_list ccc_uh f0 f2
- (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), ((leaf V) ul), ((leaf V) vl) |- ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF
- |- ((((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))) ==> ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F))))))))) = ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))))
T c= c==> c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF
- |- (((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))) ==> ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))))
T c==> c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF
+ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = (((COND F) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))))
T c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cCOND cF cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
+ |- (((!ul. (!vl. (!pu. (!pv. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = pu) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = pv) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (pu INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (pv INSERT EMPTY)))))))))) ==> ((\ul. (!vl. (!pu. (!pv. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = pu) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = pv) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (pu INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (pv INSERT EMPTY)))))))))) ul)) = ((\ul. (!vl. (!pu. (!pv. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = pu) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = pv) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (pu INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (pv INSERT EMPTY)))))))))) ul))
T c= c==> ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 b0 c/\ cleaf f0 b1 c/\ c= cCOND c= ccc_ke f0 b0 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 b0 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 b2 c/\ c= cCOND c= ccc_ke f0 b1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 b1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b1 b3 c= * * part ccc_cell f0 b0 * * part ccc_cell f0 b1 c= * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT b2 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT b3 part cEMPTY * / ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 b0 c/\ cleaf f0 b1 c/\ c= cCOND c= ccc_ke f0 b0 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 b0 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 b2 c/\ c= cCOND c= ccc_ke f0 b1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 b1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b1 b3 c= * * part ccc_cell f0 b0 * * part ccc_cell f0 b1 c= * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT b2 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT b3 part cEMPTY f1 * / ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 b0 c/\ cleaf f0 b1 c/\ c= cCOND c= ccc_ke f0 b0 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 b0 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 b2 c/\ c= cCOND c= ccc_ke f0 b1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 b1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b1 b3 c= * * part ccc_cell f0 b0 * * part ccc_cell f0 b1 c= * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT b2 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT b3 part cEMPTY f1
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))), (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!vl. ((P vl) \/ Q)) = ((!vl. (P vl)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ |- ((((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) = p') ==> ((p' ==> (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY))))) = q')) ==> ((((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY)))))) = (p' ==> q'))))
T c==> c= c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 f3 c==> c==> f3 c= c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY f4 c= c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY c==> f3 f4
- |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT1 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
+ |- (T ==> (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY))))) = ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY)))))))
T c==> cT c= c= * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f1 f0 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f1 f2 part cEMPTY c= * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f1 f0 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f1 f2 part cEMPTY
+ T |- (T /\ (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY))))) = ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY)))))))
T c==> cT c/\ cT c= c= * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f1 f0 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f1 f2 part cEMPTY c= * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f1 f0 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f1 f2 part cEMPTY
+ (saturated V), ((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ ((((cc_cell V) ul) = ((cc_cell V) vl)) /\ (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) |- ((set_of_list ((cc_uh V) ul)) = (set_of_list ((cc_uh V) vl)))
T c==> csaturated f0 c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * part cset_of_list ccc_uh f0 f1 * part cset_of_list ccc_uh f0 f2
- (((real_ge (real_of_int _7128244)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) /\ (((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ (((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) ==> (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = (real_of_num (NUMERAL _0)))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\ul. ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F))))))))) ul)
T * / c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 b0 c==> cleaf f0 f1 c==> c= * * part ccc_cell f0 b0 * * part ccc_cell f0 f1 c==> c= ccc_ke f0 b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b1 c/\ cpacking b1 c/\ cleaf b1 b2 c/\ cleaf b1 b2 c= * * part ccc_cell b1 b2 * * part ccc_cell b1 b2 c= ccc_ke b1 b2 ccc_ke b1 b2 cF f2
+ (((real_ge (real_of_int _7128244)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) /\ (((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))))) |- (((((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((real_ge (real_of_int _7128244)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) /\ (((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))))) |- ((((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) = ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _7128244))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- ((((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY))))) ==> (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY))))) = q')) ==> (((((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY)))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY)))))) = (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY))))) ==> q')))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c==> c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY c= c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY f3 c= c==> c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY c==> c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (packing V), (saturated V), ((leaf V) ul), ((leaf V) vl) |- (((leaf V) vl) /\ ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (~ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c/\ cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))), (~ F), (~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- ((~ F) /\ F)
T c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 c==> c~ cF c==> c~ c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f2 * * part ccc_cell f0 f1 c==> c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f2 c==> cleaf f0 f1 c/\ c~ cF cF
+ (((real_ge (real_of_int _7128244)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) /\ (((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))))) |- (((!x. (((real_mul x) ((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = ((\x. (((real_mul x) ((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- (((!V. (!ul. (!vl. (!pu. (!pv. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = pu) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = pv) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (pu INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (pv INSERT EMPTY))))))))))) ==> ((\V. (!ul. (!vl. (!pu. (!pv. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = pu) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = pv) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (pu INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (pv INSERT EMPTY))))))))))) V)) = ((\V. (!ul. (!vl. (!pu. (!pv. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = pu) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = pv) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (pu INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (pv INSERT EMPTY))))))))))) V))
T c= c==> ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c/\ c= cCOND c= ccc_ke b0 b1 cNUMERAL cBIT1 cBIT1 c_0 cmxi b0 ccc_uh b0 b1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 b3 c/\ c= cCOND c= ccc_ke b0 b2 cNUMERAL cBIT1 cBIT1 c_0 cmxi b0 ccc_uh b0 b2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b2 b4 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT b3 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 b2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b2 * * part cINSERT b4 part cEMPTY * / ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c/\ c= cCOND c= ccc_ke b0 b1 cNUMERAL cBIT1 cBIT1 c_0 cmxi b0 ccc_uh b0 b1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 b3 c/\ c= cCOND c= ccc_ke b0 b2 cNUMERAL cBIT1 cBIT1 c_0 cmxi b0 ccc_uh b0 b2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b2 b4 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT b3 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 b2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b2 * * part cINSERT b4 part cEMPTY f0 * / ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c/\ c= cCOND c= ccc_ke b0 b1 cNUMERAL cBIT1 cBIT1 c_0 cmxi b0 ccc_uh b0 b1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 b3 c/\ c= cCOND c= ccc_ke b0 b2 cNUMERAL cBIT1 cBIT1 c_0 cmxi b0 ccc_uh b0 b2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b2 b4 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT b3 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 b2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b2 * * part cINSERT b4 part cEMPTY f0
+ (packing V), (saturated V), ((leaf V) vl) |- ((((saturated V) /\ ((packing V) /\ ((leaf V) vl))) ==> ((set_of_list ((cc_uh V) vl)) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY)))))) = ((set_of_list ((cc_uh V) vl)) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 f1 c= c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 c= * part cset_of_list ccc_uh f0 f1 * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY c= * part cset_of_list ccc_uh f0 f1 * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY
- |- ((~ (_7128255 = _7128256)) \/ ((saturated _7128256) \/ (~ (saturated _7128255))))
T c\/ c~ c= f0 f1 c\/ csaturated f1 c~ csaturated f0
+ |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) k)
T * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_ge (real_of_int _7128244)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) /\ (((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))))) |- ((((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _7128244))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) ==> (((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _7128244))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = (real_of_num (NUMERAL _0)))) = (((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _7128244))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ F)
T c==> c~ c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f2 * * part ccc_cell f0 f1 c==> c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f2 c==> cleaf f0 f1 c/\ c~ c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF
+ (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> F)
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF
- (_7128265 = _7128266) |- ((_7128265 = _7128266) /\ ((NUMERAL _7128265) = (NUMERAL _7128266)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), ((leaf V) ul), ((leaf V) vl) |- ((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> cleaf f0 f1 c==> cleaf f0 f2 c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2
+ (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- (T = ((((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY)))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY)))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f1 c==> cleaf f0 f2 c= cT c==> c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
- (~ F) |- ((F = F) = T)
T c==> c~ cF c= c= cF cF cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_7128261 = _7128262) |- ((_7128261 = _7128262) /\ ((BIT1 _7128261) = (BIT1 _7128262)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ (k = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (~ (k = (NUMERAL (BIT1 (BIT1 _0)))))
T c==> c= f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= f0 cNUMERAL cBIT1 cBIT1 c_0
+ (((cc_cell V) ul) = ((cc_cell V) vl)), ((leaf V) ul), ((leaf V) vl) |- (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl))))
T c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> cleaf f0 f1 c==> cleaf f0 f2 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2
- |- ((~ (_7128265 = _7128266)) \/ ((NUMERAL _7128265) = (NUMERAL _7128266)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- (_7128255 = _7128256) |- ((_7128255 = _7128256) /\ ((saturated _7128256) \/ (~ (saturated _7128255))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ csaturated f1 c~ csaturated f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
+ (~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) |- ((((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> F)
T c==> c~ c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF
+ (packing V), (saturated V), ((leaf V) vl) |- ((set_of_list ((cc_uh V) vl)) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY)))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 f1 c= * part cset_of_list ccc_uh f0 f1 * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY
- (saturated V) |- ((saturated V) /\ ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (~ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl))))))))))))))
T c==> csaturated f0 c/\ csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2
+ |- (((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F) = F)
T c= c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF cF
- |- ((~ (_7128249 = _7128251)) \/ ((~ (_7128250 = _7128252)) \/ (((leaf _7128251) _7128252) \/ (~ ((leaf _7128249) _7128250)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cleaf f1 f3 c~ cleaf f0 f2
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- |- ((~ (_7128257 = _7128259)) \/ ((~ (_7128258 = _7128260)) \/ (((cc_ke _7128257) _7128258) = ((cc_ke _7128259) _7128260))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= ccc_ke f0 f2 ccc_ke f1 f3
+ |- (((!e'. (((((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> (((mxi V) ((cc_uh V) vl)) = t')) ==> (((~ g') ==> (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) = e')) ==> ((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = (((COND g') t') e')))))) ==> ((\e'. (((((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> (((mxi V) ((cc_uh V) vl)) = t')) ==> (((~ g') ==> (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) = e')) ==> ((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = (((COND g') t') e')))))) e')) = ((\e'. (((((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> (((mxi V) ((cc_uh V) vl)) = t')) ==> (((~ g') ==> (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) = e')) ==> ((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> c==> f2 c= cmxi f0 ccc_uh f0 f1 f3 c==> c==> c~ f2 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 b0 c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cCOND f2 f3 b0 * / c==> c= c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> c==> f2 c= cmxi f0 ccc_uh f0 f1 f3 c==> c==> c~ f2 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 b0 c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cCOND f2 f3 b0 f4 * / c==> c= c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> c==> f2 c= cmxi f0 ccc_uh f0 f1 f3 c==> c==> c~ f2 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 b0 c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cCOND f2 f3 b0 f4
- (_7128257 = _7128259) |- ((_7128257 = _7128259) /\ ((~ (_7128258 = _7128260)) \/ (((cc_ke _7128257) _7128258) = ((cc_ke _7128259) _7128260))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= ccc_ke f0 f2 ccc_ke f1 f3
- F |- (F = T)
T c==> cF c= cF cT
+ |- (((!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) ==> ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) k)) = ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) k))
T c= c==> ! cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
- (_7128253 = _7128254) |- ((_7128253 = _7128254) /\ ((packing _7128254) \/ (~ (packing _7128253))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ cpacking f1 c~ cpacking f0
- |- ((_7128265 = _7128266) ==> ((NUMERAL _7128265) = (NUMERAL _7128266)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ |- (((!t'. (!e'. (((((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> (((mxi V) ((cc_uh V) vl)) = t')) ==> (((~ g') ==> (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) = e')) ==> ((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> (((mxi V) ((cc_uh V) vl)) = t')) ==> (((~ g') ==> (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) = e')) ==> ((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> (((mxi V) ((cc_uh V) vl)) = t')) ==> (((~ g') ==> (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) = e')) ==> ((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> c==> f2 c= cmxi f0 ccc_uh f0 f1 b0 c==> c==> c~ f2 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 b1 c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cCOND f2 b0 b1 * / ! c==> c= c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> c==> f2 c= cmxi f0 ccc_uh f0 f1 b0 c==> c==> c~ f2 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 b1 c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cCOND f2 b0 b1 f3 * / ! c==> c= c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> c==> f2 c= cmxi f0 ccc_uh f0 f1 b0 c==> c==> c~ f2 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 b1 c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cCOND f2 b0 b1 f3
+ |- ((\q'. ((((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) = p') ==> ((p' ==> (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY))))) = q')) ==> ((((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY)))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 f3 c==> c==> f3 c= c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY b0 c= c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY c==> f3 b0 f4
+ |- (((x = (real_of_num (NUMERAL _0))) /\ (y = (real_of_num (NUMERAL _0)))) ==> (((real_add x) y) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c= f1 creal_of_num cNUMERAL c_0 c= creal_add f0 f1 creal_of_num cNUMERAL c_0
- (k = (NUMERAL (BIT1 (BIT1 _0)))) |- ((NUMERAL (BIT1 (BIT1 _0))) = k)
T c==> c= f0 cNUMERAL cBIT1 cBIT1 c_0 c= cNUMERAL cBIT1 cBIT1 c_0 f0
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
+ (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- (((((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY)))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY)))))) = (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY))))) ==> T))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f1 c==> cleaf f0 f2 c= c==> c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY c==> c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY cT
- (_7128249 = _7128251) |- ((_7128250 = _7128252) ==> (((leaf _7128251) _7128252) \/ (~ ((leaf _7128249) _7128250))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cleaf f1 f3 c~ cleaf f0 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
+ |- ((\q'. (((((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY)))))) = p') ==> ((p' ==> (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY))))) = q')) ==> (((((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY)))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY)))))) = (p' ==> q'))))) q')
T * / c==> c= c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY f3 c==> c==> f3 c= c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY b0 c= c==> c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY c==> f3 b0 f4
+ |- (((!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> ((set_of_list ((cc_uh V) ul)) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY))))))) ==> ((\ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> ((set_of_list ((cc_uh V) ul)) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY))))))) ul)) = ((\ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> ((set_of_list ((cc_uh V) ul)) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY))))))) ul))
T c= c==> ! c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 b0 c= * part cset_of_list ccc_uh f0 b0 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 part cEMPTY * / c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 b0 c= * part cset_of_list ccc_uh f0 b0 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 part cEMPTY f1 * / c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 b0 c= * part cset_of_list ccc_uh f0 b0 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 part cEMPTY f1
- (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (~ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f1 c==> cleaf f0 f2 c/\ c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2
+ (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- ((set_of_list ((cc_uh V) ul)) = (set_of_list ((cc_uh V) vl)))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f1 c==> cleaf f0 f2 c= * part cset_of_list ccc_uh f0 f1 * part cset_of_list ccc_uh f0 f2
+ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) |- (((saturated _7128246) /\ ((packing _7128246) /\ (((leaf _7128246) _7128247) /\ (((leaf _7128246) _7128248) /\ (((cc_cell _7128246) _7128247) = ((cc_cell _7128246) _7128248)))))) ==> (((cc_ke _7128246) _7128247) = ((cc_ke _7128246) _7128248)))
T c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= ccc_ke f0 f1 ccc_ke f0 f2
+ (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY)))))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f1 c==> cleaf f0 f2 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY
+ (~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)
T c==> c~ c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f2 * * part ccc_cell f0 f1 c==> c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f2 c==> cleaf f0 f1 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF
+ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) |- ((\V. (!ul. (!vl. (((~ (saturated V)) \/ ((~ (packing V)) \/ ((~ ((leaf V) ul)) \/ ((~ ((leaf V) vl)) \/ (~ (((cc_cell V) ul) = ((cc_cell V) vl))))))) \/ (((cc_ke V) ul) = ((cc_ke V) vl)))))) _7128246)
T c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 * / ! ! c\/ c\/ c~ csaturated b0 c\/ c~ cpacking b0 c\/ c~ cleaf b0 b1 c\/ c~ cleaf b0 b2 c~ c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 f0
+ (packing V) |- ((packing V) = T)
T c==> cpacking f0 c= cpacking f0 cT
+ |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
- (_7128267 = _7128269) |- ((_7128267 = _7128269) /\ ((~ (_7128268 = _7128270)) \/ (((cc_cell _7128267) _7128268) = ((cc_cell _7128269) _7128270))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part ccc_cell f0 f2 * * part ccc_cell f1 f3
- |- ((_7128257 = _7128259) ==> ((~ (_7128258 = _7128260)) \/ (((cc_ke _7128257) _7128258) = ((cc_ke _7128259) _7128260))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= ccc_ke f0 f2 ccc_ke f1 f3
+ (packing V), (saturated V), ((((cc_cell V) ul) = ((cc_cell V) vl)) /\ (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((leaf V) ul), ((leaf V) vl) |- ((set_of_list ((cc_uh V) ul)) = (set_of_list ((cc_uh V) vl)))
T c==> cpacking f0 c==> csaturated f0 c==> c/\ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f1 c==> cleaf f0 f2 c= * part cset_of_list ccc_uh f0 f1 * part cset_of_list ccc_uh f0 f2
+ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) |- (((!vl. (((~ (saturated _7128246)) \/ ((~ (packing _7128246)) \/ ((~ ((leaf _7128246) _7128247)) \/ ((~ ((leaf _7128246) vl)) \/ (~ (((cc_cell _7128246) _7128247) = ((cc_cell _7128246) vl))))))) \/ (((cc_ke _7128246) _7128247) = ((cc_ke _7128246) vl)))) ==> ((\vl. (((~ (saturated _7128246)) \/ ((~ (packing _7128246)) \/ ((~ ((leaf _7128246) _7128247)) \/ ((~ ((leaf _7128246) vl)) \/ (~ (((cc_cell _7128246) _7128247) = ((cc_cell _7128246) vl))))))) \/ (((cc_ke _7128246) _7128247) = ((cc_ke _7128246) vl)))) _7128248)) = ((\vl. (((~ (saturated _7128246)) \/ ((~ (packing _7128246)) \/ ((~ ((leaf _7128246) _7128247)) \/ ((~ ((leaf _7128246) vl)) \/ (~ (((cc_cell _7128246) _7128247) = ((cc_cell _7128246) vl))))))) \/ (((cc_ke _7128246) _7128247) = ((cc_ke _7128246) vl)))) _7128248))
T c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 c= c==> ! c\/ c\/ c~ csaturated f0 c\/ c~ cpacking f0 c\/ c~ cleaf f0 f1 c\/ c~ cleaf f0 b0 c~ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 b0 c= ccc_ke f0 f1 ccc_ke f0 b0 * / c\/ c\/ c~ csaturated f0 c\/ c~ cpacking f0 c\/ c~ cleaf f0 f1 c\/ c~ cleaf f0 b0 c~ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 b0 c= ccc_ke f0 f1 ccc_ke f0 b0 f2 * / c\/ c\/ c~ csaturated f0 c\/ c~ cpacking f0 c\/ c~ cleaf f0 f1 c\/ c~ cleaf f0 b0 c~ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 b0 c= ccc_ke f0 f1 ccc_ke f0 b0 f2
- (k = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((k = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT1 (BIT1 _0))) = k) = F))
T c==> c= f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c= cNUMERAL cBIT1 cBIT1 c_0 f0 cF
- (~ (saturated V)), (saturated V) |- ((~ (saturated V)) /\ (saturated V))
T c==> c~ csaturated f0 c==> csaturated f0 c/\ c~ csaturated f0 csaturated f0
- |- ((_7128261 = _7128262) ==> ((BIT1 _7128261) = (BIT1 _7128262)))
T c==> c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
+ |- (((((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> (((mxi V) ((cc_uh V) vl)) = t')) ==> (((~ g') ==> (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) = e')) ==> ((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = (((COND g') t') e')))))
T c==> c= c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> c==> f2 c= cmxi f0 ccc_uh f0 f1 f3 c==> c==> c~ f2 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 f4 c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cCOND f2 f3 f4
+ |- ((~ (a \/ b)) = ((~ a) /\ (~ b)))
T c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
- (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))), (~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 c==> c~ c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f2 * * part ccc_cell f0 f1 c==> c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f2 c==> cleaf f0 f1 c/\ c~ c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), ((leaf V) ul), ((leaf V) vl) |- ((((cc_cell V) ul) = ((cc_cell V) vl)) /\ ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (~ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> cleaf f0 f1 c==> cleaf f0 f2 c/\ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2
+ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (((~ F) ==> (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) = e')) ==> ((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = (((COND F) ((mxi V) ((cc_uh V) vl))) e')))
T c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c==> c~ cF c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 f2 c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cCOND cF cmxi f0 ccc_uh f0 f1 f2
- (k = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (~ ((NUMERAL (BIT1 (BIT1 _0))) = k))
T c==> c= f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT1 c_0 f0
- (((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))) ==> ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F))))))))) |- ((((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))) ==> ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F))))))))) /\ (((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))) ==> ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F))))))))))
T c==> c==> c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c/\ c==> c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c==> c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF
- (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF
+ ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY))))) |- (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY))))) /\ (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY))))) = T))
T c==> c= * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f1 f0 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f1 f2 part cEMPTY c/\ c= * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f1 f0 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f1 f2 part cEMPTY c= c= * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f1 f0 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f1 f2 part cEMPTY cT
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((~ (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- ((saturated V) /\ ((packing V) /\ ((leaf V) ul))) |- (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ ((set_of_list ((cc_uh V) ul)) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 c/\ c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 c= * part cset_of_list ccc_uh f0 f1 * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY
+ ((leaf V) vl) |- (((leaf V) vl) = T)
T c==> cleaf f0 f1 c= cleaf f0 f1 cT
+ |- (~ (~ (((int_le (int_of_num (NUMERAL _0))) _7128244) ==> ((~ (_7128244 = (int_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) \/ (~ (_7128244 = (int_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))
T c~ c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c\/ c~ c= f0 cint_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= f0 cint_of_num cNUMERAL cBIT1 cBIT1 c_0
+ |- ((((COND F) t1) t2) = t2)
T c= cCOND cF f0 f1 f1
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _7128244)) /\ (((real_of_int _7128244) = (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((real_of_int _7128244) = (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = (~ (((int_le (int_of_num (NUMERAL _0))) _7128244) ==> ((~ (_7128244 = (int_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) \/ (~ (_7128244 = (int_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c= creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c\/ c~ c= f0 cint_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= f0 cint_of_num cNUMERAL cBIT1 cBIT1 c_0
+ |- (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY
- |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) |- (!ul. (!vl. (((~ (saturated _7128246)) \/ ((~ (packing _7128246)) \/ ((~ ((leaf _7128246) ul)) \/ ((~ ((leaf _7128246) vl)) \/ (~ (((cc_cell _7128246) ul) = ((cc_cell _7128246) vl))))))) \/ (((cc_ke _7128246) ul) = ((cc_ke _7128246) vl)))))
T c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 ! ! c\/ c\/ c~ csaturated f0 c\/ c~ cpacking f0 c\/ c~ cleaf f0 b0 c\/ c~ cleaf f0 b1 c~ c= * * part ccc_cell f0 b0 * * part ccc_cell f0 b1 c= ccc_ke f0 b0 ccc_ke f0 b1
- (((real_ge (real_of_int _7128244)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) /\ (((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (~ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl))))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), ((((cc_cell V) ul) = ((cc_cell V) vl)) /\ (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((leaf V) ul), ((leaf V) vl) |- ((set_of_list ((cc_uh V) ul)) = (set_of_list ((cc_uh V) vl)))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c/\ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f1 c==> cleaf f0 f2 c= * part cset_of_list ccc_uh f0 f1 * part cset_of_list ccc_uh f0 f2
- |- ((!vl. (P \/ (Q vl))) = (P \/ (!vl. (Q vl))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
+ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))), (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- ((((cc_ke V) ul) = ((cc_ke V) vl)) /\ (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f1 c==> cleaf f0 f2 c/\ c= ccc_ke f0 f1 ccc_ke f0 f2 c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (saturated V) |- ((saturated V) = T)
T c==> csaturated f0 c= csaturated f0 cT
+ (packing V), (saturated V), (((leaf V) vl) /\ ((((cc_cell V) ul) = ((cc_cell V) vl)) /\ (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))), ((leaf V) ul) |- ((set_of_list ((cc_uh V) ul)) = (set_of_list ((cc_uh V) vl)))
T c==> cpacking f0 c==> csaturated f0 c==> c/\ cleaf f0 f1 c/\ c= * * part ccc_cell f0 f2 * * part ccc_cell f0 f1 c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f2 c= * part cset_of_list ccc_uh f0 f2 * part cset_of_list ccc_uh f0 f1
+ (k = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((k = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((k = (NUMERAL (BIT1 (BIT1 _0)))) = F))
T c==> c= f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c= f0 cNUMERAL cBIT1 cBIT1 c_0 cF
- |- ((_7128267 = _7128269) ==> ((~ (_7128268 = _7128270)) \/ (((cc_cell _7128267) _7128268) = ((cc_cell _7128269) _7128270))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part ccc_cell f0 f2 * * part ccc_cell f1 f3
+ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((F ==> (((mxi V) ((cc_uh V) vl)) = t')) ==> (((~ F) ==> (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) = e')) ==> ((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = (((COND F) t') e'))))
T c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c==> cF c= cmxi f0 ccc_uh f0 f1 f2 c==> c==> c~ cF c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 f3 c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cCOND cF f2 f3
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
+ |- ((!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e')))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 cT
+ |- (((((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY)))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY)))))) = ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY))))))
T c= c==> c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY
+ (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), ((leaf V) ul), ((leaf V) vl) |- ((((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl))) = (((cc_ke V) ul) = ((cc_ke V) vl)))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> cleaf f0 f1 c==> cleaf f0 f2 c= c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= ccc_ke f0 f1 ccc_ke f0 f2 c= ccc_ke f0 f1 ccc_ke f0 f2
- (packing V), (saturated V) |- ((packing V) /\ (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (~ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))))))))))
T c==> cpacking f0 c==> csaturated f0 c/\ cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2
+ |- (((!pv. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = pv) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (pv INSERT EMPTY))))))) ==> ((\pv. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = pv) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (pv INSERT EMPTY))))))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)))) = ((\pv. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = pv) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (pv INSERT EMPTY))))))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))))
T c= c==> ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 b0 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT b0 part cEMPTY * / c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 b0 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT b0 part cEMPTY cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 * / c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 b0 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT b0 part cEMPTY cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2
+ (((real_ge (real_of_int _7128244)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) /\ (((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))))) |- (!x. (((real_mul x) ((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (k = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (((~ (k = (NUMERAL (BIT1 (BIT1 _0))))) ==> ((k = (NUMERAL (BIT1 (BIT1 _0)))) = F)) = ((k = (NUMERAL (BIT1 (BIT1 _0)))) = F))
T c==> c= f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c==> c~ c= f0 cNUMERAL cBIT1 cBIT1 c_0 c= c= f0 cNUMERAL cBIT1 cBIT1 c_0 cF c= c= f0 cNUMERAL cBIT1 cBIT1 c_0 cF
- |- ((\vl. (!V. (!ul. ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F))))))))))) vl)
T * / ! ! c==> csaturated b1 c==> cpacking b1 c==> cleaf b1 b2 c==> cleaf b1 b0 c==> c= * * part ccc_cell b1 b2 * * part ccc_cell b1 b0 c==> c= ccc_ke b1 b2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke b1 b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b3 c/\ cpacking b3 c/\ cleaf b3 b3 c/\ cleaf b3 b3 c= * * part ccc_cell b3 b3 * * part ccc_cell b3 b3 c= ccc_ke b3 b3 ccc_ke b3 b3 cF f0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- ((T ==> (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY))))) = q')) ==> ((((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY)))))) = (T ==> q')))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c==> cT c= c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY f3 c= c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY c==> cT f3
- |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c= c* cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ |- ((\p'. (!q'. ((((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) = p') ==> ((p' ==> (((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY))))) = q')) ==> ((((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) INSERT EMPTY)))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 b0 c==> c==> b0 c= c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY b1 c= c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 c/\ c= cCOND c= ccc_ke f0 f2 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f2 part cEMPTY c==> b0 b1 f3
- (~ F) |- (F = F)
T c==> c~ cF c= cF cF
+ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) |- ((\vl. (((~ (saturated _7128246)) \/ ((~ (packing _7128246)) \/ ((~ ((leaf _7128246) _7128247)) \/ ((~ ((leaf _7128246) vl)) \/ (~ (((cc_cell _7128246) _7128247) = ((cc_cell _7128246) vl))))))) \/ (((cc_ke _7128246) _7128247) = ((cc_ke _7128246) vl)))) _7128248)
T c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 * / c\/ c\/ c~ csaturated f0 c\/ c~ cpacking f0 c\/ c~ cleaf f0 f1 c\/ c~ cleaf f0 b0 c~ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 b0 c= ccc_ke f0 f1 ccc_ke f0 b0 f2
+ |- ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = ((NUMERAL (BIT1 (BIT1 _0))) + (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c+ cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- (((!vl. (!pu. (!pv. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = pu) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = pv) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (pu INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (pv INSERT EMPTY))))))))) ==> ((\vl. (!pu. (!pv. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = pu) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = pv) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (pu INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (pv INSERT EMPTY))))))))) vl)) = ((\vl. (!pu. (!pv. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = pu) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = pv) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (pu INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (pv INSERT EMPTY))))))))) vl))
T c= c==> ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 b0 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 b1 c/\ c= cCOND c= ccc_ke f0 b0 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 b0 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 b2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 b0 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT b1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT b2 part cEMPTY * / ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 b0 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 b1 c/\ c= cCOND c= ccc_ke f0 b0 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 b0 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 b2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 b0 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT b1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT b2 part cEMPTY f2 * / ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 b0 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 b1 c/\ c= cCOND c= ccc_ke f0 b0 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 b0 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 b2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 b0 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT b1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT b2 part cEMPTY f2
- |- ((((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c= creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> ((set_of_list ((cc_uh V) ul)) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul)) INSERT EMPTY))))))) ul)
T * / c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 b0 c= * part cset_of_list ccc_uh f0 b0 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 part cEMPTY f1
+ |- ((!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ ((((cc_cell V) ul) = ((cc_cell V) vl)) /\ (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> ((set_of_list ((cc_uh V) ul)) = (set_of_list ((cc_uh V) vl)))))) = T)
T c= ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cleaf f0 b0 c/\ cleaf f0 b1 c/\ c= * * part ccc_cell f0 b0 * * part ccc_cell f0 b1 c= ccc_ke f0 b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * part cset_of_list ccc_uh f0 b0 * part cset_of_list ccc_uh f0 b1 cT
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_ge (real_of_int _7128244)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) /\ (((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))))) |- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _7128244))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_add (real_of_int _7128244)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (T = (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cT c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ |- ((~ ((int_of_num k) = (int_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) \/ (~ ((int_of_num k) = (int_of_num (NUMERAL (BIT1 (BIT1 _0)))))))
T c\/ c~ c= cint_of_num f0 cint_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ c= cint_of_num f0 cint_of_num cNUMERAL cBIT1 cBIT1 c_0
+ (~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- F
T c==> c~ c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f2 * * part ccc_cell f0 f1 c==> c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f2 c==> cleaf f0 f1 cF
+ |- ((\vl. (!pu. (!pv. (((packing V) /\ ((saturated V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((((COND (((cc_ke V) ul) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) ul))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) = pu) /\ (((((COND (((cc_ke V) vl) = (NUMERAL (BIT1 (BIT1 _0))))) ((mxi V) ((cc_uh V) vl))) ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))) = pv) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))))) ==> ((((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (pu INSERT EMPTY)))) = (((EL (NUMERAL _0)) vl) INSERT (((EL (NUMERAL (BIT1 _0))) vl) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) vl) INSERT (pv INSERT EMPTY))))))))) vl)
T * / ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf f0 f1 c/\ cleaf f0 b0 c/\ c= cCOND c= ccc_ke f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 b1 c/\ c= cCOND c= ccc_ke f0 b0 cNUMERAL cBIT1 cBIT1 c_0 cmxi f0 ccc_uh f0 b0 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 b2 c= * * part ccc_cell f0 f1 * * part ccc_cell f0 b0 c= * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT b1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT b2 part cEMPTY f2
+ |- (((NUMERAL (BIT1 (BIT1 _0))) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c= c+ cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) |- (((!V. (!ul. (!vl. (((~ (saturated V)) \/ ((~ (packing V)) \/ ((~ ((leaf V) ul)) \/ ((~ ((leaf V) vl)) \/ (~ (((cc_cell V) ul) = ((cc_cell V) vl))))))) \/ (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> ((\V. (!ul. (!vl. (((~ (saturated V)) \/ ((~ (packing V)) \/ ((~ ((leaf V) ul)) \/ ((~ ((leaf V) vl)) \/ (~ (((cc_cell V) ul) = ((cc_cell V) vl))))))) \/ (((cc_ke V) ul) = ((cc_ke V) vl)))))) _7128246)) = ((\V. (!ul. (!vl. (((~ (saturated V)) \/ ((~ (packing V)) \/ ((~ ((leaf V) ul)) \/ ((~ ((leaf V) vl)) \/ (~ (((cc_cell V) ul) = ((cc_cell V) vl))))))) \/ (((cc_ke V) ul) = ((cc_ke V) vl)))))) _7128246))
T c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 c= c==> ! ! ! c\/ c\/ c~ csaturated b0 c\/ c~ cpacking b0 c\/ c~ cleaf b0 b1 c\/ c~ cleaf b0 b2 c~ c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 * / ! ! c\/ c\/ c~ csaturated b0 c\/ c~ cpacking b0 c\/ c~ cleaf b0 b1 c\/ c~ cleaf b0 b2 c~ c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 f0 * / ! ! c\/ c\/ c~ csaturated b0 c\/ c~ cpacking b0 c\/ c~ cleaf b0 b1 c\/ c~ cleaf b0 b2 c~ c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 f0
- (_7128267 = _7128269), (_7128268 = _7128270) |- ((_7128268 = _7128270) /\ (((cc_cell _7128267) _7128268) = ((cc_cell _7128269) _7128270)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= * * part ccc_cell f0 f2 * * part ccc_cell f1 f3
+ |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7128244)) /\ (((real_of_int _7128244) = (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((real_of_int _7128244) = (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c= creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cF
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))), (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- (((((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> F) = F)
T c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f1 c==> cleaf f0 f2 c= c==> c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF cF
- |- ((!ul. (P ul)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
+ |- (((~ (saturated _7128246)) \/ ((~ (packing _7128246)) \/ ((~ ((leaf _7128246) _7128247)) \/ ((~ ((leaf _7128246) _7128248)) \/ ((~ (((cc_cell _7128246) _7128247) = ((cc_cell _7128246) _7128248))) \/ (((cc_ke _7128246) _7128247) = ((cc_ke _7128246) _7128248))))))) = ((((cc_ke _7128246) _7128247) = ((cc_ke _7128246) _7128248)) \/ ((~ (saturated _7128246)) \/ ((~ (packing _7128246)) \/ ((~ ((leaf _7128246) _7128247)) \/ ((~ ((leaf _7128246) _7128248)) \/ (~ (((cc_cell _7128246) _7128247) = ((cc_cell _7128246) _7128248)))))))))
T c= c\/ c~ csaturated f0 c\/ c~ cpacking f0 c\/ c~ cleaf f0 f1 c\/ c~ cleaf f0 f2 c\/ c~ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= ccc_ke f0 f1 ccc_ke f0 f2 c\/ c= ccc_ke f0 f1 ccc_ke f0 f2 c\/ c~ csaturated f0 c\/ c~ cpacking f0 c\/ c~ cleaf f0 f1 c\/ c~ cleaf f0 f2 c~ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (packing V), (saturated V), (((leaf V) ul) /\ (((leaf V) vl) /\ ((((cc_cell V) ul) = ((cc_cell V) vl)) /\ (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) |- ((set_of_list ((cc_uh V) ul)) = (set_of_list ((cc_uh V) vl)))
T c==> cpacking f0 c==> csaturated f0 c==> c/\ cleaf f0 f1 c/\ cleaf f0 f2 c/\ c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * part cset_of_list ccc_uh f0 f1 * part cset_of_list ccc_uh f0 f2
+ (~ F) |- ((~ F) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) vl))))
T c==> c~ cF c/\ c~ cF c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1
- (~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- (~ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))))
T c==> c~ c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f2 * * part ccc_cell f0 f1 c==> c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f2 c==> cleaf f0 f1 c~ ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2
+ |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (_7128263 = _7128264) |- ((_7128263 = _7128264) /\ ((BIT0 _7128263) = (BIT0 _7128264)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT0 f0 cBIT0 f1
+ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))), (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f1 c==> cleaf f0 f2 c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- (packing V), (saturated V), ((leaf V) ul) |- (((leaf V) ul) /\ (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (~ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 f1 c/\ cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((k = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((NUMERAL (BIT1 (BIT1 _0))) = k) = F))
T c==> c= f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c= cNUMERAL cBIT1 cBIT1 c_0 f0 cF
- (k = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (((~ ((NUMERAL (BIT1 (BIT1 _0))) = k)) ==> (((NUMERAL (BIT1 (BIT1 _0))) = k) = F)) = (((NUMERAL (BIT1 (BIT1 _0))) = k) = F))
T c==> c= f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c==> c~ c= cNUMERAL cBIT1 cBIT1 c_0 f0 c= c= cNUMERAL cBIT1 cBIT1 c_0 f0 cF c= c= cNUMERAL cBIT1 cBIT1 c_0 f0 cF
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- |- (((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (~ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))))))))))) = T)
T c= c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cT
- |- ((~ (_7128263 = _7128264)) \/ ((BIT0 _7128263) = (BIT0 _7128264)))
T c\/ c~ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- |- ((~ (_7128253 = _7128254)) \/ ((packing _7128254) \/ (~ (packing _7128253))))
T c\/ c~ c= f0 f1 c\/ cpacking f1 c~ cpacking f0
- (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))), (~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- ((~ F) ==> F)
T c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 c==> c~ c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f2 * * part ccc_cell f0 f1 c==> c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f2 c==> cleaf f0 f1 c==> c~ cF cF
- (_7128267 = _7128269) |- ((_7128268 = _7128270) ==> (((cc_cell _7128267) _7128268) = ((cc_cell _7128269) _7128270)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part ccc_cell f0 f2 * * part ccc_cell f1 f3
- (~ ((leaf V) vl)), ((leaf V) vl) |- ((~ ((leaf V) vl)) /\ ((leaf V) vl))
T c==> c~ cleaf f0 f1 c==> cleaf f0 f1 c/\ c~ cleaf f0 f1 cleaf f0 f1
- (~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), (((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ul), ((leaf V) vl) |- ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (~ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl))))))))
T c==> c~ c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f2 * * part ccc_cell f0 f1 c==> c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 f2 c==> cleaf f0 f1 c/\ c~ c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2
- (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))), (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), ((leaf V) ul), ((leaf V) vl) |- ((~ (((cc_ke V) ul) = ((cc_ke V) vl))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))
T c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c~ c= ccc_ke f0 f1 ccc_ke f0 f2 c= ccc_ke f0 f1 ccc_ke f0 f2
- ((leaf V) vl) |- ((~ ((leaf V) vl)) ==> ((leaf V) vl))
T c==> cleaf f0 f1 c==> c~ cleaf f0 f1 cleaf f0 f1
- (saturated V) |- ((~ (saturated V)) ==> (saturated V))
T c==> csaturated f0 c==> c~ csaturated f0 csaturated f0
- |- ((\V. (!ul. ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))))) V)
T * / ! c==> csaturated b0 c==> cpacking b0 c==> cleaf b0 b1 c==> cleaf b0 f0 c==> c= * * part ccc_cell b0 b1 * * part ccc_cell b0 f0 c==> c= ccc_ke b0 b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke b0 f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b2 c/\ cpacking b2 c/\ cleaf b2 b2 c/\ cleaf b2 b2 c= * * part ccc_cell b2 b2 * * part ccc_cell b2 b2 c= ccc_ke b2 b2 ccc_ke b2 b2 cF f1
- (_7128249 = _7128251), (_7128250 = _7128252) |- ((_7128250 = _7128252) /\ (((leaf _7128251) _7128252) \/ (~ ((leaf _7128249) _7128250))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ cleaf f1 f3 c~ cleaf f0 f2
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!V. (!ul. ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (~ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))))))))))))) = T)
T c= ! ! c==> csaturated b0 c==> cpacking b0 c==> cleaf b0 b1 c==> cleaf b0 f0 c==> c= * * part ccc_cell b0 b1 * * part ccc_cell b0 f0 c==> c= ccc_ke b0 b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke b0 f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ! ! ! c==> c/\ csaturated b2 c/\ cpacking b2 c/\ cleaf b2 b2 c/\ cleaf b2 b2 c= * * part ccc_cell b2 b2 * * part ccc_cell b2 b2 c= ccc_ke b2 b2 ccc_ke b2 b2 cT
- (_7128257 = _7128259) |- ((_7128258 = _7128260) ==> (((cc_ke _7128257) _7128258) = ((cc_ke _7128259) _7128260)))
T c==> c= f0 f1 c==> c= f2 f3 c= ccc_ke f0 f2 ccc_ke f1 f3
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((_7128255 = _7128256) ==> ((saturated _7128256) \/ (~ (saturated _7128255))))
T c==> c= f0 f1 c\/ csaturated f1 c~ csaturated f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (packing V) |- ((~ (packing V)) ==> (packing V))
T c==> cpacking f0 c==> c~ cpacking f0 cpacking f0
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- (_7128253 = _7128254) |- ((((packing _7128253) = (packing _7128254)) ==> ((packing _7128254) \/ (~ (packing _7128253)))) = ((packing _7128254) \/ (~ (packing _7128253))))
T c==> c= f0 f1 c= c==> c= cpacking f0 cpacking f1 c\/ cpacking f1 c~ cpacking f0 c\/ cpacking f1 c~ cpacking f0
- (saturated V) |- ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F)))))))
T c==> csaturated f0 c==> cpacking f0 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2 cF
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!vl. (!V. (!ul. ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (~ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl))))))))))))))))) = (!vl. (!V. (!ul. ((saturated V) ==> ((packing V) ==> (((leaf V) ul) ==> (((leaf V) vl) ==> ((((cc_cell V) ul) = ((cc_cell V) vl)) ==> ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))) ==> F))))))))))))
T c= ! ! ! c==> csaturated b1 c==> cpacking b1 c==> cleaf b1 b2 c==> cleaf b1 b0 c==> c= * * part ccc_cell b1 b2 * * part ccc_cell b1 b0 c==> c= ccc_ke b1 b2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke b1 b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ! ! ! c==> c/\ csaturated b3 c/\ cpacking b3 c/\ cleaf b3 b3 c/\ cleaf b3 b3 c= * * part ccc_cell b3 b3 * * part ccc_cell b3 b3 c= ccc_ke b3 b3 ccc_ke b3 b3 ! ! ! c==> csaturated b1 c==> cpacking b1 c==> cleaf b1 b2 c==> cleaf b1 b0 c==> c= * * part ccc_cell b1 b2 * * part ccc_cell b1 b0 c==> c= ccc_ke b1 b2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke b1 b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ csaturated b3 c/\ cpacking b3 c/\ cleaf b3 b3 c/\ cleaf b3 b3 c= * * part ccc_cell b3 b3 * * part ccc_cell b3 b3 c= ccc_ke b3 b3 ccc_ke b3 b3 cF
- |- ((~ (_7128267 = _7128269)) \/ ((~ (_7128268 = _7128270)) \/ (((cc_cell _7128267) _7128268) = ((cc_cell _7128269) _7128270))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part ccc_cell f0 f2 * * part ccc_cell f1 f3
- (_7128249 = _7128251) |- ((_7128249 = _7128251) /\ ((~ (_7128250 = _7128252)) \/ (((leaf _7128251) _7128252) \/ (~ ((leaf _7128249) _7128250)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cleaf f1 f3 c~ cleaf f0 f2
- (packing V), (saturated V), (((cc_cell V) ul) = ((cc_cell V) vl)), ((leaf V) ul), ((leaf V) vl) |- ((((cc_ke V) ul) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (((cc_ke V) vl) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (~ (!V. (!ul. (!vl. (((saturated V) /\ ((packing V) /\ (((leaf V) ul) /\ (((leaf V) vl) /\ (((cc_cell V) ul) = ((cc_cell V) vl)))))) ==> (((cc_ke V) ul) = ((cc_ke V) vl)))))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part ccc_cell f0 f1 * * part ccc_cell f0 f2 c==> cleaf f0 f1 c==> cleaf f0 f2 c==> c= ccc_ke f0 f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= ccc_ke f0 f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cleaf b0 b1 c/\ cleaf b0 b2 c= * * part ccc_cell b0 b1 * * part ccc_cell b0 b2 c= ccc_ke b0 b1 ccc_ke b0 b2
