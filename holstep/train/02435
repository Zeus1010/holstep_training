N Local_lemmas.NOT_INTER_EQ_EM_IMP_AFF_SUBSET
C |- ((x' IN (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) INTER ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY)))) ==> ((aff (x INSERT (u INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (v INSERT (w INSERT EMPTY))))))
T c==> cIN f0 * * part cINTER * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY cSUBSET * part caff * * part cINSERT f1 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
D TRUTH
A |- T
T cT
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_UNION
A |- (!s. (!t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t))))))
T c= cIN f0 * * part cUNION f1 f2 c\/ cIN f0 f1 cIN f0 f2
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D EMPTY_SUBSET
A |- (!s. (EMPTY SUBSET s))
T cSUBSET part cEMPTY f0
D INSERT_SUBSET
A |- (!x. (!s. (!t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t))))))
T c= cSUBSET * * part cINSERT f0 f1 f2 c/\ cIN f0 f2 cSUBSET f1 f2
D AFFINE_AFFINE_HULL
A |- (!s. (affine ((hull affine) s)))
T caffine * * part chull part caffine f0
D AFF_GT_SUBSET_AFFINE_HULL
A |- (!s. (!t. (((aff_gt s) t) SUBSET ((hull affine) (s UNION t)))))
T cSUBSET * * part caff_gt f0 f1 * * part chull part caffine * * part cUNION f0 f1
D AFF_LT_SUBSET_AFFINE_HULL
A |- (!s. (!t. (((aff_lt s) t) SUBSET ((hull affine) (s UNION t)))))
T cSUBSET * * part caff_lt f0 f1 * * part chull part caffine * * part cUNION f0 f1
D Sphere.aff
A |- (aff = (hull affine))
T c= part caff * part chull part caffine
D Collect_geom.AFFINE_CONTAIN_LINE
A |- (!a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s)))))
T c==> c/\ caffine f0 cSUBSET * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 cSUBSET * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0
D Planarity.POINT_IN_LINE
A |- (!x. (!y. (x IN (aff (x INSERT (y INSERT EMPTY))))))
T cIN f0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
D Ldurdpn.IN_HULL_INSERT
A |- (!x. (x IN ((hull P) (x INSERT S))))
T cIN f0 * * part chull f1 * * part cINSERT f0 f2
D Local_lemmas.AFF2_DET_BY_TWO_POINTS
A |- ((((x INSERT (y INSERT EMPTY)) SUBSET (aff (a INSERT (b INSERT EMPTY)))) /\ (~ (x = y))) ==> ((aff (a INSERT (b INSERT EMPTY))) = (aff (x INSERT (y INSERT EMPTY)))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f0 f1 c= * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
D Local_lemmas.NOT_X_IN_AFF_X_A
A |- (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY))))
T c~ cIN f0 * * part caff_lt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY
+ |- ((\q'. (((!x'. ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> (x' IN (aff (x INSERT (u INSERT EMPTY)))))) = p') ==> ((p' ==> ((x' IN (aff (x INSERT (u INSERT EMPTY)))) = q')) ==> (((!x'. ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> (x' IN (aff (x INSERT (u INSERT EMPTY)))))) ==> (x' IN (aff (x INSERT (u INSERT EMPTY))))) = (p' ==> q'))))) q')
T * / c==> c= ! c==> cIN b1 * * part caff_lt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN b1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c= c==> ! c==> cIN b1 * * part caff_lt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN b1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> f2 b0 f4
- (!a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))) |- ((!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s)))) = T)
T c==> ! ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 c= ! ! c==> c/\ caffine b1 cSUBSET * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b1 cSUBSET * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b1 cT
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ (!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) |- (((!a. (~ (_3973228 IN ((aff_lt (_3973228 INSERT EMPTY)) (a INSERT EMPTY))))) ==> ((\a. (~ (_3973228 IN ((aff_lt (_3973228 INSERT EMPTY)) (a INSERT EMPTY))))) _3973229)) = ((\a. (~ (_3973228 IN ((aff_lt (_3973228 INSERT EMPTY)) (a INSERT EMPTY))))) _3973229))
T c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c= c==> ! c~ cIN f0 * * part caff_lt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY * / c~ cIN f0 * * part caff_lt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY f1 * / c~ cIN f0 * * part caff_lt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY f1
+ |- (((!t. (((aff_lt (x INSERT EMPTY)) t) SUBSET ((hull affine) ((x INSERT EMPTY) UNION t)))) ==> ((\t. (((aff_lt (x INSERT EMPTY)) t) SUBSET ((hull affine) ((x INSERT EMPTY) UNION t)))) (u INSERT EMPTY))) = ((\t. (((aff_lt (x INSERT EMPTY)) t) SUBSET ((hull affine) ((x INSERT EMPTY) UNION t)))) (u INSERT EMPTY)))
T c= c==> ! cSUBSET * * part caff_lt * * part cINSERT f0 part cEMPTY b0 * * part chull part caffine * * part cUNION * * part cINSERT f0 part cEMPTY b0 * / cSUBSET * * part caff_lt * * part cINSERT f0 part cEMPTY b0 * * part chull part caffine * * part cUNION * * part cINSERT f0 part cEMPTY b0 * * part cINSERT f1 part cEMPTY * / cSUBSET * * part caff_lt * * part cINSERT f0 part cEMPTY b0 * * part chull part caffine * * part cUNION * * part cINSERT f0 part cEMPTY b0 * * part cINSERT f1 part cEMPTY
+ |- (((!v. ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F))))) ==> ((\v. ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F))))) v)) = ((\v. ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F))))) v))
T c= c==> ! c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b1 * * part caff_lt * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY cF * / c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b1 * * part caff_lt * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY cF f4 * / c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b1 * * part caff_lt * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY cF f4
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
- (!a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))) |- (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))
T c==> ! ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 ! ! c==> c/\ caffine b1 cSUBSET * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b1 cSUBSET * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b1
+ (x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) |- (~ (x' = x))
T c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c~ c= f0 f1
+ |- ((\s. (!t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t))))) s)
T * / ! c= cSUBSET * * part cINSERT f0 b0 b1 c/\ cIN f0 b1 cSUBSET b0 b1 f1
+ |- (((!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) ==> ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)) = ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s))
T c= c==> ! ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
- (!a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))) |- ((\s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))) s)
T c==> ! ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 * / c==> c/\ caffine b0 cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 f2
- (((x INSERT (y INSERT EMPTY)) SUBSET (aff (a INSERT (b INSERT EMPTY)))) /\ (~ (x = y))), ((((x INSERT (y INSERT EMPTY)) SUBSET (aff (a INSERT (b INSERT EMPTY)))) /\ (~ (x = y))) ==> ((aff (a INSERT (b INSERT EMPTY))) = (aff (x INSERT (y INSERT EMPTY))))) |- (((((x INSERT (y INSERT EMPTY)) SUBSET (aff (a INSERT (b INSERT EMPTY)))) /\ (~ (x = y))) ==> ((aff (a INSERT (b INSERT EMPTY))) = (aff (x INSERT (y INSERT EMPTY))))) /\ ((aff (a INSERT (b INSERT EMPTY))) = (aff (x INSERT (y INSERT EMPTY)))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f0 f1 c==> c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f0 f1 c= * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f0 f1 c= * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- (((!u. (!w. (!v. ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F))))))) ==> ((\u. (!w. (!v. ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F))))))) u)) = ((\u. (!w. (!v. ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F))))))) u))
T c= c==> ! ! ! c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b3 * * part caff_lt * * part cINSERT b3 part cEMPTY * * part cINSERT b4 part cEMPTY cF * / ! ! c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b3 * * part caff_lt * * part cINSERT b3 part cEMPTY * * part cINSERT b4 part cEMPTY cF f2 * / ! ! c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b3 * * part caff_lt * * part cINSERT b3 part cEMPTY * * part cINSERT b4 part cEMPTY cF f2
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) = T)
T c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ |- (((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY)) SUBSET ((hull affine) ((x INSERT EMPTY) UNION (u INSERT EMPTY))))
T cSUBSET * * part caff_lt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part chull part caffine * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY
- (!x'. ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (v INSERT (w INSERT EMPTY))))))) |- ((!x'. ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (v INSERT (w INSERT EMPTY))))))) /\ (!x'. ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (v INSERT (w INSERT EMPTY))))))))
T c==> ! c==> cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c==> cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (!a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))), ((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) |- (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) /\ ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))
T c==> ! ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 c==> c/\ caffine f0 cSUBSET * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 c/\ c/\ caffine f0 cSUBSET * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 cSUBSET * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0
+ ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY)))) |- (((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY)))) /\ ((aff (x INSERT (u INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (v INSERT (w INSERT EMPTY))))))
T c==> c/\ cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ c/\ cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY cSUBSET * part caff * * part cINSERT f1 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (!a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))) |- ((!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))) = T)
T c==> ! ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 c= ! c==> c/\ caffine b0 cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cT
- (!x'. ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (v INSERT (w INSERT EMPTY))))))) |- (((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (v INSERT (w INSERT EMPTY)))))) = T)
T c==> ! c==> cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> cIN f3 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
- (((x INSERT (y INSERT EMPTY)) SUBSET (aff (a INSERT (b INSERT EMPTY)))) /\ (~ (x = y))) |- (((((x INSERT (y INSERT EMPTY)) SUBSET (aff (a INSERT (b INSERT EMPTY)))) /\ (~ (x = y))) ==> ((aff (a INSERT (b INSERT EMPTY))) = (aff (x INSERT (y INSERT EMPTY))))) ==> ((aff (a INSERT (b INSERT EMPTY))) = (aff (x INSERT (y INSERT EMPTY)))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f0 f1 c==> c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f0 f1 c= * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- (((!x'. ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> (x' IN (aff (x INSERT (u INSERT EMPTY)))))) = p') ==> ((p' ==> ((x' IN (aff (x INSERT (u INSERT EMPTY)))) = q')) ==> (((!x'. ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> (x' IN (aff (x INSERT (u INSERT EMPTY)))))) ==> (x' IN (aff (x INSERT (u INSERT EMPTY))))) = (p' ==> q'))))
T c==> c= ! c==> cIN b0 * * part caff_lt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN b0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f4 c= c==> ! c==> cIN b0 * * part caff_lt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN b0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> f2 f4
+ |- (((((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY)) SUBSET ((hull affine) ((x INSERT EMPTY) UNION (u INSERT EMPTY)))) ==> (x' IN (aff (x INSERT (u INSERT EMPTY))))) = (x' IN (aff (x INSERT (u INSERT EMPTY)))))
T c= c==> cSUBSET * * part caff_lt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part chull part caffine * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- ((((((x INSERT (y INSERT EMPTY)) SUBSET (aff (a INSERT (b INSERT EMPTY)))) /\ (~ (x = y))) ==> ((aff (a INSERT (b INSERT EMPTY))) = (aff (x INSERT (y INSERT EMPTY))))) ==> ((((x INSERT (y INSERT EMPTY)) SUBSET (aff (a INSERT (b INSERT EMPTY)))) /\ (~ (x = y))) ==> ((aff (a INSERT (b INSERT EMPTY))) = (aff (x INSERT (y INSERT EMPTY)))))) = ((((x INSERT (y INSERT EMPTY)) SUBSET (aff (a INSERT (b INSERT EMPTY)))) /\ (~ (x = y))) ==> ((aff (a INSERT (b INSERT EMPTY))) = (aff (x INSERT (y INSERT EMPTY))))))
T c= c==> c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f0 f1 c= * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f0 f1 c= * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f0 f1 c= * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY)))), (x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- ((aff (x INSERT (u INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (v INSERT (w INSERT EMPTY)))))
T c==> c/\ cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * part caff * * part cINSERT f1 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((\s. (affine ((hull affine) s))) s)
T * / caffine * * part chull part caffine b0 f0
- (!a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))) |- (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s)))
T c==> ! ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 ! c==> c/\ caffine b0 cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0
+ |- (((!s. (affine ((hull affine) s))) ==> ((\s. (affine ((hull affine) s))) s)) = ((\s. (affine ((hull affine) s))) s))
T c= c==> ! caffine * * part chull part caffine b0 * / caffine * * part chull part caffine b0 f0 * / caffine * * part chull part caffine b0 f0
+ (x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) |- (((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> (x' IN (aff (x INSERT (u INSERT EMPTY))))) = (T ==> (x' IN (aff (x INSERT (u INSERT EMPTY))))))
T c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cT cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) |- ((x INSERT (x' INSERT EMPTY)) SUBSET (aff (x INSERT (u INSERT EMPTY))))
T c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cSUBSET * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ (x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((hull affine) ((x INSERT EMPTY) UNION (v INSERT (w INSERT EMPTY))))) ==> ((x INSERT (x' INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (v INSERT (w INSERT EMPTY))))))
T c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cSUBSET * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cUNION * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY)))) ==> ((aff (x INSERT (u INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (v INSERT (w INSERT EMPTY))))))
T c==> c/\ cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY cSUBSET * part caff * * part cINSERT f1 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) |- ((\a. (~ (_3973228 IN ((aff_lt (_3973228 INSERT EMPTY)) (a INSERT EMPTY))))) _3973229)
T c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * / c~ cIN f0 * * part caff_lt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY f1
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- (((!x. (!y. (x IN (aff (x INSERT (y INSERT EMPTY)))))) ==> ((\x. (!y. (x IN (aff (x INSERT (y INSERT EMPTY)))))) x)) = ((\x. (!y. (x IN (aff (x INSERT (y INSERT EMPTY)))))) x))
T c= c==> ! ! cIN b0 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! cIN b0 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 * / ! cIN b0 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0
+ |- (!t. (((aff_gt (x INSERT EMPTY)) t) SUBSET ((hull affine) ((x INSERT EMPTY) UNION t))))
T cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY f1 * * part chull part caffine * * part cUNION * * part cINSERT f0 part cEMPTY f1
- (x' = x), (x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- (x IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))
T c==> c= f0 f1 c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((!s. (!t. (((aff_lt s) t) SUBSET ((hull affine) (s UNION t))))) ==> ((\s. (!t. (((aff_lt s) t) SUBSET ((hull affine) (s UNION t))))) (x INSERT EMPTY))) = ((\s. (!t. (((aff_lt s) t) SUBSET ((hull affine) (s UNION t))))) (x INSERT EMPTY)))
T c= c==> ! ! cSUBSET * * part caff_lt b0 b1 * * part chull part caffine * * part cUNION b0 b1 * / ! cSUBSET * * part caff_lt b0 b1 * * part chull part caffine * * part cUNION b0 b1 * * part cINSERT f0 part cEMPTY * / ! cSUBSET * * part caff_lt b0 b1 * * part chull part caffine * * part cUNION b0 b1 * * part cINSERT f0 part cEMPTY
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- |- ((_3973238 IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((_3973238 IN (aff (x INSERT (u INSERT EMPTY)))) = (_3973238 IN (aff (x INSERT (u INSERT EMPTY))))))
T c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((\t. (((aff_gt (x INSERT EMPTY)) t) SUBSET ((hull affine) ((x INSERT EMPTY) UNION t)))) (v INSERT (w INSERT EMPTY)))
T * / cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY b0 * * part chull part caffine * * part cUNION * * part cINSERT f0 part cEMPTY b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (x' = x) |- ((~ (_3973228 IN ((aff_lt (_3973228 INSERT EMPTY)) (_3973229 INSERT EMPTY)))) = (~ (_3973228 IN ((aff_lt (_3973228 INSERT EMPTY)) (_3973229 INSERT EMPTY)))))
T c==> c= f0 f1 c= c~ cIN f2 * * part caff_lt * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c~ cIN f2 * * part caff_lt * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
+ (x' = x), (x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) |- ((x' = x) /\ (~ (!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY))))))))
T c==> c= f0 f1 c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ c= f0 f1 c~ ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY
- (!x'. ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (v INSERT (w INSERT EMPTY))))))), (x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (x' IN ((hull affine) (x INSERT (v INSERT (w INSERT EMPTY))))))
T c==> ! c==> cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f3 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) |- ((!x'. ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> (x' IN (aff (x INSERT (u INSERT EMPTY)))))) ==> (x' IN (aff (x INSERT (u INSERT EMPTY)))))
T c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN b0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((\x. (!s. (!t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t)))))) x)
T * / ! ! c= cSUBSET * * part cINSERT b0 b1 b2 c/\ cIN b0 b2 cSUBSET b1 b2 f0
- |- ((!a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))) ==> (!a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))))
T c==> ! ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 ! ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- |- (((((x INSERT (y INSERT EMPTY)) SUBSET (aff (a INSERT (b INSERT EMPTY)))) /\ (~ (x = y))) ==> ((aff (a INSERT (b INSERT EMPTY))) = (aff (x INSERT (y INSERT EMPTY))))) ==> ((((x INSERT (y INSERT EMPTY)) SUBSET (aff (a INSERT (b INSERT EMPTY)))) /\ (~ (x = y))) ==> ((aff (a INSERT (b INSERT EMPTY))) = (aff (x INSERT (y INSERT EMPTY))))))
T c==> c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f0 f1 c= * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f0 f1 c= * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- (((!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s)))) ==> ((\b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s)))) b)) = ((\b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s)))) b))
T c= c==> ! ! c==> c/\ caffine b1 cSUBSET * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b1 cSUBSET * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b1 * / ! c==> c/\ caffine b1 cSUBSET * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b1 cSUBSET * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b1 f1 * / ! c==> c/\ caffine b1 cSUBSET * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b1 cSUBSET * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b1 f1
- ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))) |- (((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))) /\ ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))))
T c==> c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c/\ c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF
+ |- (((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F) = F)
T c= c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF cF
+ |- (((!a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))) ==> ((\a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))) a)) = ((\a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))) a))
T c= c==> ! ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 * / ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 f0 * / ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 f0
+ |- ((\x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) x)
T * / c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 f2
- |- (((_3973238 IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((_3973238 IN (aff (x INSERT (u INSERT EMPTY)))) = q')) ==> (((_3973238 IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> (_3973238 IN (aff (x INSERT (u INSERT EMPTY))))) = ((_3973238 IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> q')))
T c==> c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3
+ |- (((T ==> ((x' IN (aff (x INSERT (u INSERT EMPTY)))) = (x' IN (aff (x INSERT (u INSERT EMPTY)))))) ==> (((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> (x' IN (aff (x INSERT (u INSERT EMPTY))))) = (T ==> (x' IN (aff (x INSERT (u INSERT EMPTY))))))) = (((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> (x' IN (aff (x INSERT (u INSERT EMPTY))))) = (T ==> (x' IN (aff (x INSERT (u INSERT EMPTY)))))))
T c= c==> c==> cT c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cT cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cT cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((\x'. (!u. (!w. (!v. ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))))))) x')
T * / ! ! ! c==> cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c==> cIN b0 * * part caff_lt * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY c==> c= b0 f0 c==> ! ! c~ cIN b4 * * part caff_lt * * part cINSERT b4 part cEMPTY * * part cINSERT b5 part cEMPTY cF f1
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) |- ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) /\ ((x' = x) ==> (~ (!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))))))
T c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c= f0 f1 c~ ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY
+ (x' = x), (x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) |- (((x IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> F) = F)
T c==> c= f0 f1 c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c==> cIN f1 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cF cF
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- ((x IN ((hull P) (x INSERT S))) = T)
T c= cIN f0 * * part chull f1 * * part cINSERT f0 f2 cT
+ |- ((\w. (!v. ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))))) w)
T * / ! c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b2 * * part caff_lt * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY cF f3
- T |- (T = T)
T c==> cT c= cT cT
+ (x' = x), (x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) |- ((x' = x) /\ F)
T c==> c= f0 f1 c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ c= f0 f1 cF
+ (~ (x' = x)), ((x INSERT (x' INSERT EMPTY)) SUBSET (aff (x INSERT (u INSERT EMPTY)))) |- ((aff (x INSERT (u INSERT EMPTY))) = (aff (x INSERT (x' INSERT EMPTY))))
T c==> c~ c= f0 f1 c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
+ |- ((!v. ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> (~ (!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY))))))))))) = T)
T c= ! c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= f0 f1 c~ ! ! c~ cIN b1 * * part caff_lt * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY cT
+ (~ (x' = x)), (x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), ((x INSERT (x' INSERT EMPTY)) SUBSET (aff (x INSERT (u INSERT EMPTY)))) |- ((aff (x INSERT (u INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (v INSERT (w INSERT EMPTY)))))
T c==> c~ c= f0 f1 c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f4 part cEMPTY cSUBSET * part caff * * part cINSERT f1 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (x' = x)), ((x INSERT (x' INSERT EMPTY)) SUBSET (aff (x INSERT (u INSERT EMPTY)))) |- (((x INSERT (x' INSERT EMPTY)) SUBSET (aff (x INSERT (u INSERT EMPTY)))) /\ (~ (x = x')))
T c==> c~ c= f0 f1 c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f1 f0
+ (x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> (~ (!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY))))))))))
T c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c~ ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY
+ |- (((!s. (EMPTY SUBSET s)) ==> ((\s. (EMPTY SUBSET s)) s)) = ((\s. (EMPTY SUBSET s)) s))
T c= c==> ! cSUBSET part cEMPTY b0 * / cSUBSET part cEMPTY b0 f0 * / cSUBSET part cEMPTY b0 f0
+ |- ((\x. (!x'. (!u. (!w. (!v. ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F))))))))) x)
T * / ! ! ! ! c==> cIN b1 * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c==> cIN b1 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY c==> c= b1 b0 c==> ! ! c~ cIN b5 * * part caff_lt * * part cINSERT b5 part cEMPTY * * part cINSERT b5 part cEMPTY cF f0
- (~ (x IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY)))), (x' = x), (x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) |- ((~ (x IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY)))) /\ (x IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))))
T c==> c~ cIN f0 * * part caff_lt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c= f2 f0 c==> cIN f2 * * part caff_lt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c~ cIN f0 * * part caff_lt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN f0 * * part caff_lt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY
+ |- ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)
T * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ (~ (x' = x)) |- (((~ (x = x')) ==> ((x = x') = F)) = ((x = x') = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
- (~ (x' = x)) |- ((x' = x) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
+ |- (((!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) ==> ((\x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) x)) = ((\x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) x))
T c= c==> ! c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 * / c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 f2 * / c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 f2
+ (x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) |- ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F))
T c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF
- ((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) |- ((!a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))
T c==> c/\ caffine f0 cSUBSET * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 c==> ! ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- (_3973238 IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) |- ((_3973238 IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) /\ ((_3973238 IN (aff (x INSERT (u INSERT EMPTY)))) = (_3973238 IN (aff (x INSERT (u INSERT EMPTY))))))
T c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))) ==> ((\t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))) t)) = ((\t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))) t))
T c= c==> ! ! c= cIN b1 * * part cINTER f0 b0 c/\ cIN b1 f0 cIN b1 b0 * / ! c= cIN b1 * * part cINTER f0 b0 c/\ cIN b1 f0 cIN b1 b0 f1 * / ! c= cIN b1 * * part cINTER f0 b0 c/\ cIN b1 f0 cIN b1 b0 f1
+ |- ((\u. (!w. (!v. ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F))))))) u)
T * / ! ! c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b3 * * part caff_lt * * part cINSERT b3 part cEMPTY * * part cINSERT b4 part cEMPTY cF f2
+ |- (((!t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t)))) ==> ((\t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t)))) t)) = ((\t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t)))) t))
T c= c==> ! c= cSUBSET * * part cINSERT f0 f1 b0 c/\ cIN f0 b0 cSUBSET f1 b0 * / c= cSUBSET * * part cINSERT f0 f1 b0 c/\ cIN f0 b0 cSUBSET f1 b0 f2 * / c= cSUBSET * * part cINSERT f0 f1 b0 c/\ cIN f0 b0 cSUBSET f1 b0 f2
+ (x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) |- ((((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) = T) ==> ((T ==> ((x' IN (aff (x INSERT (u INSERT EMPTY)))) = q')) ==> (((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> (x' IN (aff (x INSERT (u INSERT EMPTY))))) = (T ==> q')))) = ((T ==> ((x' IN (aff (x INSERT (u INSERT EMPTY)))) = q')) ==> (((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> (x' IN (aff (x INSERT (u INSERT EMPTY))))) = (T ==> q'))))
T c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c==> c= cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cT c==> c==> cT c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cT f3 c==> c==> cT c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cT f3
+ |- ((\s. (EMPTY SUBSET s)) s)
T * / cSUBSET part cEMPTY b0 f0
+ |- ((\t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t)))) t)
T * / c= cSUBSET * * part cINSERT f0 f1 b0 c/\ cIN f0 b0 cSUBSET f1 b0 f2
+ |- ((((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY)))) ==> ((aff (x INSERT (u INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (v INSERT (w INSERT EMPTY)))))) = ((x' IN (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) INTER ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY)))) ==> ((aff (x INSERT (u INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (v INSERT (w INSERT EMPTY)))))))
T c= c==> c/\ cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY cSUBSET * part caff * * part cINSERT f1 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part cINTER * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY cSUBSET * part caff * * part cINSERT f1 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((\s. (!t. (((aff_lt s) t) SUBSET ((hull affine) (s UNION t))))) (x INSERT EMPTY))
T * / ! cSUBSET * * part caff_lt b0 b1 * * part chull part caffine * * part cUNION b0 b1 * * part cINSERT f0 part cEMPTY
+ (x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) |- ((((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY)) SUBSET ((hull affine) ((x INSERT EMPTY) UNION (u INSERT EMPTY)))) ==> (x' IN (aff (x INSERT (u INSERT EMPTY)))))
T c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cSUBSET * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cUNION * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- (!t. (((aff_lt (x INSERT EMPTY)) t) SUBSET ((hull affine) ((x INSERT EMPTY) UNION t))))
T cSUBSET * * part caff_lt * * part cINSERT f0 part cEMPTY f1 * * part chull part caffine * * part cUNION * * part cINSERT f0 part cEMPTY f1
+ ((aff (x INSERT (u INSERT EMPTY))) = (aff (x INSERT (x' INSERT EMPTY)))) |- (((aff (x INSERT (x' INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (v INSERT (w INSERT EMPTY))))) = ((aff (x INSERT (u INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (v INSERT (w INSERT EMPTY))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c= cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ |- ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> (~ (!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))))))
T c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c= f0 f1 c~ ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY
- |- ((((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))) ==> ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F))))) ==> (((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))) ==> ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F))))))
T c==> c==> c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c==> c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF
- |- ((!x'. ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (v INSERT (w INSERT EMPTY))))))) ==> (!x'. ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (v INSERT (w INSERT EMPTY))))))))
T c==> ! c==> cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (!x'. ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> (x' IN (aff (x INSERT (u INSERT EMPTY)))))), (x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) |- ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) /\ ((x' IN (aff (x INSERT (u INSERT EMPTY)))) = T))
T c==> ! c==> cIN b0 * * part caff_lt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN b0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part caff_lt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cIN f2 * * part caff_lt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c= cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cT
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((!x'. ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> (x' IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((x' IN (aff (x INSERT (u INSERT EMPTY)))) = q')) ==> (((!x'. ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> (x' IN (aff (x INSERT (u INSERT EMPTY)))))) ==> (x' IN (aff (x INSERT (u INSERT EMPTY))))) = ((!x'. ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> (x' IN (aff (x INSERT (u INSERT EMPTY)))))) ==> q')))
T c==> c==> ! c==> cIN b0 * * part caff_lt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN b0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 c= c==> ! c==> cIN b0 * * part caff_lt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN b0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> ! c==> cIN b0 * * part caff_lt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN b0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3
- |- ((((_3973238 IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) = (_3973238 IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY)))) ==> (((_3973238 IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((_3973238 IN (aff (x INSERT (u INSERT EMPTY)))) = q')) ==> (((_3973238 IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> (_3973238 IN (aff (x INSERT (u INSERT EMPTY))))) = ((_3973238 IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> q')))) = (((_3973238 IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((_3973238 IN (aff (x INSERT (u INSERT EMPTY)))) = q')) ==> (((_3973238 IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> (_3973238 IN (aff (x INSERT (u INSERT EMPTY))))) = ((_3973238 IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> q'))))
T c= c==> c= cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3 c==> c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3
- ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))) |- ((((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))) ==> ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F))))) ==> ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))))
T c==> c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c==> c==> c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF
- |- (((!a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))) ==> (!a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s)))))) = (!a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))))
T c= c==> ! ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 ! ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 ! ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2
- (x' = x) |- (F = F)
T c==> c= f0 f1 c= cF cF
- |- (((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))) ==> ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))))
T c==> c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- |- (((_3973238 IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> (_3973238 IN (aff (x INSERT (u INSERT EMPTY))))) = ((_3973238 IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> (_3973238 IN (aff (x INSERT (u INSERT EMPTY))))))
T c= c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) |- (T = (x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))))
T c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= cT cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- |- (((((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))) ==> ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F))))) ==> (((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))) ==> ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))))) = (((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))) ==> ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F))))))
T c= c==> c==> c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c==> c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c==> c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF
- ((((x INSERT (y INSERT EMPTY)) SUBSET (aff (a INSERT (b INSERT EMPTY)))) /\ (~ (x = y))) ==> ((aff (a INSERT (b INSERT EMPTY))) = (aff (x INSERT (y INSERT EMPTY))))) |- (((((x INSERT (y INSERT EMPTY)) SUBSET (aff (a INSERT (b INSERT EMPTY)))) /\ (~ (x = y))) ==> ((aff (a INSERT (b INSERT EMPTY))) = (aff (x INSERT (y INSERT EMPTY))))) /\ ((((x INSERT (y INSERT EMPTY)) SUBSET (aff (a INSERT (b INSERT EMPTY)))) /\ (~ (x = y))) ==> ((aff (a INSERT (b INSERT EMPTY))) = (aff (x INSERT (y INSERT EMPTY))))))
T c==> c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f0 f1 c= * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f0 f1 c= * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f0 f1 c= * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (((x INSERT (y INSERT EMPTY)) SUBSET (aff (a INSERT (b INSERT EMPTY)))) /\ (~ (x = y))), ((((x INSERT (y INSERT EMPTY)) SUBSET (aff (a INSERT (b INSERT EMPTY)))) /\ (~ (x = y))) ==> ((aff (a INSERT (b INSERT EMPTY))) = (aff (x INSERT (y INSERT EMPTY))))) |- ((((x INSERT (y INSERT EMPTY)) SUBSET (aff (a INSERT (b INSERT EMPTY)))) /\ (~ (x = y))) /\ ((aff (a INSERT (b INSERT EMPTY))) = (aff (x INSERT (y INSERT EMPTY)))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f0 f1 c==> c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f0 f1 c= * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f0 f1 c= * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- (((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))) ==> ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F))))) |- ((((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))) ==> ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F))))) /\ (((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))) ==> ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F))))))
T c==> c==> c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c/\ c==> c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c==> c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF
- (!a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))), ((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) |- ((!a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))) /\ ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))
T c==> ! ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 c==> c/\ caffine f0 cSUBSET * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 c/\ ! ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0
- (x' = x), (x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) |- ((~ (x IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY)))) ==> (x IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))))
T c==> c= f0 f1 c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c~ cIN f1 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f1 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- (!a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))) |- ((\b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s)))) b)
T c==> ! ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 * / ! c==> c/\ caffine b1 cSUBSET * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b1 cSUBSET * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b1 f1
- (!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))), (x' = x), (x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) |- ((~ F) ==> F)
T c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c==> c= f0 f1 c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c~ cF cF
- (!a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))) |- ((!a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))) /\ (!a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))))
T c==> ! ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 c/\ ! ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 ! ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2
- |- ((!a. (P a)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (!a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))) |- ((\a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))) a)
T c==> ! ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 * / ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 f0
- (!a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))) |- (((!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))) ==> ((\s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))) s)) = ((\s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))) s))
T c==> ! ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 c= c==> ! c==> c/\ caffine b0 cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 * / c==> c/\ caffine b0 cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 f2 * / c==> c/\ caffine b0 cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 f2
- (((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))) ==> ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F))))), ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))) |- (((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))) /\ ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))))
T c==> c==> c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c==> c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c/\ c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF
- (!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))), (~ F), (x' = x), (x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) |- ((~ F) /\ F)
T c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c==> c~ cF c==> c= f0 f1 c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ c~ cF cF
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- (!a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))), ((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) |- ((aff (a INSERT (b INSERT EMPTY))) SUBSET s)
T c==> ! ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 c==> c/\ caffine f0 cSUBSET * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 cSUBSET * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0
- (x' = x) |- ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) = (x IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))
T c==> c= f0 f1 c= cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((((_3973238 IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((_3973238 IN (aff (x INSERT (u INSERT EMPTY)))) = (_3973238 IN (aff (x INSERT (u INSERT EMPTY)))))) ==> (((_3973238 IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> (_3973238 IN (aff (x INSERT (u INSERT EMPTY))))) = ((_3973238 IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> (_3973238 IN (aff (x INSERT (u INSERT EMPTY))))))) = (((_3973238 IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> (_3973238 IN (aff (x INSERT (u INSERT EMPTY))))) = ((_3973238 IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> (_3973238 IN (aff (x INSERT (u INSERT EMPTY)))))))
T c= c==> c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (!a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))) |- ((((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s)) = T)
T c==> ! ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 c= c==> c/\ caffine f0 cSUBSET * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 cSUBSET * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 cT
- (((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))) ==> ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F))))), ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))) |- ((((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))) ==> ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F))))) /\ ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))))
T c==> c==> c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c==> c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c/\ c==> c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF
- |- ((((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))) ==> ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F))))) = ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN ((aff_lt (x INSERT EMPTY)) (u INSERT EMPTY))) ==> ((x' = x) ==> ((!x. (!a. (~ (x IN ((aff_lt (x INSERT EMPTY)) (a INSERT EMPTY)))))) ==> F)))))
T c= c==> c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_lt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= f0 f1 c==> ! ! c~ cIN b0 * * part caff_lt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cF
- (!a. (!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s))))) |- (((!b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s)))) ==> ((\b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s)))) b)) = ((\b. (!s. (((affine s) /\ ((a INSERT (b INSERT EMPTY)) SUBSET s)) ==> ((aff (a INSERT (b INSERT EMPTY))) SUBSET s)))) b))
T c==> ! ! ! c==> c/\ caffine b2 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 cSUBSET * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b2 c= c==> ! ! c==> c/\ caffine b1 cSUBSET * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b1 cSUBSET * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b1 * / ! c==> c/\ caffine b1 cSUBSET * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b1 cSUBSET * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b1 f1 * / ! c==> c/\ caffine b1 cSUBSET * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b1 cSUBSET * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b1 f1
