N Aq1.sizel_replace_filter_flatten
C |- (!N. (((uniq (flatten N)) /\ ((MEM r) N)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))))
T c==> c/\ cuniq cflatten f0 cMEM f1 f0 c= csizel cflatten creplace f1 cCONS f2 cNIL f0 csizel cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D Ssrnat.add0n
A |- (!n. (((NUMERAL _0) + n) = n))
T c= c+ cNUMERAL c_0 f0 f0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D ADD_ASSOC
A |- (!m. (!n. (!p. ((m + (n + p)) = ((m + n) + p)))))
T c= c+ f0 c+ f1 f2 c+ c+ f0 f1 f2
D ADD_AC
A |- (((m + n) = (n + m)) /\ ((((m + n) + p) = (m + (n + p))) /\ ((m + (n + p)) = (n + (m + p)))))
T c/\ c= c+ f0 f1 c+ f1 f0 c/\ c= c+ c+ f0 f1 f2 c+ f0 c+ f1 f2 c= c+ f0 c+ f1 f2 c+ f1 c+ f0 f2
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D Ssrnat.mul0n
A |- (!n. (((NUMERAL _0) * n) = (NUMERAL _0)))
T c= c* cNUMERAL c_0 f0 cNUMERAL c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D Ssrnat.mul1n
A |- (!n. (((NUMERAL (BIT1 _0)) * n) = n))
T c= c* cNUMERAL cBIT1 c_0 f0 f0
D LEFT_ADD_DISTRIB
A |- (!m. (!n. (!p. ((m * (n + p)) = ((m * n) + (m * p))))))
T c= c* f0 c+ f1 f2 c+ c* f0 f1 c* f0 f2
D MULT_AC
A |- (((m * n) = (n * m)) /\ ((((m * n) * p) = (m * (n * p))) /\ ((m * (n * p)) = (n * (m * p)))))
T c/\ c= c* f0 f1 c* f1 f0 c/\ c= c* c* f0 f1 f2 c* f0 c* f1 f2 c= c* f0 c* f1 f2 c* f1 c* f0 f2
D Ssrnat.expnS
A |- (!m. (!n. ((m EXP (SUC n)) = (m * (m EXP n)))))
T c= cEXP f0 cSUC f1 c* f0 cEXP f0 f1
D Ssrnat.expn0
A |- (!m. ((m EXP (NUMERAL _0)) = (NUMERAL (BIT1 _0))))
T c= cEXP f0 cNUMERAL c_0 cNUMERAL cBIT1 c_0
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D list_INDUCT
A |- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x))))
T c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0
D MEM
A |- ((((MEM x) NIL) = F) /\ (((MEM x) ((CONS h) t)) = ((x = h) \/ ((MEM x) t))))
T c/\ c= cMEM f0 cNIL cF c= cMEM f0 cCONS f1 f2 c\/ c= f0 f1 cMEM f0 f2
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_EQ
A |- (!x. (!y. ((~ (x = y)) = (((int_lt x) y) \/ ((int_lt y) x)))))
T c= c~ c= f0 f1 c\/ cint_lt f0 f1 cint_lt f1 f0
D INT_OF_NUM_ADD
A |- (!m. (!n. (((int_add (int_of_num m)) (int_of_num n)) = (int_of_num (m + n)))))
T c= cint_add cint_of_num f0 cint_of_num f1 cint_of_num c+ f0 f1
D INT_OF_NUM_EQ
A |- (!m. (!n. (((int_of_num m) = (int_of_num n)) = (m = n))))
T c= c= cint_of_num f0 cint_of_num f1 c= f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D Nkezbfc_local.lemma
A |- (!A. (A \/ (~ A)))
T c\/ f0 c~ f0
D Tame_defs.replace
A |- (((((replace x) ys) NIL) = NIL) /\ ((((replace x) ys) ((CONS z) zs)) = (((COND (z = x)) ((APPEND ys) zs)) ((CONS z) (((replace x) ys) zs)))))
T c/\ c= creplace f0 f1 cNIL cNIL c= creplace f0 f1 cCONS f2 f3 cCOND c= f2 f0 cAPPEND f1 f3 cCONS f2 creplace f0 f1 f3
D Seq.size_nil
A |- ((sizel NIL) = (NUMERAL _0))
T c= csizel cNIL cNUMERAL c_0
D Seq.size_cat
A |- (!s1. (!s2. ((sizel ((cat s1) s2)) = ((sizel s1) + (sizel s2)))))
T c= csizel ccat f0 f1 c+ csizel f0 csizel f1
D Seq.filter_cat
A |- (!a. (!s1. (!s2. (((filter a) ((cat s1) s2)) = ((cat ((filter a) s1)) ((filter a) s2))))))
T c= cfilter f0 ccat f1 f2 ccat cfilter f0 f1 cfilter f0 f2
D Seq.uniq
A |- (((uniq NIL) = T) /\ ((uniq ((CONS x) s')) = ((~ ((MEM x) s')) /\ (uniq s'))))
T c/\ c= cuniq cNIL cT c= cuniq cCONS f0 f1 c/\ c~ cMEM f0 f1 cuniq f1
D Seq.cat_uniq
A |- (!s1. (!s2. ((uniq ((cat s1) s2)) = ((uniq s1) /\ ((~ ((has (\x. ((MEM x) s1))) s2)) /\ (uniq s2))))))
T c= cuniq ccat f0 f1 c/\ cuniq f0 c/\ c~ chas / cMEM b0 f0 f1 cuniq f1
D Seq.flatten_cons
A |- (!s. (!ss. ((flatten ((CONS s) ss)) = ((cat s) (flatten ss)))))
T c= cflatten cCONS f0 f1 ccat f0 cflatten f1
D Seq.flatten_cat
A |- (!ss1. (!ss2. ((flatten ((cat ss1) ss2)) = ((cat (flatten ss1)) (flatten ss2)))))
T c= cflatten ccat f0 f1 ccat cflatten f0 cflatten f1
D Tame_list.APPEND_cat
A |- (APPEND = cat)
T c= part cAPPEND part ccat
D Tame_list.concat_flatten
A |- (!x. (!xs. (((flatten NIL) = NIL) /\ ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs))))))
T c/\ c= cflatten cNIL cNIL c= cflatten cCONS f0 f1 cAPPEND f0 cflatten f1
D Aq1.flatten_sing
A |- ((flatten ((CONS s) NIL)) = s)
T c= cflatten cCONS f0 cNIL f0
D Aq1.filter_not_mem
A |- (((filter (\d. (~ ((MEM d) h)))) h) = NIL)
T c= cfilter / c~ cMEM b0 f0 f0 cNIL
D Aq1.filter_not_mem_cat
A |- (!r. ((uniq ((APPEND h) r)) ==> (((filter (\d. (~ ((MEM d) h)))) ((APPEND h) r)) = r)))
T c==> cuniq cAPPEND f0 f1 c= cfilter / c~ cMEM b0 f0 cAPPEND f0 f1 f1
D Aq1.filter_has_not_mem
A |- (!r. ((~ ((has (\x. ((MEM x) h))) r)) ==> (((filter (\d. (~ ((MEM d) h)))) r) = r)))
T c==> c~ chas / cMEM b0 f0 f1 c= cfilter / c~ cMEM b0 f0 f1 f1
D Aq1.has_flatten
A |- (!t. (((~ ((has (\x. ((MEM x) h))) (flatten t))) /\ ((MEM r) t)) ==> (~ ((has (\x. ((MEM x) h))) r))))
T c==> c/\ c~ chas / cMEM b0 f0 cflatten f1 cMEM f2 f1 c~ chas / cMEM b0 f0 f2
D Aq1.has_sym
A |- ((~ ((has (\x. ((MEM x) h))) r)) = (~ ((has (\x. ((MEM x) r))) h)))
T c= c~ chas / cMEM b0 f0 f1 c~ chas / cMEM b0 f1 f0
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347503)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347504)) /\ (((real_le ((real_add ((real_add (real_of_int _10347503)) (real_of_int _10347504))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10347503)) (real_of_int _10347504))) \/ ((real_le ((real_add ((real_add (real_of_int _10347503)) (real_of_int _10347504))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10347503)) (real_of_int _10347504)))))) = (~ (((int_le (int_of_num (NUMERAL _0))) _10347503) ==> (((int_le (int_of_num (NUMERAL _0))) _10347504) ==> (((int_add _10347503) _10347504) = ((int_add _10347503) _10347504))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_int f1 creal_le creal_add creal_add creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_int f1 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c= cint_add f0 f1 cint_add f0 f1
- |- ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all))))
T c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
- |- ((((sizel h) + ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))) = ((sizel s) + ((sizel h) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) = T)
T c= c= c+ csizel f0 c+ csizel f1 csizel cfilter / c~ cMEM b0 f2 cflatten f3 c+ csizel f1 c+ csizel f0 csizel cfilter / c~ cMEM b0 f2 cflatten f3 cT
+ |- (((!s1. (!s2. ((uniq ((cat s1) s2)) = ((uniq s1) /\ ((~ ((has (\x. ((MEM x) s1))) s2)) /\ (uniq s2)))))) ==> ((\s1. (!s2. ((uniq ((cat s1) s2)) = ((uniq s1) /\ ((~ ((has (\x. ((MEM x) s1))) s2)) /\ (uniq s2)))))) s1)) = ((\s1. (!s2. ((uniq ((cat s1) s2)) = ((uniq s1) /\ ((~ ((has (\x. ((MEM x) s1))) s2)) /\ (uniq s2)))))) s1))
T c= c==> ! ! c= cuniq ccat b0 b1 c/\ cuniq b0 c/\ c~ chas / cMEM b2 b0 b1 cuniq b1 * / ! c= cuniq ccat b0 b1 c/\ cuniq b0 c/\ c~ chas / cMEM b2 b0 b1 cuniq b1 f0 * / ! c= cuniq ccat b0 b1 c/\ cuniq b0 c/\ c~ chas / cMEM b2 b0 b1 cuniq b1 f0
+ |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
+ |- ((uniq ((APPEND h) (flatten t))) ==> (((filter (\d. (~ ((MEM d) h)))) ((APPEND h) (flatten t))) = (flatten t)))
T c==> cuniq cAPPEND f0 cflatten f1 c= cfilter / c~ cMEM b0 f0 cAPPEND f0 cflatten f1 cflatten f1
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ (~ ((has (\x. ((MEM x) h))) (flatten t))), (uniq h), (uniq (flatten t)), ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t))))), ((h = r) \/ (~ (h = r))), ((MEM r) t) |- ((sizel (flatten (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((sizel s) + ((sizel ((filter (\d. (~ ((MEM d) r)))) h)) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))))
T c==> c~ chas / cMEM b0 f0 cflatten f1 c==> cuniq f0 c==> cuniq cflatten f1 c==> c= csizel cflatten creplace f2 cCONS f3 cNIL f1 csizel cAPPEND f3 cfilter / c~ cMEM b0 f2 cflatten f1 c==> c\/ c= f0 f2 c~ c= f0 f2 c==> cMEM f2 f1 c= csizel cflatten cCOND c= f0 f2 ccat cCONS f3 cNIL f1 cCONS f0 creplace f2 cCONS f3 cNIL f1 c+ csizel f3 c+ csizel cfilter / c~ cMEM b0 f2 f0 csizel cfilter / c~ cMEM b0 f2 cflatten f1
+ (~ ((has (\x. ((MEM x) h))) (flatten t))), (uniq h), (uniq (flatten t)) |- ((sizel (flatten ((cat ((CONS s) NIL)) t))) = ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) h)))) ((cat h) (flatten t))))))
T c==> c~ chas / cMEM b0 f0 cflatten f1 c==> cuniq f0 c==> cuniq cflatten f1 c= csizel cflatten ccat cCONS f2 cNIL f1 c+ csizel f2 csizel cfilter / c~ cMEM b0 f0 ccat f0 cflatten f1
- (uniq h), (((uniq (flatten t)) /\ ((MEM r) t)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) |- ((~ ((has (\x. ((MEM x) h))) (flatten t))) ==> ((uniq (flatten t)) ==> (((MEM r) t) ==> ((sizel (flatten (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) ((cat h) (flatten t)))))))))
T c==> cuniq f0 c==> c==> c/\ cuniq cflatten f1 cMEM f2 f1 c= csizel cflatten creplace f2 cCONS f3 cNIL f1 csizel cAPPEND f3 cfilter / c~ cMEM b0 f2 cflatten f1 c==> c~ chas / cMEM b0 f0 cflatten f1 c==> cuniq cflatten f1 c==> cMEM f2 f1 c= csizel cflatten cCOND c= f0 f2 ccat cCONS f3 cNIL f1 cCONS f0 creplace f2 cCONS f3 cNIL f1 c+ csizel f3 csizel cfilter / c~ cMEM b0 f2 ccat f0 cflatten f1
- |- ((FILTER = filter) /\ ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all)))))
T c/\ c= part cFILTER part cfilter c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num (sizel (flatten t)))) ==> (((int_add (int_of_num (sizel s))) (int_of_num (sizel (flatten t)))) = ((int_add (int_of_num (sizel s))) (int_of_num (sizel (flatten t)))))) = (((int_add (int_of_num (sizel s))) (int_of_num (sizel (flatten t)))) = ((int_add (int_of_num (sizel s))) (int_of_num (sizel (flatten t))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num csizel cflatten f0 c= cint_add cint_of_num csizel f1 cint_of_num csizel cflatten f0 cint_add cint_of_num csizel f1 cint_of_num csizel cflatten f0 c= cint_add cint_of_num csizel f1 cint_of_num csizel cflatten f0 cint_add cint_of_num csizel f1 cint_of_num csizel cflatten f0
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ (uniq h), ((~ ((has (\x. ((MEM x) h))) (flatten t))) /\ (uniq (flatten t))), (((uniq (flatten t)) /\ ((MEM r) t)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))), ((r = h) \/ ((MEM r) t)) |- ((sizel (flatten (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) ((cat h) (flatten t))))))
T c==> cuniq f0 c==> c/\ c~ chas / cMEM b0 f0 cflatten f1 cuniq cflatten f1 c==> c==> c/\ cuniq cflatten f1 cMEM f2 f1 c= csizel cflatten creplace f2 cCONS f3 cNIL f1 csizel cAPPEND f3 cfilter / c~ cMEM b0 f2 cflatten f1 c==> c\/ c= f2 f0 cMEM f2 f1 c= csizel cflatten cCOND c= f0 f2 ccat cCONS f3 cNIL f1 cCONS f0 creplace f2 cCONS f3 cNIL f1 c+ csizel f3 csizel cfilter / c~ cMEM b0 f2 ccat f0 cflatten f1
- |- ((((h = r) ==> (((cat ((CONS s) NIL)) t) = ((cat ((CONS s) NIL)) t))) ==> (((~ (h = r)) ==> (((CONS h) (((replace r) ((CONS s) NIL)) t)) = e')) ==> ((((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))) = (((COND (h = r)) ((cat ((CONS s) NIL)) t)) e')))) = (((~ (h = r)) ==> (((CONS h) (((replace r) ((CONS s) NIL)) t)) = e')) ==> ((((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))) = (((COND (h = r)) ((cat ((CONS s) NIL)) t)) e'))))
T c= c==> c==> c= f0 f1 c= ccat cCONS f2 cNIL f3 ccat cCONS f2 cNIL f3 c==> c==> c~ c= f0 f1 c= cCONS f0 creplace f1 cCONS f2 cNIL f3 f4 c= cCOND c= f0 f1 ccat cCONS f2 cNIL f3 cCONS f0 creplace f1 cCONS f2 cNIL f3 cCOND c= f0 f1 ccat cCONS f2 cNIL f3 f4 c==> c==> c~ c= f0 f1 c= cCONS f0 creplace f1 cCONS f2 cNIL f3 f4 c= cCOND c= f0 f1 ccat cCONS f2 cNIL f3 cCONS f0 creplace f1 cCONS f2 cNIL f3 cCOND c= f0 f1 ccat cCONS f2 cNIL f3 f4
+ |- (((!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) ==> ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) (sizel (flatten t)))) = ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) (sizel (flatten t))))
T c= c==> ! cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 csizel cflatten f0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 csizel cflatten f0
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347507)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347508)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347509)) /\ (((real_le ((real_add ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))) \/ ((real_le ((real_add ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))))))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f2 c\/ creal_le creal_add creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2 creal_le creal_add creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2
+ |- ((\r'. ((~ ((has (\x. ((MEM x) r))) r')) ==> (((filter (\d. (~ ((MEM d) r)))) r') = r'))) h)
T * / c==> c~ chas / cMEM b1 f0 b0 c= cfilter / c~ cMEM b1 f0 b0 b0 f1
+ (~ ((has (\x. ((MEM x) h))) (flatten t))), ((MEM r) t) |- (((~ ((has (\x. ((MEM x) h))) r)) ==> (((sizel h) + ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))) = ((sizel s) + ((sizel ((filter (\d. (~ ((MEM d) r)))) h)) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))))) = ((((~ ((has (\x. ((MEM x) h))) (flatten t))) /\ ((MEM r) t)) ==> (~ ((has (\x. ((MEM x) h))) r))) ==> (((sizel h) + ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))) = ((sizel s) + ((sizel ((filter (\d. (~ ((MEM d) r)))) h)) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))))))
T c==> c~ chas / cMEM b0 f0 cflatten f1 c==> cMEM f2 f1 c= c==> c~ chas / cMEM b0 f0 f2 c= c+ csizel f0 c+ csizel f3 csizel cfilter / c~ cMEM b0 f2 cflatten f1 c+ csizel f3 c+ csizel cfilter / c~ cMEM b0 f2 f0 csizel cfilter / c~ cMEM b0 f2 cflatten f1 c==> c==> c/\ c~ chas / cMEM b0 f0 cflatten f1 cMEM f2 f1 c~ chas / cMEM b0 f0 f2 c= c+ csizel f0 c+ csizel f3 csizel cfilter / c~ cMEM b0 f2 cflatten f1 c+ csizel f3 c+ csizel cfilter / c~ cMEM b0 f2 f0 csizel cfilter / c~ cMEM b0 f2 cflatten f1
- |- ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all)))
T c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
+ (~ ((has (\x. ((MEM x) h))) (flatten t))), (uniq h), (uniq (flatten t)), ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t))))), ((MEM r) t) |- (((h = r) \/ (~ (h = r))) ==> ((sizel (flatten (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) ((cat h) (flatten t)))))))
T c==> c~ chas / cMEM b0 f0 cflatten f1 c==> cuniq f0 c==> cuniq cflatten f1 c==> c= csizel cflatten creplace f2 cCONS f3 cNIL f1 csizel cAPPEND f3 cfilter / c~ cMEM b0 f2 cflatten f1 c==> cMEM f2 f1 c==> c\/ c= f0 f2 c~ c= f0 f2 c= csizel cflatten cCOND c= f0 f2 ccat cCONS f3 cNIL f1 cCONS f0 creplace f2 cCONS f3 cNIL f1 c+ csizel f3 csizel cfilter / c~ cMEM b0 f2 ccat f0 cflatten f1
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))) ==> (((int_add (int_of_num (sizel h))) ((int_add (int_of_num (sizel s))) (int_of_num (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) = ((int_add (int_of_num (sizel h))) ((int_add (int_of_num (sizel s))) (int_of_num (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))))) = (((int_add (int_of_num (sizel h))) ((int_add (int_of_num (sizel s))) (int_of_num (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) = ((int_add (int_of_num (sizel h))) ((int_add (int_of_num (sizel s))) (int_of_num (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num csizel cfilter / c~ cMEM b0 f0 cflatten f1 c= cint_add cint_of_num csizel f2 cint_add cint_of_num csizel f3 cint_of_num csizel cfilter / c~ cMEM b0 f0 cflatten f1 cint_add cint_of_num csizel f2 cint_add cint_of_num csizel f3 cint_of_num csizel cfilter / c~ cMEM b0 f0 cflatten f1 c= cint_add cint_of_num csizel f2 cint_add cint_of_num csizel f3 cint_of_num csizel cfilter / c~ cMEM b0 f0 cflatten f1 cint_add cint_of_num csizel f2 cint_add cint_of_num csizel f3 cint_of_num csizel cfilter / c~ cMEM b0 f0 cflatten f1
+ |- ((~ (x = y)) = (((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y) \/ ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x)))
T c= c~ c= f0 f1 c\/ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
+ (((real_ge (real_of_int _10347507)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347508)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347509)) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347503)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347504)) /\ (((real_le ((real_add ((real_add (real_of_int _10347503)) (real_of_int _10347504))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10347503)) (real_of_int _10347504))) \/ ((real_le ((real_add ((real_add (real_of_int _10347503)) (real_of_int _10347504))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10347503)) (real_of_int _10347504)))))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_int f1 creal_le creal_add creal_add creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_int f1 cF
+ |- ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))
T * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 csizel cfilter / c~ cMEM b0 f0 cflatten f1
- ((uniq (flatten t)) /\ ((MEM r) t)), (((uniq (flatten t)) /\ ((MEM r) t)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) |- (((uniq (flatten t)) /\ ((MEM r) t)) /\ ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t))))))
T c==> c/\ cuniq cflatten f0 cMEM f1 f0 c==> c==> c/\ cuniq cflatten f0 cMEM f1 f0 c= csizel cflatten creplace f1 cCONS f2 cNIL f0 csizel cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0 c/\ c/\ cuniq cflatten f0 cMEM f1 f0 c= csizel cflatten creplace f1 cCONS f2 cNIL f0 csizel cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0
+ |- ((flatten NIL) = NIL)
T c= cflatten cNIL cNIL
+ (uniq (flatten t)) |- ((uniq (flatten t)) = T)
T c==> cuniq cflatten f0 c= cuniq cflatten f0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (MAP = map)
T c= part cMAP part cmap
- |- (LENGTH = sizel)
T c= part cLENGTH part csizel
+ |- (((!s1. (!s2. ((sizel ((cat s1) s2)) = ((sizel s1) + (sizel s2))))) ==> ((\s1. (!s2. ((sizel ((cat s1) s2)) = ((sizel s1) + (sizel s2))))) s1)) = ((\s1. (!s2. ((sizel ((cat s1) s2)) = ((sizel s1) + (sizel s2))))) s1))
T c= c==> ! ! c= csizel ccat b0 b1 c+ csizel b0 csizel b1 * / ! c= csizel ccat b0 b1 c+ csizel b0 csizel b1 f0 * / ! c= csizel ccat b0 b1 c+ csizel b0 csizel b1 f0
+ (~ ((has (\x. ((MEM x) h))) r)) |- (((((filter (\d. (~ ((MEM d) r)))) h) = h) ==> (((sizel h) + ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))) = ((sizel s) + ((sizel ((filter (\d. (~ ((MEM d) r)))) h)) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))))) = (((~ ((has (\x. ((MEM x) h))) r)) ==> (((filter (\d. (~ ((MEM d) r)))) h) = h)) ==> (((sizel h) + ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))) = ((sizel s) + ((sizel ((filter (\d. (~ ((MEM d) r)))) h)) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))))))
T c==> c~ chas / cMEM b0 f0 f1 c= c==> c= cfilter / c~ cMEM b0 f1 f0 f0 c= c+ csizel f0 c+ csizel f2 csizel cfilter / c~ cMEM b0 f1 cflatten f3 c+ csizel f2 c+ csizel cfilter / c~ cMEM b0 f1 f0 csizel cfilter / c~ cMEM b0 f1 cflatten f3 c==> c==> c~ chas / cMEM b0 f0 f1 c= cfilter / c~ cMEM b0 f1 f0 f0 c= c+ csizel f0 c+ csizel f2 csizel cfilter / c~ cMEM b0 f1 cflatten f3 c+ csizel f2 c+ csizel cfilter / c~ cMEM b0 f1 f0 csizel cfilter / c~ cMEM b0 f1 cflatten f3
+ |- (((!ss1. (!ss2. ((flatten ((cat ss1) ss2)) = ((cat (flatten ss1)) (flatten ss2))))) ==> ((\ss1. (!ss2. ((flatten ((cat ss1) ss2)) = ((cat (flatten ss1)) (flatten ss2))))) ss1)) = ((\ss1. (!ss2. ((flatten ((cat ss1) ss2)) = ((cat (flatten ss1)) (flatten ss2))))) ss1))
T c= c==> ! ! c= cflatten ccat b0 b1 ccat cflatten b0 cflatten b1 * / ! c= cflatten ccat b0 b1 ccat cflatten b0 cflatten b1 f0 * / ! c= cflatten ccat b0 b1 ccat cflatten b0 cflatten b1 f0
- |- (T = ((~ (!A. (A \/ (~ A)))) ==> F))
T c= cT c==> c~ ! c\/ b0 c~ b0 cF
- |- (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
+ (~ ((has (\x. ((MEM x) h))) (flatten t))), ((MEM r) t) |- (((sizel h) + ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))) = ((sizel s) + ((sizel ((filter (\d. (~ ((MEM d) r)))) h)) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))))
T c==> c~ chas / cMEM b0 f0 cflatten f1 c==> cMEM f2 f1 c= c+ csizel f0 c+ csizel f3 csizel cfilter / c~ cMEM b0 f2 cflatten f1 c+ csizel f3 c+ csizel cfilter / c~ cMEM b0 f2 f0 csizel cfilter / c~ cMEM b0 f2 cflatten f1
+ |- (((!s2. ((uniq ((cat s1) s2)) = ((uniq s1) /\ ((~ ((has (\x. ((MEM x) s1))) s2)) /\ (uniq s2))))) ==> ((\s2. ((uniq ((cat s1) s2)) = ((uniq s1) /\ ((~ ((has (\x. ((MEM x) s1))) s2)) /\ (uniq s2))))) s2)) = ((\s2. ((uniq ((cat s1) s2)) = ((uniq s1) /\ ((~ ((has (\x. ((MEM x) s1))) s2)) /\ (uniq s2))))) s2))
T c= c==> ! c= cuniq ccat f0 b0 c/\ cuniq f0 c/\ c~ chas / cMEM b1 f0 b0 cuniq b0 * / c= cuniq ccat f0 b0 c/\ cuniq f0 c/\ c~ chas / cMEM b1 f0 b0 cuniq b0 f1 * / c= cuniq ccat f0 b0 c/\ cuniq f0 c/\ c~ chas / cMEM b1 f0 b0 cuniq b0 f1
+ |- (((!a. (!s1. (!s2. (((filter a) ((cat s1) s2)) = ((cat ((filter a) s1)) ((filter a) s2)))))) ==> ((\a. (!s1. (!s2. (((filter a) ((cat s1) s2)) = ((cat ((filter a) s1)) ((filter a) s2)))))) a)) = ((\a. (!s1. (!s2. (((filter a) ((cat s1) s2)) = ((cat ((filter a) s1)) ((filter a) s2)))))) a))
T c= c==> ! ! ! c= cfilter b0 ccat b1 b2 ccat cfilter b0 b1 cfilter b0 b2 * / ! ! c= cfilter b0 ccat b1 b2 ccat cfilter b0 b1 cfilter b0 b2 f0 * / ! ! c= cfilter b0 ccat b1 b2 ccat cfilter b0 b1 cfilter b0 b2 f0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((!h. (!t. ((((uniq (flatten t)) /\ ((MEM r) t)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) ==> (((uniq (flatten ((CONS h) t))) /\ ((MEM r) ((CONS h) t))) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) ((CONS h) t)))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten ((CONS h) t)))))))))) = ((((uniq (flatten NIL)) /\ ((MEM r) NIL)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) NIL))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten NIL)))))) /\ (!h. (!t. ((((uniq (flatten t)) /\ ((MEM r) t)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) ==> (((uniq (flatten ((CONS h) t))) /\ ((MEM r) ((CONS h) t))) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) ((CONS h) t)))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten ((CONS h) t))))))))))))
T c= ! ! c==> c==> c/\ cuniq cflatten b1 cMEM f0 b1 c= csizel cflatten creplace f0 cCONS f1 cNIL b1 csizel cAPPEND f1 cfilter / c~ cMEM b2 f0 cflatten b1 c==> c/\ cuniq cflatten cCONS b0 b1 cMEM f0 cCONS b0 b1 c= csizel cflatten creplace f0 cCONS f1 cNIL cCONS b0 b1 csizel cAPPEND f1 cfilter / c~ cMEM b2 f0 cflatten cCONS b0 b1 c/\ c==> c/\ cuniq cflatten cNIL cMEM f0 cNIL c= csizel cflatten creplace f0 cCONS f1 cNIL cNIL csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten cNIL ! ! c==> c==> c/\ cuniq cflatten b1 cMEM f0 b1 c= csizel cflatten creplace f0 cCONS f1 cNIL b1 csizel cAPPEND f1 cfilter / c~ cMEM b2 f0 cflatten b1 c==> c/\ cuniq cflatten cCONS b0 b1 cMEM f0 cCONS b0 b1 c= csizel cflatten creplace f0 cCONS f1 cNIL cCONS b0 b1 csizel cAPPEND f1 cfilter / c~ cMEM b2 f0 cflatten cCONS b0 b1
- |- ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0)
T * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1
+ |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- |- ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))
T c==> c~ c= cNIL f0 c= cLAST f0 clast f1 f0
+ (h = r) |- (((((uniq h) /\ (~ ((has (\x. ((MEM x) h))) (flatten t)))) ==> (((filter (\d. (~ ((MEM d) h)))) ((cat h) (flatten t))) = (flatten t))) ==> (((sizel s) + (sizel (flatten t))) = ((sizel s) + ((NUMERAL _0) + (sizel ((filter (\d. (~ ((MEM d) h)))) (flatten t))))))) = ((((uniq r) /\ (~ ((has (\x. ((MEM x) r))) (flatten t)))) ==> (((filter (\d. (~ ((MEM d) r)))) ((cat r) (flatten t))) = (flatten t))) ==> (((sizel s) + (sizel (flatten t))) = ((sizel s) + ((NUMERAL _0) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))))))
T c==> c= f0 f1 c= c==> c==> c/\ cuniq f0 c~ chas / cMEM b0 f0 cflatten f2 c= cfilter / c~ cMEM b0 f0 ccat f0 cflatten f2 cflatten f2 c= c+ csizel f3 csizel cflatten f2 c+ csizel f3 c+ cNUMERAL c_0 csizel cfilter / c~ cMEM b0 f0 cflatten f2 c==> c==> c/\ cuniq f1 c~ chas / cMEM b0 f1 cflatten f2 c= cfilter / c~ cMEM b0 f1 ccat f1 cflatten f2 cflatten f2 c= c+ csizel f3 csizel cflatten f2 c+ csizel f3 c+ cNUMERAL c_0 csizel cfilter / c~ cMEM b0 f1 cflatten f2
- |- ((!A'. (A' \/ (~ A))) = ((!A. A) \/ (~ A)))
T c= ! c\/ b0 c~ f0 c\/ ! b0 c~ f0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- (((uniq (flatten t)) /\ ((MEM r) t)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) |- ((uniq h) ==> ((~ ((has (\x. ((MEM x) h))) (flatten t))) ==> ((uniq (flatten t)) ==> (((MEM r) t) ==> ((sizel (flatten (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) ((cat h) (flatten t))))))))))
T c==> c==> c/\ cuniq cflatten f0 cMEM f1 f0 c= csizel cflatten creplace f1 cCONS f2 cNIL f0 csizel cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0 c==> cuniq f3 c==> c~ chas / cMEM b0 f3 cflatten f0 c==> cuniq cflatten f0 c==> cMEM f1 f0 c= csizel cflatten cCOND c= f3 f1 ccat cCONS f2 cNIL f0 cCONS f3 creplace f1 cCONS f2 cNIL f0 c+ csizel f2 csizel cfilter / c~ cMEM b0 f1 ccat f3 cflatten f0
+ (uniq h), ((uniq h) /\ ((~ ((has (\x. ((MEM x) h))) (flatten t))) /\ (uniq (flatten t)))), (((uniq (flatten t)) /\ ((MEM r) t)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))), ((r = h) \/ ((MEM r) t)) |- ((sizel (flatten (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) ((cat h) (flatten t))))))
T c==> cuniq f0 c==> c/\ cuniq f0 c/\ c~ chas / cMEM b0 f0 cflatten f1 cuniq cflatten f1 c==> c==> c/\ cuniq cflatten f1 cMEM f2 f1 c= csizel cflatten creplace f2 cCONS f3 cNIL f1 csizel cAPPEND f3 cfilter / c~ cMEM b0 f2 cflatten f1 c==> c\/ c= f2 f0 cMEM f2 f1 c= csizel cflatten cCOND c= f0 f2 ccat cCONS f3 cNIL f1 cCONS f0 creplace f2 cCONS f3 cNIL f1 c+ csizel f3 csizel cfilter / c~ cMEM b0 f2 ccat f0 cflatten f1
+ |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347507)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347508)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347509)) /\ (((real_le ((real_add ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))) \/ ((real_le ((real_add ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))))))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f2 c\/ creal_le creal_add creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2 creal_le creal_add creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2 cF
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
+ (r = h) |- (((sizel (flatten ((cat ((CONS s) NIL)) t))) = ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) h)))) ((cat h) (flatten t)))))) = ((sizel (flatten (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) ((cat h) (flatten t)))))))
T c==> c= f0 f1 c= c= csizel cflatten ccat cCONS f2 cNIL f3 c+ csizel f2 csizel cfilter / c~ cMEM b0 f1 ccat f1 cflatten f3 c= csizel cflatten cCOND c= f1 f0 ccat cCONS f2 cNIL f3 cCONS f1 creplace f0 cCONS f2 cNIL f3 c+ csizel f2 csizel cfilter / c~ cMEM b0 f0 ccat f1 cflatten f3
+ |- ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs)))
T c= cflatten cCONS f0 f1 cAPPEND f0 cflatten f1
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- ((!r. (!t. (((~ ((has (\x. ((MEM x) h))) (flatten t))) /\ ((MEM r) t)) ==> (~ ((has (\x. ((MEM x) h))) r))))) = T)
T c= ! ! c==> c/\ c~ chas / cMEM b2 f0 cflatten b1 cMEM b0 b1 c~ chas / cMEM b2 f0 b0 cT
- |- ((!A. t) = t)
T c= ! f0 f0
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num (sizel h))) ==> (((int_le (int_of_num (NUMERAL _0))) (int_of_num (sizel s))) ==> (((int_le (int_of_num (NUMERAL _0))) (int_of_num (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))) ==> (((int_add (int_of_num (sizel h))) ((int_add (int_of_num (sizel s))) (int_of_num (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) = ((int_add (int_of_num (sizel h))) ((int_add (int_of_num (sizel s))) (int_of_num (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))))))) = (((int_le (int_of_num (NUMERAL _0))) (int_of_num (sizel s))) ==> (((int_le (int_of_num (NUMERAL _0))) (int_of_num (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))) ==> (((int_add (int_of_num (sizel h))) ((int_add (int_of_num (sizel s))) (int_of_num (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) = ((int_add (int_of_num (sizel h))) ((int_add (int_of_num (sizel s))) (int_of_num (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num csizel f0 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num csizel f1 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num csizel cfilter / c~ cMEM b0 f2 cflatten f3 c= cint_add cint_of_num csizel f0 cint_add cint_of_num csizel f1 cint_of_num csizel cfilter / c~ cMEM b0 f2 cflatten f3 cint_add cint_of_num csizel f0 cint_add cint_of_num csizel f1 cint_of_num csizel cfilter / c~ cMEM b0 f2 cflatten f3 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num csizel f1 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num csizel cfilter / c~ cMEM b0 f2 cflatten f3 c= cint_add cint_of_num csizel f0 cint_add cint_of_num csizel f1 cint_of_num csizel cfilter / c~ cMEM b0 f2 cflatten f3 cint_add cint_of_num csizel f0 cint_add cint_of_num csizel f1 cint_of_num csizel cfilter / c~ cMEM b0 f2 cflatten f3
+ |- (((int_le (int_of_num (NUMERAL _0))) (int_of_num (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))) ==> (((int_add (int_of_num (sizel h))) ((int_add (int_of_num (sizel s))) (int_of_num (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) = ((int_add (int_of_num (sizel h))) ((int_add (int_of_num (sizel s))) (int_of_num (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))))))
T c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num csizel cfilter / c~ cMEM b0 f0 cflatten f1 c= cint_add cint_of_num csizel f2 cint_add cint_of_num csizel f3 cint_of_num csizel cfilter / c~ cMEM b0 f0 cflatten f1 cint_add cint_of_num csizel f2 cint_add cint_of_num csizel f3 cint_of_num csizel cfilter / c~ cMEM b0 f0 cflatten f1
+ (~ (h = r)), (~ ((has (\x. ((MEM x) h))) (flatten t))), ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t))))), ((MEM r) t) |- ((sizel (flatten (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((sizel s) + ((sizel ((filter (\d. (~ ((MEM d) r)))) h)) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))))
T c==> c~ c= f0 f1 c==> c~ chas / cMEM b0 f0 cflatten f2 c==> c= csizel cflatten creplace f1 cCONS f3 cNIL f2 csizel cAPPEND f3 cfilter / c~ cMEM b0 f1 cflatten f2 c==> cMEM f1 f2 c= csizel cflatten cCOND c= f0 f1 ccat cCONS f3 cNIL f2 cCONS f0 creplace f1 cCONS f3 cNIL f2 c+ csizel f3 c+ csizel cfilter / c~ cMEM b0 f1 f0 csizel cfilter / c~ cMEM b0 f1 cflatten f2
+ (~ ((has (\x. ((MEM x) h))) (flatten t))), (uniq h) |- (((((filter (\d. (~ ((MEM d) h)))) ((cat h) (flatten t))) = (flatten t)) ==> (((sizel s) + (sizel (flatten t))) = ((sizel s) + ((NUMERAL _0) + (sizel ((filter (\d. (~ ((MEM d) h)))) (flatten t))))))) = ((((uniq h) /\ (~ ((has (\x. ((MEM x) h))) (flatten t)))) ==> (((filter (\d. (~ ((MEM d) h)))) ((cat h) (flatten t))) = (flatten t))) ==> (((sizel s) + (sizel (flatten t))) = ((sizel s) + ((NUMERAL _0) + (sizel ((filter (\d. (~ ((MEM d) h)))) (flatten t))))))))
T c==> c~ chas / cMEM b0 f0 cflatten f1 c==> cuniq f0 c= c==> c= cfilter / c~ cMEM b0 f0 ccat f0 cflatten f1 cflatten f1 c= c+ csizel f2 csizel cflatten f1 c+ csizel f2 c+ cNUMERAL c_0 csizel cfilter / c~ cMEM b0 f0 cflatten f1 c==> c==> c/\ cuniq f0 c~ chas / cMEM b0 f0 cflatten f1 c= cfilter / c~ cMEM b0 f0 ccat f0 cflatten f1 cflatten f1 c= c+ csizel f2 csizel cflatten f1 c+ csizel f2 c+ cNUMERAL c_0 csizel cfilter / c~ cMEM b0 f0 cflatten f1
+ |- ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))
T c= cint_of_num c+ f0 f1 cint_add cint_of_num f0 cint_of_num f1
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- |- ((((h = r) = (h = r)) ==> (((h = r) ==> (((cat ((CONS s) NIL)) t) = t')) ==> (((~ (h = r)) ==> (((CONS h) (((replace r) ((CONS s) NIL)) t)) = e')) ==> ((((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))) = (((COND (h = r)) t') e'))))) = (((h = r) ==> (((cat ((CONS s) NIL)) t) = t')) ==> (((~ (h = r)) ==> (((CONS h) (((replace r) ((CONS s) NIL)) t)) = e')) ==> ((((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))) = (((COND (h = r)) t') e')))))
T c= c==> c= c= f0 f1 c= f0 f1 c==> c==> c= f0 f1 c= ccat cCONS f2 cNIL f3 f4 c==> c==> c~ c= f0 f1 c= cCONS f0 creplace f1 cCONS f2 cNIL f3 f5 c= cCOND c= f0 f1 ccat cCONS f2 cNIL f3 cCONS f0 creplace f1 cCONS f2 cNIL f3 cCOND c= f0 f1 f4 f5 c==> c==> c= f0 f1 c= ccat cCONS f2 cNIL f3 f4 c==> c==> c~ c= f0 f1 c= cCONS f0 creplace f1 cCONS f2 cNIL f3 f5 c= cCOND c= f0 f1 ccat cCONS f2 cNIL f3 cCONS f0 creplace f1 cCONS f2 cNIL f3 cCOND c= f0 f1 f4 f5
+ |- (((!x. (!xs. (((flatten NIL) = NIL) /\ ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs)))))) ==> ((\x. (!xs. (((flatten NIL) = NIL) /\ ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs)))))) x)) = ((\x. (!xs. (((flatten NIL) = NIL) /\ ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs)))))) x))
T c= c==> ! ! c/\ c= cflatten cNIL cNIL c= cflatten cCONS b0 b1 cAPPEND b0 cflatten b1 * / ! c/\ c= cflatten cNIL cNIL c= cflatten cCONS b0 b1 cAPPEND b0 cflatten b1 f0 * / ! c/\ c= cflatten cNIL cNIL c= cflatten cCONS b0 b1 cAPPEND b0 cflatten b1 f0
- |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- (((~ (h = r)) ==> (((CONS h) (((replace r) ((CONS s) NIL)) t)) = e')) ==> ((((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))) = (((COND (h = r)) ((cat ((CONS s) NIL)) t)) e')))
T c==> c==> c~ c= f0 f1 c= cCONS f0 creplace f1 cCONS f2 cNIL f3 f4 c= cCOND c= f0 f1 ccat cCONS f2 cNIL f3 cCONS f0 creplace f1 cCONS f2 cNIL f3 cCOND c= f0 f1 ccat cCONS f2 cNIL f3 f4
+ |- ((\r. (!t. (((~ ((has (\x. ((MEM x) h))) (flatten t))) /\ ((MEM r) t)) ==> (~ ((has (\x. ((MEM x) h))) r))))) r)
T * / ! c==> c/\ c~ chas / cMEM b2 f0 cflatten b1 cMEM b0 b1 c~ chas / cMEM b2 f0 b0 f1
+ |- ((((((uniq (flatten NIL)) /\ ((MEM r) NIL)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) NIL))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten NIL)))))) /\ (!h. (!t. ((((uniq (flatten t)) /\ ((MEM r) t)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) ==> (((uniq (flatten ((CONS h) t))) /\ ((MEM r) ((CONS h) t))) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) ((CONS h) t)))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten ((CONS h) t))))))))))) ==> (!N. (((uniq (flatten N)) /\ ((MEM r) N)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))))) = (!N. (((uniq (flatten N)) /\ ((MEM r) N)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))))
T c= c==> c/\ c==> c/\ cuniq cflatten cNIL cMEM f0 cNIL c= csizel cflatten creplace f0 cCONS f1 cNIL cNIL csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten cNIL ! ! c==> c==> c/\ cuniq cflatten b1 cMEM f0 b1 c= csizel cflatten creplace f0 cCONS f1 cNIL b1 csizel cAPPEND f1 cfilter / c~ cMEM b2 f0 cflatten b1 c==> c/\ cuniq cflatten cCONS b0 b1 cMEM f0 cCONS b0 b1 c= csizel cflatten creplace f0 cCONS f1 cNIL cCONS b0 b1 csizel cAPPEND f1 cfilter / c~ cMEM b2 f0 cflatten cCONS b0 b1 ! c==> c/\ cuniq cflatten b0 cMEM f0 b0 c= csizel cflatten creplace f0 cCONS f1 cNIL b0 csizel cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten b0 ! c==> c/\ cuniq cflatten b0 cMEM f0 b0 c= csizel cflatten creplace f0 cCONS f1 cNIL b0 csizel cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((~ ((has (\x. ((MEM x) h))) r)) ==> (((filter (\d. (~ ((MEM d) r)))) h) = h)) ==> (((sizel h) + ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))) = ((sizel s) + ((sizel ((filter (\d. (~ ((MEM d) r)))) h)) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))))) = (((~ ((has (\x. ((MEM x) r))) h)) ==> (((filter (\d. (~ ((MEM d) r)))) h) = h)) ==> (((sizel h) + ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))) = ((sizel s) + ((sizel ((filter (\d. (~ ((MEM d) r)))) h)) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))))))
T c= c==> c==> c~ chas / cMEM b0 f0 f1 c= cfilter / c~ cMEM b0 f1 f0 f0 c= c+ csizel f0 c+ csizel f2 csizel cfilter / c~ cMEM b0 f1 cflatten f3 c+ csizel f2 c+ csizel cfilter / c~ cMEM b0 f1 f0 csizel cfilter / c~ cMEM b0 f1 cflatten f3 c==> c==> c~ chas / cMEM b0 f1 f0 c= cfilter / c~ cMEM b0 f1 f0 f0 c= c+ csizel f0 c+ csizel f2 csizel cfilter / c~ cMEM b0 f1 cflatten f3 c+ csizel f2 c+ csizel cfilter / c~ cMEM b0 f1 f0 csizel cfilter / c~ cMEM b0 f1 cflatten f3
+ (~ ((has (\x. ((MEM x) h))) r)) |- (((~ ((has (\x. ((MEM x) h))) r)) ==> (((filter (\d. (~ ((MEM d) r)))) h) = h)) ==> (((sizel h) + ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))) = ((sizel s) + ((sizel ((filter (\d. (~ ((MEM d) r)))) h)) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))))
T c==> c~ chas / cMEM b0 f0 f1 c==> c==> c~ chas / cMEM b0 f0 f1 c= cfilter / c~ cMEM b0 f1 f0 f0 c= c+ csizel f0 c+ csizel f2 csizel cfilter / c~ cMEM b0 f1 cflatten f3 c+ csizel f2 c+ csizel cfilter / c~ cMEM b0 f1 f0 csizel cfilter / c~ cMEM b0 f1 cflatten f3
- |- ((\r. ((uniq ((APPEND h) r)) ==> (((filter (\d. (~ ((MEM d) h)))) ((APPEND h) r)) = r))) r)
T * / c==> cuniq cAPPEND f0 b0 c= cfilter / c~ cMEM b1 f0 cAPPEND f0 b0 b0 f1
+ |- ((((filter (\d. (~ ((MEM d) r)))) h) = h) ==> (((sizel h) + ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))) = ((sizel s) + ((sizel ((filter (\d. (~ ((MEM d) r)))) h)) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))))
T c==> c= cfilter / c~ cMEM b0 f0 f1 f1 c= c+ csizel f1 c+ csizel f2 csizel cfilter / c~ cMEM b0 f0 cflatten f3 c+ csizel f2 c+ csizel cfilter / c~ cMEM b0 f0 f1 csizel cfilter / c~ cMEM b0 f0 cflatten f3
+ |- (((!xs. (((flatten NIL) = NIL) /\ ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs))))) ==> ((\xs. (((flatten NIL) = NIL) /\ ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs))))) xs)) = ((\xs. (((flatten NIL) = NIL) /\ ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs))))) xs))
T c= c==> ! c/\ c= cflatten cNIL cNIL c= cflatten cCONS f0 b0 cAPPEND f0 cflatten b0 * / c/\ c= cflatten cNIL cNIL c= cflatten cCONS f0 b0 cAPPEND f0 cflatten b0 f1 * / c/\ c= cflatten cNIL cNIL c= cflatten cCONS f0 b0 cAPPEND f0 cflatten b0 f1
+ |- (((!r. (!t. (((~ ((has (\x. ((MEM x) h))) (flatten t))) /\ ((MEM r) t)) ==> (~ ((has (\x. ((MEM x) h))) r))))) ==> ((\r. (!t. (((~ ((has (\x. ((MEM x) h))) (flatten t))) /\ ((MEM r) t)) ==> (~ ((has (\x. ((MEM x) h))) r))))) r)) = ((\r. (!t. (((~ ((has (\x. ((MEM x) h))) (flatten t))) /\ ((MEM r) t)) ==> (~ ((has (\x. ((MEM x) h))) r))))) r))
T c= c==> ! ! c==> c/\ c~ chas / cMEM b2 f0 cflatten b1 cMEM b0 b1 c~ chas / cMEM b2 f0 b0 * / ! c==> c/\ c~ chas / cMEM b2 f0 cflatten b1 cMEM b0 b1 c~ chas / cMEM b2 f0 b0 f1 * / ! c==> c/\ c~ chas / cMEM b2 f0 cflatten b1 cMEM b0 b1 c~ chas / cMEM b2 f0 b0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347507)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347508)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347509)) /\ (((real_le ((real_add ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))) \/ ((real_le ((real_add ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))))))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347507)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347508)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347509)) /\ (((real_le ((real_add ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))) \/ ((real_le ((real_add ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))))))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347507)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347508)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347509)) /\ (((real_le ((real_add ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))) \/ ((real_le ((real_add ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509))))))))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f2 c\/ creal_le creal_add creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2 creal_le creal_add creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f2 c\/ creal_le creal_add creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2 creal_le creal_add creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f2 c\/ creal_le creal_add creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2 creal_le creal_add creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2
+ |- (((int_add (int_of_num (sizel h))) ((int_add (int_of_num (sizel s))) (int_of_num (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) = ((int_add (int_of_num (sizel h))) ((int_add (int_of_num (sizel s))) (int_of_num (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))))
T c= cint_add cint_of_num csizel f0 cint_add cint_of_num csizel f1 cint_of_num csizel cfilter / c~ cMEM b0 f2 cflatten f3 cint_add cint_of_num csizel f0 cint_add cint_of_num csizel f1 cint_of_num csizel cfilter / c~ cMEM b0 f2 cflatten f3
+ |- (((int_add (int_of_num (sizel s))) (int_of_num (sizel (flatten t)))) = ((int_add (int_of_num (sizel s))) (int_of_num (sizel (flatten t)))))
T c= cint_add cint_of_num csizel f0 cint_of_num csizel cflatten f1 cint_add cint_of_num csizel f0 cint_of_num csizel cflatten f1
+ |- ((\A. (A \/ (~ A))) (h = r))
T * / c\/ b0 c~ b0 c= f0 f1
- |- ((!A. (A \/ (~ A))) = ((T \/ (~ T)) /\ (F \/ (~ F))))
T c= ! c\/ b0 c~ b0 c/\ c\/ cT c~ cT c\/ cF c~ cF
+ |- (((MEM x) ((CONS h) t)) = ((x = h) \/ ((MEM x) t)))
T c= cMEM f0 cCONS f1 f2 c\/ c= f0 f1 cMEM f0 f2
+ (~ ((has (\x. ((MEM x) h))) (flatten t))), (uniq h), (uniq (flatten t)), ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t))))), ((h = r) \/ (~ (h = r))), ((MEM r) t) |- (((h = r) \/ (~ (h = r))) /\ ((sizel (flatten (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((sizel s) + ((sizel ((filter (\d. (~ ((MEM d) r)))) h)) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))))
T c==> c~ chas / cMEM b0 f0 cflatten f1 c==> cuniq f0 c==> cuniq cflatten f1 c==> c= csizel cflatten creplace f2 cCONS f3 cNIL f1 csizel cAPPEND f3 cfilter / c~ cMEM b0 f2 cflatten f1 c==> c\/ c= f0 f2 c~ c= f0 f2 c==> cMEM f2 f1 c/\ c\/ c= f0 f2 c~ c= f0 f2 c= csizel cflatten cCOND c= f0 f2 ccat cCONS f3 cNIL f1 cCONS f0 creplace f2 cCONS f3 cNIL f1 c+ csizel f3 c+ csizel cfilter / c~ cMEM b0 f2 f0 csizel cfilter / c~ cMEM b0 f2 cflatten f1
+ |- ((((~ ((has (\x. ((MEM x) r))) h)) ==> (((filter (\d. (~ ((MEM d) r)))) h) = h)) ==> (((sizel h) + ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))) = ((sizel s) + ((sizel ((filter (\d. (~ ((MEM d) r)))) h)) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))))) = (((sizel h) + ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))) = ((sizel s) + ((sizel ((filter (\d. (~ ((MEM d) r)))) h)) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))))
T c= c==> c==> c~ chas / cMEM b0 f0 f1 c= cfilter / c~ cMEM b0 f0 f1 f1 c= c+ csizel f1 c+ csizel f2 csizel cfilter / c~ cMEM b0 f0 cflatten f3 c+ csizel f2 c+ csizel cfilter / c~ cMEM b0 f0 f1 csizel cfilter / c~ cMEM b0 f0 cflatten f3 c= c+ csizel f1 c+ csizel f2 csizel cfilter / c~ cMEM b0 f0 cflatten f3 c+ csizel f2 c+ csizel cfilter / c~ cMEM b0 f0 f1 csizel cfilter / c~ cMEM b0 f0 cflatten f3
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- (((((~ ((has (\x. ((MEM x) h))) (flatten t))) /\ ((MEM r) t)) ==> (~ ((has (\x. ((MEM x) h))) r))) ==> (((sizel h) + ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))) = ((sizel s) + ((sizel ((filter (\d. (~ ((MEM d) r)))) h)) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))))) = (((sizel h) + ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))) = ((sizel s) + ((sizel ((filter (\d. (~ ((MEM d) r)))) h)) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))))
T c= c==> c==> c/\ c~ chas / cMEM b0 f0 cflatten f1 cMEM f2 f1 c~ chas / cMEM b0 f0 f2 c= c+ csizel f0 c+ csizel f3 csizel cfilter / c~ cMEM b0 f2 cflatten f1 c+ csizel f3 c+ csizel cfilter / c~ cMEM b0 f2 f0 csizel cfilter / c~ cMEM b0 f2 cflatten f1 c= c+ csizel f0 c+ csizel f3 csizel cfilter / c~ cMEM b0 f2 cflatten f1 c+ csizel f3 c+ csizel cfilter / c~ cMEM b0 f2 f0 csizel cfilter / c~ cMEM b0 f2 cflatten f1
+ |- ((uniq NIL) = T)
T c= cuniq cNIL cT
+ |- (((!s2. ((sizel ((cat s1) s2)) = ((sizel s1) + (sizel s2)))) ==> ((\s2. ((sizel ((cat s1) s2)) = ((sizel s1) + (sizel s2)))) s2)) = ((\s2. ((sizel ((cat s1) s2)) = ((sizel s1) + (sizel s2)))) s2))
T c= c==> ! c= csizel ccat f0 b0 c+ csizel f0 csizel b0 * / c= csizel ccat f0 b0 c+ csizel f0 csizel b0 f1 * / c= csizel ccat f0 b0 c+ csizel f0 csizel b0 f1
+ (~ ((has (\x. ((MEM x) h))) (flatten t))), (uniq h), (uniq (flatten t)), ((~ (h = r)) ==> ((sizel (flatten (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((sizel s) + ((sizel ((filter (\d. (~ ((MEM d) r)))) h)) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))))), ((h = r) \/ (~ (h = r))) |- ((sizel (flatten (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((sizel s) + ((sizel ((filter (\d. (~ ((MEM d) r)))) h)) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))))
T c==> c~ chas / cMEM b0 f0 cflatten f1 c==> cuniq f0 c==> cuniq cflatten f1 c==> c==> c~ c= f0 f2 c= csizel cflatten cCOND c= f0 f2 ccat cCONS f3 cNIL f1 cCONS f0 creplace f2 cCONS f3 cNIL f1 c+ csizel f3 c+ csizel cfilter / c~ cMEM b0 f2 f0 csizel cfilter / c~ cMEM b0 f2 cflatten f1 c==> c\/ c= f0 f2 c~ c= f0 f2 c= csizel cflatten cCOND c= f0 f2 ccat cCONS f3 cNIL f1 cCONS f0 creplace f2 cCONS f3 cNIL f1 c+ csizel f3 c+ csizel cfilter / c~ cMEM b0 f2 f0 csizel cfilter / c~ cMEM b0 f2 cflatten f1
+ |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347503)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347504)) /\ (((real_le ((real_add ((real_add (real_of_int _10347503)) (real_of_int _10347504))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10347503)) (real_of_int _10347504))) \/ ((real_le ((real_add ((real_add (real_of_int _10347503)) (real_of_int _10347504))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10347503)) (real_of_int _10347504)))))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347503)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347504)) /\ (((real_le ((real_add ((real_add (real_of_int _10347503)) (real_of_int _10347504))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10347503)) (real_of_int _10347504))) \/ ((real_le ((real_add ((real_add (real_of_int _10347503)) (real_of_int _10347504))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10347503)) (real_of_int _10347504)))))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347503)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347504)) /\ (((real_le ((real_add ((real_add (real_of_int _10347503)) (real_of_int _10347504))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10347503)) (real_of_int _10347504))) \/ ((real_le ((real_add ((real_add (real_of_int _10347503)) (real_of_int _10347504))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10347503)) (real_of_int _10347504))))))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_int f1 creal_le creal_add creal_add creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_int f1 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_int f1 creal_le creal_add creal_add creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_int f1 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_int f1 creal_le creal_add creal_add creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_int f1
+ (~ ((has (\x. ((MEM x) h))) (flatten t))), (uniq h), (uniq (flatten t)), ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t))))), ((MEM r) t) |- (((h = r) \/ (~ (h = r))) ==> ((sizel (flatten (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((sizel s) + ((sizel ((filter (\d. (~ ((MEM d) r)))) h)) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))))
T c==> c~ chas / cMEM b0 f0 cflatten f1 c==> cuniq f0 c==> cuniq cflatten f1 c==> c= csizel cflatten creplace f2 cCONS f3 cNIL f1 csizel cAPPEND f3 cfilter / c~ cMEM b0 f2 cflatten f1 c==> cMEM f2 f1 c==> c\/ c= f0 f2 c~ c= f0 f2 c= csizel cflatten cCOND c= f0 f2 ccat cCONS f3 cNIL f1 cCONS f0 creplace f2 cCONS f3 cNIL f1 c+ csizel f3 c+ csizel cfilter / c~ cMEM b0 f2 f0 csizel cfilter / c~ cMEM b0 f2 cflatten f1
+ |- (((int_le (int_of_num (NUMERAL _0))) _10347503) ==> (((int_le (int_of_num (NUMERAL _0))) _10347504) ==> (((int_add _10347503) _10347504) = ((int_add _10347503) _10347504))))
T c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c= cint_add f0 f1 cint_add f0 f1
+ |- ((((replace x) ys) ((CONS z) zs)) = (((COND (z = x)) ((APPEND ys) zs)) ((CONS z) (((replace x) ys) zs))))
T c= creplace f0 f1 cCONS f2 f3 cCOND c= f2 f0 cAPPEND f1 f3 cCONS f2 creplace f0 f1 f3
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((!r. ((uniq ((APPEND h) r)) ==> (((filter (\d. (~ ((MEM d) h)))) ((APPEND h) r)) = r))) = T)
T c= ! c==> cuniq cAPPEND f0 b0 c= cfilter / c~ cMEM b1 f0 cAPPEND f0 b0 b0 cT
+ |- ((\x. (!xs. (((flatten NIL) = NIL) /\ ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs)))))) x)
T * / ! c/\ c= cflatten cNIL cNIL c= cflatten cCONS b0 b1 cAPPEND b0 cflatten b1 f0
- (((uniq (flatten t)) /\ ((MEM r) t)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) |- ((((uniq (flatten t)) /\ ((MEM r) t)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) = T)
T c==> c==> c/\ cuniq cflatten f0 cMEM f1 f0 c= csizel cflatten creplace f1 cCONS f2 cNIL f0 csizel cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0 c= c==> c/\ cuniq cflatten f0 cMEM f1 f0 c= csizel cflatten creplace f1 cCONS f2 cNIL f0 csizel cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0 cT
+ |- ((((uniq (flatten NIL)) /\ ((MEM r) NIL)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) NIL))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten NIL)))))) /\ (!h. (!t. ((((uniq (flatten t)) /\ ((MEM r) t)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) ==> (((uniq (flatten ((CONS h) t))) /\ ((MEM r) ((CONS h) t))) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) ((CONS h) t)))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten ((CONS h) t)))))))))))
T c/\ c==> c/\ cuniq cflatten cNIL cMEM f0 cNIL c= csizel cflatten creplace f0 cCONS f1 cNIL cNIL csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten cNIL ! ! c==> c==> c/\ cuniq cflatten b1 cMEM f0 b1 c= csizel cflatten creplace f0 cCONS f1 cNIL b1 csizel cAPPEND f1 cfilter / c~ cMEM b2 f0 cflatten b1 c==> c/\ cuniq cflatten cCONS b0 b1 cMEM f0 cCONS b0 b1 c= csizel cflatten creplace f0 cCONS f1 cNIL cCONS b0 b1 csizel cAPPEND f1 cfilter / c~ cMEM b2 f0 cflatten cCONS b0 b1
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347507)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347508)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347509)) /\ (((real_le ((real_add ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))) \/ ((real_le ((real_add ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))))))) = (~ (((int_le (int_of_num (NUMERAL _0))) _10347507) ==> (((int_le (int_of_num (NUMERAL _0))) _10347508) ==> (((int_le (int_of_num (NUMERAL _0))) _10347509) ==> (((int_add _10347507) ((int_add _10347508) _10347509)) = ((int_add _10347507) ((int_add _10347508) _10347509))))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f2 c\/ creal_le creal_add creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2 creal_le creal_add creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c==> cint_le cint_of_num cNUMERAL c_0 f2 c= cint_add f0 cint_add f1 f2 cint_add f0 cint_add f1 f2
+ (((uniq (flatten t)) /\ ((MEM r) t)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) |- ((((uniq h) /\ ((~ ((has (\x. ((MEM x) h))) (flatten t))) /\ (uniq (flatten t)))) /\ ((r = h) \/ ((MEM r) t))) ==> ((sizel (flatten (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) ((cat h) (flatten t)))))))
T c==> c==> c/\ cuniq cflatten f0 cMEM f1 f0 c= csizel cflatten creplace f1 cCONS f2 cNIL f0 csizel cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0 c==> c/\ c/\ cuniq f3 c/\ c~ chas / cMEM b0 f3 cflatten f0 cuniq cflatten f0 c\/ c= f1 f3 cMEM f1 f0 c= csizel cflatten cCOND c= f3 f1 ccat cCONS f2 cNIL f0 cCONS f3 creplace f1 cCONS f2 cNIL f0 c+ csizel f2 csizel cfilter / c~ cMEM b0 f1 ccat f3 cflatten f0
+ (~ ((has (\x. ((MEM x) h))) (flatten t))), (uniq h), (uniq (flatten t)), (((uniq (flatten t)) /\ ((MEM r) t)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))), ((MEM r) t) |- (((MEM r) t) /\ ((sizel (flatten (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) ((cat h) (flatten t)))))))
T c==> c~ chas / cMEM b0 f0 cflatten f1 c==> cuniq f0 c==> cuniq cflatten f1 c==> c==> c/\ cuniq cflatten f1 cMEM f2 f1 c= csizel cflatten creplace f2 cCONS f3 cNIL f1 csizel cAPPEND f3 cfilter / c~ cMEM b0 f2 cflatten f1 c==> cMEM f2 f1 c/\ cMEM f2 f1 c= csizel cflatten cCOND c= f0 f2 ccat cCONS f3 cNIL f1 cCONS f0 creplace f2 cCONS f3 cNIL f1 c+ csizel f3 csizel cfilter / c~ cMEM b0 f2 ccat f0 cflatten f1
- (~ (h = r)) |- (((~ (r = h)) ==> ((r = h) = F)) = ((r = h) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
+ (((real_ge (real_of_int _10347507)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347508)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347509)) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))))) |- F
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- (~ (!A. (A \/ (~ A)))) |- F
T c==> c~ ! c\/ b0 c~ b0 cF
+ |- (~ (~ (((int_le (int_of_num (NUMERAL _0))) _10347507) ==> (((int_le (int_of_num (NUMERAL _0))) _10347508) ==> (((int_le (int_of_num (NUMERAL _0))) _10347509) ==> (((int_add _10347507) ((int_add _10347508) _10347509)) = ((int_add _10347507) ((int_add _10347508) _10347509))))))))
T c~ c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c==> cint_le cint_of_num cNUMERAL c_0 f2 c= cint_add f0 cint_add f1 f2 cint_add f0 cint_add f1 f2
+ (~ (h = r)) |- ((h = r) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
+ (h = r) |- ((((sizel s) + (sizel (flatten t))) = ((sizel s) + ((NUMERAL _0) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) = ((sizel (flatten (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((sizel s) + ((sizel ((filter (\d. (~ ((MEM d) r)))) h)) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))))
T c==> c= f0 f1 c= c= c+ csizel f2 csizel cflatten f3 c+ csizel f2 c+ cNUMERAL c_0 csizel cfilter / c~ cMEM b0 f1 cflatten f3 c= csizel cflatten cCOND c= f0 f1 ccat cCONS f2 cNIL f3 cCONS f0 creplace f1 cCONS f2 cNIL f3 c+ csizel f2 c+ csizel cfilter / c~ cMEM b0 f1 f0 csizel cfilter / c~ cMEM b0 f1 cflatten f3
- |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
+ |- ((~ ((has (\x. ((MEM x) h))) r)) ==> (((sizel h) + ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))) = ((sizel s) + ((sizel ((filter (\d. (~ ((MEM d) r)))) h)) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))))
T c==> c~ chas / cMEM b0 f0 f1 c= c+ csizel f0 c+ csizel f2 csizel cfilter / c~ cMEM b0 f1 cflatten f3 c+ csizel f2 c+ csizel cfilter / c~ cMEM b0 f1 f0 csizel cfilter / c~ cMEM b0 f1 cflatten f3
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!A. ((P A) \/ Q)) = ((!A. (P A)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
- |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) = ((~ (!A. (A \/ (~ A)))) ==> F))
T c= c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) ==> (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)))
T c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
+ |- (((!h. (!r. (!t. (((~ ((has (\x. ((MEM x) h))) (flatten t))) /\ ((MEM r) t)) ==> (~ ((has (\x. ((MEM x) h))) r)))))) ==> ((\h. (!r. (!t. (((~ ((has (\x. ((MEM x) h))) (flatten t))) /\ ((MEM r) t)) ==> (~ ((has (\x. ((MEM x) h))) r)))))) h)) = ((\h. (!r. (!t. (((~ ((has (\x. ((MEM x) h))) (flatten t))) /\ ((MEM r) t)) ==> (~ ((has (\x. ((MEM x) h))) r)))))) h))
T c= c==> ! ! ! c==> c/\ c~ chas / cMEM b3 b0 cflatten b2 cMEM b1 b2 c~ chas / cMEM b3 b0 b1 * / ! ! c==> c/\ c~ chas / cMEM b3 b0 cflatten b2 cMEM b1 b2 c~ chas / cMEM b3 b0 b1 f0 * / ! ! c==> c/\ c~ chas / cMEM b3 b0 cflatten b2 cMEM b1 b2 c~ chas / cMEM b3 b0 b1 f0
- ((~ (!A. (A \/ (~ A)))) ==> F), (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) |- (((~ (!A. (A \/ (~ A)))) ==> F) /\ ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
+ |- ((((int_add (int_of_num (sizel h))) ((int_add (int_of_num (sizel s))) (int_of_num (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) = ((int_add (int_of_num (sizel h))) ((int_add (int_of_num (sizel s))) (int_of_num (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))))) = (((sizel h) + ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))) = ((sizel s) + ((sizel h) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))))
T c= c= cint_add cint_of_num csizel f0 cint_add cint_of_num csizel f1 cint_of_num csizel cfilter / c~ cMEM b0 f2 cflatten f3 cint_add cint_of_num csizel f0 cint_add cint_of_num csizel f1 cint_of_num csizel cfilter / c~ cMEM b0 f2 cflatten f3 c= c+ csizel f0 c+ csizel f1 csizel cfilter / c~ cMEM b0 f2 cflatten f3 c+ csizel f1 c+ csizel f0 csizel cfilter / c~ cMEM b0 f2 cflatten f3
+ |- ((((replace x) ys) NIL) = NIL)
T c= creplace f0 f1 cNIL cNIL
- (((uniq r) /\ (~ ((has (\x. ((MEM x) r))) (flatten t)))) ==> (((filter (\d. (~ ((MEM d) r)))) ((cat r) (flatten t))) = (flatten t))) |- ((((uniq r) /\ (~ ((has (\x. ((MEM x) r))) (flatten t)))) ==> (((filter (\d. (~ ((MEM d) r)))) ((cat r) (flatten t))) = (flatten t))) = T)
T c==> c==> c/\ cuniq f0 c~ chas / cMEM b0 f0 cflatten f1 c= cfilter / c~ cMEM b0 f0 ccat f0 cflatten f1 cflatten f1 c= c==> c/\ cuniq f0 c~ chas / cMEM b0 f0 cflatten f1 c= cfilter / c~ cMEM b0 f0 ccat f0 cflatten f1 cflatten f1 cT
- (~ ((has (\x. ((MEM x) h))) (flatten t))) |- (T = (~ ((has (\x. ((MEM x) h))) (flatten t))))
T c==> c~ chas / cMEM b0 f0 cflatten f1 c= cT c~ chas / cMEM b0 f0 cflatten f1
+ |- ((\s2. (((filter a) ((cat s1) s2)) = ((cat ((filter a) s1)) ((filter a) s2)))) s2)
T * / c= cfilter f0 ccat f1 b0 ccat cfilter f0 f1 cfilter f0 b0 f2
+ |- ((\h. (!r. (!t. (((~ ((has (\x. ((MEM x) h))) (flatten t))) /\ ((MEM r) t)) ==> (~ ((has (\x. ((MEM x) h))) r)))))) h)
T * / ! ! c==> c/\ c~ chas / cMEM b3 b0 cflatten b2 cMEM b1 b2 c~ chas / cMEM b3 b0 b1 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!s. (!ss. ((flatten ((CONS s) ss)) = ((cat s) (flatten ss))))) ==> ((\s. (!ss. ((flatten ((CONS s) ss)) = ((cat s) (flatten ss))))) s)) = ((\s. (!ss. ((flatten ((CONS s) ss)) = ((cat s) (flatten ss))))) s))
T c= c==> ! ! c= cflatten cCONS b0 b1 ccat b0 cflatten b1 * / ! c= cflatten cCONS b0 b1 ccat b0 cflatten b1 f0 * / ! c= cflatten cCONS b0 b1 ccat b0 cflatten b1 f0
+ |- ((!t. (((~ ((has (\x. ((MEM x) h))) (flatten t))) /\ ((MEM r) t)) ==> (~ ((has (\x. ((MEM x) h))) r)))) = T)
T c= ! c==> c/\ c~ chas / cMEM b1 f0 cflatten b0 cMEM f1 b0 c~ chas / cMEM b1 f0 f1 cT
+ |- ((\h. (!r. ((uniq ((APPEND h) r)) ==> (((filter (\d. (~ ((MEM d) h)))) ((APPEND h) r)) = r)))) h)
T * / ! c==> cuniq cAPPEND b0 b1 c= cfilter / c~ cMEM b2 b0 cAPPEND b0 b1 b1 f0
+ (((filter (\d. (~ ((MEM d) h)))) ((cat h) (flatten t))) = (flatten t)) |- ((((filter (\d. (~ ((MEM d) h)))) ((cat h) (flatten t))) = (flatten t)) /\ (((sizel s) + (sizel (flatten t))) = ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) h)))) ((cat h) (flatten t)))))))
T c==> c= cfilter / c~ cMEM b0 f0 ccat f0 cflatten f1 cflatten f1 c/\ c= cfilter / c~ cMEM b0 f0 ccat f0 cflatten f1 cflatten f1 c= c+ csizel f2 csizel cflatten f1 c+ csizel f2 csizel cfilter / c~ cMEM b0 f0 ccat f0 cflatten f1
+ |- (((!h. (!r. ((~ ((has (\x. ((MEM x) h))) r)) ==> (((filter (\d. (~ ((MEM d) h)))) r) = r)))) ==> ((\h. (!r. ((~ ((has (\x. ((MEM x) h))) r)) ==> (((filter (\d. (~ ((MEM d) h)))) r) = r)))) r)) = ((\h. (!r. ((~ ((has (\x. ((MEM x) h))) r)) ==> (((filter (\d. (~ ((MEM d) h)))) r) = r)))) r))
T c= c==> ! ! c==> c~ chas / cMEM b2 b0 b1 c= cfilter / c~ cMEM b2 b0 b1 b1 * / ! c==> c~ chas / cMEM b2 b0 b1 c= cfilter / c~ cMEM b2 b0 b1 b1 f0 * / ! c==> c~ chas / cMEM b2 b0 b1 c= cfilter / c~ cMEM b2 b0 b1 b1 f0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- (((!r'. ((~ ((has (\x. ((MEM x) r))) r')) ==> (((filter (\d. (~ ((MEM d) r)))) r') = r'))) ==> ((\r'. ((~ ((has (\x. ((MEM x) r))) r')) ==> (((filter (\d. (~ ((MEM d) r)))) r') = r'))) h)) = ((\r'. ((~ ((has (\x. ((MEM x) r))) r')) ==> (((filter (\d. (~ ((MEM d) r)))) r') = r'))) h))
T c= c==> ! c==> c~ chas / cMEM b1 f0 b0 c= cfilter / c~ cMEM b1 f0 b0 b0 * / c==> c~ chas / cMEM b1 f0 b0 c= cfilter / c~ cMEM b1 f0 b0 b0 f1 * / c==> c~ chas / cMEM b1 f0 b0 c= cfilter / c~ cMEM b1 f0 b0 b0 f1
+ (~ ((has (\x. ((MEM x) h))) (flatten t))), ((MEM r) t) |- ((((~ ((has (\x. ((MEM x) h))) (flatten t))) /\ ((MEM r) t)) ==> (~ ((has (\x. ((MEM x) h))) r))) ==> (((sizel h) + ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))) = ((sizel s) + ((sizel ((filter (\d. (~ ((MEM d) r)))) h)) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))))
T c==> c~ chas / cMEM b0 f0 cflatten f1 c==> cMEM f2 f1 c==> c==> c/\ c~ chas / cMEM b0 f0 cflatten f1 cMEM f2 f1 c~ chas / cMEM b0 f0 f2 c= c+ csizel f0 c+ csizel f3 csizel cfilter / c~ cMEM b0 f2 cflatten f1 c+ csizel f3 c+ csizel cfilter / c~ cMEM b0 f2 f0 csizel cfilter / c~ cMEM b0 f2 cflatten f1
+ (((uniq (flatten t)) /\ ((MEM r) t)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) |- ((((uniq (flatten t)) /\ ((MEM r) t)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) /\ (((uniq (flatten ((CONS h) t))) /\ ((MEM r) ((CONS h) t))) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) ((CONS h) t)))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten ((CONS h) t))))))))
T c==> c==> c/\ cuniq cflatten f0 cMEM f1 f0 c= csizel cflatten creplace f1 cCONS f2 cNIL f0 csizel cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0 c/\ c==> c/\ cuniq cflatten f0 cMEM f1 f0 c= csizel cflatten creplace f1 cCONS f2 cNIL f0 csizel cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0 c==> c/\ cuniq cflatten cCONS f3 f0 cMEM f1 cCONS f3 f0 c= csizel cflatten creplace f1 cCONS f2 cNIL cCONS f3 f0 csizel cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten cCONS f3 f0
+ |- ((((uniq ((APPEND h) (flatten t))) ==> (((filter (\d. (~ ((MEM d) h)))) ((APPEND h) (flatten t))) = (flatten t))) ==> (((sizel s) + (sizel (flatten t))) = ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) h)))) ((cat h) (flatten t))))))) = (((sizel s) + (sizel (flatten t))) = ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) h)))) ((cat h) (flatten t)))))))
T c= c==> c==> cuniq cAPPEND f0 cflatten f1 c= cfilter / c~ cMEM b0 f0 cAPPEND f0 cflatten f1 cflatten f1 c= c+ csizel f2 csizel cflatten f1 c+ csizel f2 csizel cfilter / c~ cMEM b0 f0 ccat f0 cflatten f1 c= c+ csizel f2 csizel cflatten f1 c+ csizel f2 csizel cfilter / c~ cMEM b0 f0 ccat f0 cflatten f1
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (~ ((has (\x. ((MEM x) h))) (flatten t))), (uniq h), (uniq (flatten t)) |- ((r = h) ==> ((sizel (flatten (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) ((cat h) (flatten t)))))))
T c==> c~ chas / cMEM b0 f0 cflatten f1 c==> cuniq f0 c==> cuniq cflatten f1 c==> c= f2 f0 c= csizel cflatten cCOND c= f0 f2 ccat cCONS f3 cNIL f1 cCONS f0 creplace f2 cCONS f3 cNIL f1 c+ csizel f3 csizel cfilter / c~ cMEM b0 f2 ccat f0 cflatten f1
+ |- (((((uniq (flatten NIL)) /\ ((MEM r) NIL)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) NIL))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten NIL)))))) /\ (!h. (!t. ((((uniq (flatten t)) /\ ((MEM r) t)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) ==> (((uniq (flatten ((CONS h) t))) /\ ((MEM r) ((CONS h) t))) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) ((CONS h) t)))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten ((CONS h) t))))))))))) ==> (!N. (((uniq (flatten N)) /\ ((MEM r) N)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))))
T c==> c/\ c==> c/\ cuniq cflatten cNIL cMEM f0 cNIL c= csizel cflatten creplace f0 cCONS f1 cNIL cNIL csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten cNIL ! ! c==> c==> c/\ cuniq cflatten b1 cMEM f0 b1 c= csizel cflatten creplace f0 cCONS f1 cNIL b1 csizel cAPPEND f1 cfilter / c~ cMEM b2 f0 cflatten b1 c==> c/\ cuniq cflatten cCONS b0 b1 cMEM f0 cCONS b0 b1 c= csizel cflatten creplace f0 cCONS f1 cNIL cCONS b0 b1 csizel cAPPEND f1 cfilter / c~ cMEM b2 f0 cflatten cCONS b0 b1 ! c==> c/\ cuniq cflatten b0 cMEM f0 b0 c= csizel cflatten creplace f0 cCONS f1 cNIL b0 csizel cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten b0
- |- (((!t'. (!e'. (((h = r) = g') ==> ((g' ==> (((cat ((CONS s) NIL)) t) = t')) ==> (((~ g') ==> (((CONS h) (((replace r) ((CONS s) NIL)) t)) = e')) ==> ((((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((h = r) = g') ==> ((g' ==> (((cat ((CONS s) NIL)) t) = t')) ==> (((~ g') ==> (((CONS h) (((replace r) ((CONS s) NIL)) t)) = e')) ==> ((((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((h = r) = g') ==> ((g' ==> (((cat ((CONS s) NIL)) t) = t')) ==> (((~ g') ==> (((CONS h) (((replace r) ((CONS s) NIL)) t)) = e')) ==> ((((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= f0 f1 f2 c==> c==> f2 c= ccat cCONS f3 cNIL f4 b0 c==> c==> c~ f2 c= cCONS f0 creplace f1 cCONS f3 cNIL f4 b1 c= cCOND c= f0 f1 ccat cCONS f3 cNIL f4 cCONS f0 creplace f1 cCONS f3 cNIL f4 cCOND f2 b0 b1 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= ccat cCONS f3 cNIL f4 b0 c==> c==> c~ f2 c= cCONS f0 creplace f1 cCONS f3 cNIL f4 b1 c= cCOND c= f0 f1 ccat cCONS f3 cNIL f4 cCONS f0 creplace f1 cCONS f3 cNIL f4 cCOND f2 b0 b1 f5 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= ccat cCONS f3 cNIL f4 b0 c==> c==> c~ f2 c= cCONS f0 creplace f1 cCONS f3 cNIL f4 b1 c= cCOND c= f0 f1 ccat cCONS f3 cNIL f4 cCONS f0 creplace f1 cCONS f3 cNIL f4 cCOND f2 b0 b1 f5
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
+ |- (T = (((uniq (flatten NIL)) /\ ((MEM r) NIL)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) NIL))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten NIL)))))))
T c= cT c==> c/\ cuniq cflatten cNIL cMEM f0 cNIL c= csizel cflatten creplace f0 cCONS f1 cNIL cNIL csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten cNIL
- (((real_ge (real_of_int _10347507)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347508)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347509)) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge (real_of_int _10347509)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0
+ (~ ((has (\x. ((MEM x) h))) (flatten t))) |- ((((sizel s) + (sizel (flatten t))) = ((sizel s) + ((NUMERAL _0) + (sizel (flatten t))))) = (((sizel s) + (sizel (flatten t))) = ((sizel s) + ((NUMERAL _0) + (sizel ((filter (\d. (~ ((MEM d) h)))) (flatten t)))))))
T c==> c~ chas / cMEM b0 f0 cflatten f1 c= c= c+ csizel f2 csizel cflatten f1 c+ csizel f2 c+ cNUMERAL c_0 csizel cflatten f1 c= c+ csizel f2 csizel cflatten f1 c+ csizel f2 c+ cNUMERAL c_0 csizel cfilter / c~ cMEM b0 f0 cflatten f1
+ (~ ((has (\x. ((MEM x) h))) (flatten t))) |- (((has (\x. ((MEM x) h))) (flatten t)) = F)
T c==> c~ chas / cMEM b0 f0 cflatten f1 c= chas / cMEM b0 f0 cflatten f1 cF
- |- ((((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))) = (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))
T c= cCOND c= f0 f1 ccat cCONS f2 cNIL f3 cCONS f0 creplace f1 cCONS f2 cNIL f3 cCOND c= f0 f1 ccat cCONS f2 cNIL f3 cCONS f0 creplace f1 cCONS f2 cNIL f3
+ |- ((((h = r) \/ (~ (h = r))) ==> ((sizel (flatten (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((sizel s) + ((sizel ((filter (\d. (~ ((MEM d) r)))) h)) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))))) = (((h = r) \/ (~ (h = r))) ==> ((sizel (flatten (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) ((cat h) (flatten t))))))))
T c= c==> c\/ c= f0 f1 c~ c= f0 f1 c= csizel cflatten cCOND c= f0 f1 ccat cCONS f2 cNIL f3 cCONS f0 creplace f1 cCONS f2 cNIL f3 c+ csizel f2 c+ csizel cfilter / c~ cMEM b0 f1 f0 csizel cfilter / c~ cMEM b0 f1 cflatten f3 c==> c\/ c= f0 f1 c~ c= f0 f1 c= csizel cflatten cCOND c= f0 f1 ccat cCONS f2 cNIL f3 cCONS f0 creplace f1 cCONS f2 cNIL f3 c+ csizel f2 csizel cfilter / c~ cMEM b0 f1 ccat f0 cflatten f3
+ |- ((\s1. (!s2. (((filter a) ((cat s1) s2)) = ((cat ((filter a) s1)) ((filter a) s2))))) s1)
T * / ! c= cfilter f0 ccat b0 b1 ccat cfilter f0 b0 cfilter f0 b1 f1
+ (~ ((has (\x. ((MEM x) h))) (flatten t))) |- (((sizel s) + (sizel (flatten t))) = ((sizel s) + ((NUMERAL _0) + (sizel ((filter (\d. (~ ((MEM d) h)))) (flatten t))))))
T c==> c~ chas / cMEM b0 f0 cflatten f1 c= c+ csizel f2 csizel cflatten f1 c+ csizel f2 c+ cNUMERAL c_0 csizel cfilter / c~ cMEM b0 f0 cflatten f1
+ (~ ((has (\x. ((MEM x) h))) (flatten t))), (uniq h), (uniq (flatten t)), (((uniq (flatten t)) /\ ((MEM r) t)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) |- (((MEM r) t) ==> ((sizel (flatten (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) ((cat h) (flatten t)))))))
T c==> c~ chas / cMEM b0 f0 cflatten f1 c==> cuniq f0 c==> cuniq cflatten f1 c==> c==> c/\ cuniq cflatten f1 cMEM f2 f1 c= csizel cflatten creplace f2 cCONS f3 cNIL f1 csizel cAPPEND f3 cfilter / c~ cMEM b0 f2 cflatten f1 c==> cMEM f2 f1 c= csizel cflatten cCOND c= f0 f2 ccat cCONS f3 cNIL f1 cCONS f0 creplace f2 cCONS f3 cNIL f1 c+ csizel f3 csizel cfilter / c~ cMEM b0 f2 ccat f0 cflatten f1
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- ((~ ((has (\x. ((MEM x) r))) h)) ==> (((filter (\d. (~ ((MEM d) r)))) h) = h)) |- (((~ ((has (\x. ((MEM x) r))) h)) ==> (((filter (\d. (~ ((MEM d) r)))) h) = h)) = T)
T c==> c==> c~ chas / cMEM b0 f0 f1 c= cfilter / c~ cMEM b0 f0 f1 f1 c= c==> c~ chas / cMEM b0 f0 f1 c= cfilter / c~ cMEM b0 f0 f1 f1 cT
+ (~ ((has (\x. ((MEM x) h))) (flatten t))), (uniq h) |- ((((uniq h) /\ (~ ((has (\x. ((MEM x) h))) (flatten t)))) ==> (((filter (\d. (~ ((MEM d) h)))) ((cat h) (flatten t))) = (flatten t))) ==> (((sizel s) + (sizel (flatten t))) = ((sizel s) + ((NUMERAL _0) + (sizel ((filter (\d. (~ ((MEM d) h)))) (flatten t)))))))
T c==> c~ chas / cMEM b0 f0 cflatten f1 c==> cuniq f0 c==> c==> c/\ cuniq f0 c~ chas / cMEM b0 f0 cflatten f1 c= cfilter / c~ cMEM b0 f0 ccat f0 cflatten f1 cflatten f1 c= c+ csizel f2 csizel cflatten f1 c+ csizel f2 c+ cNUMERAL c_0 csizel cfilter / c~ cMEM b0 f0 cflatten f1
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num (sizel s))) ==> (((int_le (int_of_num (NUMERAL _0))) (int_of_num (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))) ==> (((int_add (int_of_num (sizel h))) ((int_add (int_of_num (sizel s))) (int_of_num (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) = ((int_add (int_of_num (sizel h))) ((int_add (int_of_num (sizel s))) (int_of_num (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))))))) = (((int_le (int_of_num (NUMERAL _0))) (int_of_num (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))) ==> (((int_add (int_of_num (sizel h))) ((int_add (int_of_num (sizel s))) (int_of_num (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) = ((int_add (int_of_num (sizel h))) ((int_add (int_of_num (sizel s))) (int_of_num (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num csizel f0 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num csizel cfilter / c~ cMEM b0 f1 cflatten f2 c= cint_add cint_of_num csizel f3 cint_add cint_of_num csizel f0 cint_of_num csizel cfilter / c~ cMEM b0 f1 cflatten f2 cint_add cint_of_num csizel f3 cint_add cint_of_num csizel f0 cint_of_num csizel cfilter / c~ cMEM b0 f1 cflatten f2 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num csizel cfilter / c~ cMEM b0 f1 cflatten f2 c= cint_add cint_of_num csizel f3 cint_add cint_of_num csizel f0 cint_of_num csizel cfilter / c~ cMEM b0 f1 cflatten f2 cint_add cint_of_num csizel f3 cint_add cint_of_num csizel f0 cint_of_num csizel cfilter / c~ cMEM b0 f1 cflatten f2
+ (((filter (\d. (~ ((MEM d) r)))) h) = h) |- ((((filter (\d. (~ ((MEM d) r)))) h) = h) /\ (((sizel h) + ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))) = ((sizel s) + ((sizel ((filter (\d. (~ ((MEM d) r)))) h)) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))))
T c==> c= cfilter / c~ cMEM b0 f0 f1 f1 c/\ c= cfilter / c~ cMEM b0 f0 f1 f1 c= c+ csizel f1 c+ csizel f2 csizel cfilter / c~ cMEM b0 f0 cflatten f3 c+ csizel f2 c+ csizel cfilter / c~ cMEM b0 f0 f1 csizel cfilter / c~ cMEM b0 f0 cflatten f3
- |- (((!g'. (!t'. (!e'. (((h = r) = g') ==> ((g' ==> (((cat ((CONS s) NIL)) t) = t')) ==> (((~ g') ==> (((CONS h) (((replace r) ((CONS s) NIL)) t)) = e')) ==> ((((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((h = r) = g') ==> ((g' ==> (((cat ((CONS s) NIL)) t) = t')) ==> (((~ g') ==> (((CONS h) (((replace r) ((CONS s) NIL)) t)) = e')) ==> ((((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((h = r) = g') ==> ((g' ==> (((cat ((CONS s) NIL)) t) = t')) ==> (((~ g') ==> (((CONS h) (((replace r) ((CONS s) NIL)) t)) = e')) ==> ((((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= ccat cCONS f2 cNIL f3 b1 c==> c==> c~ b0 c= cCONS f0 creplace f1 cCONS f2 cNIL f3 b2 c= cCOND c= f0 f1 ccat cCONS f2 cNIL f3 cCONS f0 creplace f1 cCONS f2 cNIL f3 cCOND b0 b1 b2 * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= ccat cCONS f2 cNIL f3 b1 c==> c==> c~ b0 c= cCONS f0 creplace f1 cCONS f2 cNIL f3 b2 c= cCOND c= f0 f1 ccat cCONS f2 cNIL f3 cCONS f0 creplace f1 cCONS f2 cNIL f3 cCOND b0 b1 b2 f4 * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= ccat cCONS f2 cNIL f3 b1 c==> c==> c~ b0 c= cCONS f0 creplace f1 cCONS f2 cNIL f3 b2 c= cCOND c= f0 f1 ccat cCONS f2 cNIL f3 cCONS f0 creplace f1 cCONS f2 cNIL f3 cCOND b0 b1 b2 f4
- (~ (!A. (A \/ (~ A)))) |- ((~ (!A. (A \/ (~ A)))) /\ F)
T c==> c~ ! c\/ b0 c~ b0 c/\ c~ ! c\/ b0 c~ b0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) /\ (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)))
T c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!ss2. ((flatten ((cat ss1) ss2)) = ((cat (flatten ss1)) (flatten ss2)))) ==> ((\ss2. ((flatten ((cat ss1) ss2)) = ((cat (flatten ss1)) (flatten ss2)))) ss2)) = ((\ss2. ((flatten ((cat ss1) ss2)) = ((cat (flatten ss1)) (flatten ss2)))) ss2))
T c= c==> ! c= cflatten ccat f0 b0 ccat cflatten f0 cflatten b0 * / c= cflatten ccat f0 b0 ccat cflatten f0 cflatten b0 f1 * / c= cflatten ccat f0 b0 ccat cflatten f0 cflatten b0 f1
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347507)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347508)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347509)) /\ (((real_le ((real_add ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))) \/ ((real_le ((real_add ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10347507)) ((real_add (real_of_int _10347508)) (real_of_int _10347509)))))))))) |- (((real_ge (real_of_int _10347507)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347508)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347509)) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f2 c\/ creal_le creal_add creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2 creal_le creal_add creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_int f2 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((int_add (int_of_num (sizel s))) (int_of_num (sizel (flatten t)))) = ((int_add (int_of_num (sizel s))) (int_of_num (sizel (flatten t))))) = (((sizel s) + (sizel (flatten t))) = ((sizel s) + ((NUMERAL _0) + (sizel (flatten t))))))
T c= c= cint_add cint_of_num csizel f0 cint_of_num csizel cflatten f1 cint_add cint_of_num csizel f0 cint_of_num csizel cflatten f1 c= c+ csizel f0 csizel cflatten f1 c+ csizel f0 c+ cNUMERAL c_0 csizel cflatten f1
- |- (((!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) ==> ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0)) = ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0))
T c= c==> ! c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1 * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1
+ (((real_ge (real_of_int _10347507)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347508)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347509)) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))))) |- (((real_ge (real_of_int _10347509)) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (!h. (!t. ((((uniq (flatten t)) /\ ((MEM r) t)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) ==> (((uniq (flatten ((CONS h) t))) /\ ((MEM r) ((CONS h) t))) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) ((CONS h) t)))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten ((CONS h) t))))))))))
T c==> c==> c/\ cuniq cflatten f0 cMEM f1 f0 c= csizel cflatten creplace f1 cCONS f2 cNIL f0 csizel cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0 c==> c/\ cuniq cflatten cCONS f3 f0 cMEM f1 cCONS f3 f0 c= csizel cflatten creplace f1 cCONS f2 cNIL cCONS f3 f0 csizel cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten cCONS f3 f0
+ ((uniq h) /\ ((~ ((has (\x. ((MEM x) h))) (flatten t))) /\ (uniq (flatten t)))), (((uniq (flatten t)) /\ ((MEM r) t)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))), ((r = h) \/ ((MEM r) t)) |- ((sizel (flatten (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) ((cat h) (flatten t))))))
T c==> c/\ cuniq f0 c/\ c~ chas / cMEM b0 f0 cflatten f1 cuniq cflatten f1 c==> c==> c/\ cuniq cflatten f1 cMEM f2 f1 c= csizel cflatten creplace f2 cCONS f3 cNIL f1 csizel cAPPEND f3 cfilter / c~ cMEM b0 f2 cflatten f1 c==> c\/ c= f2 f0 cMEM f2 f1 c= csizel cflatten cCOND c= f0 f2 ccat cCONS f3 cNIL f1 cCONS f0 creplace f2 cCONS f3 cNIL f1 c+ csizel f3 csizel cfilter / c~ cMEM b0 f2 ccat f0 cflatten f1
+ (~ ((has (\x. ((MEM x) h))) (flatten t))), (((filter (\d. (~ ((MEM d) h)))) ((cat h) (flatten t))) = (flatten t)) |- ((((filter (\d. (~ ((MEM d) h)))) ((cat h) (flatten t))) = (flatten t)) /\ (((sizel s) + (sizel (flatten t))) = ((sizel s) + ((NUMERAL _0) + (sizel ((filter (\d. (~ ((MEM d) h)))) (flatten t)))))))
T c==> c~ chas / cMEM b0 f0 cflatten f1 c==> c= cfilter / c~ cMEM b0 f0 ccat f0 cflatten f1 cflatten f1 c/\ c= cfilter / c~ cMEM b0 f0 ccat f0 cflatten f1 cflatten f1 c= c+ csizel f2 csizel cflatten f1 c+ csizel f2 c+ cNUMERAL c_0 csizel cfilter / c~ cMEM b0 f0 cflatten f1
+ |- (((!t. (((~ ((has (\x. ((MEM x) h))) (flatten t))) /\ ((MEM r) t)) ==> (~ ((has (\x. ((MEM x) h))) r)))) ==> ((\t. (((~ ((has (\x. ((MEM x) h))) (flatten t))) /\ ((MEM r) t)) ==> (~ ((has (\x. ((MEM x) h))) r)))) t)) = ((\t. (((~ ((has (\x. ((MEM x) h))) (flatten t))) /\ ((MEM r) t)) ==> (~ ((has (\x. ((MEM x) h))) r)))) t))
T c= c==> ! c==> c/\ c~ chas / cMEM b1 f0 cflatten b0 cMEM f1 b0 c~ chas / cMEM b1 f0 f1 * / c==> c/\ c~ chas / cMEM b1 f0 cflatten b0 cMEM f1 b0 c~ chas / cMEM b1 f0 f1 f2 * / c==> c/\ c~ chas / cMEM b1 f0 cflatten b0 cMEM f1 b0 c~ chas / cMEM b1 f0 f1 f2
- |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
+ |- (((!A. (A \/ (~ A))) ==> ((\A. (A \/ (~ A))) (h = r))) = ((\A. (A \/ (~ A))) (h = r)))
T c= c==> ! c\/ b0 c~ b0 * / c\/ b0 c~ b0 c= f0 f1 * / c\/ b0 c~ b0 c= f0 f1
+ |- ((\ss2. ((flatten ((cat ss1) ss2)) = ((cat (flatten ss1)) (flatten ss2)))) ss2)
T * / c= cflatten ccat f0 b0 ccat cflatten f0 cflatten b0 f1
- |- (T = (((sizel h) + ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))) = ((sizel s) + ((sizel h) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))))
T c= cT c= c+ csizel f0 c+ csizel f1 csizel cfilter / c~ cMEM b0 f2 cflatten f3 c+ csizel f1 c+ csizel f0 csizel cfilter / c~ cMEM b0 f2 cflatten f3
+ (~ ((has (\x. ((MEM x) h))) (flatten t))), (uniq h), (uniq (flatten t)) |- (((((filter (\d. (~ ((MEM d) h)))) ((cat h) (flatten t))) = (flatten t)) ==> (((sizel s) + (sizel (flatten t))) = ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) h)))) ((cat h) (flatten t))))))) = (((uniq ((APPEND h) (flatten t))) ==> (((filter (\d. (~ ((MEM d) h)))) ((APPEND h) (flatten t))) = (flatten t))) ==> (((sizel s) + (sizel (flatten t))) = ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) h)))) ((cat h) (flatten t))))))))
T c==> c~ chas / cMEM b0 f0 cflatten f1 c==> cuniq f0 c==> cuniq cflatten f1 c= c==> c= cfilter / c~ cMEM b0 f0 ccat f0 cflatten f1 cflatten f1 c= c+ csizel f2 csizel cflatten f1 c+ csizel f2 csizel cfilter / c~ cMEM b0 f0 ccat f0 cflatten f1 c==> c==> cuniq cAPPEND f0 cflatten f1 c= cfilter / c~ cMEM b0 f0 cAPPEND f0 cflatten f1 cflatten f1 c= c+ csizel f2 csizel cflatten f1 c+ csizel f2 csizel cfilter / c~ cMEM b0 f0 ccat f0 cflatten f1
- |- (((h = r) ==> (((cat ((CONS s) NIL)) t) = t')) ==> (((~ (h = r)) ==> (((CONS h) (((replace r) ((CONS s) NIL)) t)) = e')) ==> ((((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))) = (((COND (h = r)) t') e'))))
T c==> c==> c= f0 f1 c= ccat cCONS f2 cNIL f3 f4 c==> c==> c~ c= f0 f1 c= cCONS f0 creplace f1 cCONS f2 cNIL f3 f5 c= cCOND c= f0 f1 ccat cCONS f2 cNIL f3 cCONS f0 creplace f1 cCONS f2 cNIL f3 cCOND c= f0 f1 f4 f5
+ (~ ((has (\x. ((MEM x) h))) (flatten t))) |- ((((filter (\d. (~ ((MEM d) h)))) ((cat h) (flatten t))) = (flatten t)) ==> (((sizel s) + (sizel (flatten t))) = ((sizel s) + ((NUMERAL _0) + (sizel ((filter (\d. (~ ((MEM d) h)))) (flatten t)))))))
T c==> c~ chas / cMEM b0 f0 cflatten f1 c==> c= cfilter / c~ cMEM b0 f0 ccat f0 cflatten f1 cflatten f1 c= c+ csizel f2 csizel cflatten f1 c+ csizel f2 c+ cNUMERAL c_0 csizel cfilter / c~ cMEM b0 f0 cflatten f1
- |- ((uniq ((CONS x) s')) = ((~ ((MEM x) s')) /\ (uniq s')))
T c= cuniq cCONS f0 f1 c/\ c~ cMEM f0 f1 cuniq f1
+ |- ((int_le (int_of_num (NUMERAL _0))) (int_of_num (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num csizel cfilter / c~ cMEM b0 f0 cflatten f1
- |- ((((sizel s) + (sizel (flatten t))) = ((sizel s) + ((NUMERAL _0) + (sizel (flatten t))))) = T)
T c= c= c+ csizel f0 csizel cflatten f1 c+ csizel f0 c+ cNUMERAL c_0 csizel cflatten f1 cT
+ (~ ((has (\x. ((MEM x) h))) (flatten t))), (uniq h), (uniq (flatten t)), (h = r) |- ((h = r) /\ ((sizel (flatten (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((sizel s) + ((sizel ((filter (\d. (~ ((MEM d) r)))) h)) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))))
T c==> c~ chas / cMEM b0 f0 cflatten f1 c==> cuniq f0 c==> cuniq cflatten f1 c==> c= f0 f2 c/\ c= f0 f2 c= csizel cflatten cCOND c= f0 f2 ccat cCONS f3 cNIL f1 cCONS f0 creplace f2 cCONS f3 cNIL f1 c+ csizel f3 c+ csizel cfilter / c~ cMEM b0 f2 f0 csizel cfilter / c~ cMEM b0 f2 cflatten f1
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- |- (((h = r) = g') ==> ((g' ==> (((cat ((CONS s) NIL)) t) = t')) ==> (((~ g') ==> (((CONS h) (((replace r) ((CONS s) NIL)) t)) = e')) ==> ((((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))) = (((COND g') t') e')))))
T c==> c= c= f0 f1 f2 c==> c==> f2 c= ccat cCONS f3 cNIL f4 f5 c==> c==> c~ f2 c= cCONS f0 creplace f1 cCONS f3 cNIL f4 f6 c= cCOND c= f0 f1 ccat cCONS f3 cNIL f4 cCONS f0 creplace f1 cCONS f3 cNIL f4 cCOND f2 f5 f6
+ (((uniq h) /\ ((~ ((has (\x. ((MEM x) h))) (flatten t))) /\ (uniq (flatten t)))) /\ ((r = h) \/ ((MEM r) t))), (((uniq (flatten t)) /\ ((MEM r) t)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) |- ((sizel (flatten (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) ((cat h) (flatten t))))))
T c==> c/\ c/\ cuniq f0 c/\ c~ chas / cMEM b0 f0 cflatten f1 cuniq cflatten f1 c\/ c= f2 f0 cMEM f2 f1 c==> c==> c/\ cuniq cflatten f1 cMEM f2 f1 c= csizel cflatten creplace f2 cCONS f3 cNIL f1 csizel cAPPEND f3 cfilter / c~ cMEM b0 f2 cflatten f1 c= csizel cflatten cCOND c= f0 f2 ccat cCONS f3 cNIL f1 cCONS f0 creplace f2 cCONS f3 cNIL f1 c+ csizel f3 csizel cfilter / c~ cMEM b0 f2 ccat f0 cflatten f1
- (h = r) |- ((h = r) /\ (((cat ((CONS s) NIL)) t) = ((cat ((CONS s) NIL)) t)))
T c==> c= f0 f1 c/\ c= f0 f1 c= ccat cCONS f2 cNIL f3 ccat cCONS f2 cNIL f3
- (((real_ge (real_of_int _10347503)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347504)) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))) |- ((real_ge (real_of_int _10347504)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
- |- (((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) ==> ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s)) = ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s))
T c= c==> ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0 * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\t'. (!e'. (((h = r) = g') ==> ((g' ==> (((cat ((CONS s) NIL)) t) = t')) ==> (((~ g') ==> (((CONS h) (((replace r) ((CONS s) NIL)) t)) = e')) ==> ((((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= ccat cCONS f3 cNIL f4 b0 c==> c==> c~ f2 c= cCONS f0 creplace f1 cCONS f3 cNIL f4 b1 c= cCOND c= f0 f1 ccat cCONS f3 cNIL f4 cCONS f0 creplace f1 cCONS f3 cNIL f4 cCOND f2 b0 b1 f5
- ((~ (!A. (A \/ (~ A)))) ==> F), (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) /\ ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- ((T \/ t) = T)
T c= c\/ cT f0 cT
- |- ((!A. (P \/ (Q A))) = (P \/ (!A. (Q A))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- (T = (((sizel s) + (sizel (flatten t))) = ((sizel s) + ((NUMERAL _0) + (sizel (flatten t))))))
T c= cT c= c+ csizel f0 csizel cflatten f1 c+ csizel f0 c+ cNUMERAL c_0 csizel cflatten f1
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))) = T)
T c= c==> c~ c= cNIL f0 c= cLAST f0 clast f1 f0 cT
- |- ((!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e')))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 cT
- (uniq ((APPEND h) r)) |- ((uniq ((APPEND h) r)) /\ (((filter (\d. (~ ((MEM d) h)))) ((APPEND h) r)) = r))
T c==> cuniq cAPPEND f0 f1 c/\ cuniq cAPPEND f0 f1 c= cfilter / c~ cMEM b0 f0 cAPPEND f0 f1 f1
- |- (((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) ==> (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F))) = (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)))
T c= c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- ((LENGTH = sizel) /\ ((FILTER = filter) /\ ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all))))))
T c/\ c= part cLENGTH part csizel c/\ c= part cFILTER part cfilter c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
- |- ((~ (h = r)) ==> (((CONS h) (((replace r) ((CONS s) NIL)) t)) = ((CONS h) (((replace r) ((CONS s) NIL)) t))))
T c==> c~ c= f0 f1 c= cCONS f0 creplace f1 cCONS f2 cNIL f3 cCONS f0 creplace f1 cCONS f2 cNIL f3
- (~ ((has (\x. ((MEM x) h))) (flatten t))), (uniq h), (h = r), (((uniq r) /\ (~ ((has (\x. ((MEM x) r))) (flatten t)))) ==> (((filter (\d. (~ ((MEM d) r)))) ((cat r) (flatten t))) = (flatten t))) |- ((((uniq r) /\ (~ ((has (\x. ((MEM x) r))) (flatten t)))) ==> (((filter (\d. (~ ((MEM d) r)))) ((cat r) (flatten t))) = (flatten t))) /\ (((sizel s) + (sizel (flatten t))) = ((sizel s) + ((NUMERAL _0) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))))
T c==> c~ chas / cMEM b0 f0 cflatten f1 c==> cuniq f0 c==> c= f0 f2 c==> c==> c/\ cuniq f2 c~ chas / cMEM b0 f2 cflatten f1 c= cfilter / c~ cMEM b0 f2 ccat f2 cflatten f1 cflatten f1 c/\ c==> c/\ cuniq f2 c~ chas / cMEM b0 f2 cflatten f1 c= cfilter / c~ cMEM b0 f2 ccat f2 cflatten f1 cflatten f1 c= c+ csizel f3 csizel cflatten f1 c+ csizel f3 c+ cNUMERAL c_0 csizel cfilter / c~ cMEM b0 f2 cflatten f1
- (~ (h = r)) |- (~ (r = h))
T c==> c~ c= f0 f1 c~ c= f1 f0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((~ (!A. (A \/ (~ A)))) ==> F) |- (((~ (!A. (A \/ (~ A)))) ==> F) /\ ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- ((\e'. (((h = r) = g') ==> ((g' ==> (((cat ((CONS s) NIL)) t) = t')) ==> (((~ g') ==> (((CONS h) (((replace r) ((CONS s) NIL)) t)) = e')) ==> ((((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))) = (((COND g') t') e')))))) e')
T * / c==> c= c= f0 f1 f2 c==> c==> f2 c= ccat cCONS f3 cNIL f4 f5 c==> c==> c~ f2 c= cCONS f0 creplace f1 cCONS f3 cNIL f4 b0 c= cCOND c= f0 f1 ccat cCONS f3 cNIL f4 cCONS f0 creplace f1 cCONS f3 cNIL f4 cCOND f2 f5 b0 f6
- (~ ((has (\x. ((MEM x) h))) r)) |- ((~ ((has (\x. ((MEM x) h))) r)) /\ (((filter (\d. (~ ((MEM d) h)))) r) = r))
T c==> c~ chas / cMEM b0 f0 f1 c/\ c~ chas / cMEM b0 f0 f1 c= cfilter / c~ cMEM b0 f0 f1 f1
- (((real_ge (real_of_int _10347507)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347508)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347509)) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge (real_of_int _10347508)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
- |- (((!e'. (((h = r) = g') ==> ((g' ==> (((cat ((CONS s) NIL)) t) = t')) ==> (((~ g') ==> (((CONS h) (((replace r) ((CONS s) NIL)) t)) = e')) ==> ((((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))) = (((COND g') t') e')))))) ==> ((\e'. (((h = r) = g') ==> ((g' ==> (((cat ((CONS s) NIL)) t) = t')) ==> (((~ g') ==> (((CONS h) (((replace r) ((CONS s) NIL)) t)) = e')) ==> ((((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))) = (((COND g') t') e')))))) e')) = ((\e'. (((h = r) = g') ==> ((g' ==> (((cat ((CONS s) NIL)) t) = t')) ==> (((~ g') ==> (((CONS h) (((replace r) ((CONS s) NIL)) t)) = e')) ==> ((((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= f0 f1 f2 c==> c==> f2 c= ccat cCONS f3 cNIL f4 f5 c==> c==> c~ f2 c= cCONS f0 creplace f1 cCONS f3 cNIL f4 b0 c= cCOND c= f0 f1 ccat cCONS f3 cNIL f4 cCONS f0 creplace f1 cCONS f3 cNIL f4 cCOND f2 f5 b0 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= ccat cCONS f3 cNIL f4 f5 c==> c==> c~ f2 c= cCONS f0 creplace f1 cCONS f3 cNIL f4 b0 c= cCOND c= f0 f1 ccat cCONS f3 cNIL f4 cCONS f0 creplace f1 cCONS f3 cNIL f4 cCOND f2 f5 b0 f6 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= ccat cCONS f3 cNIL f4 f5 c==> c==> c~ f2 c= cCONS f0 creplace f1 cCONS f3 cNIL f4 b0 c= cCOND c= f0 f1 ccat cCONS f3 cNIL f4 cCONS f0 creplace f1 cCONS f3 cNIL f4 cCOND f2 f5 b0 f6
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (h = r)) |- ((r = h) = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
- (~ ((has (\x. ((MEM x) h))) (flatten t))), (uniq h), (uniq (flatten t)), (((uniq (flatten t)) /\ ((MEM r) t)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) |- ((uniq (flatten t)) /\ (((MEM r) t) ==> ((sizel (flatten (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) ((cat h) (flatten t))))))))
T c==> c~ chas / cMEM b0 f0 cflatten f1 c==> cuniq f0 c==> cuniq cflatten f1 c==> c==> c/\ cuniq cflatten f1 cMEM f2 f1 c= csizel cflatten creplace f2 cCONS f3 cNIL f1 csizel cAPPEND f3 cfilter / c~ cMEM b0 f2 cflatten f1 c/\ cuniq cflatten f1 c==> cMEM f2 f1 c= csizel cflatten cCOND c= f0 f2 ccat cCONS f3 cNIL f1 cCONS f0 creplace f2 cCONS f3 cNIL f1 c+ csizel f3 csizel cfilter / c~ cMEM b0 f2 ccat f0 cflatten f1
- |- ((F \/ t) = t)
T c= c\/ cF f0 f0
- ((uniq (flatten t)) /\ ((MEM r) t)), (((uniq (flatten t)) /\ ((MEM r) t)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) |- ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))
T c==> c/\ cuniq cflatten f0 cMEM f1 f0 c==> c==> c/\ cuniq cflatten f0 cMEM f1 f0 c= csizel cflatten creplace f1 cCONS f2 cNIL f0 csizel cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0 c= csizel cflatten creplace f1 cCONS f2 cNIL f0 csizel cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0
- |- ((((~ (h = r)) ==> (((CONS h) (((replace r) ((CONS s) NIL)) t)) = ((CONS h) (((replace r) ((CONS s) NIL)) t)))) ==> ((((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))) = (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))) = (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t)))))
T c= c==> c==> c~ c= f0 f1 c= cCONS f0 creplace f1 cCONS f2 cNIL f3 cCONS f0 creplace f1 cCONS f2 cNIL f3 c= cCOND c= f0 f1 ccat cCONS f2 cNIL f3 cCONS f0 creplace f1 cCONS f2 cNIL f3 cCOND c= f0 f1 ccat cCONS f2 cNIL f3 cCONS f0 creplace f1 cCONS f2 cNIL f3 c= cCOND c= f0 f1 ccat cCONS f2 cNIL f3 cCONS f0 creplace f1 cCONS f2 cNIL f3 cCOND c= f0 f1 ccat cCONS f2 cNIL f3 cCONS f0 creplace f1 cCONS f2 cNIL f3
- |- ((\g'. (!t'. (!e'. (((h = r) = g') ==> ((g' ==> (((cat ((CONS s) NIL)) t) = t')) ==> (((~ g') ==> (((CONS h) (((replace r) ((CONS s) NIL)) t)) = e')) ==> ((((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= ccat cCONS f2 cNIL f3 b1 c==> c==> c~ b0 c= cCONS f0 creplace f1 cCONS f2 cNIL f3 b2 c= cCOND c= f0 f1 ccat cCONS f2 cNIL f3 cCONS f0 creplace f1 cCONS f2 cNIL f3 cCOND b0 b1 b2 f4
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!A. (P A)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((APPEND = cat) /\ (ALL = all))
T c/\ c= part cAPPEND part ccat c= part cALL part call
- |- (FILTER = filter)
T c= part cFILTER part cfilter
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (~ (h = r)) |- ((~ (h = r)) /\ (((CONS h) (((replace r) ((CONS s) NIL)) t)) = ((CONS h) (((replace r) ((CONS s) NIL)) t))))
T c==> c~ c= f0 f1 c/\ c~ c= f0 f1 c= cCONS f0 creplace f1 cCONS f2 cNIL f3 cCONS f0 creplace f1 cCONS f2 cNIL f3
- (~ ((has (\x. ((MEM x) h))) (flatten t))), (uniq h), (h = r) |- ((h = r) /\ ((((uniq r) /\ (~ ((has (\x. ((MEM x) r))) (flatten t)))) ==> (((filter (\d. (~ ((MEM d) r)))) ((cat r) (flatten t))) = (flatten t))) ==> (((sizel s) + (sizel (flatten t))) = ((sizel s) + ((NUMERAL _0) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))))))
T c==> c~ chas / cMEM b0 f0 cflatten f1 c==> cuniq f0 c==> c= f0 f2 c/\ c= f0 f2 c==> c==> c/\ cuniq f2 c~ chas / cMEM b0 f2 cflatten f1 c= cfilter / c~ cMEM b0 f2 ccat f2 cflatten f1 cflatten f1 c= c+ csizel f3 csizel cflatten f1 c+ csizel f3 c+ cNUMERAL c_0 csizel cfilter / c~ cMEM b0 f2 cflatten f1
- (~ ((has (\x. ((MEM x) h))) (flatten t))), (uniq h), (((uniq (flatten t)) /\ ((MEM r) t)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) |- ((uniq (flatten t)) ==> (((MEM r) t) ==> ((sizel (flatten (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) ((cat h) (flatten t))))))))
T c==> c~ chas / cMEM b0 f0 cflatten f1 c==> cuniq f0 c==> c==> c/\ cuniq cflatten f1 cMEM f2 f1 c= csizel cflatten creplace f2 cCONS f3 cNIL f1 csizel cAPPEND f3 cfilter / c~ cMEM b0 f2 cflatten f1 c==> cuniq cflatten f1 c==> cMEM f2 f1 c= csizel cflatten cCOND c= f0 f2 ccat cCONS f3 cNIL f1 cCONS f0 creplace f2 cCONS f3 cNIL f1 c+ csizel f3 csizel cfilter / c~ cMEM b0 f2 ccat f0 cflatten f1
- (uniq h), (((uniq (flatten t)) /\ ((MEM r) t)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) |- ((uniq h) /\ ((~ ((has (\x. ((MEM x) h))) (flatten t))) ==> ((uniq (flatten t)) ==> (((MEM r) t) ==> ((sizel (flatten (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) ((cat h) (flatten t))))))))))
T c==> cuniq f0 c==> c==> c/\ cuniq cflatten f1 cMEM f2 f1 c= csizel cflatten creplace f2 cCONS f3 cNIL f1 csizel cAPPEND f3 cfilter / c~ cMEM b0 f2 cflatten f1 c/\ cuniq f0 c==> c~ chas / cMEM b0 f0 cflatten f1 c==> cuniq cflatten f1 c==> cMEM f2 f1 c= csizel cflatten cCOND c= f0 f2 ccat cCONS f3 cNIL f1 cCONS f0 creplace f2 cCONS f3 cNIL f1 c+ csizel f3 csizel cfilter / c~ cMEM b0 f2 ccat f0 cflatten f1
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- (((!r. ((uniq ((APPEND h) r)) ==> (((filter (\d. (~ ((MEM d) h)))) ((APPEND h) r)) = r))) ==> ((\r. ((uniq ((APPEND h) r)) ==> (((filter (\d. (~ ((MEM d) h)))) ((APPEND h) r)) = r))) r)) = ((\r. ((uniq ((APPEND h) r)) ==> (((filter (\d. (~ ((MEM d) h)))) ((APPEND h) r)) = r))) r))
T c= c==> ! c==> cuniq cAPPEND f0 b0 c= cfilter / c~ cMEM b1 f0 cAPPEND f0 b0 b0 * / c==> cuniq cAPPEND f0 b0 c= cfilter / c~ cMEM b1 f0 cAPPEND f0 b0 b0 f1 * / c==> cuniq cAPPEND f0 b0 c= cfilter / c~ cMEM b1 f0 cAPPEND f0 b0 b0 f1
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((has (\x. ((MEM x) h))) r)), ((~ ((has (\x. ((MEM x) r))) h)) ==> (((filter (\d. (~ ((MEM d) r)))) h) = h)) |- (((~ ((has (\x. ((MEM x) r))) h)) ==> (((filter (\d. (~ ((MEM d) r)))) h) = h)) /\ (((sizel h) + ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t))))) = ((sizel s) + ((sizel ((filter (\d. (~ ((MEM d) r)))) h)) + (sizel ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))))
T c==> c~ chas / cMEM b0 f0 f1 c==> c==> c~ chas / cMEM b0 f1 f0 c= cfilter / c~ cMEM b0 f1 f0 f0 c/\ c==> c~ chas / cMEM b0 f1 f0 c= cfilter / c~ cMEM b0 f1 f0 f0 c= c+ csizel f0 c+ csizel f2 csizel cfilter / c~ cMEM b0 f1 cflatten f3 c+ csizel f2 c+ csizel cfilter / c~ cMEM b0 f1 f0 csizel cfilter / c~ cMEM b0 f1 cflatten f3
- (~ ((has (\x. ((MEM x) h))) (flatten t))), (uniq h), (((uniq (flatten t)) /\ ((MEM r) t)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) t))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten t)))))) |- ((~ ((has (\x. ((MEM x) h))) (flatten t))) /\ ((uniq (flatten t)) ==> (((MEM r) t) ==> ((sizel (flatten (((COND (h = r)) ((cat ((CONS s) NIL)) t)) ((CONS h) (((replace r) ((CONS s) NIL)) t))))) = ((sizel s) + (sizel ((filter (\d. (~ ((MEM d) r)))) ((cat h) (flatten t)))))))))
T c==> c~ chas / cMEM b0 f0 cflatten f1 c==> cuniq f0 c==> c==> c/\ cuniq cflatten f1 cMEM f2 f1 c= csizel cflatten creplace f2 cCONS f3 cNIL f1 csizel cAPPEND f3 cfilter / c~ cMEM b0 f2 cflatten f1 c/\ c~ chas / cMEM b0 f0 cflatten f1 c==> cuniq cflatten f1 c==> cMEM f2 f1 c= csizel cflatten cCOND c= f0 f2 ccat cCONS f3 cNIL f1 cCONS f0 creplace f2 cCONS f3 cNIL f1 c+ csizel f3 csizel cfilter / c~ cMEM b0 f2 ccat f0 cflatten f1
- |- (((~ (!A. (A \/ (~ A)))) ==> F) = (!A. (A \/ (~ A))))
T c= c==> c~ ! c\/ b0 c~ b0 cF ! c\/ b0 c~ b0
- |- ((h = r) ==> (((cat ((CONS s) NIL)) t) = ((cat ((CONS s) NIL)) t)))
T c==> c= f0 f1 c= ccat cCONS f2 cNIL f3 ccat cCONS f2 cNIL f3
- ((~ (!A. (A \/ (~ A)))) ==> F) |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) ==> ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))) = T)
T c= ! ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c==> c==> c~ f1 c= f3 b1 c= cCOND f0 f2 f3 cCOND f1 b0 b1 cT
- |- ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s)
T * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0
