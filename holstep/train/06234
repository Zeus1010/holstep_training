N Ocbicby.psort_5
C |- ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))))))))))))))))))
T c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D FST
A |- (!x. (!y. ((FST (x , y)) = x)))
T c= cFST c, f0 f1 f0
D SND
A |- (!x. (!y. ((SND (x , y)) = y)))
T c= cSND c, f0 f1 f1
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D LE_REFL
A |- (!n. (n <= n))
T c<= f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D LE_ADD
A |- (!m. (!n. (m <= (m + n))))
T c<= f0 c+ f0 f1
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D MOD_LT
A |- (!m. (!n. ((m < n) ==> ((m MOD n) = m))))
T c==> c< f0 f1 c= cMOD f0 f1 f0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D Oxlzlez.MOD_REFL_ALT
A |- ((~ (m = (NUMERAL _0))) ==> ((m MOD m) = (NUMERAL _0)))
T c==> c~ c= f0 cNUMERAL c_0 c= cMOD f0 f0 cNUMERAL c_0
D Appendix.psort
A |- (!u. (!k. (((psort k) u) = ((LET (\i. (LET_END ((LET (\j. (LET_END (((COND (i <= j)) (i , j)) (j , i))))) ((SND u) MOD k))))) ((FST u) MOD k)))))
T c= cpsort f0 f1 cLET / cLET_END cLET / cLET_END cCOND c<= b0 b1 c, b0 b1 c, b1 b0 cMOD cSND f1 f0 cMOD cFST f1 f0
- |- (((NUMERAL _0) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = F)
T c= c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF
- |- ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))))))
T c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= cMOD cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((t /\ T) = t)
T c= c/\ f0 cT f0
- |- ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))))))))
T c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= cMOD cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!k. (((psort k) u) = ((LET (\i. (LET_END ((LET (\j. (LET_END (((COND (i <= j)) (i , j)) (j , i))))) ((SND u) MOD k))))) ((FST u) MOD k)))) ==> ((\k. (((psort k) u) = ((LET (\i. (LET_END ((LET (\j. (LET_END (((COND (i <= j)) (i , j)) (j , i))))) ((SND u) MOD k))))) ((FST u) MOD k)))) k)) = ((\k. (((psort k) u) = ((LET (\i. (LET_END ((LET (\j. (LET_END (((COND (i <= j)) (i , j)) (j , i))))) ((SND u) MOD k))))) ((FST u) MOD k)))) k))
T c= c==> ! c= cpsort b0 f0 cLET / cLET_END cLET / cLET_END cCOND c<= b1 b2 c, b1 b2 c, b2 b1 cMOD cSND f0 b0 cMOD cFST f0 b0 * / c= cpsort b0 f0 cLET / cLET_END cLET / cLET_END cCOND c<= b1 b2 c, b1 b2 c, b2 b1 cMOD cSND f0 b0 cMOD cFST f0 b0 f1 * / c= cpsort b0 f0 cLET / cLET_END cLET / cLET_END cCOND c<= b1 b2 c, b1 b2 c, b2 b1 cMOD cSND f0 b0 cMOD cFST f0 b0 f1
- |- ((((~ (~ F)) = F) ==> (F ==> (~ (~ F)))) = (F ==> (~ (~ F))))
T c= c==> c= c~ c~ cF cF c==> cF c~ c~ cF c==> cF c~ c~ cF
+ |- (((NUMERAL (BIT1 _0)) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = T)
T c= c< cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cT
+ |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
+ |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
- |- (((!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))) ==> ((\y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))) y)) = ((\y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))) y))
T c= c==> ! ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 * / ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 f1 * / ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 f1
+ |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) = T)
T c= c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cT
+ |- (((NUMERAL (BIT0 (BIT1 _0))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = T)
T c= c< cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cT
- |- ((((~ (~ F)) = F) ==> ((~ (~ F)) ==> F)) = ((~ (~ F)) ==> F))
T c= c==> c= c~ c~ cF cF c==> c~ c~ cF cF c==> c~ c~ cF cF
- |- (((!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))) ==> ((\a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))) a)) = ((\a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))) a))
T c= c==> ! ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 * / ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 f2 * / ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 f2
+ |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
+ |- (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT1 _0)))) = F)
T c= c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cF
- ((NUMERAL _0) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) |- ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))
T c==> c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- (((((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))
T c= c< c+ c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c< cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
+ |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
+ |- (((NUMERAL (BIT1 _0)) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT1 _0))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) = (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT0 (BIT1 _0))))))))))
T c/\ c< cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c< cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c< cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c+ c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c+ c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (T = ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))
T c= cT c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
- |- ((\m. (!n. (!p. ((((m * n) + p) MOD n) = (p MOD n))))) m)
T * / ! ! c= cMOD c+ c* b0 b1 b2 b1 cMOD b2 b1 f0
+ |- (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 (BIT1 _0)))))
T c= c+ cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0
- |- (F ==> (~ (~ F)))
T c==> cF c~ c~ cF
+ |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT1 _0)))) = F)
T c= c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cF
+ |- (((!m. (!n. ((m < n) ==> ((m MOD n) = m)))) ==> ((\m. (!n. ((m < n) ==> ((m MOD n) = m)))) m)) = ((\m. (!n. ((m < n) ==> ((m MOD n) = m)))) m))
T c= c==> ! ! c==> c< b0 b1 c= cMOD b0 b1 b0 * / ! c==> c< b0 b1 c= cMOD b0 b1 b0 f0 * / ! c==> c< b0 b1 c= cMOD b0 b1 b0 f0
- |- ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) = ((((NUMERAL _0) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0))))))))))))
T c= c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= cMOD cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((\p. ((((m * n) + p) MOD n) = (p MOD n))) p)
T * / c= cMOD c+ c* f0 f1 b0 f1 cMOD b0 f1 f2
+ |- (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = T)
T c= c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cT
- |- (((!x. (!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))))) ==> ((\x. (!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))))) x)) = ((\x. (!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))))) x))
T c= c==> ! ! ! ! c= c= c, b0 b1 c, b2 b3 c/\ c= b0 b2 c= b1 b3 * / ! ! ! c= c= c, b0 b1 c, b2 b3 c/\ c= b0 b2 c= b1 b3 f0 * / ! ! ! c= c= c, b0 b1 c, b2 b3 c/\ c= b0 b2 c= b1 b3 f0
+ |- (((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) ==> (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0))) = (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)))
T c= c==> c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- ((~ (~ F)) ==> F)
T c==> c~ c~ cF cF
- |- ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0))))))))
T c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= cMOD cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((((NUMERAL (BIT0 (BIT1 _0))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0))))) = (((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))))
T c= c==> c< cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = T)
T c= c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cT
+ |- (((NUMERAL _0) <= (NUMERAL (BIT1 (BIT1 _0)))) = T)
T c= c<= cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 cT
- |- (((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) ==> (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0)) = F)) = (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0)) = F))
T c= c==> c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 cF c= c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 cF
+ |- (((NUMERAL _0) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = T)
T c= c<= cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cT
+ |- ((((NUMERAL (BIT1 _0)) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> (((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0)))) = (((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))))
T c= c==> c< cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
- (m < n) |- ((m < n) /\ ((m MOD n) = m))
T c==> c< f0 f1 c/\ c< f0 f1 c= cMOD f0 f1 f0
+ |- (((!f. (!x. (((LET f) x) = (f x)))) ==> ((\f. (!x. (((LET f) x) = (f x)))) f)) = ((\f. (!x. (((LET f) x) = (f x)))) f))
T c= c==> ! ! c= cLET b0 b1 * b0 b1 * / ! c= cLET b0 b1 * b0 b1 f0 * / ! c= cLET b0 b1 * b0 b1 f0
+ |- (((NUMERAL _0) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cT
+ |- ((NUMERAL (BIT1 _0)) < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))
T c< cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
- |- ((\a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))) a)
T * / ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 f2
+ |- ((NUMERAL (BIT0 (BIT1 _0))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))
T c< cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
+ |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = T)
T c= c< cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cT
+ |- (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT1 _0))) = F)
T c= c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cF
- |- (T = ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))
T c= cT c< cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
- |- (T = (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)))
T c= cT c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
+ |- (((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- |- (~ ((NUMERAL _0) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))
T c~ c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
+ |- (((!n. ((m < n) ==> ((m MOD n) = m))) ==> ((\n. ((m < n) ==> ((m MOD n) = m))) n)) = ((\n. ((m < n) ==> ((m MOD n) = m))) n))
T c= c==> ! c==> c< f0 b0 c= cMOD f0 b0 f0 * / c==> c< f0 b0 c= cMOD f0 b0 f0 f1 * / c==> c< f0 b0 c= cMOD f0 b0 f0 f1
+ |- (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 cF
+ |- (((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0)))
T c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT1 (BIT1 _0)))) = T)
T c= c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cT
+ |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) = T)
T c= c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cT
+ |- ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))
T c< cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
+ |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT1 _0)))) = F)
T c= c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF
- |- ((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) = (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT0 (BIT1 _0)))))
T c= cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c+ c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((NUMERAL _0) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0))
T c= cMOD cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
+ |- (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))
T c= c+ cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- (((!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))) ==> ((\b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))) b)) = ((\b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))) b))
T c= c==> ! c= c= c, f0 f1 c, f2 b0 c/\ c= f0 f2 c= f1 b0 * / c= c= c, f0 f1 c, f2 b0 c/\ c= f0 f2 c= f1 b0 f3 * / c= c= c, f0 f1 c, f2 b0 c/\ c= f0 f2 c= f1 b0 f3
+ |- ((((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> (((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0))))) = (((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))))
T c= c==> c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) = (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT0 (BIT1 _0))))))
T c/\ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c+ c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c+ c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((\b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))) b)
T * / c= c= c, f0 f1 c, f2 b0 c/\ c= f0 f2 c= f1 b0 f3
- |- ((\y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))) y)
T * / ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 f1
+ |- ((((COND F) t1) t2) = t2)
T c= cCOND cF f0 f1 f1
+ |- (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = T)
T c= c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cT
+ |- ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))
T c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
+ |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) = (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT0 (BIT1 _0)))))))
T c/\ c< cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c+ c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c+ c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0)))
T c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c+ c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- (F = (~ T))
T c= cF c~ cT
+ |- (((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) = (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT0 (BIT1 _0))))))))
T c/\ c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c< cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c+ c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c+ c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((~ (~ F)) ==> F) ==> (~ F)) = (~ F))
T c= c==> c==> c~ c~ cF cF c~ cF c~ cF
+ |- (((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0))))
T c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0))))))
T c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= cMOD cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((NUMERAL _0) < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))
T c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
- |- ((~ T) = F)
T c= c~ cT cF
- |- ((((m * n) + p) MOD n) = (p MOD n))
T c= cMOD c+ c* f0 f1 f2 f1 cMOD f2 f1
+ |- (((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = T)
T c= c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cT
+ |- (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT1 _0))) = F)
T c= c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cF
+ |- ((\u. (!k. (((psort k) u) = ((LET (\i. (LET_END ((LET (\j. (LET_END (((COND (i <= j)) (i , j)) (j , i))))) ((SND u) MOD k))))) ((FST u) MOD k))))) u)
T * / ! c= cpsort b1 b0 cLET / cLET_END cLET / cLET_END cCOND c<= b2 b3 c, b2 b3 c, b3 b2 cMOD cSND b0 b1 cMOD cFST b0 b1 f0
+ |- (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0))
T c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- (((!p. ((((m * n) + p) MOD n) = (p MOD n))) ==> ((\p. ((((m * n) + p) MOD n) = (p MOD n))) p)) = ((\p. ((((m * n) + p) MOD n) = (p MOD n))) p))
T c= c==> ! c= cMOD c+ c* f0 f1 b0 f1 cMOD b0 f1 * / c= cMOD c+ c* f0 f1 b0 f1 cMOD b0 f1 f2 * / c= cMOD c+ c* f0 f1 b0 f1 cMOD b0 f1 f2
+ |- (((NUMERAL _0) <= (NUMERAL (BIT1 _0))) = T)
T c= c<= cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (T = ((NUMERAL _0) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))
T c= cT c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
+ |- ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c= c==> c< cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ |- ((~ F) = T)
T c= c~ cF cT
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- |- ((\x. (!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))))) x)
T * / ! ! ! c= c= c, b0 b1 c, b2 b3 c/\ c= b0 b2 c= b1 b3 f0
- |- (((\j. (f j)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))))
T c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= cMOD cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((!m. (!n. (!p. ((((m * n) + p) MOD n) = (p MOD n))))) ==> ((\m. (!n. (!p. ((((m * n) + p) MOD n) = (p MOD n))))) m)) = ((\m. (!n. (!p. ((((m * n) + p) MOD n) = (p MOD n))))) m))
T c= c==> ! ! ! c= cMOD c+ c* b0 b1 b2 b1 cMOD b2 b1 * / ! ! c= cMOD c+ c* b0 b1 b2 b1 cMOD b2 b1 f0 * / ! ! c= cMOD c+ c* b0 b1 b2 b1 cMOD b2 b1 f0
- |- (((~ ((NUMERAL _0) = (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> (((NUMERAL _0) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = F)) = (((NUMERAL _0) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = F))
T c= c==> c~ c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF c= c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF
- |- ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0))))))))))
T c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= cMOD cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((!n. (!p. ((((m * n) + p) MOD n) = (p MOD n)))) ==> ((\n. (!p. ((((m * n) + p) MOD n) = (p MOD n)))) n)) = ((\n. (!p. ((((m * n) + p) MOD n) = (p MOD n)))) n))
T c= c==> ! ! c= cMOD c+ c* f0 b0 b1 b0 cMOD b1 b0 * / ! c= cMOD c+ c* f0 b0 b1 b0 cMOD b1 b0 f1 * / ! c= cMOD c+ c* f0 b0 b1 b0 cMOD b1 b0 f1
- |- (((x , y) = (a , b)) = ((x = a) /\ (y = b)))
T c= c= c, f0 f1 c, f2 f3 c/\ c= f0 f2 c= f1 f3
- |- (((((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT0 (BIT1 _0)))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))
T c= c< c+ c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c< cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
- ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0)) |- ((NUMERAL _0) = (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))
T c==> c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
- |- (T = ((NUMERAL (BIT1 _0)) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))
T c= cT c< cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
- |- (T = ((NUMERAL (BIT0 (BIT1 _0))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))
T c= cT c< cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
- |- (~ (~ T))
T c~ c~ cT
- |- ((\n. (!p. ((((m * n) + p) MOD n) = (p MOD n)))) n)
T * / ! c= cMOD c+ c* f0 b0 b1 b0 cMOD b1 b0 f1
- (~ (m = (NUMERAL _0))) |- ((~ (m = (NUMERAL _0))) /\ ((m MOD m) = (NUMERAL _0)))
T c==> c~ c= f0 cNUMERAL c_0 c/\ c~ c= f0 cNUMERAL c_0 c= cMOD f0 f0 cNUMERAL c_0
