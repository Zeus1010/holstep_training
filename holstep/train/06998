N PATH_IMAGE_SUBPATH_GEN
C |- (!u. (!v. (!g. ((path_image (((subpath u) v) g)) = ((IMAGE g) (closed_segment ((CONS (u , v)) NIL)))))))
T c= * part cpath_image * * * part csubpath f0 f1 f2 * * part cIMAGE f2 * part cclosed_segment cCONS c, f0 f1 cNIL
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D IMAGE_o
A |- (!f. (!g. (!s. (((IMAGE (f o g)) s) = ((IMAGE f) ((IMAGE g) s))))))
T c= * * part cIMAGE * * part co f0 f1 f2 * * part cIMAGE f0 * * part cIMAGE f1 f2
D path_image
A |- (!g. ((path_image g) = ((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))
T c= * part cpath_image f0 * * part cIMAGE f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
D subpath
A |- (!g. (!v. (!u. ((((subpath u) v) g) = (\x. (g ((vector_add u) ((% (drop ((vector_sub v) u))) x))))))))
T c= * * * part csubpath f0 f1 f2 / * f2 cvector_add f0 c% cdrop cvector_sub f1 f0 b0
D SUBPATH_SCALING_LEMMA
A |- (!u. (!v. (((IMAGE (\x. ((vector_add u) ((% (drop ((vector_sub v) u))) x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = (closed_segment ((CONS (u , v)) NIL)))))
T c= * * part cIMAGE / cvector_add f0 c% cdrop cvector_sub f1 f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_segment cCONS c, f0 f1 cNIL
+ |- ((((IMAGE (\x. (g ((vector_add u) ((% (drop ((vector_sub v) u))) x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = ((IMAGE g) (closed_segment ((CONS (u , v)) NIL)))) = ((path_image (((subpath u) v) g)) = ((IMAGE g) (closed_segment ((CONS (u , v)) NIL)))))
T c= c= * * part cIMAGE / * f0 cvector_add f1 c% cdrop cvector_sub f2 f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, f1 f2 cNIL c= * part cpath_image * * * part csubpath f1 f2 f0 * * part cIMAGE f0 * part cclosed_segment cCONS c, f1 f2 cNIL
+ |- (((!g. (!v. (!u. ((((subpath u) v) g) = (\x. (g ((vector_add u) ((% (drop ((vector_sub v) u))) x)))))))) ==> ((\g. (!v. (!u. ((((subpath u) v) g) = (\x. (g ((vector_add u) ((% (drop ((vector_sub v) u))) x)))))))) g)) = ((\g. (!v. (!u. ((((subpath u) v) g) = (\x. (g ((vector_add u) ((% (drop ((vector_sub v) u))) x)))))))) g))
T c= c==> ! ! ! c= * * * part csubpath b2 b1 b0 / * b0 cvector_add b2 c% cdrop cvector_sub b1 b2 b3 * / ! ! c= * * * part csubpath b2 b1 b0 / * b0 cvector_add b2 c% cdrop cvector_sub b1 b2 b3 f0 * / ! ! c= * * * part csubpath b2 b1 b0 / * b0 cvector_add b2 c% cdrop cvector_sub b1 b2 b3 f0
- |- ((x = x) = T)
T c= c= f0 f0 cT
- |- (T = (((IMAGE (g o (\x. ((vector_add u) ((% (drop ((vector_sub v) u))) x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = ((IMAGE g) (closed_segment ((CONS (u , v)) NIL)))))
T c= cT c= * * part cIMAGE * * part co f0 / cvector_add f1 c% cdrop cvector_sub f2 f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, f1 f2 cNIL
