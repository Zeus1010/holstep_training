N RE_CASN_BOUNDS
C |- (!z. (((real_lt (real_neg pi)) (Re (casn z))) /\ ((real_le (Re (casn z))) pi)))
T c/\ creal_lt creal_neg cpi cRe ccasn f0 creal_le cRe ccasn f0 cpi
D TRUTH
A |- T
T cT
D CLOG_WORKS
A |- (!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> (((cexp (clog z)) = z) /\ (((real_lt (real_neg pi)) (Im (clog z))) /\ ((real_le (Im (clog z))) pi)))))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccexp cclog f0 f0 c/\ creal_lt creal_neg cpi cIm cclog f0 creal_le cIm cclog f0 cpi
D CASN_BODY_LEMMA
A |- (!z. (~ (((vector_add ((complex_mul ii) z)) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL _0))))))
T c~ c= cvector_add ccomplex_mul cii f0 ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
D RE_CASN
A |- (!z. ((Re (casn z)) = (Im (clog ((vector_add ((complex_mul ii) z)) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c= cRe ccasn f0 cIm cclog cvector_add ccomplex_mul cii f0 ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0
+ (~ (z = (Cx (real_of_num (NUMERAL _0))))) |- ((~ (z = (Cx (real_of_num (NUMERAL _0))))) /\ (((real_le (Im (clog z))) pi) = T))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= creal_le cIm cclog f0 cpi cT
- ((Cx (real_of_num (NUMERAL _0))) = ((vector_add ((complex_mul ii) z)) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))) |- (((vector_add ((complex_mul ii) z)) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c= cCx creal_of_num cNUMERAL c_0 cvector_add ccomplex_mul cii f0 ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 c= cvector_add ccomplex_mul cii f0 ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ |- (((!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> (((cexp (clog z)) = z) /\ (((real_lt (real_neg pi)) (Im (clog z))) /\ ((real_le (Im (clog z))) pi))))) ==> ((\z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> (((cexp (clog z)) = z) /\ (((real_lt (real_neg pi)) (Im (clog z))) /\ ((real_le (Im (clog z))) pi))))) z)) = ((\z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> (((cexp (clog z)) = z) /\ (((real_lt (real_neg pi)) (Im (clog z))) /\ ((real_le (Im (clog z))) pi))))) z))
T c= c==> ! c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccexp cclog b0 b0 c/\ creal_lt creal_neg cpi cIm cclog b0 creal_le cIm cclog b0 cpi * / c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccexp cclog b0 b0 c/\ creal_lt creal_neg cpi cIm cclog b0 creal_le cIm cclog b0 cpi f0 * / c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccexp cclog b0 b0 c/\ creal_lt creal_neg cpi cIm cclog b0 creal_le cIm cclog b0 cpi f0
+ (~ (z = (Cx (real_of_num (NUMERAL _0))))) |- ((real_le (Im (clog z))) pi)
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 creal_le cIm cclog f0 cpi
+ |- ((!z. t) = t)
T c= ! f0 f0
+ |- ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> (((real_le (Im (clog z))) pi) = T))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= creal_le cIm cclog f0 cpi cT
- |- ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((cexp (clog z)) = z))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccexp cclog f0 f0
+ |- (T = (!z. (((real_lt (real_neg pi)) (Im (clog ((vector_add ((complex_mul ii) z)) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))))) /\ ((real_le (Im (clog ((vector_add ((complex_mul ii) z)) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))))) pi))))
T c= cT ! c/\ creal_lt creal_neg cpi cIm cclog cvector_add ccomplex_mul cii b0 ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_le cIm cclog cvector_add ccomplex_mul cii b0 ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow b0 cNUMERAL cBIT0 cBIT1 c_0 cpi
+ (~ (z = (Cx (real_of_num (NUMERAL _0))))) |- ((real_lt (real_neg pi)) (Im (clog z)))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 creal_lt creal_neg cpi cIm cclog f0
+ |- ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> (((real_lt (real_neg pi)) (Im (clog z))) = T))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= creal_lt creal_neg cpi cIm cclog f0 cT
+ |- (((real_le (Im (clog ((vector_add ((complex_mul ii) z)) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))))) pi) = T)
T c= creal_le cIm cclog cvector_add ccomplex_mul cii f0 ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cpi cT
+ (~ (z = (Cx (real_of_num (NUMERAL _0))))) |- (((real_lt (real_neg pi)) (Im (clog z))) /\ ((real_le (Im (clog z))) pi))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ creal_lt creal_neg cpi cIm cclog f0 creal_le cIm cclog f0 cpi
+ |- (((~ (((vector_add ((complex_mul ii) z)) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL _0))))) ==> (((real_lt (real_neg pi)) (Im (clog ((vector_add ((complex_mul ii) z)) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))))) = T)) = (((real_lt (real_neg pi)) (Im (clog ((vector_add ((complex_mul ii) z)) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))))) = T))
T c= c==> c~ c= cvector_add ccomplex_mul cii f0 ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= creal_lt creal_neg cpi cIm cclog cvector_add ccomplex_mul cii f0 ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cT c= creal_lt creal_neg cpi cIm cclog cvector_add ccomplex_mul cii f0 ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cT
- (((vector_add ((complex_mul ii) z)) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL _0)))) |- ((Cx (real_of_num (NUMERAL _0))) = ((vector_add ((complex_mul ii) z)) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c= cvector_add ccomplex_mul cii f0 ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= cCx creal_of_num cNUMERAL c_0 cvector_add ccomplex_mul cii f0 ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\z. ((Re (casn z)) = (Im (clog ((vector_add ((complex_mul ii) z)) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))))))) z)
T * / c= cRe ccasn b0 cIm cclog cvector_add ccomplex_mul cii b0 ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow b0 cNUMERAL cBIT0 cBIT1 c_0 f0
- |- (T = (~ (((vector_add ((complex_mul ii) z)) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL _0))))))
T c= cT c~ c= cvector_add ccomplex_mul cii f0 ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- |- (((Cx (real_of_num (NUMERAL _0))) = ((vector_add ((complex_mul ii) z)) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))) = F)
T c= c= cCx creal_of_num cNUMERAL c_0 cvector_add ccomplex_mul cii f0 ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cF
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (~ ((Cx (real_of_num (NUMERAL _0))) = ((vector_add ((complex_mul ii) z)) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))))
T c~ c= cCx creal_of_num cNUMERAL c_0 cvector_add ccomplex_mul cii f0 ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((((vector_add ((complex_mul ii) z)) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL _0)))) = F)
T c= c= cvector_add ccomplex_mul cii f0 ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 cF
- |- ((~ F) = T)
T c= c~ cF cT
- (~ (z = (Cx (real_of_num (NUMERAL _0))))) |- ((~ (z = (Cx (real_of_num (NUMERAL _0))))) /\ ((cexp (clog z)) = z))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccexp cclog f0 f0
- |- (((~ ((Cx (real_of_num (NUMERAL _0))) = ((vector_add ((complex_mul ii) z)) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (((Cx (real_of_num (NUMERAL _0))) = ((vector_add ((complex_mul ii) z)) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))) = F)) = (((Cx (real_of_num (NUMERAL _0))) = ((vector_add ((complex_mul ii) z)) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))) = F))
T c= c==> c~ c= cCx creal_of_num cNUMERAL c_0 cvector_add ccomplex_mul cii f0 ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= cCx creal_of_num cNUMERAL c_0 cvector_add ccomplex_mul cii f0 ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cF c= c= cCx creal_of_num cNUMERAL c_0 cvector_add ccomplex_mul cii f0 ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cF
- |- (((~ (((vector_add ((complex_mul ii) z)) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL _0))))) ==> ((((vector_add ((complex_mul ii) z)) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL _0)))) = F)) = ((((vector_add ((complex_mul ii) z)) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL _0)))) = F))
T c= c==> c~ c= cvector_add ccomplex_mul cii f0 ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= c= cvector_add ccomplex_mul cii f0 ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 cF c= c= cvector_add ccomplex_mul cii f0 ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 cF
