N Planarity.CRAMER_LEMMA1
C |- (!A. (!x. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> ((det (lambdai. (lambdaj. (((COND (j = k)) (((matrix_vector_mul A) x) $ i)) ((A $ i) $ j))))) = ((real_mul (x $ k)) (det A)))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= cdet clambda / clambda / cCOND c= b1 f0 c$ cmatrix_vector_mul f1 f2 b0 c$ c$ f1 b0 b1 creal_mul c$ f2 f0 cdet f1
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D IN_NUMSEG
A |- (!m. (!n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n))))))
T c= cIN f0 * * part c.. f1 f2 c/\ c<= f1 f0 c<= f0 f2
D SUM_EQ
A |- (!f. (!g. (!s. ((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((sum s) f) = ((sum s) g))))))
T c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= csum f0 f1 csum f0 f2
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D VECTOR_MUL_COMPONENT
A |- (!c. (!x. (!i. ((((% c) x) $ i) = ((real_mul c) (x $ i))))))
T c= c$ c% f0 f1 f2 creal_mul f0 c$ f1 f2
D COND_COMPONENT
A |- (((((COND b) x) y) $ i) = (((COND b) (x $ i)) (y $ i)))
T c= c$ cCOND f0 f1 f2 f3 cCOND f0 c$ f1 f3 c$ f2 f3
D VSUM_COMPONENT
A |- (!s. (!f. (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vsum s) f) $ i) = ((sum s) (\x. ((f x) $ i))))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvsum f1 f2 f0 csum f1 / c$ * f2 b0 f0
D VSUM_EQ
A |- (!f. (!g. (!s. ((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((vsum s) f) = ((vsum s) g))))))
T c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= cvsum f0 f1 cvsum f0 f2
D transp
A |- (!A. ((transp A) = (lambdai. (lambdaj. ((A $ j) $ i)))))
T c= ctransp f0 clambda / clambda / c$ c$ f0 b1 b0
D row
A |- (!A. (!i. (((row i) A) = (lambdaj. ((A $ i) $ j)))))
T c= crow f0 f1 clambda / c$ c$ f1 f0 b0
D column
A |- (!A. (!j. (((column j) A) = (lambdai. ((A $ i) $ j)))))
T c= ccolumn f0 f1 clambda / c$ c$ f1 b0 f0
D MATRIX_MUL_VSUM
A |- (!A. (!x. (((matrix_vector_mul A) x) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))))))
T c= cmatrix_vector_mul f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f1 b0 ccolumn b0 f0
D DET_TRANSP
A |- (!A. ((det (transp A)) = (det A)))
T c= cdet ctransp f0 cdet f0
D CRAMER_LEMMA_TRANSP
A |- (!A. (!x. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> ((det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) A))))) ((row i) A)))) = ((real_mul (x $ k)) (det A))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= cdet clambda / cCOND c= b0 f0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f1 b1 crow b1 f2 crow b0 f2 creal_mul c$ f1 f0 cdet f2
- (x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) |- ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) /\ (((% (x $ x)) (lambdai'. ((A $ i') $ x))) = ((% (x $ x)) (lambdai'. ((A $ i') $ x)))))
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c% c$ f1 f0 clambda / c$ c$ f2 b0 f0 c% c$ f1 f0 clambda / c$ c$ f2 b0 f0
+ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) /\ ((det (lambdai. (lambdaj. (((COND (j = k)) (((matrix_vector_mul A) x) $ i)) ((A $ i) $ j))))) = ((real_mul (x $ k)) (det A))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= cdet clambda / clambda / cCOND c= b1 f0 c$ cmatrix_vector_mul f1 f2 b0 c$ c$ f1 b0 b1 creal_mul c$ f2 f0 cdet f1
+ (((real_mul (x $ k)) (det A)) = (det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))))) |- (((det (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) = (det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))))) = ((det (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) = ((real_mul (x $ k)) (det A))))
T c==> c= creal_mul c$ f0 f1 cdet f2 cdet clambda / cCOND c= b0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 crow b1 ctransp f2 crow b0 ctransp f2 c= c= cdet clambda / clambda / cCOND c= b1 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b2 ccolumn b2 f2 b0 c$ c$ f2 b0 b1 cdet clambda / cCOND c= b0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 crow b1 ctransp f2 crow b0 ctransp f2 c= cdet clambda / clambda / cCOND c= b1 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b2 ccolumn b2 f2 b0 c$ c$ f2 b0 b1 creal_mul c$ f0 f1 cdet f2
- |- ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((% (x $ i)) (lambdai'. ((A $ i') $ i))) = (g i)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)
T * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c% c$ f0 b1 clambda / c$ c$ f1 b2 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 clambda / c$ c$ f1 b2 b1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2
+ |- ((j = k) ==> ((((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ _3020408) = (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ _3020408)))
T c==> c= f0 f1 c= c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 ccolumn b0 f3 f4 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ c$ f3 b1 b0 f4
- |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((% (x $ i)) ((row i) (transp A))) = (g i)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c% c$ f0 b0 crow b0 ctransp f1 * f2 b0 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 crow b0 ctransp f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f2
- |- (((!g. ((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> (((real_mul (x $ x)) ((A $ i') $ x)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) ==> ((\g. ((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> (((real_mul (x $ x)) ((A $ i') $ x)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)) = ((\g. ((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> (((real_mul (x $ x)) ((A $ i') $ x)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_mul c$ f0 b1 c$ c$ f1 f2 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b1 c$ c$ f1 f2 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_mul c$ f0 b1 c$ c$ f1 f2 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b1 c$ c$ f1 f2 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f3 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_mul c$ f0 b1 c$ c$ f1 f2 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b1 c$ c$ f1 f2 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f3
+ |- (((!j. (((column j) A) = (lambdai. ((A $ i) $ j)))) ==> ((\j. (((column j) A) = (lambdai. ((A $ i) $ j)))) j)) = ((\j. (((column j) A) = (lambdai. ((A $ i) $ j)))) j))
T c= c==> ! c= ccolumn b0 f0 clambda / c$ c$ f0 b1 b0 * / c= ccolumn b0 f0 clambda / c$ c$ f0 b1 b0 f1 * / c= ccolumn b0 f0 clambda / c$ c$ f0 b1 b0 f1
- |- (((i = k) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = t')) ==> (((~ (i = k)) ==> ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))) = (((COND (i = k)) t') e'))))
T c==> c==> c= f0 f1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 f4 c==> c==> c~ c= f0 f1 c= clambda / c$ clambda / c$ c$ f3 b1 f0 b0 f5 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 clambda / c$ clambda / c$ c$ f3 b1 f0 b0 cCOND c= f0 f1 f4 f5
+ |- (((!A. (!j. (((column j) A) = (lambdai. ((A $ i) $ j))))) ==> ((\A. (!j. (((column j) A) = (lambdai. ((A $ i) $ j))))) A)) = ((\A. (!j. (((column j) A) = (lambdai. ((A $ i) $ j))))) A))
T c= c==> ! ! c= ccolumn b1 b0 clambda / c$ c$ b0 b2 b1 * / ! c= ccolumn b1 b0 clambda / c$ c$ b0 b2 b1 f0 * / ! c= ccolumn b1 b0 clambda / c$ c$ b0 b2 b1 f0
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. (((\i. ((% (x $ i)) ((column i) A))) x) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f1 b0 ccolumn b0 f2 f0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ * / c% c$ f1 b1 ccolumn b1 f2 b0 f0
+ |- (!g. ((!x. (((a <= x) /\ (x <= b)) ==> ((f x) = (g x)))) ==> (((vsum (a .. b)) (\x. (f x))) = ((vsum (a .. b)) g))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= cvsum * * part c.. f0 f1 / * f2 b0 cvsum * * part c.. f0 f1 f3
- |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((% (x $ i)) (lambdai'. ((A $ i') $ i))) = ((% (x $ i)) (lambdai'. ((A $ i') $ i)))))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))))) = (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i)))))))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c% c$ f0 b0 clambda / c$ c$ f1 b1 b0 c% c$ f0 b0 clambda / c$ c$ f1 b1 b0 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ c$ f1 b1 b0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ c$ f1 b1 b0 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ c$ f1 b1 b0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ c$ f1 b1 b0
- |- (((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((% (x $ x)) (lambdai'. ((A $ i') $ x))) = ((% (x $ x)) (lambdai'. ((A $ i') $ x))))) = T)
T c= c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c% c$ f1 f0 clambda / c$ c$ f2 b0 f0 c% c$ f1 f0 clambda / c$ c$ f2 b0 f0 cT
- (j = k), (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((j = k) /\ ((((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i) $ x))))))
T c==> c= f0 f1 c==> c/\ c<= cNUMERAL cBIT1 c_0 f2 c<= f2 cdimindex part cUNIV c/\ c= f0 f1 c= c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b0 ccolumn b0 f4 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b0 c$ c$ f4 f2 b0
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((% (x $ i)) (lambdai'. ((A $ i') $ i))) = ((% (x $ i)) (lambdai'. ((A $ i') $ i)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c% c$ f1 f0 clambda / c$ c$ f2 b0 f0 c% c$ f1 f0 clambda / c$ c$ f2 b0 f0
+ |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((% (x $ i)) ((column i) A)) = ((% (x $ i)) (lambdai'. ((A $ i') $ i))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c% c$ f1 f0 ccolumn f0 f2 c% c$ f1 f0 clambda / c$ c$ f2 b0 f0
+ |- (((!i. (((row i) A) = (lambdaj. ((A $ i) $ j)))) ==> ((\i. (((row i) A) = (lambdaj. ((A $ i) $ j)))) i)) = ((\i. (((row i) A) = (lambdaj. ((A $ i) $ j)))) i))
T c= c==> ! c= crow b0 f0 clambda / c$ c$ f0 b0 b1 * / c= crow b0 f0 clambda / c$ c$ f0 b0 b1 f1 * / c= crow b0 f0 clambda / c$ c$ f0 b0 b1 f1
+ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- (!A. (!x. ((det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) A))))) ((row i) A)))) = ((real_mul (x $ k)) (det A)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV ! ! c= cdet clambda / cCOND c= b2 f0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ b1 b3 crow b3 b0 crow b2 b0 creal_mul c$ b1 f0 cdet b0
+ |- ((\A. ((det A) = (det (transp A)))) A)
T * / c= cdet b0 cdet ctransp b0 f0
- (i = k), (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((% (x $ i)) ((row i) (transp A))) = ((% (x $ k)) (lambdaj. ((lambdaj. ((A $ j) $ k)) $ j)))))
T c==> c= f0 f1 c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c% c$ f2 f0 crow f0 ctransp f3 c% c$ f2 f1 clambda / c$ clambda / c$ c$ f3 b1 f1 b0
+ |- (((!t'. (!e'. (((i = k) = g') ==> ((g' ==> ((((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i') = t')) ==> (((~ g') ==> (((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i') = e')) ==> ((((COND (i = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i')) ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i')) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((i = k) = g') ==> ((g' ==> ((((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i') = t')) ==> (((~ g') ==> (((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i') = e')) ==> ((((COND (i = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i')) ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i')) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((i = k) = g') ==> ((g' ==> ((((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i') = t')) ==> (((~ g') ==> (((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i') = e')) ==> ((((COND (i = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i')) ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i')) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= f0 f1 f2 c==> c==> f2 c= c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 clambda / c$ clambda / c$ c$ f4 b4 b2 b3 f5 b0 c==> c==> c~ f2 c= c$ clambda / c$ clambda / c$ c$ f4 b3 f0 b2 f5 b1 c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 clambda / c$ clambda / c$ c$ f4 b4 b2 b3 f5 c$ clambda / c$ clambda / c$ c$ f4 b3 f0 b2 f5 cCOND f2 b0 b1 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 clambda / c$ clambda / c$ c$ f4 b4 b2 b3 f5 b0 c==> c==> c~ f2 c= c$ clambda / c$ clambda / c$ c$ f4 b3 f0 b2 f5 b1 c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 clambda / c$ clambda / c$ c$ f4 b4 b2 b3 f5 c$ clambda / c$ clambda / c$ c$ f4 b3 f0 b2 f5 cCOND f2 b0 b1 f6 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 clambda / c$ clambda / c$ c$ f4 b4 b2 b3 f5 b0 c==> c==> c~ f2 c= c$ clambda / c$ clambda / c$ c$ f4 b3 f0 b2 f5 b1 c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 clambda / c$ clambda / c$ c$ f4 b4 b2 b3 f5 c$ clambda / c$ clambda / c$ c$ f4 b3 f0 b2 f5 cCOND f2 b0 b1 f6
- |- (((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> (((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))) = ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c% c$ f1 f0 clambda / c$ clambda / c$ c$ f2 b1 f0 b0 c% c$ f1 f0 clambda / c$ clambda / c$ c$ f2 b1 f0 b0 cT
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) |- (((lambdaj. (((lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ i)) ((A $ i) $ j)))) $ j) $ i)) $ i') = ((\j. (((lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ i)) ((A $ i) $ j)))) $ j) $ i)) i'))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / c$ c$ clambda / clambda / cCOND c= b2 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b2 clambda / c$ c$ f3 b2 b2 b1 c$ c$ f3 b1 b2 b0 f4 f0 * / c$ c$ clambda / clambda / cCOND c= b2 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b2 clambda / c$ c$ f3 b2 b2 b1 c$ c$ f3 b1 b2 b0 f4 f0
+ |- ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((% (x $ i)) ((column i) A)) = (g i)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)
T * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c% c$ f0 b1 ccolumn b1 f1 * b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 ccolumn b1 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) |- (!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> ((((\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))) x) $ i') = ((real_mul (x $ x)) ((A $ i') $ x)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ * / c% c$ f1 b1 clambda / c$ clambda / c$ c$ f2 b2 b1 b1 b0 f0 creal_mul c$ f1 b0 c$ c$ f2 f0 b0
- |- (((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> (((real_mul (x $ x)) ((A $ i') $ x)) = ((real_mul (x $ x)) ((A $ i') $ x))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))))) = (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_mul c$ f0 b0 c$ c$ f1 f2 b0 creal_mul c$ f0 b0 c$ c$ f1 f2 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ c$ f1 f2 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ c$ f1 f2 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ c$ f1 f2 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ c$ f1 f2 b0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((% (x $ i)) ((column i) A)) = ((% (x $ i)) (lambdai'. ((A $ i') $ i)))))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))))) = (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i)))))))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c% c$ f0 b0 ccolumn b0 f1 c% c$ f0 b0 clambda / c$ c$ f1 b1 b0 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 ccolumn b0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ c$ f1 b1 b0 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 ccolumn b0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ c$ f1 b1 b0
- |- (((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))) = ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))))) = (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))))
T c= c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1 c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> ((((\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))) x) $ i') = ((real_mul (x $ x)) ((A $ i') $ x))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= c$ * / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 f1 f0 creal_mul c$ f2 f1 c$ c$ f3 f0 f1
+ |- ((((i = k) = (i = k)) ==> (((i = k) ==> ((((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i') = t')) ==> (((~ (i = k)) ==> (((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i') = e')) ==> ((((COND (i = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i')) ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i')) = (((COND (i = k)) t') e'))))) = (((i = k) ==> ((((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i') = t')) ==> (((~ (i = k)) ==> (((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i') = e')) ==> ((((COND (i = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i')) ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i')) = (((COND (i = k)) t') e')))))
T c= c==> c= c= f0 f1 c= f0 f1 c==> c==> c= f0 f1 c= c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 f4 f5 c==> c==> c~ c= f0 f1 c= c$ clambda / c$ clambda / c$ c$ f3 b1 f0 b0 f4 f6 c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 f4 c$ clambda / c$ clambda / c$ c$ f3 b1 f0 b0 f4 cCOND c= f0 f1 f5 f6 c==> c==> c= f0 f1 c= c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 f4 f5 c==> c==> c~ c= f0 f1 c= c$ clambda / c$ clambda / c$ c$ f3 b1 f0 b0 f4 f6 c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 f4 c$ clambda / c$ clambda / c$ c$ f3 b1 f0 b0 f4 cCOND c= f0 f1 f5 f6
+ |- ((\g'. (!t'. (!e'. (((i = k) = g') ==> ((g' ==> ((((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i') = t')) ==> (((~ g') ==> (((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i') = e')) ==> ((((COND (i = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i')) ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i')) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 clambda / c$ clambda / c$ c$ f3 b5 b3 b4 f4 b1 c==> c==> c~ b0 c= c$ clambda / c$ clambda / c$ c$ f3 b4 f0 b3 f4 b2 c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 clambda / c$ clambda / c$ c$ f3 b5 b3 b4 f4 c$ clambda / c$ clambda / c$ c$ f3 b4 f0 b3 f4 cCOND b0 b1 b2 f5
+ (!A. (!x. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> ((det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) A))))) ((row i) A)))) = ((real_mul (x $ k)) (det A)))))), (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- (((det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) A))))) ((row i) A)))) = ((real_mul (x $ k)) (det A))) = T)
T c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= cdet clambda / cCOND c= b2 f0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ b1 b3 crow b3 b0 crow b2 b0 creal_mul c$ b1 f0 cdet b0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= cdet clambda / cCOND c= b0 f0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f1 b1 crow b1 f2 crow b0 f2 creal_mul c$ f1 f0 cdet f2 cT
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- (((!f. (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vsum s) f) $ i) = ((sum s) (\x. ((f x) $ i))))))) ==> ((\f. (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vsum s) f) $ i) = ((sum s) (\x. ((f x) $ i))))))) f)) = ((\f. (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vsum s) f) $ i) = ((sum s) (\x. ((f x) $ i))))))) f))
T c= c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ cvsum f0 b0 b1 csum f0 / c$ * b0 b2 b1 * / ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ cvsum f0 b0 b1 csum f0 / c$ * b0 b2 b1 f1 * / ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ cvsum f0 b0 b1 csum f0 / c$ * b0 b2 b1 f1
+ |- (((!p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) = ((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) = ((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) = ((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) = ((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) = ((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) = ((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ ctransp clambda / clambda / cCOND c= b3 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b4 ccolumn b4 f3 b2 c$ c$ f3 b2 b3 f0 c$ clambda / cCOND c= b2 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 crow b3 ctransp f3 crow b2 ctransp f3 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ ctransp clambda / clambda / cCOND c= b3 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b4 ccolumn b4 f3 b2 c$ c$ f3 b2 b3 f0 c$ clambda / cCOND c= b2 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 crow b3 ctransp f3 crow b2 ctransp f3 f0 c==> b0 b1 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ ctransp clambda / clambda / cCOND c= b3 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b4 ccolumn b4 f3 b2 c$ c$ f3 b2 b3 f0 c$ clambda / cCOND c= b2 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 crow b3 ctransp f3 crow b2 ctransp f3 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ ctransp clambda / clambda / cCOND c= b3 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b4 ccolumn b4 f3 b2 c$ c$ f3 b2 b3 f0 c$ clambda / cCOND c= b2 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 crow b3 ctransp f3 crow b2 ctransp f3 f0 c==> b0 b1 f4 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ ctransp clambda / clambda / cCOND c= b3 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b4 ccolumn b4 f3 b2 c$ c$ f3 b2 b3 f0 c$ clambda / cCOND c= b2 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 crow b3 ctransp f3 crow b2 ctransp f3 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ ctransp clambda / clambda / cCOND c= b3 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b4 ccolumn b4 f3 b2 c$ c$ f3 b2 b3 f0 c$ clambda / cCOND c= b2 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 crow b3 ctransp f3 crow b2 ctransp f3 f0 c==> b0 b1 f4
+ |- (((!g. ((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> ((((\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))) x) $ i') = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. (((\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))) x) $ i'))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) ==> ((\g. ((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> ((((\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))) x) $ i') = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. (((\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))) x) $ i'))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)) = ((\g. ((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> ((((\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))) x) $ i') = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. (((\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))) x) $ i'))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ * / c% c$ f0 b2 clambda / c$ clambda / c$ c$ f1 b3 b2 b2 b1 f2 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ * / c% c$ f0 b2 clambda / c$ clambda / c$ c$ f1 b3 b2 b2 b1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ * / c% c$ f0 b2 clambda / c$ clambda / c$ c$ f1 b3 b2 b2 b1 f2 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ * / c% c$ f0 b2 clambda / c$ clambda / c$ c$ f1 b3 b2 b2 b1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f3 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ * / c% c$ f0 b2 clambda / c$ clambda / c$ c$ f1 b3 b2 b2 b1 f2 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ * / c% c$ f0 b2 clambda / c$ clambda / c$ c$ f1 b3 b2 b2 b1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f3
+ |- ((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> (((% (x $ x)) (lambdaj. (((lambdai. (lambdaj. ((A $ j) $ i))) $ x) $ j))) = (g x)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. (((lambdai. (lambdaj. ((A $ j) $ i))) $ x) $ j))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c% c$ f0 b0 clambda / c$ c$ clambda / clambda / c$ c$ f1 b3 b2 b0 b1 * f2 b0 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ c$ clambda / clambda / c$ c$ f1 b3 b2 b0 b1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f2
- |- (((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((% (x $ x)) (lambdai'. ((A $ i') $ x))) = ((% (x $ x)) (lambdai'. ((A $ i') $ x)))))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdai'. ((A $ i') $ x))))))) = (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdai'. ((A $ i') $ x)))))))
T c= c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c% c$ f0 b0 clambda / c$ c$ f1 b1 b0 c% c$ f0 b0 clambda / c$ c$ f1 b1 b0 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ c$ f1 b1 b0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ c$ f1 b1 b0 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ c$ f1 b1 b0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ c$ f1 b1 b0
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((% (x $ i)) ((column i) A)) = (g i)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c% c$ f0 b0 ccolumn b0 f1 * f2 b0 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 ccolumn b0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f2
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((j = k) ==> ((((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ _3020421) = (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ _3020421)))
T c==> c= f0 f1 c= c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ c$ f3 b1 b0 f4 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ c$ f3 b1 b0 f4
- |- ((((i = k) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))))) ==> (((~ (i = k)) ==> (((A $ i') $ i) = e')) ==> ((((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i)) = (((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) e')))) = (((~ (i = k)) ==> (((A $ i') $ i) = e')) ==> ((((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i)) = (((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) e'))))
T c= c==> c==> c= f0 f1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f2 b0 c$ c$ f3 f4 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f2 b0 c$ c$ f3 f4 b0 c==> c==> c~ c= f0 f1 c= c$ c$ f3 f4 f0 f5 c= cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f2 b0 c$ c$ f3 f4 b0 c$ c$ f3 f4 f0 cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f2 b0 c$ c$ f3 f4 b0 f5 c==> c==> c~ c= f0 f1 c= c$ c$ f3 f4 f0 f5 c= cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f2 b0 c$ c$ f3 f4 b0 c$ c$ f3 f4 f0 cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f2 b0 c$ c$ f3 f4 b0 f5
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) = ((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> T))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ ctransp clambda / clambda / cCOND c= b1 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b2 ccolumn b2 f3 b0 c$ c$ f3 b0 b1 f0 c$ clambda / cCOND c= b0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b1 crow b1 ctransp f3 crow b0 ctransp f3 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV cT
- |- ((((~ (i = k)) ==> ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) = (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)))) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))) = (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))))) = ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))) = (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)))))
T c= c==> c==> c~ c= f0 f1 c= clambda / c$ clambda / c$ c$ f2 b1 f0 b0 clambda / c$ clambda / c$ c$ f2 b1 f0 b0 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b0 clambda / c$ clambda / c$ c$ f2 b2 b0 b1 clambda / c$ clambda / c$ c$ f2 b1 f0 b0 cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b0 clambda / c$ clambda / c$ c$ f2 b2 b0 b1 clambda / c$ clambda / c$ c$ f2 b1 f0 b0 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b0 clambda / c$ clambda / c$ c$ f2 b2 b0 b1 clambda / c$ clambda / c$ c$ f2 b1 f0 b0 cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b0 clambda / c$ clambda / c$ c$ f2 b2 b0 b1 clambda / c$ clambda / c$ c$ f2 b1 f0 b0
+ |- ((((i = k) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))))) ==> (((~ (i = k)) ==> (((row i) (transp A)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))) = (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) e')))) = (((~ (i = k)) ==> (((row i) (transp A)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))) = (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) e'))))
T c= c==> c==> c= f0 f1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 crow b0 ctransp f3 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 c==> c==> c~ c= f0 f1 c= crow f0 ctransp f3 f4 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 crow b0 ctransp f3 crow f0 ctransp f3 cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 f4 c==> c==> c~ c= f0 f1 c= crow f0 ctransp f3 f4 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 crow b0 ctransp f3 crow f0 ctransp f3 cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 f4
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) |- (((~ (i = k)) ==> (((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i') = e')) ==> ((((COND (i = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i')) ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i')) = (((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) e')))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c==> c~ c= f1 f2 c= c$ clambda / c$ clambda / c$ c$ f3 b1 f1 b0 f0 f4 c= cCOND c= f1 f2 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f5 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 f0 c$ clambda / c$ clambda / c$ c$ f3 b1 f1 b0 f0 cCOND c= f1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f5 b0 c$ c$ f3 f0 b0 f4
- |- (((!e'. (((i = k) = g') ==> ((g' ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = t')) ==> (((~ g') ==> ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))) = (((COND g') t') e')))))) ==> ((\e'. (((i = k) = g') ==> ((g' ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = t')) ==> (((~ g') ==> ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))) = (((COND g') t') e')))))) e')) = ((\e'. (((i = k) = g') ==> ((g' ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = t')) ==> (((~ g') ==> ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 clambda / c$ clambda / c$ c$ f4 b3 b1 b2 f5 c==> c==> c~ f2 c= clambda / c$ clambda / c$ c$ f4 b2 f0 b1 b0 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 clambda / c$ clambda / c$ c$ f4 b3 b1 b2 clambda / c$ clambda / c$ c$ f4 b2 f0 b1 cCOND f2 f5 b0 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 clambda / c$ clambda / c$ c$ f4 b3 b1 b2 f5 c==> c==> c~ f2 c= clambda / c$ clambda / c$ c$ f4 b2 f0 b1 b0 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 clambda / c$ clambda / c$ c$ f4 b3 b1 b2 clambda / c$ clambda / c$ c$ f4 b2 f0 b1 cCOND f2 f5 b0 f6 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 clambda / c$ clambda / c$ c$ f4 b3 b1 b2 f5 c==> c==> c~ f2 c= clambda / c$ clambda / c$ c$ f4 b2 f0 b1 b0 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 clambda / c$ clambda / c$ c$ f4 b3 b1 b2 clambda / c$ clambda / c$ c$ f4 b2 f0 b1 cCOND f2 f5 b0 f6
+ |- ((\j. (((column j) A) = (lambdai. ((A $ i) $ j)))) j)
T * / c= ccolumn b0 f0 clambda / c$ c$ f0 b1 b0 f1
+ |- (((!t'. (!e'. (((i = k) = g') ==> ((g' ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A))))) = t')) ==> (((~ g') ==> (((row i) (transp A)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((i = k) = g') ==> ((g' ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A))))) = t')) ==> (((~ g') ==> (((row i) (transp A)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((i = k) = g') ==> ((g' ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A))))) = t')) ==> (((~ g') ==> (((row i) (transp A)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 crow b2 ctransp f4 b0 c==> c==> c~ f2 c= crow f0 ctransp f4 b1 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 crow b2 ctransp f4 crow f0 ctransp f4 cCOND f2 b0 b1 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 crow b2 ctransp f4 b0 c==> c==> c~ f2 c= crow f0 ctransp f4 b1 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 crow b2 ctransp f4 crow f0 ctransp f4 cCOND f2 b0 b1 f5 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 crow b2 ctransp f4 b0 c==> c==> c~ f2 c= crow f0 ctransp f4 b1 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 crow b2 ctransp f4 crow f0 ctransp f4 cCOND f2 b0 b1 f5
- (x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) |- ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) = T)
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV cT
+ |- ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((% (x $ x)) ((row x) (transp A))) = ((% (x $ x)) (lambdaj. (((lambdai. (lambdaj. ((A $ j) $ i))) $ x) $ j)))))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. (((lambdai. (lambdaj. ((A $ j) $ i))) $ x) $ j)))))))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c% c$ f0 b0 crow b0 ctransp f1 c% c$ f0 b0 clambda / c$ c$ clambda / clambda / c$ c$ f1 b3 b2 b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 crow b0 ctransp f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ c$ clambda / clambda / c$ c$ f1 b3 b2 b0 b1
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((~ (i = k)) ==> (((row i) (transp A)) = (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c~ c= f0 f1 c= crow f0 ctransp f2 clambda / c$ clambda / c$ c$ f2 b1 f0 b0
+ |- ((!i'. t) = t)
T c= ! f0 f0
+ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- ((\A. (!x. ((det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) A))))) ((row i) A)))) = ((real_mul (x $ k)) (det A))))) (transp A))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV * / ! c= cdet clambda / cCOND c= b2 f0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ b1 b3 crow b3 b0 crow b2 b0 creal_mul c$ b1 f0 cdet b0 ctransp f1
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((% (x $ i)) (lambdai'. ((A $ i') $ i))) = ((% (x $ i)) (lambdai'. ((A $ i') $ i))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c% c$ f1 f0 clambda / c$ c$ f2 b0 f0 c% c$ f1 f0 clambda / c$ c$ f2 b0 f0
- |- ((((i = k) = (i = k)) ==> (((i = k) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = t')) ==> (((~ (i = k)) ==> ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))) = (((COND (i = k)) t') e'))))) = (((i = k) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = t')) ==> (((~ (i = k)) ==> ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))) = (((COND (i = k)) t') e')))))
T c= c==> c= c= f0 f1 c= f0 f1 c==> c==> c= f0 f1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 f4 c==> c==> c~ c= f0 f1 c= clambda / c$ clambda / c$ c$ f3 b1 f0 b0 f5 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 clambda / c$ clambda / c$ c$ f3 b1 f0 b0 cCOND c= f0 f1 f4 f5 c==> c==> c= f0 f1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 f4 c==> c==> c~ c= f0 f1 c= clambda / c$ clambda / c$ c$ f3 b1 f0 b0 f5 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 clambda / c$ clambda / c$ c$ f3 b1 f0 b0 cCOND c= f0 f1 f4 f5
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vsum s) f) $ i) = ((sum s) (\x. ((f x) $ i)))))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvsum f0 f1 b0 csum f0 / c$ * f1 b1 b0 f2
- (((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) |- (((NUMERAL (BIT1 _0)) <= x) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c<= cNUMERAL cBIT1 c_0 f0 cT
+ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- ((det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))))) = ((real_mul (x $ k)) (det (transp A))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= cdet clambda / cCOND c= b0 f0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f1 b1 crow b1 ctransp f2 crow b0 ctransp f2 creal_mul c$ f1 f0 cdet ctransp f2
+ (~ (i = k)), (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((~ (i = k)) /\ (((row i) (transp A)) = (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))))
T c==> c~ c= f0 f1 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c~ c= f0 f1 c= crow f0 ctransp f2 clambda / c$ clambda / c$ c$ f2 b1 f0 b0
- |- (!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> (((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))) = ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c% c$ f1 f0 clambda / c$ clambda / c$ c$ f2 b1 f0 b0 c% c$ f1 f0 clambda / c$ clambda / c$ c$ f2 b1 f0 b0
- |- ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))) = (g x)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1 * f2 b0 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f2
+ |- (((!x. (((matrix_vector_mul A) x) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))))) ==> ((\x. (((matrix_vector_mul A) x) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))))) x)) = ((\x. (((matrix_vector_mul A) x) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))))) x))
T c= c==> ! c= cmatrix_vector_mul f0 b0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ b0 b1 ccolumn b1 f0 * / c= cmatrix_vector_mul f0 b0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ b0 b1 ccolumn b1 f0 f1 * / c= cmatrix_vector_mul f0 b0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ b0 b1 ccolumn b1 f0 f1
+ |- (((!A. (!x. (((matrix_vector_mul A) x) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A))))))) ==> ((\A. (!x. (((matrix_vector_mul A) x) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A))))))) A)) = ((\A. (!x. (((matrix_vector_mul A) x) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A))))))) A))
T c= c==> ! ! c= cmatrix_vector_mul b0 b1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ b1 b2 ccolumn b2 b0 * / ! c= cmatrix_vector_mul b0 b1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ b1 b2 ccolumn b2 b0 f0 * / ! c= cmatrix_vector_mul b0 b1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ b1 b2 ccolumn b2 b0 f0
- |- ((\g. ((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> (((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))) = (g x)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)
T * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c% c$ f0 b1 clambda / c$ clambda / c$ c$ f1 b3 b1 b2 * b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 clambda / c$ clambda / c$ c$ f1 b3 b1 b2 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2
+ |- (T = ((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) = (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))))))
T c= cT c= ctransp clambda / clambda / cCOND c= b1 f0 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f1 b2 ccolumn b2 f2 b0 c$ c$ f2 b0 b1 clambda / cCOND c= b0 f0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f1 b1 crow b1 ctransp f2 crow b0 ctransp f2
- |- ((((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i)) = (((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i)))
T c= cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f2 b0 c$ c$ f3 f4 b0 c$ c$ f3 f4 f0 cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f2 b0 c$ c$ f3 f4 b0 c$ c$ f3 f4 f0
- |- ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))) = (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))))
T c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 clambda / c$ clambda / c$ c$ f3 b1 f0 b0 cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 clambda / c$ clambda / c$ c$ f3 b1 f0 b0
+ |- ((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> ((((\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))) x) $ i') = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. (((\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))) x) $ i'))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ * / c% c$ f0 b1 clambda / c$ clambda / c$ c$ f1 b2 b1 b1 b0 f2 * f3 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ * / c% c$ f0 b1 clambda / c$ clambda / c$ c$ f1 b2 b1 b1 b0 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f3
- |- ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((% (x $ x)) (lambdai'. ((A $ i') $ x))) = (g x)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c% c$ f0 b0 clambda / c$ c$ f1 b1 b0 * f2 b0 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ c$ f1 b1 b0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f2
+ |- ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) $ i') = (((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) $ i') = (((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i) $ i'))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ c$ ctransp clambda / clambda / cCOND c= b3 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b4 ccolumn b4 f3 b2 c$ c$ f3 b2 b3 f4 f0 c$ c$ clambda / cCOND c= b2 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 crow b3 ctransp f3 crow b2 ctransp f3 f4 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ ctransp clambda / clambda / cCOND c= b3 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b4 ccolumn b4 f3 b2 c$ c$ f3 b2 b3 f4 f0 c$ c$ clambda / cCOND c= b2 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 crow b3 ctransp f3 crow b2 ctransp f3 f4 f0 c==> b0 b1 f5
- |- (((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((sum s) (\x. (f x))) = ((sum s) g))) = T)
T c= c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= csum f0 / * f1 b0 csum f0 f2 cT
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) |- (((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i') = ((\j. ((lambdaj. ((A $ j) $ i)) $ j)) i'))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / c$ clambda / c$ c$ f1 b1 f2 b0 f0 * / c$ clambda / c$ c$ f1 b1 f2 b0 f0
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) |- ((((~ (i = k)) ==> (((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i') = ((A $ i') $ i))) ==> ((((COND (i = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i')) ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i')) = (((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i)))) = ((((COND (i = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i')) ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i')) = (((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c==> c==> c~ c= f1 f2 c= c$ clambda / c$ clambda / c$ c$ f3 b1 f1 b0 f0 c$ c$ f3 f0 f1 c= cCOND c= f1 f2 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f4 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 f0 c$ clambda / c$ clambda / c$ c$ f3 b1 f1 b0 f0 cCOND c= f1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f4 b0 c$ c$ f3 f0 b0 c$ c$ f3 f0 f1 c= cCOND c= f1 f2 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f4 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 f0 c$ clambda / c$ clambda / c$ c$ f3 b1 f1 b0 f0 cCOND c= f1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f4 b0 c$ c$ f3 f0 b0 c$ c$ f3 f0 f1
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambda g) $ i) = (g i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
+ |- ((\e'. (((i = k) = g') ==> ((g' ==> ((((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i') = t')) ==> (((~ g') ==> (((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i') = e')) ==> ((((COND (i = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i')) ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i')) = (((COND g') t') e')))))) e')
T * / c==> c= c= f0 f1 f2 c==> c==> f2 c= c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 clambda / c$ clambda / c$ c$ f4 b3 b1 b2 f5 f6 c==> c==> c~ f2 c= c$ clambda / c$ clambda / c$ c$ f4 b2 f0 b1 f5 b0 c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 clambda / c$ clambda / c$ c$ f4 b3 b1 b2 f5 c$ clambda / c$ clambda / c$ c$ f4 b2 f0 b1 f5 cCOND f2 f6 b0 f7
- |- ((\t'. (!e'. (((i = k) = g') ==> ((g' ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = t')) ==> (((~ g') ==> (((A $ i') $ i) = e')) ==> ((((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i)) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b2 c$ c$ f4 f5 b2 b0 c==> c==> c~ f2 c= c$ c$ f4 f5 f0 b1 c= cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b2 c$ c$ f4 f5 b2 c$ c$ f4 f5 f0 cCOND f2 b0 b1 f6
+ (!A. (!x. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> ((det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) A))))) ((row i) A)))) = ((real_mul (x $ k)) (det A)))))) |- ((\A. (!x. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> ((det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) A))))) ((row i) A)))) = ((real_mul (x $ k)) (det A)))))) A)
T c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= cdet clambda / cCOND c= b2 f0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ b1 b3 crow b3 b0 crow b2 b0 creal_mul c$ b1 f0 cdet b0 * / ! c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= cdet clambda / cCOND c= b2 f0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ b1 b3 crow b3 b0 crow b2 b0 creal_mul c$ b1 f0 cdet b0 f1
- |- (((~ (j = k)) ==> (((A $ _3020421) $ j) = e')) ==> ((((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ _3020421)) ((A $ _3020421) $ j)) = (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ _3020421)) e')))
T c==> c==> c~ c= f0 f1 c= c$ c$ f2 f3 f0 f4 c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f5 b0 clambda / c$ c$ f2 b1 b0 f3 c$ c$ f2 f3 f0 cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f5 b0 clambda / c$ c$ f2 b1 b0 f3 f4
+ |- ((((~ (j = k)) ==> (((A $ _3020408) $ j) = ((A $ _3020408) $ j))) ==> ((((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ _3020408)) ((A $ _3020408) $ j)) = (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ _3020408)) ((A $ _3020408) $ j)))) = ((((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ _3020408)) ((A $ _3020408) $ j)) = (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ _3020408)) ((A $ _3020408) $ j))))
T c= c==> c==> c~ c= f0 f1 c= c$ c$ f2 f3 f0 c$ c$ f2 f3 f0 c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f4 b0 ccolumn b0 f2 f3 c$ c$ f2 f3 f0 cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f4 b0 clambda / c$ c$ f2 b1 b0 f3 c$ c$ f2 f3 f0 c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f4 b0 ccolumn b0 f2 f3 c$ c$ f2 f3 f0 cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f4 b0 clambda / c$ c$ f2 b1 b0 f3 c$ c$ f2 f3 f0
- |- ((((i = k) = (i = k)) ==> (((i = k) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = t')) ==> (((~ (i = k)) ==> (((A $ i') $ i) = e')) ==> ((((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i)) = (((COND (i = k)) t') e'))))) = (((i = k) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = t')) ==> (((~ (i = k)) ==> (((A $ i') $ i) = e')) ==> ((((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i)) = (((COND (i = k)) t') e')))))
T c= c==> c= c= f0 f1 c= f0 f1 c==> c==> c= f0 f1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f2 b0 c$ c$ f3 f4 b0 f5 c==> c==> c~ c= f0 f1 c= c$ c$ f3 f4 f0 f6 c= cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f2 b0 c$ c$ f3 f4 b0 c$ c$ f3 f4 f0 cCOND c= f0 f1 f5 f6 c==> c==> c= f0 f1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f2 b0 c$ c$ f3 f4 b0 f5 c==> c==> c~ c= f0 f1 c= c$ c$ f3 f4 f0 f6 c= cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f2 b0 c$ c$ f3 f4 b0 c$ c$ f3 f4 f0 cCOND c= f0 f1 f5 f6
+ |- (((i = k) ==> ((((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i') = t')) ==> (((~ (i = k)) ==> (((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i') = e')) ==> ((((COND (i = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i')) ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i')) = (((COND (i = k)) t') e'))))
T c==> c==> c= f0 f1 c= c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 f4 f5 c==> c==> c~ c= f0 f1 c= c$ clambda / c$ clambda / c$ c$ f3 b1 f0 b0 f4 f6 c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 f4 c$ clambda / c$ clambda / c$ c$ f3 b1 f0 b0 f4 cCOND c= f0 f1 f5 f6
+ |- (((i = k) = g') ==> ((g' ==> ((((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i') = t')) ==> (((~ g') ==> (((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i') = e')) ==> ((((COND (i = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i')) ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i')) = (((COND g') t') e')))))
T c==> c= c= f0 f1 f2 c==> c==> f2 c= c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b0 clambda / c$ clambda / c$ c$ f4 b2 b0 b1 f5 f6 c==> c==> c~ f2 c= c$ clambda / c$ clambda / c$ c$ f4 b1 f0 b0 f5 f7 c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b0 clambda / c$ clambda / c$ c$ f4 b2 b0 b1 f5 c$ clambda / c$ clambda / c$ c$ f4 b1 f0 b0 f5 cCOND f2 f6 f7
+ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- ((det (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) = ((real_mul (x $ k)) (det A)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= cdet clambda / clambda / cCOND c= b1 f0 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f1 b2 ccolumn b2 f2 b0 c$ c$ f2 b0 b1 creal_mul c$ f1 f0 cdet f2
+ (((real_mul (x $ k)) (det A)) = (det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))))) |- ((((real_mul (x $ k)) (det A)) = (det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))))) /\ ((det (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) = ((real_mul (x $ k)) (det A))))
T c==> c= creal_mul c$ f0 f1 cdet f2 cdet clambda / cCOND c= b0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 crow b1 ctransp f2 crow b0 ctransp f2 c/\ c= creal_mul c$ f0 f1 cdet f2 cdet clambda / cCOND c= b0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 crow b1 ctransp f2 crow b0 ctransp f2 c= cdet clambda / clambda / cCOND c= b1 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b2 ccolumn b2 f2 b0 c$ c$ f2 b0 b1 creal_mul c$ f0 f1 cdet f2
+ |- ((((j = k) ==> ((((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ _3020408) = (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ _3020408))) ==> (((~ (j = k)) ==> (((A $ _3020408) $ j) = e')) ==> ((((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ _3020408)) ((A $ _3020408) $ j)) = (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ _3020408)) e')))) = (((~ (j = k)) ==> (((A $ _3020408) $ j) = e')) ==> ((((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ _3020408)) ((A $ _3020408) $ j)) = (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ _3020408)) e'))))
T c= c==> c==> c= f0 f1 c= c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 ccolumn b0 f3 f4 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ c$ f3 b1 b0 f4 c==> c==> c~ c= f0 f1 c= c$ c$ f3 f4 f0 f5 c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 ccolumn b0 f3 f4 c$ c$ f3 f4 f0 cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ c$ f3 b1 b0 f4 f5 c==> c==> c~ c= f0 f1 c= c$ c$ f3 f4 f0 f5 c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 ccolumn b0 f3 f4 c$ c$ f3 f4 f0 cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ c$ f3 b1 b0 f4 f5
+ |- ((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> ((det (lambdai. (lambdaj. (((COND (j = k)) (((matrix_vector_mul A) x) $ i)) ((A $ i) $ j))))) = ((real_mul (x $ k)) (det A))))) = T)
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= cdet clambda / clambda / cCOND c= b2 b0 c$ cmatrix_vector_mul f0 f1 b1 c$ c$ f0 b1 b2 creal_mul c$ f1 b0 cdet f0 cT
+ |- (((!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) $ i') = (((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) $ i') = (((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i) $ i'))) = (p' ==> q'))))) ==> ((\q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) $ i') = (((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) $ i') = (((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i) $ i'))) = (p' ==> q'))))) q')) = ((\q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) $ i') = (((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) $ i') = (((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i) $ i'))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ c$ ctransp clambda / clambda / cCOND c= b2 f2 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b3 ccolumn b3 f4 b1 c$ c$ f4 b1 b2 f5 f0 c$ c$ clambda / cCOND c= b1 f2 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 crow b2 ctransp f4 crow b1 ctransp f4 f5 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ ctransp clambda / clambda / cCOND c= b2 f2 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b3 ccolumn b3 f4 b1 c$ c$ f4 b1 b2 f5 f0 c$ c$ clambda / cCOND c= b1 f2 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 crow b2 ctransp f4 crow b1 ctransp f4 f5 f0 c==> f1 b0 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ c$ ctransp clambda / clambda / cCOND c= b2 f2 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b3 ccolumn b3 f4 b1 c$ c$ f4 b1 b2 f5 f0 c$ c$ clambda / cCOND c= b1 f2 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 crow b2 ctransp f4 crow b1 ctransp f4 f5 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ ctransp clambda / clambda / cCOND c= b2 f2 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b3 ccolumn b3 f4 b1 c$ c$ f4 b1 b2 f5 f0 c$ c$ clambda / cCOND c= b1 f2 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 crow b2 ctransp f4 crow b1 ctransp f4 f5 f0 c==> f1 b0 f6 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ c$ ctransp clambda / clambda / cCOND c= b2 f2 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b3 ccolumn b3 f4 b1 c$ c$ f4 b1 b2 f5 f0 c$ c$ clambda / cCOND c= b1 f2 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 crow b2 ctransp f4 crow b1 ctransp f4 f5 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ ctransp clambda / clambda / cCOND c= b2 f2 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b3 ccolumn b3 f4 b1 c$ c$ f4 b1 b2 f5 f0 c$ c$ clambda / cCOND c= b1 f2 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 crow b2 ctransp f4 crow b1 ctransp f4 f5 f0 c==> f1 b0 f6
+ |- ((\x. (((matrix_vector_mul A) x) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))))) x)
T * / c= cmatrix_vector_mul f0 b0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ b0 b1 ccolumn b1 f0 f1
+ |- (((!g'. (!t'. (!e'. (((i = k) = g') ==> ((g' ==> ((((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i') = t')) ==> (((~ g') ==> (((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i') = e')) ==> ((((COND (i = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i')) ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i')) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((i = k) = g') ==> ((g' ==> ((((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i') = t')) ==> (((~ g') ==> (((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i') = e')) ==> ((((COND (i = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i')) ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i')) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((i = k) = g') ==> ((g' ==> ((((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i') = t')) ==> (((~ g') ==> (((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i') = e')) ==> ((((COND (i = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i')) ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i')) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 clambda / c$ clambda / c$ c$ f3 b5 b3 b4 f4 b1 c==> c==> c~ b0 c= c$ clambda / c$ clambda / c$ c$ f3 b4 f0 b3 f4 b2 c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 clambda / c$ clambda / c$ c$ f3 b5 b3 b4 f4 c$ clambda / c$ clambda / c$ c$ f3 b4 f0 b3 f4 cCOND b0 b1 b2 * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 clambda / c$ clambda / c$ c$ f3 b5 b3 b4 f4 b1 c==> c==> c~ b0 c= c$ clambda / c$ clambda / c$ c$ f3 b4 f0 b3 f4 b2 c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 clambda / c$ clambda / c$ c$ f3 b5 b3 b4 f4 c$ clambda / c$ clambda / c$ c$ f3 b4 f0 b3 f4 cCOND b0 b1 b2 f5 * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 clambda / c$ clambda / c$ c$ f3 b5 b3 b4 f4 b1 c==> c==> c~ b0 c= c$ clambda / c$ clambda / c$ c$ f3 b4 f0 b3 f4 b2 c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 clambda / c$ clambda / c$ c$ f3 b5 b3 b4 f4 c$ clambda / c$ clambda / c$ c$ f3 b4 f0 b3 f4 cCOND b0 b1 b2 f5
+ |- ((\q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) $ i') = (((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) $ i') = (((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i) $ i'))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ c$ ctransp clambda / clambda / cCOND c= b2 f2 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b3 ccolumn b3 f4 b1 c$ c$ f4 b1 b2 f5 f0 c$ c$ clambda / cCOND c= b1 f2 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 crow b2 ctransp f4 crow b1 ctransp f4 f5 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ ctransp clambda / clambda / cCOND c= b2 f2 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b3 ccolumn b3 f4 b1 c$ c$ f4 b1 b2 f5 f0 c$ c$ clambda / cCOND c= b1 f2 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 crow b2 ctransp f4 crow b1 ctransp f4 f5 f0 c==> f1 b0 f6
+ |- (((det (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) = ((real_mul (x $ k)) (det A))) = ((det (lambdai. (lambdaj. (((COND (j = k)) (((matrix_vector_mul A) x) $ i)) ((A $ i) $ j))))) = ((real_mul (x $ k)) (det A))))
T c= c= cdet clambda / clambda / cCOND c= b1 f0 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f1 b2 ccolumn b2 f2 b0 c$ c$ f2 b0 b1 creal_mul c$ f1 f0 cdet f2 c= cdet clambda / clambda / cCOND c= b1 f0 c$ cmatrix_vector_mul f2 f1 b0 c$ c$ f2 b0 b1 creal_mul c$ f1 f0 cdet f2
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
- |- ((\g. ((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> (((real_mul (x $ x)) ((A $ i') $ x)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)
T * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_mul c$ f0 b1 c$ c$ f1 f2 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b1 c$ c$ f1 f2 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f3
+ |- ((\e'. (((i = k) = g') ==> ((g' ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A))))) = t')) ==> (((~ g') ==> (((row i) (transp A)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))) = (((COND g') t') e')))))) e')
T * / c==> c= c= f0 f1 f2 c==> c==> f2 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 crow b1 ctransp f4 f5 c==> c==> c~ f2 c= crow f0 ctransp f4 b0 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 crow b1 ctransp f4 crow f0 ctransp f4 cCOND f2 f5 b0 f6
- |- (((!g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((% (x $ i)) ((row i) (transp A))) = (g i)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) ==> ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((% (x $ i)) ((row i) (transp A))) = (g i)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)) = ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((% (x $ i)) ((row i) (transp A))) = (g i)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c% c$ f0 b1 crow b1 ctransp f1 * b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 crow b1 ctransp f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c% c$ f0 b1 crow b1 ctransp f1 * b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 crow b1 ctransp f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c% c$ f0 b1 crow b1 ctransp f1 * b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 crow b1 ctransp f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- (~ (i = k)) |- (((~ (k = i)) ==> ((k = i) = F)) = ((k = i) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
+ |- ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((% (x $ x)) ((row x) (transp A))) = (g x)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c% c$ f0 b0 crow b0 ctransp f1 * f2 b0 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 crow b0 ctransp f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f2
- (~ (i = k)) |- ((i = k) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
- |- ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))) = ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1 c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) = ((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i)) = T))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= c$ ctransp clambda / clambda / cCOND c= b1 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b2 ccolumn b2 f3 b0 c$ c$ f3 b0 b1 f0 c$ clambda / cCOND c= b0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b1 crow b1 ctransp f3 crow b0 ctransp f3 f0 cT
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
- |- (((!e'. (((i = k) = g') ==> ((g' ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = t')) ==> (((~ g') ==> (((A $ i') $ i) = e')) ==> ((((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i)) = (((COND g') t') e')))))) ==> ((\e'. (((i = k) = g') ==> ((g' ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = t')) ==> (((~ g') ==> (((A $ i') $ i) = e')) ==> ((((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i)) = (((COND g') t') e')))))) e')) = ((\e'. (((i = k) = g') ==> ((g' ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = t')) ==> (((~ g') ==> (((A $ i') $ i) = e')) ==> ((((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i)) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= f0 f1 f2 c==> c==> f2 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b1 c$ c$ f4 f5 b1 f6 c==> c==> c~ f2 c= c$ c$ f4 f5 f0 b0 c= cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b1 c$ c$ f4 f5 b1 c$ c$ f4 f5 f0 cCOND f2 f6 b0 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b1 c$ c$ f4 f5 b1 f6 c==> c==> c~ f2 c= c$ c$ f4 f5 f0 b0 c= cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b1 c$ c$ f4 f5 b1 c$ c$ f4 f5 f0 cCOND f2 f6 b0 f7 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b1 c$ c$ f4 f5 b1 f6 c==> c==> c~ f2 c= c$ c$ f4 f5 f0 b0 c= cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b1 c$ c$ f4 f5 b1 c$ c$ f4 f5 f0 cCOND f2 f6 b0 f7
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. (((\i. ((% (x $ i)) ((column i) A))) x) $ i))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i) $ x)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ * / c% c$ f1 b1 ccolumn b1 f2 b0 f0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f1 b0 c$ c$ f2 f0 b0
- |- (((!g'. (!t'. (!e'. (((i = k) = g') ==> ((g' ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = t')) ==> (((~ g') ==> (((A $ i') $ i) = e')) ==> ((((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i)) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((i = k) = g') ==> ((g' ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = t')) ==> (((~ g') ==> (((A $ i') $ i) = e')) ==> ((((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i)) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((i = k) = g') ==> ((g' ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = t')) ==> (((~ g') ==> (((A $ i') $ i) = e')) ==> ((((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i)) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f2 b3 c$ c$ f3 f4 b3 b1 c==> c==> c~ b0 c= c$ c$ f3 f4 f0 b2 c= cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f2 b3 c$ c$ f3 f4 b3 c$ c$ f3 f4 f0 cCOND b0 b1 b2 * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f2 b3 c$ c$ f3 f4 b3 b1 c==> c==> c~ b0 c= c$ c$ f3 f4 f0 b2 c= cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f2 b3 c$ c$ f3 f4 b3 c$ c$ f3 f4 f0 cCOND b0 b1 b2 f5 * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f2 b3 c$ c$ f3 f4 b3 b1 c==> c==> c~ b0 c= c$ c$ f3 f4 f0 b2 c= cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f2 b3 c$ c$ f3 f4 b3 c$ c$ f3 f4 f0 cCOND b0 b1 b2 f5
+ |- (((!e'. (((i = k) = g') ==> ((g' ==> ((((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i') = t')) ==> (((~ g') ==> (((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i') = e')) ==> ((((COND (i = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i')) ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i')) = (((COND g') t') e')))))) ==> ((\e'. (((i = k) = g') ==> ((g' ==> ((((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i') = t')) ==> (((~ g') ==> (((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i') = e')) ==> ((((COND (i = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i')) ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i')) = (((COND g') t') e')))))) e')) = ((\e'. (((i = k) = g') ==> ((g' ==> ((((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i') = t')) ==> (((~ g') ==> (((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i') = e')) ==> ((((COND (i = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i')) ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i')) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= f0 f1 f2 c==> c==> f2 c= c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 clambda / c$ clambda / c$ c$ f4 b3 b1 b2 f5 f6 c==> c==> c~ f2 c= c$ clambda / c$ clambda / c$ c$ f4 b2 f0 b1 f5 b0 c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 clambda / c$ clambda / c$ c$ f4 b3 b1 b2 f5 c$ clambda / c$ clambda / c$ c$ f4 b2 f0 b1 f5 cCOND f2 f6 b0 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 clambda / c$ clambda / c$ c$ f4 b3 b1 b2 f5 f6 c==> c==> c~ f2 c= c$ clambda / c$ clambda / c$ c$ f4 b2 f0 b1 f5 b0 c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 clambda / c$ clambda / c$ c$ f4 b3 b1 b2 f5 c$ clambda / c$ clambda / c$ c$ f4 b2 f0 b1 f5 cCOND f2 f6 b0 f7 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 clambda / c$ clambda / c$ c$ f4 b3 b1 b2 f5 f6 c==> c==> c~ f2 c= c$ clambda / c$ clambda / c$ c$ f4 b2 f0 b1 f5 b0 c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 clambda / c$ clambda / c$ c$ f4 b3 b1 b2 f5 c$ clambda / c$ clambda / c$ c$ f4 b2 f0 b1 f5 cCOND f2 f6 b0 f7
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) |- ((((COND (i = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i')) ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i')) = (((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= cCOND c= f1 f2 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b0 clambda / c$ clambda / c$ c$ f4 b2 b0 b1 f0 c$ clambda / c$ clambda / c$ c$ f4 b1 f1 b0 f0 cCOND c= f1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b0 c$ c$ f4 f0 b0 c$ c$ f4 f0 f1
+ |- ((\i. (((row i) A) = (lambdaj. ((A $ i) $ j)))) i)
T * / c= crow b0 f0 clambda / c$ c$ f0 b0 b1 f1
- |- (((~ (i = k)) ==> ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))) = (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) e')))
T c==> c==> c~ c= f0 f1 c= clambda / c$ clambda / c$ c$ f2 b1 f0 b0 f3 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f4 b0 clambda / c$ clambda / c$ c$ f2 b2 b0 b1 clambda / c$ clambda / c$ c$ f2 b1 f0 b0 cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f4 b0 clambda / c$ clambda / c$ c$ f2 b2 b0 b1 f3
+ |- ((((real_mul (x $ k)) (det (transp A))) = (det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))))) ==> ((det (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) = ((real_mul (x $ k)) (det A))))
T c==> c= creal_mul c$ f0 f1 cdet ctransp f2 cdet clambda / cCOND c= b0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 crow b1 ctransp f2 crow b0 ctransp f2 c= cdet clambda / clambda / cCOND c= b1 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b2 ccolumn b2 f2 b0 c$ c$ f2 b0 b1 creal_mul c$ f0 f1 cdet f2
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ ((((vsum s) f) $ i) = ((sum s) (\x. ((f x) $ i)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvsum f1 f2 f0 csum f1 / c$ * f2 b0 f0
+ |- ((!x. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> ((det (lambdai. (lambdaj. (((COND (j = k)) (((matrix_vector_mul A) x) $ i)) ((A $ i) $ j))))) = ((real_mul (x $ k)) (det A)))))) = T)
T c= ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= cdet clambda / clambda / cCOND c= b3 b1 c$ cmatrix_vector_mul f0 b0 b2 c$ c$ f0 b2 b3 creal_mul c$ b0 b1 cdet f0 cT
- |- ((((~ (j = k)) ==> (((A $ _3020421) $ j) = ((A $ _3020421) $ j))) ==> ((((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ _3020421)) ((A $ _3020421) $ j)) = (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ _3020421)) ((A $ _3020421) $ j)))) = ((((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ _3020421)) ((A $ _3020421) $ j)) = (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ _3020421)) ((A $ _3020421) $ j))))
T c= c==> c==> c~ c= f0 f1 c= c$ c$ f2 f3 f0 c$ c$ f2 f3 f0 c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f4 b0 clambda / c$ c$ f2 b1 b0 f3 c$ c$ f2 f3 f0 cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f4 b0 clambda / c$ c$ f2 b1 b0 f3 c$ c$ f2 f3 f0 c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f4 b0 clambda / c$ c$ f2 b1 b0 f3 c$ c$ f2 f3 f0 cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f4 b0 clambda / c$ c$ f2 b1 b0 f3 c$ c$ f2 f3 f0
+ |- ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((% (x $ x)) ((row x) (transp A))) = (g x)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)
T * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c% c$ f0 b1 crow b1 ctransp f1 * b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 crow b1 ctransp f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- (((~ (j = k)) ==> (((A $ i) $ j) = e')) ==> ((((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j)) = (((COND (j = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i) $ x))))) e')))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c==> c~ c= f1 f2 c= c$ c$ f3 f0 f1 f4 c= cCOND c= f1 f2 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f5 b0 ccolumn b0 f3 f0 c$ c$ f3 f0 f1 cCOND c= f1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f5 b0 c$ c$ f3 f0 b0 f4
- |- (((i = k) = g') ==> ((g' ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = t')) ==> (((~ g') ==> (((A $ i') $ i) = e')) ==> ((((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i)) = (((COND g') t') e')))))
T c==> c= c= f0 f1 f2 c==> c==> f2 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b0 c$ c$ f4 f5 b0 f6 c==> c==> c~ f2 c= c$ c$ f4 f5 f0 f7 c= cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b0 c$ c$ f4 f5 b0 c$ c$ f4 f5 f0 cCOND f2 f6 f7
+ |- (((!x. (!i. ((((% c) x) $ i) = ((real_mul c) (x $ i))))) ==> ((\x. (!i. ((((% c) x) $ i) = ((real_mul c) (x $ i))))) x)) = ((\x. (!i. ((((% c) x) $ i) = ((real_mul c) (x $ i))))) x))
T c= c==> ! ! c= c$ c% f0 b0 b1 creal_mul f0 c$ b0 b1 * / ! c= c$ c% f0 b0 b1 creal_mul f0 c$ b0 b1 f1 * / ! c= c$ c% f0 b0 b1 creal_mul f0 c$ b0 b1 f1
- |- (((i = k) = g') ==> ((g' ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = t')) ==> (((~ g') ==> ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))) = (((COND g') t') e')))))
T c==> c= c= f0 f1 f2 c==> c==> f2 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b0 clambda / c$ clambda / c$ c$ f4 b2 b0 b1 f5 c==> c==> c~ f2 c= clambda / c$ clambda / c$ c$ f4 b1 f0 b0 f6 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b0 clambda / c$ clambda / c$ c$ f4 b2 b0 b1 clambda / c$ clambda / c$ c$ f4 b1 f0 b0 cCOND f2 f5 f6
- |- ((((~ (j = k)) ==> (((A $ i) $ j) = ((A $ i) $ j))) ==> ((((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j)) = (((COND (j = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i) $ x))))) ((A $ i) $ j)))) = ((((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j)) = (((COND (j = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i) $ x))))) ((A $ i) $ j))))
T c= c==> c==> c~ c= f0 f1 c= c$ c$ f2 f3 f0 c$ c$ f2 f3 f0 c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f4 b0 ccolumn b0 f2 f3 c$ c$ f2 f3 f0 cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f4 b0 c$ c$ f2 f3 b0 c$ c$ f2 f3 f0 c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f4 b0 ccolumn b0 f2 f3 c$ c$ f2 f3 f0 cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f4 b0 c$ c$ f2 f3 b0 c$ c$ f2 f3 f0
- |- ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((% (x $ x)) (lambdai'. ((A $ i') $ x))) = ((% (x $ x)) (lambdai'. ((A $ i') $ x)))))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdai'. ((A $ i') $ x)))))))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c% c$ f0 b0 clambda / c$ c$ f1 b1 b0 c% c$ f0 b0 clambda / c$ c$ f1 b1 b0 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ c$ f1 b1 b0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ c$ f1 b1 b0
+ |- (((!g'. (!t'. (!e'. (((i = k) = g') ==> ((g' ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A))))) = t')) ==> (((~ g') ==> (((row i) (transp A)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((i = k) = g') ==> ((g' ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A))))) = t')) ==> (((~ g') ==> (((row i) (transp A)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((i = k) = g') ==> ((g' ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A))))) = t')) ==> (((~ g') ==> (((row i) (transp A)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 crow b3 ctransp f3 b1 c==> c==> c~ b0 c= crow f0 ctransp f3 b2 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 crow b3 ctransp f3 crow f0 ctransp f3 cCOND b0 b1 b2 * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 crow b3 ctransp f3 b1 c==> c==> c~ b0 c= crow f0 ctransp f3 b2 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 crow b3 ctransp f3 crow f0 ctransp f3 cCOND b0 b1 b2 f4 * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 crow b3 ctransp f3 b1 c==> c==> c~ b0 c= crow f0 ctransp f3 b2 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 crow b3 ctransp f3 crow f0 ctransp f3 cCOND b0 b1 b2 f4
+ |- ((\A. (!j. (((column j) A) = (lambdai. ((A $ i) $ j))))) A)
T * / ! c= ccolumn b1 b0 clambda / c$ c$ b0 b2 b1 f0
+ (!A. (!x. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> ((det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) A))))) ((row i) A)))) = ((real_mul (x $ k)) (det A)))))), (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- ((det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) A))))) ((row i) A)))) = ((real_mul (x $ k)) (det A)))
T c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= cdet clambda / cCOND c= b2 f0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ b1 b3 crow b3 b0 crow b2 b0 creal_mul c$ b1 f0 cdet b0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= cdet clambda / cCOND c= b0 f0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f1 b1 crow b1 f2 crow b0 f2 creal_mul c$ f1 f0 cdet f2
+ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- ((\x. ((det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))))) = ((real_mul (x $ k)) (det (transp A))))) x)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV * / c= cdet clambda / cCOND c= b1 f0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ b0 b2 crow b2 ctransp f1 crow b1 ctransp f1 creal_mul c$ b0 f0 cdet ctransp f1 f2
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
- |- (((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (x $ x)) ((A $ i') $ x)) = ((real_mul (x $ x)) ((A $ i') $ x)))) = T)
T c= c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f1 f0 c$ c$ f2 f3 f0 creal_mul c$ f1 f0 c$ c$ f2 f3 f0 cT
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((% (x $ i)) ((column i) A)) = ((% (x $ i)) (lambdai'. ((A $ i') $ i)))))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i)))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c% c$ f0 b0 ccolumn b0 f1 c% c$ f0 b0 clambda / c$ c$ f1 b1 b0 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 ccolumn b0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ c$ f1 b1 b0
+ |- ((\A. ((transp A) = (lambdai. (lambdaj. ((A $ j) $ i))))) A)
T * / c= ctransp b0 clambda / clambda / c$ c$ b0 b2 b1 f0
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((% (x $ i)) (lambdai'. ((A $ i') $ i))) = ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c% c$ f1 f0 clambda / c$ c$ f2 b0 f0 c% c$ f1 f0 clambda / c$ c$ f2 b0 f0 cT
+ |- (((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> (((% (x $ x)) (lambdaj. (((lambdai. (lambdaj. ((A $ j) $ i))) $ x) $ j))) = ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c% c$ f1 f0 clambda / c$ c$ clambda / clambda / c$ c$ f2 b2 b1 f0 b0 c% c$ f1 f0 clambda / c$ clambda / c$ c$ f2 b1 f0 b0 cT
- |- ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (x $ x)) ((A $ i') $ x)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)
T * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f0 b1 c$ c$ f1 f2 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b1 c$ c$ f1 f2 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f3
- |- ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (x $ x)) ((A $ i') $ x)) = ((real_mul (x $ x)) ((A $ i') $ x))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f0 b0 c$ c$ f1 f2 b0 creal_mul c$ f0 b0 c$ c$ f1 f2 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ c$ f1 f2 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ c$ f1 f2 b0
+ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- (((!x. ((det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))))) = ((real_mul (x $ k)) (det (transp A))))) ==> ((\x. ((det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))))) = ((real_mul (x $ k)) (det (transp A))))) x)) = ((\x. ((det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))))) = ((real_mul (x $ k)) (det (transp A))))) x))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c==> ! c= cdet clambda / cCOND c= b1 f0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ b0 b2 crow b2 ctransp f1 crow b1 ctransp f1 creal_mul c$ b0 f0 cdet ctransp f1 * / c= cdet clambda / cCOND c= b1 f0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ b0 b2 crow b2 ctransp f1 crow b1 ctransp f1 creal_mul c$ b0 f0 cdet ctransp f1 f2 * / c= cdet clambda / cCOND c= b1 f0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ b0 b2 crow b2 ctransp f1 crow b1 ctransp f1 creal_mul c$ b0 f0 cdet ctransp f1 f2
+ |- (((i = k) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A))))) = t')) ==> (((~ (i = k)) ==> (((row i) (transp A)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))) = (((COND (i = k)) t') e'))))
T c==> c==> c= f0 f1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 crow b0 ctransp f3 f4 c==> c==> c~ c= f0 f1 c= crow f0 ctransp f3 f5 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 crow b0 ctransp f3 crow f0 ctransp f3 cCOND c= f0 f1 f4 f5
- |- ((\t'. (!e'. (((i = k) = g') ==> ((g' ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = t')) ==> (((~ g') ==> ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 clambda / c$ clambda / c$ c$ f4 b4 b2 b3 b0 c==> c==> c~ f2 c= clambda / c$ clambda / c$ c$ f4 b3 f0 b2 b1 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 clambda / c$ clambda / c$ c$ f4 b4 b2 b3 clambda / c$ clambda / c$ c$ f4 b3 f0 b2 cCOND f2 b0 b1 f5
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((((~ (i = k)) ==> (((A $ i') $ i) = ((A $ i') $ i))) ==> ((((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i)) = (((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i)))) = ((((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i)) = (((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i))))
T c= c==> c==> c~ c= f0 f1 c= c$ c$ f2 f3 f0 c$ c$ f2 f3 f0 c= cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f4 b0 c$ c$ f2 f3 b0 c$ c$ f2 f3 f0 cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f4 b0 c$ c$ f2 f3 b0 c$ c$ f2 f3 f0 c= cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f4 b0 c$ c$ f2 f3 b0 c$ c$ f2 f3 f0 cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f4 b0 c$ c$ f2 f3 b0 c$ c$ f2 f3 f0
+ |- ((((i = k) = (i = k)) ==> (((i = k) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A))))) = t')) ==> (((~ (i = k)) ==> (((row i) (transp A)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))) = (((COND (i = k)) t') e'))))) = (((i = k) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A))))) = t')) ==> (((~ (i = k)) ==> (((row i) (transp A)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))) = (((COND (i = k)) t') e')))))
T c= c==> c= c= f0 f1 c= f0 f1 c==> c==> c= f0 f1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 crow b0 ctransp f3 f4 c==> c==> c~ c= f0 f1 c= crow f0 ctransp f3 f5 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 crow b0 ctransp f3 crow f0 ctransp f3 cCOND c= f0 f1 f4 f5 c==> c==> c= f0 f1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 crow b0 ctransp f3 f4 c==> c==> c~ c= f0 f1 c= crow f0 ctransp f3 f5 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 crow b0 ctransp f3 crow f0 ctransp f3 cCOND c= f0 f1 f4 f5
+ |- (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. (((lambdai. (lambdaj. ((A $ j) $ i))) $ x) $ j))))))
T c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 crow b0 ctransp f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ c$ clambda / clambda / c$ c$ f1 b3 b2 b0 b1
+ (i = k), (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) |- ((i = k) /\ ((((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i') = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))))
T c==> c= f0 f1 c==> c/\ c<= cNUMERAL cBIT1 c_0 f2 c<= f2 cdimindex part cUNIV c/\ c= f0 f1 c= c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b0 clambda / c$ clambda / c$ c$ f4 b2 b0 b1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b0 c$ c$ f4 f2 b0
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> ((((\i. ((% (x $ i)) ((column i) A))) x) $ i) = ((real_mul (x $ x)) ((A $ i) $ x))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= c$ * / c% c$ f2 b0 ccolumn b0 f3 f1 f0 creal_mul c$ f2 f1 c$ c$ f3 f0 f1
- (k = i) |- (i = k)
T c==> c= f0 f1 c= f1 f0
+ |- ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) = ((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) = ((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ ctransp clambda / clambda / cCOND c= b2 f2 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b3 ccolumn b3 f4 b1 c$ c$ f4 b1 b2 f0 c$ clambda / cCOND c= b1 f2 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 crow b2 ctransp f4 crow b1 ctransp f4 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ ctransp clambda / clambda / cCOND c= b2 f2 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b3 ccolumn b3 f4 b1 c$ c$ f4 b1 b2 f0 c$ clambda / cCOND c= b1 f2 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 crow b2 ctransp f4 crow b1 ctransp f4 f0 c==> f1 b0 f5
+ (!A. (!x. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> ((det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) A))))) ((row i) A)))) = ((real_mul (x $ k)) (det A)))))), (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- (!x. ((det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) A))))) ((row i) A)))) = ((real_mul (x $ k)) (det A))))
T c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= cdet clambda / cCOND c= b2 f0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ b1 b3 crow b3 b0 crow b2 b0 creal_mul c$ b1 f0 cdet b0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV ! c= cdet clambda / cCOND c= b1 f0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ b0 b2 crow b2 f1 crow b1 f1 creal_mul c$ b0 f0 cdet f1
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) |- (((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> ((((\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))) x) $ i') = ((real_mul (x $ x)) ((A $ i') $ x))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. (((\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))) x) $ i'))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))))) = (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. (((\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))) x) $ i'))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ * / c% c$ f1 b1 clambda / c$ clambda / c$ c$ f2 b2 b1 b1 b0 f0 creal_mul c$ f1 b0 c$ c$ f2 f0 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ * / c% c$ f1 b1 clambda / c$ clambda / c$ c$ f2 b2 b1 b1 b0 f0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f1 b0 c$ c$ f2 f0 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ * / c% c$ f1 b1 clambda / c$ clambda / c$ c$ f2 b2 b1 b1 b0 f0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f1 b0 c$ c$ f2 f0 b0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))) = (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 crow b0 ctransp f3 crow f0 ctransp f3 cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 clambda / c$ clambda / c$ c$ f3 b1 f0 b0
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))), (((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) /\ ((((\i. ((% (x $ i)) ((column i) A))) x) $ i) = ((real_mul (x $ x)) ((A $ i) $ x))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= c$ * / c% c$ f2 b0 ccolumn b0 f3 f1 f0 creal_mul c$ f2 f1 c$ c$ f3 f0 f1
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))), (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) /\ (((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) $ i') = (((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i) $ i')) = T))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= c= c$ c$ ctransp clambda / clambda / cCOND c= b1 f2 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 ccolumn b2 f4 b0 c$ c$ f4 b0 b1 f0 f1 c$ c$ clambda / cCOND c= b0 f2 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 crow b1 ctransp f4 crow b0 ctransp f4 f0 f1 cT
- |- ((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> (((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))) = (g x)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1 * f2 b0 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f2
+ |- (((!x. (((a <= x) /\ (x <= b)) ==> ((f x) = (g x)))) ==> (((vsum (a .. b)) (\x. (f x))) = ((vsum (a .. b)) g))) = T)
T c= c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= cvsum * * part c.. f0 f1 / * f2 b0 cvsum * * part c.. f0 f1 f3 cT
+ |- (((((real_mul (x $ k)) (det A)) = (det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))))) ==> ((det (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) = ((real_mul (x $ k)) (det A)))) = ((((real_mul (x $ k)) (det (transp A))) = (det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))))) ==> ((det (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) = ((real_mul (x $ k)) (det A)))))
T c= c==> c= creal_mul c$ f0 f1 cdet f2 cdet clambda / cCOND c= b0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 crow b1 ctransp f2 crow b0 ctransp f2 c= cdet clambda / clambda / cCOND c= b1 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b2 ccolumn b2 f2 b0 c$ c$ f2 b0 b1 creal_mul c$ f0 f1 cdet f2 c==> c= creal_mul c$ f0 f1 cdet ctransp f2 cdet clambda / cCOND c= b0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 crow b1 ctransp f2 crow b0 ctransp f2 c= cdet clambda / clambda / cCOND c= b1 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b2 ccolumn b2 f2 b0 c$ c$ f2 b0 b1 creal_mul c$ f0 f1 cdet f2
- |- (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))))
T c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1
- |- ((((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ _3020421)) ((A $ _3020421) $ j)) = (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ _3020421)) ((A $ _3020421) $ j)))
T c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ c$ f3 b1 b0 f4 c$ c$ f3 f4 f0 cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ c$ f3 b1 b0 f4 c$ c$ f3 f4 f0
+ |- ((\A. (!x. (((matrix_vector_mul A) x) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A))))))) A)
T * / ! c= cmatrix_vector_mul b0 b1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ b1 b2 ccolumn b2 b0 f0
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) |- (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. (((\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))) x) $ i'))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ * / c% c$ f1 b1 clambda / c$ clambda / c$ c$ f2 b2 b1 b1 b0 f0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f1 b0 c$ c$ f2 f0 b0
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) |- (((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> ((((\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))) x) $ i') = ((real_mul (x $ x)) ((A $ i') $ x)))) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= c$ * / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 f1 f0 creal_mul c$ f2 f1 c$ c$ f3 f0 f1 cT
- |- (((!g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))) = (g x)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) ==> ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))) = (g x)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)) = ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))) = (g x)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g))
T c= c==> ! c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c% c$ f0 b1 clambda / c$ clambda / c$ c$ f1 b3 b1 b2 * b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 clambda / c$ clambda / c$ c$ f1 b3 b1 b2 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c% c$ f0 b1 clambda / c$ clambda / c$ c$ f1 b3 b1 b2 * b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 clambda / c$ clambda / c$ c$ f1 b3 b1 b2 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c% c$ f0 b1 clambda / c$ clambda / c$ c$ f1 b3 b1 b2 * b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 clambda / c$ clambda / c$ c$ f1 b3 b1 b2 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) |- ((~ (i = k)) ==> (((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i') = ((A $ i') $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c~ c= f1 f2 c= c$ clambda / c$ clambda / c$ c$ f3 b1 f1 b0 f0 c$ c$ f3 f0 f1
+ |- (!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> (((% (x $ x)) (lambdaj. (((lambdai. (lambdaj. ((A $ j) $ i))) $ x) $ j))) = ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c% c$ f1 f0 clambda / c$ c$ clambda / clambda / c$ c$ f2 b2 b1 f0 b0 c% c$ f1 f0 clambda / c$ clambda / c$ c$ f2 b1 f0 b0
+ |- ((\i. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j)))) = (\i. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ i)) ((A $ i) $ j)))))
T c= / clambda / cCOND c= b1 f0 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f1 b2 ccolumn b2 f2 b0 c$ c$ f2 b0 b1 / clambda / cCOND c= b1 f0 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f1 b2 clambda / c$ c$ f2 b2 b2 b0 c$ c$ f2 b0 b1
- |- (((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (x $ x)) ((A $ i') $ x)) = ((real_mul (x $ x)) ((A $ i') $ x))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))))) = (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))))
T c= c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f0 b0 c$ c$ f1 f2 b0 creal_mul c$ f0 b0 c$ c$ f1 f2 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ c$ f1 f2 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ c$ f1 f2 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ c$ f1 f2 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ c$ f1 f2 b0
+ |- (((!s. (!f. (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vsum s) f) $ i) = ((sum s) (\x. ((f x) $ i)))))))) ==> ((\s. (!f. (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vsum s) f) $ i) = ((sum s) (\x. ((f x) $ i)))))))) s)) = ((\s. (!f. (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vsum s) f) $ i) = ((sum s) (\x. ((f x) $ i)))))))) s))
T c= c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV c= c$ cvsum b0 b1 b2 csum b0 / c$ * b1 b3 b2 * / ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV c= c$ cvsum b0 b1 b2 csum b0 / c$ * b1 b3 b2 f0 * / ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV c= c$ cvsum b0 b1 b2 csum b0 / c$ * b1 b3 b2 f0
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) |- ((((i = k) ==> ((((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i') = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))))) ==> (((~ (i = k)) ==> (((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i') = e')) ==> ((((COND (i = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i')) ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i')) = (((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) e')))) = (((~ (i = k)) ==> (((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i') = e')) ==> ((((COND (i = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) $ i')) ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) $ i')) = (((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) e'))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c==> c==> c= f1 f2 c= c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b0 clambda / c$ clambda / c$ c$ f4 b2 b0 b1 f0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b0 c$ c$ f4 f0 b0 c==> c==> c~ c= f1 f2 c= c$ clambda / c$ clambda / c$ c$ f4 b1 f1 b0 f0 f5 c= cCOND c= f1 f2 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b0 clambda / c$ clambda / c$ c$ f4 b2 b0 b1 f0 c$ clambda / c$ clambda / c$ c$ f4 b1 f1 b0 f0 cCOND c= f1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b0 c$ c$ f4 f0 b0 f5 c==> c==> c~ c= f1 f2 c= c$ clambda / c$ clambda / c$ c$ f4 b1 f1 b0 f0 f5 c= cCOND c= f1 f2 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b0 clambda / c$ clambda / c$ c$ f4 b2 b0 b1 f0 c$ clambda / c$ clambda / c$ c$ f4 b1 f1 b0 f0 cCOND c= f1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b0 c$ c$ f4 f0 b0 f5
+ |- ((\g'. (!t'. (!e'. (((i = k) = g') ==> ((g' ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A))))) = t')) ==> (((~ g') ==> (((row i) (transp A)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 crow b3 ctransp f3 b1 c==> c==> c~ b0 c= crow f0 ctransp f3 b2 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 crow b3 ctransp f3 crow f0 ctransp f3 cCOND b0 b1 b2 f4
- |- (((!g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((% (x $ i)) (lambdai'. ((A $ i') $ i))) = (g i)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) ==> ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((% (x $ i)) (lambdai'. ((A $ i') $ i))) = (g i)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)) = ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((% (x $ i)) (lambdai'. ((A $ i') $ i))) = (g i)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c% c$ f0 b1 clambda / c$ c$ f1 b2 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 clambda / c$ c$ f1 b2 b1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c% c$ f0 b1 clambda / c$ c$ f1 b2 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 clambda / c$ c$ f1 b2 b1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c% c$ f0 b1 clambda / c$ c$ f1 b2 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 clambda / c$ c$ f1 b2 b1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2
+ |- ((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> (((% (x $ x)) (lambdaj. (((lambdai. (lambdaj. ((A $ j) $ i))) $ x) $ j))) = ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. (((lambdai. (lambdaj. ((A $ j) $ i))) $ x) $ j))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c% c$ f0 b0 clambda / c$ c$ clambda / clambda / c$ c$ f1 b3 b2 b0 b1 c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ c$ clambda / clambda / c$ c$ f1 b3 b2 b0 b1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1
+ |- ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) = ((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) = ((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ ctransp clambda / clambda / cCOND c= b3 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b4 ccolumn b4 f3 b2 c$ c$ f3 b2 b3 f0 c$ clambda / cCOND c= b2 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 crow b3 ctransp f3 crow b2 ctransp f3 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ ctransp clambda / clambda / cCOND c= b3 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b4 ccolumn b4 f3 b2 c$ c$ f3 b2 b3 f0 c$ clambda / cCOND c= b2 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 crow b3 ctransp f3 crow b2 ctransp f3 f0 c==> b0 b1 f4
- |- (((!g'. (!t'. (!e'. (((i = k) = g') ==> ((g' ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = t')) ==> (((~ g') ==> ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((i = k) = g') ==> ((g' ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = t')) ==> (((~ g') ==> ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((i = k) = g') ==> ((g' ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = t')) ==> (((~ g') ==> ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 clambda / c$ clambda / c$ c$ f3 b5 b3 b4 b1 c==> c==> c~ b0 c= clambda / c$ clambda / c$ c$ f3 b4 f0 b3 b2 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 clambda / c$ clambda / c$ c$ f3 b5 b3 b4 clambda / c$ clambda / c$ c$ f3 b4 f0 b3 cCOND b0 b1 b2 * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 clambda / c$ clambda / c$ c$ f3 b5 b3 b4 b1 c==> c==> c~ b0 c= clambda / c$ clambda / c$ c$ f3 b4 f0 b3 b2 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 clambda / c$ clambda / c$ c$ f3 b5 b3 b4 clambda / c$ clambda / c$ c$ f3 b4 f0 b3 cCOND b0 b1 b2 f4 * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 clambda / c$ clambda / c$ c$ f3 b5 b3 b4 b1 c==> c==> c~ b0 c= clambda / c$ clambda / c$ c$ f3 b4 f0 b3 b2 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 clambda / c$ clambda / c$ c$ f3 b5 b3 b4 clambda / c$ clambda / c$ c$ f3 b4 f0 b3 cCOND b0 b1 b2 f4
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) = ((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) = ((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i))) = (p' ==> q'))))
T c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ ctransp clambda / clambda / cCOND c= b1 f2 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 ccolumn b2 f4 b0 c$ c$ f4 b0 b1 f0 c$ clambda / cCOND c= b0 f2 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 crow b1 ctransp f4 crow b0 ctransp f4 f0 f5 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ ctransp clambda / clambda / cCOND c= b1 f2 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 ccolumn b2 f4 b0 c$ c$ f4 b0 b1 f0 c$ clambda / cCOND c= b0 f2 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 crow b1 ctransp f4 crow b0 ctransp f4 f0 c==> f1 f5
+ |- ((i = k) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))))
T c==> c= f0 f1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 crow b0 ctransp f3 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1
- |- (((~ (i = k)) ==> (((A $ i') $ i) = e')) ==> ((((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i)) = (((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) e')))
T c==> c==> c~ c= f0 f1 c= c$ c$ f2 f3 f0 f4 c= cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f5 b0 c$ c$ f2 f3 b0 c$ c$ f2 f3 f0 cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f5 b0 c$ c$ f2 f3 b0 f4
- (i = k) |- ((i = k) /\ (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))))
T c==> c= f0 f1 c/\ c= f0 f1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1
+ |- (((i = k) = g') ==> ((g' ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A))))) = t')) ==> (((~ g') ==> (((row i) (transp A)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))) = (((COND g') t') e')))))
T c==> c= c= f0 f1 f2 c==> c==> f2 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b0 crow b0 ctransp f4 f5 c==> c==> c~ f2 c= crow f0 ctransp f4 f6 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b0 crow b0 ctransp f4 crow f0 ctransp f4 cCOND f2 f5 f6
+ |- ((((real_mul (x $ k)) (det A)) = (det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))))) ==> ((det (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) = ((real_mul (x $ k)) (det A))))
T c==> c= creal_mul c$ f0 f1 cdet f2 cdet clambda / cCOND c= b0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 crow b1 ctransp f2 crow b0 ctransp f2 c= cdet clambda / clambda / cCOND c= b1 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b2 ccolumn b2 f2 b0 c$ c$ f2 b0 b1 creal_mul c$ f0 f1 cdet f2
+ |- (!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((% (x $ x)) ((row x) (transp A))) = ((% (x $ x)) (lambdaj. (((lambdai. (lambdaj. ((A $ j) $ i))) $ x) $ j))))))
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c% c$ f1 f0 crow f0 ctransp f2 c% c$ f1 f0 clambda / c$ c$ clambda / clambda / c$ c$ f2 b2 b1 f0 b0
- (j = k) |- ((j = k) /\ ((((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ _3020421) = (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ _3020421)))
T c==> c= f0 f1 c/\ c= f0 f1 c= c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ c$ f3 b1 b0 f4 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ c$ f3 b1 b0 f4
+ |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j)) = (((COND (j = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i) $ x))))) ((A $ i) $ j)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= cCOND c= f1 f2 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b0 ccolumn b0 f4 f0 c$ c$ f4 f0 f1 cCOND c= f1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b0 c$ c$ f4 f0 b0 c$ c$ f4 f0 f1
+ |- ((\c. (!x. (!i. ((((% c) x) $ i) = ((real_mul c) (x $ i)))))) c)
T * / ! ! c= c$ c% b0 b1 b2 creal_mul b0 c$ b1 b2 f0
+ |- (((!A. (!i. (((row i) A) = (lambdaj. ((A $ i) $ j))))) ==> ((\A. (!i. (((row i) A) = (lambdaj. ((A $ i) $ j))))) A)) = ((\A. (!i. (((row i) A) = (lambdaj. ((A $ i) $ j))))) A))
T c= c==> ! ! c= crow b1 b0 clambda / c$ c$ b0 b1 b2 * / ! c= crow b1 b0 clambda / c$ c$ b0 b1 b2 f0 * / ! c= crow b1 b0 clambda / c$ c$ b0 b1 b2 f0
- |- ((\g. ((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> ((((\i. ((% (x $ i)) ((column i) A))) x) $ i) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. (((\i. ((% (x $ i)) ((column i) A))) x) $ i))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)
T * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ * / c% c$ f0 b2 ccolumn b2 f1 b1 f2 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ * / c% c$ f0 b2 ccolumn b2 f1 b1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f3
+ |- (((!x. (((a <= x) /\ (x <= b)) ==> ((f x) = (g x)))) ==> (((sum (a .. b)) (\x. (f x))) = ((sum (a .. b)) g))) = T)
T c= c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 / * f2 b0 csum * * part c.. f0 f1 f3 cT
+ |- (((!e'. (((i = k) = g') ==> ((g' ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A))))) = t')) ==> (((~ g') ==> (((row i) (transp A)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))) = (((COND g') t') e')))))) ==> ((\e'. (((i = k) = g') ==> ((g' ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A))))) = t')) ==> (((~ g') ==> (((row i) (transp A)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))) = (((COND g') t') e')))))) e')) = ((\e'. (((i = k) = g') ==> ((g' ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A))))) = t')) ==> (((~ g') ==> (((row i) (transp A)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 crow b1 ctransp f4 f5 c==> c==> c~ f2 c= crow f0 ctransp f4 b0 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 crow b1 ctransp f4 crow f0 ctransp f4 cCOND f2 f5 b0 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 crow b1 ctransp f4 f5 c==> c==> c~ f2 c= crow f0 ctransp f4 b0 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 crow b1 ctransp f4 crow f0 ctransp f4 cCOND f2 f5 b0 f6 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 crow b1 ctransp f4 f5 c==> c==> c~ f2 c= crow f0 ctransp f4 b0 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 crow b1 ctransp f4 crow f0 ctransp f4 cCOND f2 f5 b0 f6
+ (!A. (!x. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> ((det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) A))))) ((row i) A)))) = ((real_mul (x $ k)) (det A)))))) |- ((\x. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> ((det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) A))))) ((row i) A)))) = ((real_mul (x $ k)) (det A))))) x)
T c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= cdet clambda / cCOND c= b2 f0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ b1 b3 crow b3 b0 crow b2 b0 creal_mul c$ b1 f0 cdet b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= cdet clambda / cCOND c= b1 f0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ b0 b2 crow b2 f1 crow b1 f1 creal_mul c$ b0 f0 cdet f1 f2
- |- ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))) = (g x)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)
T * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c% c$ f0 b1 clambda / c$ clambda / c$ c$ f1 b3 b1 b2 * b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 clambda / c$ clambda / c$ c$ f1 b3 b1 b2 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2
+ |- (((~ (i = k)) ==> (((row i) (transp A)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))) = (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) e')))
T c==> c==> c~ c= f0 f1 c= crow f0 ctransp f2 f3 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f4 b0 crow b0 ctransp f2 crow f0 ctransp f2 cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f4 b0 clambda / c$ clambda / c$ c$ f2 b2 b0 b1 f3
+ |- ((!A. (!x. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> ((det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) A))))) ((row i) A)))) = ((real_mul (x $ k)) (det A)))))) ==> ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (!A. (!x. ((det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) A))))) ((row i) A)))) = ((real_mul (x $ k)) (det A)))))))
T c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= cdet clambda / cCOND c= b2 f0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ b1 b3 crow b3 b0 crow b2 b0 creal_mul c$ b1 f0 cdet b0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV ! ! c= cdet clambda / cCOND c= b2 f0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ b1 b3 crow b3 b0 crow b2 b0 creal_mul c$ b1 f0 cdet b0
+ (((real_mul (x $ k)) (det A)) = (det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))))) |- (((det (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) = ((real_mul (x $ k)) (det A))) = ((det (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) = (det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))))))
T c==> c= creal_mul c$ f0 f1 cdet f2 cdet clambda / cCOND c= b0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 crow b1 ctransp f2 crow b0 ctransp f2 c= c= cdet clambda / clambda / cCOND c= b1 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b2 ccolumn b2 f2 b0 c$ c$ f2 b0 b1 creal_mul c$ f0 f1 cdet f2 c= cdet clambda / clambda / cCOND c= b1 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b2 ccolumn b2 f2 b0 c$ c$ f2 b0 b1 cdet clambda / cCOND c= b0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 crow b1 ctransp f2 crow b0 ctransp f2
+ |- ((det (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) = (det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))))))
T c= cdet clambda / clambda / cCOND c= b1 f0 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f1 b2 ccolumn b2 f2 b0 c$ c$ f2 b0 b1 cdet clambda / cCOND c= b0 f0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f1 b1 crow b1 ctransp f2 crow b0 ctransp f2
+ |- ((((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ _3020408)) ((A $ _3020408) $ j)) = (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ _3020408)) ((A $ _3020408) $ j)))
T c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 ccolumn b0 f3 f4 c$ c$ f3 f4 f0 cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ c$ f3 b1 b0 f4 c$ c$ f3 f4 f0
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- (!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> ((((\i. ((% (x $ i)) ((column i) A))) x) $ i) = ((real_mul (x $ x)) ((A $ i) $ x)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ * / c% c$ f1 b1 ccolumn b1 f2 b0 f0 creal_mul c$ f1 b0 c$ c$ f2 f0 b0
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV)))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) = ((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) = ((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> q')))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) = ((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) = ((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> q'))))
T c= c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= c$ ctransp clambda / clambda / cCOND c= b1 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b2 ccolumn b2 f3 b0 c$ c$ f3 b0 b1 f0 c$ clambda / cCOND c= b0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b1 crow b1 ctransp f3 crow b0 ctransp f3 f0 f4 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ ctransp clambda / clambda / cCOND c= b1 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b2 ccolumn b2 f3 b0 c$ c$ f3 b0 b1 f0 c$ clambda / cCOND c= b0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b1 crow b1 ctransp f3 crow b0 ctransp f3 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f4 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= c$ ctransp clambda / clambda / cCOND c= b1 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b2 ccolumn b2 f3 b0 c$ c$ f3 b0 b1 f0 c$ clambda / cCOND c= b0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b1 crow b1 ctransp f3 crow b0 ctransp f3 f0 f4 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ ctransp clambda / clambda / cCOND c= b1 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b2 ccolumn b2 f3 b0 c$ c$ f3 b0 b1 f0 c$ clambda / cCOND c= b0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b1 crow b1 ctransp f3 crow b0 ctransp f3 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f4
- |- (((!t'. (!e'. (((i = k) = g') ==> ((g' ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = t')) ==> (((~ g') ==> (((A $ i') $ i) = e')) ==> ((((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i)) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((i = k) = g') ==> ((g' ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = t')) ==> (((~ g') ==> (((A $ i') $ i) = e')) ==> ((((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i)) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((i = k) = g') ==> ((g' ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = t')) ==> (((~ g') ==> (((A $ i') $ i) = e')) ==> ((((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i)) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= f0 f1 f2 c==> c==> f2 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b2 c$ c$ f4 f5 b2 b0 c==> c==> c~ f2 c= c$ c$ f4 f5 f0 b1 c= cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b2 c$ c$ f4 f5 b2 c$ c$ f4 f5 f0 cCOND f2 b0 b1 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b2 c$ c$ f4 f5 b2 b0 c==> c==> c~ f2 c= c$ c$ f4 f5 f0 b1 c= cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b2 c$ c$ f4 f5 b2 c$ c$ f4 f5 f0 cCOND f2 b0 b1 f6 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b2 c$ c$ f4 f5 b2 b0 c==> c==> c~ f2 c= c$ c$ f4 f5 f0 b1 c= cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b2 c$ c$ f4 f5 b2 c$ c$ f4 f5 f0 cCOND f2 b0 b1 f6
- |- ((i = k) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))))
T c==> c= f0 f1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1
+ |- ((((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV)))) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> (((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) $ i') = (((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) $ i') = (((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> q')))) = (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> (((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) $ i') = (((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) $ i') = (((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> q'))))
T c= c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= c$ c$ ctransp clambda / clambda / cCOND c= b1 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b2 ccolumn b2 f3 b0 c$ c$ f3 b0 b1 f4 f0 c$ c$ clambda / cCOND c= b0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b1 crow b1 ctransp f3 crow b0 ctransp f3 f4 f0 f5 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ ctransp clambda / clambda / cCOND c= b1 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b2 ccolumn b2 f3 b0 c$ c$ f3 b0 b1 f4 f0 c$ c$ clambda / cCOND c= b0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b1 crow b1 ctransp f3 crow b0 ctransp f3 f4 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f5 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= c$ c$ ctransp clambda / clambda / cCOND c= b1 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b2 ccolumn b2 f3 b0 c$ c$ f3 b0 b1 f4 f0 c$ c$ clambda / cCOND c= b0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b1 crow b1 ctransp f3 crow b0 ctransp f3 f4 f0 f5 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ ctransp clambda / clambda / cCOND c= b1 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b2 ccolumn b2 f3 b0 c$ c$ f3 b0 b1 f4 f0 c$ c$ clambda / cCOND c= b0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b1 crow b1 ctransp f3 crow b0 ctransp f3 f4 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f5
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> (((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) $ i') = (((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i) $ i')) = T)) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) $ i') = (((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> T))) = (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((transp (lambdai. (lambdaj. (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j))))) $ i) $ i') = (((lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A)))) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> T)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= c= c$ c$ ctransp clambda / clambda / cCOND c= b1 f2 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 ccolumn b2 f4 b0 c$ c$ f4 b0 b1 f0 f1 c$ c$ clambda / cCOND c= b0 f2 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 crow b1 ctransp f4 crow b0 ctransp f4 f0 f1 cT c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= c$ c$ ctransp clambda / clambda / cCOND c= b1 f2 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 ccolumn b2 f4 b0 c$ c$ f4 b0 b1 f0 f1 c$ c$ clambda / cCOND c= b0 f2 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 crow b1 ctransp f4 crow b0 ctransp f4 f0 f1 c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV cT c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= c$ c$ ctransp clambda / clambda / cCOND c= b1 f2 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 ccolumn b2 f4 b0 c$ c$ f4 b0 b1 f0 f1 c$ c$ clambda / cCOND c= b0 f2 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 crow b1 ctransp f4 crow b0 ctransp f4 f0 f1 c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV cT
+ |- ((\g. ((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> ((((\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))) x) $ i') = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. (((\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))) x) $ i'))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)
T * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ * / c% c$ f0 b2 clambda / c$ clambda / c$ c$ f1 b3 b2 b2 b1 f2 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ * / c% c$ f0 b2 clambda / c$ clambda / c$ c$ f1 b3 b2 b2 b1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f3
+ |- ((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> ((((\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))) x) $ i') = ((real_mul (x $ x)) ((A $ i') $ x))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. (((\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))) x) $ i'))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ * / c% c$ f0 b1 clambda / c$ clambda / c$ c$ f1 b2 b1 b1 b0 f2 creal_mul c$ f0 b0 c$ c$ f1 f2 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ * / c% c$ f0 b1 clambda / c$ clambda / c$ c$ f1 b2 b1 b1 b0 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ c$ f1 f2 b0
+ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- (((real_mul (x $ k)) (det (transp A))) = (det (lambdai. (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ f1 f0 cdet ctransp f2 cdet clambda / cCOND c= b0 f0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f1 b1 crow b1 ctransp f2 crow b0 ctransp f2
- |- (!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((% (x $ x)) (lambdai'. ((A $ i') $ x))) = ((% (x $ x)) (lambdai'. ((A $ i') $ x))))))
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c% c$ f1 f0 clambda / c$ c$ f2 b0 f0 c% c$ f1 f0 clambda / c$ c$ f2 b0 f0
- |- ((\g'. (!t'. (!e'. (((i = k) = g') ==> ((g' ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = t')) ==> (((~ g') ==> (((A $ i') $ i) = e')) ==> ((((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i)) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f2 b3 c$ c$ f3 f4 b3 b1 c==> c==> c~ b0 c= c$ c$ f3 f4 f0 b2 c= cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f2 b3 c$ c$ f3 f4 b3 c$ c$ f3 f4 f0 cCOND b0 b1 b2 f5
+ |- ((\A. (!i. (((row i) A) = (lambdaj. ((A $ i) $ j))))) A)
T * / ! c= crow b1 b0 clambda / c$ c$ b0 b1 b2 f0
+ |- (((!g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((% (x $ i)) ((column i) A)) = (g i)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) ==> ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((% (x $ i)) ((column i) A)) = (g i)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)) = ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((% (x $ i)) ((column i) A)) = (g i)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c% c$ f0 b1 ccolumn b1 f1 * b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 ccolumn b1 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c% c$ f0 b1 ccolumn b1 f1 * b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 ccolumn b1 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c% c$ f0 b1 ccolumn b1 f1 * b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 ccolumn b1 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2
- |- (((!g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (x $ x)) ((A $ i') $ x)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) ==> ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (x $ x)) ((A $ i') $ x)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)) = ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (x $ x)) ((A $ i') $ x)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g))
T c= c==> ! c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f0 b1 c$ c$ f1 f2 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b1 c$ c$ f1 f2 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f0 b1 c$ c$ f1 f2 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b1 c$ c$ f1 f2 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f3 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f0 b1 c$ c$ f1 f2 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b1 c$ c$ f1 f2 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f3
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((~ (i = k)) ==> (((row i) (transp A)) = (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)))) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))) = (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))))) = ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A)))))) ((row i) (transp A))) = (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c==> c==> c~ c= f0 f1 c= crow f0 ctransp f2 clambda / c$ clambda / c$ c$ f2 b1 f0 b0 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b0 crow b0 ctransp f2 crow f0 ctransp f2 cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b0 clambda / c$ clambda / c$ c$ f2 b2 b0 b1 clambda / c$ clambda / c$ c$ f2 b1 f0 b0 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b0 crow b0 ctransp f2 crow f0 ctransp f2 cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b0 clambda / c$ clambda / c$ c$ f2 b2 b0 b1 clambda / c$ clambda / c$ c$ f2 b1 f0 b0
+ |- (((!A. ((det A) = (det (transp A)))) ==> ((\A. ((det A) = (det (transp A)))) A)) = ((\A. ((det A) = (det (transp A)))) A))
T c= c==> ! c= cdet b0 cdet ctransp b0 * / c= cdet b0 cdet ctransp b0 f0 * / c= cdet b0 cdet ctransp b0 f0
+ |- ((\x. (!i. ((((% c) x) $ i) = ((real_mul c) (x $ i))))) x)
T * / ! c= c$ c% f0 b0 b1 creal_mul f0 c$ b0 b1 f1
- (((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) |- ((x <= (dimindex UNIV)) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c<= f0 cdimindex part cUNIV cT
- |- (!g. ((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((sum s) (\x. (f x))) = ((sum s) g))))
T c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= csum f0 / * f1 b0 csum f0 f2
- |- (!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))) = ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))))
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c% c$ f1 f0 clambda / c$ clambda / c$ c$ f2 b1 f0 b0 c% c$ f1 f0 clambda / c$ clambda / c$ c$ f2 b1 f0 b0
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((j = k) ==> ((((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i) $ x))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= f1 f2 c= c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b0 ccolumn b0 f4 f0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b0 c$ c$ f4 f0 b0
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))), (((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) /\ ((((\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))) x) $ i') = ((real_mul (x $ x)) ((A $ i') $ x))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= c$ * / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 f1 f0 creal_mul c$ f2 f1 c$ c$ f3 f0 f1
- (((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) /\ (((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))) = ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c% c$ f1 f0 clambda / c$ clambda / c$ c$ f2 b1 f0 b0 c% c$ f1 f0 clambda / c$ clambda / c$ c$ f2 b1 f0 b0
- (i = k) |- ((i = k) /\ (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))))
T c==> c= f0 f1 c/\ c= f0 f1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f2 b0 c$ c$ f3 f4 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f2 b0 c$ c$ f3 f4 b0
- |- ((~ (i = k)) ==> ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) = (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))))
T c==> c~ c= f0 f1 c= clambda / c$ clambda / c$ c$ f2 b1 f0 b0 clambda / c$ clambda / c$ c$ f2 b1 f0 b0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> (((real_mul (x $ x)) ((A $ i') $ x)) = ((real_mul (x $ x)) ((A $ i') $ x))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_mul c$ f0 b0 c$ c$ f1 f2 b0 creal_mul c$ f0 b0 c$ c$ f1 f2 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ c$ f1 f2 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ c$ f1 f2 b0
- |- (((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))) = ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = T)
T c= c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c% c$ f1 f0 clambda / c$ clambda / c$ c$ f2 b1 f0 b0 c% c$ f1 f0 clambda / c$ clambda / c$ c$ f2 b1 f0 b0 cT
- (x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) |- ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) /\ (((real_mul (x $ x)) ((A $ i') $ x)) = ((real_mul (x $ x)) ((A $ i') $ x))))
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f1 f0 c$ c$ f2 f3 f0 creal_mul c$ f1 f0 c$ c$ f2 f3 f0
- (~ (i = k)) |- (~ (k = i))
T c==> c~ c= f0 f1 c~ c= f1 f0
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- (((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> ((((\i. ((% (x $ i)) ((column i) A))) x) $ i) = ((real_mul (x $ x)) ((A $ i) $ x)))) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= c$ * / c% c$ f2 b0 ccolumn b0 f3 f1 f0 creal_mul c$ f2 f1 c$ c$ f3 f0 f1 cT
- |- ((i = k) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))))
T c==> c= f0 f1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f2 b0 c$ c$ f3 f4 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f2 b0 c$ c$ f3 f4 b0
- (~ (i = k)) |- ((k = i) = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
- |- (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))))
T c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ c$ f1 f2 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ c$ f1 f2 b0
- |- ((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> (((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))) = ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1 c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- (((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> ((((\i. ((% (x $ i)) ((column i) A))) x) $ i) = ((real_mul (x $ x)) ((A $ i) $ x))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. (((\i. ((% (x $ i)) ((column i) A))) x) $ i))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i) $ x)))))) = (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. (((\i. ((% (x $ i)) ((column i) A))) x) $ i))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i) $ x))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ * / c% c$ f1 b1 ccolumn b1 f2 b0 f0 creal_mul c$ f1 b0 c$ c$ f2 f0 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ * / c% c$ f1 b1 ccolumn b1 f2 b0 f0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f1 b0 c$ c$ f2 f0 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ * / c% c$ f1 b1 ccolumn b1 f2 b0 f0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f1 b0 c$ c$ f2 f0 b0
- |- ((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> ((((\i. ((% (x $ i)) ((column i) A))) x) $ i) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. (((\i. ((% (x $ i)) ((column i) A))) x) $ i))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ * / c% c$ f0 b1 ccolumn b1 f1 b0 f2 * f3 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ * / c% c$ f0 b1 ccolumn b1 f1 b0 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f3
- |- ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((% (x $ x)) (lambdai'. ((A $ i') $ x))) = (g x)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)
T * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c% c$ f0 b1 clambda / c$ c$ f1 b2 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 clambda / c$ c$ f1 b2 b1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2
- |- ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (x $ x)) ((A $ i') $ x)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f0 b0 c$ c$ f1 f2 b0 * f3 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ c$ f1 f2 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f3
- |- ((\e'. (((i = k) = g') ==> ((g' ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = t')) ==> (((~ g') ==> ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))) = (((COND g') t') e')))))) e')
T * / c==> c= c= f0 f1 f2 c==> c==> f2 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 clambda / c$ clambda / c$ c$ f4 b3 b1 b2 f5 c==> c==> c~ f2 c= clambda / c$ clambda / c$ c$ f4 b2 f0 b1 b0 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b1 clambda / c$ clambda / c$ c$ f4 b3 b1 b2 clambda / c$ clambda / c$ c$ f4 b2 f0 b1 cCOND f2 f5 b0 f6
- |- (((!t'. (!e'. (((i = k) = g') ==> ((g' ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = t')) ==> (((~ g') ==> ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((i = k) = g') ==> ((g' ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = t')) ==> (((~ g') ==> ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((i = k) = g') ==> ((g' ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = t')) ==> (((~ g') ==> ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 clambda / c$ clambda / c$ c$ f4 b4 b2 b3 b0 c==> c==> c~ f2 c= clambda / c$ clambda / c$ c$ f4 b3 f0 b2 b1 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 clambda / c$ clambda / c$ c$ f4 b4 b2 b3 clambda / c$ clambda / c$ c$ f4 b3 f0 b2 cCOND f2 b0 b1 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 clambda / c$ clambda / c$ c$ f4 b4 b2 b3 b0 c==> c==> c~ f2 c= clambda / c$ clambda / c$ c$ f4 b3 f0 b2 b1 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 clambda / c$ clambda / c$ c$ f4 b4 b2 b3 clambda / c$ clambda / c$ c$ f4 b3 f0 b2 cCOND f2 b0 b1 f5 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 clambda / c$ clambda / c$ c$ f4 b4 b2 b3 b0 c==> c==> c~ f2 c= clambda / c$ clambda / c$ c$ f4 b3 f0 b2 b1 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b2 clambda / c$ clambda / c$ c$ f4 b4 b2 b3 clambda / c$ clambda / c$ c$ f4 b3 f0 b2 cCOND f2 b0 b1 f5
- |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((% (x $ i)) (lambdai'. ((A $ i') $ i))) = ((% (x $ i)) (lambdai'. ((A $ i') $ i)))))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i)))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c% c$ f0 b0 clambda / c$ c$ f1 b1 b0 c% c$ f0 b0 clambda / c$ c$ f1 b1 b0 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ c$ f1 b1 b0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ c$ f1 b1 b0
- |- (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdai'. ((A $ i') $ x))))))
T c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ c$ f1 b1 b0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ c$ f1 b1 b0
- |- (((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> (((real_mul (x $ x)) ((A $ i') $ x)) = ((real_mul (x $ x)) ((A $ i') $ x)))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ f1 f0 c$ c$ f2 f3 f0 creal_mul c$ f1 f0 c$ c$ f2 f3 f0 cT
- |- ((((i = k) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))))) ==> (((~ (i = k)) ==> ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))) = (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) e')))) = (((~ (i = k)) ==> ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))) = (((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) e'))))
T c= c==> c==> c= f0 f1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 c==> c==> c~ c= f0 f1 c= clambda / c$ clambda / c$ c$ f3 b1 f0 b0 f4 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 clambda / c$ clambda / c$ c$ f3 b1 f0 b0 cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 f4 c==> c==> c~ c= f0 f1 c= clambda / c$ clambda / c$ c$ f3 b1 f0 b0 f4 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 clambda / c$ clambda / c$ c$ f3 b1 f0 b0 cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ clambda / c$ c$ f3 b2 b0 b1 f4
- |- ((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> (((real_mul (x $ x)) ((A $ i') $ x)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_mul c$ f0 b0 c$ c$ f1 f2 b0 * f3 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ c$ f1 f2 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f3
- |- (((!g. ((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> (((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))) = (g x)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) ==> ((\g. ((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> (((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))) = (g x)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)) = ((\g. ((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> (((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))) = (g x)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c% c$ f0 b1 clambda / c$ clambda / c$ c$ f1 b3 b1 b2 * b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 clambda / c$ clambda / c$ c$ f1 b3 b1 b2 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c% c$ f0 b1 clambda / c$ clambda / c$ c$ f1 b3 b1 b2 * b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 clambda / c$ clambda / c$ c$ f1 b3 b1 b2 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c% c$ f0 b1 clambda / c$ clambda / c$ c$ f1 b3 b1 b2 * b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 clambda / c$ clambda / c$ c$ f1 b3 b1 b2 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2
- |- ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((% (x $ i)) ((row i) (transp A))) = (g i)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((row i) (transp A))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)
T * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c% c$ f0 b1 crow b1 ctransp f1 * b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 crow b1 ctransp f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((\e'. (((i = k) = g') ==> ((g' ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = t')) ==> (((~ g') ==> (((A $ i') $ i) = e')) ==> ((((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i)) = (((COND g') t') e')))))) e')
T * / c==> c= c= f0 f1 f2 c==> c==> f2 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b1 c$ c$ f4 f5 b1 f6 c==> c==> c~ f2 c= c$ c$ f4 f5 f0 b0 c= cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b1 c$ c$ f4 f5 b1 c$ c$ f4 f5 f0 cCOND f2 f6 b0 f7
- |- (((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> (((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))) = ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))))) = (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1 c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ clambda / c$ c$ f1 b2 b0 b1
- (~ (i = k)) |- ((~ (i = k)) /\ ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) = (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))))
T c==> c~ c= f0 f1 c/\ c~ c= f0 f1 c= clambda / c$ clambda / c$ c$ f2 b1 f0 b0 clambda / c$ clambda / c$ c$ f2 b1 f0 b0
- (((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) |- (T = (((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= cT c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV
- |- ((((j = k) ==> ((((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ _3020421) = (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ _3020421))) ==> (((~ (j = k)) ==> (((A $ _3020421) $ j) = e')) ==> ((((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ _3020421)) ((A $ _3020421) $ j)) = (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ _3020421)) e')))) = (((~ (j = k)) ==> (((A $ _3020421) $ j) = e')) ==> ((((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ _3020421)) ((A $ _3020421) $ j)) = (((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) $ _3020421)) e'))))
T c= c==> c==> c= f0 f1 c= c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ c$ f3 b1 b0 f4 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ c$ f3 b1 b0 f4 c==> c==> c~ c= f0 f1 c= c$ c$ f3 f4 f0 f5 c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ c$ f3 b1 b0 f4 c$ c$ f3 f4 f0 cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ c$ f3 b1 b0 f4 f5 c==> c==> c~ c= f0 f1 c= c$ c$ f3 f4 f0 f5 c= cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ c$ f3 b1 b0 f4 c$ c$ f3 f4 f0 cCOND c= f0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b0 clambda / c$ c$ f3 b1 b0 f4 f5
- |- ((T /\ t) = t)
T c= c/\ cT f0 f0
- |- (!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> (((real_mul (x $ x)) ((A $ i') $ x)) = ((real_mul (x $ x)) ((A $ i') $ x)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ f1 f0 c$ c$ f2 f3 f0 creal_mul c$ f1 f0 c$ c$ f2 f3 f0
- |- (((!g. ((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> ((((\i. ((% (x $ i)) ((column i) A))) x) $ i) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. (((\i. ((% (x $ i)) ((column i) A))) x) $ i))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) ==> ((\g. ((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> ((((\i. ((% (x $ i)) ((column i) A))) x) $ i) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. (((\i. ((% (x $ i)) ((column i) A))) x) $ i))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)) = ((\g. ((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> ((((\i. ((% (x $ i)) ((column i) A))) x) $ i) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. (((\i. ((% (x $ i)) ((column i) A))) x) $ i))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ * / c% c$ f0 b2 ccolumn b2 f1 b1 f2 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ * / c% c$ f0 b2 ccolumn b2 f1 b1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ * / c% c$ f0 b2 ccolumn b2 f1 b1 f2 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ * / c% c$ f0 b2 ccolumn b2 f1 b1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f3 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ * / c% c$ f0 b2 ccolumn b2 f1 b1 f2 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ * / c% c$ f0 b2 ccolumn b2 f1 b1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f3
- |- ((\g'. (!t'. (!e'. (((i = k) = g') ==> ((g' ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))))) = t')) ==> (((~ g') ==> ((lambdaj. ((lambdaj. ((A $ j) $ i)) $ j)) = e')) ==> ((((COND (i = k)) ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))) (lambdaj. ((lambdaj. ((A $ j) $ i)) $ j))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 clambda / c$ clambda / c$ c$ f3 b5 b3 b4 b1 c==> c==> c~ b0 c= clambda / c$ clambda / c$ c$ f3 b4 f0 b3 b2 c= cCOND c= f0 f1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f2 b3 clambda / c$ clambda / c$ c$ f3 b5 b3 b4 clambda / c$ clambda / c$ c$ f3 b4 f0 b3 cCOND b0 b1 b2 f4
- |- (((!g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((% (x $ x)) (lambdai'. ((A $ i') $ x))) = (g x)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) ==> ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((% (x $ x)) (lambdai'. ((A $ i') $ x))) = (g x)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)) = ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((% (x $ x)) (lambdai'. ((A $ i') $ x))) = (g x)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g))
T c= c==> ! c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c% c$ f0 b1 clambda / c$ c$ f1 b2 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 clambda / c$ c$ f1 b2 b1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c% c$ f0 b1 clambda / c$ c$ f1 b2 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 clambda / c$ c$ f1 b2 b1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c% c$ f0 b1 clambda / c$ c$ f1 b2 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b1 clambda / c$ c$ f1 b2 b1 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2
- (i = k), (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((% (x $ i)) ((row i) (transp A))) = ((% (x $ k)) (lambdaj. ((lambdaj. ((A $ j) $ k)) $ j))))) = T)
T c==> c= f0 f1 c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c% c$ f2 f0 crow f0 ctransp f3 c% c$ f2 f1 clambda / c$ clambda / c$ c$ f3 b1 f1 b0 cT
- (i = k), (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))), (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((% (x $ i)) ((row i) (transp A))) = ((% (x $ k)) (lambdaj. ((lambdaj. ((A $ j) $ k)) $ j)))))
T c==> c= f0 f1 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c% c$ f2 f0 crow f0 ctransp f3 c% c$ f2 f1 clambda / c$ clambda / c$ c$ f3 b1 f1 b0
- |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((% (x $ i)) (lambdai'. ((A $ i') $ i))) = (g i)))) ==> (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) (lambdai'. ((A $ i') $ i))))) = ((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c% c$ f0 b0 clambda / c$ c$ f1 b1 b0 * f2 b0 c= cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f0 b0 clambda / c$ c$ f1 b1 b0 cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f2
- |- (((i = k) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x)))) = t')) ==> (((~ (i = k)) ==> (((A $ i') $ i) = e')) ==> ((((COND (i = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i') $ x))))) ((A $ i') $ i)) = (((COND (i = k)) t') e'))))
T c==> c==> c= f0 f1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f2 b0 c$ c$ f3 f4 b0 f5 c==> c==> c~ c= f0 f1 c= c$ c$ f3 f4 f0 f6 c= cCOND c= f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f2 b0 c$ c$ f3 f4 b0 c$ c$ f3 f4 f0 cCOND c= f0 f1 f5 f6
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((j = k) ==> ((((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i) $ x)))))) ==> (((~ (j = k)) ==> (((A $ i) $ j) = e')) ==> ((((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j)) = (((COND (j = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i) $ x))))) e')))) = (((~ (j = k)) ==> (((A $ i) $ j) = e')) ==> ((((COND (j = k)) (((vsum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((% (x $ i)) ((column i) A)))) $ i)) ((A $ i) $ j)) = (((COND (j = k)) ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i) $ x))))) e'))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c==> c==> c= f1 f2 c= c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b0 ccolumn b0 f4 f0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b0 c$ c$ f4 f0 b0 c==> c==> c~ c= f1 f2 c= c$ c$ f4 f0 f1 f5 c= cCOND c= f1 f2 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b0 ccolumn b0 f4 f0 c$ c$ f4 f0 f1 cCOND c= f1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b0 c$ c$ f4 f0 b0 f5 c==> c==> c~ c= f1 f2 c= c$ c$ f4 f0 f1 f5 c= cCOND c= f1 f2 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c% c$ f3 b0 ccolumn b0 f4 f0 c$ c$ f4 f0 f1 cCOND c= f1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f3 b0 c$ c$ f4 f0 b0 f5
- (((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) /\ (((real_mul (x $ x)) ((A $ i') $ x)) = ((real_mul (x $ x)) ((A $ i') $ x))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ f1 f0 c$ c$ f2 f3 f0 creal_mul c$ f1 f0 c$ c$ f2 f3 f0
- |- ((!x. ((((NUMERAL (BIT1 _0)) <= x) /\ (x <= (dimindex UNIV))) ==> ((((\i. ((% (x $ i)) ((column i) A))) x) $ i) = ((real_mul (x $ x)) ((A $ i) $ x))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. (((\i. ((% (x $ i)) ((column i) A))) x) $ i))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) ((A $ i) $ x))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ * / c% c$ f0 b1 ccolumn b1 f1 b0 f2 creal_mul c$ f0 b0 c$ c$ f1 f2 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ * / c% c$ f0 b1 ccolumn b1 f1 b0 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ c$ f1 f2 b0
- |- (!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (x $ x)) ((A $ i') $ x)) = ((real_mul (x $ x)) ((A $ i') $ x)))))
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f1 f0 c$ c$ f2 f3 f0 creal_mul c$ f1 f0 c$ c$ f2 f3 f0
- (x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) |- ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) /\ (((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j))) = ((% (x $ x)) (lambdaj. ((lambdaj. ((A $ j) $ x)) $ j)))))
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c% c$ f1 f0 clambda / c$ clambda / c$ c$ f2 b1 f0 b0 c% c$ f1 f0 clambda / c$ clambda / c$ c$ f2 b1 f0 b0
