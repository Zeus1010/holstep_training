N Sort.sorted_size
C |- (!R. (!s1. (!s2. ((((sorted R) s1) s2) ==> ((sizel s1) = (sizel s2))))))
T c==> csorted f0 f1 f2 c= csizel f1 csizel f2
D Seq.perm_eq_size
A |- (!s1. (!s2. (((perm_eq s1) s2) ==> ((sizel s1) = (sizel s2)))))
T c==> cperm_eq f0 f1 c= csizel f0 csizel f1
D Sort.sorted
A |- (!R. (!s. (!s0. ((((sorted R) s) s0) = (((ordered R) s) /\ ((perm_eq s) s0))))))
T c= csorted f0 f1 f2 c/\ cordered f0 f1 cperm_eq f1 f2
+ |- ((!s1. (!s2. ((((sorted R) s1) s2) ==> ((sizel s1) = (sizel s2))))) = T)
T c= ! ! c==> csorted f0 b0 b1 c= csizel b0 csizel b1 cT
- (!x. (!y. (!z. ((((R x) y) /\ ((R y) z)) ==> ((R x) z))))), (!x. (!y. (((R x) y) \/ ((R y) x)))) |- ((!x. (!y. (!z. ((((R x) y) /\ ((R y) z)) ==> ((R x) z))))) /\ (!s. (((sorted R) ((merge_sort R) s)) s)))
T c==> ! ! ! c==> c/\ * * f0 b0 b1 * * f0 b1 b2 * * f0 b0 b2 c==> ! ! c\/ * * f0 b0 b1 * * f0 b1 b0 c/\ ! ! ! c==> c/\ * * f0 b0 b1 * * f0 b1 b2 * * f0 b0 b2 ! csorted f0 cmerge_sort f0 b0 b0
