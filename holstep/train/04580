N Conforming.expand_xfan_eq_aff_gt_aff_ge
C |- (!x. (!V. (!E. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))) ==> ((UNIONS (GSPEC (\GEN%PVAR%5702. (?y. (((SETSPEC GEN%PVAR%5702) (?e. ((e IN E) /\ (y = ((aff_ge (x INSERT EMPTY)) e))))) y))))) = ((UNIONS (GSPEC (\GEN%PVAR%5703. (?e. (((SETSPEC GEN%PVAR%5703) (e IN E)) ((aff_gt (x INSERT EMPTY)) e)))))) UNION (UNIONS (GSPEC (\GEN%PVAR%5704. (?v. (((SETSPEC GEN%PVAR%5704) (v IN V)) ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 f2 c= * part cUNIONS * part cGSPEC / c? / cSETSPEC b0 c? / c/\ cIN b2 f2 c= b1 * * part caff_ge * * part cINSERT f0 part cEMPTY b2 b1 * * part cUNION * part cUNIONS * part cGSPEC / c? / cSETSPEC b0 cIN b1 f2 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 * part cUNIONS * part cGSPEC / c? / cSETSPEC b0 cIN b1 f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D Misc_defs_and_lemmas.IN_ELIM_THM'
A |- ((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D UNION
A |- (!s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))))
T c= * * part cUNION f0 f1 * part cGSPEC / c? / cSETSPEC b0 c\/ cIN b1 f0 cIN b1 f1 b1
D UNIONS
A |- (!s. ((UNIONS s) = (GSPEC (\GEN%PVAR%1. (?x. (((SETSPEC GEN%PVAR%1) (?u. ((u IN s) /\ (x IN u)))) x))))))
T c= * part cUNIONS f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ cIN b2 f0 cIN b1 b2 b1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_UNION
A |- (!s. (!t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t))))))
T c= cIN f0 * * part cUNION f1 f2 c\/ cIN f0 f1 cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D Fan.remark1_fan
A |- (!x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))))
T c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
D Topology.expand_edge_graph_fan
A |- (!x. (!V. (!E. (!e. (((FAN (x , (V , E))) /\ (e IN E)) ==> (?v. (?w. (e = (v INSERT (w INSERT EMPTY))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 cIN f3 f2 c? / c? / c= f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
D Planarity.exists_inf_element_fix_fan
A |- (!x. (!V. (!E. (!v. (!u1. (((FAN (x , (V , E))) /\ ((v IN V) /\ ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> (?u. ((u IN (((set_of_edge v) V) E)) /\ (!w. ((w IN (((set_of_edge v) V) E)) ==> ((real_le ((((azim x) v) u1) u)) ((((azim x) v) u1) w))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN f3 f1 c> cCARD * * * part cset_of_edge f3 f1 f2 cNUMERAL cBIT1 c_0 c? / c/\ cIN b0 * * * part cset_of_edge f3 f1 f2 ! c==> cIN b1 * * * part cset_of_edge f3 f1 f2 creal_le cazim f0 f3 f4 b0 cazim f0 f3 f4 b1
D Planarity.aff_gt_subset_aff_ge
A |- (!x. (!v. (!u. (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))))))
T c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
D Planarity.aff_ge_eq_aff_gt_union_aff_ge
A |- (!x. (!v. (!w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY
+ (e = (v INSERT (w INSERT EMPTY))) |- (((u = ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)))))) = ((u = ((aff_ge (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)))))))
T c==> c= f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> c= f3 * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f5 f3 c\/ c? / c/\ c? / c/\ cIN b1 f6 c= b0 * * part caff_gt * * part cINSERT f4 part cEMPTY b1 cIN f5 b0 c? / c/\ c? / c/\ cIN b1 f7 c= b0 * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f5 b0 c==> c= f3 * * part caff_ge * * part cINSERT f4 part cEMPTY f0 c==> cIN f5 f3 c\/ c? / c/\ c? / c/\ cIN b1 f6 c= b0 * * part caff_gt * * part cINSERT f4 part cEMPTY b1 cIN f5 b0 c? / c/\ c? / c/\ cIN b1 f7 c= b0 * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f5 b0
+ ((\v. (?w. (e = (v INSERT (w INSERT EMPTY))))) v) |- (((?w. (e = (v INSERT (w INSERT EMPTY)))) ==> ((u = ((aff_gt (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))))) = ((u = ((aff_gt (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))))
T c==> * / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1 c= c==> c? / c= f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c==> c= f2 * * part caff_gt * * part cINSERT f3 part cEMPTY f0 c==> cIN f4 f2 c? / c/\ c? / c/\ cIN b1 f5 c= b0 * * part caff_ge * * part cINSERT f3 part cEMPTY b1 cIN f4 b0 c==> c= f2 * * part caff_gt * * part cINSERT f3 part cEMPTY f0 c==> cIN f4 f2 c? / c/\ c? / c/\ cIN b1 f5 c= b0 * * part caff_ge * * part cINSERT f3 part cEMPTY b1 cIN f4 b0
+ ((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) |- (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')) /\ ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x')))))) /\ (!x'. ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')) \/ ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x')))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x'))
T c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 c/\ c/\ ! c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3
+ (?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))), (FAN (x , (V , E))), (x' IN u) |- ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))
T c==> c? / c/\ cIN b0 f0 c= f1 * * part caff_ge * * part cINSERT f2 part cEMPTY b0 c==> cFAN c, f2 c, f3 f0 c==> cIN f4 f1 c\/ c? / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_gt * * part cINSERT f2 part cEMPTY b1 cIN f4 b0 c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f4 b0
+ |- (((!x. (!V. (!E. (!v. (!u1. (((FAN (x , (V , E))) /\ ((v IN V) /\ ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> (?u. ((u IN (((set_of_edge v) V) E)) /\ (!w. ((w IN (((set_of_edge v) V) E)) ==> ((real_le ((((azim x) v) u1) u)) ((((azim x) v) u1) w)))))))))))) ==> ((\x. (!V. (!E. (!v. (!u1. (((FAN (x , (V , E))) /\ ((v IN V) /\ ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> (?u. ((u IN (((set_of_edge v) V) E)) /\ (!w. ((w IN (((set_of_edge v) V) E)) ==> ((real_le ((((azim x) v) u1) u)) ((((azim x) v) u1) w)))))))))))) x)) = ((\x. (!V. (!E. (!v. (!u1. (((FAN (x , (V , E))) /\ ((v IN V) /\ ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> (?u. ((u IN (((set_of_edge v) V) E)) /\ (!w. ((w IN (((set_of_edge v) V) E)) ==> ((real_le ((((azim x) v) u1) u)) ((((azim x) v) u1) w)))))))))))) x))
T c= c==> ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cIN b3 b1 c> cCARD * * * part cset_of_edge b3 b1 b2 cNUMERAL cBIT1 c_0 c? / c/\ cIN b5 * * * part cset_of_edge b3 b1 b2 ! c==> cIN b6 * * * part cset_of_edge b3 b1 b2 creal_le cazim b0 b3 b4 b5 cazim b0 b3 b4 b6 * / ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cIN b3 b1 c> cCARD * * * part cset_of_edge b3 b1 b2 cNUMERAL cBIT1 c_0 c? / c/\ cIN b5 * * * part cset_of_edge b3 b1 b2 ! c==> cIN b6 * * * part cset_of_edge b3 b1 b2 creal_le cazim b0 b3 b4 b5 cazim b0 b3 b4 b6 f0 * / ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cIN b3 b1 c> cCARD * * * part cset_of_edge b3 b1 b2 cNUMERAL cBIT1 c_0 c? / c/\ cIN b5 * * * part cset_of_edge b3 b1 b2 ! c==> cIN b6 * * * part cset_of_edge b3 b1 b2 creal_le cazim b0 b3 b4 b5 cazim b0 b3 b4 b6 f0
+ (((v INSERT (u' INSERT EMPTY)) IN E) /\ (((v INSERT (u' INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u' INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u')) /\ ((~ (v = u')) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u' INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) /\ ((~ (u' IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (u' INSERT EMPTY))))) = (~ (u' IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))), (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) |- (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))
T c==> c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ c= f3 f0 c/\ c~ c= f3 f1 c/\ c~ c= f0 f1 c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ cIN f1 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ cIN f1 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c==> cIN f4 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f3 part cEMPTY b1 cIN f4 b0
- (~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) |- F
T c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
- |- ((\w. (!v. (!x. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F)))) w)
T * / ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cF f1
+ |- ((((!x'. ((x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY)))) = (x' IN (((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY))))))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)))) ==> (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))))) = (((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY))))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)))) ==> (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))))))
T c= c==> c/\ ! c= cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F) |- (((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F) /\ ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F))
T c==> c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c/\ c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
+ |- ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V)
T * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1
- |- ((\x'. (!u'. (!v. (!x. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F))))) x')
T * / ! ! ! c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c\/ caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c\/ caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY b4 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY b0 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cF f0
- |- (((!B. ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)) ==> ((\B. ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)) B)) = ((\B. ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)) B))
T c= c==> ! c==> c~ ! c= c\/ c= b1 f0 c= b1 b0 c\/ c= b1 b0 c= b1 f0 cF * / c==> c~ ! c= c\/ c= b1 f0 c= b1 b0 c\/ c= b1 b0 c= b1 f0 cF f1 * / c==> c~ ! c= c\/ c= b1 f0 c= b1 b0 c\/ c= b1 b0 c= b1 f0 cF f1
- |- ((!v. (!x. (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')))) = T)
T c= ! ! c==> c/\ ! c= caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 c\/ caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 c\/ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 part cEMPTY b2 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY f1 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 cT
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ |- ((\E. (!v. (!u1. (((FAN (x , (V , E))) /\ ((v IN V) /\ ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> (?u. ((u IN (((set_of_edge v) V) E)) /\ (!w. ((w IN (((set_of_edge v) V) E)) ==> ((real_le ((((azim x) v) u1) u)) ((((azim x) v) u1) w)))))))))) E)
T * / ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 b0 cNUMERAL cBIT1 c_0 c? / c/\ cIN b3 * * * part cset_of_edge b1 f1 b0 ! c==> cIN b4 * * * part cset_of_edge b1 f1 b0 creal_le cazim f0 b1 b2 b3 cazim f0 b1 b2 b4 f2
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ (v IN V), (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) |- ((\u1. ((?v. ((v IN V) /\ (u1 = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u1))) ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)))
T c==> cIN f0 f1 c==> cIN f2 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY * / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f2 b0 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY
+ |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
+ (FAN (x , (V , E))), (v IN V), (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) |- (!u'. (((\u. ((u IN (((set_of_edge v) V) E)) /\ (!w. ((w IN (((set_of_edge v) V) E)) ==> ((real_le ((((azim x) v) u1) u)) ((((azim x) v) u1) w)))))) u') ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN f3 f1 c==> cIN f4 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY ! c==> * / c/\ cIN b1 * * * part cset_of_edge f3 f1 f2 ! c==> cIN b2 * * * part cset_of_edge f3 f1 f2 creal_le cazim f0 f3 f5 b1 cazim f0 f3 f5 b2 b0 c? / c/\ c? / c/\ cIN b2 f2 c= b1 * * part caff_ge * * part cINSERT f0 part cEMPTY b2 cIN f4 b1
+ (x = A), (((~ (x = A)) /\ (~ (x = B))) /\ ((x = B) \/ (x = A))) |- ((A = A) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 c==> c= f1 f1 cF
- (x = B) |- ((~ (x = A)) = (~ (B = A)))
T c==> c= f0 f1 c= c~ c= f0 f2 c~ c= f1 f2
+ ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) |- ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) \/ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))))
T c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0
+ |- (!x. (!V. (!E. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))) ==> (!x'. ((?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))) = ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 f2 ! c= c? / c/\ c? / c/\ cIN b2 f2 c= b1 * * part caff_ge * * part cINSERT f0 part cEMPTY b2 cIN b0 b1 c\/ c? / c/\ c? / c/\ cIN b2 f2 c= b1 * * part caff_gt * * part cINSERT f0 part cEMPTY b2 cIN b0 b1 c? / c/\ c? / c/\ cIN b2 f1 c= b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY cIN b0 b1
+ |- (((!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) ==> ((\t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) t)) = ((\t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) t))
T c= c==> ! c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 * / c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 f1 * / c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 f1
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ (x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) = T)
T c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ |- (((!E. (!e. (((FAN (x , (V , E))) /\ (e IN E)) ==> (?v. (?w. (e = (v INSERT (w INSERT EMPTY)))))))) ==> ((\E. (!e. (((FAN (x , (V , E))) /\ (e IN E)) ==> (?v. (?w. (e = (v INSERT (w INSERT EMPTY)))))))) E)) = ((\E. (!e. (((FAN (x , (V , E))) /\ (e IN E)) ==> (?v. (?w. (e = (v INSERT (w INSERT EMPTY)))))))) E))
T c= c==> ! ! c==> c/\ cFAN c, f0 c, f1 b0 cIN b1 b0 c? / c? / c= b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / ! c==> c/\ cFAN c, f0 c, f1 b0 cIN b1 b0 c? / c? / c= b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2 * / ! c==> c/\ cFAN c, f0 c, f1 b0 cIN b1 b0 c? / c? / c= b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2
- |- ((~ (B = B)) ==> (B = B))
T c==> c~ c= f0 f0 c= f0 f0
- |- (((((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)) ==> (((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F))) = (((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)))
T c= c==> c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
- (x = B), (((~ (x = A)) /\ (~ (x = B))) /\ ((x = B) \/ (x = A))) |- (~ (B = A))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c~ c= f0 f1 c\/ c= f0 f1 c= f0 f2 c~ c= f1 f2
+ (FAN (x , (V , E))), (e = (v INSERT (w INSERT EMPTY))), (e IN E) |- ((u = ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))))
T c==> cFAN c, f0 c, f1 f2 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cIN f3 f2 c==> c= f6 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cIN f7 f6 c\/ c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 cIN f7 b0 c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f7 b0
+ (v IN V) |- ((x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)))))
T c==> cIN f0 f1 c==> cIN f2 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY c\/ c? / c/\ c? / c/\ cIN b1 f4 c= b0 * * part caff_gt * * part cINSERT f3 part cEMPTY b1 cIN f2 b0 c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f2 b0
+ ((v INSERT (w INSERT EMPTY)) IN E), (x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)))))
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> cIN f3 * * part caff_gt * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f3 * * part caff_gt * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_gt * * part cINSERT f4 part cEMPTY b1 cIN f3 b0 c? / c/\ c? / c/\ cIN b1 f5 c= b0 * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f3 b0
+ |- ((\v'. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v') V) E)) /\ ((((v' INSERT (v INSERT EMPTY)) IN E) = (v IN (((set_of_edge v') V) E))) /\ (((v' INSERT (v INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v' INSERT (v INSERT EMPTY))))) /\ ((~ (x = v')) /\ ((~ (x = v)) /\ ((~ (v' = v)) /\ (((DISJOINT (x INSERT (v' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (v' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (v' INSERT EMPTY))))) /\ ((v' IN V) /\ ((~ (collinear (x INSERT (v' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (v' INSERT EMPTY)))))))))))))))))))) w)
T * / c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f4
- |- (((!x. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F)) ==> ((\x. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F)) x)) = ((\x. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F)) x))
T c= c==> ! c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 c\/ caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 c\/ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b1 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY f2 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF * / c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 c\/ caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 c\/ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b1 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY f2 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF f3 * / c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 c\/ caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 c\/ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b1 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY f2 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF f3
+ (FAN (x , (V , E))), (e IN E) |- (((!x''. (((\w. (e = (v INSERT (w INSERT EMPTY)))) x'') ==> ((u = ((aff_gt (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))))) ==> ((?w. (e = (v INSERT (w INSERT EMPTY)))) ==> ((u = ((aff_gt (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))))) = ((?w. (e = (v INSERT (w INSERT EMPTY)))) ==> ((u = ((aff_gt (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN f3 f2 c= c==> ! c==> * / c= f3 * * part cINSERT f4 * * part cINSERT b1 part cEMPTY b0 c==> c= f5 * * part caff_gt * * part cINSERT f0 part cEMPTY f3 c==> cIN f6 f5 c? / c/\ c? / c/\ cIN b2 f2 c= b1 * * part caff_ge * * part cINSERT f0 part cEMPTY b2 cIN f6 b1 c==> c? / c= f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY c==> c= f5 * * part caff_gt * * part cINSERT f0 part cEMPTY f3 c==> cIN f6 f5 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f6 b0 c==> c? / c= f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY c==> c= f5 * * part caff_gt * * part cINSERT f0 part cEMPTY f3 c==> cIN f6 f5 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f6 b0
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ (FAN (x , (V , E))), ((v INSERT (w INSERT EMPTY)) IN E) |- (((v INSERT (w INSERT EMPTY)) IN E) /\ ((u = ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> c= f5 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f6 f5 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f6 b0
+ (x = A), (((~ (x = A)) /\ (~ (x = B))) /\ ((x = B) \/ (x = A))) |- (~ (A = A))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 c~ c= f1 f1
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ |- (((!x. (!v. (!u. (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))))) ==> ((\x. (!v. (!u. (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))))) x)) = ((\x. (!v. (!u. (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))))) x))
T c= c==> ! ! ! c==> cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c==> cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0 * / ! ! c==> cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0
+ (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), ((v INSERT (w INSERT EMPTY)) IN E), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((w IN V) /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) = ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))
T c==> c~ c= f0 f1 c==> c~ c= f2 f0 c==> c~ c= f2 f1 c==> c~ cIN f1 * part caff * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c==> cFAN c, f2 c, f3 f4 c==> c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ cIN f1 * part caff * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f4 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ cIN f1 f3 c= * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY
- ((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) |- ((\x'. ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')) \/ ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) _3320035)
T c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 * / c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 f4
+ (?u1. ((?v. ((v IN V) /\ (u1 = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u1))) |- ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))
T c==> c? / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f2 b0 c\/ c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_gt * * part cINSERT f1 part cEMPTY b1 cIN f2 b0 c? / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f2 b0
+ |- ((((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge w) V) E)) /\ ((((w INSERT (v INSERT EMPTY)) IN E) = (v IN (((set_of_edge w) V) E))) /\ (((w INSERT (v INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (w INSERT (v INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (x = v)) /\ ((~ (w = v)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (w INSERT EMPTY))))) /\ ((w IN V) /\ ((~ (collinear (x INSERT (w INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (w INSERT EMPTY))))))))))))))))))) ==> (w IN V)) = (w IN V))
T c= c==> c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cIN f3 f1 cIN f3 f1
- ((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) |- (((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') ==> F) = F)
T c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 c= c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF cF
- |- ((!A. (!B. (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A)))))) = (!A. (!B. ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F))))
T c= ! ! ! c= c\/ c= b2 b0 c= b2 b1 c\/ c= b2 b1 c= b2 b0 ! ! c==> c~ ! c= c\/ c= b2 b0 c= b2 b1 c\/ c= b2 b1 c= b2 b0 cF
+ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY))))), ((v INSERT (u' INSERT EMPTY)) IN E) |- (((v INSERT (u' INSERT EMPTY)) IN E) /\ ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY)))))
T c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c/\ cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY))))), ((v INSERT (u' INSERT EMPTY)) IN E), (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) |- (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))
T c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> cIN f4 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f4 b0
+ (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))))), ((v INSERT (w INSERT EMPTY)) IN E) |- ((u = ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))))
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> cFAN c, f0 c, f3 f4 c==> c/\ c~ c= f0 f2 c/\ c~ c= f1 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> c= f5 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f6 f5 c\/ c? / c/\ c? / c/\ cIN b1 f4 c= b0 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 cIN f6 b0 c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f6 b0
- ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F), (((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F)) |- ((((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F)) /\ ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F))
T c==> c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c==> c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c/\ c==> c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
+ |- (((!u. (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> ((\u. (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) w)) = ((\u. (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) w))
T c= c==> ! c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * / c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2 * / c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2
+ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY))))), ((v INSERT (u' INSERT EMPTY)) IN E), (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) |- ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY))))) /\ (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> cIN f4 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f4 b0
+ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))), ((v INSERT (w INSERT EMPTY)) IN E) |- ((u = ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))))
T c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c~ cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ cIN f2 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c~ cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> c= f5 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c==> cIN f6 f5 c? / c/\ c? / c/\ cIN b1 f4 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f6 b0
- |- ((!x''. ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) \/ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x''))) = ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) \/ (!x'. (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))))
T c= ! c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))) |- (((?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))) = ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))) = T)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c= c= c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 cIN f3 b0 c\/ c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_gt * * part cINSERT f2 part cEMPTY b1 cIN f3 b0 c? / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f3 b0 cT
+ (v IN V) |- ((((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))) = (((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))))
T c==> cIN f0 f1 c= c==> c> cCARD * * * part cset_of_edge f0 f1 f2 cNUMERAL cBIT1 c_0 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f3 part cEMPTY b1 cIN f4 b0 c==> c==> cIN f0 f1 c> cCARD * * * part cset_of_edge f0 f1 f2 cNUMERAL cBIT1 c_0 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f3 part cEMPTY b1 cIN f4 b0
- (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')), ((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) |- F
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 cF
+ |- ((!E. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))) ==> (!x'. ((?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))) = ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)))))))) = T)
T c= ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 b0 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 b0 ! c= c? / c/\ c? / c/\ cIN b3 b0 c= b2 * * part caff_ge * * part cINSERT f0 part cEMPTY b3 cIN b1 b2 c\/ c? / c/\ c? / c/\ cIN b3 b0 c= b2 * * part caff_gt * * part cINSERT f0 part cEMPTY b3 cIN b1 b2 c? / c/\ c? / c/\ cIN b3 f1 c= b2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b3 part cEMPTY cIN b1 b2 cT
+ (e = (v INSERT (w INSERT EMPTY))) |- ((((v INSERT (w INSERT EMPTY)) IN E) ==> ((u = ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))))) = ((e IN E) ==> ((u = ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))))))
T c==> c= f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f4 * * part caff_gt * * part cINSERT f5 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f6 f4 c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f5 part cEMPTY b1 cIN f6 b0 c==> cIN f0 f3 c==> c= f4 * * part caff_gt * * part cINSERT f5 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f6 f4 c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f5 part cEMPTY b1 cIN f6 b0
+ |- ((t \/ T) = T)
T c= c\/ f0 cT cT
+ (v IN V), (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) |- (?u1. ((?v. ((v IN V) /\ (u1 = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u1)))
T c==> cIN f0 f1 c==> cIN f2 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f2 b0
+ (((x = A) \/ (x = B)) /\ ((~ (x = B)) /\ (~ (x = A)))) |- ((x = B) ==> F)
T c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f2 c~ c= f0 f1 c==> c= f0 f2 cF
- ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F) |- (((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F) /\ ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F))
T c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c/\ c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
+ |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ |- (((~ (((x = A) \/ (x = B)) = ((x = B) \/ (x = A)))) ==> F) = (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))
T c= c==> c~ c= c\/ c= f0 f1 c= f0 f2 c\/ c= f0 f2 c= f0 f1 cF c= c\/ c= f0 f1 c= f0 f2 c\/ c= f0 f2 c= f0 f1
- (~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) |- ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) /\ F)
T c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c/\ c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
+ ((v INSERT (u' INSERT EMPTY)) IN E) |- (((v INSERT (u' INSERT EMPTY)) IN E) = T)
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c= cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cT
+ (x = B), (((~ (x = A)) /\ (~ (x = B))) /\ ((x = B) \/ (x = A))) |- F
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c~ c= f0 f1 c\/ c= f0 f1 c= f0 f2 cF
- |- ((!x. (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) = T)
T c= ! c==> c/\ ! c= caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 c\/ caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 c\/ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b1 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY f2 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cT
+ |- (((?e. ((e IN E) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))))) = ((\u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))) ((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY)))))
T c= c/\ c? / c/\ cIN b0 f0 c= * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f1 part cEMPTY b0 cIN f4 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY b1 cIN f4 b0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (v IN V) |- (?v'. ((v' IN V) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) = ((aff_ge (x INSERT EMPTY)) (v' INSERT EMPTY)))))
T c==> cIN f0 f1 c? / c/\ cIN b0 f1 c= * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f0 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY
+ (?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))), (FAN (x , (V , E))), ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u)) |- (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))
T c==> c? / c/\ cIN b0 f0 c= f1 * * part caff_gt * * part cINSERT f2 part cEMPTY b0 c==> cFAN c, f2 c, f3 f0 c==> c/\ c? / c/\ cIN b0 f0 c= f1 * * part caff_gt * * part cINSERT f2 part cEMPTY b0 cIN f4 f1 c? / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 cIN f4 b0
+ (?u1. ((?v. ((v IN V) /\ (u1 = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u1))) |- (T = ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)))))
T c==> c? / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f2 b0 c= cT c\/ c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_gt * * part cINSERT f1 part cEMPTY b1 cIN f2 b0 c? / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f2 b0
- ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F) |- ((((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F)) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F))
T c==> c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c==> c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
+ (FAN (x , (V , E))), (e IN E) |- ((u = ((aff_ge (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN f3 f2 c==> c= f4 * * part caff_ge * * part cINSERT f0 part cEMPTY f3 c==> cIN f5 f4 c\/ c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 cIN f5 b0 c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f5 b0
- ((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) |- (!x'. ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')) \/ ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x')))))
T c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 ! c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0
- (u = (GSPEC (\GEN%PVAR%0. (?x'. (((SETSPEC GEN%PVAR%0) ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (x' IN (GSPEC (\GEN%PVAR%0. (?x'. (((SETSPEC GEN%PVAR%0) ((x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) \/ (x' IN ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))) x'))))))) x'))))) |- ((\v'. ((v' IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v' INSERT EMPTY))))) = (\v'. ((v' IN V) /\ ((GSPEC (\GEN%PVAR%0. (?x'. (((SETSPEC GEN%PVAR%0) ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (x' IN (GSPEC (\GEN%PVAR%0. (?x'. (((SETSPEC GEN%PVAR%0) ((x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) \/ (x' IN ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))) x'))))))) x')))) = ((aff_ge (x INSERT EMPTY)) (v' INSERT EMPTY))))))
T c==> c= f0 * part cGSPEC / c? / cSETSPEC b0 c\/ cIN b1 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b1 * part cGSPEC / c? / cSETSPEC b2 c\/ cIN b2 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN b2 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b2 b1 c= / c/\ cIN b0 f4 c= f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY / c/\ cIN b0 f4 c= * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b2 * part cGSPEC / c? / cSETSPEC b3 c\/ cIN b3 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN b3 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b3 b2 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY
+ ((\u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) u) |- ((((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u)) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))) = (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c==> * / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_gt * * part cINSERT f1 part cEMPTY b1 cIN f2 b0 f3 c= c==> c/\ c? / c/\ cIN b0 f0 c= f3 * * part caff_gt * * part cINSERT f1 part cEMPTY b0 cIN f2 f3 c? / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY b1 cIN f2 b0 c? / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY b1 cIN f2 b0
- |- (((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) ==> F) = (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))
T c= c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
+ (FAN (x , (V , E))) |- (((!x. (((\u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) x) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))) = ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))))
T c==> cFAN c, f0 c, f1 f2 c= c==> ! c==> * / c/\ c? / c/\ cIN b2 f2 c= b1 * * part caff_gt * * part cINSERT f0 part cEMPTY b2 cIN f3 b1 b0 c? / c/\ c? / c/\ cIN b2 f2 c= b1 * * part caff_ge * * part cINSERT f0 part cEMPTY b2 cIN f3 b1 c==> c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 cIN f3 b0 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f3 b0 c==> c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 cIN f3 b0 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f3 b0
+ (~ (v = w)), (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))), ((v INSERT (w INSERT EMPTY)) IN E), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) |- ((u = ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))))
T c==> c~ c= f0 f1 c==> c~ c= f2 f0 c==> c~ c= f2 f1 c==> cFAN c, f2 c, f3 f4 c==> c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ cIN f1 * part caff * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c/\ cIN f0 f3 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ cIN f1 * part caff * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f4 c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c= f5 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f6 f5 c\/ c? / c/\ c? / c/\ cIN b1 f4 c= b0 * * part caff_gt * * part cINSERT f2 part cEMPTY b1 cIN f6 b0 c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f6 b0
- (?w. (e = (v INSERT (w INSERT EMPTY)))), (FAN (x , (V , E))), (e IN E) |- ((u = ((aff_ge (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))))
T c==> c? / c= f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c==> cFAN c, f2 c, f3 f4 c==> cIN f0 f4 c==> c= f5 * * part caff_ge * * part cINSERT f2 part cEMPTY f0 c==> cIN f6 f5 c\/ c? / c/\ c? / c/\ cIN b1 f4 c= b0 * * part caff_gt * * part cINSERT f2 part cEMPTY b1 cIN f6 b0 c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f6 b0
+ (FAN (x , (V , E))), (e = (v INSERT (w INSERT EMPTY))), (e IN E) |- ((u = ((aff_gt (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))))
T c==> cFAN c, f0 c, f1 f2 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cIN f3 f2 c==> c= f6 * * part caff_gt * * part cINSERT f0 part cEMPTY f3 c==> cIN f7 f6 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f7 b0
+ |- (((!u1. (((FAN (x , (V , E))) /\ ((v IN V) /\ ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> (?u. ((u IN (((set_of_edge v) V) E)) /\ (!w. ((w IN (((set_of_edge v) V) E)) ==> ((real_le ((((azim x) v) u1) u)) ((((azim x) v) u1) w)))))))) ==> ((\u1. (((FAN (x , (V , E))) /\ ((v IN V) /\ ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> (?u. ((u IN (((set_of_edge v) V) E)) /\ (!w. ((w IN (((set_of_edge v) V) E)) ==> ((real_le ((((azim x) v) u1) u)) ((((azim x) v) u1) w)))))))) u1)) = ((\u1. (((FAN (x , (V , E))) /\ ((v IN V) /\ ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> (?u. ((u IN (((set_of_edge v) V) E)) /\ (!w. ((w IN (((set_of_edge v) V) E)) ==> ((real_le ((((azim x) v) u1) u)) ((((azim x) v) u1) w)))))))) u1))
T c= c==> ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN f3 f1 c> cCARD * * * part cset_of_edge f3 f1 f2 cNUMERAL cBIT1 c_0 c? / c/\ cIN b1 * * * part cset_of_edge f3 f1 f2 ! c==> cIN b2 * * * part cset_of_edge f3 f1 f2 creal_le cazim f0 f3 b0 b1 cazim f0 f3 b0 b2 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN f3 f1 c> cCARD * * * part cset_of_edge f3 f1 f2 cNUMERAL cBIT1 c_0 c? / c/\ cIN b1 * * * part cset_of_edge f3 f1 f2 ! c==> cIN b2 * * * part cset_of_edge f3 f1 f2 creal_le cazim f0 f3 b0 b1 cazim f0 f3 b0 b2 f4 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN f3 f1 c> cCARD * * * part cset_of_edge f3 f1 f2 cNUMERAL cBIT1 c_0 c? / c/\ cIN b1 * * * part cset_of_edge f3 f1 f2 ! c==> cIN b2 * * * part cset_of_edge f3 f1 f2 creal_le cazim f0 f3 b0 b1 cazim f0 f3 b0 b2 f4
+ ((\u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))) u) |- ((((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))) = (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c==> * / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f2 b0 f3 c= c==> c/\ c? / c/\ cIN b0 f0 c= f3 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY cIN f2 f3 c? / c/\ c? / c/\ cIN b1 f4 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY b1 cIN f2 b0 c? / c/\ c? / c/\ cIN b1 f4 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY b1 cIN f2 b0
+ (FAN (x , (V , E))), (v IN V), (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) |- (((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN f3 f1 c==> cIN f4 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c> cCARD * * * part cset_of_edge f3 f1 f2 cNUMERAL cBIT1 c_0 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f4 b0
+ (v IN V), (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) |- ((x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) /\ ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)))))
T c==> cIN f0 f1 c==> cIN f2 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ cIN f2 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY c\/ c? / c/\ c? / c/\ cIN b1 f4 c= b0 * * part caff_gt * * part cINSERT f3 part cEMPTY b1 cIN f2 b0 c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f2 b0
- (~ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')), ((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x'))
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2
+ (FAN (x , (V , E))) |- (((\u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))) u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)))))
T c==> cFAN c, f0 c, f1 f2 c==> * / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f3 b0 f4 c\/ c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 cIN f3 b0 c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f3 b0
+ |- ((((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))))) ==> ((u = ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))))) = ((u = ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)))))))
T c= c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c= f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f4 f3 c\/ c? / c/\ c? / c/\ cIN b1 f5 c= b0 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 cIN f4 b0 c? / c/\ c? / c/\ cIN b1 f6 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f4 b0 c==> c= f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f4 f3 c\/ c? / c/\ c? / c/\ cIN b1 f5 c= b0 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 cIN f4 b0 c? / c/\ c? / c/\ cIN b1 f6 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f4 b0
+ ((v INSERT (w INSERT EMPTY)) IN E), (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- ((x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> cIN f3 * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f3 * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f4 part cEMPTY b1 cIN f3 b0
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ |- ((((v INSERT (u' INSERT EMPTY)) IN E) /\ ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))))) = ((\e. ((e IN E) /\ ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) e)))) (v INSERT (u' INSERT EMPTY))))
T c= c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c= * * part cUNION * * part caff_gt * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * / c/\ cIN b0 f2 c= * * part cUNION * * part caff_gt * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f3 part cEMPTY b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- (((!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) ==> ((\u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) v)) = ((\u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) v))
T c= c==> ! ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * / ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY f3 * / ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)))), (v IN V), (x' IN u) |- (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> c/\ cIN f3 f0 c= f4 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f3 f0 c==> cIN f5 f4 c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 cIN f5 b0
- (?v. (?w. (e = (v INSERT (w INSERT EMPTY))))), (FAN (x , (V , E))), (e IN E) |- ((?v. (?w. (e = (v INSERT (w INSERT EMPTY))))) /\ ((u = ((aff_ge (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)))))))
T c==> c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c==> cFAN c, f1 c, f2 f3 c==> cIN f0 f3 c/\ c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c==> c= f4 * * part caff_ge * * part cINSERT f1 part cEMPTY f0 c==> cIN f5 f4 c\/ c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_gt * * part cINSERT f1 part cEMPTY b1 cIN f5 b0 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f5 b0
- (~ F), (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')), ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ cF cF
+ (FAN (x , (V , E))) |- ((((\u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))) u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))) = T)
T c==> cFAN c, f0 c, f1 f2 c= c==> * / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f3 b0 f4 c\/ c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 cIN f3 b0 c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f3 b0 cT
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (v IN V), (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) |- ((?v'. ((v' IN V) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) = ((aff_ge (x INSERT EMPTY)) (v' INSERT EMPTY))))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))
T c==> cIN f0 f1 c==> cIN f2 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ c? / c/\ cIN b0 f1 c= * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
+ ((v INSERT (w INSERT EMPTY)) IN E) |- ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)))))
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> cIN f3 * * part caff_gt * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_gt * * part cINSERT f4 part cEMPTY b1 cIN f3 b0 c? / c/\ c? / c/\ cIN b1 f5 c= b0 * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f3 b0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (v IN V), (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) |- ((x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) /\ (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cIN f3 f0 c==> cIN f4 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 cIN f4 b0
+ (((x = A) \/ (x = B)) /\ ((~ (x = B)) /\ (~ (x = A)))) |- (~ (x = A))
T c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f2 c~ c= f0 f1 c~ c= f0 f1
+ |- ((((v INSERT (w INSERT EMPTY)) IN E) /\ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))) = ((\e. ((e IN E) /\ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = ((aff_gt (x INSERT EMPTY)) e)))) (v INSERT (w INSERT EMPTY))))
T c= c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c= * * part caff_gt * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * / c/\ cIN b0 f2 c= * * part caff_gt * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f3 part cEMPTY b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ ((\v. (?w. (e = (v INSERT (w INSERT EMPTY))))) v) |- (?w. (e = (v INSERT (w INSERT EMPTY))))
T c==> * / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1 c? / c= f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY
+ |- ((\u. (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) w)
T * / c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2
+ |- ((\s. ((UNIONS s) = (GSPEC (\GEN%PVAR%1. (?x. (((SETSPEC GEN%PVAR%1) (?u. ((u IN s) /\ (x IN u)))) x)))))) s)
T * / c= * part cUNIONS b0 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ cIN b3 b0 cIN b2 b3 b2 f0
+ |- ((\v. (!w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))))))) v)
T * / ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY f1
+ (~ (v = w)), (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))), ((v INSERT (w INSERT EMPTY)) IN E), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((u = ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))))
T c==> c~ c= f0 f1 c==> c~ c= f2 f0 c==> c~ c= f2 f1 c==> cFAN c, f2 c, f3 f4 c==> c/\ c~ cIN f1 * part caff * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c/\ cIN f0 f3 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ cIN f1 * part caff * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f4 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c= f5 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f6 f5 c\/ c? / c/\ c? / c/\ cIN b1 f4 c= b0 * * part caff_gt * * part cINSERT f2 part cEMPTY b1 cIN f6 b0 c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f6 b0
+ (FAN (x , (V , E))), (e IN E) |- ((e = (v INSERT (w INSERT EMPTY))) ==> ((u = ((aff_ge (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)))))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN f3 f2 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c= f6 * * part caff_ge * * part cINSERT f0 part cEMPTY f3 c==> cIN f7 f6 c\/ c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 cIN f7 b0 c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f7 b0
+ ((\v. (?w. (e = (v INSERT (w INSERT EMPTY))))) v) |- (((?w. (e = (v INSERT (w INSERT EMPTY)))) ==> ((u = ((aff_ge (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))))) = ((u = ((aff_ge (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)))))))
T c==> * / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1 c= c==> c? / c= f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c==> c= f2 * * part caff_ge * * part cINSERT f3 part cEMPTY f0 c==> cIN f4 f2 c\/ c? / c/\ c? / c/\ cIN b1 f5 c= b0 * * part caff_gt * * part cINSERT f3 part cEMPTY b1 cIN f4 b0 c? / c/\ c? / c/\ cIN b1 f6 c= b0 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f4 b0 c==> c= f2 * * part caff_ge * * part cINSERT f3 part cEMPTY f0 c==> cIN f4 f2 c\/ c? / c/\ c? / c/\ cIN b1 f5 c= b0 * * part caff_gt * * part cINSERT f3 part cEMPTY b1 cIN f4 b0 c? / c/\ c? / c/\ cIN b1 f6 c= b0 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f4 b0
+ (FAN (x , (V , E))) |- (((\u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c==> cFAN c, f0 c, f1 f2 c==> * / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 cIN f3 b0 f4 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f3 b0
- (~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) |- ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) /\ F)
T c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c/\ c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
+ ((v INSERT (w INSERT EMPTY)) IN E), (x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) |- (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> cIN f3 * * part caff_gt * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f4 part cEMPTY b1 cIN f3 b0
+ |- ((\x. (!V. (!E. (!e. (((FAN (x , (V , E))) /\ (e IN E)) ==> (?v. (?w. (e = (v INSERT (w INSERT EMPTY)))))))))) x)
T * / ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 cIN b3 b2 c? / c? / c= b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f0
+ ((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) |- ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) _3320034) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) _3320034))
T c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4
+ (((~ (x = A)) /\ (~ (x = B))) /\ ((x = B) \/ (x = A))) |- (~ (x = A))
T c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 c~ c= f0 f1
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ ((\v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) v) |- ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))
T c==> * / c/\ cIN b0 f0 c= f1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY f3 c/\ cIN f3 f0 c= f1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
- (~ F), (x = B), (((~ (x = A)) /\ (~ (x = B))) /\ ((x = B) \/ (x = A))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c~ c= f0 f1 c\/ c= f0 f1 c= f0 f2 c/\ c~ cF cF
+ |- ((x' IN (GSPEC (\GEN%PVAR%1. (?x'. (((SETSPEC GEN%PVAR%1) (?u. ((u IN (GSPEC (\GEN%PVAR%5704. (?v. (((SETSPEC GEN%PVAR%5704) (v IN V)) ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))))) /\ (x' IN u)))) x'))))) = (?u. ((u IN (GSPEC (\GEN%PVAR%5704. (?v. (((SETSPEC GEN%PVAR%5704) (v IN V)) ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))))) /\ (x' IN u))))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ cIN b2 * part cGSPEC / c? / cSETSPEC b3 cIN b4 f1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT b4 part cEMPTY cIN b1 b2 b1 c? / c/\ cIN b0 * part cGSPEC / c? / cSETSPEC b1 cIN b2 f1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT b2 part cEMPTY cIN f0 b0
+ (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), ((v INSERT (w INSERT EMPTY)) IN E), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge w) V) E)) /\ ((((w INSERT (v INSERT EMPTY)) IN E) = (v IN (((set_of_edge w) V) E))) /\ (((w INSERT (v INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (w INSERT (v INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (x = v)) /\ ((~ (w = v)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (w INSERT EMPTY))))) /\ ((w IN V) /\ ((~ (collinear (x INSERT (w INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (w INSERT EMPTY))))))))))))))))))) ==> (w IN V))
T c==> c~ c= f0 f1 c==> c~ c= f2 f0 c==> c~ c= f2 f1 c==> c~ cIN f1 * part caff * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c==> cFAN c, f2 c, f3 f4 c==> c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ cIN f1 * part caff * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f4 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c==> cFAN c, f2 c, f3 f4 c/\ cFINITE * * * part cset_of_edge f1 f3 f4 c/\ c= cIN * * part cINSERT f1 * * part cINSERT f0 part cEMPTY f4 cIN f0 * * * part cset_of_edge f1 f3 f4 c==> cIN * * part cINSERT f1 * * part cINSERT f0 part cEMPTY f4 c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c/\ c~ c= f2 f1 c/\ c~ c= f2 f0 c/\ c~ c= f1 f0 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c/\ c~ cIN f0 * part caff * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f3 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c~ cIN f0 * part caff * * part cINSERT f2 * * part cINSERT f1 part cEMPTY cIN f1 f3
+ |- (((!V. (!E. (!e. (((FAN (x , (V , E))) /\ (e IN E)) ==> (?v. (?w. (e = (v INSERT (w INSERT EMPTY))))))))) ==> ((\V. (!E. (!e. (((FAN (x , (V , E))) /\ (e IN E)) ==> (?v. (?w. (e = (v INSERT (w INSERT EMPTY))))))))) V)) = ((\V. (!E. (!e. (((FAN (x , (V , E))) /\ (e IN E)) ==> (?v. (?w. (e = (v INSERT (w INSERT EMPTY))))))))) V))
T c= c==> ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 cIN b2 b1 c? / c? / c= b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * / ! ! c==> c/\ cFAN c, f0 c, b0 b1 cIN b2 b1 c? / c? / c= b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f1 * / ! ! c==> c/\ cFAN c, f0 c, b0 b1 cIN b2 b1 c? / c? / c= b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f1
+ ((~ (u' IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (u' INSERT EMPTY))))) = (~ (u' IN (aff (x INSERT (v INSERT EMPTY))))))), ((v INSERT (u' INSERT EMPTY)) IN E), (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) |- (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))
T c==> c/\ c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f2 * * part cINSERT f0 part cEMPTY f3 c==> cIN f4 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY b1 cIN f4 b0
- ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) |- ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))
T c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
+ ((\u. ((u IN (((set_of_edge v) V) E)) /\ (!w. ((w IN (((set_of_edge v) V) E)) ==> ((real_le ((((azim x) v) u1) u)) ((((azim x) v) u1) w)))))) u') |- ((u' IN (((set_of_edge v) V) E)) /\ (!w. ((w IN (((set_of_edge v) V) E)) ==> ((real_le ((((azim x) v) u1) u')) ((((azim x) v) u1) w)))))
T c==> * / c/\ cIN b0 * * * part cset_of_edge f0 f1 f2 ! c==> cIN b1 * * * part cset_of_edge f0 f1 f2 creal_le cazim f3 f0 f4 b0 cazim f3 f0 f4 b1 f5 c/\ cIN f5 * * * part cset_of_edge f0 f1 f2 ! c==> cIN b0 * * * part cset_of_edge f0 f1 f2 creal_le cazim f3 f0 f4 f5 cazim f3 f0 f4 b0
+ ((v INSERT (w INSERT EMPTY)) IN E), (x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- ((\u1. ((?e. ((e IN E) /\ (u1 = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u1))) ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> cIN f3 * * part caff_gt * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_gt * * part cINSERT f4 part cEMPTY b1 cIN f3 b0 * * part caff_gt * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))) |- (!x'. ((?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))) = ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 ! c= c? / c/\ c? / c/\ cIN b2 f1 c= b1 * * part caff_ge * * part cINSERT f2 part cEMPTY b2 cIN b0 b1 c\/ c? / c/\ c? / c/\ cIN b2 f1 c= b1 * * part caff_gt * * part cINSERT f2 part cEMPTY b2 cIN b0 b1 c? / c/\ c? / c/\ cIN b2 f0 c= b1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT b2 part cEMPTY cIN b0 b1
+ ((v INSERT (w INSERT EMPTY)) IN E), (x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- (?u1. ((?e. ((e IN E) /\ (u1 = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u1)))
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> cIN f3 * * part caff_gt * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_gt * * part cINSERT f4 part cEMPTY b1 cIN f3 b0
+ |- ((\v. (!u. (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))))) v)
T * / ! c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1
- (~ F), (x = B), (((x = A) \/ (x = B)) /\ ((~ (x = B)) /\ (~ (x = A)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c= f0 f1 c/\ c~ c= f0 f1 c~ c= f0 f2 c/\ c~ cF cF
+ ((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) |- (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')
T c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ (?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))), (FAN (x , (V , E))), ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)) |- ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))
T c==> c? / c/\ cIN b0 f0 c= f1 * * part caff_ge * * part cINSERT f2 part cEMPTY b0 c==> cFAN c, f2 c, f3 f0 c==> c/\ c? / c/\ cIN b0 f0 c= f1 * * part caff_ge * * part cINSERT f2 part cEMPTY b0 cIN f4 f1 c\/ c? / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_gt * * part cINSERT f2 part cEMPTY b1 cIN f4 b0 c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f4 b0
+ (FAN (x , (V , E))) |- ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c==> cFAN c, f0 c, f1 f2 c==> c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 cIN f3 b0 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f3 b0
+ ((\u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) u) |- ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))
T c==> * / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_gt * * part cINSERT f1 part cEMPTY b1 cIN f2 b0 f3 c/\ c? / c/\ cIN b0 f0 c= f3 * * part caff_gt * * part cINSERT f1 part cEMPTY b0 cIN f2 f3
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- ((((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ ((x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) \/ (x' IN ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))) = ((x' IN (GSPEC (\GEN%PVAR%0. (?x'. (((SETSPEC GEN%PVAR%0) ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (x' IN (GSPEC (\GEN%PVAR%0. (?x'. (((SETSPEC GEN%PVAR%0) ((x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) \/ (x' IN ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))) x'))))))) x'))))) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))))
T c= c==> c\/ cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c\/ c? / c/\ c? / c/\ cIN b1 f4 c= b0 * * part caff_gt * * part cINSERT f1 part cEMPTY b1 cIN f0 b0 c? / c/\ c? / c/\ cIN b1 f5 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f0 b0 c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c\/ cIN b1 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b1 * part cGSPEC / c? / cSETSPEC b2 c\/ cIN b2 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN b2 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b2 b1 c\/ c? / c/\ c? / c/\ cIN b1 f4 c= b0 * * part caff_gt * * part cINSERT f1 part cEMPTY b1 cIN f0 b0 c? / c/\ c? / c/\ cIN b1 f5 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f0 b0
+ |- ((((~ (collinear (x INSERT (v INSERT (u' INSERT EMPTY))))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)))))) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))) = (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c= c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f4 b0 c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f4 b0
- |- (((!A. (!B. ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F))) ==> ((\A. (!B. ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F))) A)) = ((\A. (!B. ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F))) A))
T c= c==> ! ! c==> c~ ! c= c\/ c= b2 b0 c= b2 b1 c\/ c= b2 b1 c= b2 b0 cF * / ! c==> c~ ! c= c\/ c= b2 b0 c= b2 b1 c\/ c= b2 b1 c= b2 b0 cF f0 * / ! c==> c~ ! c= c\/ c= b2 b0 c= b2 b1 c\/ c= b2 b1 c= b2 b0 cF f0
- ((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) |- (((!x'. ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')) \/ ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) ==> ((\x'. ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')) \/ ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) _3320035)) = ((\x'. ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')) \/ ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) _3320035))
T c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 c= c==> ! c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 * / c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 f4 * / c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 f4
- |- ((!E. t) = t)
T c= ! f0 f0
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ (FAN (x , (V , E))), (e = (v INSERT (w INSERT EMPTY))), (e IN E) |- ((e = (v INSERT (w INSERT EMPTY))) /\ ((u = ((aff_ge (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)))))))
T c==> cFAN c, f0 c, f1 f2 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cIN f3 f2 c/\ c= f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c= f6 * * part caff_ge * * part cINSERT f0 part cEMPTY f3 c==> cIN f7 f6 c\/ c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 cIN f7 b0 c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f7 b0
+ (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), ((v INSERT (w INSERT EMPTY)) IN E), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) |- (((FINITE (((set_of_edge w) V) E)) /\ ((((w INSERT (v INSERT EMPTY)) IN E) = (v IN (((set_of_edge w) V) E))) /\ (((w INSERT (v INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (w INSERT (v INSERT EMPTY))))) /\ (((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (w INSERT EMPTY))))) /\ ((w IN V) /\ ((~ (collinear (x INSERT (w INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (w INSERT EMPTY))))))))))))) ==> (w IN V))
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f2 * * part cINSERT f0 part cEMPTY f3 c==> cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c==> c/\ cFINITE * * * part cset_of_edge f0 f4 f3 c/\ c= cIN * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f3 cIN f2 * * * part cset_of_edge f0 f4 f3 c==> cIN * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f3 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c/\ cIN f0 f4 c= c~ ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cIN f0 f4
+ (x = A), (((~ (x = A)) /\ (~ (x = B))) /\ ((x = B) \/ (x = A))) |- ((x = A) /\ F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 c/\ c= f0 f1 cF
- |- (((!u'. (!v. (!x. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F)))) ==> ((\u'. (!v. (!x. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F)))) u')) = ((\u'. (!v. (!x. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F)))) u'))
T c= c==> ! ! ! c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c\/ caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c\/ caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b0 part cEMPTY b3 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY f0 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cF * / ! ! c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c\/ caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c\/ caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b0 part cEMPTY b3 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY f0 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cF f1 * / ! ! c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c\/ caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c\/ caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b0 part cEMPTY b3 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY f0 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cF f1
+ ((\w. (e = (v INSERT (w INSERT EMPTY)))) w) |- (((e = (v INSERT (w INSERT EMPTY))) ==> ((u = ((aff_ge (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))))) = ((u = ((aff_ge (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)))))))
T c==> * / c= f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2 c= c==> c= f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 * * part caff_ge * * part cINSERT f4 part cEMPTY f0 c==> cIN f5 f3 c\/ c? / c/\ c? / c/\ cIN b1 f6 c= b0 * * part caff_gt * * part cINSERT f4 part cEMPTY b1 cIN f5 b0 c? / c/\ c? / c/\ cIN b1 f7 c= b0 * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f5 b0 c==> c= f3 * * part caff_ge * * part cINSERT f4 part cEMPTY f0 c==> cIN f5 f3 c\/ c? / c/\ c? / c/\ cIN b1 f6 c= b0 * * part caff_gt * * part cINSERT f4 part cEMPTY b1 cIN f5 b0 c? / c/\ c? / c/\ cIN b1 f7 c= b0 * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f5 b0
+ (FAN (x , (V , E))), ((v INSERT (w INSERT EMPTY)) IN E) |- ((((FINITE (((set_of_edge v) V) E)) /\ ((w IN (((set_of_edge v) V) E)) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))) ==> ((u = ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))))) = (((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge v) V) E))) /\ (((v INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))) ==> ((u = ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c= c==> c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ cIN f4 * * * part cset_of_edge f3 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> c= f5 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f6 f5 c\/ c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 cIN f6 b0 c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f6 b0 c==> c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> c= f5 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f6 f5 c\/ c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 cIN f6 b0 c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f6 b0
+ ((~ (x = v)) /\ ((~ (x = u')) /\ ((~ (v = u')) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u' INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) /\ ((~ (u' IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (u' INSERT EMPTY))))) = (~ (u' IN (aff (x INSERT (v INSERT EMPTY))))))))))))), ((v INSERT (u' INSERT EMPTY)) IN E), (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) |- (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f1 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> cIN f4 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f4 b0
+ (FAN (x , (V , E))), ((v INSERT (w INSERT EMPTY)) IN E) |- (((v INSERT (w INSERT EMPTY)) IN E) /\ ((u = ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)))))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> c= f5 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f6 f5 c\/ c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 cIN f6 b0 c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f6 b0
+ (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), ((v INSERT (w INSERT EMPTY)) IN E), (x' IN ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((\u1. ((?v. ((v IN V) /\ (u1 = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u1))) ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))
T c==> c~ c= f0 f1 c==> c~ c= f2 f0 c==> c~ c= f2 f1 c==> c~ cIN f1 * part caff * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c==> cFAN c, f2 c, f3 f4 c==> c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ cIN f1 * part caff * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f4 c==> cIN f5 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY * / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f5 b0 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY
+ |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- (?u. ((u IN (((set_of_edge v) V) E)) /\ (!w. ((w IN (((set_of_edge v) V) E)) ==> ((real_le ((((azim x) v) u1) u)) ((((azim x) v) u1) w)))))), (FAN (x , (V , E))), (v IN V), (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) |- (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))
T c==> c? / c/\ cIN b0 * * * part cset_of_edge f0 f1 f2 ! c==> cIN b1 * * * part cset_of_edge f0 f1 f2 creal_le cazim f3 f0 f4 b0 cazim f3 f0 f4 b1 c==> cFAN c, f3 c, f1 f2 c==> cIN f0 f1 c==> cIN f5 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f3 part cEMPTY b1 cIN f5 b0
+ (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- ((x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) = T)
T c==> cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ ((v INSERT (w INSERT EMPTY)) IN E), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) |- ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f4 * * part caff_gt * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f3 part cEMPTY b1 cIN f4 b0
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- (((?v. ((v IN V) /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) = ((\u1. ((?v. ((v IN V) /\ (u1 = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u1))) ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))
T c= c/\ c? / c/\ cIN b0 f0 c= * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f3 b0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)) |- (((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)) /\ (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> c/\ c? / c/\ cIN b0 f0 c= f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY cIN f4 f3 c/\ c/\ c? / c/\ cIN b0 f0 c= f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY cIN f4 f3 c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 cIN f4 b0
+ (~ (u' IN (aff (x INSERT (v INSERT EMPTY))))), ((~ (collinear (x INSERT (v INSERT (u' INSERT EMPTY))))) = (~ (u' IN (aff (x INSERT (v INSERT EMPTY)))))), ((v INSERT (u' INSERT EMPTY)) IN E), (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) |- (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f2 * * part cINSERT f0 part cEMPTY f3 c==> cIN f4 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY b1 cIN f4 b0
+ |- (((!x'. ((x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY)))) = (x' IN (((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY))))))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)))) ==> (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY)))))
T c==> c/\ ! c= cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (FAN (x , (V , E))), (x' IN u) |- (!e. (((\e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) e) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN f3 f4 ! c==> * / c/\ cIN b1 f2 c= f4 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 b0 c\/ c? / c/\ c? / c/\ cIN b2 f2 c= b1 * * part caff_gt * * part cINSERT f0 part cEMPTY b2 cIN f3 b1 c? / c/\ c? / c/\ cIN b2 f1 c= b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY cIN f3 b1
+ (FAN (x , (V , E))), (e IN E) |- ((((\v. (?w. (e = (v INSERT (w INSERT EMPTY))))) v) ==> ((u = ((aff_gt (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))))) = T)
T c==> cFAN c, f0 c, f1 f2 c==> cIN f3 f2 c= c==> * / c? / c= f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f4 c==> c= f5 * * part caff_gt * * part cINSERT f0 part cEMPTY f3 c==> cIN f6 f5 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f6 b0 cT
+ (FAN (x , (V , E))) |- ((?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)))))
T c==> cFAN c, f0 c, f1 f2 c==> c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f3 b0 c\/ c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 cIN f3 b0 c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f3 b0
- |- ((!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A)))) = T)
T c= ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cT
- |- ((!x''. ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')) \/ ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x'') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x''))))) = ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')) \/ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))))
T c= ! c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?v'. t) = t)
T c= c? / f0 f0
+ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u' INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) /\ ((~ (u' IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (u' INSERT EMPTY))))) = (~ (u' IN (aff (x INSERT (v INSERT EMPTY)))))))))), ((v INSERT (u' INSERT EMPTY)) IN E), (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) |- (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))
T c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> cIN f4 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f4 b0
+ (v IN V) |- ((v IN V) = T)
T c==> cIN f0 f1 c= cIN f0 f1 cT
+ (((~ (x = A)) /\ (~ (x = B))) /\ ((x = B) \/ (x = A))) |- ((x = B) ==> F)
T c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 c==> c= f0 f2 cF
+ ((w IN (((set_of_edge v) V) E)) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))), ((v INSERT (w INSERT EMPTY)) IN E) |- ((u = ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))))
T c==> c/\ cIN f0 * * * part cset_of_edge f1 f2 f3 c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c/\ c~ c= f4 f1 c/\ c~ c= f4 f0 c/\ c~ c= f1 f0 c/\ cDISJOINT * * part cINSERT f4 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f4 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c/\ c~ cIN f0 * part caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f2 c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c~ cIN f0 * part caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f0 part cEMPTY f3 c==> c= f5 * * part caff_gt * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c==> cIN f6 f5 c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f4 part cEMPTY b1 cIN f6 b0
- (!w. ((w IN (((set_of_edge v) V) E)) ==> ((real_le ((((azim x) v) u1) u')) ((((azim x) v) u1) w)))) |- (((w IN (((set_of_edge v) V) E)) ==> ((real_le ((((azim x) v) u1) u')) ((((azim x) v) u1) w))) = T)
T c==> ! c==> cIN b0 * * * part cset_of_edge f0 f1 f2 creal_le cazim f3 f0 f4 f5 cazim f3 f0 f4 b0 c= c==> cIN f6 * * * part cset_of_edge f0 f1 f2 creal_le cazim f3 f0 f4 f5 cazim f3 f0 f4 f6 cT
+ (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), ((v INSERT (w INSERT EMPTY)) IN E), (x' IN ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (?u1. ((?v. ((v IN V) /\ (u1 = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u1)))
T c==> c~ c= f0 f1 c==> c~ c= f2 f0 c==> c~ c= f2 f1 c==> c~ cIN f1 * part caff * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c==> cFAN c, f2 c, f3 f4 c==> c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ cIN f1 * part caff * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f4 c==> cIN f5 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f5 b0
+ ((x' IN ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))), ((x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) \/ (x' IN ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))), (v IN V) |- ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))
T c==> c==> cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c\/ c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_gt * * part cINSERT f1 part cEMPTY b1 cIN f0 b0 c? / c/\ c? / c/\ cIN b1 f4 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f0 b0 c==> c\/ cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f5 f4 c\/ c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_gt * * part cINSERT f1 part cEMPTY b1 cIN f0 b0 c? / c/\ c? / c/\ cIN b1 f4 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f0 b0
+ (FAN (x , (V , E))), (x' IN u) |- (((!x. (((\e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) x) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))) ==> ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))) = ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN f3 f4 c= c==> ! c==> * / c/\ cIN b1 f2 c= f4 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 b0 c? / c/\ c? / c/\ cIN b2 f2 c= b1 * * part caff_ge * * part cINSERT f0 part cEMPTY b2 cIN f3 b1 c==> c? / c/\ cIN b0 f2 c= f4 * * part caff_gt * * part cINSERT f0 part cEMPTY b0 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f3 b0 c==> c? / c/\ cIN b0 f2 c= f4 * * part caff_gt * * part cINSERT f0 part cEMPTY b0 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f3 b0
+ |- ((((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')) = (((!x'. ((x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY)))) = (x' IN (((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY))))))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)))) ==> (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))))))
T c= c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ ! c= cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))), ((v INSERT (w INSERT EMPTY)) IN E), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((u = ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))))
T c==> c~ c= f0 f1 c==> c~ c= f2 f0 c==> c~ c= f2 f1 c==> c~ cIN f1 * part caff * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c==> cFAN c, f2 c, f3 f4 c==> c/\ cIN f0 f3 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ cIN f1 * part caff * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f4 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c= f5 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f6 f5 c\/ c? / c/\ c? / c/\ cIN b1 f4 c= b0 * * part caff_gt * * part cINSERT f2 part cEMPTY b1 cIN f6 b0 c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f6 b0
+ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))) |- (((u = (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)))))) = ((u = ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)))))))
T c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c= c==> c= f3 * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f4 f3 c\/ c? / c/\ c? / c/\ cIN b1 f5 c= b0 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 cIN f4 b0 c? / c/\ c? / c/\ cIN b1 f6 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f4 b0 c==> c= f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f4 f3 c\/ c? / c/\ c? / c/\ cIN b1 f5 c= b0 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 cIN f4 b0 c? / c/\ c? / c/\ cIN b1 f6 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f4 b0
+ (FAN (x , (V , E))), (e IN E) |- ((((FAN (x , (V , E))) /\ (e IN E)) ==> (?v. (?w. (e = (v INSERT (w INSERT EMPTY)))))) ==> ((u = ((aff_gt (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN f3 f2 c==> c==> c/\ cFAN c, f0 c, f1 f2 cIN f3 f2 c? / c? / c= f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c==> c= f4 * * part caff_gt * * part cINSERT f0 part cEMPTY f3 c==> cIN f5 f4 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f5 b0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (x' IN u) |- (((\v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) v) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cIN f3 f4 c==> * / c/\ cIN b0 f0 c= f4 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY f5 c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 cIN f3 b0
+ (FAN (x , (V , E))), (u = ((aff_ge (x INSERT EMPTY)) e)), (e IN E), (x' IN u) |- ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))
T c==> cFAN c, f0 c, f1 f2 c==> c= f3 * * part caff_ge * * part cINSERT f0 part cEMPTY f4 c==> cIN f4 f2 c==> cIN f5 f3 c\/ c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 cIN f5 b0 c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f5 b0
- ((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) |- ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) _3320034) \/ (~ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) _3320034)))
T c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY f4
+ (FAN (x , (V , E))), (e IN E) |- (((\w. (e = (v INSERT (w INSERT EMPTY)))) w) ==> ((u = ((aff_gt (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN f3 f2 c==> * / c= f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY f5 c==> c= f6 * * part caff_gt * * part cINSERT f0 part cEMPTY f3 c==> cIN f7 f6 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f7 b0
+ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY))))), ((v INSERT (u' INSERT EMPTY)) IN E) |- ((\e. ((e IN E) /\ ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) e)))) (v INSERT (u' INSERT EMPTY)))
T c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 * / c/\ cIN b0 f3 c= * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ (FAN (x , (V , E))), (e IN E) |- (!w. (((\w. (e = (v INSERT (w INSERT EMPTY)))) w) ==> ((u = ((aff_ge (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN f3 f2 ! c==> * / c= f3 * * part cINSERT f4 * * part cINSERT b1 part cEMPTY b0 c==> c= f5 * * part caff_ge * * part cINSERT f0 part cEMPTY f3 c==> cIN f6 f5 c\/ c? / c/\ c? / c/\ cIN b2 f2 c= b1 * * part caff_gt * * part cINSERT f0 part cEMPTY b2 cIN f6 b1 c? / c/\ c? / c/\ cIN b2 f1 c= b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY cIN f6 b1
+ (x = B), (((x = A) \/ (x = B)) /\ ((~ (x = B)) /\ (~ (x = A)))) |- ((B = B) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c= f0 f1 c/\ c~ c= f0 f1 c~ c= f0 f2 c==> c= f1 f1 cF
+ (FAN (x , (V , E))), ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))), (v IN V), (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) |- (((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))) /\ (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c==> cFAN c, f0 c, f1 f2 c==> c> cCARD * * * part cset_of_edge f3 f1 f2 cNUMERAL cBIT1 c_0 c==> cIN f3 f1 c==> cIN f4 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ c> cCARD * * * part cset_of_edge f3 f1 f2 cNUMERAL cBIT1 c_0 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f4 b0
+ ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) |- (((!x'. ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) \/ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> ((\x'. ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) \/ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) _3320036)) = ((\x'. ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) \/ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) _3320036))
T c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= c==> ! c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * / c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 f4 * / c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 f4
- (x = A), (((~ (x = A)) /\ (~ (x = B))) /\ ((x = B) \/ (x = A))) |- (~ (A = B))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 c~ c= f1 f2
+ (FAN (x , (V , E))), (e IN E) |- (((\v. (?w. (e = (v INSERT (w INSERT EMPTY))))) v) ==> ((u = ((aff_ge (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)))))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN f3 f2 c==> * / c? / c= f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f4 c==> c= f5 * * part caff_ge * * part cINSERT f0 part cEMPTY f3 c==> cIN f6 f5 c\/ c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 cIN f6 b0 c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f6 b0
- |- ((\v. (!x. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F))) v)
T * / ! c==> c~ c==> c/\ caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 cF f2
+ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))), ((v INSERT (w INSERT EMPTY)) IN E) |- ((u = ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))))
T c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> c= f5 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f6 f5 c? / c/\ c? / c/\ cIN b1 f4 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f6 b0
+ (((~ (x = A)) /\ (~ (x = B))) /\ ((x = B) \/ (x = A))), ((x = A) ==> F), ((x = B) ==> F) |- F
T c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 c==> c==> c= f0 f1 cF c==> c==> c= f0 f2 cF cF
- |- ((((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F)) = ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F))
T c= c==> c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
+ (FAN (x , (V , E))), (e IN E) |- ((((\w. (e = (v INSERT (w INSERT EMPTY)))) w) ==> ((u = ((aff_gt (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))))) = T)
T c==> cFAN c, f0 c, f1 f2 c==> cIN f3 f2 c= c==> * / c= f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY f5 c==> c= f6 * * part caff_gt * * part cINSERT f0 part cEMPTY f3 c==> cIN f7 f6 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f7 b0 cT
+ (FAN (x , (V , E))), ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u)) |- (((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u)) /\ (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ c? / c/\ cIN b0 f2 c= f3 * * part caff_gt * * part cINSERT f0 part cEMPTY b0 cIN f4 f3 c/\ c/\ c? / c/\ cIN b0 f2 c= f3 * * part caff_gt * * part cINSERT f0 part cEMPTY b0 cIN f4 f3 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f4 b0
+ ((v INSERT (w INSERT EMPTY)) IN E) |- (?e. ((e IN E) /\ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = ((aff_gt (x INSERT EMPTY)) e))))
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c? / c/\ cIN b0 f2 c= * * part caff_gt * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f3 part cEMPTY b0
- (~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) |- F
T c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
+ |- (!x. (!V. (!E. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))) ==> ((GSPEC (\GEN%PVAR%1. (?x'. (((SETSPEC GEN%PVAR%1) (?u. ((u IN (GSPEC (\GEN%PVAR%5702. (?y. (((SETSPEC GEN%PVAR%5702) (?e. ((e IN E) /\ (y = ((aff_ge (x INSERT EMPTY)) e))))) y))))) /\ (x' IN u)))) x')))) = (GSPEC (\GEN%PVAR%0. (?x'. (((SETSPEC GEN%PVAR%0) ((x' IN (GSPEC (\GEN%PVAR%1. (?x'. (((SETSPEC GEN%PVAR%1) (?u. ((u IN (GSPEC (\GEN%PVAR%5703. (?e. (((SETSPEC GEN%PVAR%5703) (e IN E)) ((aff_gt (x INSERT EMPTY)) e)))))) /\ (x' IN u)))) x'))))) \/ (x' IN (GSPEC (\GEN%PVAR%1. (?x'. (((SETSPEC GEN%PVAR%1) (?u. ((u IN (GSPEC (\GEN%PVAR%5704. (?v. (((SETSPEC GEN%PVAR%5704) (v IN V)) ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))))) /\ (x' IN u)))) x'))))))) x')))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 f2 c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ cIN b2 * part cGSPEC / c? / cSETSPEC b3 c? / c/\ cIN b5 f2 c= b4 * * part caff_ge * * part cINSERT f0 part cEMPTY b5 b4 cIN b1 b2 b1 * part cGSPEC / c? / cSETSPEC b0 c\/ cIN b1 * part cGSPEC / c? / cSETSPEC b2 c? / c/\ cIN b3 * part cGSPEC / c? / cSETSPEC b4 cIN b5 f2 * * part caff_gt * * part cINSERT f0 part cEMPTY b5 cIN b3 b3 b3 cIN b1 * part cGSPEC / c? / cSETSPEC b2 c? / c/\ cIN b3 * part cGSPEC / c? / cSETSPEC b4 cIN b5 f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b5 part cEMPTY cIN b3 b3 b3 b1
+ |- ((!x. (!V. (!E. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))) ==> ((GSPEC (\GEN%PVAR%1. (?x'. (((SETSPEC GEN%PVAR%1) (?u. ((u IN (GSPEC (\GEN%PVAR%5702. (?y. (((SETSPEC GEN%PVAR%5702) (?e. ((e IN E) /\ (y = ((aff_ge (x INSERT EMPTY)) e))))) y))))) /\ (x' IN u)))) x')))) = (GSPEC (\GEN%PVAR%0. (?x'. (((SETSPEC GEN%PVAR%0) ((x' IN (GSPEC (\GEN%PVAR%1. (?x'. (((SETSPEC GEN%PVAR%1) (?u. ((u IN (GSPEC (\GEN%PVAR%5703. (?e. (((SETSPEC GEN%PVAR%5703) (e IN E)) ((aff_gt (x INSERT EMPTY)) e)))))) /\ (x' IN u)))) x'))))) \/ (x' IN (GSPEC (\GEN%PVAR%1. (?x'. (((SETSPEC GEN%PVAR%1) (?u. ((u IN (GSPEC (\GEN%PVAR%5704. (?v. (((SETSPEC GEN%PVAR%5704) (v IN V)) ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))))) /\ (x' IN u)))) x'))))))) x'))))))))) = (!x. (!V. (!E. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))) ==> ((UNIONS (GSPEC (\GEN%PVAR%5702. (?y. (((SETSPEC GEN%PVAR%5702) (?e. ((e IN E) /\ (y = ((aff_ge (x INSERT EMPTY)) e))))) y))))) = ((UNIONS (GSPEC (\GEN%PVAR%5703. (?e. (((SETSPEC GEN%PVAR%5703) (e IN E)) ((aff_gt (x INSERT EMPTY)) e)))))) UNION (UNIONS (GSPEC (\GEN%PVAR%5704. (?v. (((SETSPEC GEN%PVAR%5704) (v IN V)) ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))))))))))))
T c= ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b3 b1 c> cCARD * * * part cset_of_edge b3 b1 b2 cNUMERAL cBIT1 c_0 cfan80 c, b0 c, b1 b2 c= * part cGSPEC / c? / cSETSPEC b3 c? / c/\ cIN b5 * part cGSPEC / c? / cSETSPEC b6 c? / c/\ cIN b8 b2 c= b7 * * part caff_ge * * part cINSERT b0 part cEMPTY b8 b7 cIN b4 b5 b4 * part cGSPEC / c? / cSETSPEC b3 c\/ cIN b4 * part cGSPEC / c? / cSETSPEC b5 c? / c/\ cIN b6 * part cGSPEC / c? / cSETSPEC b7 cIN b8 b2 * * part caff_gt * * part cINSERT b0 part cEMPTY b8 cIN b6 b6 b6 cIN b4 * part cGSPEC / c? / cSETSPEC b5 c? / c/\ cIN b6 * part cGSPEC / c? / cSETSPEC b7 cIN b8 b1 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b8 part cEMPTY cIN b6 b6 b6 b4 ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b3 b1 c> cCARD * * * part cset_of_edge b3 b1 b2 cNUMERAL cBIT1 c_0 cfan80 c, b0 c, b1 b2 c= * part cUNIONS * part cGSPEC / c? / cSETSPEC b3 c? / c/\ cIN b5 b2 c= b4 * * part caff_ge * * part cINSERT b0 part cEMPTY b5 b4 * * part cUNION * part cUNIONS * part cGSPEC / c? / cSETSPEC b3 cIN b4 b2 * * part caff_gt * * part cINSERT b0 part cEMPTY b4 * part cUNIONS * part cGSPEC / c? / cSETSPEC b3 cIN b4 b1 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b4 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))) |- (((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> c/\ c? / c/\ cIN b0 f0 c= f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY cIN f4 f3 c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 cIN f4 b0
+ (~ (v = w)), (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))), ((v INSERT (w INSERT EMPTY)) IN E), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((u = ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))))
T c==> c~ c= f0 f1 c==> c~ c= f2 f0 c==> c~ c= f2 f1 c==> cFAN c, f2 c, f3 f4 c==> c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ cIN f1 * part caff * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c/\ cIN f0 f3 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ cIN f1 * part caff * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f4 c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c= f5 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f6 f5 c\/ c? / c/\ c? / c/\ cIN b1 f4 c= b0 * * part caff_gt * * part cINSERT f2 part cEMPTY b1 cIN f6 b0 c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f6 b0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))), (FAN (x , (V , E))), ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)) |- (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c? / c/\ cIN b0 f0 c= f2 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c==> cFAN c, f3 c, f0 f1 c==> c/\ c? / c/\ cIN b0 f0 c= f2 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY cIN f4 f2 c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f3 part cEMPTY b1 cIN f4 b0
- |- ((!u'. (!v. (!x. (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))))) = T)
T c= ! ! ! c==> c/\ ! c= caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c\/ caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c\/ caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b0 part cEMPTY b3 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY f0 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cT
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')), ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) |- F
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
+ ((v INSERT (u' INSERT EMPTY)) IN E), (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) |- (((~ (collinear (x INSERT (v INSERT (u' INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u')) /\ ((~ (v = u')) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u' INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) /\ ((~ (u' IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (u' INSERT EMPTY))))) = (~ (u' IN (aff (x INSERT (v INSERT EMPTY)))))))))))))) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> cIN f3 * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ c= f4 f0 c/\ c~ c= f4 f1 c/\ c~ c= f0 f1 c/\ cDISJOINT * * part cINSERT f4 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f4 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ cIN f1 * part caff * * part cINSERT f4 * * part cINSERT f0 part cEMPTY c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ cIN f1 * part caff * * part cINSERT f4 * * part cINSERT f0 part cEMPTY c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f4 part cEMPTY b1 cIN f3 b0
+ (FAN (x , (V , E))), (x' IN u) |- (((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e))) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN f3 f4 c==> c/\ cIN f5 f2 c= f4 * * part caff_gt * * part cINSERT f0 part cEMPTY f5 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f3 b0
+ (FAN (x , (V , E))), ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))), (v IN V) |- (((?u. ((u IN (((set_of_edge v) V) E)) /\ (!w. ((w IN (((set_of_edge v) V) E)) ==> ((real_le ((((azim x) v) u1) u)) ((((azim x) v) u1) w)))))) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))) = ((((FAN (x , (V , E))) /\ ((v IN V) /\ ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> (?u. ((u IN (((set_of_edge v) V) E)) /\ (!w. ((w IN (((set_of_edge v) V) E)) ==> ((real_le ((((azim x) v) u1) u)) ((((azim x) v) u1) w))))))) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))))
T c==> cFAN c, f0 c, f1 f2 c==> c> cCARD * * * part cset_of_edge f3 f1 f2 cNUMERAL cBIT1 c_0 c==> cIN f3 f1 c= c==> c? / c/\ cIN b0 * * * part cset_of_edge f3 f1 f2 ! c==> cIN b1 * * * part cset_of_edge f3 f1 f2 creal_le cazim f0 f3 f4 b0 cazim f0 f3 f4 b1 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f5 b0 c==> c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN f3 f1 c> cCARD * * * part cset_of_edge f3 f1 f2 cNUMERAL cBIT1 c_0 c? / c/\ cIN b0 * * * part cset_of_edge f3 f1 f2 ! c==> cIN b1 * * * part cset_of_edge f3 f1 f2 creal_le cazim f0 f3 f4 b0 cazim f0 f3 f4 b1 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f5 b0
+ |- (((((FAN (x , (V , E))) /\ (e IN E)) ==> (?v. (?w. (e = (v INSERT (w INSERT EMPTY)))))) ==> ((u = ((aff_gt (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))))) = ((u = ((aff_gt (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 cIN f3 f2 c? / c? / c= f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c==> c= f4 * * part caff_gt * * part cINSERT f0 part cEMPTY f3 c==> cIN f5 f4 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f5 b0 c==> c= f4 * * part caff_gt * * part cINSERT f0 part cEMPTY f3 c==> cIN f5 f4 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f5 b0
+ |- ((\x. (!v. (!w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))))))) x)
T * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY f0
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ (FAN (x , (V , E))) |- (((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u)) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ c? / c/\ cIN b0 f2 c= f3 * * part caff_gt * * part cINSERT f0 part cEMPTY b0 cIN f4 f3 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f4 b0
- ((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))
T c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
+ (FAN (x , (V , E))), ((?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))), ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)))) |- (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))
T c==> cFAN c, f0 c, f1 f2 c==> c==> c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f3 b0 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f3 b0 c==> c\/ c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 cIN f3 b0 c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f3 b0 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f3 b0
+ (FAN (x , (V , E))), (e IN E) |- ((((\w. (e = (v INSERT (w INSERT EMPTY)))) w) ==> ((u = ((aff_ge (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))))) = T)
T c==> cFAN c, f0 c, f1 f2 c==> cIN f3 f2 c= c==> * / c= f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY f5 c==> c= f6 * * part caff_ge * * part cINSERT f0 part cEMPTY f3 c==> cIN f7 f6 c\/ c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 cIN f7 b0 c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f7 b0 cT
- |- ((!x''. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'')) /\ ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x'')) /\ (~ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'')))))) = ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ (!x'. ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')) /\ ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x')))))))
T c= ! c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c/\ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c/\ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0
+ |- (((!v. (!w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))))))) ==> ((\v. (!w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))))))) v)) = ((\v. (!w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))))))) v))
T c= c==> ! ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY * / ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY f1 * / ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY f1
- |- ((((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) = T)
T c= c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cT
+ |- ((((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge v) V) E))) /\ (((v INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))) ==> ((u = ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))))) = ((u = ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))))
T c= c==> c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> c= f5 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f6 f5 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f6 b0 c==> c= f5 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f6 f5 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f6 b0
+ (FAN (x , (V , E))), ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e))), (x' IN u) |- ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ cIN f3 f2 c= f4 * * part caff_ge * * part cINSERT f0 part cEMPTY f3 c==> cIN f5 f4 c\/ c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 cIN f5 b0 c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f5 b0
+ (((x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) \/ (x' IN ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))), ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ ((x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) \/ (x' IN ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))), ((v INSERT (w INSERT EMPTY)) IN E) |- ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))
T c==> c==> c\/ cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c\/ c? / c/\ c? / c/\ cIN b1 f4 c= b0 * * part caff_gt * * part cINSERT f1 part cEMPTY b1 cIN f0 b0 c? / c/\ c? / c/\ cIN b1 f5 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f0 b0 c==> c\/ cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c\/ c? / c/\ c? / c/\ cIN b1 f4 c= b0 * * part caff_gt * * part cINSERT f1 part cEMPTY b1 cIN f0 b0 c? / c/\ c? / c/\ cIN b1 f5 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f0 b0
+ (x = A), (((x = A) \/ (x = B)) /\ ((~ (x = B)) /\ (~ (x = A)))) |- F
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f2 c~ c= f0 f1 cF
+ (~ (u' IN (aff (x INSERT (v INSERT EMPTY))))), ((~ (collinear (x INSERT (v INSERT (u' INSERT EMPTY))))) = (~ (u' IN (aff (x INSERT (v INSERT EMPTY)))))), ((v INSERT (u' INSERT EMPTY)) IN E), (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) |- (((~ (collinear (x INSERT (v INSERT (u' INSERT EMPTY))))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)))))) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f2 * * part cINSERT f0 part cEMPTY f3 c==> cIN f4 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c= * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY b1 cIN f4 b0
+ ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) |- ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) _3320036) \/ (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) _3320036)))
T c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4
+ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY))))), ((v INSERT (u' INSERT EMPTY)) IN E), (x' IN (((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY))))) |- ((x' IN (((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY))))) /\ (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> cIN f4 * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cIN f4 * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f4 b0
- |- (((((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F)) ==> (((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F))) = (((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F)))
T c= c==> c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
+ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))), ((v INSERT (w INSERT EMPTY)) IN E) |- ((u = ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))))
T c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> c= f5 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f6 f5 c? / c/\ c? / c/\ cIN b1 f4 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f6 b0
- (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) |- ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> F)
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
+ (~ (u' IN (aff (x INSERT (v INSERT EMPTY))))), ((~ (u' IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (u' INSERT EMPTY))))) = (~ (u' IN (aff (x INSERT (v INSERT EMPTY))))))), ((v INSERT (u' INSERT EMPTY)) IN E), (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) |- (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f2 * * part cINSERT f0 part cEMPTY f3 c==> cIN f4 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY b1 cIN f4 b0
+ (FAN (x , (V , E))), ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)) |- (((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)) /\ ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)))))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ c? / c/\ cIN b0 f2 c= f3 * * part caff_ge * * part cINSERT f0 part cEMPTY b0 cIN f4 f3 c/\ c/\ c? / c/\ cIN b0 f2 c= f3 * * part caff_ge * * part cINSERT f0 part cEMPTY b0 cIN f4 f3 c\/ c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 cIN f4 b0 c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f4 b0
+ (FAN (x , (V , E))), ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e))), (x' IN u) |- (((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e))) /\ (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ cIN f3 f2 c= f4 * * part caff_gt * * part cINSERT f0 part cEMPTY f3 c==> cIN f5 f4 c/\ c/\ cIN f3 f2 c= f4 * * part caff_gt * * part cINSERT f0 part cEMPTY f3 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f5 b0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) |- ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cIN f2 f0 c> cCARD * * * part cset_of_edge f2 f0 f1 cNUMERAL cBIT1 c_0
- |- ((!x'. (!w. (!v. (!x. (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))))) = (!x'. (!w. (!v. (!x. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F))))))
T c= ! ! ! ! c==> c/\ caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 ! ! ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cF
+ (FAN (x , (V , E))), (e IN E) |- (((\v. (?w. (e = (v INSERT (w INSERT EMPTY))))) v) ==> ((u = ((aff_gt (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN f3 f2 c==> * / c? / c= f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f4 c==> c= f5 * * part caff_gt * * part cINSERT f0 part cEMPTY f3 c==> cIN f6 f5 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f6 b0
+ (FAN (x , (V , E))), ((v INSERT (w INSERT EMPTY)) IN E) |- (((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge v) V) E))) /\ (((v INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))) ==> ((u = ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> c= f5 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f6 f5 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f6 b0
+ (FAN (x , (V , E))), (e IN E), ((\v. (?w. (e = (v INSERT (w INSERT EMPTY))))) v) |- (((\v. (?w. (e = (v INSERT (w INSERT EMPTY))))) v) /\ ((u = ((aff_gt (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN f3 f2 c==> * / c? / c= f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f4 c/\ * / c? / c= f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f4 c==> c= f5 * * part caff_gt * * part cINSERT f0 part cEMPTY f3 c==> cIN f6 f5 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f6 b0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (x' IN u) |- ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cIN f3 f4 c==> c? / c/\ cIN b0 f0 c= f4 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 cIN f3 b0
- (?w. (e = (v INSERT (w INSERT EMPTY)))), (FAN (x , (V , E))), (e IN E) |- ((?w. (e = (v INSERT (w INSERT EMPTY)))) /\ ((u = ((aff_ge (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)))))))
T c==> c? / c= f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c==> cFAN c, f2 c, f3 f4 c==> cIN f0 f4 c/\ c? / c= f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c==> c= f5 * * part caff_ge * * part cINSERT f2 part cEMPTY f0 c==> cIN f6 f5 c\/ c? / c/\ c? / c/\ cIN b1 f4 c= b0 * * part caff_gt * * part cINSERT f2 part cEMPTY b1 cIN f6 b0 c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f6 b0
- ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F), (((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F)) |- (((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F) /\ ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F))
T c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c/\ c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
+ ((v INSERT (u' INSERT EMPTY)) IN E), (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) |- ((((v INSERT (u' INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u' INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u')) /\ ((~ (v = u')) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u' INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) /\ ((~ (u' IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (u' INSERT EMPTY))))) = (~ (u' IN (aff (x INSERT (v INSERT EMPTY))))))))))))))) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> cIN f3 * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ c= f4 f0 c/\ c~ c= f4 f1 c/\ c~ c= f0 f1 c/\ cDISJOINT * * part cINSERT f4 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f4 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ cIN f1 * part caff * * part cINSERT f4 * * part cINSERT f0 part cEMPTY c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ cIN f1 * part caff * * part cINSERT f4 * * part cINSERT f0 part cEMPTY c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f4 part cEMPTY b1 cIN f3 b0
+ (FAN (x , (V , E))), (e IN E) |- ((((FAN (x , (V , E))) /\ (e IN E)) ==> (?v. (?w. (e = (v INSERT (w INSERT EMPTY)))))) ==> ((u = ((aff_ge (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)))))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN f3 f2 c==> c==> c/\ cFAN c, f0 c, f1 f2 cIN f3 f2 c? / c? / c= f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c==> c= f4 * * part caff_ge * * part cINSERT f0 part cEMPTY f3 c==> cIN f5 f4 c\/ c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_gt * * part cINSERT f0 part cEMPTY b1 cIN f5 b0 c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f5 b0
+ (~ (((x = A) \/ (x = B)) = ((x = B) \/ (x = A)))) |- ((((x = A) \/ (x = B)) /\ ((~ (x = B)) /\ (~ (x = A)))) \/ (((~ (x = A)) /\ (~ (x = B))) /\ ((x = B) \/ (x = A))))
T c==> c~ c= c\/ c= f0 f1 c= f0 f2 c\/ c= f0 f2 c= f0 f1 c\/ c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f2 c~ c= f0 f1 c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1
+ ((v INSERT (w INSERT EMPTY)) IN E), (x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> cIN f3 * * part caff_gt * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cSUBSET * * part caff_gt * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cSUBSET * * part caff_gt * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f4 part cEMPTY b1 cIN f3 b0
+ ((v INSERT (w INSERT EMPTY)) IN E) |- (((FINITE (((set_of_edge v) V) E)) /\ ((w IN (((set_of_edge v) V) E)) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))) ==> ((u = ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))))
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c/\ cFINITE * * * part cset_of_edge f0 f3 f2 c/\ cIN f1 * * * part cset_of_edge f0 f3 f2 c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ c= f4 f0 c/\ c~ c= f4 f1 c/\ c~ c= f0 f1 c/\ cDISJOINT * * part cINSERT f4 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f4 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ cIN f1 * part caff * * part cINSERT f4 * * part cINSERT f0 part cEMPTY c/\ cIN f0 f3 c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ cIN f1 * part caff * * part cINSERT f4 * * part cINSERT f0 part cEMPTY c==> c= f5 * * part caff_gt * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f6 f5 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f4 part cEMPTY b1 cIN f6 b0
+ (FAN (x , (V , E))), (e IN E) |- ((e = (v INSERT (w INSERT EMPTY))) ==> ((u = ((aff_gt (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN f3 f2 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c= f6 * * part caff_gt * * part cINSERT f0 part cEMPTY f3 c==> cIN f7 f6 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f7 b0
+ |- ((\x. (!v. (!u. (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))))) x)
T * / ! ! c==> cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0
+ ((~ (collinear (x INSERT (v INSERT (u' INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u')) /\ ((~ (v = u')) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u' INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) /\ ((~ (u' IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (u' INSERT EMPTY))))) = (~ (u' IN (aff (x INSERT (v INSERT EMPTY)))))))))))))), ((v INSERT (u' INSERT EMPTY)) IN E), (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) |- (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f1 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> cIN f4 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cIN f4 b0
+ |- (((!v'. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v') V) E)) /\ ((((v' INSERT (v INSERT EMPTY)) IN E) = (v IN (((set_of_edge v') V) E))) /\ (((v' INSERT (v INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v' INSERT (v INSERT EMPTY))))) /\ ((~ (x = v')) /\ ((~ (x = v)) /\ ((~ (v' = v)) /\ (((DISJOINT (x INSERT (v' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (v' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (v' INSERT EMPTY))))) /\ ((v' IN V) /\ ((~ (collinear (x INSERT (v' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (v' INSERT EMPTY)))))))))))))))))))) ==> ((\v'. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v') V) E)) /\ ((((v' INSERT (v INSERT EMPTY)) IN E) = (v IN (((set_of_edge v') V) E))) /\ (((v' INSERT (v INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v' INSERT (v INSERT EMPTY))))) /\ ((~ (x = v')) /\ ((~ (x = v)) /\ ((~ (v' = v)) /\ (((DISJOINT (x INSERT (v' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (v' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (v' INSERT EMPTY))))) /\ ((v' IN V) /\ ((~ (collinear (x INSERT (v' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (v' INSERT EMPTY)))))))))))))))))))) w)) = ((\v'. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v') V) E)) /\ ((((v' INSERT (v INSERT EMPTY)) IN E) = (v IN (((set_of_edge v') V) E))) /\ (((v' INSERT (v INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v' INSERT (v INSERT EMPTY))))) /\ ((~ (x = v')) /\ ((~ (x = v)) /\ ((~ (v' = v)) /\ (((DISJOINT (x INSERT (v' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (v' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (v' INSERT EMPTY))))) /\ ((v' IN V) /\ ((~ (collinear (x INSERT (v' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (v' INSERT EMPTY)))))))))))))))))))) w))
T c= c==> ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * / c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f4 * / c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f4
- (fan80 (x , (V , E))) |- ((fan80 (x , (V , E))) = T)
T c==> cfan80 c, f0 c, f1 f2 c= cfan80 c, f0 c, f1 f2 cT
- |- ((((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F)) = ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F))
T c= c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!x'. ((P x') \/ Q)) = ((!x'. (P x')) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
- ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F), (((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F)) |- ((((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F)) /\ ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F))
T c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c/\ c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
- |- ((((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')) = T)
T c= c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cT
- |- (((!v. (!x. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F))) ==> ((\v. (!x. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F))) v)) = ((\v. (!x. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F))) v))
T c= c==> ! ! c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 c\/ caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 c\/ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 part cEMPTY b2 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY f1 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 cF * / ! c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 c\/ caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 c\/ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 part cEMPTY b2 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY f1 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 cF f2 * / ! c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 c\/ caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 c\/ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 part cEMPTY b2 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY f1 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 cF f2
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))), (FAN (x , (V , E))) |- ((?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))) /\ ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u)))))
T c==> c? / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY b1 cIN f2 b0 c==> cFAN c, f1 c, f3 f0 c/\ c? / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY b1 cIN f2 b0 c\/ c? / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_gt * * part cINSERT f1 part cEMPTY b1 cIN f2 b0 c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f2 b0
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- (((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) = (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A)))))
T c= c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0
- (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')), ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) |- ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- |- ((\s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t)))))) s)
T * / ! c= c= b0 b1 ! c= cIN b2 b0 cIN b2 b1 f0
- |- ((!B. (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) = T)
T c= ! ! c= c\/ c= b1 f0 c= b1 b0 c\/ c= b1 b0 c= b1 f0 cT
- |- (((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F))
T c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
- (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')), ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) |- ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) /\ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))
T c==> c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- |- ((((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F)) ==> (((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F)))
T c==> c==> c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
- (!w. ((w IN (((set_of_edge v) V) E)) ==> ((real_le ((((azim x) v) u1) u')) ((((azim x) v) u1) w)))) |- ((\w. ((w IN (((set_of_edge v) V) E)) ==> ((real_le ((((azim x) v) u1) u')) ((((azim x) v) u1) w)))) w)
T c==> ! c==> cIN b0 * * * part cset_of_edge f0 f1 f2 creal_le cazim f3 f0 f4 f5 cazim f3 f0 f4 b0 * / c==> cIN b0 * * * part cset_of_edge f0 f1 f2 creal_le cazim f3 f0 f4 f5 cazim f3 f0 f4 b0 f6
- (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')), ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) |- ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) /\ F)
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
- ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F) |- ((((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F)) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F))
T c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
- |- (((((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F)) ==> (((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F))) = (((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F)))
T c= c==> c==> c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
- ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F), (((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)) |- (((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) /\ ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c/\ c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
- (((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)) |- ((((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)) /\ (((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)))
T c==> c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c/\ c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
- ((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) _3320035)) \/ ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) _3320035) \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) _3320035) \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) _3320035))))
T c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY f4
- (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')), ((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) |- ((~ F) ==> F)
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 c==> c~ cF cF
- |- (((!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t)))))) ==> ((\s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t)))))) s)) = ((\s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t)))))) s))
T c= c==> ! ! c= c= b0 b1 ! c= cIN b2 b0 cIN b2 b1 * / ! c= c= b0 b1 ! c= cIN b2 b0 cIN b2 b1 f0 * / ! c= c= b0 b1 ! c= cIN b2 b0 cIN b2 b1 f0
- (?v. (?w. (e = (v INSERT (w INSERT EMPTY))))), (FAN (x , (V , E))), (e IN E) |- ((?v. (?w. (e = (v INSERT (w INSERT EMPTY))))) /\ ((u = ((aff_gt (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))))
T c==> c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c==> cFAN c, f1 c, f2 f3 c==> cIN f0 f3 c/\ c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c==> c= f4 * * part caff_gt * * part cINSERT f1 part cEMPTY f0 c==> cIN f5 f4 c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY b1 cIN f5 b0
- ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) |- ((((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) |- (((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))) = T)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c= c==> cIN f2 f0 c> cCARD * * * part cset_of_edge f2 f0 f1 cNUMERAL cBIT1 c_0 cT
- ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) |- (((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> F) = F)
T c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF cF
- (x = B), (((x = A) \/ (x = B)) /\ ((~ (x = B)) /\ (~ (x = A)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c= f0 f1 c/\ c~ c= f0 f1 c~ c= f0 f2 c==> c~ cF cF
- (x = B) |- (F = F)
T c==> c= f0 f1 c= cF cF
- (!w. ((w IN (((set_of_edge v) V) E)) ==> ((real_le ((((azim x) v) u1) u')) ((((azim x) v) u1) w)))) |- ((w IN (((set_of_edge v) V) E)) ==> ((real_le ((((azim x) v) u1) u')) ((((azim x) v) u1) w)))
T c==> ! c==> cIN b0 * * * part cset_of_edge f0 f1 f2 creal_le cazim f3 f0 f4 f5 cazim f3 f0 f4 b0 c==> cIN f6 * * * part cset_of_edge f0 f1 f2 creal_le cazim f3 f0 f4 f5 cazim f3 f0 f4 f6
- ((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) |- ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) _3320034) \/ (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) _3320034)))
T c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4
- |- ((!x''. ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'')) \/ ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) = ((!x'. (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) \/ ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x')))))
T c= ! c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY f3 c\/ ! c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY f3
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- ((!v. (!x. (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) = T)
T c= ! ! c==> c/\ caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 cT
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- (x = A), (((x = A) \/ (x = B)) /\ ((~ (x = B)) /\ (~ (x = A)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f2 c~ c= f0 f1 c==> c~ cF cF
- ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) |- (((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) /\ ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c/\ c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
- (?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))), (FAN (x , (V , E))) |- ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) /\ (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c==> c? / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_gt * * part cINSERT f1 part cEMPTY b1 cIN f2 b0 c==> cFAN c, f1 c, f3 f0 c/\ c? / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_gt * * part cINSERT f1 part cEMPTY b1 cIN f2 b0 c? / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY b1 cIN f2 b0
- |- (((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
- ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) |- ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) ==> F)
T c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
- |- (((!w. (!v. (!x. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F)))) ==> ((\w. (!v. (!x. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F)))) w)) = ((\w. (!v. (!x. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F)))) w))
T c= c==> ! ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cF * / ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cF f1 * / ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cF f1
- ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F), (((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F)) |- (((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F) /\ ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F))
T c==> c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c==> c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c/\ c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
- (~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) |- F
T c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
- |- ((\A. (!B. ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F))) A)
T * / ! c==> c~ ! c= c\/ c= b2 b0 c= b2 b1 c\/ c= b2 b1 c= b2 b0 cF f0
- |- (((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F) = (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')))
T c= c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- (((v INSERT (u' INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u' INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u')) /\ ((~ (v = u')) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u' INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) /\ ((~ (u' IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (u' INSERT EMPTY))))) = (~ (u' IN (aff (x INSERT (v INSERT EMPTY))))))))))))))) |- ((((v INSERT (u' INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u' INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u')) /\ ((~ (v = u')) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u' INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) /\ ((~ (u' IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (u' INSERT EMPTY))))) = (~ (u' IN (aff (x INSERT (v INSERT EMPTY))))))))))))))) = T)
T c==> c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ c= f3 f0 c/\ c~ c= f3 f1 c/\ c~ c= f0 f1 c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ cIN f1 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ cIN f1 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c= c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ c= f3 f0 c/\ c~ c= f3 f1 c/\ c~ c= f0 f1 c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ cIN f1 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ cIN f1 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY cT
- (x = B), (((~ (x = A)) /\ (~ (x = B))) /\ ((x = B) \/ (x = A))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c~ c= f0 f1 c\/ c= f0 f1 c= f0 f2 c==> c~ cF cF
- (~ (collinear (x INSERT (v INSERT (u' INSERT EMPTY))))) |- ((collinear (x INSERT (v INSERT (u' INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- |- (((!t. ((s = t) = (!x. ((x IN s) = (x IN t))))) ==> ((\t. ((s = t) = (!x. ((x IN s) = (x IN t))))) t)) = ((\t. ((s = t) = (!x. ((x IN s) = (x IN t))))) t))
T c= c==> ! c= c= f0 b0 ! c= cIN b1 f0 cIN b1 b0 * / c= c= f0 b0 ! c= cIN b1 f0 cIN b1 b0 f1 * / c= c= f0 b0 ! c= cIN b1 f0 cIN b1 b0 f1
- |- ((!x'. (P \/ (Q x'))) = (P \/ (!x'. (Q x'))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- (((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F)) |- ((((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F)) /\ (((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F)))
T c==> c==> c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c/\ c==> c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((\x. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F)) x)
T * / c==> c~ c==> c/\ caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF f3
- |- (((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F))
T c==> c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
- (~ F), (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')), ((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 c/\ c~ cF cF
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((\v. (!x. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F))) v)
T * / ! c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 c\/ caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 c\/ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 part cEMPTY b2 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY f1 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 cF f2
- (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')), ((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- |- ((\u'. (!v. (!x. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F)))) u')
T * / ! ! c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c\/ caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c\/ caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b0 part cEMPTY b3 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY f0 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cF f1
- (x = B), (((x = A) \/ (x = B)) /\ ((~ (x = B)) /\ (~ (x = A)))) |- (~ (B = A))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c= f0 f1 c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= f1 f2
- (((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F)) |- ((((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F)) /\ (((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F)))
T c==> c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c/\ c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
- |- (((!x'. (!u'. (!v. (!x. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F))))) ==> ((\x'. (!u'. (!v. (!x. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F))))) x')) = ((\x'. (!u'. (!v. (!x. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F))))) x'))
T c= c==> ! ! ! ! c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c\/ caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c\/ caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY b4 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY b0 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cF * / ! ! ! c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c\/ caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c\/ caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY b4 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY b0 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cF f0 * / ! ! ! c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c\/ caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c\/ caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY b4 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY b0 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cF f0
- (((w INSERT (v INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (w INSERT (v INSERT EMPTY))))) /\ (((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (w INSERT EMPTY))))) /\ ((w IN V) /\ ((~ (collinear (x INSERT (w INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (w INSERT EMPTY))))))))))) |- ((((w INSERT (v INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (w INSERT (v INSERT EMPTY))))) /\ (((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (w INSERT EMPTY))))) /\ ((w IN V) /\ ((~ (collinear (x INSERT (w INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (w INSERT EMPTY))))))))))) = T)
T c==> c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ cIN f1 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c/\ cIN f0 f4 c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ cIN f1 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c= c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ cIN f1 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c/\ cIN f0 f4 c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ cIN f1 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY cT
- |- ((!x. (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) = T)
T c= ! c==> c/\ caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cT
- (?u. ((u IN (((set_of_edge v) V) E)) /\ (!w. ((w IN (((set_of_edge v) V) E)) ==> ((real_le ((((azim x) v) u1) u)) ((((azim x) v) u1) w)))))), (FAN (x , (V , E))), (v IN V), (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) |- ((?u. ((u IN (((set_of_edge v) V) E)) /\ (!w. ((w IN (((set_of_edge v) V) E)) ==> ((real_le ((((azim x) v) u1) u)) ((((azim x) v) u1) w)))))) /\ (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c==> c? / c/\ cIN b0 * * * part cset_of_edge f0 f1 f2 ! c==> cIN b1 * * * part cset_of_edge f0 f1 f2 creal_le cazim f3 f0 f4 b0 cazim f3 f0 f4 b1 c==> cFAN c, f3 c, f1 f2 c==> cIN f0 f1 c==> cIN f5 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ c? / c/\ cIN b0 * * * part cset_of_edge f0 f1 f2 ! c==> cIN b1 * * * part cset_of_edge f0 f1 f2 creal_le cazim f3 f0 f4 b0 cazim f3 f0 f4 b1 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f3 part cEMPTY b1 cIN f5 b0
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')), ((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')) /\ F)
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
- |- ((((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F)) ==> (((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F)))
T c==> c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))), (FAN (x , (V , E))) |- ((?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))) /\ (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c? / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f3 b0 c==> cFAN c, f2 c, f0 f1 c/\ c? / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f3 b0 c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 cIN f3 b0
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
- |- ((\t. ((s = t) = (!x. ((x IN s) = (x IN t))))) t)
T * / c= c= f0 b0 ! c= cIN b1 f0 cIN b1 b0 f1
- |- ((!x''. ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'')) \/ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) = ((!x'. (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) \/ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))
T c= ! c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c\/ ! c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- (((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F) = (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))
T c= c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- (x = A), (((~ (x = A)) /\ (~ (x = B))) /\ ((x = B) \/ (x = A))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 c==> c~ cF cF
- (?w. (e = (v INSERT (w INSERT EMPTY)))), (FAN (x , (V , E))), (e IN E) |- ((u = ((aff_gt (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))))
T c==> c? / c= f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c==> cFAN c, f2 c, f3 f4 c==> cIN f0 f4 c==> c= f5 * * part caff_gt * * part cINSERT f2 part cEMPTY f0 c==> cIN f6 f5 c? / c/\ c? / c/\ cIN b1 f4 c= b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 cIN f6 b0
- (?v. (?w. (e = (v INSERT (w INSERT EMPTY))))), (FAN (x , (V , E))), (e IN E) |- ((u = ((aff_gt (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))))
T c==> c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c==> cFAN c, f1 c, f2 f3 c==> cIN f0 f3 c==> c= f4 * * part caff_gt * * part cINSERT f1 part cEMPTY f0 c==> cIN f5 f4 c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY b1 cIN f5 b0
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- (?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))), (FAN (x , (V , E))) |- (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))
T c==> c? / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_gt * * part cINSERT f1 part cEMPTY b1 cIN f2 b0 c==> cFAN c, f1 c, f3 f0 c? / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY b1 cIN f2 b0
- |- ((!B. (P B)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- (~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) |- ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) /\ F)
T c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 c/\ c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)) = ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F))
T c= c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
- |- (((!x'. (!w. (!v. (!x. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F))))) ==> ((\x'. (!w. (!v. (!x. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F))))) x')) = ((\x'. (!w. (!v. (!x. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F))))) x'))
T c= c==> ! ! ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cF * / ! ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cF f0 * / ! ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cF f0
- ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) |- ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))
T c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- (?w. (e = (v INSERT (w INSERT EMPTY)))), (FAN (x , (V , E))), (e IN E) |- ((?w. (e = (v INSERT (w INSERT EMPTY)))) /\ ((u = ((aff_gt (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))))))
T c==> c? / c= f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c==> cFAN c, f2 c, f3 f4 c==> cIN f0 f4 c/\ c? / c= f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c==> c= f5 * * part caff_gt * * part cINSERT f2 part cEMPTY f0 c==> cIN f6 f5 c? / c/\ c? / c/\ cIN b1 f4 c= b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 cIN f6 b0
- |- (((\t. (f t)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)) ==> (((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)))
T c==> c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
- |- ((\B. ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)) B)
T * / c==> c~ ! c= c\/ c= b1 f0 c= b1 b0 c\/ c= b1 b0 c= b1 f0 cF f1
- ((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x'))
T c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3
- (~ (B = B)) |- ((~ (B = B)) /\ (B = B))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- (?v. (?w. (e = (v INSERT (w INSERT EMPTY))))), (FAN (x , (V , E))), (e IN E) |- ((u = ((aff_ge (x INSERT EMPTY)) e)) ==> ((x' IN u) ==> ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))))
T c==> c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c==> cFAN c, f1 c, f2 f3 c==> cIN f0 f3 c==> c= f4 * * part caff_ge * * part cINSERT f1 part cEMPTY f0 c==> cIN f5 f4 c\/ c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_gt * * part cINSERT f1 part cEMPTY b1 cIN f5 b0 c? / c/\ c? / c/\ cIN b1 f2 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f5 b0
- ((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')) ==> F)
T c==> c/\ ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
- (x = A), (((x = A) \/ (x = B)) /\ ((~ (x = B)) /\ (~ (x = A)))) |- (~ (A = B))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f2 c~ c= f0 f1 c~ c= f1 f2
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- |- (((!v. (!x. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F))) ==> ((\v. (!x. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F))) v)) = ((\v. (!x. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F))) v))
T c= c==> ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 cF * / ! c==> c~ c==> c/\ caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 cF f2 * / ! c==> c~ c==> c/\ caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 cF f2
- (~ F), (x = A), (((~ (x = A)) /\ (~ (x = B))) /\ ((x = B) \/ (x = A))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 c/\ c~ cF cF
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- (FINITE (((set_of_edge w) V) E)) |- ((FINITE (((set_of_edge w) V) E)) = T)
T c==> cFINITE * * * part cset_of_edge f0 f1 f2 c= cFINITE * * * part cset_of_edge f0 f1 f2 cT
- |- (((!x. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F)) ==> ((\x. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F)) x)) = ((\x. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F)) x))
T c= c==> ! c==> c~ c==> c/\ caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF * / c==> c~ c==> c/\ caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF f3 * / c==> c~ c==> c/\ caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF f3
- |- ((\x'. (!w. (!v. (!x. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> F))))) x')
T * / ! ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cF f0
- |- (T = (((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) _3320036)) \/ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) _3320036)) = ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) _3320036) \/ (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) _3320036)))))
T c= cT c= c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- |- ((\x. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F)) x)
T * / c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 c\/ caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 c\/ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b1 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY f2 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF f3
- (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')), ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) |- ((~ F) ==> F)
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ cF cF
- |- ((!x''. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'') \/ ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')) /\ ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x')))))) = ((!x'. (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')) \/ ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')) /\ ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))))
T c= ! c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY f3 c\/ ! caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY f3
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))), (FAN (x , (V , E))) |- (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c? / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f3 b0 c==> cFAN c, f2 c, f0 f1 c? / c/\ c? / c/\ cIN b1 f1 c= b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 cIN f3 b0
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- (?u. ((?e. ((e IN E) /\ (u = ((aff_ge (x INSERT EMPTY)) e)))) /\ (x' IN u))), (FAN (x , (V , E))) |- ((?u. ((?e. ((e IN E) /\ (u = ((aff_gt (x INSERT EMPTY)) e)))) /\ (x' IN u))) \/ (?u. ((?v. ((v IN V) /\ (u = ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))) /\ (x' IN u))))
T c==> c? / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY b1 cIN f2 b0 c==> cFAN c, f1 c, f3 f0 c\/ c? / c/\ c? / c/\ cIN b1 f0 c= b0 * * part caff_gt * * part cINSERT f1 part cEMPTY b1 cIN f2 b0 c? / c/\ c? / c/\ cIN b1 f3 c= b0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT b1 part cEMPTY cIN f2 b0
- ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F), (((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)) |- ((((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)) /\ ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c/\ c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
- |- ((!w. (!v. (!x. (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))))) = T)
T c= ! ! ! c==> c/\ caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cT
- (~ F), (x = A), (((x = A) \/ (x = B)) /\ ((~ (x = B)) /\ (~ (x = A)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f2 c~ c= f0 f1 c/\ c~ cF cF
- |- ((!x'. (!u'. (!v. (!x. (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x')))))) = (!x'. (!u'. (!v. (!x. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (u' INSERT EMPTY)) x'))))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u' INSERT EMPTY))) x'))) ==> F))))))
T c= ! ! ! ! c==> c/\ ! c= caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c\/ caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c\/ caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY b4 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY b0 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 ! ! ! ! c==> c~ c==> c/\ ! c= caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c\/ caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c\/ caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY b4 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY b0 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cF
