N Hdplygy.HDPLYGY
C |- (!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ (((NUMERAL (BIT0 (BIT1 _0))) < k) /\ (~ (((B_SY1 (a_sy s)) (b_sy s)) = EMPTY))))))) ==> (((continuous_on (lift o (\l. ((tau_star s) l)))) ((B_SY1 (a_sy s)) (b_sy s))) /\ (?x. ((x IN ((B_SY1 (a_sy s)) (b_sy s))) /\ (!y. ((y IN ((B_SY1 (a_sy s)) (b_sy s))) ==> ((real_le ((tau_star s) x)) ((tau_star s) y)))))))))
T c==> c/\ c= ck_sy f0 f1 c/\ c= cdimindex part cUNIV f1 c/\ c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 c/\ c< cNUMERAL cBIT0 cBIT1 c_0 f1 c~ c= * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 part cEMPTY c/\ ccontinuous_on * * part co part clift / ctau_star f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 c? / c/\ cIN b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 ! c==> cIN b1 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 creal_le ctau_star f0 b0 ctau_star f0 b1
D TRUTH
A |- T
T cT
D Hdplygy.CONTINUOUS_ON_TAU_STAR
A |- (!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))))) ==> ((continuous_on (lift o (\l. ((tau_star s) l)))) ((B_SY1 (a_sy s)) (b_sy s)))))
T c==> c/\ c= ck_sy f0 f1 c/\ c= cdimindex part cUNIV f1 c/\ c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 c< cNUMERAL cBIT0 cBIT1 c_0 f1 ccontinuous_on * * part co part clift / ctau_star f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0
D Hdplygy.MINIMUM_IN_B_SY
A |- (!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ (((NUMERAL (BIT0 (BIT1 _0))) < k) /\ (~ (((B_SY1 (a_sy s)) (b_sy s)) = EMPTY))))))) ==> (?x. ((x IN ((B_SY1 (a_sy s)) (b_sy s))) /\ (!y. ((y IN ((B_SY1 (a_sy s)) (b_sy s))) ==> ((real_le ((tau_star s) x)) ((tau_star s) y))))))))
T c==> c/\ c= ck_sy f0 f1 c/\ c= cdimindex part cUNIV f1 c/\ c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 c/\ c< cNUMERAL cBIT0 cBIT1 c_0 f1 c~ c= * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 part cEMPTY c? / c/\ cIN b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 ! c==> cIN b1 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 creal_le ctau_star f0 b0 ctau_star f0 b1
- |- ((\k. (!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ (((NUMERAL (BIT0 (BIT1 _0))) < k) /\ (~ (((B_SY1 (a_sy s)) (b_sy s)) = EMPTY))))))) ==> (?x. ((x IN ((B_SY1 (a_sy s)) (b_sy s))) /\ (!y. ((y IN ((B_SY1 (a_sy s)) (b_sy s))) ==> ((real_le ((tau_star s) x)) ((tau_star s) y))))))))) k)
T * / ! c==> c/\ c= ck_sy b1 b0 c/\ c= cdimindex part cUNIV b0 c/\ c= * part cI_SY b1 * * part c.. cNUMERAL c_0 c- b0 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy b1 / cMOD c+ cNUMERAL cBIT1 c_0 b2 b0 c/\ c< cNUMERAL cBIT0 cBIT1 c_0 b0 c~ c= * * part cB_SY1 * part ca_sy b1 * part cb_sy b1 part cEMPTY c? / c/\ cIN b2 * * part cB_SY1 * part ca_sy b1 * part cb_sy b1 ! c==> cIN b3 * * part cB_SY1 * part ca_sy b1 * part cb_sy b1 creal_le ctau_star b1 b2 ctau_star b1 b3 f0
+ (((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ (((NUMERAL (BIT0 (BIT1 _0))) < k) /\ (~ (((B_SY1 (a_sy s)) (b_sy s)) = EMPTY))))))) |- ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ (((NUMERAL (BIT0 (BIT1 _0))) < k) /\ (~ (((B_SY1 (a_sy s)) (b_sy s)) = EMPTY))))))) /\ (((continuous_on (lift o (\l. ((tau_star s) l)))) ((B_SY1 (a_sy s)) (b_sy s))) /\ (?x. ((x IN ((B_SY1 (a_sy s)) (b_sy s))) /\ (!y. ((y IN ((B_SY1 (a_sy s)) (b_sy s))) ==> ((real_le ((tau_star s) x)) ((tau_star s) y))))))))
T c==> c/\ c= ck_sy f0 f1 c/\ c= cdimindex part cUNIV f1 c/\ c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 c/\ c< cNUMERAL cBIT0 cBIT1 c_0 f1 c~ c= * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 part cEMPTY c/\ c/\ c= ck_sy f0 f1 c/\ c= cdimindex part cUNIV f1 c/\ c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 c/\ c< cNUMERAL cBIT0 cBIT1 c_0 f1 c~ c= * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 part cEMPTY c/\ ccontinuous_on * * part co part clift / ctau_star f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 c? / c/\ cIN b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 ! c==> cIN b1 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 creal_le ctau_star f0 b0 ctau_star f0 b1
+ ((k_sy s) = k), (((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ (((NUMERAL (BIT0 (BIT1 _0))) < k) /\ (~ (((B_SY1 (a_sy s)) (b_sy s)) = EMPTY))))))) |- (((continuous_on (lift o (\l. ((tau_star s) l)))) ((B_SY1 (a_sy s)) (b_sy s))) /\ (?x. ((x IN ((B_SY1 (a_sy s)) (b_sy s))) /\ (!y. ((y IN ((B_SY1 (a_sy s)) (b_sy s))) ==> ((real_le ((tau_star s) x)) ((tau_star s) y)))))))
T c==> c= ck_sy f0 f1 c==> c/\ c= ck_sy f0 f1 c/\ c= cdimindex part cUNIV f1 c/\ c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 c/\ c< cNUMERAL cBIT0 cBIT1 c_0 f1 c~ c= * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 part cEMPTY c/\ ccontinuous_on * * part co part clift / ctau_star f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 c? / c/\ cIN b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 ! c==> cIN b1 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 creal_le ctau_star f0 b0 ctau_star f0 b1
+ ((NUMERAL (BIT0 (BIT1 _0))) < k) |- (((NUMERAL (BIT0 (BIT1 _0))) < k) = T)
T c==> c< cNUMERAL cBIT0 cBIT1 c_0 f0 c= c< cNUMERAL cBIT0 cBIT1 c_0 f0 cT
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((\s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))))) ==> ((continuous_on (lift o (\l. ((tau_star s) l)))) ((B_SY1 (a_sy s)) (b_sy s))))) s)
T * / c==> c/\ c= ck_sy b0 f0 c/\ c= cdimindex part cUNIV f0 c/\ c= * part cI_SY b0 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy b0 / cMOD c+ cNUMERAL cBIT1 c_0 b1 f0 c< cNUMERAL cBIT0 cBIT1 c_0 f0 ccontinuous_on * * part co part clift / ctau_star b0 b1 * * part cB_SY1 * part ca_sy b0 * part cb_sy b0 f1
+ ((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))), ((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))), ((dimindex UNIV) = k), ((k_sy s) = k), ((NUMERAL (BIT0 (BIT1 _0))) < k) |- ((?x. ((x IN ((B_SY1 (a_sy s)) (b_sy s))) /\ (!y. ((y IN ((B_SY1 (a_sy s)) (b_sy s))) ==> ((real_le ((tau_star s) x)) ((tau_star s) y)))))) = (((continuous_on (lift o (\l. ((tau_star s) l)))) ((B_SY1 (a_sy s)) (b_sy s))) /\ (?x. ((x IN ((B_SY1 (a_sy s)) (b_sy s))) /\ (!y. ((y IN ((B_SY1 (a_sy s)) (b_sy s))) ==> ((real_le ((tau_star s) x)) ((tau_star s) y))))))))
T c==> c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c==> c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 c==> c= cdimindex part cUNIV f1 c==> c= ck_sy f0 f1 c==> c< cNUMERAL cBIT0 cBIT1 c_0 f1 c= c? / c/\ cIN b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 ! c==> cIN b1 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 creal_le ctau_star f0 b0 ctau_star f0 b1 c/\ ccontinuous_on * * part co part clift / ctau_star f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 c? / c/\ cIN b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 ! c==> cIN b1 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 creal_le ctau_star f0 b0 ctau_star f0 b1
+ |- ((\s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ (((NUMERAL (BIT0 (BIT1 _0))) < k) /\ (~ (((B_SY1 (a_sy s)) (b_sy s)) = EMPTY))))))) ==> (?x. ((x IN ((B_SY1 (a_sy s)) (b_sy s))) /\ (!y. ((y IN ((B_SY1 (a_sy s)) (b_sy s))) ==> ((real_le ((tau_star s) x)) ((tau_star s) y)))))))) s)
T * / c==> c/\ c= ck_sy b0 f0 c/\ c= cdimindex part cUNIV f0 c/\ c= * part cI_SY b0 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy b0 / cMOD c+ cNUMERAL cBIT1 c_0 b1 f0 c/\ c< cNUMERAL cBIT0 cBIT1 c_0 f0 c~ c= * * part cB_SY1 * part ca_sy b0 * part cb_sy b0 part cEMPTY c? / c/\ cIN b1 * * part cB_SY1 * part ca_sy b0 * part cb_sy b0 ! c==> cIN b2 * * part cB_SY1 * part ca_sy b0 * part cb_sy b0 creal_le ctau_star b0 b1 ctau_star b0 b2 f1
- |- ((!y. t) = t)
T c= ! f0 f0
+ ((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))), ((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))), ((dimindex UNIV) = k), ((k_sy s) = k), ((NUMERAL (BIT0 (BIT1 _0))) < k) |- (T = (((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))))) ==> ((continuous_on (lift o (\l. ((tau_star s) l)))) ((B_SY1 (a_sy s)) (b_sy s)))) ==> ((continuous_on (lift o (\l. ((tau_star s) l)))) ((B_SY1 (a_sy s)) (b_sy s)))))
T c==> c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c==> c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 c==> c= cdimindex part cUNIV f1 c==> c= ck_sy f0 f1 c==> c< cNUMERAL cBIT0 cBIT1 c_0 f1 c= cT c==> c==> c/\ c= ck_sy f0 f1 c/\ c= cdimindex part cUNIV f1 c/\ c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 c< cNUMERAL cBIT0 cBIT1 c_0 f1 ccontinuous_on * * part co part clift / ctau_star f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 ccontinuous_on * * part co part clift / ctau_star f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0
+ ((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))), ((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))), ((dimindex UNIV) = k), ((k_sy s) = k), ((NUMERAL (BIT0 (BIT1 _0))) < k) |- (((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))))) ==> ((continuous_on (lift o (\l. ((tau_star s) l)))) ((B_SY1 (a_sy s)) (b_sy s)))) ==> ((continuous_on (lift o (\l. ((tau_star s) l)))) ((B_SY1 (a_sy s)) (b_sy s))))
T c==> c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c==> c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 c==> c= cdimindex part cUNIV f1 c==> c= ck_sy f0 f1 c==> c< cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> c/\ c= ck_sy f0 f1 c/\ c= cdimindex part cUNIV f1 c/\ c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 c< cNUMERAL cBIT0 cBIT1 c_0 f1 ccontinuous_on * * part co part clift / ctau_star f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 ccontinuous_on * * part co part clift / ctau_star f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0
- |- ((?x. t) = t)
T c= c? / f0 f0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (~ (((B_SY1 (a_sy s)) (b_sy s)) = EMPTY)) |- ((((B_SY1 (a_sy s)) (b_sy s)) = EMPTY) = F)
T c==> c~ c= * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 part cEMPTY c= c= * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 part cEMPTY cF
+ (~ (((B_SY1 (a_sy s)) (b_sy s)) = EMPTY)), ((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))), ((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))), ((dimindex UNIV) = k), ((k_sy s) = k), ((NUMERAL (BIT0 (BIT1 _0))) < k) |- (T = (((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ (((NUMERAL (BIT0 (BIT1 _0))) < k) /\ (~ (((B_SY1 (a_sy s)) (b_sy s)) = EMPTY))))))) ==> (?x. ((x IN ((B_SY1 (a_sy s)) (b_sy s))) /\ (!y. ((y IN ((B_SY1 (a_sy s)) (b_sy s))) ==> ((real_le ((tau_star s) x)) ((tau_star s) y))))))) ==> (?x. ((x IN ((B_SY1 (a_sy s)) (b_sy s))) /\ (!y. ((y IN ((B_SY1 (a_sy s)) (b_sy s))) ==> ((real_le ((tau_star s) x)) ((tau_star s) y))))))))
T c==> c~ c= * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 part cEMPTY c==> c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c==> c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 c==> c= cdimindex part cUNIV f1 c==> c= ck_sy f0 f1 c==> c< cNUMERAL cBIT0 cBIT1 c_0 f1 c= cT c==> c==> c/\ c= ck_sy f0 f1 c/\ c= cdimindex part cUNIV f1 c/\ c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 c/\ c< cNUMERAL cBIT0 cBIT1 c_0 f1 c~ c= * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 part cEMPTY c? / c/\ cIN b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 ! c==> cIN b1 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 creal_le ctau_star f0 b0 ctau_star f0 b1 c? / c/\ cIN b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 ! c==> cIN b1 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 creal_le ctau_star f0 b0 ctau_star f0 b1
- |- ((!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))))) ==> ((continuous_on (lift o (\l. ((tau_star s) l)))) ((B_SY1 (a_sy s)) (b_sy s))))) = T)
T c= ! c==> c/\ c= ck_sy b0 f0 c/\ c= cdimindex part cUNIV f0 c/\ c= * part cI_SY b0 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy b0 / cMOD c+ cNUMERAL cBIT1 c_0 b1 f0 c< cNUMERAL cBIT0 cBIT1 c_0 f0 ccontinuous_on * * part co part clift / ctau_star b0 b1 * * part cB_SY1 * part ca_sy b0 * part cb_sy b0 cT
- (~ (((B_SY1 (a_sy s)) (b_sy s)) = EMPTY)) |- (~ (EMPTY = ((B_SY1 (a_sy s)) (b_sy s))))
T c==> c~ c= * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 part cEMPTY c~ c= part cEMPTY * * part cB_SY1 * part ca_sy f0 * part cb_sy f0
+ |- (((!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ (((NUMERAL (BIT0 (BIT1 _0))) < k) /\ (~ (((B_SY1 (a_sy s)) (b_sy s)) = EMPTY))))))) ==> (?x. ((x IN ((B_SY1 (a_sy s)) (b_sy s))) /\ (!y. ((y IN ((B_SY1 (a_sy s)) (b_sy s))) ==> ((real_le ((tau_star s) x)) ((tau_star s) y)))))))) ==> ((\s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ (((NUMERAL (BIT0 (BIT1 _0))) < k) /\ (~ (((B_SY1 (a_sy s)) (b_sy s)) = EMPTY))))))) ==> (?x. ((x IN ((B_SY1 (a_sy s)) (b_sy s))) /\ (!y. ((y IN ((B_SY1 (a_sy s)) (b_sy s))) ==> ((real_le ((tau_star s) x)) ((tau_star s) y)))))))) s)) = ((\s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ (((NUMERAL (BIT0 (BIT1 _0))) < k) /\ (~ (((B_SY1 (a_sy s)) (b_sy s)) = EMPTY))))))) ==> (?x. ((x IN ((B_SY1 (a_sy s)) (b_sy s))) /\ (!y. ((y IN ((B_SY1 (a_sy s)) (b_sy s))) ==> ((real_le ((tau_star s) x)) ((tau_star s) y)))))))) s))
T c= c==> ! c==> c/\ c= ck_sy b0 f0 c/\ c= cdimindex part cUNIV f0 c/\ c= * part cI_SY b0 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy b0 / cMOD c+ cNUMERAL cBIT1 c_0 b1 f0 c/\ c< cNUMERAL cBIT0 cBIT1 c_0 f0 c~ c= * * part cB_SY1 * part ca_sy b0 * part cb_sy b0 part cEMPTY c? / c/\ cIN b1 * * part cB_SY1 * part ca_sy b0 * part cb_sy b0 ! c==> cIN b2 * * part cB_SY1 * part ca_sy b0 * part cb_sy b0 creal_le ctau_star b0 b1 ctau_star b0 b2 * / c==> c/\ c= ck_sy b0 f0 c/\ c= cdimindex part cUNIV f0 c/\ c= * part cI_SY b0 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy b0 / cMOD c+ cNUMERAL cBIT1 c_0 b1 f0 c/\ c< cNUMERAL cBIT0 cBIT1 c_0 f0 c~ c= * * part cB_SY1 * part ca_sy b0 * part cb_sy b0 part cEMPTY c? / c/\ cIN b1 * * part cB_SY1 * part ca_sy b0 * part cb_sy b0 ! c==> cIN b2 * * part cB_SY1 * part ca_sy b0 * part cb_sy b0 creal_le ctau_star b0 b1 ctau_star b0 b2 f1 * / c==> c/\ c= ck_sy b0 f0 c/\ c= cdimindex part cUNIV f0 c/\ c= * part cI_SY b0 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy b0 / cMOD c+ cNUMERAL cBIT1 c_0 b1 f0 c/\ c< cNUMERAL cBIT0 cBIT1 c_0 f0 c~ c= * * part cB_SY1 * part ca_sy b0 * part cb_sy b0 part cEMPTY c? / c/\ cIN b1 * * part cB_SY1 * part ca_sy b0 * part cb_sy b0 ! c==> cIN b2 * * part cB_SY1 * part ca_sy b0 * part cb_sy b0 creal_le ctau_star b0 b1 ctau_star b0 b2 f1
- (~ (((B_SY1 (a_sy s)) (b_sy s)) = EMPTY)) |- (((~ (EMPTY = ((B_SY1 (a_sy s)) (b_sy s)))) ==> ((EMPTY = ((B_SY1 (a_sy s)) (b_sy s))) = F)) = ((EMPTY = ((B_SY1 (a_sy s)) (b_sy s))) = F))
T c==> c~ c= * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 part cEMPTY c= c==> c~ c= part cEMPTY * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 c= c= part cEMPTY * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 cF c= c= part cEMPTY * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 cF
- |- ((\k. (!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))))) ==> ((continuous_on (lift o (\l. ((tau_star s) l)))) ((B_SY1 (a_sy s)) (b_sy s)))))) k)
T * / ! c==> c/\ c= ck_sy b1 b0 c/\ c= cdimindex part cUNIV b0 c/\ c= * part cI_SY b1 * * part c.. cNUMERAL c_0 c- b0 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy b1 / cMOD c+ cNUMERAL cBIT1 c_0 b2 b0 c< cNUMERAL cBIT0 cBIT1 c_0 b0 ccontinuous_on * * part co part clift / ctau_star b1 b2 * * part cB_SY1 * part ca_sy b1 * part cb_sy b1 f0
+ |- (((!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))))) ==> ((continuous_on (lift o (\l. ((tau_star s) l)))) ((B_SY1 (a_sy s)) (b_sy s))))) ==> ((\s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))))) ==> ((continuous_on (lift o (\l. ((tau_star s) l)))) ((B_SY1 (a_sy s)) (b_sy s))))) s)) = ((\s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))))) ==> ((continuous_on (lift o (\l. ((tau_star s) l)))) ((B_SY1 (a_sy s)) (b_sy s))))) s))
T c= c==> ! c==> c/\ c= ck_sy b0 f0 c/\ c= cdimindex part cUNIV f0 c/\ c= * part cI_SY b0 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy b0 / cMOD c+ cNUMERAL cBIT1 c_0 b1 f0 c< cNUMERAL cBIT0 cBIT1 c_0 f0 ccontinuous_on * * part co part clift / ctau_star b0 b1 * * part cB_SY1 * part ca_sy b0 * part cb_sy b0 * / c==> c/\ c= ck_sy b0 f0 c/\ c= cdimindex part cUNIV f0 c/\ c= * part cI_SY b0 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy b0 / cMOD c+ cNUMERAL cBIT1 c_0 b1 f0 c< cNUMERAL cBIT0 cBIT1 c_0 f0 ccontinuous_on * * part co part clift / ctau_star b0 b1 * * part cB_SY1 * part ca_sy b0 * part cb_sy b0 f1 * / c==> c/\ c= ck_sy b0 f0 c/\ c= cdimindex part cUNIV f0 c/\ c= * part cI_SY b0 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy b0 / cMOD c+ cNUMERAL cBIT1 c_0 b1 f0 c< cNUMERAL cBIT0 cBIT1 c_0 f0 ccontinuous_on * * part co part clift / ctau_star b0 b1 * * part cB_SY1 * part ca_sy b0 * part cb_sy b0 f1
- (((B_SY1 (a_sy s)) (b_sy s)) = EMPTY) |- (EMPTY = ((B_SY1 (a_sy s)) (b_sy s)))
T c==> c= * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 part cEMPTY c= part cEMPTY * * part cB_SY1 * part ca_sy f0 * part cb_sy f0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((!k. (!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))))) ==> ((continuous_on (lift o (\l. ((tau_star s) l)))) ((B_SY1 (a_sy s)) (b_sy s)))))) ==> ((\k. (!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))))) ==> ((continuous_on (lift o (\l. ((tau_star s) l)))) ((B_SY1 (a_sy s)) (b_sy s)))))) k)) = ((\k. (!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))))) ==> ((continuous_on (lift o (\l. ((tau_star s) l)))) ((B_SY1 (a_sy s)) (b_sy s)))))) k))
T c= c==> ! ! c==> c/\ c= ck_sy b1 b0 c/\ c= cdimindex part cUNIV b0 c/\ c= * part cI_SY b1 * * part c.. cNUMERAL c_0 c- b0 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy b1 / cMOD c+ cNUMERAL cBIT1 c_0 b2 b0 c< cNUMERAL cBIT0 cBIT1 c_0 b0 ccontinuous_on * * part co part clift / ctau_star b1 b2 * * part cB_SY1 * part ca_sy b1 * part cb_sy b1 * / ! c==> c/\ c= ck_sy b1 b0 c/\ c= cdimindex part cUNIV b0 c/\ c= * part cI_SY b1 * * part c.. cNUMERAL c_0 c- b0 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy b1 / cMOD c+ cNUMERAL cBIT1 c_0 b2 b0 c< cNUMERAL cBIT0 cBIT1 c_0 b0 ccontinuous_on * * part co part clift / ctau_star b1 b2 * * part cB_SY1 * part ca_sy b1 * part cb_sy b1 f0 * / ! c==> c/\ c= ck_sy b1 b0 c/\ c= cdimindex part cUNIV b0 c/\ c= * part cI_SY b1 * * part c.. cNUMERAL c_0 c- b0 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy b1 / cMOD c+ cNUMERAL cBIT1 c_0 b2 b0 c< cNUMERAL cBIT0 cBIT1 c_0 b0 ccontinuous_on * * part co part clift / ctau_star b1 b2 * * part cB_SY1 * part ca_sy b1 * part cb_sy b1 f0
- |- ((!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ (((NUMERAL (BIT0 (BIT1 _0))) < k) /\ (~ (((B_SY1 (a_sy s)) (b_sy s)) = EMPTY))))))) ==> (?x. ((x IN ((B_SY1 (a_sy s)) (b_sy s))) /\ (!y. ((y IN ((B_SY1 (a_sy s)) (b_sy s))) ==> ((real_le ((tau_star s) x)) ((tau_star s) y)))))))) = T)
T c= ! c==> c/\ c= ck_sy b0 f0 c/\ c= cdimindex part cUNIV f0 c/\ c= * part cI_SY b0 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy b0 / cMOD c+ cNUMERAL cBIT1 c_0 b1 f0 c/\ c< cNUMERAL cBIT0 cBIT1 c_0 f0 c~ c= * * part cB_SY1 * part ca_sy b0 * part cb_sy b0 part cEMPTY c? / c/\ cIN b1 * * part cB_SY1 * part ca_sy b0 * part cb_sy b0 ! c==> cIN b2 * * part cB_SY1 * part ca_sy b0 * part cb_sy b0 creal_le ctau_star b0 b1 ctau_star b0 b2 cT
- (~ (((B_SY1 (a_sy s)) (b_sy s)) = EMPTY)) |- ((EMPTY = ((B_SY1 (a_sy s)) (b_sy s))) = F)
T c==> c~ c= * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 part cEMPTY c= c= part cEMPTY * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 cF
- |- (((!k. (!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ (((NUMERAL (BIT0 (BIT1 _0))) < k) /\ (~ (((B_SY1 (a_sy s)) (b_sy s)) = EMPTY))))))) ==> (?x. ((x IN ((B_SY1 (a_sy s)) (b_sy s))) /\ (!y. ((y IN ((B_SY1 (a_sy s)) (b_sy s))) ==> ((real_le ((tau_star s) x)) ((tau_star s) y))))))))) ==> ((\k. (!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ (((NUMERAL (BIT0 (BIT1 _0))) < k) /\ (~ (((B_SY1 (a_sy s)) (b_sy s)) = EMPTY))))))) ==> (?x. ((x IN ((B_SY1 (a_sy s)) (b_sy s))) /\ (!y. ((y IN ((B_SY1 (a_sy s)) (b_sy s))) ==> ((real_le ((tau_star s) x)) ((tau_star s) y))))))))) k)) = ((\k. (!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ (((NUMERAL (BIT0 (BIT1 _0))) < k) /\ (~ (((B_SY1 (a_sy s)) (b_sy s)) = EMPTY))))))) ==> (?x. ((x IN ((B_SY1 (a_sy s)) (b_sy s))) /\ (!y. ((y IN ((B_SY1 (a_sy s)) (b_sy s))) ==> ((real_le ((tau_star s) x)) ((tau_star s) y))))))))) k))
T c= c==> ! ! c==> c/\ c= ck_sy b1 b0 c/\ c= cdimindex part cUNIV b0 c/\ c= * part cI_SY b1 * * part c.. cNUMERAL c_0 c- b0 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy b1 / cMOD c+ cNUMERAL cBIT1 c_0 b2 b0 c/\ c< cNUMERAL cBIT0 cBIT1 c_0 b0 c~ c= * * part cB_SY1 * part ca_sy b1 * part cb_sy b1 part cEMPTY c? / c/\ cIN b2 * * part cB_SY1 * part ca_sy b1 * part cb_sy b1 ! c==> cIN b3 * * part cB_SY1 * part ca_sy b1 * part cb_sy b1 creal_le ctau_star b1 b2 ctau_star b1 b3 * / ! c==> c/\ c= ck_sy b1 b0 c/\ c= cdimindex part cUNIV b0 c/\ c= * part cI_SY b1 * * part c.. cNUMERAL c_0 c- b0 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy b1 / cMOD c+ cNUMERAL cBIT1 c_0 b2 b0 c/\ c< cNUMERAL cBIT0 cBIT1 c_0 b0 c~ c= * * part cB_SY1 * part ca_sy b1 * part cb_sy b1 part cEMPTY c? / c/\ cIN b2 * * part cB_SY1 * part ca_sy b1 * part cb_sy b1 ! c==> cIN b3 * * part cB_SY1 * part ca_sy b1 * part cb_sy b1 creal_le ctau_star b1 b2 ctau_star b1 b3 f0 * / ! c==> c/\ c= ck_sy b1 b0 c/\ c= cdimindex part cUNIV b0 c/\ c= * part cI_SY b1 * * part c.. cNUMERAL c_0 c- b0 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy b1 / cMOD c+ cNUMERAL cBIT1 c_0 b2 b0 c/\ c< cNUMERAL cBIT0 cBIT1 c_0 b0 c~ c= * * part cB_SY1 * part ca_sy b1 * part cb_sy b1 part cEMPTY c? / c/\ cIN b2 * * part cB_SY1 * part ca_sy b1 * part cb_sy b1 ! c==> cIN b3 * * part cB_SY1 * part ca_sy b1 * part cb_sy b1 creal_le ctau_star b1 b2 ctau_star b1 b3 f0
- (EMPTY = ((B_SY1 (a_sy s)) (b_sy s))) |- (((B_SY1 (a_sy s)) (b_sy s)) = EMPTY)
T c==> c= part cEMPTY * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 c= * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 part cEMPTY
