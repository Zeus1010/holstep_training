N Tame_list.faceListAt_makeFaceFinal
C |- (!g. (!f. ((faceListAt ((makeFaceFinal f) g)) = ((MAP (makeFaceFinalFaceList f)) (faceListAt g)))))
T c= cfaceListAt cmakeFaceFinal f0 f1 cMAP * part cmakeFaceFinalFaceList f0 cfaceListAt f1
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D Tame_defs.makeFaceFinal
A |- (!f. (!g. (((makeFaceFinal f) g) = ((((Graph ((makeFaceFinalFaceList f) (faces g))) (countVertices g)) ((MAP (\fs. ((makeFaceFinalFaceList f) fs))) (faceListAt g))) (heights g)))))
T c= cmakeFaceFinal f0 f1 cGraph cmakeFaceFinalFaceList f0 cfaces f1 ccountVertices f1 cMAP / cmakeFaceFinalFaceList f0 b0 cfaceListAt f1 cheights f1
D Tame_list.FACE_LIST_AT
A |- ((faceListAt ((((Graph fs) n) f) h)) = f)
T c= cfaceListAt cGraph f0 f1 f2 f3 f2
+ |- (!g. (!f. (((MAP (\x. ((makeFaceFinalFaceList f) x))) (faceListAt g)) = ((MAP (makeFaceFinalFaceList f)) (faceListAt g)))))
T c= cMAP / cmakeFaceFinalFaceList f0 b0 cfaceListAt f1 cMAP * part cmakeFaceFinalFaceList f0 cfaceListAt f1
+ |- ((\t. ((\x. (t x)) = t)) t)
T * / c= / * b0 b1 b0 f0
+ |- ((\f. (!g. (((makeFaceFinal f) g) = ((((Graph ((makeFaceFinalFaceList f) (faces g))) (countVertices g)) ((MAP (\fs. ((makeFaceFinalFaceList f) fs))) (faceListAt g))) (heights g))))) f)
T * / ! c= cmakeFaceFinal b0 b1 cGraph cmakeFaceFinalFaceList b0 cfaces b1 ccountVertices b1 cMAP / cmakeFaceFinalFaceList b0 b2 cfaceListAt b1 cheights b1 f0
- |- ((!f. t) = t)
T c= ! f0 f0
- |- (T = ((\x. ((makeFaceFinalFaceList f) x)) = (makeFaceFinalFaceList f)))
T c= cT c= / cmakeFaceFinalFaceList f0 b0 * part cmakeFaceFinalFaceList f0
- |- ((x = x) = T)
T c= c= f0 f0 cT
