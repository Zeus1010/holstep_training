N Add_triangle.orbit_map_le3
C |- (!f. (!x. (((f (f (f x))) = x) ==> (((orbit_map f) x) = (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY)))))))
T c==> c= * f0 * f0 * f0 f1 f1 c= * * part corbit_map f0 f1 * * part cINSERT f1 * * part cINSERT * f0 f1 * * part cINSERT * f0 * f0 f1 part cEMPTY
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D o_THM
A |- (!f. (!g. (!x. (((f o g) x) = (f (g x))))))
T c= co f0 f1 f2 * f0 * f1 f2
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D Ssrnat.add0n
A |- (!n. (((NUMERAL _0) + n) = n))
T c= c+ cNUMERAL c_0 f0 f0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D ADD_CLAUSES
A |- ((!n. (((NUMERAL _0) + n) = n)) /\ ((!m. ((m + (NUMERAL _0)) = m)) /\ ((!m. (!n. (((SUC m) + n) = (SUC (m + n))))) /\ (!m. (!n. ((m + (SUC n)) = (SUC (m + n))))))))
T c/\ ! c= c+ cNUMERAL c_0 b0 b0 c/\ ! c= c+ b0 cNUMERAL c_0 b0 c/\ ! ! c= c+ cSUC b0 b1 cSUC c+ b0 b1 ! ! c= c+ b0 cSUC b1 cSUC c+ b0 b1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D ADD_ASSOC
A |- (!m. (!n. (!p. ((m + (n + p)) = ((m + n) + p)))))
T c= c+ f0 c+ f1 f2 c+ c+ f0 f1 f2
D ADD_AC
A |- (((m + n) = (n + m)) /\ ((((m + n) + p) = (m + (n + p))) /\ ((m + (n + p)) = (n + (m + p)))))
T c/\ c= c+ f0 f1 c+ f1 f0 c/\ c= c+ c+ f0 f1 f2 c+ f0 c+ f1 f2 c= c+ f0 c+ f1 f2 c+ f1 c+ f0 f2
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D ADD1
A |- (!m. ((SUC m) = (m + (NUMERAL (BIT1 _0)))))
T c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
D Ssrnat.mul0n
A |- (!n. (((NUMERAL _0) * n) = (NUMERAL _0)))
T c= c* cNUMERAL c_0 f0 cNUMERAL c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D Ssrnat.mul1n
A |- (!n. (((NUMERAL (BIT1 _0)) * n) = n))
T c= c* cNUMERAL cBIT1 c_0 f0 f0
D LEFT_ADD_DISTRIB
A |- (!m. (!n. (!p. ((m * (n + p)) = ((m * n) + (m * p))))))
T c= c* f0 c+ f1 f2 c+ c* f0 f1 c* f0 f2
D MULT_AC
A |- (((m * n) = (n * m)) /\ ((((m * n) * p) = (m * (n * p))) /\ ((m * (n * p)) = (n * (m * p)))))
T c/\ c= c* f0 f1 c* f1 f0 c/\ c= c* c* f0 f1 f2 c* f0 c* f1 f2 c= c* f0 c* f1 f2 c* f1 c* f0 f2
D Ssrnat.expnS
A |- (!m. (!n. ((m EXP (SUC n)) = (m * (m EXP n)))))
T c= cEXP f0 cSUC f1 c* f0 cEXP f0 f1
D Ssrnat.expn0
A |- (!m. ((m EXP (NUMERAL _0)) = (NUMERAL (BIT1 _0))))
T c= cEXP f0 cNUMERAL c_0 cNUMERAL cBIT1 c_0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D Hypermap.THREE
A |- ((NUMERAL (BIT1 (BIT1 _0))) = (SUC (NUMERAL (BIT0 (BIT1 _0)))))
T c= cNUMERAL cBIT1 cBIT1 c_0 cSUC cNUMERAL cBIT0 cBIT1 c_0
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_OF_NUM_ADD
A |- (!m. (!n. (((int_add (int_of_num m)) (int_of_num n)) = (int_of_num (m + n)))))
T c= cint_add cint_of_num f0 cint_of_num f1 cint_of_num c+ f0 f1
D INT_OF_NUM_LT
A |- (!m. (!n. (((int_lt (int_of_num m)) (int_of_num n)) = (m < n))))
T c= cint_lt cint_of_num f0 cint_of_num f1 c< f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D Misc_defs_and_lemmas.IN_ELIM_THM'
A |- ((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D Fan.POWER
A |- ((!f. (((POWER f) (NUMERAL _0)) = I)) /\ (!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))))
T c/\ ! c= * * part cPOWER b0 cNUMERAL c_0 part cI ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0
D Fan.POWER_0
A |- (!f. (((POWER f) (NUMERAL _0)) = I))
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
D Hypermap.orbit_cyclic
A |- (!f. (!m. (!x. (((~ (m = (NUMERAL _0))) /\ ((((POWER f) m) x) = x)) ==> (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < m)) (((POWER f) k) x))))))))))
T c==> c/\ c~ c= f0 cNUMERAL c_0 c= cPOWER f1 f0 f2 f2 c= * * part corbit_map f1 f2 * part cGSPEC / c? / cSETSPEC b0 c< b1 f0 cPOWER f1 b1 f2
D num_cases
A |- (!P. (((P (NUMERAL _0)) /\ (!n. (P (SUC n)))) ==> (!m. (P m))))
T c==> c/\ * f0 cNUMERAL c_0 ! * f0 cSUC b0 ! * f0 b0
+ |- ((((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f x) = (f x))) = (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f x) = (I (f x)))))
T c= c/\ c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 f1 * f0 f1 c/\ c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 f1 cI * f0 f1
+ ((((POWER f) (NUMERAL (BIT1 (BIT1 _0)))) x) = x) |- ((((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) ==> (T ==> (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x)))))))) ==> (((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ T) ==> (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x)))))))) = (((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ T) ==> (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))))))))
T c==> c= cPOWER f0 cNUMERAL cBIT1 cBIT1 c_0 f1 f1 c= c==> c==> c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c==> cT c= * * part corbit_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 c==> c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cT c= * * part corbit_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 c==> c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cT c= * * part corbit_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1
+ |- (((!x. ((I x) = x)) ==> ((\x. ((I x) = x)) x)) = ((\x. ((I x) = x)) x))
T c= c==> ! c= cI b0 b0 * / c= cI b0 b0 f0 * / c= cI b0 b0 f0
+ |- ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)
T * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
- |- ((!P. (((P (NUMERAL _0)) /\ (!n. (P (SUC n)))) ==> (!m. (P m)))) ==> (!P. (((P (NUMERAL _0)) /\ (!n. (P (SUC n)))) ==> (!m. (P m)))))
T c==> ! c==> c/\ * b0 cNUMERAL c_0 ! * b0 cSUC b1 ! * b0 b1 ! c==> c/\ * b0 cNUMERAL c_0 ! * b0 cSUC b1 ! * b0 b1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((((orbit_map (inverse (node_map H))) x) = ((orbit_map (node_map H)) x)) /\ (((orbit_map (inverse (node_map H))) x) = ((orbit_map (inverse (node_map H))) x)))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c= * * part corbit_map * part cinverse * part cnode_map f0 f1 * * part corbit_map * part cnode_map f0 f1 c= * * part corbit_map * part cinverse * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1
+ |- ((\P. (((P (NUMERAL _0)) /\ (!n. (P (SUC n)))) ==> (!m. (P m)))) P)
T * / c==> c/\ * b0 cNUMERAL c_0 ! * b0 cSUC b1 ! * b0 b1 f0
- |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
+ (k = k1) |- (((k1 < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k1) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x)))))) = ((k1 < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x)))))))
T c==> c= f0 f1 c= c==> c< f1 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f2 f1 f3 f3 c\/ c= cPOWER f2 f0 f3 * f2 f3 c= cPOWER f2 f0 f3 * f2 * f2 f3 c==> c< f1 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f2 f0 f3 f3 c\/ c= cPOWER f2 f0 f3 * f2 f3 c= cPOWER f2 f0 f3 * f2 * f2 f3
+ |- ((((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ ((((orbit_map f) x) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x)))))) ==> (((orbit_map f) x) = (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY)))))) ==> (((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) ==> (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))))))) ==> (((orbit_map f) x) = (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY)))))) = (((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) ==> (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))))))) ==> (((orbit_map f) x) = (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY))))))
T c= c==> c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c==> c= * * part corbit_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 c= * * part corbit_map f0 f1 * * part cINSERT f1 * * part cINSERT * f0 f1 * * part cINSERT * f0 * f0 f1 part cEMPTY c==> c==> c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c= * * part corbit_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 c= * * part corbit_map f0 f1 * * part cINSERT f1 * * part cINSERT * f0 f1 * * part cINSERT * f0 * f0 f1 part cEMPTY c==> c==> c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c= * * part corbit_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 c= * * part corbit_map f0 f1 * * part cINSERT f1 * * part cINSERT * f0 f1 * * part cINSERT * f0 * f0 f1 part cEMPTY
- ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) |- ((permutes (node_map H)) (dart H))
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI cpermutes * part cnode_map f0 * part cdart f0
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- (((~ (FINITE _8374774)) \/ ((~ ((permutes _8374775) _8374774)) \/ (((orbit_map (inverse _8374775)) _8374776) = ((orbit_map _8374775) _8374776)))) = ((~ (FINITE _8374774)) \/ ((~ ((permutes _8374775) _8374774)) \/ (((orbit_map (inverse _8374775)) _8374776) = ((orbit_map _8374775) _8374776)))))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= c\/ c~ cFINITE f2 c\/ c~ cpermutes f3 f2 c= * * part corbit_map * part cinverse f3 f4 * * part corbit_map f3 f4 c\/ c~ cFINITE f2 c\/ c~ cpermutes f3 f2 c= * * part corbit_map * part cinverse f3 f4 * * part corbit_map f3 f4
- |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
+ |- ((A /\ T) = A)
T c= c/\ f0 cT f0
+ |- (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) k) o f) o f) (f x)) = x) \/ ((((((((POWER f) k) o f) o f) o f) x) = (f x)) \/ (((((((POWER f) k) o f) o f) o f) x) = (f (f x))))))
T c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 f2 c\/ c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 * f1 f2 c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 * f1 * f1 f2
- (((real_ge (real_of_int _8374884)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))) |- ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ F), (~ (((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ F) /\ F)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ cF c==> c~ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c~ cF cF
- |- ((((~ (~ F)) = F) ==> (F ==> (~ (~ F)))) = (F ==> (~ (~ F))))
T c= c==> c= c~ c~ cF cF c==> cF c~ c~ cF c==> cF c~ c~ cF
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- F
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 cF
+ |- (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f (f x)) = (((((POWER f) (NUMERAL _0)) o f) o f) x)))
T c/\ c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 * f0 f1 co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1
+ ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x))) |- (((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x))) /\ ((y = x) \/ ((y = (f x)) \/ (y = (f (f x))))))
T c==> c/\ c< f0 cNUMERAL cBIT1 cBIT1 c_0 c= f1 cPOWER f2 f0 f3 c/\ c/\ c< f0 cNUMERAL cBIT1 cBIT1 c_0 c= f1 cPOWER f2 f0 f3 c\/ c= f1 f3 c\/ c= f1 * f2 f3 c= f1 * f2 * f2 f3
+ |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
+ |- ((((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) (SUC k)) o f) o f) x) = x) \/ ((((((POWER f) (SUC (SUC k))) o f) x) = (f x)) \/ (((((POWER f) (SUC (SUC k))) o f) x) = (f (f x)))))) = (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (SUC (SUC k))) o f) x) = x) \/ ((((((POWER f) (SUC (SUC k))) o f) x) = (f x)) \/ (((((POWER f) (SUC (SUC k))) o f) x) = (f (f x)))))))
T c= c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 f2 c\/ c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 * f1 f2 c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 * f1 * f1 f2 c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 f2 c\/ c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 * f1 f2 c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 * f1 * f1 f2
+ |- ((((((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (NUMERAL _0))) x) = x) \/ (((((POWER f) (SUC (NUMERAL _0))) x) = (f x)) \/ ((((POWER f) (SUC (NUMERAL _0))) x) = (f (f x)))))) /\ (!n. (((SUC (SUC n)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (SUC n))) x) = x) \/ (((((POWER f) (SUC (SUC n))) x) = (f x)) \/ ((((POWER f) (SUC (SUC n))) x) = (f (f x)))))))) ==> (!n. (((SUC n) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC n)) x) = x) \/ (((((POWER f) (SUC n)) x) = (f x)) \/ ((((POWER f) (SUC n)) x) = (f (f x)))))))) = (!n. (((SUC n) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC n)) x) = x) \/ (((((POWER f) (SUC n)) x) = (f x)) \/ ((((POWER f) (SUC n)) x) = (f (f x))))))))
T c= c==> c/\ c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC cNUMERAL c_0 f1 f1 c\/ c= cPOWER f0 cSUC cNUMERAL c_0 f1 * f0 f1 c= cPOWER f0 cSUC cNUMERAL c_0 f1 * f0 * f0 f1 ! c==> c< cSUC cSUC b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC cSUC b0 f1 f1 c\/ c= cPOWER f0 cSUC cSUC b0 f1 * f0 f1 c= cPOWER f0 cSUC cSUC b0 f1 * f0 * f0 f1 ! c==> c< cSUC b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC b0 f1 f1 c\/ c= cPOWER f0 cSUC b0 f1 * f0 f1 c= cPOWER f0 cSUC b0 f1 * f0 * f0 f1 ! c==> c< cSUC b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC b0 f1 f1 c\/ c= cPOWER f0 cSUC b0 f1 * f0 f1 c= cPOWER f0 cSUC b0 f1 * f0 * f0 f1
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
- |- ((\p'. (!q'. ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) = p') ==> ((p' ==> (((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI b0 c==> c==> b0 c= c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 b1 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> b0 b1 f2
- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))) |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c==> c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0 c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
+ |- (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (NUMERAL _0)) x) = x) \/ (((((POWER f) (NUMERAL _0)) x) = (f x)) \/ ((((POWER f) (NUMERAL _0)) x) = (f (f x))))))
T c==> c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cNUMERAL c_0 f1 f1 c\/ c= cPOWER f0 cNUMERAL c_0 f1 * f0 f1 c= cPOWER f0 cNUMERAL c_0 f1 * f0 * f0 f1
+ T, (~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))), ((((POWER f) (NUMERAL (BIT1 (BIT1 _0)))) x) = x) |- (T /\ (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x)))))))
T c==> cT c==> c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c==> c= cPOWER f0 cNUMERAL cBIT1 cBIT1 c_0 f1 f1 c/\ cT c= * * part corbit_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x))))) = (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))))))
T c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part cface f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part cnode f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part cedge f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1
+ |- ((((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I (f x)) = x) \/ (((I (f x)) = (f x)) \/ (((I o f) x) = (f (f x)))))) = (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I (f x)) = x) \/ ((((I o f) x) = (f x)) \/ (((I o f) x) = (f (f x)))))))
T c= c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI * f0 f1 f1 c\/ c= cI * f0 f1 * f0 f1 c= co part cI f0 f1 * f0 * f0 f1 c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI * f0 f1 f1 c\/ c= co part cI f0 f1 * f0 f1 c= co part cI f0 f1 * f0 * f0 f1
+ |- (!n. (((SUC n) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC n)) x) = x) \/ (((((POWER f) (SUC n)) x) = (f x)) \/ ((((POWER f) (SUC n)) x) = (f (f x)))))))
T c==> c< cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 cSUC f0 f2 f2 c\/ c= cPOWER f1 cSUC f0 f2 * f1 f2 c= cPOWER f1 cSUC f0 f2 * f1 * f1 f2
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
- ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) |- (((permutes (node_map H)) (dart H)) = T)
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= cpermutes * part cnode_map f0 * part cdart f0 cT
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ |- ((\k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (x = (((POWER f) k) x)))) (NUMERAL _0))
T * / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 b0 f0 cNUMERAL c_0
+ |- (~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0)))
T c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ F) ==> F)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c~ cF cF
+ |- (!x'. ((?k. (((\p. (\t. (p /\ (x' = t)))) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))) = ((x' = x) \/ ((x' = (f x)) \/ ((x' = (f (f x))) \/ (x' IN EMPTY))))))
T c= c? / * * / / c/\ b1 c= f0 b2 c< b0 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f1 b0 f2 c\/ c= f0 f2 c\/ c= f0 * f1 f2 c\/ c= f0 * f1 * f1 f2 cIN f0 part cEMPTY
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ |- ((m < n) = ((int_lt (int_of_num m)) (int_of_num n)))
T c= c< f0 f1 cint_lt cint_of_num f0 cint_of_num f1
- |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
- ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) |- ((permutes (face_map H)) (dart H))
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI cpermutes * part cface_map f0 * part cdart f0
+ |- (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I (f (f x))) = x) \/ (((I (f (f x))) = (f x)) \/ (((I o f) (f x)) = (f (f x))))))
T c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI * f0 * f0 f1 f1 c\/ c= cI * f0 * f0 f1 * f0 f1 c= co part cI f0 * f0 f1 * f0 * f0 f1
- (~ (((orbit_map (inverse (face_map H))) x) = ((orbit_map (inverse (face_map H))) x))) |- ((~ (((orbit_map (inverse (face_map H))) x) = ((orbit_map (inverse (face_map H))) x))) /\ (((orbit_map (inverse (face_map H))) x) = ((orbit_map (inverse (face_map H))) x)))
T c==> c~ c= * * part corbit_map * part cinverse * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c~ c= * * part corbit_map * part cinverse * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c= * * part corbit_map * part cinverse * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- |- ((~ (x = y)) = (((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y) \/ ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x)))
T c= c~ c= f0 f1 c\/ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
- |- (((!x. (((face H) x) = ((orbit_map (face_map H)) x))) ==> ((\x. (((face H) x) = ((orbit_map (face_map H)) x))) x)) = ((\x. (((face H) x) = ((orbit_map (face_map H)) x))) x))
T c= c==> ! c= * * part cface f0 b0 * * part corbit_map * part cface_map f0 b0 * / c= * * part cface f0 b0 * * part corbit_map * part cface_map f0 b0 f1 * / c= * * part cface f0 b0 * * part corbit_map * part cface_map f0 b0 f1
+ |- (?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f (f x)) = (((POWER f) k) x))))
T c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 * f0 f1 cPOWER f0 b0 f1
+ |- ((x' IN (GSPEC (\v. (?k. (((SETSPEC v) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x)))))) = (?k. (((\p. (\t. (p /\ (x' = t)))) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f1 b1 f2 c? / * * / / c/\ b1 c= f0 b2 c< b0 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f1 b0 f2
- |- ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)
T * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((orbit_map (inverse (edge_map H))) x) = ((orbit_map (edge_map H)) x))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ (((orbit_map (inverse (edge_map H))) x) = ((orbit_map (edge_map H)) x))) /\ (((orbit_map (inverse (edge_map H))) x) = ((orbit_map (edge_map H)) x)))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c= * * part corbit_map * part cinverse * part cedge_map f0 f1 * * part corbit_map * part cedge_map f0 f1 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c~ c= * * part corbit_map * part cinverse * part cedge_map f0 f1 * * part corbit_map * part cedge_map f0 f1 c= * * part corbit_map * part cinverse * part cedge_map f0 f1 * * part corbit_map * part cedge_map f0 f1
+ |- (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (SUC (SUC k))) o f) x) = x) \/ ((((((POWER f) (SUC (SUC k))) o f) x) = (f x)) \/ (((((POWER f) (SUC (SUC k))) o f) x) = (f (f x))))))
T c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 f2 c\/ c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 * f1 f2 c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 * f1 * f1 f2
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- (((permutes (edge_map H)) (dart H)) = ((FINITE (dart H)) /\ ((permutes (edge_map H)) (dart H))))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= cpermutes * part cedge_map f0 * part cdart f0 c/\ cFINITE * part cdart f0 cpermutes * part cedge_map f0 * part cdart f0
- |- (((!H. (!x. (((node H) x) = ((orbit_map (node_map H)) x)))) ==> ((\H. (!x. (((node H) x) = ((orbit_map (node_map H)) x)))) H)) = ((\H. (!x. (((node H) x) = ((orbit_map (node_map H)) x)))) H))
T c= c==> ! ! c= * * part cnode b0 b1 * * part corbit_map * part cnode_map b0 b1 * / ! c= * * part cnode b0 b1 * * part corbit_map * part cnode_map b0 b1 f0 * / ! c= * * part cnode b0 b1 * * part corbit_map * part cnode_map b0 b1 f0
+ |- (((~ ((int_lt ((int_add (int_of_num k)) (int_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (int_of_num (NUMERAL (BIT1 (BIT1 _0)))))) \/ (((((POWER f) k) (f (f (f x)))) = x) \/ (((((POWER f) k) (f (f (f x)))) = (f x)) \/ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))) = (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) (f (f (f x)))) = x) \/ (((((POWER f) k) (f (f (f x)))) = (f x)) \/ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))
T c= c\/ c~ cint_lt cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 cBIT1 c_0 cint_of_num cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 f2 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 * f1 f2 c= cPOWER f1 f0 * f1 * f1 * f1 f2 * f1 * f1 f2 c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 f2 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 * f1 f2 c= cPOWER f1 f0 * f1 * f1 * f1 f2 * f1 * f1 f2
+ |- (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f x) = ((I o f) x)))
T c/\ c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 f1 co part cI f0 f1
- |- (((node H) x) = ((orbit_map (node_map H)) x))
T c= * * part cnode f0 f1 * * part corbit_map * part cnode_map f0 f1
+ |- (!k. (((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x))) ==> ((y = x) \/ ((y = (f x)) \/ (y = (f (f x)))))))
T c==> c/\ c< f0 cNUMERAL cBIT1 cBIT1 c_0 c= f1 cPOWER f2 f0 f3 c\/ c= f1 f3 c\/ c= f1 * f2 f3 c= f1 * f2 * f2 f3
+ |- (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((I o f) o f) x) = x) \/ (((((I o f) o f) x) = (f x)) \/ ((((I o f) o f) x) = (f (f x))))))
T c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co part cI f0 f0 f1 f1 c\/ c= co * * part co part cI f0 f0 f1 * f0 f1 c= co * * part co part cI f0 f0 f1 * f0 * f0 f1
+ (((real_ge (real_of_int _8374884)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))) |- (((real_ge (real_of_int _8374884)) (real_of_num (NUMERAL _0))) = (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _8374884)) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3 c= creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) /\ ((~ (((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x))) \/ ((~ (((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x))) \/ (~ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))))))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c\/ c~ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c\/ c~ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c~ c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1
- |- ((P \/ (!x. (Q x))) = (!x. (P \/ (Q x))))
T c= c\/ f0 ! * f1 b0 ! c\/ f0 * f1 b0
+ |- ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((I o f) o f) x) = x) \/ (((((I o f) o f) x) = (f x)) \/ ((((((POWER f) (NUMERAL _0)) o f) o f) x) = (f (f x)))))) = (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((I o f) o f) x) = x) \/ (((((((POWER f) (NUMERAL _0)) o f) o f) x) = (f x)) \/ ((((((POWER f) (NUMERAL _0)) o f) o f) x) = (f (f x)))))))
T c= c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co part cI f0 f0 f1 f1 c\/ c= co * * part co part cI f0 f0 f1 * f0 f1 c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 * f0 * f0 f1 c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co part cI f0 f0 f1 f1 c\/ c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 * f0 f1 c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 * f0 * f0 f1
+ |- (T = (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((f x) = x) \/ (((f x) = (f x)) \/ ((f x) = (f (f x)))))))
T c= cT c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= * f0 f1 f1 c\/ c= * f0 f1 * f0 f1 c= * f0 f1 * f0 * f0 f1
+ |- (((T /\ A) = A) /\ ((A /\ T) = A))
T c/\ c= c/\ cT f0 f0 c= c/\ f0 cT f0
- |- ((((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F)) ==> ((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F))) ==> (((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F)) ==> ((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F))))
T c==> c==> c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 cF c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 cF c==> c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 cF c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 cF
+ |- ((t \/ T) = T)
T c= c\/ f0 cT cT
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ (((orbit_map (inverse (face_map H))) x) = ((orbit_map (face_map H)) x))) ==> (((orbit_map (inverse (face_map H))) x) = ((orbit_map (face_map H)) x)))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c~ c= * * part corbit_map * part cinverse * part cface_map f0 f1 * * part corbit_map * part cface_map f0 f1 c= * * part corbit_map * part cinverse * part cface_map f0 f1 * * part corbit_map * part cface_map f0 f1
- |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ |- ((!x. (((f (f (f x))) = x) ==> (((orbit_map f) x) = (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY)))))) = T)
T c= ! c==> c= * f0 * f0 * f0 b0 b0 c= * * part corbit_map f0 b0 * * part cINSERT b0 * * part cINSERT * f0 b0 * * part cINSERT * f0 * f0 b0 part cEMPTY cT
- (~ (((orbit_map (inverse (node_map H))) x) = ((orbit_map (inverse (node_map H))) x))) |- ((~ (((orbit_map (inverse (node_map H))) x) = ((orbit_map (inverse (node_map H))) x))) /\ (((orbit_map (inverse (node_map H))) x) = ((orbit_map (inverse (node_map H))) x)))
T c==> c~ c= * * part corbit_map * part cinverse * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c/\ c~ c= * * part corbit_map * part cinverse * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cinverse * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((?k. (P k)) ==> Q) = (!k. ((P k) ==> Q)))
T c= c==> c? / * f0 b0 f1 ! c==> * f0 b0 f1
+ |- (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (SUC (SUC k))) o f) x) = x) \/ ((((((POWER f) (SUC (SUC k))) o f) x) = (f x)) \/ ((((POWER f) (SUC (SUC (SUC k)))) x) = (f (f x))))))
T c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 f2 c\/ c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 * f1 f2 c= cPOWER f1 cSUC cSUC cSUC f0 f2 * f1 * f1 f2
- |- (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> (((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x)))) = ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))))))
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= c/\ c= * * part cface f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part cnode f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part cedge f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1
+ ((((POWER f) (NUMERAL (BIT1 (BIT1 _0)))) x) = x) |- (((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ T) ==> (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x)))))))
T c==> c= cPOWER f0 cNUMERAL cBIT1 cBIT1 c_0 f1 f1 c==> c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cT c= * * part corbit_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((I o f) x) = x) \/ ((((((POWER f) (NUMERAL _0)) o f) x) = (f x)) \/ (((((POWER f) (NUMERAL _0)) o f) x) = (f (f x)))))) = (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (NUMERAL _0)) o f) x) = x) \/ ((((((POWER f) (NUMERAL _0)) o f) x) = (f x)) \/ (((((POWER f) (NUMERAL _0)) o f) x) = (f (f x)))))))
T c= c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co part cI f0 f1 f1 c\/ c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 * f0 f1 c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 * f0 * f0 f1 c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 f1 c\/ c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 * f0 f1 c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 * f0 * f0 f1
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- (((?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x)))) ==> ((y = x) \/ ((y = (f x)) \/ (y = (f (f x)))))) = (!k. (((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x))) ==> ((y = x) \/ ((y = (f x)) \/ (y = (f (f x))))))))
T c= c==> c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 b0 f2 c\/ c= f0 f2 c\/ c= f0 * f1 f2 c= f0 * f1 * f1 f2 ! c==> c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 b0 f2 c\/ c= f0 f2 c\/ c= f0 * f1 f2 c= f0 * f1 * f1 f2
+ |- (?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f x) = (((POWER f) k) x))))
T c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 f1 cPOWER f0 b0 f1
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- (((permutes (node_map H)) (dart H)) = ((FINITE (dart H)) /\ ((permutes (node_map H)) (dart H))))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= cpermutes * part cnode_map f0 * part cdart f0 c/\ cFINITE * part cdart f0 cpermutes * part cnode_map f0 * part cdart f0
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- (_8374871 = _8374872) |- ((_8374871 = _8374872) /\ ((dart _8374871) = (dart _8374872)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * part cdart f0 * part cdart f1
+ |- ((((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I x) = x) \/ (((I x) = (f x)) \/ ((I x) = (f (f x)))))) = (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I x) = x) \/ (((I x) = (f x)) \/ ((((POWER f) (NUMERAL _0)) x) = (f (f x)))))))
T c= c==> c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI f0 f0 c\/ c= cI f0 * f1 f0 c= cI f0 * f1 * f1 f0 c==> c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI f0 f0 c\/ c= cI f0 * f1 f0 c= cPOWER f1 cNUMERAL c_0 f0 * f1 * f1 f0
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) |- ((\p. (!x. (((~ (FINITE _8374774)) \/ (~ ((permutes p) _8374774))) \/ (((orbit_map (inverse p)) x) = ((orbit_map p) x))))) _8374775)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 * / ! c\/ c\/ c~ cFINITE f0 c~ cpermutes b0 f0 c= * * part corbit_map * part cinverse b0 b1 * * part corbit_map b0 b1 f1
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) /\ (x = x)) = (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) /\ (x = (I x))))
T c= c/\ c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 f0 c/\ c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cI f0
+ ((((POWER f) (NUMERAL (BIT1 (BIT1 _0)))) x) = x) |- ((((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) ==> (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))))))) ==> (((orbit_map f) x) = (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY))))) = (((orbit_map f) x) = (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY)))))
T c==> c= cPOWER f0 cNUMERAL cBIT1 cBIT1 c_0 f1 f1 c= c==> c==> c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c= * * part corbit_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 c= * * part corbit_map f0 f1 * * part cINSERT f1 * * part cINSERT * f0 f1 * * part cINSERT * f0 * f0 f1 part cEMPTY c= * * part corbit_map f0 f1 * * part cINSERT f1 * * part cINSERT * f0 f1 * * part cINSERT * f0 * f0 f1 part cEMPTY
- |- ((~ (_8374859 = _8374860)) \/ ((FINITE _8374860) \/ (~ (FINITE _8374859))))
T c\/ c~ c= f0 f1 c\/ cFINITE f1 c~ cFINITE f0
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- (_8374876 = _8374878) |- ((_8374876 = _8374878) /\ ((~ (_8374875 = _8374877)) \/ (((orbit_map _8374875) _8374876) = ((orbit_map _8374877) _8374878))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part corbit_map f2 f0 * * part corbit_map f3 f1
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((((orbit_map (inverse (edge_map H))) x) = ((orbit_map (inverse (edge_map H))) x)) = ((((orbit_map (inverse (edge_map H))) x) = ((orbit_map (edge_map H)) x)) /\ (((orbit_map (inverse (edge_map H))) x) = ((orbit_map (inverse (edge_map H))) x))))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= c= * * part corbit_map * part cinverse * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c= * * part corbit_map * part cinverse * part cedge_map f0 f1 * * part corbit_map * part cedge_map f0 f1 c= * * part corbit_map * part cinverse * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I (f x)) = x) \/ ((((I o f) x) = (f x)) \/ (((I o f) x) = (f (f x)))))) = (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((I o f) x) = x) \/ ((((I o f) x) = (f x)) \/ (((I o f) x) = (f (f x)))))))
T c= c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI * f0 f1 f1 c\/ c= co part cI f0 f1 * f0 f1 c= co part cI f0 f1 * f0 * f0 f1 c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co part cI f0 f1 f1 c\/ c= co part cI f0 f1 * f0 f1 c= co part cI f0 f1 * f0 * f0 f1
+ (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x)))))) |- ((((orbit_map f) x) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x)))))) /\ (((orbit_map f) x) = (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY)))))
T c==> c= * * part corbit_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 c/\ c= * * part corbit_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 c= * * part corbit_map f0 f1 * * part cINSERT f1 * * part cINSERT * f0 f1 * * part cINSERT * f0 * f0 f1 part cEMPTY
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))), (~ ((permutes (face_map H)) (dart H))) |- ((~ ((permutes (face_map H)) (dart H))) /\ ((permutes (face_map H)) (dart H)))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c~ cpermutes * part cface_map f0 * part cdart f0 c/\ c~ cpermutes * part cface_map f0 * part cdart f0 cpermutes * part cface_map f0 * part cdart f0
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((((orbit_map (inverse (face_map H))) x) = ((orbit_map (inverse (face_map H))) x)) = ((((orbit_map (inverse (face_map H))) x) = ((orbit_map (face_map H)) x)) /\ (((orbit_map (inverse (face_map H))) x) = ((orbit_map (inverse (face_map H))) x))))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= c= * * part corbit_map * part cinverse * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cinverse * part cface_map f0 f1 * * part corbit_map * part cface_map f0 f1 c= * * part corbit_map * part cinverse * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1
- |- ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))
T c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
+ |- (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) k) o f) (f (f x))) = x) \/ (((((((POWER f) k) o f) o f) (f x)) = (f x)) \/ ((((((POWER f) k) o f) o f) (f x)) = (f (f x))))))
T c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 f2 c\/ c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 * f1 f2 c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 * f1 * f1 f2
+ |- (((!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) ==> ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)) = ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f))
T c= c==> ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (k < (NUMERAL (BIT1 (BIT1 _0)))) |- (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x)))))
T c==> c< f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f0 f2 f2 c\/ c= cPOWER f1 f0 f2 * f1 f2 c= cPOWER f1 f0 f2 * f1 * f1 f2
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- F
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 cF
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((((~ (~ F)) = F) ==> ((~ (~ F)) ==> F)) = ((~ (~ F)) ==> F))
T c= c==> c= c~ c~ cF cF c==> c~ c~ cF cF c==> c~ c~ cF cF
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) |- (!s. (!p. (!x. (((~ (FINITE s)) \/ (~ ((permutes p) s))) \/ (((orbit_map (inverse p)) x) = ((orbit_map p) x))))))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 ! ! ! c\/ c\/ c~ cFINITE b0 c~ cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2
+ (y = (((POWER f) k) x)), (k < (NUMERAL (BIT1 (BIT1 _0)))) |- ((y = x) \/ ((y = (f x)) \/ (y = (f (f x)))))
T c==> c= f0 cPOWER f1 f2 f3 c==> c< f2 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= f0 f3 c\/ c= f0 * f1 f3 c= f0 * f1 * f1 f3
+ |- (((((~ (m = (NUMERAL _0))) /\ ((((POWER f1) m) x1) = x1)) ==> (((orbit_map f1) x1) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < m)) (((POWER f1) k) x1))))))) ==> ((~ (m = (NUMERAL _0))) ==> (((((POWER f1) m) x1) = x1) ==> (((orbit_map f1) x1) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < m)) (((POWER f1) k) x1))))))))) = ((~ (m = (NUMERAL _0))) ==> (((((POWER f1) m) x1) = x1) ==> (((orbit_map f1) x1) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < m)) (((POWER f1) k) x1)))))))))
T c= c==> c==> c/\ c~ c= f0 cNUMERAL c_0 c= cPOWER f1 f0 f2 f2 c= * * part corbit_map f1 f2 * part cGSPEC / c? / cSETSPEC b0 c< b1 f0 cPOWER f1 b1 f2 c==> c~ c= f0 cNUMERAL c_0 c==> c= cPOWER f1 f0 f2 f2 c= * * part corbit_map f1 f2 * part cGSPEC / c? / cSETSPEC b0 c< b1 f0 cPOWER f1 b1 f2 c==> c~ c= f0 cNUMERAL c_0 c==> c= cPOWER f1 f0 f2 f2 c= * * part corbit_map f1 f2 * part cGSPEC / c? / cSETSPEC b0 c< b1 f0 cPOWER f1 b1 f2
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (!s. (!x. (!x'. ((x' IN ((x INSERT EMPTY) UNION s)) = (x' IN (x INSERT s))))))
T c= cIN f0 * * part cUNION * * part cINSERT f1 part cEMPTY f2 cIN f0 * * part cINSERT f1 f2
- |- ((~ (_8374867 = _8374868)) \/ ((node_map _8374867) = (node_map _8374868)))
T c\/ c~ c= f0 f1 c= * part cnode_map f0 * part cnode_map f1
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ |- (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f x) = (f x)))
T c/\ c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 f1 * f0 f1
+ |- (T = (~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))))
T c= cT c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
+ |- (((!k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x))))))) ==> ((\k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x))))))) k1)) = ((\k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x))))))) k1))
T c= c==> ! c==> c< b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 b0 f1 f1 c\/ c= cPOWER f0 b0 f1 * f0 f1 c= cPOWER f0 b0 f1 * f0 * f0 f1 * / c==> c< b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 b0 f1 f1 c\/ c= cPOWER f0 b0 f1 * f0 f1 c= cPOWER f0 b0 f1 * f0 * f0 f1 f2 * / c==> c< b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 b0 f1 f1 c\/ c= cPOWER f0 b0 f1 * f0 f1 c= cPOWER f0 b0 f1 * f0 * f0 f1 f2
+ |- (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) (f (f (f x)))) = x) \/ ((((((POWER f) k) o f) (f (f x))) = (f x)) \/ (((((POWER f) k) o f) (f (f x))) = (f (f x))))))
T c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 f2 c\/ c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 * f1 f2 c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 * f1 * f1 f2
+ |- ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f (f x)) = (((POWER f) (SUC (SUC (NUMERAL _0)))) x))) = ((\k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f (f x)) = (((POWER f) k) x)))) (SUC (SUC (NUMERAL _0)))))
T c= c/\ c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 * f0 f1 cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 * / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 * f0 f1 cPOWER f0 b0 f1 cSUC cSUC cNUMERAL c_0
- |- ((!x'. t) = t)
T c= ! f0 f0
+ |- ((y = (f (f x))) ==> (?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x)))))
T c==> c= f0 * f1 * f1 f2 c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 b0 f2
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ |- ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I (f (f x))) = x) \/ (((I (f (f x))) = (f x)) \/ ((I (f (f x))) = (f (f x)))))) = (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I (f (f x))) = x) \/ (((I (f (f x))) = (f x)) \/ (((I o f) (f x)) = (f (f x)))))))
T c= c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI * f0 * f0 f1 f1 c\/ c= cI * f0 * f0 f1 * f0 f1 c= cI * f0 * f0 f1 * f0 * f0 f1 c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI * f0 * f0 f1 f1 c\/ c= cI * f0 * f0 f1 * f0 f1 c= co part cI f0 * f0 f1 * f0 * f0 f1
+ |- (((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cF
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ (((orbit_map (inverse (node_map H))) x) = ((orbit_map (node_map H)) x))) ==> (((orbit_map (inverse (node_map H))) x) = ((orbit_map (node_map H)) x)))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c~ c= * * part corbit_map * part cinverse * part cnode_map f0 f1 * * part corbit_map * part cnode_map f0 f1 c= * * part corbit_map * part cinverse * part cnode_map f0 f1 * * part corbit_map * part cnode_map f0 f1
+ |- ((\Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q)))) Q)
T * / c= c==> c? / * f0 b1 b0 ! c==> * f0 b1 b0 f1
- |- (!k1. (((\k1. (k = k1)) k1) ==> (?k1. (k = k1))))
T c==> * / c= f0 b0 f1 c? / c= f0 b0
- |- ((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 cF
+ ((\k1. (k = k1)) k1) |- (((\k1. (k = k1)) k1) /\ ((k < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x)))))))
T c==> * / c= f0 b0 f1 c/\ * / c= f0 b0 f1 c==> c< f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f2 f0 f3 f3 c\/ c= cPOWER f2 f0 f3 * f2 f3 c= cPOWER f2 f0 f3 * f2 * f2 f3
+ |- ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))
T c= cint_of_num c+ f0 f1 cint_add cint_of_num f0 cint_of_num f1
+ |- (((NUMERAL (BIT0 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0)))) = T)
T c= c< cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cT
+ (k = k1) |- (((k1 < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k1) x) = x) \/ (((((POWER f) k1) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x)))))) = ((k1 < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k1) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x)))))))
T c==> c= f0 f1 c= c==> c< f1 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f2 f1 f3 f3 c\/ c= cPOWER f2 f1 f3 * f2 f3 c= cPOWER f2 f0 f3 * f2 * f2 f3 c==> c< f1 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f2 f1 f3 f3 c\/ c= cPOWER f2 f0 f3 * f2 f3 c= cPOWER f2 f0 f3 * f2 * f2 f3
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) ==> ((\H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) H)) = ((\H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) H))
T c= c==> ! c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI * / c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI f0 * / c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI f0
- |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- (((!P. (!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))))) ==> ((\P. (!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))))) P)) = ((\P. (!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))))) P))
T c= c==> ! ! c= c==> c? / * b0 b2 b1 ! c==> * b0 b2 b1 * / ! c= c==> c? / * b0 b2 b1 ! c==> * b0 b2 b1 f0 * / ! c= c==> c? / * b0 b2 b1 ! c==> * b0 b2 b1 f0
+ |- (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((I o f) o f) x) = x) \/ (((((((POWER f) (NUMERAL _0)) o f) o f) x) = (f x)) \/ ((((((POWER f) (NUMERAL _0)) o f) o f) x) = (f (f x))))))
T c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co part cI f0 f0 f1 f1 c\/ c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 * f0 f1 c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 * f0 * f0 f1
+ |- ((\k1. (k = k1)) k)
T * / c= f0 b0 f0
+ |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c~ c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1
+ |- ((((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) (f (f (f x)))) = x) \/ (((((POWER f) k) (f (f (f x)))) = (f x)) \/ (((((POWER f) k) o f) (f (f x))) = (f (f x)))))) = (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) (f (f (f x)))) = x) \/ ((((((POWER f) k) o f) (f (f x))) = (f x)) \/ (((((POWER f) k) o f) (f (f x))) = (f (f x)))))))
T c= c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 f2 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 * f1 f2 c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 * f1 * f1 f2 c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 f2 c\/ c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 * f1 f2 c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 * f1 * f1 f2
- (((real_ge (real_of_int _8374884)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))) |- (~ ((((POWER f) k) (f (f (f x)))) = x))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3
+ |- (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((I o f) (f x)) = x) \/ ((((I o f) (f x)) = (f x)) \/ (((I o f) (f x)) = (f (f x))))))
T c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co part cI f0 * f0 f1 f1 c\/ c= co part cI f0 * f0 f1 * f0 f1 c= co part cI f0 * f0 f1 * f0 * f0 f1
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- |- ((_8374873 = _8374874) ==> ((inverse _8374873) = (inverse _8374874)))
T c==> c= f0 f1 c= * part cinverse f0 * part cinverse f1
+ |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _8374884)) /\ (((real_le ((real_add ((real_add (real_of_int _8374884)) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3 cF
+ (y = (((POWER f) k) x)), (k < (NUMERAL (BIT1 (BIT1 _0)))) |- (((((POWER f) k) x) = x) \/ ((y = (f x)) \/ (y = (f (f x)))))
T c==> c= f0 cPOWER f1 f2 f3 c==> c< f2 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f2 f3 f3 c\/ c= f0 * f1 f3 c= f0 * f1 * f1 f3
- |- (F ==> (~ (~ F)))
T c==> cF c~ c~ cF
- |- (((!H. (!x. (((face H) x) = ((orbit_map (face_map H)) x)))) ==> ((\H. (!x. (((face H) x) = ((orbit_map (face_map H)) x)))) H)) = ((\H. (!x. (((face H) x) = ((orbit_map (face_map H)) x)))) H))
T c= c==> ! ! c= * * part cface b0 b1 * * part corbit_map * part cface_map b0 b1 * / ! c= * * part cface b0 b1 * * part corbit_map * part cface_map b0 b1 f0 * / ! c= * * part cface b0 b1 * * part corbit_map * part cface_map b0 b1 f0
- |- (((!P. (((P (NUMERAL _0)) /\ (!n. (P (SUC n)))) ==> (!m. (P m)))) ==> (!P. (((P (NUMERAL _0)) /\ (!n. (P (SUC n)))) ==> (!m. (P m))))) = (!P. (((P (NUMERAL _0)) /\ (!n. (P (SUC n)))) ==> (!m. (P m)))))
T c= c==> ! c==> c/\ * b0 cNUMERAL c_0 ! * b0 cSUC b1 ! * b0 b1 ! c==> c/\ * b0 cNUMERAL c_0 ! * b0 cSUC b1 ! * b0 b1 ! c==> c/\ * b0 cNUMERAL c_0 ! * b0 cSUC b1 ! * b0 b1
+ |- (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((f (f x)) = x) \/ (((f (f x)) = (f x)) \/ ((f (f x)) = (f (f x))))))
T c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= * f0 * f0 f1 f1 c\/ c= * f0 * f0 f1 * f0 f1 c= * f0 * f0 f1 * f0 * f0 f1
+ |- (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f (f x)) = (f (f x))))
T c/\ c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 * f0 f1 * f0 * f0 f1
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ (((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x))) \/ ((~ (((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x))) \/ (~ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c\/ c~ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c\/ c~ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c~ c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1
- |- ((~ (_8374861 = _8374863)) \/ ((~ (_8374862 = _8374864)) \/ (((permutes _8374863) _8374864) \/ (~ ((permutes _8374861) _8374862)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cpermutes f1 f3 c~ cpermutes f0 f2
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((((orbit_map (inverse (face_map H))) x) = ((orbit_map (face_map H)) x)) /\ (((orbit_map (inverse (face_map H))) x) = ((orbit_map (inverse (face_map H))) x)))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c= * * part corbit_map * part cinverse * part cface_map f0 f1 * * part corbit_map * part cface_map f0 f1 c= * * part corbit_map * part cinverse * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1
+ |- (((!g. (!x. (((f o g) x) = (f (g x))))) ==> ((\g. (!x. (((f o g) x) = (f (g x))))) g)) = ((\g. (!x. (((f o g) x) = (f (g x))))) g))
T c= c==> ! ! c= co f0 b0 b1 * f0 * b0 b1 * / ! c= co f0 b0 b1 * f0 * b0 b1 f1 * / ! c= co f0 b0 b1 * f0 * b0 b1 f1
- |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?k. t) = t)
T c= c? / f0 f0
+ ((((POWER f) (NUMERAL (BIT1 (BIT1 _0)))) x) = x) |- ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) ==> (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x)))))))
T c==> c= cPOWER f0 cNUMERAL cBIT1 cBIT1 c_0 f1 f1 c==> c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c= * * part corbit_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1
+ |- (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((x = x) \/ (((I x) = (f x)) \/ ((I x) = (f (f x))))))
T c==> c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= f0 f0 c\/ c= cI f0 * f1 f0 c= cI f0 * f1 * f1 f0
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ (((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x))) /\ (((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c~ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1
+ |- ((((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (SUC (SUC k))) o f) x) = x) \/ ((((((POWER f) (SUC (SUC k))) o f) x) = (f x)) \/ (((((POWER f) (SUC (SUC k))) o f) x) = (f (f x)))))) = (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (SUC (SUC k))) o f) x) = x) \/ ((((((POWER f) (SUC (SUC k))) o f) x) = (f x)) \/ ((((POWER f) (SUC (SUC (SUC k)))) x) = (f (f x)))))))
T c= c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 f2 c\/ c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 * f1 f2 c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 * f1 * f1 f2 c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 f2 c\/ c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 * f1 f2 c= cPOWER f1 cSUC cSUC cSUC f0 f2 * f1 * f1 f2
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ (((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x))) ==> (((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c~ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1
- |- ((!p'. (((~ (FINITE s)) \/ (~ ((permutes p') s))) \/ (!x. (((orbit_map (inverse p)) x) = ((orbit_map p) x))))) = ((!p. ((~ (FINITE s)) \/ (~ ((permutes p) s)))) \/ (!x. (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))
T c= ! c\/ c\/ c~ cFINITE f0 c~ cpermutes b0 f0 ! c= * * part corbit_map * part cinverse f1 b1 * * part corbit_map f1 b1 c\/ ! c\/ c~ cFINITE f0 c~ cpermutes b0 f0 ! c= * * part corbit_map * part cinverse f1 b0 * * part corbit_map f1 b0
- |- (((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F) = F)
T c= c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 cF cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- (((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) ==> F) = F)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= c==> c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 cF cF
+ |- (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((I o f) x) = x) \/ ((((((POWER f) (NUMERAL _0)) o f) x) = (f x)) \/ (((((POWER f) (NUMERAL _0)) o f) x) = (f (f x))))))
T c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co part cI f0 f1 f1 c\/ c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 * f0 f1 c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 * f0 * f0 f1
- (~ (FINITE (dart H))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ (FINITE (dart H))) /\ (FINITE (dart H)))
T c==> c~ cFINITE * part cdart f0 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c~ cFINITE * part cdart f0 cFINITE * part cdart f0
+ |- (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) (NUMERAL _0)) o f) o f) x) = x) \/ (((((((POWER f) (NUMERAL _0)) o f) o f) x) = (f x)) \/ (((((POWER f) (SUC (NUMERAL _0))) o f) x) = (f (f x))))))
T c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 f1 c\/ c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 * f0 f1 c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 * f0 * f0 f1
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) |- (((!s. (!p. (!x. (((~ (FINITE s)) \/ (~ ((permutes p) s))) \/ (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> ((\s. (!p. (!x. (((~ (FINITE s)) \/ (~ ((permutes p) s))) \/ (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) _8374774)) = ((\s. (!p. (!x. (((~ (FINITE s)) \/ (~ ((permutes p) s))) \/ (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) _8374774))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c= c==> ! ! ! c\/ c\/ c~ cFINITE b0 c~ cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 * / ! ! c\/ c\/ c~ cFINITE b0 c~ cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 f0 * / ! ! c\/ c\/ c~ cFINITE b0 c~ cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 f0
+ |- (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) (SUC k)) o f) o f) x) = x) \/ ((((((POWER f) (SUC (SUC k))) o f) x) = (f x)) \/ (((((POWER f) (SUC (SUC k))) o f) x) = (f (f x))))))
T c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 f2 c\/ c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 * f1 f2 c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 * f1 * f1 f2
+ |- ((!x'. ((?k. (((\p. (\t. (p /\ (x' = t)))) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))) = ((x' = x) \/ (x' IN ((f x) INSERT ((f (f x)) INSERT EMPTY)))))) = (!x'. ((?k. (((\p. (\t. (p /\ (x' = t)))) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))) = (x' IN (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY)))))))
T c= ! c= c? / * * / / c/\ b2 c= b0 b3 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 c\/ c= b0 f1 cIN b0 * * part cINSERT * f0 f1 * * part cINSERT * f0 * f0 f1 part cEMPTY ! c= c? / * * / / c/\ b2 c= b0 b3 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 cIN b0 * * part cINSERT f1 * * part cINSERT * f0 f1 * * part cINSERT * f0 * f0 f1 part cEMPTY
+ |- (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) k) o f) o f) (f x)) = x) \/ (((((((POWER f) k) o f) o f) (f x)) = (f x)) \/ (((((((POWER f) k) o f) o f) o f) x) = (f (f x))))))
T c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 f2 c\/ c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 * f1 f2 c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 * f1 * f1 f2
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))), (~ ((permutes (node_map H)) (dart H))) |- ((~ ((permutes (node_map H)) (dart H))) /\ ((permutes (node_map H)) (dart H)))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c~ cpermutes * part cnode_map f0 * part cdart f0 c/\ c~ cpermutes * part cnode_map f0 * part cdart f0 cpermutes * part cnode_map f0 * part cdart f0
- |- ((_8374859 = _8374860) ==> ((FINITE _8374860) \/ (~ (FINITE _8374859))))
T c==> c= f0 f1 c\/ cFINITE f1 c~ cFINITE f0
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((FINITE (dart H)) /\ ((permutes (edge_map H)) (dart H)))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ cFINITE * part cdart f0 cpermutes * part cedge_map f0 * part cdart f0
- |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ |- (((!f. (!g. (!x. (((f o g) x) = (f (g x)))))) ==> ((\f. (!g. (!x. (((f o g) x) = (f (g x)))))) f)) = ((\f. (!g. (!x. (((f o g) x) = (f (g x)))))) f))
T c= c==> ! ! ! c= co b0 b1 b2 * b0 * b1 b2 * / ! ! c= co b0 b1 b2 * b0 * b1 b2 f0 * / ! ! c= co b0 b1 b2 * b0 * b1 b2 f0
+ |- (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I x) = x) \/ (((I x) = (f x)) \/ ((((POWER f) (NUMERAL _0)) x) = (f (f x))))))
T c==> c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI f0 f0 c\/ c= cI f0 * f1 f0 c= cPOWER f1 cNUMERAL c_0 f0 * f1 * f1 f0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((f (f (f x))) = x) |- (((((I o f) o f) o f) x) = x)
T c==> c= * f0 * f0 * f0 f1 f1 c= co * * part co * * part co part cI f0 f0 f0 f1 f1
+ |- ((GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))))) = (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY))))
T c= * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 * * part cINSERT f1 * * part cINSERT * f0 f1 * * part cINSERT * f0 * f0 f1 part cEMPTY
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((f (f (f x))) = x) |- (((((((POWER f) (NUMERAL _0)) o f) o f) o f) x) = x)
T c==> c= * f0 * f0 * f0 f1 f1 c= co * * part co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f0 f1 f1
- |- (T = (((~ (x = y)) \/ ((~ (x = z)) \/ (y = z))) = ((y = z) \/ ((~ (x = y)) \/ (~ (x = z))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ c~ c= f0 f2 c= f1 f2 c\/ c= f1 f2 c\/ c~ c= f0 f1 c~ c= f0 f2
+ ((f (f (f x))) = x) |- (((f (f (f x))) = x) /\ (((orbit_map f) x) = (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY)))))
T c==> c= * f0 * f0 * f0 f1 f1 c/\ c= * f0 * f0 * f0 f1 f1 c= * * part corbit_map f0 f1 * * part cINSERT f1 * * part cINSERT * f0 f1 * * part cINSERT * f0 * f0 f1 part cEMPTY
+ |- (!x'. ((?k. (((\p. (\t. (p /\ (x' = t)))) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))) = ((x' = x) \/ ((x' = (f x)) \/ ((x' = (f (f x))) \/ F)))))
T c= c? / * * / / c/\ b1 c= f0 b2 c< b0 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f1 b0 f2 c\/ c= f0 f2 c\/ c= f0 * f1 f2 c\/ c= f0 * f1 * f1 f2 cF
- (~ (((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x))) |- ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) ==> F)
T c==> c~ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c==> c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 cF
- |- ((T ==> A) = A)
T c= c==> cT f0 f0
+ |- ((((f (f (f x))) = x) ==> (((orbit_map f) x) = (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY))))) = T)
T c= c==> c= * f0 * f0 * f0 f1 f1 c= * * part corbit_map f0 f1 * * part cINSERT f1 * * part cINSERT * f0 f1 * * part cINSERT * f0 * f0 f1 part cEMPTY cT
+ |- (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) k) o f) (f (f x))) = x) \/ ((((((POWER f) k) o f) (f (f x))) = (f x)) \/ (((((POWER f) k) o f) (f (f x))) = (f (f x))))))
T c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 f2 c\/ c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 * f1 f2 c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 * f1 * f1 f2
- |- ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> (((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x)))) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x))))) = (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> q')))
T c==> c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= c/\ c= * * part cface f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part cnode f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part cedge f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 f2 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part cface f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part cnode f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part cedge f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI f2
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) k) o f) (f (f x))) = x) \/ ((((((POWER f) k) o f) (f (f x))) = (f x)) \/ ((((((POWER f) k) o f) o f) (f x)) = (f (f x))))))
T c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 f2 c\/ c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 * f1 f2 c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 * f1 * f1 f2
- |- ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) = p') ==> ((p' ==> (((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))))) = (p' ==> q'))))
T c==> c= c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI f1 c==> c==> f1 c= c/\ c= * * part corbit_map * part cface_map f0 f2 * * part corbit_map * part cinverse * part cface_map f0 f2 c/\ c= * * part corbit_map * part cnode_map f0 f2 * * part corbit_map * part cinverse * part cnode_map f0 f2 c= * * part corbit_map * part cedge_map f0 f2 * * part corbit_map * part cinverse * part cedge_map f0 f2 f3 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f2 * * part corbit_map * part cinverse * part cface_map f0 f2 c/\ c= * * part corbit_map * part cnode_map f0 f2 * * part corbit_map * part cinverse * part cnode_map f0 f2 c= * * part corbit_map * part cedge_map f0 f2 * * part corbit_map * part cinverse * part cedge_map f0 f2 c==> f1 f3
- (((real_ge (real_of_int _8374884)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\x. ((I x) = x)) x)
T * / c= cI b0 b0 f0
+ |- ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((I o f) o f) x) = x) \/ (((((((POWER f) (NUMERAL _0)) o f) o f) x) = (f x)) \/ ((((((POWER f) (NUMERAL _0)) o f) o f) x) = (f (f x)))))) = (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) (NUMERAL _0)) o f) o f) x) = x) \/ (((((((POWER f) (NUMERAL _0)) o f) o f) x) = (f x)) \/ ((((((POWER f) (NUMERAL _0)) o f) o f) x) = (f (f x)))))))
T c= c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co part cI f0 f0 f1 f1 c\/ c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 * f0 f1 c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 * f0 * f0 f1 c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 f1 c\/ c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 * f0 f1 c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 * f0 * f0 f1
- |- (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> (((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))) = ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))))))
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ (((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x))) /\ F)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c~ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 cF
+ |- (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 cT
+ |- (((!x. (((\k1. (k = k1)) x) ==> ((k < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x)))))))) ==> ((?k1. (k = k1)) ==> ((k < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x)))))))) = ((?k1. (k = k1)) ==> ((k < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x))))))))
T c= c==> ! c==> * / c= f0 b1 b0 c==> c< f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f0 f2 f2 c\/ c= cPOWER f1 f0 f2 * f1 f2 c= cPOWER f1 f0 f2 * f1 * f1 f2 c==> c? / c= f0 b0 c==> c< f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f0 f2 f2 c\/ c= cPOWER f1 f0 f2 * f1 f2 c= cPOWER f1 f0 f2 * f1 * f1 f2 c==> c? / c= f0 b0 c==> c< f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f0 f2 f2 c\/ c= cPOWER f1 f0 f2 * f1 f2 c= cPOWER f1 f0 f2 * f1 * f1 f2
- |- ((~ (~ F)) ==> F)
T c==> c~ c~ cF cF
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ F) ==> F)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c~ cF cF
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((!x. (~ (x IN EMPTY))) ==> ((\x. (~ (x IN EMPTY))) x)) = ((\x. (~ (x IN EMPTY))) x))
T c= c==> ! c~ cIN b0 part cEMPTY * / c~ cIN b0 part cEMPTY f0 * / c~ cIN b0 part cEMPTY f0
+ (k = k1) |- ((k = k1) /\ ((k < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x)))))))
T c==> c= f0 f1 c/\ c= f0 f1 c==> c< f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f2 f0 f3 f3 c\/ c= cPOWER f2 f0 f3 * f2 f3 c= cPOWER f2 f0 f3 * f2 * f2 f3
- (_8374869 = _8374870) |- ((_8374869 = _8374870) /\ ((edge_map _8374869) = (edge_map _8374870)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * part cedge_map f0 * part cedge_map f1
- |- (((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> (~ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))))) = T)
T c= c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c~ ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 cT
+ (k = k1) |- ((k1 < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k1) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x))))))
T c==> c= f0 f1 c==> c< f1 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f2 f1 f3 f3 c\/ c= cPOWER f2 f0 f3 * f2 f3 c= cPOWER f2 f0 f3 * f2 * f2 f3
+ ((y = x) \/ ((y = (f x)) \/ (y = (f (f x))))) |- (((y = x) \/ ((y = (f x)) \/ (y = (f (f x))))) /\ (?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x)))))
T c==> c\/ c= f0 f1 c\/ c= f0 * f2 f1 c= f0 * f2 * f2 f1 c/\ c\/ c= f0 f1 c\/ c= f0 * f2 f1 c= f0 * f2 * f2 f1 c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f2 b0 f1
+ |- (((A /\ B) ==> C) ==> (A ==> (B ==> C)))
T c==> c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2
+ |- (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (NUMERAL _0)) o f) x) = x) \/ ((((((POWER f) (NUMERAL _0)) o f) x) = (f x)) \/ ((((POWER f) (SUC (NUMERAL _0))) x) = (f (f x))))))
T c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 f1 c\/ c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 * f0 f1 c= cPOWER f0 cSUC cNUMERAL c_0 f1 * f0 * f0 f1
+ (((real_ge (real_of_int _8374884)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))) |- F
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3 cF
+ |- ((y = x) ==> (?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x)))))
T c==> c= f0 f1 c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f2 b0 f1
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _8374884)) /\ (((real_le ((real_add ((real_add (real_of_int _8374884)) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3
+ |- ((\k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f x) = (((POWER f) k) x)))) (SUC (NUMERAL _0)))
T * / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 f1 cPOWER f0 b0 f1 cSUC cNUMERAL c_0
- |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((I o f) o f) x) = x) \/ (((((I o f) o f) x) = (f x)) \/ ((((((POWER f) (NUMERAL _0)) o f) o f) x) = (f (f x))))))
T c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co part cI f0 f0 f1 f1 c\/ c= co * * part co part cI f0 f0 f1 * f0 f1 c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 * f0 * f0 f1
- |- ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))))) = (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))))))
T c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1
- |- (T = ((~ P) = (P = F)))
T c= cT c= c~ f0 c= f0 cF
+ |- ((((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((x = x) \/ ((x = (f x)) \/ ((I x) = (f (f x)))))) = (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((x = x) \/ (((I x) = (f x)) \/ ((I x) = (f (f x)))))))
T c= c==> c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= f0 f0 c\/ c= f0 * f1 f0 c= cI f0 * f1 * f1 f0 c==> c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= f0 f0 c\/ c= cI f0 * f1 f0 c= cI f0 * f1 * f1 f0
+ |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _8374884)) /\ (((real_le ((real_add ((real_add (real_of_int _8374884)) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _8374884)) /\ (((real_le ((real_add ((real_add (real_of_int _8374884)) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _8374884)) /\ (((real_le ((real_add ((real_add (real_of_int _8374884)) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x))))))))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3
- (_8374876 = _8374878) |- ((_8374875 = _8374877) ==> (((orbit_map _8374875) _8374876) = ((orbit_map _8374877) _8374878)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part corbit_map f2 f0 * * part corbit_map f3 f1
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) |- (((~ (FINITE _8374774)) \/ (~ ((permutes _8374775) _8374774))) \/ (((orbit_map (inverse _8374775)) _8374776) = ((orbit_map _8374775) _8374776)))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c\/ c\/ c~ cFINITE f0 c~ cpermutes f1 f0 c= * * part corbit_map * part cinverse f1 f2 * * part corbit_map f1 f2
+ (y = (((POWER f) k) x)) |- ((((((POWER f) k) x) = x) \/ ((y = (f x)) \/ (y = (f (f x))))) = ((y = x) \/ ((y = (f x)) \/ (y = (f (f x))))))
T c==> c= f0 cPOWER f1 f2 f3 c= c\/ c= cPOWER f1 f2 f3 f3 c\/ c= f0 * f1 f3 c= f0 * f1 * f1 f3 c\/ c= f0 f3 c\/ c= f0 * f1 f3 c= f0 * f1 * f1 f3
- (!P. (((P (NUMERAL _0)) /\ (!n. (P (SUC n)))) ==> (!m. (P m)))) |- ((!P. (((P (NUMERAL _0)) /\ (!n. (P (SUC n)))) ==> (!m. (P m)))) /\ (!P. (((P (NUMERAL _0)) /\ (!n. (P (SUC n)))) ==> (!m. (P m)))))
T c==> ! c==> c/\ * b0 cNUMERAL c_0 ! * b0 cSUC b1 ! * b0 b1 c/\ ! c==> c/\ * b0 cNUMERAL c_0 ! * b0 cSUC b1 ! * b0 b1 ! c==> c/\ * b0 cNUMERAL c_0 ! * b0 cSUC b1 ! * b0 b1
- |- ((k = k1) = ((\k1. (k = k1)) k1))
T c= c= f0 f1 * / c= f0 b0 f1
+ |- (((!f. (((POWER f) (NUMERAL _0)) = I)) ==> ((\f. (((POWER f) (NUMERAL _0)) = I)) f)) = ((\f. (((POWER f) (NUMERAL _0)) = I)) f))
T c= c==> ! c= * * part cPOWER b0 cNUMERAL c_0 part cI * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0 * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0
+ (~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))), ((((POWER f) (NUMERAL (BIT1 (BIT1 _0)))) x) = x) |- (T ==> (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x)))))))
T c==> c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c==> c= cPOWER f0 cNUMERAL cBIT1 cBIT1 c_0 f1 f1 c==> cT c= * * part corbit_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) /\ F)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 cF
- (((real_ge (real_of_int _8374884)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _8374884)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
- |- ((\q'. ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) = p') ==> ((p' ==> (((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI f1 c==> c==> f1 c= c/\ c= * * part corbit_map * part cface_map f0 f2 * * part corbit_map * part cinverse * part cface_map f0 f2 c/\ c= * * part corbit_map * part cnode_map f0 f2 * * part corbit_map * part cinverse * part cnode_map f0 f2 c= * * part corbit_map * part cedge_map f0 f2 * * part corbit_map * part cinverse * part cedge_map f0 f2 b0 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f2 * * part corbit_map * part cinverse * part cface_map f0 f2 c/\ c= * * part corbit_map * part cnode_map f0 f2 * * part corbit_map * part cinverse * part cnode_map f0 f2 c= * * part corbit_map * part cedge_map f0 f2 * * part corbit_map * part cinverse * part cedge_map f0 f2 c==> f1 b0 f3
+ |- ((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0)))
T c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ (((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x))) /\ F)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c~ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 cF
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ (((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x))) /\ (((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c~ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1
- |- ((\x. (((face H) x) = ((orbit_map (face_map H)) x))) x)
T * / c= * * part cface f0 b0 * * part corbit_map * part cface_map f0 b0 f1
- |- (T = (((~ (FINITE _8374774)) \/ ((~ ((permutes _8374775) _8374774)) \/ (((orbit_map (inverse _8374775)) _8374776) = ((orbit_map _8374775) _8374776)))) = ((((orbit_map (inverse _8374775)) _8374776) = ((orbit_map _8374775) _8374776)) \/ ((~ (FINITE _8374774)) \/ (~ ((permutes _8374775) _8374774))))))
T c= cT c= c\/ c~ cFINITE f0 c\/ c~ cpermutes f1 f0 c= * * part corbit_map * part cinverse f1 f2 * * part corbit_map f1 f2 c\/ c= * * part corbit_map * part cinverse f1 f2 * * part corbit_map f1 f2 c\/ c~ cFINITE f0 c~ cpermutes f1 f0
+ (k = k1) |- (((k1 < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k1) x) = x) \/ (((((POWER f) k1) x) = (f x)) \/ ((((POWER f) k1) x) = (f (f x)))))) = ((k1 < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k1) x) = x) \/ (((((POWER f) k1) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x)))))))
T c==> c= f0 f1 c= c==> c< f1 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f2 f1 f3 f3 c\/ c= cPOWER f2 f1 f3 * f2 f3 c= cPOWER f2 f1 f3 * f2 * f2 f3 c==> c< f1 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f2 f1 f3 f3 c\/ c= cPOWER f2 f1 f3 * f2 f3 c= cPOWER f2 f0 f3 * f2 * f2 f3
- (~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))), ((((POWER f) (NUMERAL (BIT1 (BIT1 _0)))) x) = x) |- ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x)))))))
T c==> c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c==> c= cPOWER f0 cNUMERAL cBIT1 cBIT1 c_0 f1 f1 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c= * * part corbit_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1
+ |- ((((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (NUMERAL _0)) o f) x) = x) \/ ((((((POWER f) (NUMERAL _0)) o f) x) = (f x)) \/ ((((POWER f) (SUC (NUMERAL _0))) x) = (f (f x)))))) = (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (NUMERAL _0)) o f) x) = x) \/ (((((POWER f) (SUC (NUMERAL _0))) x) = (f x)) \/ ((((POWER f) (SUC (NUMERAL _0))) x) = (f (f x)))))))
T c= c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 f1 c\/ c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 * f0 f1 c= cPOWER f0 cSUC cNUMERAL c_0 f1 * f0 * f0 f1 c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 f1 c\/ c= cPOWER f0 cSUC cNUMERAL c_0 f1 * f0 f1 c= cPOWER f0 cSUC cNUMERAL c_0 f1 * f0 * f0 f1
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((((FINITE (dart H)) /\ ((permutes (edge_map H)) (dart H))) ==> (((orbit_map (inverse (edge_map H))) _8374776) = ((orbit_map (edge_map H)) _8374776))) = (((orbit_map (inverse (edge_map H))) _8374776) = ((orbit_map (edge_map H)) _8374776)))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= c==> c/\ cFINITE * part cdart f0 cpermutes * part cedge_map f0 * part cdart f0 c= * * part corbit_map * part cinverse * part cedge_map f0 f2 * * part corbit_map * part cedge_map f0 f2 c= * * part corbit_map * part cinverse * part cedge_map f0 f2 * * part corbit_map * part cedge_map f0 f2
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) |- (!x. (((~ (FINITE _8374774)) \/ (~ ((permutes _8374775) _8374774))) \/ (((orbit_map (inverse _8374775)) x) = ((orbit_map _8374775) x))))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 ! c\/ c\/ c~ cFINITE f0 c~ cpermutes f1 f0 c= * * part corbit_map * part cinverse f1 b0 * * part corbit_map f1 b0
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!p. ((P p) \/ Q)) = ((!p. (P p)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ |- ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I (f (f x))) = x) \/ ((((I o f) (f x)) = (f x)) \/ (((I o f) (f x)) = (f (f x)))))) = (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((I o f) (f x)) = x) \/ ((((I o f) (f x)) = (f x)) \/ (((I o f) (f x)) = (f (f x)))))))
T c= c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI * f0 * f0 f1 f1 c\/ c= co part cI f0 * f0 f1 * f0 f1 c= co part cI f0 * f0 f1 * f0 * f0 f1 c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co part cI f0 * f0 f1 f1 c\/ c= co part cI f0 * f0 f1 * f0 f1 c= co part cI f0 * f0 f1 * f0 * f0 f1
+ |- ((((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) (f (f (f x)))) = x) \/ (((((POWER f) k) (f (f (f x)))) = (f x)) \/ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))) = (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) (f (f (f x)))) = x) \/ (((((POWER f) k) (f (f (f x)))) = (f x)) \/ (((((POWER f) k) o f) (f (f x))) = (f (f x)))))))
T c= c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 f2 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 * f1 f2 c= cPOWER f1 f0 * f1 * f1 * f1 f2 * f1 * f1 f2 c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 f2 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 * f1 f2 c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 * f1 * f1 f2
- |- ((!x. (!H. ((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> (~ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))))))) = (!x. (!H. ((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F)))))
T c= ! ! c==> c~ c==> c/\ cFINITE * part cdart b1 c/\ cpermutes * part cedge_map b1 * part cdart b1 c/\ cpermutes * part cnode_map b1 * part cdart b1 c/\ cpermutes * part cface_map b1 * part cdart b1 c= * * part co * part cedge_map b1 * * part co * part cnode_map b1 * part cface_map b1 part cI c/\ c= * * part corbit_map * part cface_map b1 b0 * * part corbit_map * part cinverse * part cface_map b1 b0 c/\ c= * * part corbit_map * part cnode_map b1 b0 * * part corbit_map * part cinverse * part cnode_map b1 b0 c= * * part corbit_map * part cedge_map b1 b0 * * part corbit_map * part cinverse * part cedge_map b1 b0 c~ ! ! ! c==> c/\ cFINITE b2 cpermutes b3 b2 c= * * part corbit_map * part cinverse b3 b4 * * part corbit_map b3 b4 ! ! c==> c~ c==> c/\ cFINITE * part cdart b1 c/\ cpermutes * part cedge_map b1 * part cdart b1 c/\ cpermutes * part cnode_map b1 * part cdart b1 c/\ cpermutes * part cface_map b1 * part cdart b1 c= * * part co * part cedge_map b1 * * part co * part cnode_map b1 * part cface_map b1 part cI c/\ c= * * part corbit_map * part cface_map b1 b0 * * part corbit_map * part cinverse * part cface_map b1 b0 c/\ c= * * part corbit_map * part cnode_map b1 b0 * * part corbit_map * part cinverse * part cnode_map b1 b0 c= * * part corbit_map * part cedge_map b1 b0 * * part corbit_map * part cinverse * part cedge_map b1 b0 c==> ! ! ! c==> c/\ cFINITE b2 cpermutes b3 b2 c= * * part corbit_map * part cinverse b3 b4 * * part corbit_map b3 b4 cF
+ ((f (f (f x))) = x) |- ((((POWER f) (SUC (NUMERAL (BIT0 (BIT1 _0))))) x) = x)
T c==> c= * f0 * f0 * f0 f1 f1 c= cPOWER f0 cSUC cNUMERAL cBIT0 cBIT1 c_0 f1 f1
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- (((orbit_map (inverse (edge_map H))) _8374776) = ((orbit_map (edge_map H)) _8374776))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= * * part corbit_map * part cinverse * part cedge_map f0 f2 * * part corbit_map * part cedge_map f0 f2
- |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT1 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- (T = (!s. (!x. (!x'. ((x' IN ((x INSERT EMPTY) UNION s)) = (x' IN (x INSERT s)))))))
T c= cT ! ! ! c= cIN b2 * * part cUNION * * part cINSERT b1 part cEMPTY b0 cIN b2 * * part cINSERT b1 b0
- ((f (f (f x))) = x) |- ((((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x)))))) = (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) (f (f (f x)))) = x) \/ (((((POWER f) k) (f (f (f x)))) = (f x)) \/ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))
T c==> c= * f0 * f0 * f0 f1 f1 c= c==> c< cSUC cSUC cSUC f2 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 f2 f1 f1 c\/ c= cPOWER f0 f2 f1 * f0 f1 c= cPOWER f0 f2 f1 * f0 * f0 f1 c==> c< cSUC cSUC cSUC f2 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 f2 * f0 * f0 * f0 f1 f1 c\/ c= cPOWER f0 f2 * f0 * f0 * f0 f1 * f0 f1 c= cPOWER f0 f2 * f0 * f0 * f0 f1 * f0 * f0 f1
- |- ((~ (((orbit_map (inverse (face_map H))) x) = ((orbit_map (inverse (face_map H))) x))) ==> (((orbit_map (inverse (face_map H))) x) = ((orbit_map (inverse (face_map H))) x)))
T c==> c~ c= * * part corbit_map * part cinverse * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c= * * part corbit_map * part cinverse * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1
+ |- (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((((POWER f) k) o f) o f) o f) x) = x) \/ (((((((POWER f) (SUC k)) o f) o f) x) = (f x)) \/ ((((((POWER f) (SUC k)) o f) o f) x) = (f (f x))))))
T c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 f2 c\/ c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 * f1 f2 c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 * f1 * f1 f2
+ (y = (f (f x))) |- ((?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f (f x)) = (((POWER f) k) x)))) = (?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x)))))
T c==> c= f0 * f1 * f1 f2 c= c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= * f1 * f1 f2 cPOWER f1 b0 f2 c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 b0 f2
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((FINITE (dart H)) /\ ((permutes (face_map H)) (dart H)))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ cFINITE * part cdart f0 cpermutes * part cface_map f0 * part cdart f0
- (_8374861 = _8374863), (_8374862 = _8374864) |- (((((permutes _8374861) _8374862) = ((permutes _8374863) _8374864)) ==> (((permutes _8374863) _8374864) \/ (~ ((permutes _8374861) _8374862)))) = (((permutes _8374863) _8374864) \/ (~ ((permutes _8374861) _8374862))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cpermutes f0 f2 cpermutes f1 f3 c\/ cpermutes f1 f3 c~ cpermutes f0 f2 c\/ cpermutes f1 f3 c~ cpermutes f0 f2
- |- ((_8374865 = _8374866) ==> ((face_map _8374865) = (face_map _8374866)))
T c==> c= f0 f1 c= * part cface_map f0 * part cface_map f1
+ |- (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) /\ (x = x))
T c/\ c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 f0
+ |- (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = x) \/ (((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = (f x)) \/ ((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = (f (f x))))))
T c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 f1 c\/ c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 * f0 f1 c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 * f0 * f0 f1
+ |- ((((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (SUC (SUC k))) o f) x) = x) \/ (((((POWER f) (SUC (SUC (SUC k)))) x) = (f x)) \/ ((((POWER f) (SUC (SUC (SUC k)))) x) = (f (f x)))))) = (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (SUC (SUC k)))) x) = x) \/ (((((POWER f) (SUC (SUC (SUC k)))) x) = (f x)) \/ ((((POWER f) (SUC (SUC (SUC k)))) x) = (f (f x)))))))
T c= c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 f2 c\/ c= cPOWER f1 cSUC cSUC cSUC f0 f2 * f1 f2 c= cPOWER f1 cSUC cSUC cSUC f0 f2 * f1 * f1 f2 c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 cSUC cSUC cSUC f0 f2 f2 c\/ c= cPOWER f1 cSUC cSUC cSUC f0 f2 * f1 f2 c= cPOWER f1 cSUC cSUC cSUC f0 f2 * f1 * f1 f2
+ |- ((?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x)))) ==> ((y = x) \/ ((y = (f x)) \/ (y = (f (f x))))))
T c==> c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 b0 f2 c\/ c= f0 f2 c\/ c= f0 * f1 f2 c= f0 * f1 * f1 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_ge (real_of_int _8374884)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _8374884)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((f (f x)) = x) \/ (((f (f x)) = (f x)) \/ ((f (f x)) = (f (f x)))))) = (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((f (f x)) = x) \/ (((f (f x)) = (f x)) \/ ((I (f (f x))) = (f (f x)))))))
T c= c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= * f0 * f0 f1 f1 c\/ c= * f0 * f0 f1 * f0 f1 c= * f0 * f0 f1 * f0 * f0 f1 c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= * f0 * f0 f1 f1 c\/ c= * f0 * f0 f1 * f0 f1 c= cI * f0 * f0 f1 * f0 * f0 f1
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (T = (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((f (f x)) = x) \/ (((f (f x)) = (f x)) \/ ((f (f x)) = (f (f x)))))))
T c= cT c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= * f0 * f0 f1 f1 c\/ c= * f0 * f0 f1 * f0 f1 c= * f0 * f0 f1 * f0 * f0 f1
+ |- ((k = k1) ==> ((k < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x)))))))
T c==> c= f0 f1 c==> c< f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f2 f0 f3 f3 c\/ c= cPOWER f2 f0 f3 * f2 f3 c= cPOWER f2 f0 f3 * f2 * f2 f3
+ |- ((((real_ge x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 f1 creal_of_num cNUMERAL c_0
+ |- (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) (SUC k)) o f) o f) x) = x) \/ (((((((POWER f) (SUC k)) o f) o f) x) = (f x)) \/ (((((POWER f) (SUC (SUC k))) o f) x) = (f (f x))))))
T c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 f2 c\/ c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 * f1 f2 c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 * f1 * f1 f2
+ |- ((((((POWER f) (SUC (SUC (NUMERAL _0)))) o f) x) = x) = ((((POWER f) (SUC (SUC (SUC (NUMERAL _0))))) x) = x))
T c= c= co * * part cPOWER f0 cSUC cSUC cNUMERAL c_0 f0 f1 f1 c= cPOWER f0 cSUC cSUC cSUC cNUMERAL c_0 f1 f1
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
+ |- (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f x) = (((POWER f) (SUC (NUMERAL _0))) x)))
T c/\ c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 f1 cPOWER f0 cSUC cNUMERAL c_0 f1
+ |- (((((I o f) o f) (f x)) = x) = (((((I o f) o f) o f) x) = x))
T c= c= co * * part co part cI f0 f0 * f0 f1 f1 c= co * * part co * * part co part cI f0 f0 f0 f1 f1
+ |- (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((f x) = x) \/ (((f x) = (f x)) \/ ((f x) = (f (f x))))))
T c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= * f0 f1 f1 c\/ c= * f0 f1 * f0 f1 c= * f0 f1 * f0 * f0 f1
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _8374884)) /\ (((real_le ((real_add ((real_add (real_of_int _8374884)) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))))) |- (((real_ge (real_of_int _8374884)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x))))))))
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3
+ |- (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (SUC (NUMERAL _0))) o f) x) = x) \/ (((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = (f x)) \/ ((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = (f (f x))))))
T c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 f1 c\/ c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 * f0 f1 c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 * f0 * f0 f1
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) |- (((FINITE _8374774) /\ ((permutes _8374775) _8374774)) ==> (((orbit_map (inverse _8374775)) _8374776) = ((orbit_map _8374775) _8374776)))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c/\ cFINITE f0 cpermutes f1 f0 c= * * part corbit_map * part cinverse f1 f2 * * part corbit_map f1 f2
- (_8374859 = _8374860) |- ((_8374859 = _8374860) /\ ((FINITE _8374860) \/ (~ (FINITE _8374859))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ cFINITE f1 c~ cFINITE f0
- |- (((!p'. (!q'. ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) = p') ==> ((p' ==> (((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x)))) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) = p') ==> ((p' ==> (((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x)))) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) = p') ==> ((p' ==> (((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x)))) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI b0 c==> c==> b0 c= c/\ c= * * part cface f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part cnode f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part cedge f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 b1 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part cface f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part cnode f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part cedge f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> b0 b1 * / ! c==> c= c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI b0 c==> c==> b0 c= c/\ c= * * part cface f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part cnode f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part cedge f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 b1 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part cface f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part cnode f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part cedge f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> b0 b1 f2 * / ! c==> c= c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI b0 c==> c==> b0 c= c/\ c= * * part cface f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part cnode f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part cedge f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 b1 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part cface f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part cnode f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part cedge f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> b0 b1 f2
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))) ==> F)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c~ c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 cF
+ |- (((?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x)))) ==> ((y = x) \/ ((y = (f x)) \/ (y = (f (f x)))))) /\ (((y = x) \/ ((y = (f x)) \/ (y = (f (f x))))) ==> (?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x))))))
T c/\ c==> c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 b0 f2 c\/ c= f0 f2 c\/ c= f0 * f1 f2 c= f0 * f1 * f1 f2 c==> c\/ c= f0 f2 c\/ c= f0 * f1 f2 c= f0 * f1 * f1 f2 c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 b0 f2
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) |- (!s. (!p. (((~ (FINITE s)) \/ (~ ((permutes p) s))) \/ (!x. (((orbit_map (inverse p)) x) = ((orbit_map p) x))))))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 ! ! c\/ c\/ c~ cFINITE b0 c~ cpermutes b1 b0 ! c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((FINITE (dart H)) /\ ((permutes (node_map H)) (dart H)))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ cFINITE * part cdart f0 cpermutes * part cnode_map f0 * part cdart f0
- |- ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> (((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))))) = (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> q')))
T c==> c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 f2 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI f2
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) |- ((\x. (((~ (FINITE _8374774)) \/ (~ ((permutes _8374775) _8374774))) \/ (((orbit_map (inverse _8374775)) x) = ((orbit_map _8374775) x)))) _8374776)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 * / c\/ c\/ c~ cFINITE f0 c~ cpermutes f1 f0 c= * * part corbit_map * part cinverse f1 b0 * * part corbit_map f1 b0 f2
- |- ((\x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) x)
T * / ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 f0
+ |- ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) k)
T * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
+ |- ((((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) (f (f (f x)))) = x) \/ ((((((POWER f) k) o f) (f (f x))) = (f x)) \/ (((((POWER f) k) o f) (f (f x))) = (f (f x)))))) = (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) k) o f) (f (f x))) = x) \/ ((((((POWER f) k) o f) (f (f x))) = (f x)) \/ (((((POWER f) k) o f) (f (f x))) = (f (f x)))))))
T c= c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 f2 c\/ c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 * f1 f2 c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 * f1 * f1 f2 c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 f2 c\/ c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 * f1 f2 c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 * f1 * f1 f2
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ (((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x))) ==> F)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c~ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 cF
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ |- (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((I o f) (f x)) = x) \/ ((((I o f) (f x)) = (f x)) \/ ((((I o f) o f) x) = (f (f x))))))
T c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co part cI f0 * f0 f1 f1 c\/ c= co part cI f0 * f0 f1 * f0 f1 c= co * * part co part cI f0 f0 f1 * f0 * f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ P) = (P = F))
T c= c~ f0 c= f0 cF
- |- ((((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) (f (f (f x)))) = x) \/ (((((POWER f) k) (f (f (f x)))) = (f x)) \/ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))) = T)
T c= c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 f2 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 * f1 f2 c= cPOWER f1 f0 * f1 * f1 * f1 f2 * f1 * f1 f2 cT
- |- ((_8374869 = _8374870) ==> ((edge_map _8374869) = (edge_map _8374870)))
T c==> c= f0 f1 c= * part cedge_map f0 * part cedge_map f1
- |- ((\s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t)))))) s)
T * / ! c= c= b0 b1 ! c= cIN b2 b0 cIN b2 b1 f0
- |- ((\H. (!x. (((edge H) x) = ((orbit_map (edge_map H)) x)))) H)
T * / ! c= * * part cedge b0 b1 * * part corbit_map * part cedge_map b0 b1 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((((FINITE (dart H)) /\ ((permutes (node_map H)) (dart H))) ==> (((orbit_map (inverse (node_map H))) _8374773) = ((orbit_map (node_map H)) _8374773))) = (((orbit_map (inverse (node_map H))) _8374773) = ((orbit_map (node_map H)) _8374773)))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= c==> c/\ cFINITE * part cdart f0 cpermutes * part cnode_map f0 * part cdart f0 c= * * part corbit_map * part cinverse * part cnode_map f0 f2 * * part corbit_map * part cnode_map f0 f2 c= * * part corbit_map * part cinverse * part cnode_map f0 f2 * * part corbit_map * part cnode_map f0 f2
+ |- (!x'. ((?k. (((\p. (\t. (p /\ (x' = t)))) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))) = ((x' = x) \/ (x' IN ((f x) INSERT ((f (f x)) INSERT EMPTY))))))
T c= c? / * * / / c/\ b1 c= f0 b2 c< b0 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f1 b0 f2 c\/ c= f0 f2 cIN f0 * * part cINSERT * f1 f2 * * part cINSERT * f1 * f1 f2 part cEMPTY
+ |- ((!n. (((SUC n) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC n)) x) = x) \/ (((((POWER f) (SUC n)) x) = (f x)) \/ ((((POWER f) (SUC n)) x) = (f (f x))))))) = ((((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (NUMERAL _0)) x) = x) \/ (((((POWER f) (NUMERAL _0)) x) = (f x)) \/ ((((POWER f) (NUMERAL _0)) x) = (f (f x)))))) /\ (!n. (((SUC n) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC n)) x) = x) \/ (((((POWER f) (SUC n)) x) = (f x)) \/ ((((POWER f) (SUC n)) x) = (f (f x)))))))))
T c= ! c==> c< cSUC b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC b0 f1 f1 c\/ c= cPOWER f0 cSUC b0 f1 * f0 f1 c= cPOWER f0 cSUC b0 f1 * f0 * f0 f1 c/\ c==> c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cNUMERAL c_0 f1 f1 c\/ c= cPOWER f0 cNUMERAL c_0 f1 * f0 f1 c= cPOWER f0 cNUMERAL c_0 f1 * f0 * f0 f1 ! c==> c< cSUC b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC b0 f1 f1 c\/ c= cPOWER f0 cSUC b0 f1 * f0 f1 c= cPOWER f0 cSUC b0 f1 * f0 * f0 f1
+ |- (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (NUMERAL _0))) x) = x) \/ (((((POWER f) (SUC (NUMERAL _0))) x) = (f x)) \/ ((((POWER f) (SUC (NUMERAL _0))) x) = (f (f x))))))
T c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC cNUMERAL c_0 f1 f1 c\/ c= cPOWER f0 cSUC cNUMERAL c_0 f1 * f0 f1 c= cPOWER f0 cSUC cNUMERAL c_0 f1 * f0 * f0 f1
+ |- ((((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) k) o f) o f) (f x)) = x) \/ (((((((POWER f) k) o f) o f) (f x)) = (f x)) \/ ((((((POWER f) k) o f) o f) (f x)) = (f (f x)))))) = (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) k) o f) o f) (f x)) = x) \/ (((((((POWER f) k) o f) o f) (f x)) = (f x)) \/ (((((((POWER f) k) o f) o f) o f) x) = (f (f x)))))))
T c= c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 f2 c\/ c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 * f1 f2 c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 * f1 * f1 f2 c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 f2 c\/ c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 * f1 f2 c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 * f1 * f1 f2
- |- ((\x. (!H. ((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F)))) x)
T * / ! c==> c~ c==> c/\ cFINITE * part cdart b1 c/\ cpermutes * part cedge_map b1 * part cdart b1 c/\ cpermutes * part cnode_map b1 * part cdart b1 c/\ cpermutes * part cface_map b1 * part cdart b1 c= * * part co * part cedge_map b1 * * part co * part cnode_map b1 * part cface_map b1 part cI c/\ c= * * part corbit_map * part cface_map b1 b0 * * part corbit_map * part cinverse * part cface_map b1 b0 c/\ c= * * part corbit_map * part cnode_map b1 b0 * * part corbit_map * part cinverse * part cnode_map b1 b0 c= * * part corbit_map * part cedge_map b1 b0 * * part corbit_map * part cinverse * part cedge_map b1 b0 c==> ! ! ! c==> c/\ cFINITE b2 cpermutes b3 b2 c= * * part corbit_map * part cinverse b3 b4 * * part corbit_map b3 b4 cF f0
+ |- ((\P. (!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))))) P)
T * / ! c= c==> c? / * b0 b2 b1 ! c==> * b0 b2 b1 f0
+ (((real_ge (real_of_int _8374884)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))) |- ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_int _8374884))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- F
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 cF
+ |- (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f (f x)) = (((POWER f) (SUC (SUC (NUMERAL _0)))) x)))
T c/\ c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 * f0 f1 cPOWER f0 cSUC cSUC cNUMERAL c_0 f1
- |- (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1
- |- ((?k1. (k = k1)) ==> (?k1. (k = k1)))
T c==> c? / c= f0 b0 c? / c= f0 b0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- |- (((!H. (!x. (((edge H) x) = ((orbit_map (edge_map H)) x)))) ==> ((\H. (!x. (((edge H) x) = ((orbit_map (edge_map H)) x)))) H)) = ((\H. (!x. (((edge H) x) = ((orbit_map (edge_map H)) x)))) H))
T c= c==> ! ! c= * * part cedge b0 b1 * * part corbit_map * part cedge_map b0 b1 * / ! c= * * part cedge b0 b1 * * part corbit_map * part cedge_map b0 b1 f0 * / ! c= * * part cedge b0 b1 * * part corbit_map * part cedge_map b0 b1 f0
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- (((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) ==> F) = F)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= c==> c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 cF cF
- |- ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)
T * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
+ ((\k1. (k = k1)) k1) |- (((k = k1) ==> ((k < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x))))))) = ((k < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x)))))))
T c==> * / c= f0 b0 f1 c= c==> c= f0 f1 c==> c< f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f2 f0 f3 f3 c\/ c= cPOWER f2 f0 f3 * f2 f3 c= cPOWER f2 f0 f3 * f2 * f2 f3 c==> c< f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f2 f0 f3 f3 c\/ c= cPOWER f2 f0 f3 * f2 f3 c= cPOWER f2 f0 f3 * f2 * f2 f3
- |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
+ |- ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f (f x)) = ((((POWER f) (SUC (NUMERAL _0))) o f) x))) = (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f (f x)) = (((POWER f) (SUC (SUC (NUMERAL _0)))) x))))
T c= c/\ c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 * f0 f1 co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 c/\ c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 * f0 f1 cPOWER f0 cSUC cSUC cNUMERAL c_0 f1
+ ((((POWER f) (NUMERAL (BIT1 (BIT1 _0)))) x) = x) |- ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) ==> (T ==> (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))))))))
T c==> c= cPOWER f0 cNUMERAL cBIT1 cBIT1 c_0 f1 f1 c==> c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c==> cT c= * * part corbit_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1
+ ((y = (f x)) \/ (y = (f (f x)))) |- (((y = (f x)) \/ (y = (f (f x)))) /\ (?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x)))))
T c==> c\/ c= f0 * f1 f2 c= f0 * f1 * f1 f2 c/\ c\/ c= f0 * f1 f2 c= f0 * f1 * f1 f2 c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 b0 f2
- |- ((\y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) y)
T * / ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 f1
- |- ((\x. (((node H) x) = ((orbit_map (node_map H)) x))) x)
T * / c= * * part cnode f0 b0 * * part corbit_map * part cnode_map f0 b0 f1
- ((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F)) |- (((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F)) /\ ((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F)))
T c==> c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 cF c/\ c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 cF c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 cF
+ |- ((((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I x) = x) \/ (((((POWER f) (NUMERAL _0)) x) = (f x)) \/ ((((POWER f) (NUMERAL _0)) x) = (f (f x)))))) = (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (NUMERAL _0)) x) = x) \/ (((((POWER f) (NUMERAL _0)) x) = (f x)) \/ ((((POWER f) (NUMERAL _0)) x) = (f (f x)))))))
T c= c==> c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI f0 f0 c\/ c= cPOWER f1 cNUMERAL c_0 f0 * f1 f0 c= cPOWER f1 cNUMERAL c_0 f0 * f1 * f1 f0 c==> c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 cNUMERAL c_0 f0 f0 c\/ c= cPOWER f1 cNUMERAL c_0 f0 * f1 f0 c= cPOWER f1 cNUMERAL c_0 f0 * f1 * f1 f0
- |- ((x IN P) = (P x))
T c= cIN f0 f1 * f1 f0
+ |- (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((f x) = x) \/ (((I (f x)) = (f x)) \/ ((I (f x)) = (f (f x))))))
T c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= * f0 f1 f1 c\/ c= cI * f0 f1 * f0 f1 c= cI * f0 f1 * f0 * f0 f1
- |- ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) = p') ==> ((p' ==> (((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x)))) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x))))) = (p' ==> q'))))
T c==> c= c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI f1 c==> c==> f1 c= c/\ c= * * part cface f0 f2 * * part corbit_map * part cinverse * part cface_map f0 f2 c/\ c= * * part cnode f0 f2 * * part corbit_map * part cinverse * part cnode_map f0 f2 c= * * part cedge f0 f2 * * part corbit_map * part cinverse * part cedge_map f0 f2 f3 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part cface f0 f2 * * part corbit_map * part cinverse * part cface_map f0 f2 c/\ c= * * part cnode f0 f2 * * part corbit_map * part cinverse * part cnode_map f0 f2 c= * * part cedge f0 f2 * * part corbit_map * part cinverse * part cedge_map f0 f2 c==> f1 f3
- (k = k1) |- (k1 = k)
T c==> c= f0 f1 c= f1 f0
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- |- (((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> F) = (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))))))
T c= c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 cF c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1
+ |- ((((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((I o f) x) = x) \/ ((((I o f) x) = (f x)) \/ (((I o f) x) = (f (f x)))))) = (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((I o f) x) = x) \/ ((((I o f) x) = (f x)) \/ (((((POWER f) (NUMERAL _0)) o f) x) = (f (f x)))))))
T c= c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co part cI f0 f1 f1 c\/ c= co part cI f0 f1 * f0 f1 c= co part cI f0 f1 * f0 * f0 f1 c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co part cI f0 f1 f1 c\/ c= co part cI f0 f1 * f0 f1 c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 * f0 * f0 f1
+ |- (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((f x) = x) \/ (((f x) = (f x)) \/ ((I (f x)) = (f (f x))))))
T c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= * f0 f1 f1 c\/ c= * f0 f1 * f0 f1 c= cI * f0 f1 * f0 * f0 f1
+ |- (((!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) ==> ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) k)) = ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) k))
T c= c==> ! cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> (((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))) = ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))))) = (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))))))) = ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))))) = (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))))
T c= c==> c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- F
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 cF
+ |- ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f (f x)) = ((I o f) (f x)))) = (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f (f x)) = (((I o f) o f) x))))
T c= c/\ c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 * f0 f1 co part cI f0 * f0 f1 c/\ c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 * f0 f1 co * * part co part cI f0 f0 f1
- |- ((\H. ((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F))) H)
T * / c==> c~ c==> c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI c/\ c= * * part corbit_map * part cface_map b0 f0 * * part corbit_map * part cinverse * part cface_map b0 f0 c/\ c= * * part corbit_map * part cnode_map b0 f0 * * part corbit_map * part cinverse * part cnode_map b0 f0 c= * * part corbit_map * part cedge_map b0 f0 * * part corbit_map * part cinverse * part cedge_map b0 f0 c==> ! ! ! c==> c/\ cFINITE b1 cpermutes b2 b1 c= * * part corbit_map * part cinverse b2 b3 * * part corbit_map b2 b3 cF f1
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) /\ (~ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x))))))))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c~ ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2
+ |- ((((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((((POWER f) k) o f) o f) o f) x) = x) \/ ((((((((POWER f) k) o f) o f) o f) x) = (f x)) \/ ((((((POWER f) (SUC k)) o f) o f) x) = (f (f x)))))) = (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((((POWER f) k) o f) o f) o f) x) = x) \/ (((((((POWER f) (SUC k)) o f) o f) x) = (f x)) \/ ((((((POWER f) (SUC k)) o f) o f) x) = (f (f x)))))))
T c= c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 f2 c\/ c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 * f1 f2 c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 * f1 * f1 f2 c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 f2 c\/ c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 * f1 f2 c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 * f1 * f1 f2
+ |- (((I (f (f (f x)))) = x) = (((I o f) (f (f x))) = x))
T c= c= cI * f0 * f0 * f0 f1 f1 c= co part cI f0 * f0 * f0 f1 f1
+ |- ((~ ((int_lt ((int_add (int_of_num k)) (int_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (int_of_num (NUMERAL (BIT1 (BIT1 _0)))))) \/ (((((POWER f) k) (f (f (f x)))) = x) \/ (((((POWER f) k) (f (f (f x)))) = (f x)) \/ ((((POWER f) k) (f (f (f x)))) = (f (f x))))))
T c\/ c~ cint_lt cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 cBIT1 c_0 cint_of_num cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 f2 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 * f1 f2 c= cPOWER f1 f0 * f1 * f1 * f1 f2 * f1 * f1 f2
- ((\k1. (k = k1)) k1) |- (((k = k1) ==> (?k1. (k = k1))) = (?k1. (k = k1)))
T c==> * / c= f0 b0 f1 c= c==> c= f0 f1 c? / c= f0 b0 c? / c= f0 b0
+ |- (((POWER f) (SUC n)) = (((POWER f) n) o f))
T c= * * part cPOWER f0 cSUC f1 * * part co * * part cPOWER f0 f1 f0
+ (y = (((POWER f) k) x)) |- ((((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ (y = (f (f x))))) = (((((POWER f) k) x) = x) \/ ((y = (f x)) \/ (y = (f (f x))))))
T c==> c= f0 cPOWER f1 f2 f3 c= c\/ c= cPOWER f1 f2 f3 f3 c\/ c= cPOWER f1 f2 f3 * f1 f3 c= f0 * f1 * f1 f3 c\/ c= cPOWER f1 f2 f3 f3 c\/ c= f0 * f1 f3 c= f0 * f1 * f1 f3
+ |- (((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (!x'. ((?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (x' = (((POWER f) k) x)))) = ((x' = x) \/ ((x' = (f x)) \/ (x' = (f (f x)))))))
T c= c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 b0 f2 c\/ c= f0 f2 c\/ c= f0 * f1 f2 c= f0 * f1 * f1 f2
- ((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F)), (((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F)) ==> ((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F))) |- (((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F)) /\ ((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F)))
T c==> c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 cF c==> c==> c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 cF c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 cF c/\ c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 cF c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 cF
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) |- (((!p. (!x. (((~ (FINITE _8374774)) \/ (~ ((permutes p) _8374774))) \/ (((orbit_map (inverse p)) x) = ((orbit_map p) x))))) ==> ((\p. (!x. (((~ (FINITE _8374774)) \/ (~ ((permutes p) _8374774))) \/ (((orbit_map (inverse p)) x) = ((orbit_map p) x))))) _8374775)) = ((\p. (!x. (((~ (FINITE _8374774)) \/ (~ ((permutes p) _8374774))) \/ (((orbit_map (inverse p)) x) = ((orbit_map p) x))))) _8374775))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c= c==> ! ! c\/ c\/ c~ cFINITE f0 c~ cpermutes b0 f0 c= * * part corbit_map * part cinverse b0 b1 * * part corbit_map b0 b1 * / ! c\/ c\/ c~ cFINITE f0 c~ cpermutes b0 f0 c= * * part corbit_map * part cinverse b0 b1 * * part corbit_map b0 b1 f1 * / ! c\/ c\/ c~ cFINITE f0 c~ cpermutes b0 f0 c= * * part corbit_map * part cinverse b0 b1 * * part corbit_map b0 b1 f1
- |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
- |- (((!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t)))))) ==> ((\s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t)))))) s)) = ((\s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t)))))) s))
T c= c==> ! ! c= c= b0 b1 ! c= cIN b2 b0 cIN b2 b1 * / ! c= c= b0 b1 ! c= cIN b2 b0 cIN b2 b1 f0 * / ! c= c= b0 b1 ! c= cIN b2 b0 cIN b2 b1 f0
+ |- (((!x. (((f o g) x) = (f (g x)))) ==> ((\x. (((f o g) x) = (f (g x)))) x)) = ((\x. (((f o g) x) = (f (g x)))) x))
T c= c==> ! c= co f0 f1 b0 * f0 * f1 b0 * / c= co f0 f1 b0 * f0 * f1 b0 f2 * / c= co f0 f1 b0 * f0 * f1 b0 f2
- ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) |- ((FINITE (dart H)) = T)
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= cFINITE * part cdart f0 cT
+ |- (((!n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) ==> ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n)) = ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n))
T c= c==> ! c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1 * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) |- ((~ (FINITE _8374774)) \/ ((~ ((permutes _8374775) _8374774)) \/ (((orbit_map (inverse _8374775)) _8374776) = ((orbit_map _8374775) _8374776))))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c\/ c~ cFINITE f0 c\/ c~ cpermutes f1 f0 c= * * part corbit_map * part cinverse f1 f2 * * part corbit_map f1 f2
+ |- (((f (f (f x))) = x) = ((I (f (f (f x)))) = x))
T c= c= * f0 * f0 * f0 f1 f1 c= cI * f0 * f0 * f0 f1 f1
+ |- ((?k1. (k = k1)) ==> ((k < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x)))))))
T c==> c? / c= f0 b0 c==> c< f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f0 f2 f2 c\/ c= cPOWER f1 f0 f2 * f1 f2 c= cPOWER f1 f0 f2 * f1 * f1 f2
- |- ((\p'. (!q'. ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) = p') ==> ((p' ==> (((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x)))) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI b0 c==> c==> b0 c= c/\ c= * * part cface f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part cnode f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part cedge f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 b1 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part cface f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part cnode f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part cedge f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> b0 b1 f2
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
+ |- (((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) ==> (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))))))) ==> (((orbit_map f) x) = (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY)))))
T c==> c==> c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c= * * part corbit_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 c= * * part corbit_map f0 f1 * * part cINSERT f1 * * part cINSERT * f0 f1 * * part cINSERT * f0 * f0 f1 part cEMPTY
- |- (((real_ge (real_of_int _8374884)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _8374884)) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- ((k = k) = ((\k1. (k = k1)) k))
T c= c= f0 f0 * / c= f0 b0 f0
- (!P. (((P (NUMERAL _0)) /\ (!n. (P (SUC n)))) ==> (!m. (P m)))), ((P (NUMERAL _0)) /\ (!n. (P (SUC n)))) |- ((!P. (((P (NUMERAL _0)) /\ (!n. (P (SUC n)))) ==> (!m. (P m)))) /\ (!m. (P m)))
T c==> ! c==> c/\ * b0 cNUMERAL c_0 ! * b0 cSUC b1 ! * b0 b1 c==> c/\ * f0 cNUMERAL c_0 ! * f0 cSUC b0 c/\ ! c==> c/\ * b0 cNUMERAL c_0 ! * b0 cSUC b1 ! * b0 b1 ! * f0 b0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))), ((((POWER f) (NUMERAL (BIT1 (BIT1 _0)))) x) = x) |- (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))))))
T c==> c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c==> c= cPOWER f0 cNUMERAL cBIT1 cBIT1 c_0 f1 f1 c= * * part corbit_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1
- |- ((k < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((y = (((POWER f) k) x)) ==> ((y = x) \/ ((y = (f x)) \/ (y = (f (f x)))))))
T c==> c< f0 cNUMERAL cBIT1 cBIT1 c_0 c==> c= f1 cPOWER f2 f0 f3 c\/ c= f1 f3 c\/ c= f1 * f2 f3 c= f1 * f2 * f2 f3
+ |- ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((I o f) (f x)) = x) \/ (((((I o f) o f) x) = (f x)) \/ ((((I o f) o f) x) = (f (f x)))))) = (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((I o f) o f) x) = x) \/ (((((I o f) o f) x) = (f x)) \/ ((((I o f) o f) x) = (f (f x)))))))
T c= c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co part cI f0 * f0 f1 f1 c\/ c= co * * part co part cI f0 f0 f1 * f0 f1 c= co * * part co part cI f0 f0 f1 * f0 * f0 f1 c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co part cI f0 f0 f1 f1 c\/ c= co * * part co part cI f0 f0 f1 * f0 f1 c= co * * part co part cI f0 f0 f1 * f0 * f0 f1
+ |- ((((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (NUMERAL _0))) x) = x) \/ (((((POWER f) (SUC (NUMERAL _0))) x) = (f x)) \/ ((((POWER f) (SUC (NUMERAL _0))) x) = (f (f x)))))) /\ (!n. (((SUC (SUC n)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (SUC n))) x) = x) \/ (((((POWER f) (SUC (SUC n))) x) = (f x)) \/ ((((POWER f) (SUC (SUC n))) x) = (f (f x))))))))
T c/\ c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC cNUMERAL c_0 f1 f1 c\/ c= cPOWER f0 cSUC cNUMERAL c_0 f1 * f0 f1 c= cPOWER f0 cSUC cNUMERAL c_0 f1 * f0 * f0 f1 ! c==> c< cSUC cSUC b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC cSUC b0 f1 f1 c\/ c= cPOWER f0 cSUC cSUC b0 f1 * f0 f1 c= cPOWER f0 cSUC cSUC b0 f1 * f0 * f0 f1
+ (~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))), ((((POWER f) (NUMERAL (BIT1 (BIT1 _0)))) x) = x) |- ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (T ==> (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))))))))
T c==> c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c==> c= cPOWER f0 cNUMERAL cBIT1 cBIT1 c_0 f1 f1 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c==> cT c= * * part corbit_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1
- (_8374865 = _8374866) |- ((_8374865 = _8374866) /\ ((face_map _8374865) = (face_map _8374866)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * part cface_map f0 * part cface_map f1
+ |- (((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = x) \/ (((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = (f x)) \/ ((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = (f (f x)))))) /\ (!n. (((SUC (SUC (SUC n))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (SUC (SUC n)))) x) = x) \/ (((((POWER f) (SUC (SUC (SUC n)))) x) = (f x)) \/ ((((POWER f) (SUC (SUC (SUC n)))) x) = (f (f x)))))))) ==> (!n. (((SUC (SUC n)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (SUC n))) x) = x) \/ (((((POWER f) (SUC (SUC n))) x) = (f x)) \/ ((((POWER f) (SUC (SUC n))) x) = (f (f x))))))))
T c==> c/\ c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 f1 c\/ c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 * f0 f1 c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 * f0 * f0 f1 ! c==> c< cSUC cSUC cSUC b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC cSUC cSUC b0 f1 f1 c\/ c= cPOWER f0 cSUC cSUC cSUC b0 f1 * f0 f1 c= cPOWER f0 cSUC cSUC cSUC b0 f1 * f0 * f0 f1 ! c==> c< cSUC cSUC b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC cSUC b0 f1 f1 c\/ c= cPOWER f0 cSUC cSUC b0 f1 * f0 f1 c= cPOWER f0 cSUC cSUC b0 f1 * f0 * f0 f1
- |- ((\H. (!x. (((node H) x) = ((orbit_map (node_map H)) x)))) H)
T * / ! c= * * part cnode b0 b1 * * part corbit_map * part cnode_map b0 b1 f0
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- (((permutes (edge_map H)) (dart H)) = ((permutes (edge_map H)) (dart H)))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= cpermutes * part cedge_map f0 * part cdart f0 cpermutes * part cedge_map f0 * part cdart f0
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((orbit_map (inverse (node_map H))) x) = ((orbit_map (node_map H)) x))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ (((orbit_map (inverse (node_map H))) x) = ((orbit_map (node_map H)) x))) /\ (((orbit_map (inverse (node_map H))) x) = ((orbit_map (node_map H)) x)))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c= * * part corbit_map * part cinverse * part cnode_map f0 f1 * * part corbit_map * part cnode_map f0 f1 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c~ c= * * part corbit_map * part cinverse * part cnode_map f0 f1 * * part corbit_map * part cnode_map f0 f1 c= * * part corbit_map * part cinverse * part cnode_map f0 f1 * * part corbit_map * part cnode_map f0 f1
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) |- ((\s. (!p. (!x. (((~ (FINITE s)) \/ (~ ((permutes p) s))) \/ (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) _8374774)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 * / ! ! c\/ c\/ c~ cFINITE b0 c~ cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 f0
+ |- ((((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f x) = (I (f x)))) = (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f x) = ((I o f) x))))
T c= c/\ c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 f1 cI * f0 f1 c/\ c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 f1 co part cI f0 f1
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ ((permutes (edge_map H)) (dart H))) ==> ((permutes (edge_map H)) (dart H)))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c~ cpermutes * part cedge_map f0 * part cdart f0 cpermutes * part cedge_map f0 * part cdart f0
- |- (((!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) ==> ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)) = ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ ((y = (f (f x))) ==> (?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x))))), ((y = (f x)) \/ (y = (f (f x)))) |- (?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x))))
T c==> c==> c= f0 * f1 * f1 f2 c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 b0 f2 c==> c\/ c= f0 * f1 f2 c= f0 * f1 * f1 f2 c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 b0 f2
- |- (((face H) x) = ((orbit_map (face_map H)) x))
T c= * * part cface f0 f1 * * part corbit_map * part cface_map f0 f1
- (((real_ge (real_of_int _8374884)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))) |- ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x))))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3
- |- (((!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) ==> ((\s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) s)) = ((\s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) s))
T c= c==> ! c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 * / c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 f2 * / c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 f2
- (((real_ge (real_of_int _8374884)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) ==> ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)) = ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P))
T c= c==> ! ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
+ |- (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((I o f) x) = x) \/ ((((I o f) x) = (f x)) \/ (((I o f) x) = (f (f x))))))
T c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co part cI f0 f1 f1 c\/ c= co part cI f0 f1 * f0 f1 c= co part cI f0 f1 * f0 * f0 f1
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ (FINITE (dart H))) ==> (FINITE (dart H)))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c~ cFINITE * part cdart f0 cFINITE * part cdart f0
+ |- (((!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q)))) ==> ((\Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q)))) Q)) = ((\Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q)))) Q))
T c= c==> ! c= c==> c? / * f0 b1 b0 ! c==> * f0 b1 b0 * / c= c==> c? / * f0 b1 b0 ! c==> * f0 b1 b0 f1 * / c= c==> c? / * f0 b1 b0 ! c==> * f0 b1 b0 f1
- (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))) |- ((!x. ((P x) ==> Q)) = ((?x. (P x)) ==> Q))
T c==> c= c==> c? / * f0 b0 f1 ! c==> * f0 b0 f1 c= ! c==> * f0 b0 f1 c==> c? / * f0 b0 f1
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- (((((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)) ==> F) = F)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= c==> c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 cF cF
+ |- ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ ((((orbit_map f) x) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x)))))) ==> (((orbit_map f) x) = (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY))))))
T c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c==> c= * * part corbit_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 c= * * part corbit_map f0 f1 * * part cINSERT f1 * * part cINSERT * f0 f1 * * part cINSERT * f0 * f0 f1 part cEMPTY
- |- ((\x. (~ (x IN EMPTY))) x)
T * / c~ cIN b0 part cEMPTY f0
- ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) |- (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) /\ (((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x)))) = ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))))))
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= c/\ c= * * part cface f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part cnode f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part cedge f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ (((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x))) = (~ (((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x))))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= c~ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c~ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1
- |- ((x IN (s UNION t)) = ((x IN s) \/ (x IN t)))
T c= cIN f0 * * part cUNION f1 f2 c\/ cIN f0 f1 cIN f0 f2
- ((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F)) |- ((((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F)) ==> ((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F))) ==> ((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F)))
T c==> c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 cF c==> c==> c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 cF c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 cF c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 cF
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((permutes (node_map H)) (dart H))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 cpermutes * part cnode_map f0 * part cdart f0
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
+ |- (T = (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f x) = (f x))))
T c= cT c/\ c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 f1 * f0 f1
+ (((real_ge (real_of_int _8374884)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((~ (a \/ b)) = ((~ a) /\ (~ b)))
T c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
+ |- ((((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f x) = ((((POWER f) (NUMERAL _0)) o f) x))) = (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f x) = (((POWER f) (SUC (NUMERAL _0))) x))))
T c= c/\ c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 f1 co * * part cPOWER f0 cNUMERAL c_0 f0 f1 c/\ c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 f1 cPOWER f0 cSUC cNUMERAL c_0 f1
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))), (~ ((permutes (edge_map H)) (dart H))) |- ((~ ((permutes (edge_map H)) (dart H))) /\ ((permutes (edge_map H)) (dart H)))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c~ cpermutes * part cedge_map f0 * part cdart f0 c/\ c~ cpermutes * part cedge_map f0 * part cdart f0 cpermutes * part cedge_map f0 * part cdart f0
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- (((permutes (node_map H)) (dart H)) = ((permutes (node_map H)) (dart H)))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= cpermutes * part cnode_map f0 * part cdart f0 cpermutes * part cnode_map f0 * part cdart f0
+ |- ((((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = x) \/ (((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = (f x)) \/ ((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = (f (f x)))))) /\ (!n. (((SUC (SUC (SUC n))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (SUC (SUC n)))) x) = x) \/ (((((POWER f) (SUC (SUC (SUC n)))) x) = (f x)) \/ ((((POWER f) (SUC (SUC (SUC n)))) x) = (f (f x)))))))) ==> (!n. (((SUC (SUC n)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (SUC n))) x) = x) \/ (((((POWER f) (SUC (SUC n))) x) = (f x)) \/ ((((POWER f) (SUC (SUC n))) x) = (f (f x)))))))) = (!n. (((SUC (SUC n)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (SUC n))) x) = x) \/ (((((POWER f) (SUC (SUC n))) x) = (f x)) \/ ((((POWER f) (SUC (SUC n))) x) = (f (f x))))))))
T c= c==> c/\ c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 f1 c\/ c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 * f0 f1 c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 * f0 * f0 f1 ! c==> c< cSUC cSUC cSUC b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC cSUC cSUC b0 f1 f1 c\/ c= cPOWER f0 cSUC cSUC cSUC b0 f1 * f0 f1 c= cPOWER f0 cSUC cSUC cSUC b0 f1 * f0 * f0 f1 ! c==> c< cSUC cSUC b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC cSUC b0 f1 f1 c\/ c= cPOWER f0 cSUC cSUC b0 f1 * f0 f1 c= cPOWER f0 cSUC cSUC b0 f1 * f0 * f0 f1 ! c==> c< cSUC cSUC b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC cSUC b0 f1 f1 c\/ c= cPOWER f0 cSUC cSUC b0 f1 * f0 f1 c= cPOWER f0 cSUC cSUC b0 f1 * f0 * f0 f1
+ ((\k1. (k = k1)) k1) |- (k = k1)
T c==> * / c= f0 b0 f1 c= f0 f1
- (k = k1) |- ((k = k1) /\ (?k1. (k = k1)))
T c==> c= f0 f1 c/\ c= f0 f1 c? / c= f0 b0
+ |- (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I (f x)) = x) \/ (((I (f x)) = (f x)) \/ ((I (f x)) = (f (f x))))))
T c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI * f0 f1 f1 c\/ c= cI * f0 f1 * f0 f1 c= cI * f0 f1 * f0 * f0 f1
+ (y = x) |- ((?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (x = (((POWER f) k) x)))) = (?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x)))))
T c==> c= f0 f1 c= c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f1 cPOWER f2 b0 f1 c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f2 b0 f1
+ |- (((!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
+ |- (((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ |- ((((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) k) o f) o f) (f x)) = x) \/ (((((((POWER f) k) o f) o f) (f x)) = (f x)) \/ (((((((POWER f) k) o f) o f) o f) x) = (f (f x)))))) = (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) k) o f) o f) (f x)) = x) \/ ((((((((POWER f) k) o f) o f) o f) x) = (f x)) \/ (((((((POWER f) k) o f) o f) o f) x) = (f (f x)))))))
T c= c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 f2 c\/ c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 * f1 f2 c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 * f1 * f1 f2 c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 f2 c\/ c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 * f1 f2 c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 * f1 * f1 f2
- |- ((x = y) = ((real_of_int x) = (real_of_int y)))
T c= c= f0 f1 c= creal_of_int f0 creal_of_int f1
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) |- ((((orbit_map (inverse _8374775)) _8374776) = ((orbit_map _8374775) _8374776)) \/ ((~ (FINITE _8374774)) \/ (~ ((permutes _8374775) _8374774))))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c\/ c= * * part corbit_map * part cinverse f0 f1 * * part corbit_map f0 f1 c\/ c~ cFINITE f2 c~ cpermutes f0 f2
- ((\k1. (k = k1)) k1) |- (((\k1. (k = k1)) k1) /\ (?k1. (k = k1)))
T c==> * / c= f0 b0 f1 c/\ * / c= f0 b0 f1 c? / c= f0 b0
- (((real_ge (real_of_int _8374884)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _8374884))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x)))))
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part cface f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part cnode f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part cedge f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1
+ |- (!x'. ((x' IN (GSPEC (\v. (?k. (((SETSPEC v) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x)))))) = (x' IN (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY))))))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f1 b1 f2 cIN f0 * * part cINSERT f2 * * part cINSERT * f1 f2 * * part cINSERT * f1 * f1 f2 part cEMPTY
+ |- (!n. (((SUC (SUC n)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (SUC n))) x) = x) \/ (((((POWER f) (SUC (SUC n))) x) = (f x)) \/ ((((POWER f) (SUC (SUC n))) x) = (f (f x)))))))
T c==> c< cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 cSUC cSUC f0 f2 f2 c\/ c= cPOWER f1 cSUC cSUC f0 f2 * f1 f2 c= cPOWER f1 cSUC cSUC f0 f2 * f1 * f1 f2
+ |- (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) (NUMERAL _0)) o f) o f) x) = x) \/ ((((((POWER f) (SUC (NUMERAL _0))) o f) x) = (f x)) \/ (((((POWER f) (SUC (NUMERAL _0))) o f) x) = (f (f x))))))
T c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 f1 c\/ c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 * f0 f1 c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 * f0 * f0 f1
- |- ((!x. (((~ (FINITE s)) \/ (~ ((permutes p) s))) \/ (((orbit_map (inverse p)) x) = ((orbit_map p) x)))) = (((~ (FINITE s)) \/ (~ ((permutes p) s))) \/ (!x. (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))
T c= ! c\/ c\/ c~ cFINITE f0 c~ cpermutes f1 f0 c= * * part corbit_map * part cinverse f1 b0 * * part corbit_map f1 b0 c\/ c\/ c~ cFINITE f0 c~ cpermutes f1 f0 ! c= * * part corbit_map * part cinverse f1 b0 * * part corbit_map f1 b0
- ((f (f (f x))) = x) |- (T = ((f (f (f x))) = x))
T c==> c= * f0 * f0 * f0 f1 f1 c= cT c= * f0 * f0 * f0 f1 f1
+ |- ((p /\ (q ==> r)) ==> ((p ==> q) ==> r))
T c==> c/\ f0 c==> f1 f2 c==> c==> f0 f1 f2
+ (((real_ge (real_of_int _8374884)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _8374884)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_int _8374884))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_int _8374884))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3 c= c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((I o f) (f x)) = x) \/ ((((I o f) (f x)) = (f x)) \/ ((((I o f) o f) x) = (f (f x)))))) = (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((I o f) (f x)) = x) \/ (((((I o f) o f) x) = (f x)) \/ ((((I o f) o f) x) = (f (f x)))))))
T c= c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co part cI f0 * f0 f1 f1 c\/ c= co part cI f0 * f0 f1 * f0 f1 c= co * * part co part cI f0 f0 f1 * f0 * f0 f1 c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co part cI f0 * f0 f1 f1 c\/ c= co * * part co part cI f0 f0 f1 * f0 f1 c= co * * part co part cI f0 f0 f1 * f0 * f0 f1
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ F), (~ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ F) /\ F)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ cF c==> c~ c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c~ cF cF
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ (((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x))) = (~ (((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x))))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= c~ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c~ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1
+ |- (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((((POWER f) k) o f) o f) o f) x) = x) \/ ((((((((POWER f) k) o f) o f) o f) x) = (f x)) \/ ((((((POWER f) (SUC k)) o f) o f) x) = (f (f x))))))
T c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 f2 c\/ c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 * f1 f2 c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 * f1 * f1 f2
- |- (((!H. ((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F))) ==> ((\H. ((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F))) H)) = ((\H. ((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F))) H))
T c= c==> ! c==> c~ c==> c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI c/\ c= * * part corbit_map * part cface_map b0 f0 * * part corbit_map * part cinverse * part cface_map b0 f0 c/\ c= * * part corbit_map * part cnode_map b0 f0 * * part corbit_map * part cinverse * part cnode_map b0 f0 c= * * part corbit_map * part cedge_map b0 f0 * * part corbit_map * part cinverse * part cedge_map b0 f0 c==> ! ! ! c==> c/\ cFINITE b1 cpermutes b2 b1 c= * * part corbit_map * part cinverse b2 b3 * * part corbit_map b2 b3 cF * / c==> c~ c==> c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI c/\ c= * * part corbit_map * part cface_map b0 f0 * * part corbit_map * part cinverse * part cface_map b0 f0 c/\ c= * * part corbit_map * part cnode_map b0 f0 * * part corbit_map * part cinverse * part cnode_map b0 f0 c= * * part corbit_map * part cedge_map b0 f0 * * part corbit_map * part cinverse * part cedge_map b0 f0 c==> ! ! ! c==> c/\ cFINITE b1 cpermutes b2 b1 c= * * part corbit_map * part cinverse b2 b3 * * part corbit_map b2 b3 cF f1 * / c==> c~ c==> c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI c/\ c= * * part corbit_map * part cface_map b0 f0 * * part corbit_map * part cinverse * part cface_map b0 f0 c/\ c= * * part corbit_map * part cnode_map b0 f0 * * part corbit_map * part cinverse * part cnode_map b0 f0 c= * * part corbit_map * part cedge_map b0 f0 * * part corbit_map * part cinverse * part cedge_map b0 f0 c==> ! ! ! c==> c/\ cFINITE b1 cpermutes b2 b1 c= * * part corbit_map * part cinverse b2 b3 * * part corbit_map b2 b3 cF f1
+ |- (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I (f (f x))) = x) \/ (((I (f (f x))) = (f x)) \/ ((I (f (f x))) = (f (f x))))))
T c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI * f0 * f0 f1 f1 c\/ c= cI * f0 * f0 f1 * f0 f1 c= cI * f0 * f0 f1 * f0 * f0 f1
- |- ((~ (_8374869 = _8374870)) \/ ((edge_map _8374869) = (edge_map _8374870)))
T c\/ c~ c= f0 f1 c= * part cedge_map f0 * part cedge_map f1
- |- (!x. (!H. ((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> (~ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x))))))))))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c~ ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- (((permutes (face_map H)) (dart H)) = ((permutes (face_map H)) (dart H)))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= cpermutes * part cface_map f0 * part cdart f0 cpermutes * part cface_map f0 * part cdart f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) (NUMERAL _0)) o f) o f) x) = x) \/ ((((((POWER f) (SUC (NUMERAL _0))) o f) x) = (f x)) \/ (((((POWER f) (SUC (NUMERAL _0))) o f) x) = (f (f x)))))) = (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (SUC (NUMERAL _0))) o f) x) = x) \/ ((((((POWER f) (SUC (NUMERAL _0))) o f) x) = (f x)) \/ (((((POWER f) (SUC (NUMERAL _0))) o f) x) = (f (f x)))))))
T c= c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 f1 c\/ c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 * f0 f1 c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 * f0 * f0 f1 c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 f1 c\/ c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 * f0 f1 c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 * f0 * f0 f1
+ |- ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((f (f x)) = x) \/ (((f (f x)) = (f x)) \/ ((I (f (f x))) = (f (f x)))))) = (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((f (f x)) = x) \/ (((I (f (f x))) = (f x)) \/ ((I (f (f x))) = (f (f x)))))))
T c= c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= * f0 * f0 f1 f1 c\/ c= * f0 * f0 f1 * f0 f1 c= cI * f0 * f0 f1 * f0 * f0 f1 c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= * f0 * f0 f1 f1 c\/ c= cI * f0 * f0 f1 * f0 f1 c= cI * f0 * f0 f1 * f0 * f0 f1
- |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- (T = (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((x = x) \/ ((x = (f x)) \/ (x = (f (f x)))))))
T c= cT c==> c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= f0 f0 c\/ c= f0 * f1 f0 c= f0 * f1 * f1 f0
+ |- (!x'. ((?k. (((\p. (\t. (p /\ (x' = t)))) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))) = ((x' = x) \/ ((x' = (f x)) \/ (x' IN ((f (f x)) INSERT EMPTY))))))
T c= c? / * * / / c/\ b1 c= f0 b2 c< b0 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f1 b0 f2 c\/ c= f0 f2 c\/ c= f0 * f1 f2 cIN f0 * * part cINSERT * f1 * f1 f2 part cEMPTY
+ |- (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f (f x)) = ((((POWER f) (SUC (NUMERAL _0))) o f) x)))
T c/\ c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 * f0 f1 co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1
+ |- ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((f (f x)) = x) \/ (((I (f (f x))) = (f x)) \/ ((I (f (f x))) = (f (f x)))))) = (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I (f (f x))) = x) \/ (((I (f (f x))) = (f x)) \/ ((I (f (f x))) = (f (f x)))))))
T c= c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= * f0 * f0 f1 f1 c\/ c= cI * f0 * f0 f1 * f0 f1 c= cI * f0 * f0 f1 * f0 * f0 f1 c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI * f0 * f0 f1 f1 c\/ c= cI * f0 * f0 f1 * f0 f1 c= cI * f0 * f0 f1 * f0 * f0 f1
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _8374884)) /\ (((real_le ((real_add ((real_add (real_of_int _8374884)) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))) = (~ (((int_le (int_of_num (NUMERAL _0))) _8374884) ==> ((~ ((int_lt ((int_add _8374884) (int_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (int_of_num (NUMERAL (BIT1 (BIT1 _0)))))) \/ (((((POWER f) k) (f (f (f x)))) = x) \/ (((((POWER f) k) (f (f (f x)))) = (f x)) \/ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c\/ c~ cint_lt cint_add f0 cint_of_num cNUMERAL cBIT1 cBIT1 c_0 cint_of_num cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c\/ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3
+ |- (((!P. (((P (NUMERAL _0)) /\ (!n. (P (SUC n)))) ==> (!m. (P m)))) ==> ((\P. (((P (NUMERAL _0)) /\ (!n. (P (SUC n)))) ==> (!m. (P m)))) P)) = ((\P. (((P (NUMERAL _0)) /\ (!n. (P (SUC n)))) ==> (!m. (P m)))) P))
T c= c==> ! c==> c/\ * b0 cNUMERAL c_0 ! * b0 cSUC b1 ! * b0 b1 * / c==> c/\ * b0 cNUMERAL c_0 ! * b0 cSUC b1 ! * b0 b1 f0 * / c==> c/\ * b0 cNUMERAL c_0 ! * b0 cSUC b1 ! * b0 b1 f0
- (_8374873 = _8374874) |- ((_8374873 = _8374874) /\ ((inverse _8374873) = (inverse _8374874)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * part cinverse f0 * part cinverse f1
- |- (((!t. ((s = t) = (!x. ((x IN s) = (x IN t))))) ==> ((\t. ((s = t) = (!x. ((x IN s) = (x IN t))))) t)) = ((\t. ((s = t) = (!x. ((x IN s) = (x IN t))))) t))
T c= c==> ! c= c= f0 b0 ! c= cIN b1 f0 cIN b1 b0 * / c= c= f0 b0 ! c= cIN b1 f0 cIN b1 b0 f1 * / c= c= f0 b0 ! c= cIN b1 f0 cIN b1 b0 f1
- (((real_ge (real_of_int _8374884)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))) |- (~ ((((POWER f) k) (f (f (f x)))) = (f x)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3
+ |- ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f (f x)) = (f (f x)))) = (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f (f x)) = (I (f (f x))))))
T c= c/\ c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 * f0 f1 * f0 * f0 f1 c/\ c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 * f0 f1 cI * f0 * f0 f1
+ |- ((\f. (!g. (!x. (((f o g) x) = (f (g x)))))) f)
T * / ! ! c= co b0 b1 b2 * b0 * b1 b2 f0
+ |- ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))
T c= cIN f0 * part cGSPEC / * f1 * part cSETSPEC b0 * f1 / / c/\ b0 c= f0 b1
- |- (F = (~ T))
T c= cF c~ cT
+ (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x)))))) |- (((GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))))) = (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY)))) = (((orbit_map f) x) = (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY)))))
T c==> c= * * part corbit_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 c= c= * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 * * part cINSERT f1 * * part cINSERT * f0 f1 * * part cINSERT * f0 * f0 f1 part cEMPTY c= * * part corbit_map f0 f1 * * part cINSERT f1 * * part cINSERT * f0 f1 * * part cINSERT * f0 * f0 f1 part cEMPTY
+ |- ((((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I (f x)) = x) \/ (((I (f x)) = (f x)) \/ ((I (f x)) = (f (f x)))))) = (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I (f x)) = x) \/ (((I (f x)) = (f x)) \/ (((I o f) x) = (f (f x)))))))
T c= c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI * f0 f1 f1 c\/ c= cI * f0 f1 * f0 f1 c= cI * f0 f1 * f0 * f0 f1 c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI * f0 f1 f1 c\/ c= cI * f0 f1 * f0 f1 c= co part cI f0 f1 * f0 * f0 f1
- (_8374861 = _8374863), (_8374862 = _8374864) |- ((_8374862 = _8374864) /\ (((permutes _8374863) _8374864) \/ (~ ((permutes _8374861) _8374862))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ cpermutes f1 f3 c~ cpermutes f0 f2
- (_8374861 = _8374863) |- ((_8374861 = _8374863) /\ ((~ (_8374862 = _8374864)) \/ (((permutes _8374863) _8374864) \/ (~ ((permutes _8374861) _8374862)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cpermutes f1 f3 c~ cpermutes f0 f2
+ |- ((((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (SUC (SUC k)))) x) = x) \/ (((((POWER f) (SUC (SUC (SUC k)))) x) = (f x)) \/ ((((POWER f) (SUC (SUC (SUC k)))) x) = (f (f x)))))) = T)
T c= c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 cSUC cSUC cSUC f0 f2 f2 c\/ c= cPOWER f1 cSUC cSUC cSUC f0 f2 * f1 f2 c= cPOWER f1 cSUC cSUC cSUC f0 f2 * f1 * f1 f2 cT
+ |- ((!x'. ((?k. (((\p. (\t. (p /\ (x' = t)))) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))) = ((x' = x) \/ ((x' = (f x)) \/ ((x' = (f (f x))) \/ (x' IN EMPTY)))))) = (!x'. ((?k. (((\p. (\t. (p /\ (x' = t)))) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))) = ((x' = x) \/ ((x' = (f x)) \/ (x' IN ((f (f x)) INSERT EMPTY)))))))
T c= ! c= c? / * * / / c/\ b2 c= b0 b3 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 c\/ c= b0 f1 c\/ c= b0 * f0 f1 c\/ c= b0 * f0 * f0 f1 cIN b0 part cEMPTY ! c= c? / * * / / c/\ b2 c= b0 b3 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 c\/ c= b0 f1 c\/ c= b0 * f0 f1 cIN b0 * * part cINSERT * f0 * f0 f1 part cEMPTY
- |- ((!H. ((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> (~ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x))))))))) = T)
T c= ! c==> c~ c==> c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI c/\ c= * * part corbit_map * part cface_map b0 f0 * * part corbit_map * part cinverse * part cface_map b0 f0 c/\ c= * * part corbit_map * part cnode_map b0 f0 * * part corbit_map * part cinverse * part cnode_map b0 f0 c= * * part corbit_map * part cedge_map b0 f0 * * part corbit_map * part cinverse * part cedge_map b0 f0 c~ ! ! ! c==> c/\ cFINITE b1 cpermutes b2 b1 c= * * part corbit_map * part cinverse b2 b3 * * part corbit_map b2 b3 cT
+ |- ((T \/ t) = T)
T c= c\/ cT f0 cT
- |- ((!f. (!g. (!x. (((f o g) x) = (f (g x)))))) /\ (!x. ((I x) = x)))
T c/\ ! ! ! c= co b0 b1 b2 * b0 * b1 b2 ! c= cI b0 b0
+ |- ((((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((f x) = x) \/ (((f x) = (f x)) \/ ((I (f x)) = (f (f x)))))) = (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((f x) = x) \/ (((I (f x)) = (f x)) \/ ((I (f x)) = (f (f x)))))))
T c= c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= * f0 f1 f1 c\/ c= * f0 f1 * f0 f1 c= cI * f0 f1 * f0 * f0 f1 c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= * f0 f1 f1 c\/ c= cI * f0 f1 * f0 f1 c= cI * f0 f1 * f0 * f0 f1
+ |- ((((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((x = x) \/ ((x = (f x)) \/ (x = (f (f x)))))) = (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((x = x) \/ ((x = (f x)) \/ ((I x) = (f (f x)))))))
T c= c==> c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= f0 f0 c\/ c= f0 * f1 f0 c= f0 * f1 * f1 f0 c==> c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= f0 f0 c\/ c= f0 * f1 f0 c= cI f0 * f1 * f1 f0
- |- ((!p. (P \/ (Q p))) = (P \/ (!p. (Q p))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
+ (y = (f x)) |- ((?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f x) = (((POWER f) k) x)))) = (?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x)))))
T c==> c= f0 * f1 f2 c= c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= * f1 f2 cPOWER f1 b0 f2 c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 b0 f2
+ (((real_ge (real_of_int _8374884)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((real_le (real_of_num m)) (real_neg (real_of_num n))) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))
T c= creal_le creal_of_num f0 creal_neg creal_of_num f1 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((\s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) s)
T * / c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 f2
+ |- ((!x'. ((?k. (((\p. (\t. (p /\ (x' = t)))) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))) = ((x' = x) \/ ((x' = (f x)) \/ (x' IN ((f (f x)) INSERT EMPTY)))))) = (!x'. ((?k. (((\p. (\t. (p /\ (x' = t)))) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))) = ((x' = x) \/ (x' IN ((f x) INSERT ((f (f x)) INSERT EMPTY)))))))
T c= ! c= c? / * * / / c/\ b2 c= b0 b3 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 c\/ c= b0 f1 c\/ c= b0 * f0 f1 cIN b0 * * part cINSERT * f0 * f0 f1 part cEMPTY ! c= c? / * * / / c/\ b2 c= b0 b3 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 c\/ c= b0 f1 cIN b0 * * part cINSERT * f0 f1 * * part cINSERT * f0 * f0 f1 part cEMPTY
- (y = (((POWER f) k) x)), (k < (NUMERAL (BIT1 (BIT1 _0)))) |- ((y = (((POWER f) k) x)) /\ ((y = x) \/ ((y = (f x)) \/ (y = (f (f x))))))
T c==> c= f0 cPOWER f1 f2 f3 c==> c< f2 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f0 cPOWER f1 f2 f3 c\/ c= f0 f3 c\/ c= f0 * f1 f3 c= f0 * f1 * f1 f3
- (~ (((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x))) |- ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) ==> F)
T c==> c~ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c==> c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 cF
- |- (((!x. (((\k1. (k = k1)) x) ==> (?k1. (k = k1)))) ==> ((?k1. (k = k1)) ==> (?k1. (k = k1)))) = ((?k1. (k = k1)) ==> (?k1. (k = k1))))
T c= c==> ! c==> * / c= f0 b1 b0 c? / c= f0 b1 c==> c? / c= f0 b0 c? / c= f0 b0 c==> c? / c= f0 b0 c? / c= f0 b0
+ |- (((((POWER f) (SUC (SUC (NUMERAL (BIT1 _0))))) x) = x) = ((((POWER f) (SUC (NUMERAL (BIT0 (BIT1 _0))))) x) = x))
T c= c= cPOWER f0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 f1 c= cPOWER f0 cSUC cNUMERAL cBIT0 cBIT1 c_0 f1 f1
+ |- (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) (f (f (f x)))) = x) \/ (((((POWER f) k) (f (f (f x)))) = (f x)) \/ ((((POWER f) k) (f (f (f x)))) = (f (f x))))))
T c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 f2 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 * f1 f2 c= cPOWER f1 f0 * f1 * f1 * f1 f2 * f1 * f1 f2
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_8374861 = _8374863) |- ((_8374862 = _8374864) ==> (((permutes _8374863) _8374864) \/ (~ ((permutes _8374861) _8374862))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cpermutes f1 f3 c~ cpermutes f0 f2
+ |- ((!k. (((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x))) ==> ((y = x) \/ ((y = (f x)) \/ (y = (f (f x))))))) = ((?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x)))) ==> ((y = x) \/ ((y = (f x)) \/ (y = (f (f x)))))))
T c= ! c==> c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 b0 f2 c\/ c= f0 f2 c\/ c= f0 * f1 f2 c= f0 * f1 * f1 f2 c==> c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 b0 f2 c\/ c= f0 f2 c\/ c= f0 * f1 f2 c= f0 * f1 * f1 f2
- ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) |- (((permutes (face_map H)) (dart H)) = T)
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= cpermutes * part cface_map f0 * part cdart f0 cT
+ |- (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (NUMERAL _0)) o f) x) = x) \/ ((((((POWER f) (NUMERAL _0)) o f) x) = (f x)) \/ (((((POWER f) (NUMERAL _0)) o f) x) = (f (f x))))))
T c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 f1 c\/ c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 * f0 f1 c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 * f0 * f0 f1
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((~ (~ F)) ==> F) ==> (~ F)) = (~ F))
T c= c==> c==> c~ c~ cF cF c~ cF c~ cF
+ |- ((((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) k) o f) o f) (f x)) = x) \/ ((((((((POWER f) k) o f) o f) o f) x) = (f x)) \/ (((((((POWER f) k) o f) o f) o f) x) = (f (f x)))))) = (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((((POWER f) k) o f) o f) o f) x) = x) \/ ((((((((POWER f) k) o f) o f) o f) x) = (f x)) \/ (((((((POWER f) k) o f) o f) o f) x) = (f (f x)))))))
T c= c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 f2 c\/ c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 * f1 f2 c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 * f1 * f1 f2 c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 f2 c\/ c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 * f1 f2 c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 * f1 * f1 f2
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ (((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x))) ==> (((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c~ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ F) ==> F)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c~ cF cF
+ |- (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((x = x) \/ ((x = (f x)) \/ (x = (f (f x))))))
T c==> c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= f0 f0 c\/ c= f0 * f1 f0 c= f0 * f1 * f1 f0
+ |- ((((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (SUC (SUC k))) o f) x) = x) \/ ((((((POWER f) (SUC (SUC k))) o f) x) = (f x)) \/ ((((POWER f) (SUC (SUC (SUC k)))) x) = (f (f x)))))) = (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (SUC (SUC k))) o f) x) = x) \/ (((((POWER f) (SUC (SUC (SUC k)))) x) = (f x)) \/ ((((POWER f) (SUC (SUC (SUC k)))) x) = (f (f x)))))))
T c= c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 f2 c\/ c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 * f1 f2 c= cPOWER f1 cSUC cSUC cSUC f0 f2 * f1 * f1 f2 c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 f2 c\/ c= cPOWER f1 cSUC cSUC cSUC f0 f2 * f1 f2 c= cPOWER f1 cSUC cSUC cSUC f0 f2 * f1 * f1 f2
+ |- ((((I o f) (f (f x))) = x) = ((((I o f) o f) (f x)) = x))
T c= c= co part cI f0 * f0 * f0 f1 f1 c= co * * part co part cI f0 f0 * f0 f1 f1
+ |- (((((POWER f) (SUC (SUC (SUC (NUMERAL _0))))) x) = x) = ((((POWER f) (SUC (SUC (NUMERAL (BIT1 _0))))) x) = x))
T c= c= cPOWER f0 cSUC cSUC cSUC cNUMERAL c_0 f1 f1 c= cPOWER f0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 f1
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ (((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x))) ==> F)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c~ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 cF
+ |- (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((x = x) \/ ((x = (f x)) \/ ((I x) = (f (f x))))))
T c==> c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= f0 f0 c\/ c= f0 * f1 f0 c= cI f0 * f1 * f1 f0
+ |- (!k1. (((\k1. (k = k1)) k1) ==> ((k < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x))))))))
T c==> * / c= f0 b0 f1 c==> c< f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f2 f0 f3 f3 c\/ c= cPOWER f2 f0 f3 * f2 f3 c= cPOWER f2 f0 f3 * f2 * f2 f3
+ |- (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((I o f) x) = x) \/ ((((I o f) x) = (f x)) \/ (((((POWER f) (NUMERAL _0)) o f) x) = (f (f x))))))
T c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co part cI f0 f1 f1 c\/ c= co part cI f0 f1 * f0 f1 c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 * f0 * f0 f1
- |- ((((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F)) ==> ((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F))) = ((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F)))
T c= c==> c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 cF c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 cF c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 cF
- (((real_ge (real_of_int _8374884)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _8374884)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _8374884))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _8374884))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((((FINITE (dart H)) /\ ((permutes (face_map H)) (dart H))) ==> (((orbit_map (inverse (face_map H))) _8374770) = ((orbit_map (face_map H)) _8374770))) = (((orbit_map (inverse (face_map H))) _8374770) = ((orbit_map (face_map H)) _8374770)))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= c==> c/\ cFINITE * part cdart f0 cpermutes * part cface_map f0 * part cdart f0 c= * * part corbit_map * part cinverse * part cface_map f0 f2 * * part corbit_map * part cface_map f0 f2 c= * * part corbit_map * part cinverse * part cface_map f0 f2 * * part corbit_map * part cface_map f0 f2
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((((((orbit_map (inverse (edge_map H))) x) = ((orbit_map (edge_map H)) x)) /\ (((orbit_map (inverse (edge_map H))) x) = ((orbit_map (inverse (edge_map H))) x))) ==> (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))) = (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= c==> c/\ c= * * part corbit_map * part cinverse * part cedge_map f0 f1 * * part corbit_map * part cedge_map f0 f1 c= * * part corbit_map * part cinverse * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1
+ |- (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) /\ (x = (((POWER f) (NUMERAL _0)) x)))
T c/\ c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 cNUMERAL c_0 f0
+ |- ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (SUC (NUMERAL _0))) o f) x) = x) \/ ((((((POWER f) (SUC (NUMERAL _0))) o f) x) = (f x)) \/ ((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = (f (f x)))))) = (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (SUC (NUMERAL _0))) o f) x) = x) \/ (((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = (f x)) \/ ((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = (f (f x)))))))
T c= c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 f1 c\/ c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 * f0 f1 c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 * f0 * f0 f1 c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 f1 c\/ c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 * f0 f1 c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 * f0 * f0 f1
- (((real_ge (real_of_int _8374884)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))) |- (~ ((((POWER f) k) (f (f (f x)))) = (f (f x))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))) /\ F)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c~ c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 cF
+ |- ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) (NUMERAL _0)) o f) o f) x) = x) \/ (((((((POWER f) (NUMERAL _0)) o f) o f) x) = (f x)) \/ (((((POWER f) (SUC (NUMERAL _0))) o f) x) = (f (f x)))))) = (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) (NUMERAL _0)) o f) o f) x) = x) \/ ((((((POWER f) (SUC (NUMERAL _0))) o f) x) = (f x)) \/ (((((POWER f) (SUC (NUMERAL _0))) o f) x) = (f (f x)))))))
T c= c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 f1 c\/ c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 * f0 f1 c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 * f0 * f0 f1 c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 f1 c\/ c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 * f0 f1 c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 * f0 * f0 f1
+ ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x))), (k < (NUMERAL (BIT1 (BIT1 _0)))) |- ((y = x) \/ ((y = (f x)) \/ (y = (f (f x)))))
T c==> c/\ c< f0 cNUMERAL cBIT1 cBIT1 c_0 c= f1 cPOWER f2 f0 f3 c==> c< f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= f1 f3 c\/ c= f1 * f2 f3 c= f1 * f2 * f2 f3
- |- (T = (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) (f (f (f x)))) = x) \/ (((((POWER f) k) (f (f (f x)))) = (f x)) \/ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))
T c= cT c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 f2 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 * f1 f2 c= cPOWER f1 f0 * f1 * f1 * f1 f2 * f1 * f1 f2
+ |- ((((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f x) = (((POWER f) (SUC (NUMERAL _0))) x))) = ((\k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f x) = (((POWER f) k) x)))) (SUC (NUMERAL _0))))
T c= c/\ c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 f1 cPOWER f0 cSUC cNUMERAL c_0 f1 * / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 f1 cPOWER f0 b0 f1 cSUC cNUMERAL c_0
- |- ((k = k1) ==> (?k1. (k = k1)))
T c==> c= f0 f1 c? / c= f0 b0
- |- (((edge H) x) = ((orbit_map (edge_map H)) x))
T c= * * part cedge f0 f1 * * part corbit_map * part cedge_map f0 f1
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((permutes (face_map H)) (dart H))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 cpermutes * part cface_map f0 * part cdart f0
+ |- ((((\k1. (k = k1)) k1) ==> ((k < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x))))))) = T)
T c= c==> * / c= f0 b0 f1 c==> c< f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f2 f0 f3 f3 c\/ c= cPOWER f2 f0 f3 * f2 f3 c= cPOWER f2 f0 f3 * f2 * f2 f3 cT
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((orbit_map (inverse (face_map H))) x) = ((orbit_map (face_map H)) x))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ (((orbit_map (inverse (face_map H))) x) = ((orbit_map (face_map H)) x))) /\ (((orbit_map (inverse (face_map H))) x) = ((orbit_map (face_map H)) x)))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c= * * part corbit_map * part cinverse * part cface_map f0 f1 * * part corbit_map * part cface_map f0 f1 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c~ c= * * part corbit_map * part cinverse * part cface_map f0 f1 * * part corbit_map * part cface_map f0 f1 c= * * part corbit_map * part cinverse * part cface_map f0 f1 * * part corbit_map * part cface_map f0 f1
+ ((f (f (f x))) = x) |- (((I o f) (f (f x))) = x)
T c==> c= * f0 * f0 * f0 f1 f1 c= co part cI f0 * f0 * f0 f1 f1
+ |- (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (SUC (NUMERAL _0))) o f) x) = x) \/ ((((((POWER f) (SUC (NUMERAL _0))) o f) x) = (f x)) \/ ((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = (f (f x))))))
T c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 f1 c\/ c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 * f0 f1 c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 * f0 * f0 f1
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))) ==> (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c~ c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1
+ |- ((!x'. ((?k. (((\p. (\t. (p /\ (x' = t)))) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))) = (x' IN (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY)))))) = (!x'. ((x' IN (GSPEC (\v. (?k. (((SETSPEC v) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x)))))) = (x' IN (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY)))))))
T c= ! c= c? / * * / / c/\ b2 c= b0 b3 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 cIN b0 * * part cINSERT f1 * * part cINSERT * f0 f1 * * part cINSERT * f0 * f0 f1 part cEMPTY ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 c< b2 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b2 f1 cIN b0 * * part cINSERT f1 * * part cINSERT * f0 f1 * * part cINSERT * f0 * f0 f1 part cEMPTY
- |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c= c* cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- ((~ T) = F)
T c= c~ cT cF
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- (((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ |- ((((orbit_map f) x) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x)))))) ==> (((orbit_map f) x) = (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY)))))
T c==> c= * * part corbit_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 c= * * part corbit_map f0 f1 * * part cINSERT f1 * * part cINSERT * f0 f1 * * part cINSERT * f0 * f0 f1 part cEMPTY
+ (y = (f x)) |- ((y = (f x)) /\ (?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x)))))
T c==> c= f0 * f1 f2 c/\ c= f0 * f1 f2 c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 b0 f2
+ |- (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I x) = x) \/ (((I x) = (f x)) \/ ((I x) = (f (f x))))))
T c==> c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI f0 f0 c\/ c= cI f0 * f1 f0 c= cI f0 * f1 * f1 f0
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))), ((~ (((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x))) \/ (~ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))) |- (((~ (((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x))) \/ (~ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))) /\ F)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c\/ c~ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c~ c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c\/ c~ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c~ c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 cF
+ |- (((((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (NUMERAL _0))) x) = x) \/ (((((POWER f) (SUC (NUMERAL _0))) x) = (f x)) \/ ((((POWER f) (SUC (NUMERAL _0))) x) = (f (f x)))))) /\ (!n. (((SUC (SUC n)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (SUC n))) x) = x) \/ (((((POWER f) (SUC (SUC n))) x) = (f x)) \/ ((((POWER f) (SUC (SUC n))) x) = (f (f x)))))))) ==> (!n. (((SUC n) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC n)) x) = x) \/ (((((POWER f) (SUC n)) x) = (f x)) \/ ((((POWER f) (SUC n)) x) = (f (f x))))))))
T c==> c/\ c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC cNUMERAL c_0 f1 f1 c\/ c= cPOWER f0 cSUC cNUMERAL c_0 f1 * f0 f1 c= cPOWER f0 cSUC cNUMERAL c_0 f1 * f0 * f0 f1 ! c==> c< cSUC cSUC b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC cSUC b0 f1 f1 c\/ c= cPOWER f0 cSUC cSUC b0 f1 * f0 f1 c= cPOWER f0 cSUC cSUC b0 f1 * f0 * f0 f1 ! c==> c< cSUC b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC b0 f1 f1 c\/ c= cPOWER f0 cSUC b0 f1 * f0 f1 c= cPOWER f0 cSUC b0 f1 * f0 * f0 f1
- ((!x. ((P x) ==> Q)) = ((?x. (P x)) ==> Q)) |- (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q)))
T c==> c= ! c==> * f0 b0 f1 c==> c? / * f0 b0 f1 c= c==> c? / * f0 b0 f1 ! c==> * f0 b0 f1
+ |- ((((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) (SUC k)) o f) o f) x) = x) \/ (((((((POWER f) (SUC k)) o f) o f) x) = (f x)) \/ (((((POWER f) (SUC (SUC k))) o f) x) = (f (f x)))))) = (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) (SUC k)) o f) o f) x) = x) \/ ((((((POWER f) (SUC (SUC k))) o f) x) = (f x)) \/ (((((POWER f) (SUC (SUC k))) o f) x) = (f (f x)))))))
T c= c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 f2 c\/ c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 * f1 f2 c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 * f1 * f1 f2 c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 f2 c\/ c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 * f1 f2 c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 * f1 * f1 f2
- (~ (m = (NUMERAL _0))) |- ((~ (m = (NUMERAL _0))) /\ (((((POWER f1) m) x1) = x1) ==> (((orbit_map f1) x1) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < m)) (((POWER f1) k) x1))))))))
T c==> c~ c= f0 cNUMERAL c_0 c/\ c~ c= f0 cNUMERAL c_0 c==> c= cPOWER f1 f0 f2 f2 c= * * part corbit_map f1 f2 * part cGSPEC / c? / cSETSPEC b0 c< b1 f0 cPOWER f1 b1 f2
- ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) |- ((permutes (edge_map H)) (dart H))
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI cpermutes * part cedge_map f0 * part cdart f0
- ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) |- (((edge_map H) o ((node_map H) o (face_map H))) = I)
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
+ |- ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (SUC (NUMERAL _0))) o f) x) = x) \/ (((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = (f x)) \/ ((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = (f (f x)))))) = (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = x) \/ (((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = (f x)) \/ ((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = (f (f x)))))))
T c= c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 f1 c\/ c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 * f0 f1 c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 * f0 * f0 f1 c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 f1 c\/ c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 * f0 f1 c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 * f0 * f0 f1
+ |- ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = ((NUMERAL (BIT1 (BIT1 _0))) + (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c+ cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- (((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) = ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> (((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))))) = (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> q')))) = ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> (((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))))) = (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> q'))))
T c= c==> c= c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 f2 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI f2 c==> c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 f2 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI f2
+ ((f (f (f x))) = x) |- ((I (f (f (f x)))) = x)
T c==> c= * f0 * f0 * f0 f1 f1 c= cI * f0 * f0 * f0 f1 f1
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))) |- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))
T c==> c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0 c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- (((permutes (face_map H)) (dart H)) = ((FINITE (dart H)) /\ ((permutes (face_map H)) (dart H))))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= cpermutes * part cface_map f0 * part cdart f0 c/\ cFINITE * part cdart f0 cpermutes * part cface_map f0 * part cdart f0
+ |- (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I (f x)) = x) \/ ((((I o f) x) = (f x)) \/ (((I o f) x) = (f (f x))))))
T c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI * f0 f1 f1 c\/ c= co part cI f0 f1 * f0 f1 c= co part cI f0 f1 * f0 * f0 f1
+ |- ((((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((((POWER f) k) o f) o f) o f) x) = x) \/ (((((((POWER f) (SUC k)) o f) o f) x) = (f x)) \/ ((((((POWER f) (SUC k)) o f) o f) x) = (f (f x)))))) = (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) (SUC k)) o f) o f) x) = x) \/ (((((((POWER f) (SUC k)) o f) o f) x) = (f x)) \/ ((((((POWER f) (SUC k)) o f) o f) x) = (f (f x)))))))
T c= c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 f2 c\/ c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 * f1 f2 c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 * f1 * f1 f2 c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 f2 c\/ c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 * f1 f2 c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 * f1 * f1 f2
+ |- (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f x) = ((((POWER f) (NUMERAL _0)) o f) x)))
T c/\ c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 f1 co * * part cPOWER f0 cNUMERAL c_0 f0 f1
+ |- (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) /\ (x = (I x)))
T c/\ c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cI f0
- |- ((\t. ((s = t) = (!x. ((x IN s) = (x IN t))))) t)
T * / c= c= f0 b0 ! c= cIN b1 f0 cIN b1 b0 f1
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- (((~ (((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x))) \/ (~ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))) ==> F)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c\/ c~ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c~ c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 cF
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
+ |- ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I (f (f x))) = x) \/ (((I (f (f x))) = (f x)) \/ (((I o f) (f x)) = (f (f x)))))) = (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I (f (f x))) = x) \/ ((((I o f) (f x)) = (f x)) \/ (((I o f) (f x)) = (f (f x)))))))
T c= c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI * f0 * f0 f1 f1 c\/ c= cI * f0 * f0 f1 * f0 f1 c= co part cI f0 * f0 f1 * f0 * f0 f1 c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI * f0 * f0 f1 f1 c\/ c= co part cI f0 * f0 f1 * f0 f1 c= co part cI f0 * f0 f1 * f0 * f0 f1
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- (((orbit_map (inverse (face_map H))) _8374770) = ((orbit_map (face_map H)) _8374770))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= * * part corbit_map * part cinverse * part cface_map f0 f2 * * part corbit_map * part cface_map f0 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((_8374876 = _8374878) ==> ((~ (_8374875 = _8374877)) \/ (((orbit_map _8374875) _8374876) = ((orbit_map _8374877) _8374878))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part corbit_map f2 f0 * * part corbit_map f3 f1
+ ((f (f (f x))) = x) |- ((((POWER f) (SUC (SUC (SUC (NUMERAL _0))))) x) = x)
T c==> c= * f0 * f0 * f0 f1 f1 c= cPOWER f0 cSUC cSUC cSUC cNUMERAL c_0 f1 f1
- (!P. (((P (NUMERAL _0)) /\ (!n. (P (SUC n)))) ==> (!m. (P m)))), ((P (NUMERAL _0)) /\ (!n. (P (SUC n)))) |- (!m. (P m))
T c==> ! c==> c/\ * b0 cNUMERAL c_0 ! * b0 cSUC b1 ! * b0 b1 c==> c/\ * f0 cNUMERAL c_0 ! * f0 cSUC b0 ! * f0 b0
+ |- (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((I o f) (f x)) = x) \/ (((((I o f) o f) x) = (f x)) \/ ((((I o f) o f) x) = (f (f x))))))
T c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co part cI f0 * f0 f1 f1 c\/ c= co * * part co part cI f0 f0 f1 * f0 f1 c= co * * part co part cI f0 f0 f1 * f0 * f0 f1
+ |- ((((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f x) = ((I o f) x))) = (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f x) = ((((POWER f) (NUMERAL _0)) o f) x))))
T c= c/\ c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 f1 co part cI f0 f1 c/\ c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 f1 co * * part cPOWER f0 cNUMERAL c_0 f0 f1
+ (k = k1) |- (((k1 < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x)))))) = ((k < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x)))))))
T c==> c= f0 f1 c= c==> c< f1 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f2 f0 f3 f3 c\/ c= cPOWER f2 f0 f3 * f2 f3 c= cPOWER f2 f0 f3 * f2 * f2 f3 c==> c< f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f2 f0 f3 f3 c\/ c= cPOWER f2 f0 f3 * f2 f3 c= cPOWER f2 f0 f3 * f2 * f2 f3
+ |- ((((y = x) \/ ((y = (f x)) \/ (y = (f (f x))))) ==> (?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x))))) = (((?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x)))) ==> ((y = x) \/ ((y = (f x)) \/ (y = (f (f x)))))) /\ (((y = x) \/ ((y = (f x)) \/ (y = (f (f x))))) ==> (?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x)))))))
T c= c==> c\/ c= f0 f1 c\/ c= f0 * f2 f1 c= f0 * f2 * f2 f1 c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f2 b0 f1 c/\ c==> c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f2 b0 f1 c\/ c= f0 f1 c\/ c= f0 * f2 f1 c= f0 * f2 * f2 f1 c==> c\/ c= f0 f1 c\/ c= f0 * f2 f1 c= f0 * f2 * f2 f1 c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f2 b0 f1
+ |- ((x IN EMPTY) = F)
T c= cIN f0 part cEMPTY cF
- |- ((~ (_8374876 = _8374878)) \/ ((~ (_8374875 = _8374877)) \/ (((orbit_map _8374875) _8374876) = ((orbit_map _8374877) _8374878))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part corbit_map f2 f0 * * part corbit_map f3 f1
- |- ((_8374861 = _8374863) ==> ((~ (_8374862 = _8374864)) \/ (((permutes _8374863) _8374864) \/ (~ ((permutes _8374861) _8374862)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cpermutes f1 f3 c~ cpermutes f0 f2
+ |- (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f x) = (I (f x))))
T c/\ c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 f1 cI * f0 f1
+ |- ((((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) /\ (x = (I x))) = (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) /\ (x = (((POWER f) (NUMERAL _0)) x))))
T c= c/\ c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cI f0 c/\ c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 cNUMERAL c_0 f0
+ |- ((!x'. ((?k. (((\p. (\t. (p /\ (x' = t)))) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))) = ((x' = x) \/ ((x' = (f x)) \/ ((x' = (f (f x))) \/ F))))) = (!x'. ((?k. (((\p. (\t. (p /\ (x' = t)))) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))) = ((x' = x) \/ ((x' = (f x)) \/ ((x' = (f (f x))) \/ (x' IN EMPTY)))))))
T c= ! c= c? / * * / / c/\ b2 c= b0 b3 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 c\/ c= b0 f1 c\/ c= b0 * f0 f1 c\/ c= b0 * f0 * f0 f1 cF ! c= c? / * * / / c/\ b2 c= b0 b3 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 c\/ c= b0 f1 c\/ c= b0 * f0 f1 c\/ c= b0 * f0 * f0 f1 cIN b0 part cEMPTY
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((((I o f) o f) o f) x) = x) = (((((((POWER f) (NUMERAL _0)) o f) o f) o f) x) = x))
T c= c= co * * part co * * part co part cI f0 f0 f0 f1 f1 c= co * * part co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f0 f1 f1
+ |- ((A ==> (B ==> C)) ==> ((A /\ B) ==> C))
T c==> c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2
+ (y = (((POWER f) k) x)), (k < (NUMERAL (BIT1 (BIT1 _0)))) |- (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ (y = (f (f x)))))
T c==> c= f0 cPOWER f1 f2 f3 c==> c< f2 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f2 f3 f3 c\/ c= cPOWER f1 f2 f3 * f1 f3 c= f0 * f1 * f1 f3
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- (((edge_map H) o ((node_map H) o (face_map H))) = I)
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!q'. ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) = p') ==> ((p' ==> (((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))))) = (p' ==> q'))))) ==> ((\q'. ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) = p') ==> ((p' ==> (((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))))) = (p' ==> q'))))) q')) = ((\q'. ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) = p') ==> ((p' ==> (((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI f1 c==> c==> f1 c= c/\ c= * * part corbit_map * part cface_map f0 f2 * * part corbit_map * part cinverse * part cface_map f0 f2 c/\ c= * * part corbit_map * part cnode_map f0 f2 * * part corbit_map * part cinverse * part cnode_map f0 f2 c= * * part corbit_map * part cedge_map f0 f2 * * part corbit_map * part cinverse * part cedge_map f0 f2 b0 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f2 * * part corbit_map * part cinverse * part cface_map f0 f2 c/\ c= * * part corbit_map * part cnode_map f0 f2 * * part corbit_map * part cinverse * part cnode_map f0 f2 c= * * part corbit_map * part cedge_map f0 f2 * * part corbit_map * part cinverse * part cedge_map f0 f2 c==> f1 b0 * / c==> c= c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI f1 c==> c==> f1 c= c/\ c= * * part corbit_map * part cface_map f0 f2 * * part corbit_map * part cinverse * part cface_map f0 f2 c/\ c= * * part corbit_map * part cnode_map f0 f2 * * part corbit_map * part cinverse * part cnode_map f0 f2 c= * * part corbit_map * part cedge_map f0 f2 * * part corbit_map * part cinverse * part cedge_map f0 f2 b0 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f2 * * part corbit_map * part cinverse * part cface_map f0 f2 c/\ c= * * part corbit_map * part cnode_map f0 f2 * * part corbit_map * part cinverse * part cnode_map f0 f2 c= * * part corbit_map * part cedge_map f0 f2 * * part corbit_map * part cinverse * part cedge_map f0 f2 c==> f1 b0 f3 * / c==> c= c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI f1 c==> c==> f1 c= c/\ c= * * part corbit_map * part cface_map f0 f2 * * part corbit_map * part cinverse * part cface_map f0 f2 c/\ c= * * part corbit_map * part cnode_map f0 f2 * * part corbit_map * part cinverse * part cnode_map f0 f2 c= * * part corbit_map * part cedge_map f0 f2 * * part corbit_map * part cinverse * part cedge_map f0 f2 b0 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f2 * * part corbit_map * part cinverse * part cface_map f0 f2 c/\ c= * * part corbit_map * part cnode_map f0 f2 * * part corbit_map * part cinverse * part cnode_map f0 f2 c= * * part corbit_map * part cedge_map f0 f2 * * part corbit_map * part cinverse * part cedge_map f0 f2 c==> f1 b0 f3
- |- ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x))))) = ((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x)))))
T c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part cface f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part cnode f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part cedge f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c= * * part cface f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part cnode f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part cedge f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1
+ |- (((NUMERAL (BIT1 (BIT1 _0))) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c= c+ cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) /\ F)
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 cF
+ |- ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = x) \/ (((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = (f x)) \/ ((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = (f (f x)))))) /\ (!n. (((SUC (SUC (SUC n))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (SUC (SUC n)))) x) = x) \/ (((((POWER f) (SUC (SUC (SUC n)))) x) = (f x)) \/ ((((POWER f) (SUC (SUC (SUC n)))) x) = (f (f x))))))))
T c/\ c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 f1 c\/ c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 * f0 f1 c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 * f0 * f0 f1 ! c==> c< cSUC cSUC cSUC b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC cSUC cSUC b0 f1 f1 c\/ c= cPOWER f0 cSUC cSUC cSUC b0 f1 * f0 f1 c= cPOWER f0 cSUC cSUC cSUC b0 f1 * f0 * f0 f1
+ |- (T = (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) /\ (x = x)))
T c= cT c/\ c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 f0
- (!P. (((P (NUMERAL _0)) /\ (!n. (P (SUC n)))) ==> (!m. (P m)))), ((P (NUMERAL _0)) /\ (!n. (P (SUC n)))) |- (((P (NUMERAL _0)) /\ (!n. (P (SUC n)))) /\ (!m. (P m)))
T c==> ! c==> c/\ * b0 cNUMERAL c_0 ! * b0 cSUC b1 ! * b0 b1 c==> c/\ * f0 cNUMERAL c_0 ! * f0 cSUC b0 c/\ c/\ * f0 cNUMERAL c_0 ! * f0 cSUC b0 ! * f0 b0
+ |- (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (NUMERAL _0)) o f) x) = x) \/ (((((POWER f) (SUC (NUMERAL _0))) x) = (f x)) \/ ((((POWER f) (SUC (NUMERAL _0))) x) = (f (f x))))))
T c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 f1 c\/ c= cPOWER f0 cSUC cNUMERAL c_0 f1 * f0 f1 c= cPOWER f0 cSUC cNUMERAL c_0 f1 * f0 * f0 f1
- |- (((!x. (((edge H) x) = ((orbit_map (edge_map H)) x))) ==> ((\x. (((edge H) x) = ((orbit_map (edge_map H)) x))) x)) = ((\x. (((edge H) x) = ((orbit_map (edge_map H)) x))) x))
T c= c==> ! c= * * part cedge f0 b0 * * part corbit_map * part cedge_map f0 b0 * / c= * * part cedge f0 b0 * * part corbit_map * part cedge_map f0 b0 f1 * / c= * * part cedge f0 b0 * * part corbit_map * part cedge_map f0 b0 f1
+ |- (((y = (f x)) \/ (y = (f (f x)))) ==> (?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x)))))
T c==> c\/ c= f0 * f1 f2 c= f0 * f1 * f1 f2 c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 b0 f2
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((((orbit_map (inverse (edge_map H))) x) = ((orbit_map (edge_map H)) x)) /\ (((orbit_map (inverse (edge_map H))) x) = ((orbit_map (inverse (edge_map H))) x)))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c= * * part corbit_map * part cinverse * part cedge_map f0 f1 * * part corbit_map * part cedge_map f0 f1 c= * * part corbit_map * part cinverse * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1
+ |- ((~ F) = T)
T c= c~ cF cT
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
+ |- ((((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (NUMERAL _0)) x) = x) \/ (((((POWER f) (NUMERAL _0)) x) = (f x)) \/ ((((POWER f) (NUMERAL _0)) x) = (f (f x)))))) /\ (!n. (((SUC n) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC n)) x) = x) \/ (((((POWER f) (SUC n)) x) = (f x)) \/ ((((POWER f) (SUC n)) x) = (f (f x))))))))
T c/\ c==> c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cNUMERAL c_0 f1 f1 c\/ c= cPOWER f0 cNUMERAL c_0 f1 * f0 f1 c= cPOWER f0 cNUMERAL c_0 f1 * f0 * f0 f1 ! c==> c< cSUC b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC b0 f1 f1 c\/ c= cPOWER f0 cSUC b0 f1 * f0 f1 c= cPOWER f0 cSUC b0 f1 * f0 * f0 f1
+ |- (((?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x)))) = ((y = x) \/ ((y = (f x)) \/ (y = (f (f x)))))) = T)
T c= c= c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 b0 f2 c\/ c= f0 f2 c\/ c= f0 * f1 f2 c= f0 * f1 * f1 f2 cT
- ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) |- (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
- (k < (NUMERAL (BIT1 (BIT1 _0)))) |- ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((y = (((POWER f) k) x)) ==> ((y = x) \/ ((y = (f x)) \/ (y = (f (f x)))))))
T c==> c< f0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c< f0 cNUMERAL cBIT1 cBIT1 c_0 c==> c= f1 cPOWER f2 f0 f3 c\/ c= f1 f3 c\/ c= f1 * f2 f3 c= f1 * f2 * f2 f3
+ |- ((\k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f (f x)) = (((POWER f) k) x)))) (SUC (SUC (NUMERAL _0))))
T * / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 * f0 f1 cPOWER f0 b0 f1 cSUC cSUC cNUMERAL c_0
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- (FINITE (dart H))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 cFINITE * part cdart f0
- (k = k1) |- ((\k1. (k = k1)) k1)
T c==> c= f0 f1 * / c= f0 b0 f1
+ |- (?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (x = (((POWER f) k) x))))
T c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 b0 f0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- (((orbit_map (inverse (node_map H))) _8374773) = ((orbit_map (node_map H)) _8374773))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= * * part corbit_map * part cinverse * part cnode_map f0 f2 * * part corbit_map * part cnode_map f0 f2
- |- (((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F)) ==> ((~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) ==> F)))
T c==> c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 cF c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 cF
- |- ((!p. (P p)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
+ |- (!x'. ((?k. (((\p. (\t. (p /\ (x' = t)))) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))) = (x' IN (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY))))))
T c= c? / * * / / c/\ b1 c= f0 b2 c< b0 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f1 b0 f2 cIN f0 * * part cINSERT f2 * * part cINSERT * f1 f2 * * part cINSERT * f1 * f1 f2 part cEMPTY
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
+ |- (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (SUC (NUMERAL _0))) o f) x) = x) \/ ((((((POWER f) (SUC (NUMERAL _0))) o f) x) = (f x)) \/ (((((POWER f) (SUC (NUMERAL _0))) o f) x) = (f (f x))))))
T c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 f1 c\/ c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 * f0 f1 c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 * f0 * f0 f1
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((permutes (edge_map H)) (dart H))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 cpermutes * part cedge_map f0 * part cdart f0
+ (k = k1) |- ((k1 < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x))))))
T c==> c= f0 f1 c==> c< f1 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f2 f0 f3 f3 c\/ c= cPOWER f2 f0 f3 * f2 f3 c= cPOWER f2 f0 f3 * f2 * f2 f3
- |- ((~ (_8374865 = _8374866)) \/ ((face_map _8374865) = (face_map _8374866)))
T c\/ c~ c= f0 f1 c= * part cface_map f0 * part cface_map f1
+ |- (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) (SUC k)) o f) o f) x) = x) \/ (((((((POWER f) (SUC k)) o f) o f) x) = (f x)) \/ ((((((POWER f) (SUC k)) o f) o f) x) = (f (f x))))))
T c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 f2 c\/ c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 * f1 f2 c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 * f1 * f1 f2
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- ((P (NUMERAL _0)) /\ (!n. (P (SUC n)))) |- ((!P. (((P (NUMERAL _0)) /\ (!n. (P (SUC n)))) ==> (!m. (P m)))) ==> (!m. (P m)))
T c==> c/\ * f0 cNUMERAL c_0 ! * f0 cSUC b0 c==> ! c==> c/\ * b0 cNUMERAL c_0 ! * b0 cSUC b1 ! * b0 b1 ! * f0 b0
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((~ ((permutes (node_map H)) (dart H))) ==> ((permutes (node_map H)) (dart H)))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c~ cpermutes * part cnode_map f0 * part cdart f0 cpermutes * part cnode_map f0 * part cdart f0
+ |- ((((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((x = x) \/ (((I x) = (f x)) \/ ((I x) = (f (f x)))))) = (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I x) = x) \/ (((I x) = (f x)) \/ ((I x) = (f (f x)))))))
T c= c==> c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= f0 f0 c\/ c= cI f0 * f1 f0 c= cI f0 * f1 * f1 f0 c==> c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI f0 f0 c\/ c= cI f0 * f1 f0 c= cI f0 * f1 * f1 f0
- (_8374867 = _8374868) |- ((_8374867 = _8374868) /\ ((node_map _8374867) = (node_map _8374868)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * part cnode_map f0 * part cnode_map f1
+ ((f (f (f x))) = x) |- ((((POWER f) (SUC (SUC (NUMERAL (BIT1 _0))))) x) = x)
T c==> c= * f0 * f0 * f0 f1 f1 c= cPOWER f0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 f1
+ |- (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) (NUMERAL _0)) o f) o f) x) = x) \/ (((((((POWER f) (NUMERAL _0)) o f) o f) x) = (f x)) \/ ((((((POWER f) (NUMERAL _0)) o f) o f) x) = (f (f x))))))
T c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 f1 c\/ c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 * f0 f1 c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 * f0 * f0 f1
+ |- ((((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((f x) = x) \/ (((f x) = (f x)) \/ ((f x) = (f (f x)))))) = (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((f x) = x) \/ (((f x) = (f x)) \/ ((I (f x)) = (f (f x)))))))
T c= c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= * f0 f1 f1 c\/ c= * f0 f1 * f0 f1 c= * f0 f1 * f0 * f0 f1 c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= * f0 f1 f1 c\/ c= * f0 f1 * f0 f1 c= cI * f0 f1 * f0 * f0 f1
+ |- ((!x'. ((?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (x' = (((POWER f) k) x)))) = ((x' = x) \/ ((x' = (f x)) \/ (x' = (f (f x))))))) = (!x'. ((?k. (((\p. (\t. (p /\ (x' = t)))) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))) = ((x' = x) \/ ((x' = (f x)) \/ ((x' = (f (f x))) \/ F))))))
T c= ! c= c? / c/\ c< b1 cNUMERAL cBIT1 cBIT1 c_0 c= b0 cPOWER f0 b1 f1 c\/ c= b0 f1 c\/ c= b0 * f0 f1 c= b0 * f0 * f0 f1 ! c= c? / * * / / c/\ b2 c= b0 b3 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 c\/ c= b0 f1 c\/ c= b0 * f0 f1 c\/ c= b0 * f0 * f0 f1 cF
- |- ((~ (((orbit_map (inverse (node_map H))) x) = ((orbit_map (inverse (node_map H))) x))) ==> (((orbit_map (inverse (node_map H))) x) = ((orbit_map (inverse (node_map H))) x)))
T c==> c~ c= * * part corbit_map * part cinverse * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cinverse * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1
- |- ((~ (_8374873 = _8374874)) \/ ((inverse _8374873) = (inverse _8374874)))
T c\/ c~ c= f0 f1 c= * part cinverse f0 * part cinverse f1
+ |- ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) (NUMERAL _0)) o f) o f) x) = x) \/ (((((((POWER f) (NUMERAL _0)) o f) o f) x) = (f x)) \/ ((((((POWER f) (NUMERAL _0)) o f) o f) x) = (f (f x)))))) = (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) (NUMERAL _0)) o f) o f) x) = x) \/ (((((((POWER f) (NUMERAL _0)) o f) o f) x) = (f x)) \/ (((((POWER f) (SUC (NUMERAL _0))) o f) x) = (f (f x)))))))
T c= c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 f1 c\/ c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 * f0 f1 c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 * f0 * f0 f1 c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 f1 c\/ c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 * f0 f1 c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 * f0 * f0 f1
+ |- (((((((POWER f) (SUC (NUMERAL _0))) o f) o f) x) = x) = (((((POWER f) (SUC (SUC (NUMERAL _0)))) o f) x) = x))
T c= c= co * * part co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f0 f1 f1 c= co * * part cPOWER f0 cSUC cSUC cNUMERAL c_0 f0 f1 f1
- (k = k1) |- (((k1 < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k1) x) = x) \/ (((((POWER f) k1) x) = (f x)) \/ ((((POWER f) k1) x) = (f (f x)))))) = ((k < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x)))))))
T c==> c= f0 f1 c= c==> c< f1 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f2 f1 f3 f3 c\/ c= cPOWER f2 f1 f3 * f2 f3 c= cPOWER f2 f1 f3 * f2 * f2 f3 c==> c< f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f2 f0 f3 f3 c\/ c= cPOWER f2 f0 f3 * f2 f3 c= cPOWER f2 f0 f3 * f2 * f2 f3
- ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) |- (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) /\ (((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))) = ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))))))
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1
+ |- ((((((((POWER f) (NUMERAL _0)) o f) o f) o f) x) = x) = ((((((POWER f) (SUC (NUMERAL _0))) o f) o f) x) = x))
T c= c= co * * part co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f0 f1 f1 c= co * * part co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f0 f1 f1
- |- (((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> (((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x)))) = ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x))))) = (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))))))) = ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x))))) = (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))))
T c= c==> c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= c/\ c= * * part cface f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part cnode f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part cedge f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part cface f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part cnode f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part cedge f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part cface f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part cnode f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part cedge f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1
- |- ((!p'. (((~ (FINITE s)) \/ (~ ((permutes p) s))) \/ (!x. (((orbit_map (inverse p')) x) = ((orbit_map p') x))))) = (((~ (FINITE s)) \/ (~ ((permutes p) s))) \/ (!p. (!x. (((orbit_map (inverse p)) x) = ((orbit_map p) x))))))
T c= ! c\/ c\/ c~ cFINITE f0 c~ cpermutes f1 f0 ! c= * * part corbit_map * part cinverse b0 b1 * * part corbit_map b0 b1 c\/ c\/ c~ cFINITE f0 c~ cpermutes f1 f0 ! ! c= * * part corbit_map * part cinverse b0 b1 * * part corbit_map b0 b1
+ |- ((((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (NUMERAL _0)) o f) x) = x) \/ (((((POWER f) (SUC (NUMERAL _0))) x) = (f x)) \/ ((((POWER f) (SUC (NUMERAL _0))) x) = (f (f x)))))) = (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (NUMERAL _0))) x) = x) \/ (((((POWER f) (SUC (NUMERAL _0))) x) = (f x)) \/ ((((POWER f) (SUC (NUMERAL _0))) x) = (f (f x)))))))
T c= c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 f1 c\/ c= cPOWER f0 cSUC cNUMERAL c_0 f1 * f0 f1 c= cPOWER f0 cSUC cNUMERAL c_0 f1 * f0 * f0 f1 c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC cNUMERAL c_0 f1 f1 c\/ c= cPOWER f0 cSUC cNUMERAL c_0 f1 * f0 f1 c= cPOWER f0 cSUC cNUMERAL c_0 f1 * f0 * f0 f1
+ |- ((((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) k) o f) (f (f x))) = x) \/ ((((((POWER f) k) o f) (f (f x))) = (f x)) \/ ((((((POWER f) k) o f) o f) (f x)) = (f (f x)))))) = (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) k) o f) (f (f x))) = x) \/ (((((((POWER f) k) o f) o f) (f x)) = (f x)) \/ ((((((POWER f) k) o f) o f) (f x)) = (f (f x)))))))
T c= c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 f2 c\/ c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 * f1 f2 c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 * f1 * f1 f2 c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 f2 c\/ c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 * f1 f2 c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 * f1 * f1 f2
- |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))
T c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
- (~ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x))) |- ((((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)) ==> F)
T c==> c~ c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 cF
+ |- (((int_le (int_of_num (NUMERAL _0))) _8374884) ==> ((~ ((int_lt ((int_add _8374884) (int_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (int_of_num (NUMERAL (BIT1 (BIT1 _0)))))) \/ (((((POWER f) k) (f (f (f x)))) = x) \/ (((((POWER f) k) (f (f (f x)))) = (f x)) \/ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))
T c==> cint_le cint_of_num cNUMERAL c_0 f0 c\/ c~ cint_lt cint_add f0 cint_of_num cNUMERAL cBIT1 cBIT1 c_0 cint_of_num cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c\/ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3
+ |- (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((f (f x)) = x) \/ (((I (f (f x))) = (f x)) \/ ((I (f (f x))) = (f (f x))))))
T c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= * f0 * f0 f1 f1 c\/ c= cI * f0 * f0 f1 * f0 f1 c= cI * f0 * f0 f1 * f0 * f0 f1
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
+ |- (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((f (f x)) = x) \/ (((f (f x)) = (f x)) \/ ((I (f (f x))) = (f (f x))))))
T c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= * f0 * f0 f1 f1 c\/ c= * f0 * f0 f1 * f0 f1 c= cI * f0 * f0 f1 * f0 * f0 f1
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8374884))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!q'. ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) = p') ==> ((p' ==> (((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x)))) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x))))) = (p' ==> q'))))) ==> ((\q'. ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) = p') ==> ((p' ==> (((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x)))) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x))))) = (p' ==> q'))))) q')) = ((\q'. ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) = p') ==> ((p' ==> (((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x)))) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI f1 c==> c==> f1 c= c/\ c= * * part cface f0 f2 * * part corbit_map * part cinverse * part cface_map f0 f2 c/\ c= * * part cnode f0 f2 * * part corbit_map * part cinverse * part cnode_map f0 f2 c= * * part cedge f0 f2 * * part corbit_map * part cinverse * part cedge_map f0 f2 b0 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part cface f0 f2 * * part corbit_map * part cinverse * part cface_map f0 f2 c/\ c= * * part cnode f0 f2 * * part corbit_map * part cinverse * part cnode_map f0 f2 c= * * part cedge f0 f2 * * part corbit_map * part cinverse * part cedge_map f0 f2 c==> f1 b0 * / c==> c= c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI f1 c==> c==> f1 c= c/\ c= * * part cface f0 f2 * * part corbit_map * part cinverse * part cface_map f0 f2 c/\ c= * * part cnode f0 f2 * * part corbit_map * part cinverse * part cnode_map f0 f2 c= * * part cedge f0 f2 * * part corbit_map * part cinverse * part cedge_map f0 f2 b0 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part cface f0 f2 * * part corbit_map * part cinverse * part cface_map f0 f2 c/\ c= * * part cnode f0 f2 * * part corbit_map * part cinverse * part cnode_map f0 f2 c= * * part cedge f0 f2 * * part corbit_map * part cinverse * part cedge_map f0 f2 c==> f1 b0 f3 * / c==> c= c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI f1 c==> c==> f1 c= c/\ c= * * part cface f0 f2 * * part corbit_map * part cinverse * part cface_map f0 f2 c/\ c= * * part cnode f0 f2 * * part corbit_map * part cinverse * part cnode_map f0 f2 c= * * part cedge f0 f2 * * part corbit_map * part cinverse * part cedge_map f0 f2 b0 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part cface f0 f2 * * part corbit_map * part cinverse * part cface_map f0 f2 c/\ c= * * part cnode f0 f2 * * part corbit_map * part cinverse * part cnode_map f0 f2 c= * * part cedge f0 f2 * * part corbit_map * part cinverse * part cedge_map f0 f2 c==> f1 b0 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I x) = x) \/ (((I x) = (f x)) \/ ((((POWER f) (NUMERAL _0)) x) = (f (f x)))))) = (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I x) = x) \/ (((((POWER f) (NUMERAL _0)) x) = (f x)) \/ ((((POWER f) (NUMERAL _0)) x) = (f (f x)))))))
T c= c==> c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI f0 f0 c\/ c= cI f0 * f1 f0 c= cPOWER f1 cNUMERAL c_0 f0 * f1 * f1 f0 c==> c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI f0 f0 c\/ c= cPOWER f1 cNUMERAL c_0 f0 * f1 f0 c= cPOWER f1 cNUMERAL c_0 f0 * f1 * f1 f0
- |- (((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) ==> ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)) = ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) |- (((!x. (((~ (FINITE _8374774)) \/ (~ ((permutes _8374775) _8374774))) \/ (((orbit_map (inverse _8374775)) x) = ((orbit_map _8374775) x)))) ==> ((\x. (((~ (FINITE _8374774)) \/ (~ ((permutes _8374775) _8374774))) \/ (((orbit_map (inverse _8374775)) x) = ((orbit_map _8374775) x)))) _8374776)) = ((\x. (((~ (FINITE _8374774)) \/ (~ ((permutes _8374775) _8374774))) \/ (((orbit_map (inverse _8374775)) x) = ((orbit_map _8374775) x)))) _8374776))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c= c==> ! c\/ c\/ c~ cFINITE f0 c~ cpermutes f1 f0 c= * * part corbit_map * part cinverse f1 b0 * * part corbit_map f1 b0 * / c\/ c\/ c~ cFINITE f0 c~ cpermutes f1 f0 c= * * part corbit_map * part cinverse f1 b0 * * part corbit_map f1 b0 f2 * / c\/ c\/ c~ cFINITE f0 c~ cpermutes f1 f0 c= * * part corbit_map * part cinverse f1 b0 * * part corbit_map f1 b0 f2
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))) |- (!p. (!x. (((~ (FINITE _8374774)) \/ (~ ((permutes p) _8374774))) \/ (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 ! ! c\/ c\/ c~ cFINITE f0 c~ cpermutes b0 f0 c= * * part corbit_map * part cinverse b0 b1 * * part corbit_map b0 b1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))), (~ (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((orbit_map (node_map H)) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((orbit_map (edge_map H)) x) = ((orbit_map (inverse (edge_map H))) x)))))) |- ((((((orbit_map (inverse (face_map H))) x) = ((orbit_map (face_map H)) x)) /\ (((orbit_map (inverse (face_map H))) x) = ((orbit_map (inverse (face_map H))) x))) ==> (((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x))) = (((orbit_map (face_map H)) x) = ((orbit_map (inverse (face_map H))) x)))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= * * part corbit_map * part cinverse b1 b2 * * part corbit_map b1 b2 c==> c~ c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part corbit_map * part cnode_map f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part corbit_map * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= c==> c/\ c= * * part corbit_map * part cinverse * part cface_map f0 f1 * * part corbit_map * part cface_map f0 f1 c= * * part corbit_map * part cinverse * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c= * * part corbit_map * part cface_map f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1
- |- ((_8374867 = _8374868) ==> ((node_map _8374867) = (node_map _8374868)))
T c==> c= f0 f1 c= * part cnode_map f0 * part cnode_map f1
- ((((POWER f) (NUMERAL (BIT1 (BIT1 _0)))) x) = x) |- (((((POWER f) (NUMERAL (BIT1 (BIT1 _0)))) x) = x) /\ (((orbit_map f) x) = (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY)))))
T c==> c= cPOWER f0 cNUMERAL cBIT1 cBIT1 c_0 f1 f1 c/\ c= cPOWER f0 cNUMERAL cBIT1 cBIT1 c_0 f1 f1 c= * * part corbit_map f0 f1 * * part cINSERT f1 * * part cINSERT * f0 f1 * * part cINSERT * f0 * f0 f1 part cEMPTY
+ |- ((((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) k) o f) (f (f x))) = x) \/ (((((((POWER f) k) o f) o f) (f x)) = (f x)) \/ ((((((POWER f) k) o f) o f) (f x)) = (f (f x)))))) = (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) k) o f) o f) (f x)) = x) \/ (((((((POWER f) k) o f) o f) (f x)) = (f x)) \/ ((((((POWER f) k) o f) o f) (f x)) = (f (f x)))))))
T c= c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 f2 c\/ c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 * f1 f2 c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 * f1 * f1 f2 c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 f2 c\/ c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 * f1 f2 c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 * f1 * f1 f2
- (!P. (((P (NUMERAL _0)) /\ (!n. (P (SUC n)))) ==> (!m. (P m)))) |- ((((P (NUMERAL _0)) /\ (!n. (P (SUC n)))) ==> (!m. (P m))) = T)
T c==> ! c==> c/\ * b0 cNUMERAL c_0 ! * b0 cSUC b1 ! * b0 b1 c= c==> c/\ * f0 cNUMERAL c_0 ! * f0 cSUC b0 ! * f0 b0 cT
- (~ (((orbit_map (inverse (edge_map H))) x) = ((orbit_map (inverse (edge_map H))) x))) |- ((~ (((orbit_map (inverse (edge_map H))) x) = ((orbit_map (inverse (edge_map H))) x))) /\ (((orbit_map (inverse (edge_map H))) x) = ((orbit_map (inverse (edge_map H))) x)))
T c==> c~ c= * * part corbit_map * part cinverse * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c/\ c~ c= * * part corbit_map * part cinverse * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c= * * part corbit_map * part cinverse * part cedge_map f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1
- |- (((!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) ==> ((\y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) y)) = ((\y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) y))
T c= c==> ! ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 * / ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 f1 * / ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 f1
- (_8374876 = _8374878), (_8374875 = _8374877) |- ((_8374875 = _8374877) /\ (((orbit_map _8374875) _8374876) = ((orbit_map _8374877) _8374878)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= * * part corbit_map f2 f0 * * part corbit_map f3 f1
+ |- ((!n. (((SUC (SUC n)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (SUC n))) x) = x) \/ (((((POWER f) (SUC (SUC n))) x) = (f x)) \/ ((((POWER f) (SUC (SUC n))) x) = (f (f x))))))) = ((((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (NUMERAL _0))) x) = x) \/ (((((POWER f) (SUC (NUMERAL _0))) x) = (f x)) \/ ((((POWER f) (SUC (NUMERAL _0))) x) = (f (f x)))))) /\ (!n. (((SUC (SUC n)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (SUC n))) x) = x) \/ (((((POWER f) (SUC (SUC n))) x) = (f x)) \/ ((((POWER f) (SUC (SUC n))) x) = (f (f x)))))))))
T c= ! c==> c< cSUC cSUC b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC cSUC b0 f1 f1 c\/ c= cPOWER f0 cSUC cSUC b0 f1 * f0 f1 c= cPOWER f0 cSUC cSUC b0 f1 * f0 * f0 f1 c/\ c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC cNUMERAL c_0 f1 f1 c\/ c= cPOWER f0 cSUC cNUMERAL c_0 f1 * f0 f1 c= cPOWER f0 cSUC cNUMERAL c_0 f1 * f0 * f0 f1 ! c==> c< cSUC cSUC b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC cSUC b0 f1 f1 c\/ c= cPOWER f0 cSUC cSUC b0 f1 * f0 f1 c= cPOWER f0 cSUC cSUC b0 f1 * f0 * f0 f1
- |- (((!x. (((node H) x) = ((orbit_map (node_map H)) x))) ==> ((\x. (((node H) x) = ((orbit_map (node_map H)) x))) x)) = ((\x. (((node H) x) = ((orbit_map (node_map H)) x))) x))
T c= c==> ! c= * * part cnode f0 b0 * * part corbit_map * part cnode_map f0 b0 * / c= * * part cnode f0 b0 * * part corbit_map * part cnode_map f0 b0 f1 * / c= * * part cnode f0 b0 * * part corbit_map * part cnode_map f0 b0 f1
- |- (((\t. (f t)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) = ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> (((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x)))) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x))))) = (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> q')))) = ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> (((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x)))) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x))))) = (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> q'))))
T c= c==> c= c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= c/\ c= * * part cface f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part cnode f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part cedge f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 f2 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part cface f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part cnode f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part cedge f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI f2 c==> c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= c/\ c= * * part cface f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part cnode f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part cedge f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 f2 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ c= * * part cface f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part cnode f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part cedge f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1 c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI f2
+ |- (((((POWER f) (SUC (NUMERAL (BIT0 (BIT1 _0))))) x) = x) = ((((POWER f) (NUMERAL (BIT1 (BIT1 _0)))) x) = x))
T c= c= cPOWER f0 cSUC cNUMERAL cBIT0 cBIT1 c_0 f1 f1 c= cPOWER f0 cNUMERAL cBIT1 cBIT1 c_0 f1 f1
- |- ((((~ (FINITE s)) \/ (~ ((permutes p) s))) \/ (!x. (((orbit_map (inverse p)) x) = ((orbit_map p) x)))) = (!x. (((~ (FINITE s)) \/ (~ ((permutes p) s))) \/ (((orbit_map (inverse p)) x) = ((orbit_map p) x)))))
T c= c\/ c\/ c~ cFINITE f0 c~ cpermutes f1 f0 ! c= * * part corbit_map * part cinverse f1 b0 * * part corbit_map f1 b0 ! c\/ c\/ c~ cFINITE f0 c~ cpermutes f1 f0 c= * * part corbit_map * part cinverse f1 b0 * * part corbit_map f1 b0
+ |- ((\x. (((f o g) x) = (f (g x)))) x)
T * / c= co f0 f1 b0 * f0 * f1 b0 f2
+ |- ((\k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x))))))) k1)
T * / c==> c< b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 b0 f1 f1 c\/ c= cPOWER f0 b0 f1 * f0 f1 c= cPOWER f0 b0 f1 * f0 * f0 f1 f2
+ |- (?k1. (k = k1))
T c? / c= f0 b0
+ |- (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I x) = x) \/ (((((POWER f) (NUMERAL _0)) x) = (f x)) \/ ((((POWER f) (NUMERAL _0)) x) = (f (f x))))))
T c==> c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI f0 f0 c\/ c= cPOWER f1 cNUMERAL c_0 f0 * f1 f0 c= cPOWER f1 cNUMERAL c_0 f0 * f1 * f1 f0
+ ((f (f (f x))) = x) |- ((((((POWER f) (SUC (NUMERAL _0))) o f) o f) x) = x)
T c==> c= * f0 * f0 * f0 f1 f1 c= co * * part co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f0 f1 f1
+ |- ((y = (f x)) ==> (?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x)))))
T c==> c= f0 * f1 f2 c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 b0 f2
+ |- ((((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x))) ==> ((y = x) \/ ((y = (f x)) \/ (y = (f (f x)))))) = T)
T c= c==> c/\ c< f0 cNUMERAL cBIT1 cBIT1 c_0 c= f1 cPOWER f2 f0 f3 c\/ c= f1 f3 c\/ c= f1 * f2 f3 c= f1 * f2 * f2 f3 cT
+ (((y = (f x)) \/ (y = (f (f x)))) ==> (?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x))))), ((y = x) \/ ((y = (f x)) \/ (y = (f (f x))))) |- (?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x))))
T c==> c==> c\/ c= f0 * f1 f2 c= f0 * f1 * f1 f2 c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 b0 f2 c==> c\/ c= f0 f2 c\/ c= f0 * f1 f2 c= f0 * f1 * f1 f2 c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 b0 f2
+ |- ((((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (NUMERAL _0)) o f) x) = x) \/ ((((((POWER f) (NUMERAL _0)) o f) x) = (f x)) \/ (((((POWER f) (NUMERAL _0)) o f) x) = (f (f x)))))) = (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (NUMERAL _0)) o f) x) = x) \/ ((((((POWER f) (NUMERAL _0)) o f) x) = (f x)) \/ ((((POWER f) (SUC (NUMERAL _0))) x) = (f (f x)))))))
T c= c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 f1 c\/ c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 * f0 f1 c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 * f0 * f0 f1 c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 f1 c\/ c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 * f0 f1 c= cPOWER f0 cSUC cNUMERAL c_0 f1 * f0 * f0 f1
+ ((f (f (f x))) = x) |- ((((I o f) o f) (f x)) = x)
T c==> c= * f0 * f0 * f0 f1 f1 c= co * * part co part cI f0 f0 * f0 f1 f1
+ |- ((\f. (((POWER f) (NUMERAL _0)) = I)) f)
T * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0
+ |- ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((I o f) o f) x) = x) \/ (((((I o f) o f) x) = (f x)) \/ ((((I o f) o f) x) = (f (f x)))))) = (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((I o f) o f) x) = x) \/ (((((I o f) o f) x) = (f x)) \/ ((((((POWER f) (NUMERAL _0)) o f) o f) x) = (f (f x)))))))
T c= c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co part cI f0 f0 f1 f1 c\/ c= co * * part co part cI f0 f0 f1 * f0 f1 c= co * * part co part cI f0 f0 f1 * f0 * f0 f1 c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co part cI f0 f0 f1 f1 c\/ c= co * * part co part cI f0 f0 f1 * f0 f1 c= co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 * f0 * f0 f1
+ |- ((!n. (((SUC (SUC (SUC n))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (SUC (SUC n)))) x) = x) \/ (((((POWER f) (SUC (SUC (SUC n)))) x) = (f x)) \/ ((((POWER f) (SUC (SUC (SUC n)))) x) = (f (f x))))))) = ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = x) \/ (((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = (f x)) \/ ((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = (f (f x)))))) /\ (!n. (((SUC (SUC (SUC n))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (SUC (SUC n)))) x) = x) \/ (((((POWER f) (SUC (SUC (SUC n)))) x) = (f x)) \/ ((((POWER f) (SUC (SUC (SUC n)))) x) = (f (f x)))))))))
T c= ! c==> c< cSUC cSUC cSUC b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC cSUC cSUC b0 f1 f1 c\/ c= cPOWER f0 cSUC cSUC cSUC b0 f1 * f0 f1 c= cPOWER f0 cSUC cSUC cSUC b0 f1 * f0 * f0 f1 c/\ c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 f1 c\/ c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 * f0 f1 c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 * f0 * f0 f1 ! c==> c< cSUC cSUC cSUC b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC cSUC cSUC b0 f1 f1 c\/ c= cPOWER f0 cSUC cSUC cSUC b0 f1 * f0 f1 c= cPOWER f0 cSUC cSUC cSUC b0 f1 * f0 * f0 f1
+ |- (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) k) o f) o f) (f x)) = x) \/ (((((((POWER f) k) o f) o f) (f x)) = (f x)) \/ ((((((POWER f) k) o f) o f) (f x)) = (f (f x))))))
T c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 f2 c\/ c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 * f1 f2 c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 * f1 * f1 f2
+ |- (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I (f x)) = x) \/ (((I (f x)) = (f x)) \/ (((I o f) x) = (f (f x))))))
T c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI * f0 f1 f1 c\/ c= cI * f0 f1 * f0 f1 c= co part cI f0 f1 * f0 * f0 f1
+ |- ((((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) /\ (x = (((POWER f) (NUMERAL _0)) x))) = ((\k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (x = (((POWER f) k) x)))) (NUMERAL _0)))
T c= c/\ c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 cNUMERAL c_0 f0 * / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 b0 f0 cNUMERAL c_0
+ |- ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f (f x)) = (((I o f) o f) x))) = (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f (f x)) = (((((POWER f) (NUMERAL _0)) o f) o f) x))))
T c= c/\ c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 * f0 f1 co * * part co part cI f0 f0 f1 c/\ c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 * f0 f1 co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1
+ |- (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) (f (f (f x)))) = x) \/ (((((POWER f) k) (f (f (f x)))) = (f x)) \/ (((((POWER f) k) o f) (f (f x))) = (f (f x))))))
T c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 f2 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 * f1 f2 c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 * f1 * f1 f2
+ |- (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (SUC (SUC k))) o f) x) = x) \/ (((((POWER f) (SUC (SUC (SUC k)))) x) = (f x)) \/ ((((POWER f) (SUC (SUC (SUC k)))) x) = (f (f x))))))
T c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 f2 c\/ c= cPOWER f1 cSUC cSUC cSUC f0 f2 * f1 f2 c= cPOWER f1 cSUC cSUC cSUC f0 f2 * f1 * f1 f2
+ |- (!n. (((SUC (SUC (SUC n))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC (SUC (SUC n)))) x) = x) \/ (((((POWER f) (SUC (SUC (SUC n)))) x) = (f x)) \/ ((((POWER f) (SUC (SUC (SUC n)))) x) = (f (f x)))))))
T c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 cSUC cSUC cSUC f0 f2 f2 c\/ c= cPOWER f1 cSUC cSUC cSUC f0 f2 * f1 f2 c= cPOWER f1 cSUC cSUC cSUC f0 f2 * f1 * f1 f2
+ |- ((((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) (SUC k)) o f) o f) x) = x) \/ (((((((POWER f) (SUC k)) o f) o f) x) = (f x)) \/ ((((((POWER f) (SUC k)) o f) o f) x) = (f (f x)))))) = (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((((POWER f) (SUC k)) o f) o f) x) = x) \/ (((((((POWER f) (SUC k)) o f) o f) x) = (f x)) \/ (((((POWER f) (SUC (SUC k))) o f) x) = (f (f x)))))))
T c= c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 f2 c\/ c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 * f1 f2 c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 * f1 * f1 f2 c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 f2 c\/ c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 * f1 f2 c= co * * part cPOWER f1 cSUC cSUC f0 f1 f2 * f1 * f1 f2
+ (y = (f (f x))) |- ((y = (f (f x))) /\ (?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x)))))
T c==> c= f0 * f1 * f1 f2 c/\ c= f0 * f1 * f1 f2 c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f1 b0 f2
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num k)) ==> ((~ ((int_lt ((int_add (int_of_num k)) (int_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (int_of_num (NUMERAL (BIT1 (BIT1 _0)))))) \/ (((((POWER f) k) (f (f (f x)))) = x) \/ (((((POWER f) k) (f (f (f x)))) = (f x)) \/ ((((POWER f) k) (f (f (f x)))) = (f (f x))))))) = ((~ ((int_lt ((int_add (int_of_num k)) (int_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (int_of_num (NUMERAL (BIT1 (BIT1 _0)))))) \/ (((((POWER f) k) (f (f (f x)))) = x) \/ (((((POWER f) k) (f (f (f x)))) = (f x)) \/ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c\/ c~ cint_lt cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 cBIT1 c_0 cint_of_num cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 f2 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 * f1 f2 c= cPOWER f1 f0 * f1 * f1 * f1 f2 * f1 * f1 f2 c\/ c~ cint_lt cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 cBIT1 c_0 cint_of_num cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 f2 c\/ c= cPOWER f1 f0 * f1 * f1 * f1 f2 * f1 f2 c= cPOWER f1 f0 * f1 * f1 * f1 f2 * f1 * f1 f2
+ |- ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (SUC (NUMERAL _0))) o f) x) = x) \/ ((((((POWER f) (SUC (NUMERAL _0))) o f) x) = (f x)) \/ (((((POWER f) (SUC (NUMERAL _0))) o f) x) = (f (f x)))))) = (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) (SUC (NUMERAL _0))) o f) x) = x) \/ ((((((POWER f) (SUC (NUMERAL _0))) o f) x) = (f x)) \/ ((((POWER f) (SUC (SUC (NUMERAL _0)))) x) = (f (f x)))))))
T c= c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 f1 c\/ c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 * f0 f1 c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 * f0 * f0 f1 c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 f1 c\/ c= co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1 * f0 f1 c= cPOWER f0 cSUC cSUC cNUMERAL c_0 f1 * f0 * f0 f1
+ |- (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f (f x)) = ((I o f) (f x))))
T c/\ c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 * f0 f1 co part cI f0 * f0 f1
+ |- (((((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (NUMERAL _0)) x) = x) \/ (((((POWER f) (NUMERAL _0)) x) = (f x)) \/ ((((POWER f) (NUMERAL _0)) x) = (f (f x)))))) /\ (!n. (((SUC n) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC n)) x) = x) \/ (((((POWER f) (SUC n)) x) = (f x)) \/ ((((POWER f) (SUC n)) x) = (f (f x)))))))) ==> (!k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x))))))))
T c==> c/\ c==> c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cNUMERAL c_0 f1 f1 c\/ c= cPOWER f0 cNUMERAL c_0 f1 * f0 f1 c= cPOWER f0 cNUMERAL c_0 f1 * f0 * f0 f1 ! c==> c< cSUC b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC b0 f1 f1 c\/ c= cPOWER f0 cSUC b0 f1 * f0 f1 c= cPOWER f0 cSUC b0 f1 * f0 * f0 f1 ! c==> c< b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 b0 f1 f1 c\/ c= cPOWER f0 b0 f1 * f0 f1 c= cPOWER f0 b0 f1 * f0 * f0 f1
+ |- (T = (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f (f x)) = (f (f x)))))
T c= cT c/\ c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 * f0 f1 * f0 * f0 f1
+ (y = (((POWER f) k) x)) |- ((((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x))))) = (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ (y = (f (f x))))))
T c==> c= f0 cPOWER f1 f2 f3 c= c\/ c= cPOWER f1 f2 f3 f3 c\/ c= cPOWER f1 f2 f3 * f1 f3 c= cPOWER f1 f2 f3 * f1 * f1 f3 c\/ c= cPOWER f1 f2 f3 f3 c\/ c= cPOWER f1 f2 f3 * f1 f3 c= f0 * f1 * f1 f3
+ ((f (f (f x))) = x) |- ((((POWER f) (NUMERAL (BIT1 (BIT1 _0)))) x) = x)
T c==> c= * f0 * f0 * f0 f1 f1 c= cPOWER f0 cNUMERAL cBIT1 cBIT1 c_0 f1 f1
+ |- ((((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) k) o f) (f (f x))) = x) \/ ((((((POWER f) k) o f) (f (f x))) = (f x)) \/ (((((POWER f) k) o f) (f (f x))) = (f (f x)))))) = (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((POWER f) k) o f) (f (f x))) = x) \/ ((((((POWER f) k) o f) (f (f x))) = (f x)) \/ ((((((POWER f) k) o f) o f) (f x)) = (f (f x)))))))
T c= c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 f2 c\/ c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 * f1 f2 c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 * f1 * f1 f2 c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 f2 c\/ c= co * * part cPOWER f1 f0 f1 * f1 * f1 f2 * f1 f2 c= co * * part co * * part cPOWER f1 f0 f1 f1 * f1 f2 * f1 * f1 f2
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _8374884)) /\ (((real_le ((real_add ((real_add (real_of_int _8374884)) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _8374884)) /\ (((real_le ((real_add ((real_add (real_of_int _8374884)) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) /\ ((~ ((((POWER f) k) (f (f (f x)))) = x)) /\ ((~ ((((POWER f) k) (f (f (f x)))) = (f x))) /\ (~ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c/\ c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c~ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3 cF
+ |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
+ |- (((((orbit_map f) x) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x)))))) ==> (((orbit_map f) x) = (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY))))) = ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ ((((orbit_map f) x) = (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x)))))) ==> (((orbit_map f) x) = (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY)))))))
T c= c==> c= * * part corbit_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 c= * * part corbit_map f0 f1 * * part cINSERT f1 * * part cINSERT * f0 f1 * * part cINSERT * f0 * f0 f1 part cEMPTY c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c==> c= * * part corbit_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 c= * * part corbit_map f0 f1 * * part cINSERT f1 * * part cINSERT * f0 f1 * * part cINSERT * f0 * f0 f1 part cEMPTY
+ |- ((((((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (NUMERAL _0)) x) = x) \/ (((((POWER f) (NUMERAL _0)) x) = (f x)) \/ ((((POWER f) (NUMERAL _0)) x) = (f (f x)))))) /\ (!n. (((SUC n) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) (SUC n)) x) = x) \/ (((((POWER f) (SUC n)) x) = (f x)) \/ ((((POWER f) (SUC n)) x) = (f (f x)))))))) ==> (!k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x)))))))) = (!k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x))))))))
T c= c==> c/\ c==> c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cNUMERAL c_0 f1 f1 c\/ c= cPOWER f0 cNUMERAL c_0 f1 * f0 f1 c= cPOWER f0 cNUMERAL c_0 f1 * f0 * f0 f1 ! c==> c< cSUC b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 cSUC b0 f1 f1 c\/ c= cPOWER f0 cSUC b0 f1 * f0 f1 c= cPOWER f0 cSUC b0 f1 * f0 * f0 f1 ! c==> c< b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 b0 f1 f1 c\/ c= cPOWER f0 b0 f1 * f0 f1 c= cPOWER f0 b0 f1 * f0 * f0 f1 ! c==> c< b0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f0 b0 f1 f1 c\/ c= cPOWER f0 b0 f1 * f0 f1 c= cPOWER f0 b0 f1 * f0 * f0 f1
+ |- ((((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((((POWER f) k) o f) o f) o f) x) = x) \/ ((((((((POWER f) k) o f) o f) o f) x) = (f x)) \/ (((((((POWER f) k) o f) o f) o f) x) = (f (f x)))))) = (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((((POWER f) k) o f) o f) o f) x) = x) \/ ((((((((POWER f) k) o f) o f) o f) x) = (f x)) \/ ((((((POWER f) (SUC k)) o f) o f) x) = (f (f x)))))))
T c= c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 f2 c\/ c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 * f1 f2 c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 * f1 * f1 f2 c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 f2 c\/ c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 * f1 f2 c= co * * part co * * part cPOWER f1 cSUC f0 f1 f1 f2 * f1 * f1 f2
+ |- ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f (f x)) = (I (f (f x))))) = (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f (f x)) = ((I o f) (f x)))))
T c= c/\ c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 * f0 f1 cI * f0 * f0 f1 c/\ c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 * f0 f1 co part cI f0 * f0 f1
+ |- ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f (f x)) = (((((POWER f) (NUMERAL _0)) o f) o f) x))) = (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f (f x)) = ((((POWER f) (SUC (NUMERAL _0))) o f) x))))
T c= c/\ c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 * f0 f1 co * * part co * * part cPOWER f0 cNUMERAL c_0 f0 f0 f1 c/\ c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 * f0 f1 co * * part cPOWER f0 cSUC cNUMERAL c_0 f0 f1
+ |- ((!x'. ((x' IN (GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x)))))) = (x' IN (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY)))))) = ((GSPEC (\GEN%PVAR%5396. (?k. (((SETSPEC GEN%PVAR%5396) (k < (NUMERAL (BIT1 (BIT1 _0))))) (((POWER f) k) x))))) = (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY)))))
T c= ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 c< b2 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b2 f1 cIN b0 * * part cINSERT f1 * * part cINSERT * f0 f1 * * part cINSERT * f0 * f0 f1 part cEMPTY c= * part cGSPEC / c? / cSETSPEC b0 c< b1 cNUMERAL cBIT1 cBIT1 c_0 cPOWER f0 b1 f1 * * part cINSERT f1 * * part cINSERT * f0 f1 * * part cINSERT * f0 * f0 f1 part cEMPTY
+ |- (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I (f (f x))) = x) \/ ((((I o f) (f x)) = (f x)) \/ (((I o f) (f x)) = (f (f x))))))
T c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI * f0 * f0 f1 f1 c\/ c= co part cI f0 * f0 f1 * f0 f1 c= co part cI f0 * f0 f1 * f0 * f0 f1
+ |- (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f (f x)) = (((I o f) o f) x)))
T c/\ c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 * f0 f1 co * * part co part cI f0 f0 f1
+ |- ((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((NUMERAL (BIT0 (BIT1 _0))) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))
T c= c+ cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
+ (y = x) |- ((y = x) /\ (?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x)))))
T c==> c= f0 f1 c/\ c= f0 f1 c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f2 b0 f1
+ |- (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((f (f x)) = (I (f (f x)))))
T c/\ c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= * f0 * f0 f1 cI * f0 * f0 f1
+ |- (((SUC (SUC (SUC k))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((((((POWER f) k) o f) o f) o f) x) = x) \/ ((((((((POWER f) k) o f) o f) o f) x) = (f x)) \/ (((((((POWER f) k) o f) o f) o f) x) = (f (f x))))))
T c==> c< cSUC cSUC cSUC f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 f2 c\/ c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 * f1 f2 c= co * * part co * * part co * * part cPOWER f1 f0 f1 f1 f1 f2 * f1 * f1 f2
+ |- ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n)
T * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1
+ |- ((((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((I o f) (f x)) = x) \/ ((((I o f) (f x)) = (f x)) \/ (((I o f) (f x)) = (f (f x)))))) = (((SUC (SUC (NUMERAL _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((I o f) (f x)) = x) \/ ((((I o f) (f x)) = (f x)) \/ ((((I o f) o f) x) = (f (f x)))))))
T c= c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co part cI f0 * f0 f1 f1 c\/ c= co part cI f0 * f0 f1 * f0 f1 c= co part cI f0 * f0 f1 * f0 * f0 f1 c==> c< cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co part cI f0 * f0 f1 f1 c\/ c= co part cI f0 * f0 f1 * f0 f1 c= co * * part co part cI f0 f0 f1 * f0 * f0 f1
+ |- ((((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((I o f) x) = x) \/ ((((I o f) x) = (f x)) \/ (((((POWER f) (NUMERAL _0)) o f) x) = (f (f x)))))) = (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((I o f) x) = x) \/ ((((((POWER f) (NUMERAL _0)) o f) x) = (f x)) \/ (((((POWER f) (NUMERAL _0)) o f) x) = (f (f x)))))))
T c= c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co part cI f0 f1 f1 c\/ c= co part cI f0 f1 * f0 f1 c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 * f0 * f0 f1 c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= co part cI f0 f1 f1 c\/ c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 * f0 f1 c= co * * part cPOWER f0 cNUMERAL c_0 f0 f1 * f0 * f0 f1
+ |- (((y = x) \/ ((y = (f x)) \/ (y = (f (f x))))) ==> (?k. ((k < (NUMERAL (BIT1 (BIT1 _0)))) /\ (y = (((POWER f) k) x)))))
T c==> c\/ c= f0 f1 c\/ c= f0 * f2 f1 c= f0 * f2 * f2 f1 c? / c/\ c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cPOWER f2 b0 f1
+ |- (((?k1. (k = k1)) ==> ((k < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x))))))) = ((k < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k) x) = x) \/ (((((POWER f) k) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x)))))))
T c= c==> c? / c= f0 b0 c==> c< f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f0 f2 f2 c\/ c= cPOWER f1 f0 f2 * f1 f2 c= cPOWER f1 f0 f2 * f1 * f1 f2 c==> c< f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f0 f2 f2 c\/ c= cPOWER f1 f0 f2 * f1 f2 c= cPOWER f1 f0 f2 * f1 * f1 f2
+ |- ((\g. (!x. (((f o g) x) = (f (g x))))) g)
T * / ! c= co f0 b0 b1 * f0 * b0 b1 f1
+ |- ((((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((f x) = x) \/ (((I (f x)) = (f x)) \/ ((I (f x)) = (f (f x)))))) = (((SUC (NUMERAL _0)) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((I (f x)) = x) \/ (((I (f x)) = (f x)) \/ ((I (f x)) = (f (f x)))))))
T c= c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= * f0 f1 f1 c\/ c= cI * f0 f1 * f0 f1 c= cI * f0 f1 * f0 * f0 f1 c==> c< cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cI * f0 f1 f1 c\/ c= cI * f0 f1 * f0 f1 c= cI * f0 f1 * f0 * f0 f1
+ (k = k1) |- ((k1 < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((POWER f) k1) x) = x) \/ (((((POWER f) k1) x) = (f x)) \/ ((((POWER f) k) x) = (f (f x))))))
T c==> c= f0 f1 c==> c< f1 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f2 f1 f3 f3 c\/ c= cPOWER f2 f1 f3 * f2 f3 c= cPOWER f2 f0 f3 * f2 * f2 f3
+ ((f (f (f x))) = x) |- (((((POWER f) (SUC (SUC (NUMERAL _0)))) o f) x) = x)
T c==> c= * f0 * f0 * f0 f1 f1 c= co * * part cPOWER f0 cSUC cSUC cNUMERAL c_0 f0 f1 f1
+ |- (((NUMERAL (BIT1 _0)) < (NUMERAL (BIT1 (BIT1 _0)))) = T)
T c= c< cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cT
+ |- (~ (~ (((int_le (int_of_num (NUMERAL _0))) _8374884) ==> ((~ ((int_lt ((int_add _8374884) (int_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (int_of_num (NUMERAL (BIT1 (BIT1 _0)))))) \/ (((((POWER f) k) (f (f (f x)))) = x) \/ (((((POWER f) k) (f (f (f x)))) = (f x)) \/ ((((POWER f) k) (f (f (f x)))) = (f (f x)))))))))
T c~ c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c\/ c~ cint_lt cint_add f0 cint_of_num cNUMERAL cBIT1 cBIT1 c_0 cint_of_num cNUMERAL cBIT1 cBIT1 c_0 c\/ c= cPOWER f1 f2 * f1 * f1 * f1 f3 f3 c\/ c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 f3 c= cPOWER f1 f2 * f1 * f1 * f1 f3 * f1 * f1 f3
