N COMPLEX_POW_ZERO
C |- (!n. (((complex_pow (Cx (real_of_num (NUMERAL _0)))) n) = (((COND (n = (NUMERAL _0))) (Cx (real_of_num (NUMERAL (BIT1 _0))))) (Cx (real_of_num (NUMERAL _0))))))
T c= ccomplex_pow cCx creal_of_num cNUMERAL c_0 f0 cCOND c= f0 cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
D TRUTH
A |- T
T cT
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D Hypermap.NON_ZERO
A |- (!n. (~ ((SUC n) = (NUMERAL _0))))
T c~ c= cSUC f0 cNUMERAL c_0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D complex_pow
A |- ((((complex_pow x) (NUMERAL _0)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (!n. (((complex_pow x) (SUC n)) = ((complex_mul x) ((complex_pow x) n)))))
T c/\ c= ccomplex_pow f0 cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ! c= ccomplex_pow f0 cSUC b0 ccomplex_mul f0 ccomplex_pow f0 b0
D COMPLEX_MUL_LZERO
A |- (!x. (((complex_mul (Cx (real_of_num (NUMERAL _0)))) x) = (Cx (real_of_num (NUMERAL _0)))))
T c= ccomplex_mul cCx creal_of_num cNUMERAL c_0 f0 cCx creal_of_num cNUMERAL c_0
+ |- (((((complex_pow (Cx (real_of_num (NUMERAL _0)))) (NUMERAL _0)) = (((COND ((NUMERAL _0) = (NUMERAL _0))) (Cx (real_of_num (NUMERAL (BIT1 _0))))) (Cx (real_of_num (NUMERAL _0))))) /\ (!n. ((((complex_pow (Cx (real_of_num (NUMERAL _0)))) n) = (((COND (n = (NUMERAL _0))) (Cx (real_of_num (NUMERAL (BIT1 _0))))) (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_pow (Cx (real_of_num (NUMERAL _0)))) (SUC n)) = (((COND ((SUC n) = (NUMERAL _0))) (Cx (real_of_num (NUMERAL (BIT1 _0))))) (Cx (real_of_num (NUMERAL _0)))))))) ==> (!n. (((complex_pow (Cx (real_of_num (NUMERAL _0)))) n) = (((COND (n = (NUMERAL _0))) (Cx (real_of_num (NUMERAL (BIT1 _0))))) (Cx (real_of_num (NUMERAL _0)))))))
T c==> c/\ c= ccomplex_pow cCx creal_of_num cNUMERAL c_0 cNUMERAL c_0 cCOND c= cNUMERAL c_0 cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 ! c==> c= ccomplex_pow cCx creal_of_num cNUMERAL c_0 b0 cCOND c= b0 cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_pow cCx creal_of_num cNUMERAL c_0 cSUC b0 cCOND c= cSUC b0 cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 ! c= ccomplex_pow cCx creal_of_num cNUMERAL c_0 b0 cCOND c= b0 cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- |- (((NUMERAL _0) = (SUC n)) = F)
T c= c= cNUMERAL c_0 cSUC f0 cF
+ |- (((!x. (((complex_mul (Cx (real_of_num (NUMERAL _0)))) x) = (Cx (real_of_num (NUMERAL _0))))) ==> ((\x. (((complex_mul (Cx (real_of_num (NUMERAL _0)))) x) = (Cx (real_of_num (NUMERAL _0))))) x)) = ((\x. (((complex_mul (Cx (real_of_num (NUMERAL _0)))) x) = (Cx (real_of_num (NUMERAL _0))))) x))
T c= c==> ! c= ccomplex_mul cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL c_0 * / c= ccomplex_mul cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL c_0 f0 * / c= ccomplex_mul cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL c_0 f0
+ |- ((\x. (((complex_mul (Cx (real_of_num (NUMERAL _0)))) x) = (Cx (real_of_num (NUMERAL _0))))) x)
T * / c= ccomplex_mul cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL c_0 f0
+ |- (T = (((complex_pow (Cx (real_of_num (NUMERAL _0)))) (NUMERAL _0)) = (((COND ((NUMERAL _0) = (NUMERAL _0))) (Cx (real_of_num (NUMERAL (BIT1 _0))))) (Cx (real_of_num (NUMERAL _0))))))
T c= cT c= ccomplex_pow cCx creal_of_num cNUMERAL c_0 cNUMERAL c_0 cCOND c= cNUMERAL c_0 cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- ((SUC n) = (NUMERAL _0)) |- ((NUMERAL _0) = (SUC n))
T c==> c= cSUC f0 cNUMERAL c_0 c= cNUMERAL c_0 cSUC f0
+ (((complex_pow (Cx (real_of_num (NUMERAL _0)))) n) = (((COND (n = (NUMERAL _0))) (Cx (real_of_num (NUMERAL (BIT1 _0))))) (Cx (real_of_num (NUMERAL _0))))) |- ((((complex_pow (Cx (real_of_num (NUMERAL _0)))) n) = (((COND (n = (NUMERAL _0))) (Cx (real_of_num (NUMERAL (BIT1 _0))))) (Cx (real_of_num (NUMERAL _0))))) /\ (((complex_pow (Cx (real_of_num (NUMERAL _0)))) (SUC n)) = (((COND ((SUC n) = (NUMERAL _0))) (Cx (real_of_num (NUMERAL (BIT1 _0))))) (Cx (real_of_num (NUMERAL _0))))))
T c==> c= ccomplex_pow cCx creal_of_num cNUMERAL c_0 f0 cCOND c= f0 cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow cCx creal_of_num cNUMERAL c_0 f0 cCOND c= f0 cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_pow cCx creal_of_num cNUMERAL c_0 cSUC f0 cCOND c= cSUC f0 cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- ((NUMERAL _0) = (SUC n)) |- ((SUC n) = (NUMERAL _0))
T c==> c= cNUMERAL c_0 cSUC f0 c= cSUC f0 cNUMERAL c_0
- |- (~ ((NUMERAL _0) = (SUC n)))
T c~ c= cNUMERAL c_0 cSUC f0
- |- (((~ ((NUMERAL _0) = (SUC n))) ==> (((NUMERAL _0) = (SUC n)) = F)) = (((NUMERAL _0) = (SUC n)) = F))
T c= c==> c~ c= cNUMERAL c_0 cSUC f0 c= c= cNUMERAL c_0 cSUC f0 cF c= c= cNUMERAL c_0 cSUC f0 cF
