N Tame_list.size_showDups0
C |- (!vs. (!v. ((sizel ((showDups0 v) vs)) = (sizel vs))))
T c= csizel cshowDups0 f0 f1 csizel f1
D TRUTH
A |- T
T cT
D COND_ELIM_THM
A |- ((P (((COND c) x) y)) = ((c ==> (P x)) /\ ((~ c) ==> (P y))))
T c= * f0 cCOND f1 f2 f3 c/\ c==> f1 * f0 f2 c==> c~ f1 * f0 f3
D list_INDUCT
A |- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x))))
T c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0
D LENGTH
A |- (((LENGTH NIL) = (NUMERAL _0)) /\ (!h. (!t. ((LENGTH ((CONS h) t)) = (SUC (LENGTH t))))))
T c/\ c= cLENGTH cNIL cNUMERAL c_0 ! ! c= cLENGTH cCONS b0 b1 cSUC cLENGTH b1
D Seq.size
A |- (sizel = LENGTH)
T c= part csizel part cLENGTH
D Seq.size_cons
A |- (!h. (!t. ((sizel ((CONS h) t)) = (SUC (sizel t)))))
T c= csizel cCONS f0 f1 cSUC csizel f1
D Tame_defs2.showDups0
A |- ((((showDups0 a) NIL) = NIL) /\ (((showDups0 a) ((CONS b) bs)) = (((COND (b = NONE)) ((CONS a) ((showDups0 a) bs))) ((CONS (the b)) ((showDups0 (the b)) bs)))))
T c/\ c= cshowDups0 f0 cNIL cNIL c= cshowDups0 f0 cCONS f1 f2 cCOND c= f1 cNONE cCONS f0 cshowDups0 f0 f2 cCONS cthe f1 cshowDups0 cthe f1 f2
- (~ (h = NONE)) |- (((~ (NONE = h)) ==> ((NONE = h) = F)) = ((NONE = h) = F))
T c==> c~ c= f0 cNONE c= c==> c~ c= cNONE f0 c= c= cNONE f0 cF c= c= cNONE f0 cF
- (~ (h = NONE)) |- ((NONE = h) = F)
T c==> c~ c= f0 cNONE c= c= cNONE f0 cF
+ |- ((sizel NIL) = (sizel NIL))
T c= csizel cNIL csizel cNIL
+ (!v. ((sizel ((showDups0 v) t)) = (sizel t))) |- (((h = NONE) ==> ((sizel ((CONS v) ((showDups0 v) t))) = (sizel ((CONS h) t)))) /\ ((~ (h = NONE)) ==> ((sizel ((CONS (the h)) ((showDups0 (the h)) t))) = (sizel ((CONS h) t)))))
T c==> ! c= csizel cshowDups0 b0 f0 csizel f0 c/\ c==> c= f1 cNONE c= csizel cCONS f2 cshowDups0 f2 f0 csizel cCONS f1 f0 c==> c~ c= f1 cNONE c= csizel cCONS cthe f1 cshowDups0 cthe f1 f0 csizel cCONS f1 f0
+ |- (!v. ((sizel ((showDups0 v) NIL)) = (sizel NIL)))
T c= csizel cshowDups0 f0 cNIL csizel cNIL
+ (!v. ((sizel ((showDups0 v) t)) = (sizel t))) |- ((sizel (((COND (h = NONE)) ((CONS v) ((showDups0 v) t))) ((CONS (the h)) ((showDups0 (the h)) t)))) = (sizel ((CONS h) t)))
T c==> ! c= csizel cshowDups0 b0 f0 csizel f0 c= csizel cCOND c= f1 cNONE cCONS f2 cshowDups0 f2 f0 cCONS cthe f1 cshowDups0 cthe f1 f0 csizel cCONS f1 f0
+ |- (((!h. (!t. ((sizel ((CONS h) t)) = (SUC (sizel t))))) ==> ((\h. (!t. ((sizel ((CONS h) t)) = (SUC (sizel t))))) h)) = ((\h. (!t. ((sizel ((CONS h) t)) = (SUC (sizel t))))) h))
T c= c==> ! ! c= csizel cCONS b0 b1 cSUC csizel b1 * / ! c= csizel cCONS b0 b1 cSUC csizel b1 f0 * / ! c= csizel cCONS b0 b1 cSUC csizel b1 f0
+ |- (((!v. ((sizel ((showDups0 v) NIL)) = (sizel NIL))) /\ (!h. (!t. ((!v. ((sizel ((showDups0 v) t)) = (sizel t))) ==> (!v. ((sizel ((showDups0 v) ((CONS h) t))) = (sizel ((CONS h) t)))))))) ==> (!vs. (!v. ((sizel ((showDups0 v) vs)) = (sizel vs)))))
T c==> c/\ ! c= csizel cshowDups0 b0 cNIL csizel cNIL ! ! c==> ! c= csizel cshowDups0 b2 b1 csizel b1 ! c= csizel cshowDups0 b2 cCONS b0 b1 csizel cCONS b0 b1 ! ! c= csizel cshowDups0 b1 b0 csizel b0
+ |- (!h. (!t. ((!v. ((sizel ((showDups0 v) t)) = (sizel t))) ==> (!v. ((sizel ((showDups0 v) ((CONS h) t))) = (sizel ((CONS h) t)))))))
T c==> ! c= csizel cshowDups0 b0 f0 csizel f0 ! c= csizel cshowDups0 b0 cCONS f1 f0 csizel cCONS f1 f0
+ |- ((\h. (!t. ((sizel ((CONS h) t)) = (SUC (sizel t))))) h)
T * / ! c= csizel cCONS b0 b1 cSUC csizel b1 f0
- (~ (h = NONE)) |- ((h = NONE) = F)
T c==> c~ c= f0 cNONE c= c= f0 cNONE cF
+ (!v. ((sizel ((showDups0 v) t)) = (sizel t))), (h = NONE) |- ((h = NONE) /\ ((sizel ((CONS v) ((showDups0 v) t))) = (sizel ((CONS h) t))))
T c==> ! c= csizel cshowDups0 b0 f0 csizel f0 c==> c= f1 cNONE c/\ c= f1 cNONE c= csizel cCONS f2 cshowDups0 f2 f0 csizel cCONS f1 f0
+ |- (((showDups0 a) NIL) = NIL)
T c= cshowDups0 f0 cNIL cNIL
- (~ (h = NONE)) |- (~ (NONE = h))
T c==> c~ c= f0 cNONE c~ c= cNONE f0
+ |- ((!v. t) = t)
T c= ! f0 f0
+ (!v. ((sizel ((showDups0 v) t)) = (sizel t))) |- (T = ((sizel ((CONS v) ((showDups0 v) t))) = (sizel ((CONS h) t))))
T c==> ! c= csizel cshowDups0 b0 f0 csizel f0 c= cT c= csizel cCONS f1 cshowDups0 f1 f0 csizel cCONS f2 f0
+ (!v. ((sizel ((showDups0 v) t)) = (sizel t))) |- ((!v. ((sizel ((showDups0 v) t)) = (sizel t))) /\ (!v. ((sizel ((showDups0 v) ((CONS h) t))) = (sizel ((CONS h) t)))))
T c==> ! c= csizel cshowDups0 b0 f0 csizel f0 c/\ ! c= csizel cshowDups0 b0 f0 csizel f0 ! c= csizel cshowDups0 b0 cCONS f1 f0 csizel cCONS f1 f0
+ (!v. ((sizel ((showDups0 v) t)) = (sizel t))) |- (T = ((sizel ((CONS (the h)) ((showDups0 (the h)) t))) = (sizel ((CONS h) t))))
T c==> ! c= csizel cshowDups0 b0 f0 csizel f0 c= cT c= csizel cCONS cthe f1 cshowDups0 cthe f1 f0 csizel cCONS f1 f0
+ (!v. ((sizel ((showDups0 v) t)) = (sizel t))) |- ((sizel ((CONS (the h)) ((showDups0 (the h)) t))) = (sizel ((CONS h) t)))
T c==> ! c= csizel cshowDups0 b0 f0 csizel f0 c= csizel cCONS cthe f1 cshowDups0 cthe f1 f0 csizel cCONS f1 f0
- (h = NONE) |- (NONE = h)
T c==> c= f0 cNONE c= cNONE f0
- (NONE = h) |- (h = NONE)
T c==> c= cNONE f0 c= f0 cNONE
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
- |- ((LENGTH ((CONS h) t)) = (SUC (LENGTH t)))
T c= cLENGTH cCONS f0 f1 cSUC cLENGTH f1
- (h = NONE) |- ((h = NONE) = T)
T c==> c= f0 cNONE c= c= f0 cNONE cT
- (~ (h = NONE)) |- (((sizel ((CONS (the h)) ((showDups0 (the h)) t))) = (sizel ((CONS h) t))) = ((sizel ((CONS (the h)) ((showDups0 (the h)) t))) = (sizel ((CONS h) t))))
T c==> c~ c= f0 cNONE c= c= csizel cCONS cthe f0 cshowDups0 cthe f0 f1 csizel cCONS f0 f1 c= csizel cCONS cthe f0 cshowDups0 cthe f0 f1 csizel cCONS f0 f1
- |- ((\h. (!t. ((LENGTH ((CONS h) t)) = (SUC (LENGTH t))))) h)
T * / ! c= cLENGTH cCONS b0 b1 cSUC cLENGTH b1 f0
- |- (((!h. (!t. ((LENGTH ((CONS h) t)) = (SUC (LENGTH t))))) ==> ((\h. (!t. ((LENGTH ((CONS h) t)) = (SUC (LENGTH t))))) h)) = ((\h. (!t. ((LENGTH ((CONS h) t)) = (SUC (LENGTH t))))) h))
T c= c==> ! ! c= cLENGTH cCONS b0 b1 cSUC cLENGTH b1 * / ! c= cLENGTH cCONS b0 b1 cSUC cLENGTH b1 f0 * / ! c= cLENGTH cCONS b0 b1 cSUC cLENGTH b1 f0
- |- (((!t. ((LENGTH ((CONS h) t)) = (SUC (LENGTH t)))) ==> ((\t. ((LENGTH ((CONS h) t)) = (SUC (LENGTH t)))) t)) = ((\t. ((LENGTH ((CONS h) t)) = (SUC (LENGTH t)))) t))
T c= c==> ! c= cLENGTH cCONS f0 b0 cSUC cLENGTH b0 * / c= cLENGTH cCONS f0 b0 cSUC cLENGTH b0 f1 * / c= cLENGTH cCONS f0 b0 cSUC cLENGTH b0 f1
- (h = NONE) |- (((sizel ((CONS v) ((showDups0 v) t))) = (sizel ((CONS h) t))) = ((sizel ((CONS v) ((showDups0 v) t))) = (sizel ((CONS h) t))))
T c==> c= f0 cNONE c= c= csizel cCONS f1 cshowDups0 f1 f2 csizel cCONS f0 f2 c= csizel cCONS f1 cshowDups0 f1 f2 csizel cCONS f0 f2
- |- ((\t. ((LENGTH ((CONS h) t)) = (SUC (LENGTH t)))) t)
T * / c= cLENGTH cCONS f0 b0 cSUC cLENGTH b0 f1
