N Hypermap.lemma_in_loop2_transform
C |- (!H. (!NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> (!y. (((in_dart_of_loop y) ((((loop2_transform H) NF) L) x)) = ((?i. ((i <= (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))) /\ (y = (((POWER (loop_map L)) i) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= ((((hyp'p H) NF) L) x)) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) ((((hyp'y H) NF) L) x))))) /\ (y = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) ((((hyp'y H) NF) L) x))))))))))))))))))
T c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 ! c= cin_dart_of_loop b0 cloop2_transform f0 f1 f2 f3 c\/ c? / c/\ c<= b1 cindex f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 cnode_map f0 chyp'z f0 f1 f2 f3 c= b0 cPOWER * part cloop_map f2 b1 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 chyp'p f0 f1 f2 f3 c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c< b2 cCARD * * part cnode f0 cPOWER * part cface_map f0 b1 chyp'y f0 f1 f2 f3 c= b0 cPOWER * part cinverse * part cnode_map f0 b2 cPOWER * part cface_map f0 b1 chyp'y f0 f1 f2 f3
D TRUTH
A |- T
T cT
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D LT_SUC_LE
A |- (!m. (!n. ((m < (SUC n)) = (m <= n))))
T c= c< f0 cSUC f1 c<= f0 f1
D LE_SUC
A |- (!m. (!n. (((SUC m) <= (SUC n)) = (m <= n))))
T c= c<= cSUC f0 cSUC f1 c<= f0 f1
D LT_SUC
A |- (!m. (!n. (((SUC m) < (SUC n)) = (m < n))))
T c= c< cSUC f0 cSUC f1 c< f0 f1
D LE_TRANS
A |- (!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p)))))
T c==> c/\ c<= f0 f1 c<= f1 f2 c<= f0 f2
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_IMP_LE
A |- (!m. (!n. ((m < n) ==> (m <= n))))
T c==> c< f0 f1 c<= f0 f1
D LE_EXISTS
A |- (!m. (!n. ((m <= n) = (?d. (n = (m + d))))))
T c= c<= f0 f1 c? / c= f1 c+ f0 b0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D LE_ADD
A |- (!m. (!n. (m <= (m + n))))
T c<= f0 c+ f0 f1
D LE_ADDR
A |- (!m. (!n. (n <= (m + n))))
T c<= f0 c+ f1 f0
D LE_ADD_LCANCEL
A |- (!m. (!n. (!p. (((m + n) <= (m + p)) = (n <= p)))))
T c= c<= c+ f0 f1 c+ f0 f2 c<= f1 f2
D SUB_SUC
A |- (!m. (!n. (((SUC m) - (SUC n)) = (m - n))))
T c= c- cSUC f0 cSUC f1 c- f0 f1
D ADD_SUB
A |- (!m. (!n. (((m + n) - n) = m)))
T c= c- c+ f0 f1 f1 f0
D ADD_SUB2
A |- (!m. (!n. (((m + n) - m) = n)))
T c= c- c+ f0 f1 f0 f1
D Hypermap.GE_1
A |- (!n. ((NUMERAL (BIT1 _0)) <= (SUC n)))
T c<= cNUMERAL cBIT1 c_0 cSUC f0
D Hypermap.face_map_and_darts
A |- (!H. ((FINITE (dart H)) /\ ((permutes (face_map H)) (dart H))))
T c/\ cFINITE * part cdart f0 cpermutes * part cface_map f0 * part cdart f0
D Hypermap.lemma_add_exponent_function
A |- (!p. (!m. (!n. (!x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x)))))))
T c= cPOWER f0 c+ f1 f2 f3 cPOWER f0 f1 cPOWER f0 f2 f3
D Hypermap.inverse_power_function
A |- (!s. (!p. (!n. (!x. (!y. (((permutes p) s) ==> ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y)))))))))
T c==> cpermutes f0 f1 c= c= f2 cPOWER f0 f3 f4 c= f4 cPOWER * part cinverse f0 f3 f2
D Hypermap.LE_SUC_PRE
A |- (!n. (((NUMERAL (BIT1 _0)) <= n) ==> ((SUC (PRE n)) = n)))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= cSUC cPRE f0 f0
D Hypermap.NODE_NOT_EMPTY
A |- (!H. (!x. ((NUMERAL (BIT1 _0)) <= (CARD ((node H) x)))))
T c<= cNUMERAL cBIT1 c_0 cCARD * * part cnode f0 f1
D Hypermap.lemma_in_dart_of_loop_loop
A |- (!L. (!x. (((in_dart_of_loop x) L) ==> (!y. (((in_dart_of_loop y) L) = (?i. ((i <= (pre_card_dart_of_loop L)) /\ (y = (((POWER (loop_map L)) i) x)))))))))
T c==> cin_dart_of_loop f0 f1 ! c= cin_dart_of_loop b0 f1 c? / c/\ c<= b1 cpre_card_dart_of_loop f1 c= b0 cPOWER * part cloop_map f1 b1 f0
D Hypermap.lemma_in_dart
A |- (!H. (!NF. (!L. (!x. ((((is_normal H) NF) /\ ((L IN NF) /\ ((in_dart_of_loop x) L))) ==> (x IN (dart H)))))))
T c==> c/\ cis_normal f0 f1 c/\ cIN f2 f1 cin_dart_of_loop f3 f2 cIN f3 * part cdart f0
D Hypermap.complement_index
A |- ((!H. (!x. ((((complement_index H) x) (NUMERAL _0)) = (NUMERAL _0)))) /\ (!H. (!x. (!n. ((((complement_index H) x) (SUC n)) = ((((complement_index H) x) n) + (PRE (CARD ((node H) (((POWER (inverse (face_map H))) (SUC n)) x))))))))))
T c/\ ! ! c= ccomplement_index b0 b1 cNUMERAL c_0 cNUMERAL c_0 ! ! ! c= ccomplement_index b0 b1 cSUC b2 c+ ccomplement_index b0 b1 b2 cPRE cCARD * * part cnode b0 cPOWER * part cinverse * part cface_map b0 cSUC b2 b1
D Hypermap.lemma_increasing_index_one
A |- (!H. (!x. (!n. (((is_node_nondegenerate H) /\ (x IN (dart H))) ==> ((((complement_index H) x) n) < (((complement_index H) x) (SUC n)))))))
T c==> c/\ cis_node_nondegenerate f0 cIN f1 * part cdart f0 c< ccomplement_index f0 f1 f2 ccomplement_index f0 f1 cSUC f2
D Hypermap.lemma_inc_not_decreasing
A |- (!id. ((!i. ((id i) < (id (SUC i)))) ==> (!i. (!j. ((i <= j) = ((id i) <= (id j)))))))
T c==> ! c< * f0 b0 * f0 cSUC b0 ! ! c= c<= b0 b1 c<= * f0 b0 * f0 b1
D Hypermap.lemma_complement_path
A |- (!H. (!x. (((plain_hypermap H) /\ ((is_node_nondegenerate H) /\ (x IN (dart H)))) ==> ((!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) /\ ((!i. ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))) /\ ((!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))) /\ ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) /\ (!n. (((is_contour H) ((complement H) x)) n)))))))))
T c==> c/\ cplain_hypermap f0 c/\ cis_node_nondegenerate f0 cIN f1 * part cdart f0 c/\ ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c/\ ! c= ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 cinverse * part cnode_map f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c/\ ! c= cface_map f0 ccomplement f0 f1 ccomplement_index f0 f1 b0 ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 c/\ ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 ! cis_contour f0 * * part ccomplement f0 f1 b0
D Hypermap.is_restricted
A |- (!H. ((is_restricted H) = ((~ ((dart H) = EMPTY)) /\ ((planar_hypermap H) /\ ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x)))))))))))))))
T c= cis_restricted f0 c/\ c~ c= * part cdart f0 part cEMPTY c/\ cplanar_hypermap f0 c/\ cplain_hypermap f0 c/\ cconnected_hypermap f0 c/\ csimple_hypermap f0 c/\ cis_no_double_joins f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0
D Hypermap.is_split_condition
A |- (!H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) = ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))))))))))
T c= cis_split_condition f0 f1 f2 f3 c/\ cis_restricted f0 c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop f3 f2 c= chead_of_atom f0 f1 f3 f3
D Hypermap.lemma_on_hyp_y
A |- (!H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> (((in_dart_of_loop ((((hyp'y H) NF) L) x)) L) /\ ((((loop_map L) ((((hyp'y H) NF) L) x)) = ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) /\ (~ (((node H) ((((hyp'y H) NF) L) x)) = ((node H) x))))))))))
T c==> cis_split_condition f0 f1 f2 f3 c/\ cin_dart_of_loop chyp'y f0 f1 f2 f3 f2 c/\ c= cloop_map f2 chyp'y f0 f1 f2 f3 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 c~ c= * * part cnode f0 chyp'y f0 f1 f2 f3 * * part cnode f0 f3
D Hypermap.lemma_split_marked_loop
A |- (!H. (!NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> ((((is_split_condition H) NF) L) x))))))
T c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 cis_split_condition f0 f1 f2 f3
D Hypermap.hyp_z
A |- (!H. (!NF. (!L. (!x. (((((hyp'z H) NF) L) x) = (((POWER (face_map H)) (SUC ((((hyp'p H) NF) L) x))) ((((hyp'y H) NF) L) x)))))))
T c= chyp'z f0 f1 f2 f3 cPOWER * part cface_map f0 cSUC chyp'p f0 f1 f2 f3 chyp'y f0 f1 f2 f3
D Hypermap.lemmaHQYMRTX
A |- (!H. (!NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> (((in_dart_of_loop ((((hyp'z H) NF) L) x)) L) /\ (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (SUC ((((hyp'm H) NF) L) x)))) ==> (~ (((((hyp'z H) NF) L) x) = (((POWER (face_map H)) k) x)))))))))))
T c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop chyp'z f0 f1 f2 f3 f2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC chyp'm f0 f1 f2 f3 c~ c= chyp'z f0 f1 f2 f3 cPOWER * part cface_map f0 b0 f3
D Hypermap.card2_transform
A |- (!H. (!NF. (!L. (!x. (((((card2_transform H) NF) L) x) = ((((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))) + (((complement_index H) ((((hyp'z H) NF) L) x)) ((((hyp'p H) NF) L) x))))))))
T c= ccard2_transform f0 f1 f2 f3 c+ cindex f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 cnode_map f0 chyp'z f0 f1 f2 f3 ccomplement_index f0 chyp'z f0 f1 f2 f3 chyp'p f0 f1 f2 f3
D Hypermap.lemma_complement_index
A |- (!H. (!x. (!m. (!k. (((is_node_nondegenerate H) /\ ((x IN (dart H)) /\ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (((complement_index H) x) m))))) ==> (?i. (?j. ((i < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x)))) /\ (k = ((((complement_index H) x) i) + j))))))))))))
T c==> c/\ cis_node_nondegenerate f0 c/\ cIN f1 * part cdart f0 c/\ c<= cNUMERAL cBIT1 c_0 f2 c<= f2 ccomplement_index f0 f1 f3 c? / c? / c/\ c< b0 f3 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= f2 c+ ccomplement_index f0 f1 b0 b1
D Hypermap.reduce_exponent
A |- (!s. (!p. (!m. (!n. (!x. ((((permutes p) s) /\ (m <= n)) ==> ((((POWER (inverse p)) m) (((POWER p) n) x)) = (((POWER p) (n - m)) x))))))))
T c==> c/\ cpermutes f0 f1 c<= f2 f3 c= cPOWER * part cinverse f0 f2 cPOWER f0 f3 f4 cPOWER f0 c- f3 f2 f4
D Hypermap.lemma_on_adding_darts
A |- (!H. (!NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> ((((loop_map L) ((((hyp'y H) NF) L) x)) = ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) /\ (((inv_loop_map L) ((((hyp'z H) NF) L) x)) = ((node_map H) ((((hyp'z H) NF) L) x)))))))))
T c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 c/\ c= cloop_map f2 chyp'y f0 f1 f2 f3 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 c= cinv_loop_map f2 chyp'z f0 f1 f2 f3 cnode_map f0 chyp'z f0 f1 f2 f3
D Hypermap.lemma_on_loop2_transform
A |- (!H. (!NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> (((((((path2_transform H) NF) L) x) (NUMERAL _0)) = ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) /\ (((in_dart_of_loop ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((((loop2_transform H) NF) L) x)) /\ (((pre_card_dart_of_loop ((((loop2_transform H) NF) L) x)) = ((((card2_transform H) NF) L) x)) /\ ((!i. ((i <= (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) = (((POWER (loop_map L)) i) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))))) /\ (!i. ((i <= (((complement_index H) ((((hyp'z H) NF) L) x)) ((((hyp'p H) NF) L) x))) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) ((((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))) + i)) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) = (((complement H) ((((hyp'z H) NF) L) x)) i)))))))))))))
T c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 c/\ c= cpath2_transform f0 f1 f2 f3 cNUMERAL c_0 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 c/\ cin_dart_of_loop cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 cloop2_transform f0 f1 f2 f3 c/\ c= cpre_card_dart_of_loop cloop2_transform f0 f1 f2 f3 ccard2_transform f0 f1 f2 f3 c/\ ! c==> c<= b0 cindex f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 cnode_map f0 chyp'z f0 f1 f2 f3 c= cPOWER * part cloop_map cloop2_transform f0 f1 f2 f3 b0 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 cPOWER * part cloop_map f2 b0 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 ! c==> c<= b0 ccomplement_index f0 chyp'z f0 f1 f2 f3 chyp'p f0 f1 f2 f3 c= cPOWER * part cloop_map cloop2_transform f0 f1 f2 f3 c+ cindex f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 cnode_map f0 chyp'z f0 f1 f2 f3 b0 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 ccomplement f0 chyp'z f0 f1 f2 f3 b0
+ (!H. (!x. (!n. (((is_node_nondegenerate H) /\ (x IN (dart H))) ==> ((((complement_index H) x) n) < (((complement_index H) x) (SUC n))))))) |- (!x. (((is_node_nondegenerate H) /\ (x IN (dart H))) ==> (!n. ((((complement_index H) x) n) < (((complement_index H) x) (SUC n))))))
T c==> ! ! ! c==> c/\ cis_node_nondegenerate b0 cIN b1 * part cdart b0 c< ccomplement_index b0 b1 b2 ccomplement_index b0 b1 cSUC b2 ! c==> c/\ cis_node_nondegenerate f0 cIN b0 * part cdart f0 ! c< ccomplement_index f0 b0 b1 ccomplement_index f0 b0 cSUC b1
- |- ((((in_dart_of_loop x) L) /\ ((in_dart_of_loop y) L)) ==> (((((index L) x) y) <= (pre_card_dart_of_loop L)) /\ (y = (((POWER (loop_map L)) (((index L) x) y)) x))))
T c==> c/\ cin_dart_of_loop f0 f1 cin_dart_of_loop f2 f1 c/\ c<= cindex f1 f0 f2 cpre_card_dart_of_loop f1 c= f2 cPOWER * part cloop_map f1 cindex f1 f0 f2 f0
- |- (((!x. ((I x) = x)) ==> ((\x. ((I x) = x)) x)) = ((\x. ((I x) = x)) x))
T c= c==> ! c= cI b0 b0 * / c= cI b0 b0 f0 * / c= cI b0 b0 f0
+ (!s. (!p. (!n. (!x. (!y. (((permutes p) s) ==> ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))))))))) |- (!n. (!x. (!y. (((permutes p) s) ==> ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y)))))))
T c==> ! ! ! ! ! c==> cpermutes b1 b0 c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4 ! ! ! c==> cpermutes f0 f1 c= c= b2 cPOWER f0 b0 b1 c= b1 cPOWER * part cinverse f0 b0 b2
+ ((\j. ((a < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))) /\ ((SUC d) = ((((complement_index H) z) a) + j)))))) b) |- ((a < m) /\ (((NUMERAL (BIT1 _0)) <= b) /\ ((b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))) /\ ((SUC d) = ((((complement_index H) z) a) + b)))))
T c==> * / c/\ c< f0 f1 c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c< b0 cCARD * * part cnode f2 cPOWER * part cinverse * part cface_map f2 cSUC f0 f3 c= cSUC f4 c+ ccomplement_index f2 f3 f0 b0 f5 c/\ c< f0 f1 c/\ c<= cNUMERAL cBIT1 c_0 f5 c/\ c< f5 cCARD * * part cnode f2 cPOWER * part cinverse * part cface_map f2 cSUC f0 f3 c= cSUC f4 c+ ccomplement_index f2 f3 f0 f5
+ (y' = (((POWER (inverse (node_map H))) b) (((POWER (face_map H)) (SUC s)) y))), (m = (a + (SUC s))), ((NUMERAL (BIT1 _0)) <= b), (b < (CARD ((node H) (((POWER (face_map H)) (SUC s)) y)))) |- (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))
T c==> c= f0 cPOWER * part cinverse * part cnode_map f1 f2 cPOWER * part cface_map f1 cSUC f3 f4 c==> c= f5 c+ f6 cSUC f3 c==> c<= cNUMERAL cBIT1 c_0 f2 c==> c< f2 cCARD * * part cnode f1 cPOWER * part cface_map f1 cSUC f3 f4 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f5 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cface_map f1 b0 f4 c= f0 cPOWER * part cinverse * part cnode_map f1 b1 cPOWER * part cface_map f1 b0 f4
+ (!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))) |- (((i <= ny) /\ (y' = (((POWER (loop_map L)) i) ((loop_map L) y)))) ==> (?i. ((i <= (ny + (((complement_index H) z) m))) /\ (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))))))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f5 cPOWER * part cloop_map f3 b0 cloop_map f3 f5 c==> c/\ c<= f6 f0 c= f7 cPOWER * part cloop_map f3 f6 cloop_map f3 f5 c? / c/\ c<= b0 c+ f0 ccomplement_index f1 f8 f9 c= f7 cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f5
- |- ((((\y. (((((hyp'y H) NF) L) x) = y)) y) ==> (?y. (((((hyp'y H) NF) L) x) = y))) = T)
T c= c==> * / c= chyp'y f0 f1 f2 f3 b0 f4 c? / c= chyp'y f0 f1 f2 f3 b0 cT
+ ((((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y)) = (((POWER (face_map H)) (SUC s)) y)), (m = (a + (SUC s))), ((NUMERAL (BIT1 _0)) <= b) |- (((((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y)) = (((POWER (face_map H)) (SUC s)) y)) /\ (((b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y))))) /\ (y' = (((POWER (inverse (node_map H))) b) (((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y))))) ==> (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))))
T c==> c= cPOWER * part cinverse * part cface_map f0 cSUC f1 cPOWER * part cface_map f0 cSUC f2 f3 cPOWER * part cface_map f0 cSUC f4 f3 c==> c= f2 c+ f1 cSUC f4 c==> c<= cNUMERAL cBIT1 c_0 f5 c/\ c= cPOWER * part cinverse * part cface_map f0 cSUC f1 cPOWER * part cface_map f0 cSUC f2 f3 cPOWER * part cface_map f0 cSUC f4 f3 c==> c/\ c< f5 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f1 cPOWER * part cface_map f0 cSUC f2 f3 c= f6 cPOWER * part cinverse * part cnode_map f0 f5 cPOWER * part cinverse * part cface_map f0 cSUC f1 cPOWER * part cface_map f0 cSUC f2 f3 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cface_map f0 b0 f3 c= f6 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cface_map f0 b0 f3
+ (b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC d)) z)))) |- (b < (SUC (PRE (CARD ((node H) (((POWER (inverse (face_map H))) (SUC d)) z))))))
T c==> c< f0 cCARD * * part cnode f1 cPOWER * part cinverse * part cface_map f1 cSUC f2 f3 c< f0 cSUC cPRE cCARD * * part cnode f1 cPOWER * part cinverse * part cface_map f1 cSUC f2 f3
+ (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- ((~ (?i. ((i <= ny) /\ (y' = (((POWER (loop_map L)) i) ((loop_map L) y)))))) ==> (((?i. ((i <= ny) /\ (y' = (((POWER (loop_map L)) i) ((loop_map L) y))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))) ==> (?i. ((i <= (ny + (((complement_index H) z) m))) /\ (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)))))))
T c==> ! c==> c<= b0 ccomplement_index f0 f1 f2 c= cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 b0 cloop_map f4 f7 ccomplement f0 f1 b0 c==> c~ cIN f4 * * part cfinal_loops f0 f3 c==> cis_restricted f0 c==> c= chyp'y f0 f3 f4 f5 f7 c==> c= chyp'z f0 f3 f4 f5 f1 c==> c= chyp'p f0 f3 f4 f5 f2 c==> c/\ cis_marked c, f0 c, f3 c, f4 f5 c~ cIN f4 * * part cfinal_loops f0 f3 c==> cIN f4 f3 c==> cis_normal f0 f3 c==> c~ c? / c/\ c<= b0 f6 c= f8 cPOWER * part cloop_map f4 b0 cloop_map f4 f7 c==> c\/ c? / c/\ c<= b0 f6 c= f8 cPOWER * part cloop_map f4 b0 cloop_map f4 f7 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cface_map f0 b0 f7 c= f8 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cface_map f0 b0 f7 c? / c/\ c<= b0 c+ f6 ccomplement_index f0 f1 f2 c= f8 cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 b0 cloop_map f4 f7
+ |- ((((NUMERAL (BIT1 _0)) <= (SUC s)) /\ (((SUC s) <= m) /\ (((NUMERAL (BIT1 _0)) <= b) /\ ((b < (CARD ((node H) (((POWER (face_map H)) (SUC s)) y)))) /\ (y' = (((POWER (inverse (node_map H))) b) (((POWER (face_map H)) (SUC s)) y))))))) = ((\j. (((NUMERAL (BIT1 _0)) <= (SUC s)) /\ (((SUC s) <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) (SUC s)) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) (SUC s)) y)))))))) b))
T c= c/\ c<= cNUMERAL cBIT1 c_0 cSUC f0 c/\ c<= cSUC f0 f1 c/\ c<= cNUMERAL cBIT1 c_0 f2 c/\ c< f2 cCARD * * part cnode f3 cPOWER * part cface_map f3 cSUC f0 f4 c= f5 cPOWER * part cinverse * part cnode_map f3 f2 cPOWER * part cface_map f3 cSUC f0 f4 * / c/\ c<= cNUMERAL cBIT1 c_0 cSUC f0 c/\ c<= cSUC f0 f1 c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c< b0 cCARD * * part cnode f3 cPOWER * part cface_map f3 cSUC f0 f4 c= f5 cPOWER * part cinverse * part cnode_map f3 b0 cPOWER * part cface_map f3 cSUC f0 f4 f2
+ |- ((\H. (!NF. (!L. (!x. (((((card2_transform H) NF) L) x) = ((((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))) + (((complement_index H) ((((hyp'z H) NF) L) x)) ((((hyp'p H) NF) L) x)))))))) H)
T * / ! ! ! c= ccard2_transform b0 b1 b2 b3 c+ cindex b2 cinverse * part cnode_map b0 chyp'y b0 b1 b2 b3 cnode_map b0 chyp'z b0 b1 b2 b3 ccomplement_index b0 chyp'z b0 b1 b2 b3 chyp'p b0 b1 b2 b3 f0
+ (is_restricted H) |- (plain_hypermap H)
T c==> cis_restricted f0 cplain_hypermap f0
- (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (?i. (?j. ((i < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) z)))) /\ ((SUC d) = ((((complement_index H) z) i) + j))))))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (i = (ny + (SUC d))), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((SUC d) <= (((complement_index H) z) m)), (L IN NF), ((is_normal H) NF) |- (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))
T c==> ! c==> c<= b0 ccomplement_index f0 f1 f2 c= cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 b0 cloop_map f4 f7 ccomplement f0 f1 b0 c==> c? / c? / c/\ c< b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= cSUC f8 c+ ccomplement_index f0 f1 b0 b1 c==> c~ cIN f4 * * part cfinal_loops f0 f3 c==> cis_restricted f0 c==> c= f9 cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 f10 cloop_map f4 f7 c==> c= chyp'y f0 f3 f4 f5 f7 c==> c= chyp'z f0 f3 f4 f5 f1 c==> c= f10 c+ f6 cSUC f8 c==> c= chyp'p f0 f3 f4 f5 f2 c==> c/\ cis_marked c, f0 c, f3 c, f4 f5 c~ cIN f4 * * part cfinal_loops f0 f3 c==> c<= cSUC f8 ccomplement_index f0 f1 f2 c==> cIN f4 f3 c==> cis_normal f0 f3 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cface_map f0 b0 f7 c= f9 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cface_map f0 b0 f7
+ (~ (L IN ((final_loops H) NF))), (is_restricted H), (((((hyp'z H) NF) L) x) = z), (m = ((PRE a) + (SUC d))), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC d)) z)))), (L IN NF), ((is_normal H) NF) |- ((((((complement_index H) z) d) + b) <= (((complement_index H) z) (SUC d))) /\ ((((complement_index H) z) (SUC d)) <= (((complement_index H) z) m)))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= chyp'z f1 f2 f0 f3 f4 c==> c= f5 c+ cPRE f6 cSUC f7 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c==> c< f8 cCARD * * part cnode f1 cPOWER * part cinverse * part cface_map f1 cSUC f7 f4 c==> cIN f0 f2 c==> cis_normal f1 f2 c/\ c<= c+ ccomplement_index f1 f4 f7 f8 ccomplement_index f1 f4 cSUC f7 c<= ccomplement_index f1 f4 cSUC f7 ccomplement_index f1 f4 f5
+ |- ((\m. (!n. (m <= (m + n)))) ny)
T * / ! c<= b0 c+ b0 b1 f0
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
- |- (((!x'. (((\y. (((((hyp'y H) NF) L) x) = y)) x') ==> (?y. (((((hyp'y H) NF) L) x) = y)))) ==> ((?y. (((((hyp'y H) NF) L) x) = y)) ==> (?y. (((((hyp'y H) NF) L) x) = y)))) = ((?y. (((((hyp'y H) NF) L) x) = y)) ==> (?y. (((((hyp'y H) NF) L) x) = y))))
T c= c==> ! c==> * / c= chyp'y f0 f1 f2 f3 b1 b0 c? / c= chyp'y f0 f1 f2 f3 b1 c==> c? / c= chyp'y f0 f1 f2 f3 b0 c? / c= chyp'y f0 f1 f2 f3 b0 c==> c? / c= chyp'y f0 f1 f2 f3 b0 c? / c= chyp'y f0 f1 f2 f3 b0
- (~ (L IN ((final_loops H) NF))), (is_restricted H), (((inv_loop_map L) z) = ((node_map H) z)), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((((loop_map L) y) = ((inverse (node_map H)) y)) /\ (~ (((node H) y) = ((node H) x)))), (L IN NF), ((is_normal H) NF) |- ((((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) <= (pre_card_dart_of_loop L)) /\ (((inv_loop_map L) z) = (((POWER (loop_map L)) (((index L) ((loop_map L) y)) ((inv_loop_map L) z))) ((loop_map L) y)))) ==> (!y'. (((in_dart_of_loop y') ((((loop2_transform H) NF) L) x)) = ((?i. ((i <= (((index L) ((loop_map L) y)) ((inv_loop_map L) z))) /\ (y' = (((POWER (loop_map L)) i) ((loop_map L) y))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= cinv_loop_map f0 f3 cnode_map f1 f3 c==> c= chyp'y f1 f2 f0 f4 f5 c==> c= chyp'z f1 f2 f0 f4 f3 c==> c= chyp'p f1 f2 f0 f4 f6 c==> c/\ cis_marked c, f1 c, f2 c, f0 f4 c~ cIN f0 * * part cfinal_loops f1 f2 c==> c/\ c= cloop_map f0 f5 cinverse * part cnode_map f1 f5 c~ c= * * part cnode f1 f5 * * part cnode f1 f4 c==> cIN f0 f2 c==> cis_normal f1 f2 c==> c/\ c<= cindex f0 cloop_map f0 f5 cinv_loop_map f0 f3 cpre_card_dart_of_loop f0 c= cinv_loop_map f0 f3 cPOWER * part cloop_map f0 cindex f0 cloop_map f0 f5 cinv_loop_map f0 f3 cloop_map f0 f5 ! c= cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f4 c\/ c? / c/\ c<= b1 cindex f0 cloop_map f0 f5 cinv_loop_map f0 f3 c= b0 cPOWER * part cloop_map f0 b1 cloop_map f0 f5 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 f6 c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c< b2 cCARD * * part cnode f1 cPOWER * part cface_map f1 b1 f5 c= b0 cPOWER * part cinverse * part cnode_map f1 b2 cPOWER * part cface_map f1 b1 f5
+ (~ (L IN ((final_loops H) NF))), (is_restricted H), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- (((\m. (((((hyp'p H) NF) L) x) = m)) m) ==> (!y'. (((in_dart_of_loop y') ((((loop2_transform H) NF) L) x)) = ((?i. ((i <= (((index L) ((inverse (node_map H)) y)) ((node_map H) z))) /\ (y' = (((POWER (loop_map L)) i) ((inverse (node_map H)) y))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= ((((hyp'p H) NF) L) x)) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= chyp'y f1 f2 f0 f3 f4 c==> c= chyp'z f1 f2 f0 f3 f5 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c==> cIN f0 f2 c==> cis_normal f1 f2 c==> * / c= chyp'p f1 f2 f0 f3 b0 f6 ! c= cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f3 c\/ c? / c/\ c<= b1 cindex f0 cinverse * part cnode_map f1 f4 cnode_map f1 f5 c= b0 cPOWER * part cloop_map f0 b1 cinverse * part cnode_map f1 f4 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 chyp'p f1 f2 f0 f3 c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c< b2 cCARD * * part cnode f1 cPOWER * part cface_map f1 b1 f4 c= b0 cPOWER * part cinverse * part cnode_map f1 b2 cPOWER * part cface_map f1 b1 f4
+ (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (y' = (((POWER (inverse (node_map H))) b) (((POWER (face_map H)) a) y))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((NUMERAL (BIT1 _0)) <= a), ((NUMERAL (BIT1 _0)) <= b), (b < (CARD ((node H) (((POWER (face_map H)) a) y)))), (L IN NF), ((is_normal H) NF) |- ((?d. (m = (a + d))) ==> (?i. ((i <= (ny + (((complement_index H) z) m))) /\ (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))))))
T c==> ! c==> c<= b0 ccomplement_index f0 f1 f2 c= cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 b0 cloop_map f4 f7 ccomplement f0 f1 b0 c==> c~ cIN f4 * * part cfinal_loops f0 f3 c==> cis_restricted f0 c==> c= f8 cPOWER * part cinverse * part cnode_map f0 f9 cPOWER * part cface_map f0 f10 f7 c==> c= chyp'y f0 f3 f4 f5 f7 c==> c= chyp'z f0 f3 f4 f5 f1 c==> c= chyp'p f0 f3 f4 f5 f2 c==> c/\ cis_marked c, f0 c, f3 c, f4 f5 c~ cIN f4 * * part cfinal_loops f0 f3 c==> c<= cNUMERAL cBIT1 c_0 f10 c==> c<= cNUMERAL cBIT1 c_0 f9 c==> c< f9 cCARD * * part cnode f0 cPOWER * part cface_map f0 f10 f7 c==> cIN f4 f3 c==> cis_normal f0 f3 c==> c? / c= f2 c+ f10 b0 c? / c/\ c<= b0 c+ f6 ccomplement_index f0 f1 f2 c= f8 cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 b0 cloop_map f4 f7
+ ((NUMERAL (BIT1 _0)) <= b) |- (((NUMERAL (BIT1 _0)) <= b) = T)
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= c<= cNUMERAL cBIT1 c_0 f0 cT
- |- ((((((hyp'y H) NF) L) x) = y) ==> (?y. (((((hyp'y H) NF) L) x) = y)))
T c==> c= chyp'y f0 f1 f2 f3 f4 c? / c= chyp'y f0 f1 f2 f3 b0
+ (y' = (((complement H) z) (SUC d))) |- (((y' = (((POWER (inverse (node_map H))) b) (((POWER (inverse (face_map H))) (SUC a)) z))) ==> (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))) = (((((complement H) z) (SUC d)) = (((POWER (inverse (node_map H))) b) (((POWER (inverse (face_map H))) (SUC a)) z))) ==> (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))))
T c==> c= f0 ccomplement f1 f2 cSUC f3 c= c==> c= f0 cPOWER * part cinverse * part cnode_map f1 f4 cPOWER * part cinverse * part cface_map f1 cSUC f5 f2 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f6 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cface_map f1 b0 f7 c= f0 cPOWER * part cinverse * part cnode_map f1 b1 cPOWER * part cface_map f1 b0 f7 c==> c= ccomplement f1 f2 cSUC f3 cPOWER * part cinverse * part cnode_map f1 f4 cPOWER * part cinverse * part cface_map f1 cSUC f5 f2 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f6 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cface_map f1 b0 f7 c= f0 cPOWER * part cinverse * part cnode_map f1 b1 cPOWER * part cface_map f1 b0 f7
+ |- ((\n. (!p. (((m + n) <= (m + p)) = (n <= p)))) n)
T * / ! c= c<= c+ f0 b0 c+ f0 b1 c<= b0 b1 f1
+ |- ((((((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y)) = (((POWER (face_map H)) (m - a)) y)) ==> (((b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y))))) /\ (y' = (((POWER (inverse (node_map H))) b) (((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y))))) ==> (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))))) = (((((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y)) = (((POWER (face_map H)) ((SUC m) - (SUC a))) y)) ==> (((b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y))))) /\ (y' = (((POWER (inverse (node_map H))) b) (((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y))))) ==> (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))))))
T c= c==> c= cPOWER * part cinverse * part cface_map f0 cSUC f1 cPOWER * part cface_map f0 cSUC f2 f3 cPOWER * part cface_map f0 c- f2 f1 f3 c==> c/\ c< f4 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f1 cPOWER * part cface_map f0 cSUC f2 f3 c= f5 cPOWER * part cinverse * part cnode_map f0 f4 cPOWER * part cinverse * part cface_map f0 cSUC f1 cPOWER * part cface_map f0 cSUC f2 f3 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cface_map f0 b0 f3 c= f5 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cface_map f0 b0 f3 c==> c= cPOWER * part cinverse * part cface_map f0 cSUC f1 cPOWER * part cface_map f0 cSUC f2 f3 cPOWER * part cface_map f0 c- cSUC f2 cSUC f1 f3 c==> c/\ c< f4 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f1 cPOWER * part cface_map f0 cSUC f2 f3 c= f5 cPOWER * part cinverse * part cnode_map f0 f4 cPOWER * part cinverse * part cface_map f0 cSUC f1 cPOWER * part cface_map f0 cSUC f2 f3 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cface_map f0 b0 f3 c= f5 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cface_map f0 b0 f3
+ |- (((!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) ==> (!m. (!p. ((?n. ((m <= n) /\ (n <= p))) ==> (m <= p))))) = (!m. (!p. ((?n. ((m <= n) /\ (n <= p))) ==> (m <= p)))))
T c= c==> ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 ! ! c==> c? / c/\ c<= b0 b2 c<= b2 b1 c<= b0 b1 ! ! c==> c? / c/\ c<= b0 b2 c<= b2 b1 c<= b0 b1
+ (m = (a + (SUC s))), ((NUMERAL (BIT1 _0)) <= b) |- ((m = (a + (SUC s))) /\ (((((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y)) = (((POWER (face_map H)) (m - a)) y)) ==> (((b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y))))) /\ (y' = (((POWER (inverse (node_map H))) b) (((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y))))) ==> (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))))))
T c==> c= f0 c+ f1 cSUC f2 c==> c<= cNUMERAL cBIT1 c_0 f3 c/\ c= f0 c+ f1 cSUC f2 c==> c= cPOWER * part cinverse * part cface_map f4 cSUC f1 cPOWER * part cface_map f4 cSUC f0 f5 cPOWER * part cface_map f4 c- f0 f1 f5 c==> c/\ c< f3 cCARD * * part cnode f4 cPOWER * part cinverse * part cface_map f4 cSUC f1 cPOWER * part cface_map f4 cSUC f0 f5 c= f6 cPOWER * part cinverse * part cnode_map f4 f3 cPOWER * part cinverse * part cface_map f4 cSUC f1 cPOWER * part cface_map f4 cSUC f0 f5 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f0 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f4 cPOWER * part cface_map f4 b0 f5 c= f6 cPOWER * part cinverse * part cnode_map f4 b1 cPOWER * part cface_map f4 b0 f5
- (((((hyp'p H) NF) L) x) = m) |- ((\m. (((((hyp'p H) NF) L) x) = m)) m)
T c==> c= chyp'p f0 f1 f2 f3 f4 * / c= chyp'p f0 f1 f2 f3 b0 f4
- |- (((!x. (!k. ((((path_of_loop L) x) k) = (((POWER (loop_map L)) k) x)))) ==> ((\x. (!k. ((((path_of_loop L) x) k) = (((POWER (loop_map L)) k) x)))) x)) = ((\x. (!k. ((((path_of_loop L) x) k) = (((POWER (loop_map L)) k) x)))) x))
T c= c==> ! ! c= cpath_of_loop f0 b0 b1 cPOWER * part cloop_map f0 b1 b0 * / ! c= cpath_of_loop f0 b0 b1 cPOWER * part cloop_map f0 b1 b0 f1 * / ! c= cpath_of_loop f0 b0 b1 cPOWER * part cloop_map f0 b1 b0 f1
- |- (((!L. (!x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))))))) ==> ((\L. (!x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))))))) L)) = ((\L. (!x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))))))) L))
T c= c==> ! ! c= * * * * part cpath2_transform f0 f1 b0 b1 * * * part cglue * * part cpath_of_loop b0 cinverse * part cnode_map f0 chyp'y f0 f1 b0 b1 * * part ccomplement f0 chyp'z f0 f1 b0 b1 cindex b0 cinverse * part cnode_map f0 chyp'y f0 f1 b0 b1 cnode_map f0 chyp'z f0 f1 b0 b1 * / ! c= * * * * part cpath2_transform f0 f1 b0 b1 * * * part cglue * * part cpath_of_loop b0 cinverse * part cnode_map f0 chyp'y f0 f1 b0 b1 * * part ccomplement f0 chyp'z f0 f1 b0 b1 cindex b0 cinverse * part cnode_map f0 chyp'y f0 f1 b0 b1 cnode_map f0 chyp'z f0 f1 b0 b1 f2 * / ! c= * * * * part cpath2_transform f0 f1 b0 b1 * * * part cglue * * part cpath_of_loop b0 cinverse * part cnode_map f0 chyp'y f0 f1 b0 b1 * * part ccomplement f0 chyp'z f0 f1 b0 b1 cindex b0 cinverse * part cnode_map f0 chyp'y f0 f1 b0 b1 cnode_map f0 chyp'z f0 f1 b0 b1 f2
+ (~ (L IN ((final_loops H) NF))), (is_restricted H), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (((in_dart_of_loop ((loop_map L) y)) ((((loop2_transform H) NF) L) x)) /\ (((pre_card_dart_of_loop ((((loop2_transform H) NF) L) x)) = (ny + (((complement_index H) z) m))) /\ ((!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))) /\ (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i))))))), (L IN NF), ((in_dart_of_loop ((loop_map L) y)) ((((loop2_transform H) NF) L) x)), ((is_normal H) NF) |- (((in_dart_of_loop y') ((((loop2_transform H) NF) L) x)) = ((?i. ((i <= ny) /\ (y' = (((POWER (loop_map L)) i) ((loop_map L) y))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= chyp'y f1 f2 f0 f3 f4 c==> c= chyp'z f1 f2 f0 f3 f5 c==> c= chyp'p f1 f2 f0 f3 f6 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c==> c/\ cin_dart_of_loop cloop_map f0 f4 cloop2_transform f1 f2 f0 f3 c/\ c= cpre_card_dart_of_loop cloop2_transform f1 f2 f0 f3 c+ f7 ccomplement_index f1 f5 f6 c/\ ! c==> c<= b0 f7 c= cPOWER * part cloop_map cloop2_transform f1 f2 f0 f3 b0 cloop_map f0 f4 cPOWER * part cloop_map f0 b0 cloop_map f0 f4 ! c==> c<= b0 ccomplement_index f1 f5 f6 c= cPOWER * part cloop_map cloop2_transform f1 f2 f0 f3 c+ f7 b0 cloop_map f0 f4 ccomplement f1 f5 b0 c==> cIN f0 f2 c==> cin_dart_of_loop cloop_map f0 f4 cloop2_transform f1 f2 f0 f3 c==> cis_normal f1 f2 c= cin_dart_of_loop f8 cloop2_transform f1 f2 f0 f3 c\/ c? / c/\ c<= b0 f7 c= f8 cPOWER * part cloop_map f0 b0 cloop_map f0 f4 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f6 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cface_map f1 b0 f4 c= f8 cPOWER * part cinverse * part cnode_map f1 b1 cPOWER * part cface_map f1 b0 f4
+ (~ (L IN ((final_loops H) NF))), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- (((in_dart_of_loop ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((((loop2_transform H) NF) L) x)) /\ (((pre_card_dart_of_loop ((((loop2_transform H) NF) L) x)) = ((((card2_transform H) NF) L) x)) /\ ((!i. ((i <= (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) = (((POWER (loop_map L)) i) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))))) /\ (!i. ((i <= (((complement_index H) ((((hyp'z H) NF) L) x)) ((((hyp'p H) NF) L) x))) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) ((((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))) + i)) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) = (((complement H) ((((hyp'z H) NF) L) x)) i)))))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c/\ cin_dart_of_loop cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 cloop2_transform f1 f2 f0 f3 c/\ c= cpre_card_dart_of_loop cloop2_transform f1 f2 f0 f3 ccard2_transform f1 f2 f0 f3 c/\ ! c==> c<= b0 cindex f0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 cnode_map f1 chyp'z f1 f2 f0 f3 c= cPOWER * part cloop_map cloop2_transform f1 f2 f0 f3 b0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 cPOWER * part cloop_map f0 b0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 ! c==> c<= b0 ccomplement_index f1 chyp'z f1 f2 f0 f3 chyp'p f1 f2 f0 f3 c= cPOWER * part cloop_map cloop2_transform f1 f2 f0 f3 c+ cindex f0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 cnode_map f1 chyp'z f1 f2 f0 f3 b0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 ccomplement f1 chyp'z f1 f2 f0 f3 b0
+ |- (((!x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x)))) ==> ((\x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x)))) x)) = ((\x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x)))) x))
T c= c==> ! c= cPOWER f0 c+ f1 f2 b0 cPOWER f0 f1 cPOWER f0 f2 b0 * / c= cPOWER f0 c+ f1 f2 b0 cPOWER f0 f1 cPOWER f0 f2 b0 f3 * / c= cPOWER f0 c+ f1 f2 b0 cPOWER f0 f1 cPOWER f0 f2 b0 f3
+ ((NUMERAL (BIT1 _0)) <= b) |- ((m = (a + (SUC s))) ==> (((((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y)) = (((POWER (face_map H)) (m - a)) y)) ==> (((b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y))))) /\ (y' = (((POWER (inverse (node_map H))) b) (((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y))))) ==> (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))))))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c==> c= f1 c+ f2 cSUC f3 c==> c= cPOWER * part cinverse * part cface_map f4 cSUC f2 cPOWER * part cface_map f4 cSUC f1 f5 cPOWER * part cface_map f4 c- f1 f2 f5 c==> c/\ c< f0 cCARD * * part cnode f4 cPOWER * part cinverse * part cface_map f4 cSUC f2 cPOWER * part cface_map f4 cSUC f1 f5 c= f6 cPOWER * part cinverse * part cnode_map f4 f0 cPOWER * part cinverse * part cface_map f4 cSUC f2 cPOWER * part cface_map f4 cSUC f1 f5 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f1 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f4 cPOWER * part cface_map f4 b0 f5 c= f6 cPOWER * part cinverse * part cnode_map f4 b1 cPOWER * part cface_map f4 b0 f5
+ ((SUC d) <= m), (b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC d)) z)))) |- (((is_node_nondegenerate H) /\ (z IN (dart H))) ==> ((((((complement_index H) z) d) + b) <= (((complement_index H) z) (SUC d))) /\ ((((complement_index H) z) (SUC d)) <= (((complement_index H) z) m))))
T c==> c<= cSUC f0 f1 c==> c< f2 cCARD * * part cnode f3 cPOWER * part cinverse * part cface_map f3 cSUC f0 f4 c==> c/\ cis_node_nondegenerate f3 cIN f4 * part cdart f3 c/\ c<= c+ ccomplement_index f3 f4 f0 f2 ccomplement_index f3 f4 cSUC f0 c<= ccomplement_index f3 f4 cSUC f0 ccomplement_index f3 f4 f1
+ (m = (a + d)) |- (d <= m)
T c==> c= f0 c+ f1 f2 c<= f2 f0
+ (is_restricted H), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x))))) |- (!y. (((in_dart_of_loop y) ((((loop2_transform H) NF) L) x)) = ((?i. ((i <= (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))) /\ (y = (((POWER (loop_map L)) i) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= ((((hyp'p H) NF) L) x)) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) ((((hyp'y H) NF) L) x))))) /\ (y = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) ((((hyp'y H) NF) L) x)))))))))))))
T c==> cis_restricted f0 c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 c==> c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop f3 f2 c= chead_of_atom f0 f1 f3 f3 ! c= cin_dart_of_loop b0 cloop2_transform f0 f1 f2 f3 c\/ c? / c/\ c<= b1 cindex f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 cnode_map f0 chyp'z f0 f1 f2 f3 c= b0 cPOWER * part cloop_map f2 b1 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 chyp'p f0 f1 f2 f3 c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c< b2 cCARD * * part cnode f0 cPOWER * part cface_map f0 b1 chyp'y f0 f1 f2 f3 c= b0 cPOWER * part cinverse * part cnode_map f0 b2 cPOWER * part cface_map f0 b1 chyp'y f0 f1 f2 f3
+ ((plain_hypermap H) /\ ((is_node_nondegenerate H) /\ (z IN (dart H)))) |- ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) z))))) ==> ((((complement H) z) ((((complement_index H) z) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) z)))))) /\ (!n. (((is_contour H) ((complement H) z)) n)))
T c==> c/\ cplain_hypermap f0 c/\ cis_node_nondegenerate f0 cIN f1 * part cdart f0 c/\ ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 ! cis_contour f0 * * part ccomplement f0 f1 b0
- (!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))), (i <= ny) |- (T = ((((POWER (loop_map L)) i) ((loop_map L) y)) = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f5 cPOWER * part cloop_map f3 b0 cloop_map f3 f5 c==> c<= f6 f0 c= cT c= cPOWER * part cloop_map f3 f6 cloop_map f3 f5 cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 f6 cloop_map f3 f5
+ |- (((!m. (!n. ((SUC (m + n)) = ((SUC m) + n)))) ==> ((\m. (!n. ((SUC (m + n)) = ((SUC m) + n)))) m)) = ((\m. (!n. ((SUC (m + n)) = ((SUC m) + n)))) m))
T c= c==> ! ! c= cSUC c+ b0 b1 c+ cSUC b0 b1 * / ! c= cSUC c+ b0 b1 c+ cSUC b0 b1 f0 * / ! c= cSUC c+ b0 b1 c+ cSUC b0 b1 f0
+ (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF), ((\j. (((NUMERAL (BIT1 _0)) <= a) /\ ((a <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) a) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) a) y)))))))) b) |- (((\j. (((NUMERAL (BIT1 _0)) <= a) /\ ((a <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) a) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) a) y)))))))) b) /\ (?i. ((i <= (ny + (((complement_index H) z) m))) /\ (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))))))
T c==> ! c==> c<= b0 ccomplement_index f0 f1 f2 c= cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 b0 cloop_map f4 f7 ccomplement f0 f1 b0 c==> c~ cIN f4 * * part cfinal_loops f0 f3 c==> cis_restricted f0 c==> c= chyp'y f0 f3 f4 f5 f7 c==> c= chyp'z f0 f3 f4 f5 f1 c==> c= chyp'p f0 f3 f4 f5 f2 c==> c/\ cis_marked c, f0 c, f3 c, f4 f5 c~ cIN f4 * * part cfinal_loops f0 f3 c==> cIN f4 f3 c==> cis_normal f0 f3 c==> * / c/\ c<= cNUMERAL cBIT1 c_0 f8 c/\ c<= f8 f2 c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c< b0 cCARD * * part cnode f0 cPOWER * part cface_map f0 f8 f7 c= f9 cPOWER * part cinverse * part cnode_map f0 b0 cPOWER * part cface_map f0 f8 f7 f10 c/\ * / c/\ c<= cNUMERAL cBIT1 c_0 f8 c/\ c<= f8 f2 c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c< b0 cCARD * * part cnode f0 cPOWER * part cface_map f0 f8 f7 c= f9 cPOWER * part cinverse * part cnode_map f0 b0 cPOWER * part cface_map f0 f8 f7 f10 c? / c/\ c<= b0 c+ f6 ccomplement_index f0 f1 f2 c= f9 cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 b0 cloop_map f4 f7
+ (!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))), (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- (((\i. ((i <= (ny + (((complement_index H) z) m))) /\ (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))))) i) ==> ((?i. ((i <= ny) /\ (y' = (((POWER (loop_map L)) i) ((loop_map L) y))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f5 cPOWER * part cloop_map f3 b0 cloop_map f3 f5 c==> ! c==> c<= b0 ccomplement_index f1 f6 f7 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 c+ f0 b0 cloop_map f3 f5 ccomplement f1 f6 b0 c==> c~ cIN f3 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= chyp'y f1 f2 f3 f4 f5 c==> c= chyp'z f1 f2 f3 f4 f6 c==> c= chyp'p f1 f2 f3 f4 f7 c==> c/\ cis_marked c, f1 c, f2 c, f3 f4 c~ cIN f3 * * part cfinal_loops f1 f2 c==> cIN f3 f2 c==> cis_normal f1 f2 c==> * / c/\ c<= b0 c+ f0 ccomplement_index f1 f6 f7 c= f8 cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f5 f9 c\/ c? / c/\ c<= b0 f0 c= f8 cPOWER * part cloop_map f3 b0 cloop_map f3 f5 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f7 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cface_map f1 b0 f5 c= f8 cPOWER * part cinverse * part cnode_map f1 b1 cPOWER * part cface_map f1 b0 f5
- |- (((!L. (!x. (((in_dart_of_loop x) L) ==> ((in_dart_of_loop ((loop_map L) x)) L)))) ==> ((\L. (!x. (((in_dart_of_loop x) L) ==> ((in_dart_of_loop ((loop_map L) x)) L)))) L)) = ((\L. (!x. (((in_dart_of_loop x) L) ==> ((in_dart_of_loop ((loop_map L) x)) L)))) L))
T c= c==> ! ! c==> cin_dart_of_loop b1 b0 cin_dart_of_loop cloop_map b0 b1 b0 * / ! c==> cin_dart_of_loop b1 b0 cin_dart_of_loop cloop_map b0 b1 b0 f0 * / ! c==> cin_dart_of_loop b1 b0 cin_dart_of_loop cloop_map b0 b1 b0 f0
+ |- ((\n. ((m <= n) = (m < (SUC n)))) n)
T * / c= c<= f0 b0 c< f0 cSUC b0 f1
+ (~ (L IN ((final_loops H) NF))), (((((hyp'z H) NF) L) x) = z), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- (((z IN (dart H)) ==> (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))) = (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c= chyp'z f1 f2 f0 f3 f4 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c==> cIN f0 f2 c==> cis_normal f1 f2 c= c==> cIN f4 * part cdart f1 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f5 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cface_map f1 b0 f6 c= f7 cPOWER * part cinverse * part cnode_map f1 b1 cPOWER * part cface_map f1 b0 f6 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f5 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cface_map f1 b0 f6 c= f7 cPOWER * part cinverse * part cnode_map f1 b1 cPOWER * part cface_map f1 b0 f6
- (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- (?i. ((i <= (ny + (((complement_index H) z) m))) /\ (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)))))
T c==> ! c==> c<= b0 ccomplement_index f0 f1 f2 c= cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 b0 cloop_map f4 f7 ccomplement f0 f1 b0 c==> c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cface_map f0 b0 f7 c= f8 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cface_map f0 b0 f7 c==> c~ cIN f4 * * part cfinal_loops f0 f3 c==> cis_restricted f0 c==> c= chyp'y f0 f3 f4 f5 f7 c==> c= chyp'z f0 f3 f4 f5 f1 c==> c= chyp'p f0 f3 f4 f5 f2 c==> c/\ cis_marked c, f0 c, f3 c, f4 f5 c~ cIN f4 * * part cfinal_loops f0 f3 c==> cIN f4 f3 c==> cis_normal f0 f3 c? / c/\ c<= b0 c+ f6 ccomplement_index f0 f1 f2 c= f8 cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 b0 cloop_map f4 f7
+ (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (i = (ny + (SUC d))), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((SUC d) <= (((complement_index H) z) m)), (L IN NF), ((is_normal H) NF) |- (((!x. (((\i. (?j. ((i < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) z)))) /\ ((SUC d) = ((((complement_index H) z) i) + j))))))) x) ==> (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))))) ==> ((?i. (?j. ((i < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) z)))) /\ ((SUC d) = ((((complement_index H) z) i) + j))))))) ==> (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))))) = ((?i. (?j. ((i < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) z)))) /\ ((SUC d) = ((((complement_index H) z) i) + j))))))) ==> (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))))
T c==> ! c==> c<= b0 ccomplement_index f0 f1 f2 c= cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 b0 cloop_map f4 f7 ccomplement f0 f1 b0 c==> c~ cIN f4 * * part cfinal_loops f0 f3 c==> cis_restricted f0 c==> c= f8 cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 f9 cloop_map f4 f7 c==> c= chyp'y f0 f3 f4 f5 f7 c==> c= chyp'z f0 f3 f4 f5 f1 c==> c= f9 c+ f6 cSUC f10 c==> c= chyp'p f0 f3 f4 f5 f2 c==> c/\ cis_marked c, f0 c, f3 c, f4 f5 c~ cIN f4 * * part cfinal_loops f0 f3 c==> c<= cSUC f10 ccomplement_index f0 f1 f2 c==> cIN f4 f3 c==> cis_normal f0 f3 c= c==> ! c==> * / c? / c/\ c< b1 f2 c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c< b2 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b1 f1 c= cSUC f10 c+ ccomplement_index f0 f1 b1 b2 b0 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 f2 c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c< b2 cCARD * * part cnode f0 cPOWER * part cface_map f0 b1 f7 c= f8 cPOWER * part cinverse * part cnode_map f0 b2 cPOWER * part cface_map f0 b1 f7 c==> c? / c? / c/\ c< b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= cSUC f10 c+ ccomplement_index f0 f1 b0 b1 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cface_map f0 b0 f7 c= f8 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cface_map f0 b0 f7 c==> c? / c? / c/\ c< b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= cSUC f10 c+ ccomplement_index f0 f1 b0 b1 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cface_map f0 b0 f7 c= f8 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cface_map f0 b0 f7
+ |- ((\L. (!x. ((((is_normal H) NF) /\ ((L IN NF) /\ ((in_dart_of_loop x) L))) ==> (x IN (dart H))))) L)
T * / ! c==> c/\ cis_normal f0 f1 c/\ cIN b0 f1 cin_dart_of_loop b1 b0 cIN b1 * part cdart f0 f2
+ ((NUMERAL (BIT1 _0)) <= (CARD ((node H) (((POWER (inverse (face_map H))) (SUC d)) z)))), (b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC d)) z)))) |- (((NUMERAL (BIT1 _0)) <= (CARD ((node H) (((POWER (inverse (face_map H))) (SUC d)) z)))) /\ (b < (SUC (PRE (CARD ((node H) (((POWER (inverse (face_map H))) (SUC d)) z)))))))
T c==> c<= cNUMERAL cBIT1 c_0 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f1 f2 c==> c< f3 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f1 f2 c/\ c<= cNUMERAL cBIT1 c_0 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f1 f2 c< f3 cSUC cPRE cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f1 f2
+ |- ((\p. (((m <= n) /\ (n <= p)) ==> (m <= p))) p)
T * / c==> c/\ c<= f0 f1 c<= f1 b0 c<= f0 b0 f2
+ |- ((\H. (!x. (!m. (!k. (((is_node_nondegenerate H) /\ ((x IN (dart H)) /\ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (((complement_index H) x) m))))) ==> (?i. (?j. ((i < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x)))) /\ (k = ((((complement_index H) x) i) + j)))))))))))) H)
T * / ! ! ! c==> c/\ cis_node_nondegenerate b0 c/\ cIN b1 * part cdart b0 c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 ccomplement_index b0 b1 b2 c? / c? / c/\ c< b4 b2 c/\ c<= cNUMERAL cBIT1 c_0 b5 c/\ c< b5 cCARD * * part cnode b0 cPOWER * part cinverse * part cface_map b0 cSUC b4 b1 c= b3 c+ ccomplement_index b0 b1 b4 b5 f0
+ |- (((!n. ((m + n) = (n + m))) ==> ((\n. ((m + n) = (n + m))) n)) = ((\n. ((m + n) = (n + m))) n))
T c= c==> ! c= c+ f0 b0 c+ b0 f0 * / c= c+ f0 b0 c+ b0 f0 f1 * / c= c+ f0 b0 c+ b0 f0 f1
+ (y' = (((POWER (loop_map L)) i) ((loop_map L) y))), (i <= ny) |- ((\i. ((i <= ny) /\ (y' = (((POWER (loop_map L)) i) ((loop_map L) y))))) i)
T c==> c= f0 cPOWER * part cloop_map f1 f2 cloop_map f1 f3 c==> c<= f2 f4 * / c/\ c<= b0 f4 c= f0 cPOWER * part cloop_map f1 b0 cloop_map f1 f3 f2
+ |- ((\t. (t \/ (~ t))) (i <= ny))
T * / c\/ b0 c~ b0 c<= f0 f1
+ (((((complement_index H) z) d) + b) <= (((complement_index H) z) m)) |- ((y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + ((((complement_index H) z) d) + b))) ((loop_map L) y))) = ((((((complement_index H) z) d) + b) <= (((complement_index H) z) m)) /\ (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + ((((complement_index H) z) d) + b))) ((loop_map L) y)))))
T c==> c<= c+ ccomplement_index f0 f1 f2 f3 ccomplement_index f0 f1 f4 c= c= f5 cPOWER * part cloop_map cloop2_transform f0 f6 f7 f8 c+ f9 c+ ccomplement_index f0 f1 f2 f3 cloop_map f7 f10 c/\ c<= c+ ccomplement_index f0 f1 f2 f3 ccomplement_index f0 f1 f4 c= f5 cPOWER * part cloop_map cloop2_transform f0 f6 f7 f8 c+ f9 c+ ccomplement_index f0 f1 f2 f3 cloop_map f7 f10
+ (is_restricted H) |- ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x)))))))
T c==> cis_restricted f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0
+ (~ (L IN ((final_loops H) NF))), (is_restricted H), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- (!y. (((\y. (((((hyp'y H) NF) L) x) = y)) y) ==> (!y'. (((in_dart_of_loop y') ((((loop2_transform H) NF) L) x)) = ((?i. ((i <= (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))) /\ (y' = (((POWER (loop_map L)) i) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= ((((hyp'p H) NF) L) x)) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) ((((hyp'y H) NF) L) x))))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) ((((hyp'y H) NF) L) x)))))))))))))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c==> cIN f0 f2 c==> cis_normal f1 f2 ! c==> * / c= chyp'y f1 f2 f0 f3 b1 b0 ! c= cin_dart_of_loop b1 cloop2_transform f1 f2 f0 f3 c\/ c? / c/\ c<= b2 cindex f0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 cnode_map f1 chyp'z f1 f2 f0 f3 c= b1 cPOWER * part cloop_map f0 b2 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 chyp'p f1 f2 f0 f3 c/\ c<= cNUMERAL cBIT1 c_0 b3 c/\ c< b3 cCARD * * part cnode f1 cPOWER * part cface_map f1 b2 chyp'y f1 f2 f0 f3 c= b1 cPOWER * part cinverse * part cnode_map f1 b3 cPOWER * part cface_map f1 b2 chyp'y f1 f2 f0 f3
+ (!H. (!x. (!n. (((is_node_nondegenerate H) /\ (x IN (dart H))) ==> ((((complement_index H) x) n) < (((complement_index H) x) (SUC n))))))) |- ((\x. (!n. (((is_node_nondegenerate H) /\ (x IN (dart H))) ==> ((((complement_index H) x) n) < (((complement_index H) x) (SUC n)))))) x)
T c==> ! ! ! c==> c/\ cis_node_nondegenerate b0 cIN b1 * part cdart b0 c< ccomplement_index b0 b1 b2 ccomplement_index b0 b1 cSUC b2 * / ! c==> c/\ cis_node_nondegenerate f0 cIN b0 * part cdart f0 c< ccomplement_index f0 b0 b1 ccomplement_index f0 b0 cSUC b1 f1
+ ((NUMERAL (BIT1 _0)) <= b), (b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC d)) z)))) |- ((((((complement H) z) ((((complement_index H) z) d) + b)) = (((POWER (inverse (node_map H))) b) (((POWER (inverse (face_map H))) (SUC d)) z))) ==> (y' = (((complement H) z) ((((complement_index H) z) d) + b)))) = (((((NUMERAL (BIT1 _0)) <= b) /\ (b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC d)) z))))) ==> ((((complement H) z) ((((complement_index H) z) d) + b)) = (((POWER (inverse (node_map H))) b) (((POWER (inverse (face_map H))) (SUC d)) z)))) ==> (y' = (((complement H) z) ((((complement_index H) z) d) + b)))))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c==> c< f0 cCARD * * part cnode f1 cPOWER * part cinverse * part cface_map f1 cSUC f2 f3 c= c==> c= ccomplement f1 f3 c+ ccomplement_index f1 f3 f2 f0 cPOWER * part cinverse * part cnode_map f1 f0 cPOWER * part cinverse * part cface_map f1 cSUC f2 f3 c= f4 ccomplement f1 f3 c+ ccomplement_index f1 f3 f2 f0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c< f0 cCARD * * part cnode f1 cPOWER * part cinverse * part cface_map f1 cSUC f2 f3 c= ccomplement f1 f3 c+ ccomplement_index f1 f3 f2 f0 cPOWER * part cinverse * part cnode_map f1 f0 cPOWER * part cinverse * part cface_map f1 cSUC f2 f3 c= f4 ccomplement f1 f3 c+ ccomplement_index f1 f3 f2 f0
+ (!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) |- (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))
T c==> ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 ! ! c==> c/\ c<= f0 b0 c<= b0 b1 c<= f0 b1
+ (!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) |- (!p. (((m <= n) /\ (n <= p)) ==> (m <= p)))
T c==> ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 ! c==> c/\ c<= f0 f1 c<= f1 b0 c<= f0 b0
+ (i <= ny) |- ((((i <= ny) /\ (ny <= (ny + (((complement_index H) z) m)))) ==> (i <= (ny + (((complement_index H) z) m)))) = (i <= (ny + (((complement_index H) z) m))))
T c==> c<= f0 f1 c= c==> c/\ c<= f0 f1 c<= f1 c+ f1 ccomplement_index f2 f3 f4 c<= f0 c+ f1 ccomplement_index f2 f3 f4 c<= f0 c+ f1 ccomplement_index f2 f3 f4
+ (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (i = (ny + (SUC d))), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((SUC d) <= (((complement_index H) z) m)), (L IN NF), ((is_normal H) NF) |- (((!x. (((\j. ((a < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))) /\ ((SUC d) = ((((complement_index H) z) a) + j)))))) x) ==> (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))))) ==> ((?j. ((a < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))) /\ ((SUC d) = ((((complement_index H) z) a) + j)))))) ==> (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))))) = ((?j. ((a < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))) /\ ((SUC d) = ((((complement_index H) z) a) + j)))))) ==> (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))))
T c==> ! c==> c<= b0 ccomplement_index f0 f1 f2 c= cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 b0 cloop_map f4 f7 ccomplement f0 f1 b0 c==> c~ cIN f4 * * part cfinal_loops f0 f3 c==> cis_restricted f0 c==> c= f8 cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 f9 cloop_map f4 f7 c==> c= chyp'y f0 f3 f4 f5 f7 c==> c= chyp'z f0 f3 f4 f5 f1 c==> c= f9 c+ f6 cSUC f10 c==> c= chyp'p f0 f3 f4 f5 f2 c==> c/\ cis_marked c, f0 c, f3 c, f4 f5 c~ cIN f4 * * part cfinal_loops f0 f3 c==> c<= cSUC f10 ccomplement_index f0 f1 f2 c==> cIN f4 f3 c==> cis_normal f0 f3 c= c==> ! c==> * / c/\ c< f11 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f11 f1 c= cSUC f10 c+ ccomplement_index f0 f1 f11 b1 b0 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 f2 c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c< b2 cCARD * * part cnode f0 cPOWER * part cface_map f0 b1 f7 c= f8 cPOWER * part cinverse * part cnode_map f0 b2 cPOWER * part cface_map f0 b1 f7 c==> c? / c/\ c< f11 f2 c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c< b0 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f11 f1 c= cSUC f10 c+ ccomplement_index f0 f1 f11 b0 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cface_map f0 b0 f7 c= f8 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cface_map f0 b0 f7 c==> c? / c/\ c< f11 f2 c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c< b0 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f11 f1 c= cSUC f10 c+ ccomplement_index f0 f1 f11 b0 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cface_map f0 b0 f7 c= f8 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cface_map f0 b0 f7
+ ((t1 /\ (t2 /\ t3)) = ((t1 /\ t2) /\ t3)) |- (((t1 /\ t2) /\ t3) = (t1 /\ (t2 /\ t3)))
T c==> c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2
+ ((NUMERAL (BIT1 _0)) <= (CARD ((node H) (((POWER (inverse (face_map H))) (SUC d)) z)))) |- ((SUC (PRE (CARD ((node H) (((POWER (inverse (face_map H))) (SUC d)) z))))) = (CARD ((node H) (((POWER (inverse (face_map H))) (SUC d)) z))))
T c==> c<= cNUMERAL cBIT1 c_0 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f1 f2 c= cSUC cPRE cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f1 f2 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f1 f2
+ |- ((n <= (m + n)) = T)
T c= c<= f0 c+ f1 f0 cT
+ |- (((!NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> ((((is_split_condition H) NF) L) x))))) ==> ((\NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> ((((is_split_condition H) NF) L) x))))) NF)) = ((\NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> ((((is_split_condition H) NF) L) x))))) NF))
T c= c==> ! ! ! c==> c/\ cis_marked c, f0 c, b0 c, b1 b2 c~ cIN b1 * * part cfinal_loops f0 b0 cis_split_condition f0 b0 b1 b2 * / ! ! c==> c/\ cis_marked c, f0 c, b0 c, b1 b2 c~ cIN b1 * * part cfinal_loops f0 b0 cis_split_condition f0 b0 b1 b2 f1 * / ! ! c==> c/\ cis_marked c, f0 c, b0 c, b1 b2 c~ cIN b1 * * part cfinal_loops f0 b0 cis_split_condition f0 b0 b1 b2 f1
+ |- (((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = (((index L) ((loop_map L) y)) ((inv_loop_map L) z))) = ((\ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) (((index L) ((loop_map L) y)) ((inv_loop_map L) z))))
T c= c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 * / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2
+ (~ (L IN ((final_loops H) NF))), (is_restricted H), (((inv_loop_map L) z) = ((node_map H) z)), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((((loop_map L) y) = ((inverse (node_map H)) y)) /\ (~ (((node H) y) = ((node H) x)))), (L IN NF), ((is_normal H) NF) |- ((((\ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) ny) ==> (!y'. (((in_dart_of_loop y') ((((loop2_transform H) NF) L) x)) = ((?i. ((i <= (((index L) ((loop_map L) y)) ((inv_loop_map L) z))) /\ (y' = (((POWER (loop_map L)) i) ((loop_map L) y))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))))))) = T)
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= cinv_loop_map f0 f3 cnode_map f1 f3 c==> c= chyp'y f1 f2 f0 f4 f5 c==> c= chyp'z f1 f2 f0 f4 f3 c==> c= chyp'p f1 f2 f0 f4 f6 c==> c/\ cis_marked c, f1 c, f2 c, f0 f4 c~ cIN f0 * * part cfinal_loops f1 f2 c==> c/\ c= cloop_map f0 f5 cinverse * part cnode_map f1 f5 c~ c= * * part cnode f1 f5 * * part cnode f1 f4 c==> cIN f0 f2 c==> cis_normal f1 f2 c= c==> * / c= cindex f0 cloop_map f0 f5 cinv_loop_map f0 f3 b0 f7 ! c= cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f4 c\/ c? / c/\ c<= b1 cindex f0 cloop_map f0 f5 cinv_loop_map f0 f3 c= b0 cPOWER * part cloop_map f0 b1 cloop_map f0 f5 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 f6 c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c< b2 cCARD * * part cnode f1 cPOWER * part cface_map f1 b1 f5 c= b0 cPOWER * part cinverse * part cnode_map f1 b2 cPOWER * part cface_map f1 b1 f5 cT
+ (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (((NUMERAL (BIT1 _0)) <= a) /\ ((a <= m) /\ (((NUMERAL (BIT1 _0)) <= b) /\ ((b < (CARD ((node H) (((POWER (face_map H)) a) y)))) /\ (y' = (((POWER (inverse (node_map H))) b) (((POWER (face_map H)) a) y))))))), (L IN NF), ((is_normal H) NF) |- ((((NUMERAL (BIT1 _0)) <= a) /\ ((a <= m) /\ (((NUMERAL (BIT1 _0)) <= b) /\ ((b < (CARD ((node H) (((POWER (face_map H)) a) y)))) /\ (y' = (((POWER (inverse (node_map H))) b) (((POWER (face_map H)) a) y))))))) /\ (?i. ((i <= (ny + (((complement_index H) z) m))) /\ (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))))))
T c==> ! c==> c<= b0 ccomplement_index f0 f1 f2 c= cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 b0 cloop_map f4 f7 ccomplement f0 f1 b0 c==> c~ cIN f4 * * part cfinal_loops f0 f3 c==> cis_restricted f0 c==> c= chyp'y f0 f3 f4 f5 f7 c==> c= chyp'z f0 f3 f4 f5 f1 c==> c= chyp'p f0 f3 f4 f5 f2 c==> c/\ cis_marked c, f0 c, f3 c, f4 f5 c~ cIN f4 * * part cfinal_loops f0 f3 c==> c/\ c<= cNUMERAL cBIT1 c_0 f8 c/\ c<= f8 f2 c/\ c<= cNUMERAL cBIT1 c_0 f9 c/\ c< f9 cCARD * * part cnode f0 cPOWER * part cface_map f0 f8 f7 c= f10 cPOWER * part cinverse * part cnode_map f0 f9 cPOWER * part cface_map f0 f8 f7 c==> cIN f4 f3 c==> cis_normal f0 f3 c/\ c/\ c<= cNUMERAL cBIT1 c_0 f8 c/\ c<= f8 f2 c/\ c<= cNUMERAL cBIT1 c_0 f9 c/\ c< f9 cCARD * * part cnode f0 cPOWER * part cface_map f0 f8 f7 c= f10 cPOWER * part cinverse * part cnode_map f0 f9 cPOWER * part cface_map f0 f8 f7 c? / c/\ c<= b0 c+ f6 ccomplement_index f0 f1 f2 c= f10 cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 b0 cloop_map f4 f7
+ ((NUMERAL (BIT1 _0)) <= b) |- (!s. (((\d. (m = (a + (SUC d)))) s) ==> (((((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y)) = (((POWER (face_map H)) (m - a)) y)) ==> (((b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y))))) /\ (y' = (((POWER (inverse (node_map H))) b) (((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y))))) ==> (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))))))
T c==> c<= cNUMERAL cBIT1 c_0 f0 ! c==> * / c= f1 c+ f2 cSUC b1 b0 c==> c= cPOWER * part cinverse * part cface_map f3 cSUC f2 cPOWER * part cface_map f3 cSUC f1 f4 cPOWER * part cface_map f3 c- f1 f2 f4 c==> c/\ c< f0 cCARD * * part cnode f3 cPOWER * part cinverse * part cface_map f3 cSUC f2 cPOWER * part cface_map f3 cSUC f1 f4 c= f5 cPOWER * part cinverse * part cnode_map f3 f0 cPOWER * part cinverse * part cface_map f3 cSUC f2 cPOWER * part cface_map f3 cSUC f1 f4 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 f1 c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c< b2 cCARD * * part cnode f3 cPOWER * part cface_map f3 b1 f4 c= f5 cPOWER * part cinverse * part cnode_map f3 b2 cPOWER * part cface_map f3 b1 f4
+ |- ((\H. (!x. (!n. ((((complement_index H) x) (SUC n)) = ((((complement_index H) x) n) + (PRE (CARD ((node H) (((POWER (inverse (face_map H))) (SUC n)) x))))))))) H)
T * / ! ! c= ccomplement_index b0 b1 cSUC b2 c+ ccomplement_index b0 b1 b2 cPRE cCARD * * part cnode b0 cPOWER * part cinverse * part cface_map b0 cSUC b2 b1 f0
+ |- ((((SUC d) <= (SUC m)) ==> (y' = (((POWER (inverse (node_map H))) b) (((POWER (inverse (face_map H))) (SUC d)) (((POWER (face_map H)) (SUC m)) y))))) = ((d <= m) ==> (y' = (((POWER (inverse (node_map H))) b) (((POWER (inverse (face_map H))) (SUC d)) (((POWER (face_map H)) (SUC m)) y))))))
T c= c==> c<= cSUC f0 cSUC f1 c= f2 cPOWER * part cinverse * part cnode_map f3 f4 cPOWER * part cinverse * part cface_map f3 cSUC f0 cPOWER * part cface_map f3 cSUC f1 f5 c==> c<= f0 f1 c= f2 cPOWER * part cinverse * part cnode_map f3 f4 cPOWER * part cinverse * part cface_map f3 cSUC f0 cPOWER * part cface_map f3 cSUC f1 f5
+ |- (((!L. (!x. (((((is_split_condition H) NF) L) x) ==> (((in_dart_of_loop ((((hyp'y H) NF) L) x)) L) /\ ((((loop_map L) ((((hyp'y H) NF) L) x)) = ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) /\ (~ (((node H) ((((hyp'y H) NF) L) x)) = ((node H) x)))))))) ==> ((\L. (!x. (((((is_split_condition H) NF) L) x) ==> (((in_dart_of_loop ((((hyp'y H) NF) L) x)) L) /\ ((((loop_map L) ((((hyp'y H) NF) L) x)) = ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) /\ (~ (((node H) ((((hyp'y H) NF) L) x)) = ((node H) x)))))))) L)) = ((\L. (!x. (((((is_split_condition H) NF) L) x) ==> (((in_dart_of_loop ((((hyp'y H) NF) L) x)) L) /\ ((((loop_map L) ((((hyp'y H) NF) L) x)) = ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) /\ (~ (((node H) ((((hyp'y H) NF) L) x)) = ((node H) x)))))))) L))
T c= c==> ! ! c==> cis_split_condition f0 f1 b0 b1 c/\ cin_dart_of_loop chyp'y f0 f1 b0 b1 b0 c/\ c= cloop_map b0 chyp'y f0 f1 b0 b1 cinverse * part cnode_map f0 chyp'y f0 f1 b0 b1 c~ c= * * part cnode f0 chyp'y f0 f1 b0 b1 * * part cnode f0 b1 * / ! c==> cis_split_condition f0 f1 b0 b1 c/\ cin_dart_of_loop chyp'y f0 f1 b0 b1 b0 c/\ c= cloop_map b0 chyp'y f0 f1 b0 b1 cinverse * part cnode_map f0 chyp'y f0 f1 b0 b1 c~ c= * * part cnode f0 chyp'y f0 f1 b0 b1 * * part cnode f0 b1 f2 * / ! c==> cis_split_condition f0 f1 b0 b1 c/\ cin_dart_of_loop chyp'y f0 f1 b0 b1 b0 c/\ c= cloop_map b0 chyp'y f0 f1 b0 b1 cinverse * part cnode_map f0 chyp'y f0 f1 b0 b1 c~ c= * * part cnode f0 chyp'y f0 f1 b0 b1 * * part cnode f0 b1 f2
+ (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (i <= (ny + (((complement_index H) z) m))), (L IN NF), ((is_normal H) NF) |- ((~ (i <= ny)) ==> ((?i. ((i <= ny) /\ (y' = (((POWER (loop_map L)) i) ((loop_map L) y))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))))
T c==> ! c==> c<= b0 ccomplement_index f0 f1 f2 c= cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 b0 cloop_map f4 f7 ccomplement f0 f1 b0 c==> c~ cIN f4 * * part cfinal_loops f0 f3 c==> cis_restricted f0 c==> c= f8 cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 f9 cloop_map f4 f7 c==> c= chyp'y f0 f3 f4 f5 f7 c==> c= chyp'z f0 f3 f4 f5 f1 c==> c= chyp'p f0 f3 f4 f5 f2 c==> c/\ cis_marked c, f0 c, f3 c, f4 f5 c~ cIN f4 * * part cfinal_loops f0 f3 c==> c<= f9 c+ f6 ccomplement_index f0 f1 f2 c==> cIN f4 f3 c==> cis_normal f0 f3 c==> c~ c<= f9 f6 c\/ c? / c/\ c<= b0 f6 c= f8 cPOWER * part cloop_map f4 b0 cloop_map f4 f7 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cface_map f0 b0 f7 c= f8 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cface_map f0 b0 f7
+ (!s. (!p. (!n. (!x. (!y. (((permutes p) s) ==> ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))))))))), ((permutes p) s) |- (((permutes p) s) /\ (!n. (!x. (!y. ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y)))))))
T c==> ! ! ! ! ! c==> cpermutes b1 b0 c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4 c==> cpermutes f0 f1 c/\ cpermutes f0 f1 ! ! ! c= c= b2 cPOWER f0 b0 b1 c= b1 cPOWER * part cinverse f0 b0 b2
- |- ((\L. (!x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))))))) L)
T * / ! c= * * * * part cpath2_transform f0 f1 b0 b1 * * * part cglue * * part cpath_of_loop b0 cinverse * part cnode_map f0 chyp'y f0 f1 b0 b1 * * part ccomplement f0 chyp'z f0 f1 b0 b1 cindex b0 cinverse * part cnode_map f0 chyp'y f0 f1 b0 b1 cnode_map f0 chyp'z f0 f1 b0 b1 f2
+ |- (((!t. (t \/ (~ t))) ==> ((\t. (t \/ (~ t))) (i <= ny))) = ((\t. (t \/ (~ t))) (i <= ny)))
T c= c==> ! c\/ b0 c~ b0 * / c\/ b0 c~ b0 c<= f0 f1 * / c\/ b0 c~ b0 c<= f0 f1
+ ((((POWER (inverse (face_map H))) (SUC d)) (((POWER (face_map H)) (SUC m)) y)) = (((POWER (face_map H)) a) y)) |- ((y' = (((POWER (inverse (node_map H))) b) (((POWER (face_map H)) a) y))) = (y' = (((POWER (inverse (node_map H))) b) (((POWER (inverse (face_map H))) (SUC d)) (((POWER (face_map H)) (SUC m)) y)))))
T c==> c= cPOWER * part cinverse * part cface_map f0 cSUC f1 cPOWER * part cface_map f0 cSUC f2 f3 cPOWER * part cface_map f0 f4 f3 c= c= f5 cPOWER * part cinverse * part cnode_map f0 f6 cPOWER * part cface_map f0 f4 f3 c= f5 cPOWER * part cinverse * part cnode_map f0 f6 cPOWER * part cinverse * part cface_map f0 cSUC f1 cPOWER * part cface_map f0 cSUC f2 f3
+ |- ((\n. ((((permutes p) s) /\ (m <= n)) ==> (!x. ((((POWER (inverse p)) m) (((POWER p) n) x)) = (((POWER p) (n - m)) x))))) n)
T * / c==> c/\ cpermutes f0 f1 c<= f2 b0 ! c= cPOWER * part cinverse f0 f2 cPOWER f0 b0 b1 cPOWER f0 c- b0 f2 b1 f3
+ (!s. (!p. (!n. (!x. (!y. (((permutes p) s) ==> ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))))))))), ((permutes p) s) |- (((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))) = T)
T c==> ! ! ! ! ! c==> cpermutes b1 b0 c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4 c==> cpermutes f0 f1 c= c= c= f2 cPOWER f0 f3 f4 c= f4 cPOWER * part cinverse f0 f3 f2 cT
+ |- (((!p. (((m + n) <= (m + p)) = (n <= p))) ==> ((\p. (((m + n) <= (m + p)) = (n <= p))) p)) = ((\p. (((m + n) <= (m + p)) = (n <= p))) p))
T c= c==> ! c= c<= c+ f0 f1 c+ f0 b0 c<= f1 b0 * / c= c<= c+ f0 f1 c+ f0 b0 c<= f1 b0 f2 * / c= c<= c+ f0 f1 c+ f0 b0 c<= f1 b0 f2
+ |- (((!s. (!p. (!n. (!x. (!y. (((permutes p) s) ==> ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))))))))) ==> (!s. (!p. (((permutes p) s) ==> (!n. (!x. (!y. ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y)))))))))) = (!s. (!p. (((permutes p) s) ==> (!n. (!x. (!y. ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))))))))))
T c= c==> ! ! ! ! ! c==> cpermutes b1 b0 c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4 ! ! c==> cpermutes b1 b0 ! ! ! c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4 ! ! c==> cpermutes b1 b0 ! ! ! c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4
+ |- ((\m. (!n. (!p. (((m + n) <= (m + p)) = (n <= p))))) m)
T * / ! ! c= c<= c+ b0 b1 c+ b0 b2 c<= b1 b2 f0
+ (~ (L IN ((final_loops H) NF))), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- (((((((path2_transform H) NF) L) x) (NUMERAL _0)) = ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) /\ (((in_dart_of_loop ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((((loop2_transform H) NF) L) x)) /\ (((pre_card_dart_of_loop ((((loop2_transform H) NF) L) x)) = ((((card2_transform H) NF) L) x)) /\ ((!i. ((i <= (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) = (((POWER (loop_map L)) i) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))))) /\ (!i. ((i <= (((complement_index H) ((((hyp'z H) NF) L) x)) ((((hyp'p H) NF) L) x))) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) ((((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))) + i)) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) = (((complement H) ((((hyp'z H) NF) L) x)) i))))))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c/\ c= cpath2_transform f1 f2 f0 f3 cNUMERAL c_0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 c/\ cin_dart_of_loop cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 cloop2_transform f1 f2 f0 f3 c/\ c= cpre_card_dart_of_loop cloop2_transform f1 f2 f0 f3 ccard2_transform f1 f2 f0 f3 c/\ ! c==> c<= b0 cindex f0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 cnode_map f1 chyp'z f1 f2 f0 f3 c= cPOWER * part cloop_map cloop2_transform f1 f2 f0 f3 b0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 cPOWER * part cloop_map f0 b0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 ! c==> c<= b0 ccomplement_index f1 chyp'z f1 f2 f0 f3 chyp'p f1 f2 f0 f3 c= cPOWER * part cloop_map cloop2_transform f1 f2 f0 f3 c+ cindex f0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 cnode_map f1 chyp'z f1 f2 f0 f3 b0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 ccomplement f1 chyp'z f1 f2 f0 f3 b0
+ ((\i. ((i <= (ny + (((complement_index H) z) m))) /\ (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))))) i) |- ((i <= (ny + (((complement_index H) z) m))) /\ (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))))
T c==> * / c/\ c<= b0 c+ f0 ccomplement_index f1 f2 f3 c= f4 cPOWER * part cloop_map cloop2_transform f1 f5 f6 f7 b0 cloop_map f6 f8 f9 c/\ c<= f9 c+ f0 ccomplement_index f1 f2 f3 c= f4 cPOWER * part cloop_map cloop2_transform f1 f5 f6 f7 f9 cloop_map f6 f8
+ (~ (L IN ((final_loops H) NF))), (is_restricted H), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((SUC d) = ((((complement_index H) z) a) + b)), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((NUMERAL (BIT1 _0)) <= b), (a < m), (b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))), (L IN NF), ((is_normal H) NF) |- ((y' = (((complement H) z) (SUC d))) ==> (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= chyp'y f1 f2 f0 f3 f4 c==> c= chyp'z f1 f2 f0 f3 f5 c==> c= cSUC f6 c+ ccomplement_index f1 f5 f7 f8 c==> c= chyp'p f1 f2 f0 f3 f9 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c==> c<= cNUMERAL cBIT1 c_0 f8 c==> c< f7 f9 c==> c< f8 cCARD * * part cnode f1 cPOWER * part cinverse * part cface_map f1 cSUC f7 f5 c==> cIN f0 f2 c==> cis_normal f1 f2 c==> c= f10 ccomplement f1 f5 cSUC f6 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f9 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cface_map f1 b0 f4 c= f10 cPOWER * part cinverse * part cnode_map f1 b1 cPOWER * part cface_map f1 b0 f4
- ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny) |- (((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny) /\ (?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)))
T c==> c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 f3 c/\ c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 f3 c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0
+ (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))), (i = (ny + (SUC d))) |- (((y' = (((complement H) z) (SUC d))) ==> (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))) = (((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + (SUC d))) ((loop_map L) y)) = (((complement H) z) (SUC d))) ==> (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))))
T c==> c= f0 cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 f5 cloop_map f3 f6 c==> c= f5 c+ f7 cSUC f8 c= c==> c= f0 ccomplement f1 f9 cSUC f8 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f10 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cface_map f1 b0 f6 c= f0 cPOWER * part cinverse * part cnode_map f1 b1 cPOWER * part cface_map f1 b0 f6 c==> c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 c+ f7 cSUC f8 cloop_map f3 f6 ccomplement f1 f9 cSUC f8 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f10 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cface_map f1 b0 f6 c= f0 cPOWER * part cinverse * part cnode_map f1 b1 cPOWER * part cface_map f1 b0 f6
+ (~ (L IN ((final_loops H) NF))), (((((hyp'z H) NF) L) x) = z), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- (z IN (dart H))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c= chyp'z f1 f2 f0 f3 f4 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c==> cIN f0 f2 c==> cis_normal f1 f2 cIN f4 * part cdart f1
+ |- ((\ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) (((index L) ((loop_map L) y)) ((inv_loop_map L) z)))
T * / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2
- |- (((!NF. (((is_normal H) NF) = ((!L. ((L IN NF) ==> (((is_loop H) L) /\ (?x. ((x IN (dart H)) /\ ((in_dart_of_loop x) L)))))) /\ ((!L. ((L IN NF) ==> (?y. (?z. (((in_dart_of_loop y) L) /\ (((in_dart_of_loop z) L) /\ (~ (((node H) y) = ((node H) z))))))))) /\ ((!L. (!L'. (!x. (((L IN NF) /\ ((L' IN NF) /\ (((in_dart_of_loop x) L) /\ ((in_dart_of_loop x) L')))) ==> (L = L'))))) /\ (!L. (!x. (!y. (((L IN NF) /\ (((in_dart_of_loop x) L) /\ (y IN ((node H) x)))) ==> (?L'. ((L' IN NF) /\ ((in_dart_of_loop y) L')))))))))))) ==> ((\NF. (((is_normal H) NF) = ((!L. ((L IN NF) ==> (((is_loop H) L) /\ (?x. ((x IN (dart H)) /\ ((in_dart_of_loop x) L)))))) /\ ((!L. ((L IN NF) ==> (?y. (?z. (((in_dart_of_loop y) L) /\ (((in_dart_of_loop z) L) /\ (~ (((node H) y) = ((node H) z))))))))) /\ ((!L. (!L'. (!x. (((L IN NF) /\ ((L' IN NF) /\ (((in_dart_of_loop x) L) /\ ((in_dart_of_loop x) L')))) ==> (L = L'))))) /\ (!L. (!x. (!y. (((L IN NF) /\ (((in_dart_of_loop x) L) /\ (y IN ((node H) x)))) ==> (?L'. ((L' IN NF) /\ ((in_dart_of_loop y) L')))))))))))) NF)) = ((\NF. (((is_normal H) NF) = ((!L. ((L IN NF) ==> (((is_loop H) L) /\ (?x. ((x IN (dart H)) /\ ((in_dart_of_loop x) L)))))) /\ ((!L. ((L IN NF) ==> (?y. (?z. (((in_dart_of_loop y) L) /\ (((in_dart_of_loop z) L) /\ (~ (((node H) y) = ((node H) z))))))))) /\ ((!L. (!L'. (!x. (((L IN NF) /\ ((L' IN NF) /\ (((in_dart_of_loop x) L) /\ ((in_dart_of_loop x) L')))) ==> (L = L'))))) /\ (!L. (!x. (!y. (((L IN NF) /\ (((in_dart_of_loop x) L) /\ (y IN ((node H) x)))) ==> (?L'. ((L' IN NF) /\ ((in_dart_of_loop y) L')))))))))))) NF))
T c= c==> ! c= cis_normal f0 b0 c/\ ! c==> cIN b1 b0 c/\ cis_loop f0 b1 c? / c/\ cIN b2 * part cdart f0 cin_dart_of_loop b2 b1 c/\ ! c==> cIN b1 b0 c? / c? / c/\ cin_dart_of_loop b2 b1 c/\ cin_dart_of_loop b3 b1 c~ c= * * part cnode f0 b2 * * part cnode f0 b3 c/\ ! ! ! c==> c/\ cIN b1 b0 c/\ cIN b2 b0 c/\ cin_dart_of_loop b3 b1 cin_dart_of_loop b3 b2 c= b1 b2 ! ! ! c==> c/\ cIN b1 b0 c/\ cin_dart_of_loop b2 b1 cIN b3 * * part cnode f0 b2 c? / c/\ cIN b4 b0 cin_dart_of_loop b3 b4 * / c= cis_normal f0 b0 c/\ ! c==> cIN b1 b0 c/\ cis_loop f0 b1 c? / c/\ cIN b2 * part cdart f0 cin_dart_of_loop b2 b1 c/\ ! c==> cIN b1 b0 c? / c? / c/\ cin_dart_of_loop b2 b1 c/\ cin_dart_of_loop b3 b1 c~ c= * * part cnode f0 b2 * * part cnode f0 b3 c/\ ! ! ! c==> c/\ cIN b1 b0 c/\ cIN b2 b0 c/\ cin_dart_of_loop b3 b1 cin_dart_of_loop b3 b2 c= b1 b2 ! ! ! c==> c/\ cIN b1 b0 c/\ cin_dart_of_loop b2 b1 cIN b3 * * part cnode f0 b2 c? / c/\ cIN b4 b0 cin_dart_of_loop b3 b4 f1 * / c= cis_normal f0 b0 c/\ ! c==> cIN b1 b0 c/\ cis_loop f0 b1 c? / c/\ cIN b2 * part cdart f0 cin_dart_of_loop b2 b1 c/\ ! c==> cIN b1 b0 c? / c? / c/\ cin_dart_of_loop b2 b1 c/\ cin_dart_of_loop b3 b1 c~ c= * * part cnode f0 b2 * * part cnode f0 b3 c/\ ! ! ! c==> c/\ cIN b1 b0 c/\ cIN b2 b0 c/\ cin_dart_of_loop b3 b1 cin_dart_of_loop b3 b2 c= b1 b2 ! ! ! c==> c/\ cIN b1 b0 c/\ cin_dart_of_loop b2 b1 cIN b3 * * part cnode f0 b2 c? / c/\ cIN b4 b0 cin_dart_of_loop b3 b4 f1
+ (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (i = (ny + (SUC d))), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((SUC d) <= (((complement_index H) z) m)), (L IN NF), ((is_normal H) NF) |- ((z IN (dart H)) ==> (((NUMERAL (BIT1 _0)) <= (SUC d)) ==> (((SUC d) <= (((complement_index H) z) m)) ==> (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))))))
T c==> ! c==> c<= b0 ccomplement_index f0 f1 f2 c= cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 b0 cloop_map f4 f7 ccomplement f0 f1 b0 c==> c~ cIN f4 * * part cfinal_loops f0 f3 c==> cis_restricted f0 c==> c= f8 cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 f9 cloop_map f4 f7 c==> c= chyp'y f0 f3 f4 f5 f7 c==> c= chyp'z f0 f3 f4 f5 f1 c==> c= f9 c+ f6 cSUC f10 c==> c= chyp'p f0 f3 f4 f5 f2 c==> c/\ cis_marked c, f0 c, f3 c, f4 f5 c~ cIN f4 * * part cfinal_loops f0 f3 c==> c<= cSUC f10 ccomplement_index f0 f1 f2 c==> cIN f4 f3 c==> cis_normal f0 f3 c==> cIN f1 * part cdart f0 c==> c<= cNUMERAL cBIT1 c_0 cSUC f10 c==> c<= cSUC f10 ccomplement_index f0 f1 f2 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cface_map f0 b0 f7 c= f8 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cface_map f0 b0 f7
+ |- ((\x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> (((((((path2_transform H) NF) L) x) (NUMERAL _0)) = ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) /\ (((in_dart_of_loop ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((((loop2_transform H) NF) L) x)) /\ (((pre_card_dart_of_loop ((((loop2_transform H) NF) L) x)) = ((((card2_transform H) NF) L) x)) /\ ((!i. ((i <= (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) = (((POWER (loop_map L)) i) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))))) /\ (!i. ((i <= (((complement_index H) ((((hyp'z H) NF) L) x)) ((((hyp'p H) NF) L) x))) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) ((((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))) + i)) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) = (((complement H) ((((hyp'z H) NF) L) x)) i)))))))))) x)
T * / c==> c/\ cis_marked c, f0 c, f1 c, f2 b0 c~ cIN f2 * * part cfinal_loops f0 f1 c/\ c= cpath2_transform f0 f1 f2 b0 cNUMERAL c_0 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 c/\ cin_dart_of_loop cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 cloop2_transform f0 f1 f2 b0 c/\ c= cpre_card_dart_of_loop cloop2_transform f0 f1 f2 b0 ccard2_transform f0 f1 f2 b0 c/\ ! c==> c<= b1 cindex f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 cnode_map f0 chyp'z f0 f1 f2 b0 c= cPOWER * part cloop_map cloop2_transform f0 f1 f2 b0 b1 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 cPOWER * part cloop_map f2 b1 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 ! c==> c<= b1 ccomplement_index f0 chyp'z f0 f1 f2 b0 chyp'p f0 f1 f2 b0 c= cPOWER * part cloop_map cloop2_transform f0 f1 f2 b0 c+ cindex f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 cnode_map f0 chyp'z f0 f1 f2 b0 b1 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 ccomplement f0 chyp'z f0 f1 f2 b0 b1 f3
+ |- (((!H. (!NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> ((((is_split_condition H) NF) L) x)))))) ==> ((\H. (!NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> ((((is_split_condition H) NF) L) x)))))) H)) = ((\H. (!NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> ((((is_split_condition H) NF) L) x)))))) H))
T c= c==> ! ! ! ! c==> c/\ cis_marked c, b0 c, b1 c, b2 b3 c~ cIN b2 * * part cfinal_loops b0 b1 cis_split_condition b0 b1 b2 b3 * / ! ! ! c==> c/\ cis_marked c, b0 c, b1 c, b2 b3 c~ cIN b2 * * part cfinal_loops b0 b1 cis_split_condition b0 b1 b2 b3 f0 * / ! ! ! c==> c/\ cis_marked c, b0 c, b1 c, b2 b3 c~ cIN b2 * * part cfinal_loops b0 b1 cis_split_condition b0 b1 b2 b3 f0
+ (y' = (((POWER (inverse (node_map H))) b) (((POWER (face_map H)) a) y))), (z = (((POWER (face_map H)) (SUC m)) y)), (m = (a + d)) |- ((z = (((POWER (face_map H)) (SUC m)) y)) /\ (y' = (((POWER (inverse (node_map H))) b) (((POWER (inverse (face_map H))) (SUC d)) z))))
T c==> c= f0 cPOWER * part cinverse * part cnode_map f1 f2 cPOWER * part cface_map f1 f3 f4 c==> c= f5 cPOWER * part cface_map f1 cSUC f6 f4 c==> c= f6 c+ f3 f7 c/\ c= f5 cPOWER * part cface_map f1 cSUC f6 f4 c= f0 cPOWER * part cinverse * part cnode_map f1 f2 cPOWER * part cinverse * part cface_map f1 cSUC f7 f5
+ ((\z. (((((hyp'z H) NF) L) x) = z)) z) |- (((((hyp'z H) NF) L) x) = z)
T c==> * / c= chyp'z f0 f1 f2 f3 b0 f4 c= chyp'z f0 f1 f2 f3 f4
+ |- (((!H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) = ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x))))))))))) ==> ((\H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) = ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x))))))))))) H)) = ((\H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) = ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x))))))))))) H))
T c= c==> ! ! ! ! c= cis_split_condition b0 b1 b2 b3 c/\ cis_restricted b0 c/\ cis_normal b0 b1 c/\ cIN b2 b1 c/\ c~ cIN b2 * * part cfinal_loops b0 b1 c/\ cin_dart_of_loop b3 b2 c= chead_of_atom b0 b1 b3 b3 * / ! ! ! c= cis_split_condition b0 b1 b2 b3 c/\ cis_restricted b0 c/\ cis_normal b0 b1 c/\ cIN b2 b1 c/\ c~ cIN b2 * * part cfinal_loops b0 b1 c/\ cin_dart_of_loop b3 b2 c= chead_of_atom b0 b1 b3 b3 f0 * / ! ! ! c= cis_split_condition b0 b1 b2 b3 c/\ cis_restricted b0 c/\ cis_normal b0 b1 c/\ cIN b2 b1 c/\ c~ cIN b2 * * part cfinal_loops b0 b1 c/\ cin_dart_of_loop b3 b2 c= chead_of_atom b0 b1 b3 b3 f0
+ (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (y' = (((POWER (inverse (node_map H))) b) (((POWER (face_map H)) a) y))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (m = (a + d)), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((NUMERAL (BIT1 _0)) <= a), ((NUMERAL (BIT1 _0)) <= b), (b < (CARD ((node H) (((POWER (face_map H)) a) y)))), (L IN NF), ((is_normal H) NF) |- ((\i. ((i <= (ny + (((complement_index H) z) m))) /\ (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))))) (ny + ((((complement_index H) z) d) + b)))
T c==> ! c==> c<= b0 ccomplement_index f0 f1 f2 c= cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 b0 cloop_map f4 f7 ccomplement f0 f1 b0 c==> c~ cIN f4 * * part cfinal_loops f0 f3 c==> cis_restricted f0 c==> c= f8 cPOWER * part cinverse * part cnode_map f0 f9 cPOWER * part cface_map f0 f10 f7 c==> c= chyp'y f0 f3 f4 f5 f7 c==> c= chyp'z f0 f3 f4 f5 f1 c==> c= f2 c+ f10 f11 c==> c= chyp'p f0 f3 f4 f5 f2 c==> c/\ cis_marked c, f0 c, f3 c, f4 f5 c~ cIN f4 * * part cfinal_loops f0 f3 c==> c<= cNUMERAL cBIT1 c_0 f10 c==> c<= cNUMERAL cBIT1 c_0 f9 c==> c< f9 cCARD * * part cnode f0 cPOWER * part cface_map f0 f10 f7 c==> cIN f4 f3 c==> cis_normal f0 f3 * / c/\ c<= b0 c+ f6 ccomplement_index f0 f1 f2 c= f8 cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 b0 cloop_map f4 f7 c+ f6 c+ ccomplement_index f0 f1 f11 f9
- |- (((!H. (!NF. (((is_normal H) NF) = ((!L. ((L IN NF) ==> (((is_loop H) L) /\ (?x. ((x IN (dart H)) /\ ((in_dart_of_loop x) L)))))) /\ ((!L. ((L IN NF) ==> (?y. (?z. (((in_dart_of_loop y) L) /\ (((in_dart_of_loop z) L) /\ (~ (((node H) y) = ((node H) z))))))))) /\ ((!L. (!L'. (!x. (((L IN NF) /\ ((L' IN NF) /\ (((in_dart_of_loop x) L) /\ ((in_dart_of_loop x) L')))) ==> (L = L'))))) /\ (!L. (!x. (!y. (((L IN NF) /\ (((in_dart_of_loop x) L) /\ (y IN ((node H) x)))) ==> (?L'. ((L' IN NF) /\ ((in_dart_of_loop y) L'))))))))))))) ==> ((\H. (!NF. (((is_normal H) NF) = ((!L. ((L IN NF) ==> (((is_loop H) L) /\ (?x. ((x IN (dart H)) /\ ((in_dart_of_loop x) L)))))) /\ ((!L. ((L IN NF) ==> (?y. (?z. (((in_dart_of_loop y) L) /\ (((in_dart_of_loop z) L) /\ (~ (((node H) y) = ((node H) z))))))))) /\ ((!L. (!L'. (!x. (((L IN NF) /\ ((L' IN NF) /\ (((in_dart_of_loop x) L) /\ ((in_dart_of_loop x) L')))) ==> (L = L'))))) /\ (!L. (!x. (!y. (((L IN NF) /\ (((in_dart_of_loop x) L) /\ (y IN ((node H) x)))) ==> (?L'. ((L' IN NF) /\ ((in_dart_of_loop y) L'))))))))))))) H)) = ((\H. (!NF. (((is_normal H) NF) = ((!L. ((L IN NF) ==> (((is_loop H) L) /\ (?x. ((x IN (dart H)) /\ ((in_dart_of_loop x) L)))))) /\ ((!L. ((L IN NF) ==> (?y. (?z. (((in_dart_of_loop y) L) /\ (((in_dart_of_loop z) L) /\ (~ (((node H) y) = ((node H) z))))))))) /\ ((!L. (!L'. (!x. (((L IN NF) /\ ((L' IN NF) /\ (((in_dart_of_loop x) L) /\ ((in_dart_of_loop x) L')))) ==> (L = L'))))) /\ (!L. (!x. (!y. (((L IN NF) /\ (((in_dart_of_loop x) L) /\ (y IN ((node H) x)))) ==> (?L'. ((L' IN NF) /\ ((in_dart_of_loop y) L'))))))))))))) H))
T c= c==> ! ! c= cis_normal b0 b1 c/\ ! c==> cIN b2 b1 c/\ cis_loop b0 b2 c? / c/\ cIN b3 * part cdart b0 cin_dart_of_loop b3 b2 c/\ ! c==> cIN b2 b1 c? / c? / c/\ cin_dart_of_loop b3 b2 c/\ cin_dart_of_loop b4 b2 c~ c= * * part cnode b0 b3 * * part cnode b0 b4 c/\ ! ! ! c==> c/\ cIN b2 b1 c/\ cIN b3 b1 c/\ cin_dart_of_loop b4 b2 cin_dart_of_loop b4 b3 c= b2 b3 ! ! ! c==> c/\ cIN b2 b1 c/\ cin_dart_of_loop b3 b2 cIN b4 * * part cnode b0 b3 c? / c/\ cIN b5 b1 cin_dart_of_loop b4 b5 * / ! c= cis_normal b0 b1 c/\ ! c==> cIN b2 b1 c/\ cis_loop b0 b2 c? / c/\ cIN b3 * part cdart b0 cin_dart_of_loop b3 b2 c/\ ! c==> cIN b2 b1 c? / c? / c/\ cin_dart_of_loop b3 b2 c/\ cin_dart_of_loop b4 b2 c~ c= * * part cnode b0 b3 * * part cnode b0 b4 c/\ ! ! ! c==> c/\ cIN b2 b1 c/\ cIN b3 b1 c/\ cin_dart_of_loop b4 b2 cin_dart_of_loop b4 b3 c= b2 b3 ! ! ! c==> c/\ cIN b2 b1 c/\ cin_dart_of_loop b3 b2 cIN b4 * * part cnode b0 b3 c? / c/\ cIN b5 b1 cin_dart_of_loop b4 b5 f0 * / ! c= cis_normal b0 b1 c/\ ! c==> cIN b2 b1 c/\ cis_loop b0 b2 c? / c/\ cIN b3 * part cdart b0 cin_dart_of_loop b3 b2 c/\ ! c==> cIN b2 b1 c? / c? / c/\ cin_dart_of_loop b3 b2 c/\ cin_dart_of_loop b4 b2 c~ c= * * part cnode b0 b3 * * part cnode b0 b4 c/\ ! ! ! c==> c/\ cIN b2 b1 c/\ cIN b3 b1 c/\ cin_dart_of_loop b4 b2 cin_dart_of_loop b4 b3 c= b2 b3 ! ! ! c==> c/\ cIN b2 b1 c/\ cin_dart_of_loop b3 b2 cIN b4 * * part cnode b0 b3 c? / c/\ cIN b5 b1 cin_dart_of_loop b4 b5 f0
+ (!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))), (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- ((((?i. ((i <= ny) /\ (y' = (((POWER (loop_map L)) i) ((loop_map L) y))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))) ==> (?i. ((i <= (ny + (((complement_index H) z) m))) /\ (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)))))) = (((?i. ((i <= (ny + (((complement_index H) z) m))) /\ (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))))) ==> ((?i. ((i <= ny) /\ (y' = (((POWER (loop_map L)) i) ((loop_map L) y))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))))) /\ (((?i. ((i <= ny) /\ (y' = (((POWER (loop_map L)) i) ((loop_map L) y))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))) ==> (?i. ((i <= (ny + (((complement_index H) z) m))) /\ (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))))))))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f5 cPOWER * part cloop_map f3 b0 cloop_map f3 f5 c==> ! c==> c<= b0 ccomplement_index f1 f6 f7 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 c+ f0 b0 cloop_map f3 f5 ccomplement f1 f6 b0 c==> c~ cIN f3 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= chyp'y f1 f2 f3 f4 f5 c==> c= chyp'z f1 f2 f3 f4 f6 c==> c= chyp'p f1 f2 f3 f4 f7 c==> c/\ cis_marked c, f1 c, f2 c, f3 f4 c~ cIN f3 * * part cfinal_loops f1 f2 c==> cIN f3 f2 c==> cis_normal f1 f2 c= c==> c\/ c? / c/\ c<= b0 f0 c= f8 cPOWER * part cloop_map f3 b0 cloop_map f3 f5 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f7 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cface_map f1 b0 f5 c= f8 cPOWER * part cinverse * part cnode_map f1 b1 cPOWER * part cface_map f1 b0 f5 c? / c/\ c<= b0 c+ f0 ccomplement_index f1 f6 f7 c= f8 cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f5 c/\ c==> c? / c/\ c<= b0 c+ f0 ccomplement_index f1 f6 f7 c= f8 cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f5 c\/ c? / c/\ c<= b0 f0 c= f8 cPOWER * part cloop_map f3 b0 cloop_map f3 f5 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f7 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cface_map f1 b0 f5 c= f8 cPOWER * part cinverse * part cnode_map f1 b1 cPOWER * part cface_map f1 b0 f5 c==> c\/ c? / c/\ c<= b0 f0 c= f8 cPOWER * part cloop_map f3 b0 cloop_map f3 f5 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f7 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cface_map f1 b0 f5 c= f8 cPOWER * part cinverse * part cnode_map f1 b1 cPOWER * part cface_map f1 b0 f5 c? / c/\ c<= b0 c+ f0 ccomplement_index f1 f6 f7 c= f8 cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f5
+ |- (((!p. (!m. (!n. (!x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x))))))) ==> ((\p. (!m. (!n. (!x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x))))))) p)) = ((\p. (!m. (!n. (!x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x))))))) p))
T c= c==> ! ! ! ! c= cPOWER b0 c+ b1 b2 b3 cPOWER b0 b1 cPOWER b0 b2 b3 * / ! ! ! c= cPOWER b0 c+ b1 b2 b3 cPOWER b0 b1 cPOWER b0 b2 b3 f0 * / ! ! ! c= cPOWER b0 c+ b1 b2 b3 cPOWER b0 b1 cPOWER b0 b2 b3 f0
+ |- ((\x. (((((hyp'z H) NF) L) x) = (((POWER (face_map H)) (SUC ((((hyp'p H) NF) L) x))) ((((hyp'y H) NF) L) x)))) x)
T * / c= chyp'z f0 f1 f2 b0 cPOWER * part cface_map f0 cSUC chyp'p f0 f1 f2 b0 chyp'y f0 f1 f2 b0 f3
+ ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x))))))
T c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cis_restricted f0 c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop f3 f2 c= chead_of_atom f0 f1 f3 f3
+ (!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))) |- ((\i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))) i)
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f5 cPOWER * part cloop_map f3 b0 cloop_map f3 f5 * / c==> c<= b0 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f5 cPOWER * part cloop_map f3 b0 cloop_map f3 f5 f6
+ |- ((\m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) m)
T * / ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 f0
- |- (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))))
T c= * * * * part cpath2_transform f0 f1 f2 f3 * * * part cglue * * part cpath_of_loop f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 * * part ccomplement f0 chyp'z f0 f1 f2 f3 cindex f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 cnode_map f0 chyp'z f0 f1 f2 f3
- |- (((!n. (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0)))) ==> ((\n. (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0)))) n)) = ((\n. (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0)))) n))
T c= c==> ! c= cglue f0 f1 b0 cNUMERAL c_0 * f0 cNUMERAL c_0 * / c= cglue f0 f1 b0 cNUMERAL c_0 * f0 cNUMERAL c_0 f2 * / c= cglue f0 f1 b0 cNUMERAL c_0 * f0 cNUMERAL c_0 f2
+ (!s. (!p. (!n. (!x. (!y. (((permutes p) s) ==> ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))))))))) |- ((!s. (!p. (!n. (!x. (!y. (((permutes p) s) ==> ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))))))))) /\ (!s. (!p. (((permutes p) s) ==> (!n. (!x. (!y. ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))))))))))
T c==> ! ! ! ! ! c==> cpermutes b1 b0 c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4 c/\ ! ! ! ! ! c==> cpermutes b1 b0 c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4 ! ! c==> cpermutes b1 b0 ! ! ! c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4
+ (~ (L IN ((final_loops H) NF))), (is_restricted H), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- (!y'. (((in_dart_of_loop y') ((((loop2_transform H) NF) L) x)) = ((?i. ((i <= (((index L) ((inverse (node_map H)) y)) ((node_map H) z))) /\ (y' = (((POWER (loop_map L)) i) ((inverse (node_map H)) y))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= ((((hyp'p H) NF) L) x)) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= chyp'y f1 f2 f0 f3 f4 c==> c= chyp'z f1 f2 f0 f3 f5 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c==> cIN f0 f2 c==> cis_normal f1 f2 ! c= cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f3 c\/ c? / c/\ c<= b1 cindex f0 cinverse * part cnode_map f1 f4 cnode_map f1 f5 c= b0 cPOWER * part cloop_map f0 b1 cinverse * part cnode_map f1 f4 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 chyp'p f1 f2 f0 f3 c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c< b2 cCARD * * part cnode f1 cPOWER * part cface_map f1 b1 f4 c= b0 cPOWER * part cinverse * part cnode_map f1 b2 cPOWER * part cface_map f1 b1 f4
+ (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (i <= (ny + (((complement_index H) z) m))), (L IN NF), ((is_normal H) NF) |- ((((\d. (i = (ny + (SUC d)))) d) ==> ((?i. ((i <= ny) /\ (y' = (((POWER (loop_map L)) i) ((loop_map L) y))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))))) = T)
T c==> ! c==> c<= b0 ccomplement_index f0 f1 f2 c= cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 b0 cloop_map f4 f7 ccomplement f0 f1 b0 c==> c~ cIN f4 * * part cfinal_loops f0 f3 c==> cis_restricted f0 c==> c= f8 cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 f9 cloop_map f4 f7 c==> c= chyp'y f0 f3 f4 f5 f7 c==> c= chyp'z f0 f3 f4 f5 f1 c==> c= chyp'p f0 f3 f4 f5 f2 c==> c/\ cis_marked c, f0 c, f3 c, f4 f5 c~ cIN f4 * * part cfinal_loops f0 f3 c==> c<= f9 c+ f6 ccomplement_index f0 f1 f2 c==> cIN f4 f3 c==> cis_normal f0 f3 c= c==> * / c= f9 c+ f6 cSUC b0 f10 c\/ c? / c/\ c<= b0 f6 c= f8 cPOWER * part cloop_map f4 b0 cloop_map f4 f7 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cface_map f0 b0 f7 c= f8 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cface_map f0 b0 f7 cT
+ (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), ((SUC d) <= (((complement_index H) z) m)) |- ((((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + (SUC d))) ((loop_map L) y)) = (((complement H) z) (SUC d))) ==> (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))) = (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))))
T c==> ! c==> c<= b0 ccomplement_index f0 f1 f2 c= cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 b0 cloop_map f4 f7 ccomplement f0 f1 b0 c==> c<= cSUC f8 ccomplement_index f0 f1 f2 c= c==> c= cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 cSUC f8 cloop_map f4 f7 ccomplement f0 f1 cSUC f8 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cface_map f0 b0 f7 c= f9 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cface_map f0 b0 f7 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cface_map f0 b0 f7 c= f9 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cface_map f0 b0 f7
+ (a < m) |- ((((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y)) = (((POWER (face_map H)) ((SUC m) - (SUC a))) y))
T c==> c< f0 f1 c= cPOWER * part cinverse * part cface_map f2 cSUC f0 cPOWER * part cface_map f2 cSUC f1 f3 cPOWER * part cface_map f2 c- cSUC f1 cSUC f0 f3
+ |- (((!n. (!x. (!y. ((y = (((POWER (face_map H)) n) x)) = (x = (((POWER (inverse (face_map H))) n) y)))))) ==> ((\n. (!x. (!y. ((y = (((POWER (face_map H)) n) x)) = (x = (((POWER (inverse (face_map H))) n) y)))))) n)) = ((\n. (!x. (!y. ((y = (((POWER (face_map H)) n) x)) = (x = (((POWER (inverse (face_map H))) n) y)))))) n))
T c= c==> ! ! ! c= c= b2 cPOWER * part cface_map f0 b0 b1 c= b1 cPOWER * part cinverse * part cface_map f0 b0 b2 * / ! ! c= c= b2 cPOWER * part cface_map f0 b0 b1 c= b1 cPOWER * part cinverse * part cface_map f0 b0 b2 f1 * / ! ! c= c= b2 cPOWER * part cface_map f0 b0 b1 c= b1 cPOWER * part cinverse * part cface_map f0 b0 b2 f1
+ |- ((\m. (!k. (((is_node_nondegenerate H) /\ ((x IN (dart H)) /\ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (((complement_index H) x) m))))) ==> (?i. (?j. ((i < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x)))) /\ (k = ((((complement_index H) x) i) + j)))))))))) m)
T * / ! c==> c/\ cis_node_nondegenerate f0 c/\ cIN f1 * part cdart f0 c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 ccomplement_index f0 f1 b0 c? / c? / c/\ c< b2 b0 c/\ c<= cNUMERAL cBIT1 c_0 b3 c/\ c< b3 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b2 f1 c= b1 c+ ccomplement_index f0 f1 b2 b3 f2
- ((\ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) ny) |- (((\ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) ny) /\ (?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)))
T c==> * / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 f3 c/\ * / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 f3 c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0
+ (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (i = (ny + (SUC d))), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((SUC d) <= (((complement_index H) z) m)), (L IN NF), ((is_normal H) NF) |- ((?i. (?j. ((i < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) z)))) /\ ((SUC d) = ((((complement_index H) z) i) + j))))))) ==> (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))))
T c==> ! c==> c<= b0 ccomplement_index f0 f1 f2 c= cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 b0 cloop_map f4 f7 ccomplement f0 f1 b0 c==> c~ cIN f4 * * part cfinal_loops f0 f3 c==> cis_restricted f0 c==> c= f8 cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 f9 cloop_map f4 f7 c==> c= chyp'y f0 f3 f4 f5 f7 c==> c= chyp'z f0 f3 f4 f5 f1 c==> c= f9 c+ f6 cSUC f10 c==> c= chyp'p f0 f3 f4 f5 f2 c==> c/\ cis_marked c, f0 c, f3 c, f4 f5 c~ cIN f4 * * part cfinal_loops f0 f3 c==> c<= cSUC f10 ccomplement_index f0 f1 f2 c==> cIN f4 f3 c==> cis_normal f0 f3 c==> c? / c? / c/\ c< b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= cSUC f10 c+ ccomplement_index f0 f1 b0 b1 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cface_map f0 b0 f7 c= f8 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cface_map f0 b0 f7
+ |- ((!H. (!x. (!n. (((is_node_nondegenerate H) /\ (x IN (dart H))) ==> ((((complement_index H) x) n) < (((complement_index H) x) (SUC n))))))) ==> (!H. (!x. (((is_node_nondegenerate H) /\ (x IN (dart H))) ==> (!n. ((((complement_index H) x) n) < (((complement_index H) x) (SUC n))))))))
T c==> ! ! ! c==> c/\ cis_node_nondegenerate b0 cIN b1 * part cdart b0 c< ccomplement_index b0 b1 b2 ccomplement_index b0 b1 cSUC b2 ! ! c==> c/\ cis_node_nondegenerate b0 cIN b1 * part cdart b0 ! c< ccomplement_index b0 b1 b2 ccomplement_index b0 b1 cSUC b2
+ (!s. (!p. (!n. (!x. (!y. (((permutes p) s) ==> ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))))))))) |- ((((permutes p) s) ==> (!n. (!x. (!y. ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))))))) = T)
T c==> ! ! ! ! ! c==> cpermutes b1 b0 c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4 c= c==> cpermutes f0 f1 ! ! ! c= c= b2 cPOWER f0 b0 b1 c= b1 cPOWER * part cinverse f0 b0 b2 cT
+ (i <= ny) |- (i <= (ny + (((complement_index H) z) m)))
T c==> c<= f0 f1 c<= f0 c+ f1 ccomplement_index f2 f3 f4
+ (~ (L IN ((final_loops H) NF))), (((((hyp'z H) NF) L) x) = z), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- (((is_normal H) NF) /\ ((L IN NF) /\ ((in_dart_of_loop z) L)))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c= chyp'z f1 f2 f0 f3 f4 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c==> cIN f0 f2 c==> cis_normal f1 f2 c/\ cis_normal f1 f2 c/\ cIN f0 f2 cin_dart_of_loop f4 f0
+ (y' = (((POWER (inverse (node_map H))) b) (((POWER (face_map H)) a) y))), ((((POWER (inverse (face_map H))) (SUC d)) (((POWER (face_map H)) (SUC m)) y)) = (((POWER (face_map H)) a) y)) |- (((((POWER (inverse (face_map H))) (SUC d)) (((POWER (face_map H)) (SUC m)) y)) = (((POWER (face_map H)) a) y)) /\ (y' = (((POWER (inverse (node_map H))) b) (((POWER (inverse (face_map H))) (SUC d)) (((POWER (face_map H)) (SUC m)) y)))))
T c==> c= f0 cPOWER * part cinverse * part cnode_map f1 f2 cPOWER * part cface_map f1 f3 f4 c==> c= cPOWER * part cinverse * part cface_map f1 cSUC f5 cPOWER * part cface_map f1 cSUC f6 f4 cPOWER * part cface_map f1 f3 f4 c/\ c= cPOWER * part cinverse * part cface_map f1 cSUC f5 cPOWER * part cface_map f1 cSUC f6 f4 cPOWER * part cface_map f1 f3 f4 c= f0 cPOWER * part cinverse * part cnode_map f1 f2 cPOWER * part cinverse * part cface_map f1 cSUC f5 cPOWER * part cface_map f1 cSUC f6 f4
+ (is_restricted H), (y' = (((POWER (inverse (node_map H))) b) (((POWER (face_map H)) a) y))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (m = (a + d)), (((((hyp'p H) NF) L) x) = m), ((NUMERAL (BIT1 _0)) <= b), (b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC d)) z)))) |- ((is_node_nondegenerate H) ==> ((z IN (dart H)) ==> (y' = (((complement H) z) ((((complement_index H) z) d) + b)))))
T c==> cis_restricted f0 c==> c= f1 cPOWER * part cinverse * part cnode_map f0 f2 cPOWER * part cface_map f0 f3 f4 c==> c= chyp'y f0 f5 f6 f7 f4 c==> c= chyp'z f0 f5 f6 f7 f8 c==> c= f9 c+ f3 f10 c==> c= chyp'p f0 f5 f6 f7 f9 c==> c<= cNUMERAL cBIT1 c_0 f2 c==> c< f2 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f10 f8 c==> cis_node_nondegenerate f0 c==> cIN f8 * part cdart f0 c= f1 ccomplement f0 f8 c+ ccomplement_index f0 f8 f10 f2
+ (is_restricted H) |- (((is_node_nondegenerate H) ==> ((z IN (dart H)) ==> ((((((complement_index H) z) d) + b) <= (((complement_index H) z) (SUC d))) /\ ((((complement_index H) z) (SUC d)) <= (((complement_index H) z) m))))) = ((z IN (dart H)) ==> ((((((complement_index H) z) d) + b) <= (((complement_index H) z) (SUC d))) /\ ((((complement_index H) z) (SUC d)) <= (((complement_index H) z) m)))))
T c==> cis_restricted f0 c= c==> cis_node_nondegenerate f0 c==> cIN f1 * part cdart f0 c/\ c<= c+ ccomplement_index f0 f1 f2 f3 ccomplement_index f0 f1 cSUC f2 c<= ccomplement_index f0 f1 cSUC f2 ccomplement_index f0 f1 f4 c==> cIN f1 * part cdart f0 c/\ c<= c+ ccomplement_index f0 f1 f2 f3 ccomplement_index f0 f1 cSUC f2 c<= ccomplement_index f0 f1 cSUC f2 ccomplement_index f0 f1 f4
+ |- ((\p. (((m + n) <= (m + p)) = (n <= p))) p)
T * / c= c<= c+ f0 f1 c+ f0 b0 c<= f1 b0 f2
+ |- ((\n. (((NUMERAL (BIT1 _0)) <= n) ==> ((SUC (PRE n)) = n))) n)
T * / c==> c<= cNUMERAL cBIT1 c_0 b0 c= cSUC cPRE b0 b0 f0
- |- ((\L. (!x. (!k. ((((path_of_loop L) x) k) = (((POWER (loop_map L)) k) x))))) L)
T * / ! ! c= cpath_of_loop b0 b1 b2 cPOWER * part cloop_map b0 b2 b1 f0
- |- (((!y. ((((in_dart_of_loop x) L) /\ ((in_dart_of_loop y) L)) ==> (((((index L) x) y) <= (pre_card_dart_of_loop L)) /\ (y = (((POWER (loop_map L)) (((index L) x) y)) x))))) ==> ((\y. ((((in_dart_of_loop x) L) /\ ((in_dart_of_loop y) L)) ==> (((((index L) x) y) <= (pre_card_dart_of_loop L)) /\ (y = (((POWER (loop_map L)) (((index L) x) y)) x))))) y)) = ((\y. ((((in_dart_of_loop x) L) /\ ((in_dart_of_loop y) L)) ==> (((((index L) x) y) <= (pre_card_dart_of_loop L)) /\ (y = (((POWER (loop_map L)) (((index L) x) y)) x))))) y))
T c= c==> ! c==> c/\ cin_dart_of_loop f0 f1 cin_dart_of_loop b0 f1 c/\ c<= cindex f1 f0 b0 cpre_card_dart_of_loop f1 c= b0 cPOWER * part cloop_map f1 cindex f1 f0 b0 f0 * / c==> c/\ cin_dart_of_loop f0 f1 cin_dart_of_loop b0 f1 c/\ c<= cindex f1 f0 b0 cpre_card_dart_of_loop f1 c= b0 cPOWER * part cloop_map f1 cindex f1 f0 b0 f0 f2 * / c==> c/\ cin_dart_of_loop f0 f1 cin_dart_of_loop b0 f1 c/\ c<= cindex f1 f0 b0 cpre_card_dart_of_loop f1 c= b0 cPOWER * part cloop_map f1 cindex f1 f0 b0 f0 f2
+ (y' = (((POWER (inverse (node_map H))) b) (((POWER (face_map H)) (SUC s)) y))), (m = (a + (SUC s))), ((NUMERAL (BIT1 _0)) <= b), (b < (CARD ((node H) (((POWER (face_map H)) (SUC s)) y)))) |- ((\j. (((NUMERAL (BIT1 _0)) <= (SUC s)) /\ (((SUC s) <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) (SUC s)) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) (SUC s)) y)))))))) b)
T c==> c= f0 cPOWER * part cinverse * part cnode_map f1 f2 cPOWER * part cface_map f1 cSUC f3 f4 c==> c= f5 c+ f6 cSUC f3 c==> c<= cNUMERAL cBIT1 c_0 f2 c==> c< f2 cCARD * * part cnode f1 cPOWER * part cface_map f1 cSUC f3 f4 * / c/\ c<= cNUMERAL cBIT1 c_0 cSUC f3 c/\ c<= cSUC f3 f5 c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c< b0 cCARD * * part cnode f1 cPOWER * part cface_map f1 cSUC f3 f4 c= f0 cPOWER * part cinverse * part cnode_map f1 b0 cPOWER * part cface_map f1 cSUC f3 f4 f2
+ (?i. ((i <= ny) /\ (y' = (((POWER (loop_map L)) i) ((loop_map L) y))))) |- ((?i. ((i <= (ny + (((complement_index H) z) m))) /\ (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))))) = (((?i. ((i <= ny) /\ (y' = (((POWER (loop_map L)) i) ((loop_map L) y))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))) ==> (?i. ((i <= (ny + (((complement_index H) z) m))) /\ (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)))))))
T c==> c? / c/\ c<= b0 f0 c= f1 cPOWER * part cloop_map f2 b0 cloop_map f2 f3 c= c? / c/\ c<= b0 c+ f0 ccomplement_index f4 f5 f6 c= f1 cPOWER * part cloop_map cloop2_transform f4 f7 f2 f8 b0 cloop_map f2 f3 c==> c\/ c? / c/\ c<= b0 f0 c= f1 cPOWER * part cloop_map f2 b0 cloop_map f2 f3 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f6 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f4 cPOWER * part cface_map f4 b0 f3 c= f1 cPOWER * part cinverse * part cnode_map f4 b1 cPOWER * part cface_map f4 b0 f3 c? / c/\ c<= b0 c+ f0 ccomplement_index f4 f5 f6 c= f1 cPOWER * part cloop_map cloop2_transform f4 f7 f2 f8 b0 cloop_map f2 f3
+ |- ((\x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> ((((loop_map L) ((((hyp'y H) NF) L) x)) = ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) /\ (((inv_loop_map L) ((((hyp'z H) NF) L) x)) = ((node_map H) ((((hyp'z H) NF) L) x)))))) x)
T * / c==> c/\ cis_marked c, f0 c, f1 c, f2 b0 c~ cIN f2 * * part cfinal_loops f0 f1 c/\ c= cloop_map f2 chyp'y f0 f1 f2 b0 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 c= cinv_loop_map f2 chyp'z f0 f1 f2 b0 cnode_map f0 chyp'z f0 f1 f2 b0 f3
+ (!s. (!p. (!m. (!n. (!x. ((((permutes p) s) /\ (m <= n)) ==> ((((POWER (inverse p)) m) (((POWER p) n) x)) = (((POWER p) (n - m)) x)))))))) |- ((\p. (!m. (!n. (!x. ((((permutes p) s) /\ (m <= n)) ==> ((((POWER (inverse p)) m) (((POWER p) n) x)) = (((POWER p) (n - m)) x))))))) p)
T c==> ! ! ! ! ! c==> c/\ cpermutes b1 b0 c<= b2 b3 c= cPOWER * part cinverse b1 b2 cPOWER b1 b3 b4 cPOWER b1 c- b3 b2 b4 * / ! ! ! c==> c/\ cpermutes b0 f0 c<= b1 b2 c= cPOWER * part cinverse b0 b1 cPOWER b0 b2 b3 cPOWER b0 c- b2 b1 b3 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- (((!x. (((((is_split_condition H) NF) L) x) = ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))))))) ==> ((\x. (((((is_split_condition H) NF) L) x) = ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))))))) x)) = ((\x. (((((is_split_condition H) NF) L) x) = ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))))))) x))
T c= c==> ! c= cis_split_condition f0 f1 f2 b0 c/\ cis_restricted f0 c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop b0 f2 c= chead_of_atom f0 f1 b0 b0 * / c= cis_split_condition f0 f1 f2 b0 c/\ cis_restricted f0 c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop b0 f2 c= chead_of_atom f0 f1 b0 b0 f3 * / c= cis_split_condition f0 f1 f2 b0 c/\ cis_restricted f0 c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop b0 f2 c= chead_of_atom f0 f1 b0 b0 f3
+ |- ((\NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> ((((loop_map L) ((((hyp'y H) NF) L) x)) = ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) /\ (((inv_loop_map L) ((((hyp'z H) NF) L) x)) = ((node_map H) ((((hyp'z H) NF) L) x)))))))) NF)
T * / ! ! c==> c/\ cis_marked c, f0 c, b0 c, b1 b2 c~ cIN b1 * * part cfinal_loops f0 b0 c/\ c= cloop_map b1 chyp'y f0 b0 b1 b2 cinverse * part cnode_map f0 chyp'y f0 b0 b1 b2 c= cinv_loop_map b1 chyp'z f0 b0 b1 b2 cnode_map f0 chyp'z f0 b0 b1 b2 f1
+ (~ (L IN ((final_loops H) NF))), (is_restricted H), (y' = (((complement H) z) (SUC d))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((SUC d) = ((((complement_index H) z) a) + b)), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((NUMERAL (BIT1 _0)) <= b), (a < m), (b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))), (L IN NF), ((is_normal H) NF) |- (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= f3 ccomplement f1 f4 cSUC f5 c==> c= chyp'y f1 f2 f0 f6 f7 c==> c= chyp'z f1 f2 f0 f6 f4 c==> c= cSUC f5 c+ ccomplement_index f1 f4 f8 f9 c==> c= chyp'p f1 f2 f0 f6 f10 c==> c/\ cis_marked c, f1 c, f2 c, f0 f6 c~ cIN f0 * * part cfinal_loops f1 f2 c==> c<= cNUMERAL cBIT1 c_0 f9 c==> c< f8 f10 c==> c< f9 cCARD * * part cnode f1 cPOWER * part cinverse * part cface_map f1 cSUC f8 f4 c==> cIN f0 f2 c==> cis_normal f1 f2 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f10 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cface_map f1 b0 f7 c= f3 cPOWER * part cinverse * part cnode_map f1 b1 cPOWER * part cface_map f1 b0 f7
+ |- ((\L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> (((in_dart_of_loop ((((hyp'z H) NF) L) x)) L) /\ (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (SUC ((((hyp'm H) NF) L) x)))) ==> (~ (((((hyp'z H) NF) L) x) = (((POWER (face_map H)) k) x))))))))) L)
T * / ! c==> c/\ cis_marked c, f0 c, f1 c, b0 b1 c~ cIN b0 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop chyp'z f0 f1 b0 b1 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cSUC chyp'm f0 f1 b0 b1 c~ c= chyp'z f0 f1 b0 b1 cPOWER * part cface_map f0 b2 b1 f2
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ (y' = (((POWER (inverse (node_map H))) b) (((POWER (face_map H)) a) y))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (m = (a + d)), (((((hyp'p H) NF) L) x) = m), ((plain_hypermap H) /\ ((is_node_nondegenerate H) /\ (z IN (dart H)))), ((NUMERAL (BIT1 _0)) <= b), (b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC d)) z)))) |- (((plain_hypermap H) /\ ((is_node_nondegenerate H) /\ (z IN (dart H)))) /\ (y' = (((complement H) z) ((((complement_index H) z) d) + b))))
T c==> c= f0 cPOWER * part cinverse * part cnode_map f1 f2 cPOWER * part cface_map f1 f3 f4 c==> c= chyp'y f1 f5 f6 f7 f4 c==> c= chyp'z f1 f5 f6 f7 f8 c==> c= f9 c+ f3 f10 c==> c= chyp'p f1 f5 f6 f7 f9 c==> c/\ cplain_hypermap f1 c/\ cis_node_nondegenerate f1 cIN f8 * part cdart f1 c==> c<= cNUMERAL cBIT1 c_0 f2 c==> c< f2 cCARD * * part cnode f1 cPOWER * part cinverse * part cface_map f1 cSUC f10 f8 c/\ c/\ cplain_hypermap f1 c/\ cis_node_nondegenerate f1 cIN f8 * part cdart f1 c= f0 ccomplement f1 f8 c+ ccomplement_index f1 f8 f10 f2
+ |- ((\H. (!x. ((NUMERAL (BIT1 _0)) <= (CARD ((node H) x))))) H)
T * / ! c<= cNUMERAL cBIT1 c_0 cCARD * * part cnode b0 b1 f0
+ (!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))), (i <= ny) |- ((\i'. ((i' <= (ny + (((complement_index H) z) m))) /\ ((((POWER (loop_map L)) i) ((loop_map L) y)) = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i') ((loop_map L) y))))) i)
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f5 cPOWER * part cloop_map f3 b0 cloop_map f3 f5 c==> c<= f6 f0 * / c/\ c<= b0 c+ f0 ccomplement_index f1 f7 f8 c= cPOWER * part cloop_map f3 f6 cloop_map f3 f5 cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f5 f6
+ ((in_dart_of_loop ((loop_map L) y)) ((((loop2_transform H) NF) L) x)) |- (((in_dart_of_loop y') ((((loop2_transform H) NF) L) x)) = (?i. ((i <= (pre_card_dart_of_loop ((((loop2_transform H) NF) L) x))) /\ (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))))))
T c==> cin_dart_of_loop cloop_map f0 f1 cloop2_transform f2 f3 f0 f4 c= cin_dart_of_loop f5 cloop2_transform f2 f3 f0 f4 c? / c/\ c<= b0 cpre_card_dart_of_loop cloop2_transform f2 f3 f0 f4 c= f5 cPOWER * part cloop_map cloop2_transform f2 f3 f0 f4 b0 cloop_map f0 f1
+ (~ (L IN ((final_loops H) NF))), (is_restricted H), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- (!y'. (((in_dart_of_loop y') ((((loop2_transform H) NF) L) x)) = ((?i. ((i <= (((index L) ((inverse (node_map H)) y)) ((node_map H) z))) /\ (y' = (((POWER (loop_map L)) i) ((inverse (node_map H)) y))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= ((((hyp'p H) NF) L) x)) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= chyp'y f1 f2 f0 f3 f4 c==> c= chyp'z f1 f2 f0 f3 f5 c==> c= chyp'p f1 f2 f0 f3 f6 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c==> cIN f0 f2 c==> cis_normal f1 f2 ! c= cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f3 c\/ c? / c/\ c<= b1 cindex f0 cinverse * part cnode_map f1 f4 cnode_map f1 f5 c= b0 cPOWER * part cloop_map f0 b1 cinverse * part cnode_map f1 f4 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 chyp'p f1 f2 f0 f3 c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c< b2 cCARD * * part cnode f1 cPOWER * part cface_map f1 b1 f4 c= b0 cPOWER * part cinverse * part cnode_map f1 b2 cPOWER * part cface_map f1 b1 f4
+ (!s. (!p. (!m. (!n. (!x. ((((permutes p) s) /\ (m <= n)) ==> ((((POWER (inverse p)) m) (((POWER p) n) x)) = (((POWER p) (n - m)) x)))))))), (((permutes p) s) /\ (m <= n)) |- (((((POWER (inverse p)) m) (((POWER p) n) x)) = (((POWER p) (n - m)) x)) = T)
T c==> ! ! ! ! ! c==> c/\ cpermutes b1 b0 c<= b2 b3 c= cPOWER * part cinverse b1 b2 cPOWER b1 b3 b4 cPOWER b1 c- b3 b2 b4 c==> c/\ cpermutes f0 f1 c<= f2 f3 c= c= cPOWER * part cinverse f0 f2 cPOWER f0 f3 f4 cPOWER f0 c- f3 f2 f4 cT
+ |- ((b < (SUC (PRE (CARD ((node H) (((POWER (inverse (face_map H))) (SUC d)) z)))))) = (((((complement_index H) z) d) + b) <= ((((complement_index H) z) d) + (PRE (CARD ((node H) (((POWER (inverse (face_map H))) (SUC d)) z)))))))
T c= c< f0 cSUC cPRE cCARD * * part cnode f1 cPOWER * part cinverse * part cface_map f1 cSUC f2 f3 c<= c+ ccomplement_index f1 f3 f2 f0 c+ ccomplement_index f1 f3 f2 cPRE cCARD * * part cnode f1 cPOWER * part cinverse * part cface_map f1 cSUC f2 f3
+ (~ (L IN ((final_loops H) NF))), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- (((((in_dart_of_loop ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((((loop2_transform H) NF) L) x)) /\ (((pre_card_dart_of_loop ((((loop2_transform H) NF) L) x)) = ((((card2_transform H) NF) L) x)) /\ ((!i. ((i <= (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) = (((POWER (loop_map L)) i) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))))) /\ (!i. ((i <= (((complement_index H) ((((hyp'z H) NF) L) x)) ((((hyp'p H) NF) L) x))) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) ((((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))) + i)) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) = (((complement H) ((((hyp'z H) NF) L) x)) i))))))) ==> (((in_dart_of_loop y') ((((loop2_transform H) NF) L) x)) = ((?i. ((i <= ny) /\ (y' = (((POWER (loop_map L)) i) ((loop_map L) y))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))))) = (((in_dart_of_loop y') ((((loop2_transform H) NF) L) x)) = ((?i. ((i <= ny) /\ (y' = (((POWER (loop_map L)) i) ((loop_map L) y))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c= c==> c/\ cin_dart_of_loop cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 cloop2_transform f1 f2 f0 f3 c/\ c= cpre_card_dart_of_loop cloop2_transform f1 f2 f0 f3 ccard2_transform f1 f2 f0 f3 c/\ ! c==> c<= b0 cindex f0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 cnode_map f1 chyp'z f1 f2 f0 f3 c= cPOWER * part cloop_map cloop2_transform f1 f2 f0 f3 b0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 cPOWER * part cloop_map f0 b0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 ! c==> c<= b0 ccomplement_index f1 chyp'z f1 f2 f0 f3 chyp'p f1 f2 f0 f3 c= cPOWER * part cloop_map cloop2_transform f1 f2 f0 f3 c+ cindex f0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 cnode_map f1 chyp'z f1 f2 f0 f3 b0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 ccomplement f1 chyp'z f1 f2 f0 f3 b0 c= cin_dart_of_loop f4 cloop2_transform f1 f2 f0 f3 c\/ c? / c/\ c<= b0 f5 c= f4 cPOWER * part cloop_map f0 b0 cloop_map f0 f6 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f7 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cface_map f1 b0 f6 c= f4 cPOWER * part cinverse * part cnode_map f1 b1 cPOWER * part cface_map f1 b0 f6 c= cin_dart_of_loop f4 cloop2_transform f1 f2 f0 f3 c\/ c? / c/\ c<= b0 f5 c= f4 cPOWER * part cloop_map f0 b0 cloop_map f0 f6 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f7 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cface_map f1 b0 f6 c= f4 cPOWER * part cinverse * part cnode_map f1 b1 cPOWER * part cface_map f1 b0 f6
+ (~ (L IN ((final_loops H) NF))), (is_restricted H), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- ((((in_dart_of_loop y) L) /\ ((((loop_map L) y) = ((inverse (node_map H)) y)) /\ (~ (((node H) y) = ((node H) x))))) ==> (!y'. (((in_dart_of_loop y') ((((loop2_transform H) NF) L) x)) = ((?i. ((i <= (((index L) ((inverse (node_map H)) y)) ((node_map H) z))) /\ (y' = (((POWER (loop_map L)) i) ((inverse (node_map H)) y))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= chyp'y f1 f2 f0 f3 f4 c==> c= chyp'z f1 f2 f0 f3 f5 c==> c= chyp'p f1 f2 f0 f3 f6 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c==> cIN f0 f2 c==> cis_normal f1 f2 c==> c/\ cin_dart_of_loop f4 f0 c/\ c= cloop_map f0 f4 cinverse * part cnode_map f1 f4 c~ c= * * part cnode f1 f4 * * part cnode f1 f3 ! c= cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f3 c\/ c? / c/\ c<= b1 cindex f0 cinverse * part cnode_map f1 f4 cnode_map f1 f5 c= b0 cPOWER * part cloop_map f0 b1 cinverse * part cnode_map f1 f4 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 f6 c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c< b2 cCARD * * part cnode f1 cPOWER * part cface_map f1 b1 f4 c= b0 cPOWER * part cinverse * part cnode_map f1 b2 cPOWER * part cface_map f1 b1 f4
+ |- ((!NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> (!y. (((in_dart_of_loop y) ((((loop2_transform H) NF) L) x)) = ((?i. ((i <= (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))) /\ (y = (((POWER (loop_map L)) i) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= ((((hyp'p H) NF) L) x)) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) ((((hyp'y H) NF) L) x))))) /\ (y = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) ((((hyp'y H) NF) L) x))))))))))))))))) = T)
T c= ! ! ! c==> c/\ cis_marked c, f0 c, b0 c, b1 b2 c~ cIN b1 * * part cfinal_loops f0 b0 ! c= cin_dart_of_loop b3 cloop2_transform f0 b0 b1 b2 c\/ c? / c/\ c<= b4 cindex b1 cinverse * part cnode_map f0 chyp'y f0 b0 b1 b2 cnode_map f0 chyp'z f0 b0 b1 b2 c= b3 cPOWER * part cloop_map b1 b4 cinverse * part cnode_map f0 chyp'y f0 b0 b1 b2 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b4 c/\ c<= b4 chyp'p f0 b0 b1 b2 c/\ c<= cNUMERAL cBIT1 c_0 b5 c/\ c< b5 cCARD * * part cnode f0 cPOWER * part cface_map f0 b4 chyp'y f0 b0 b1 b2 c= b3 cPOWER * part cinverse * part cnode_map f0 b5 cPOWER * part cface_map f0 b4 chyp'y f0 b0 b1 b2 cT
+ |- ((\k. (((is_node_nondegenerate H) /\ ((x IN (dart H)) /\ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (((complement_index H) x) m))))) ==> (?i. (?j. ((i < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x)))) /\ (k = ((((complement_index H) x) i) + j))))))))) k)
T * / c==> c/\ cis_node_nondegenerate f0 c/\ cIN f1 * part cdart f0 c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 ccomplement_index f0 f1 f2 c? / c? / c/\ c< b1 f2 c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c< b2 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b1 f1 c= b0 c+ ccomplement_index f0 f1 b1 b2 f3
+ (~ (L IN ((final_loops H) NF))), (is_restricted H), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- ((((in_dart_of_loop ((loop_map L) y)) ((((loop2_transform H) NF) L) x)) /\ (((pre_card_dart_of_loop ((((loop2_transform H) NF) L) x)) = (ny + (((complement_index H) z) m))) /\ ((!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))) /\ (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i))))))) ==> (((in_dart_of_loop y') ((((loop2_transform H) NF) L) x)) = ((?i. ((i <= ny) /\ (y' = (((POWER (loop_map L)) i) ((loop_map L) y))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= chyp'y f1 f2 f0 f3 f4 c==> c= chyp'z f1 f2 f0 f3 f5 c==> c= chyp'p f1 f2 f0 f3 f6 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c==> cIN f0 f2 c==> cis_normal f1 f2 c==> c/\ cin_dart_of_loop cloop_map f0 f4 cloop2_transform f1 f2 f0 f3 c/\ c= cpre_card_dart_of_loop cloop2_transform f1 f2 f0 f3 c+ f7 ccomplement_index f1 f5 f6 c/\ ! c==> c<= b0 f7 c= cPOWER * part cloop_map cloop2_transform f1 f2 f0 f3 b0 cloop_map f0 f4 cPOWER * part cloop_map f0 b0 cloop_map f0 f4 ! c==> c<= b0 ccomplement_index f1 f5 f6 c= cPOWER * part cloop_map cloop2_transform f1 f2 f0 f3 c+ f7 b0 cloop_map f0 f4 ccomplement f1 f5 b0 c= cin_dart_of_loop f8 cloop2_transform f1 f2 f0 f3 c\/ c? / c/\ c<= b0 f7 c= f8 cPOWER * part cloop_map f0 b0 cloop_map f0 f4 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f6 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cface_map f1 b0 f4 c= f8 cPOWER * part cinverse * part cnode_map f1 b1 cPOWER * part cface_map f1 b0 f4
+ |- ((\x. (!y. ((y = (((POWER (face_map H)) n) x)) = (x = (((POWER (inverse (face_map H))) n) y))))) x)
T * / ! c= c= b1 cPOWER * part cface_map f0 f1 b0 c= b0 cPOWER * part cinverse * part cface_map f0 f1 b1 f2
+ (m = ((PRE a) + (SUC d))) |- ((((SUC d) <= m) ==> ((((((complement_index H) z) d) + b) <= (((complement_index H) z) (SUC d))) /\ ((((complement_index H) z) (SUC d)) <= (((complement_index H) z) m)))) = ((((((complement_index H) z) d) + b) <= (((complement_index H) z) (SUC d))) /\ ((((complement_index H) z) (SUC d)) <= (((complement_index H) z) m))))
T c==> c= f0 c+ cPRE f1 cSUC f2 c= c==> c<= cSUC f2 f0 c/\ c<= c+ ccomplement_index f3 f4 f2 f5 ccomplement_index f3 f4 cSUC f2 c<= ccomplement_index f3 f4 cSUC f2 ccomplement_index f3 f4 f0 c/\ c<= c+ ccomplement_index f3 f4 f2 f5 ccomplement_index f3 f4 cSUC f2 c<= ccomplement_index f3 f4 cSUC f2 ccomplement_index f3 f4 f0
+ |- (((!NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> ((((loop_map L) ((((hyp'y H) NF) L) x)) = ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) /\ (((inv_loop_map L) ((((hyp'z H) NF) L) x)) = ((node_map H) ((((hyp'z H) NF) L) x)))))))) ==> ((\NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> ((((loop_map L) ((((hyp'y H) NF) L) x)) = ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) /\ (((inv_loop_map L) ((((hyp'z H) NF) L) x)) = ((node_map H) ((((hyp'z H) NF) L) x)))))))) NF)) = ((\NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> ((((loop_map L) ((((hyp'y H) NF) L) x)) = ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) /\ (((inv_loop_map L) ((((hyp'z H) NF) L) x)) = ((node_map H) ((((hyp'z H) NF) L) x)))))))) NF))
T c= c==> ! ! ! c==> c/\ cis_marked c, f0 c, b0 c, b1 b2 c~ cIN b1 * * part cfinal_loops f0 b0 c/\ c= cloop_map b1 chyp'y f0 b0 b1 b2 cinverse * part cnode_map f0 chyp'y f0 b0 b1 b2 c= cinv_loop_map b1 chyp'z f0 b0 b1 b2 cnode_map f0 chyp'z f0 b0 b1 b2 * / ! ! c==> c/\ cis_marked c, f0 c, b0 c, b1 b2 c~ cIN b1 * * part cfinal_loops f0 b0 c/\ c= cloop_map b1 chyp'y f0 b0 b1 b2 cinverse * part cnode_map f0 chyp'y f0 b0 b1 b2 c= cinv_loop_map b1 chyp'z f0 b0 b1 b2 cnode_map f0 chyp'z f0 b0 b1 b2 f1 * / ! ! c==> c/\ cis_marked c, f0 c, b0 c, b1 b2 c~ cIN b1 * * part cfinal_loops f0 b0 c/\ c= cloop_map b1 chyp'y f0 b0 b1 b2 cinverse * part cnode_map f0 chyp'y f0 b0 b1 b2 c= cinv_loop_map b1 chyp'z f0 b0 b1 b2 cnode_map f0 chyp'z f0 b0 b1 b2 f1
+ ((SUC d) <= (SUC m)) |- (((((permutes (face_map H)) (dart H)) /\ ((SUC d) <= (SUC m))) ==> (!x. ((((POWER (inverse (face_map H))) (SUC d)) (((POWER (face_map H)) (SUC m)) x)) = (((POWER (face_map H)) ((SUC m) - (SUC d))) x)))) = (!x. ((((POWER (inverse (face_map H))) (SUC d)) (((POWER (face_map H)) (SUC m)) x)) = (((POWER (face_map H)) ((SUC m) - (SUC d))) x))))
T c==> c<= cSUC f0 cSUC f1 c= c==> c/\ cpermutes * part cface_map f2 * part cdart f2 c<= cSUC f0 cSUC f1 ! c= cPOWER * part cinverse * part cface_map f2 cSUC f0 cPOWER * part cface_map f2 cSUC f1 b0 cPOWER * part cface_map f2 c- cSUC f1 cSUC f0 b0 ! c= cPOWER * part cinverse * part cface_map f2 cSUC f0 cPOWER * part cface_map f2 cSUC f1 b0 cPOWER * part cface_map f2 c- cSUC f1 cSUC f0 b0
+ (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (i = (ny + (SUC d))), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))) /\ ((SUC d) = ((((complement_index H) z) a) + b))), ((SUC d) <= (((complement_index H) z) m)), ((NUMERAL (BIT1 _0)) <= b), (a < m), (L IN NF), ((is_normal H) NF) |- (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))
T c==> ! c==> c<= b0 ccomplement_index f0 f1 f2 c= cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 b0 cloop_map f4 f7 ccomplement f0 f1 b0 c==> c~ cIN f4 * * part cfinal_loops f0 f3 c==> cis_restricted f0 c==> c= f8 cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 f9 cloop_map f4 f7 c==> c= chyp'y f0 f3 f4 f5 f7 c==> c= chyp'z f0 f3 f4 f5 f1 c==> c= f9 c+ f6 cSUC f10 c==> c= chyp'p f0 f3 f4 f5 f2 c==> c/\ cis_marked c, f0 c, f3 c, f4 f5 c~ cIN f4 * * part cfinal_loops f0 f3 c==> c/\ c< f11 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f12 f1 c= cSUC f10 c+ ccomplement_index f0 f1 f12 f11 c==> c<= cSUC f10 ccomplement_index f0 f1 f2 c==> c<= cNUMERAL cBIT1 c_0 f11 c==> c< f12 f2 c==> cIN f4 f3 c==> cis_normal f0 f3 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cface_map f0 b0 f7 c= f8 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cface_map f0 b0 f7
+ |- (((!s. (!p. (!m. (!n. ((((permutes p) s) /\ (m <= n)) ==> (!x. ((((POWER (inverse p)) m) (((POWER p) n) x)) = (((POWER p) (n - m)) x)))))))) ==> ((\s. (!p. (!m. (!n. ((((permutes p) s) /\ (m <= n)) ==> (!x. ((((POWER (inverse p)) m) (((POWER p) n) x)) = (((POWER p) (n - m)) x)))))))) s)) = ((\s. (!p. (!m. (!n. ((((permutes p) s) /\ (m <= n)) ==> (!x. ((((POWER (inverse p)) m) (((POWER p) n) x)) = (((POWER p) (n - m)) x)))))))) s))
T c= c==> ! ! ! ! c==> c/\ cpermutes b1 b0 c<= b2 b3 ! c= cPOWER * part cinverse b1 b2 cPOWER b1 b3 b4 cPOWER b1 c- b3 b2 b4 * / ! ! ! c==> c/\ cpermutes b1 b0 c<= b2 b3 ! c= cPOWER * part cinverse b1 b2 cPOWER b1 b3 b4 cPOWER b1 c- b3 b2 b4 f0 * / ! ! ! c==> c/\ cpermutes b1 b0 c<= b2 b3 ! c= cPOWER * part cinverse b1 b2 cPOWER b1 b3 b4 cPOWER b1 c- b3 b2 b4 f0
+ (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (y' = (((POWER (inverse (node_map H))) b) (((POWER (face_map H)) a) y))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (m = (a + d)), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((NUMERAL (BIT1 _0)) <= a), ((NUMERAL (BIT1 _0)) <= b), (L IN NF), ((is_normal H) NF) |- ((z = (((POWER (face_map H)) (SUC (d + a))) y)) ==> ((b < (CARD ((node H) (((POWER (face_map H)) a) y)))) ==> ((((((complement_index H) z) d) + b) <= (((complement_index H) z) m)) /\ (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + ((((complement_index H) z) d) + b))) ((loop_map L) y))))))
T c==> ! c==> c<= b0 ccomplement_index f0 f1 f2 c= cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 b0 cloop_map f4 f7 ccomplement f0 f1 b0 c==> c~ cIN f4 * * part cfinal_loops f0 f3 c==> cis_restricted f0 c==> c= f8 cPOWER * part cinverse * part cnode_map f0 f9 cPOWER * part cface_map f0 f10 f7 c==> c= chyp'y f0 f3 f4 f5 f7 c==> c= chyp'z f0 f3 f4 f5 f1 c==> c= f2 c+ f10 f11 c==> c= chyp'p f0 f3 f4 f5 f2 c==> c/\ cis_marked c, f0 c, f3 c, f4 f5 c~ cIN f4 * * part cfinal_loops f0 f3 c==> c<= cNUMERAL cBIT1 c_0 f10 c==> c<= cNUMERAL cBIT1 c_0 f9 c==> cIN f4 f3 c==> cis_normal f0 f3 c==> c= f1 cPOWER * part cface_map f0 cSUC c+ f11 f10 f7 c==> c< f9 cCARD * * part cnode f0 cPOWER * part cface_map f0 f10 f7 c/\ c<= c+ ccomplement_index f0 f1 f11 f9 ccomplement_index f0 f1 f2 c= f8 cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 c+ ccomplement_index f0 f1 f11 f9 cloop_map f4 f7
+ |- (((!H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> (((in_dart_of_loop ((((hyp'y H) NF) L) x)) L) /\ ((((loop_map L) ((((hyp'y H) NF) L) x)) = ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) /\ (~ (((node H) ((((hyp'y H) NF) L) x)) = ((node H) x)))))))))) ==> ((\H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> (((in_dart_of_loop ((((hyp'y H) NF) L) x)) L) /\ ((((loop_map L) ((((hyp'y H) NF) L) x)) = ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) /\ (~ (((node H) ((((hyp'y H) NF) L) x)) = ((node H) x)))))))))) H)) = ((\H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> (((in_dart_of_loop ((((hyp'y H) NF) L) x)) L) /\ ((((loop_map L) ((((hyp'y H) NF) L) x)) = ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) /\ (~ (((node H) ((((hyp'y H) NF) L) x)) = ((node H) x)))))))))) H))
T c= c==> ! ! ! ! c==> cis_split_condition b0 b1 b2 b3 c/\ cin_dart_of_loop chyp'y b0 b1 b2 b3 b2 c/\ c= cloop_map b2 chyp'y b0 b1 b2 b3 cinverse * part cnode_map b0 chyp'y b0 b1 b2 b3 c~ c= * * part cnode b0 chyp'y b0 b1 b2 b3 * * part cnode b0 b3 * / ! ! ! c==> cis_split_condition b0 b1 b2 b3 c/\ cin_dart_of_loop chyp'y b0 b1 b2 b3 b2 c/\ c= cloop_map b2 chyp'y b0 b1 b2 b3 cinverse * part cnode_map b0 chyp'y b0 b1 b2 b3 c~ c= * * part cnode b0 chyp'y b0 b1 b2 b3 * * part cnode b0 b3 f0 * / ! ! ! c==> cis_split_condition b0 b1 b2 b3 c/\ cin_dart_of_loop chyp'y b0 b1 b2 b3 b2 c/\ c= cloop_map b2 chyp'y b0 b1 b2 b3 cinverse * part cnode_map b0 chyp'y b0 b1 b2 b3 c~ c= * * part cnode b0 chyp'y b0 b1 b2 b3 * * part cnode b0 b3 f0
+ ((m < n) = ((SUC m) < (SUC n))) |- (((SUC m) < (SUC n)) = (m < n))
T c==> c= c< f0 f1 c< cSUC f0 cSUC f1 c= c< cSUC f0 cSUC f1 c< f0 f1
+ (is_restricted H) |- ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x)))))))))))
T c==> cis_restricted f0 c/\ cplain_hypermap f0 c/\ cconnected_hypermap f0 c/\ csimple_hypermap f0 c/\ cis_no_double_joins f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0
+ (y' = (((complement H) z) (SUC d))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((SUC d) = ((((complement_index H) z) a) + b)), (((((hyp'p H) NF) L) x) = m), ((NUMERAL (BIT1 _0)) <= b), (a < m), (b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))) |- (((plain_hypermap H) /\ ((is_node_nondegenerate H) /\ (z IN (dart H)))) ==> (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))))
T c==> c= f0 ccomplement f1 f2 cSUC f3 c==> c= chyp'y f1 f4 f5 f6 f7 c==> c= chyp'z f1 f4 f5 f6 f2 c==> c= cSUC f3 c+ ccomplement_index f1 f2 f8 f9 c==> c= chyp'p f1 f4 f5 f6 f10 c==> c<= cNUMERAL cBIT1 c_0 f9 c==> c< f8 f10 c==> c< f9 cCARD * * part cnode f1 cPOWER * part cinverse * part cface_map f1 cSUC f8 f2 c==> c/\ cplain_hypermap f1 c/\ cis_node_nondegenerate f1 cIN f2 * part cdart f1 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f10 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cface_map f1 b0 f7 c= f0 cPOWER * part cinverse * part cnode_map f1 b1 cPOWER * part cface_map f1 b0 f7
+ |- (((!n. (n <= ((PRE a) + n))) ==> ((\n. (n <= ((PRE a) + n))) (SUC d))) = ((\n. (n <= ((PRE a) + n))) (SUC d)))
T c= c==> ! c<= b0 c+ cPRE f0 b0 * / c<= b0 c+ cPRE f0 b0 cSUC f1 * / c<= b0 c+ cPRE f0 b0 cSUC f1
- ((\z. (((((hyp'z H) NF) L) x) = z)) z) |- (((\z. (((((hyp'z H) NF) L) x) = z)) z) /\ (?z. (((((hyp'z H) NF) L) x) = z)))
T c==> * / c= chyp'z f0 f1 f2 f3 b0 f4 c/\ * / c= chyp'z f0 f1 f2 f3 b0 f4 c? / c= chyp'z f0 f1 f2 f3 b0
- |- ((\x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))))) x)
T * / c= * * * * part cpath2_transform f0 f1 f2 b0 * * * part cglue * * part cpath_of_loop f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 * * part ccomplement f0 chyp'z f0 f1 f2 b0 cindex f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 cnode_map f0 chyp'z f0 f1 f2 b0 f3
+ |- ((\n. ((SUC (m + n)) = ((SUC m) + n))) n)
T * / c= cSUC c+ f0 b0 c+ cSUC f0 b0 f1
- |- ((\H. (!NF. (((is_normal H) NF) = ((!L. ((L IN NF) ==> (((is_loop H) L) /\ (?x. ((x IN (dart H)) /\ ((in_dart_of_loop x) L)))))) /\ ((!L. ((L IN NF) ==> (?y. (?z. (((in_dart_of_loop y) L) /\ (((in_dart_of_loop z) L) /\ (~ (((node H) y) = ((node H) z))))))))) /\ ((!L. (!L'. (!x. (((L IN NF) /\ ((L' IN NF) /\ (((in_dart_of_loop x) L) /\ ((in_dart_of_loop x) L')))) ==> (L = L'))))) /\ (!L. (!x. (!y. (((L IN NF) /\ (((in_dart_of_loop x) L) /\ (y IN ((node H) x)))) ==> (?L'. ((L' IN NF) /\ ((in_dart_of_loop y) L'))))))))))))) H)
T * / ! c= cis_normal b0 b1 c/\ ! c==> cIN b2 b1 c/\ cis_loop b0 b2 c? / c/\ cIN b3 * part cdart b0 cin_dart_of_loop b3 b2 c/\ ! c==> cIN b2 b1 c? / c? / c/\ cin_dart_of_loop b3 b2 c/\ cin_dart_of_loop b4 b2 c~ c= * * part cnode b0 b3 * * part cnode b0 b4 c/\ ! ! ! c==> c/\ cIN b2 b1 c/\ cIN b3 b1 c/\ cin_dart_of_loop b4 b2 cin_dart_of_loop b4 b3 c= b2 b3 ! ! ! c==> c/\ cIN b2 b1 c/\ cin_dart_of_loop b3 b2 cIN b4 * * part cnode b0 b3 c? / c/\ cIN b5 b1 cin_dart_of_loop b4 b5 f0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- |- ((!i. t) = t)
T c= ! f0 f0
- |- (!m. (((\m. (((((hyp'p H) NF) L) x) = m)) m) ==> (?m. (((((hyp'p H) NF) L) x) = m))))
T c==> * / c= chyp'p f0 f1 f2 f3 b0 f4 c? / c= chyp'p f0 f1 f2 f3 b0
- ((is_normal H) NF) |- ((\L. ((L IN NF) ==> (((is_loop H) L) /\ (?x. ((x IN (dart H)) /\ ((in_dart_of_loop x) L)))))) L)
T c==> cis_normal f0 f1 * / c==> cIN b0 f1 c/\ cis_loop f0 b0 c? / c/\ cIN b1 * part cdart f0 cin_dart_of_loop b1 b0 f2
- |- (((is_normal H) NF) = ((!L. ((L IN NF) ==> (((is_loop H) L) /\ (?x. ((x IN (dart H)) /\ ((in_dart_of_loop x) L)))))) /\ ((!L. ((L IN NF) ==> (?y. (?z. (((in_dart_of_loop y) L) /\ (((in_dart_of_loop z) L) /\ (~ (((node H) y) = ((node H) z))))))))) /\ ((!L. (!L'. (!x. (((L IN NF) /\ ((L' IN NF) /\ (((in_dart_of_loop x) L) /\ ((in_dart_of_loop x) L')))) ==> (L = L'))))) /\ (!L. (!x. (!y. (((L IN NF) /\ (((in_dart_of_loop x) L) /\ (y IN ((node H) x)))) ==> (?L'. ((L' IN NF) /\ ((in_dart_of_loop y) L')))))))))))
T c= cis_normal f0 f1 c/\ ! c==> cIN b0 f1 c/\ cis_loop f0 b0 c? / c/\ cIN b1 * part cdart f0 cin_dart_of_loop b1 b0 c/\ ! c==> cIN b0 f1 c? / c? / c/\ cin_dart_of_loop b1 b0 c/\ cin_dart_of_loop b2 b0 c~ c= * * part cnode f0 b1 * * part cnode f0 b2 c/\ ! ! ! c==> c/\ cIN b0 f1 c/\ cIN b1 f1 c/\ cin_dart_of_loop b2 b0 cin_dart_of_loop b2 b1 c= b0 b1 ! ! ! c==> c/\ cIN b0 f1 c/\ cin_dart_of_loop b1 b0 cIN b2 * * part cnode f0 b1 c? / c/\ cIN b3 f1 cin_dart_of_loop b2 b3
- ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny) |- ((\ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) ny)
T c==> c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 f3 * / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 f3
- (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (?j. (((NUMERAL (BIT1 _0)) <= a) /\ ((a <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) a) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) a) y)))))))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- ((?j. (((NUMERAL (BIT1 _0)) <= a) /\ ((a <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) a) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) a) y)))))))) /\ (?i. ((i <= (ny + (((complement_index H) z) m))) /\ (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))))))
T c==> ! c==> c<= b0 ccomplement_index f0 f1 f2 c= cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 b0 cloop_map f4 f7 ccomplement f0 f1 b0 c==> c? / c/\ c<= cNUMERAL cBIT1 c_0 f8 c/\ c<= f8 f2 c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c< b0 cCARD * * part cnode f0 cPOWER * part cface_map f0 f8 f7 c= f9 cPOWER * part cinverse * part cnode_map f0 b0 cPOWER * part cface_map f0 f8 f7 c==> c~ cIN f4 * * part cfinal_loops f0 f3 c==> cis_restricted f0 c==> c= chyp'y f0 f3 f4 f5 f7 c==> c= chyp'z f0 f3 f4 f5 f1 c==> c= chyp'p f0 f3 f4 f5 f2 c==> c/\ cis_marked c, f0 c, f3 c, f4 f5 c~ cIN f4 * * part cfinal_loops f0 f3 c==> cIN f4 f3 c==> cis_normal f0 f3 c/\ c? / c/\ c<= cNUMERAL cBIT1 c_0 f8 c/\ c<= f8 f2 c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c< b0 cCARD * * part cnode f0 cPOWER * part cface_map f0 f8 f7 c= f9 cPOWER * part cinverse * part cnode_map f0 b0 cPOWER * part cface_map f0 f8 f7 c? / c/\ c<= b0 c+ f6 ccomplement_index f0 f1 f2 c= f9 cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 b0 cloop_map f4 f7
- |- ((((((hyp'z H) NF) L) x) = z) ==> (?z. (((((hyp'z H) NF) L) x) = z)))
T c==> c= chyp'z f0 f1 f2 f3 f4 c? / c= chyp'z f0 f1 f2 f3 b0
- |- ((?d. t) = t)
T c= c? / f0 f0
- ((\y. (((((hyp'y H) NF) L) x) = y)) y) |- (((\y. (((((hyp'y H) NF) L) x) = y)) y) /\ (?y. (((((hyp'y H) NF) L) x) = y)))
T c==> * / c= chyp'y f0 f1 f2 f3 b0 f4 c/\ * / c= chyp'y f0 f1 f2 f3 b0 f4 c? / c= chyp'y f0 f1 f2 f3 b0
- (L IN NF) |- ((L IN NF) = T)
T c==> cIN f0 f1 c= cIN f0 f1 cT
- |- ((((((hyp'p H) NF) L) x) = m) = ((\m. (((((hyp'p H) NF) L) x) = m)) m))
T c= c= chyp'p f0 f1 f2 f3 f4 * / c= chyp'p f0 f1 f2 f3 b0 f4
- |- (((in_dart_of_loop x) L) ==> ((in_dart_of_loop ((inv_loop_map L) x)) L))
T c==> cin_dart_of_loop f0 f1 cin_dart_of_loop cinv_loop_map f1 f0 f1
- (~ (L IN ((final_loops H) NF))), (((((hyp'z H) NF) L) x) = z), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- ((in_dart_of_loop ((inv_loop_map L) z)) L)
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c= chyp'z f1 f2 f0 f3 f4 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 cin_dart_of_loop cinv_loop_map f0 f4 f0
- (~ (L IN ((final_loops H) NF))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- (((((in_dart_of_loop ((loop_map L) y)) L) /\ ((in_dart_of_loop ((inv_loop_map L) z)) L)) ==> (((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) <= (pre_card_dart_of_loop L)) /\ (((inv_loop_map L) z) = (((POWER (loop_map L)) (((index L) ((loop_map L) y)) ((inv_loop_map L) z))) ((loop_map L) y))))) = (((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) <= (pre_card_dart_of_loop L)) /\ (((inv_loop_map L) z) = (((POWER (loop_map L)) (((index L) ((loop_map L) y)) ((inv_loop_map L) z))) ((loop_map L) y)))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c= chyp'y f1 f2 f0 f3 f4 c==> c= chyp'z f1 f2 f0 f3 f5 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c= c==> c/\ cin_dart_of_loop cloop_map f0 f4 f0 cin_dart_of_loop cinv_loop_map f0 f5 f0 c/\ c<= cindex f0 cloop_map f0 f4 cinv_loop_map f0 f5 cpre_card_dart_of_loop f0 c= cinv_loop_map f0 f5 cPOWER * part cloop_map f0 cindex f0 cloop_map f0 f4 cinv_loop_map f0 f5 cloop_map f0 f4 c/\ c<= cindex f0 cloop_map f0 f4 cinv_loop_map f0 f5 cpre_card_dart_of_loop f0 c= cinv_loop_map f0 f5 cPOWER * part cloop_map f0 cindex f0 cloop_map f0 f4 cinv_loop_map f0 f5 cloop_map f0 f4
- |- (!y. (((\y. (((((hyp'y H) NF) L) x) = y)) y) ==> (?y. (((((hyp'y H) NF) L) x) = y))))
T c==> * / c= chyp'y f0 f1 f2 f3 b0 f4 c? / c= chyp'y f0 f1 f2 f3 b0
- (((((hyp'z H) NF) L) x) = z) |- ((\z. (((((hyp'z H) NF) L) x) = z)) z)
T c==> c= chyp'z f0 f1 f2 f3 f4 * / c= chyp'z f0 f1 f2 f3 b0 f4
- (((((hyp'y H) NF) L) x) = y) |- ((\y. (((((hyp'y H) NF) L) x) = y)) y)
T c==> c= chyp'y f0 f1 f2 f3 f4 * / c= chyp'y f0 f1 f2 f3 b0 f4
- ((\m. (((((hyp'p H) NF) L) x) = m)) m) |- (((((((hyp'p H) NF) L) x) = m) ==> (?m. (((((hyp'p H) NF) L) x) = m))) = (?m. (((((hyp'p H) NF) L) x) = m)))
T c==> * / c= chyp'p f0 f1 f2 f3 b0 f4 c= c==> c= chyp'p f0 f1 f2 f3 f4 c? / c= chyp'p f0 f1 f2 f3 b0 c? / c= chyp'p f0 f1 f2 f3 b0
- |- ((\x. ((I x) = x)) x)
T * / c= cI b0 b0 f0
- (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- ((?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))) /\ (?i. ((i <= (ny + (((complement_index H) z) m))) /\ (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))))))
T c==> ! c==> c<= b0 ccomplement_index f0 f1 f2 c= cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 b0 cloop_map f4 f7 ccomplement f0 f1 b0 c==> c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cface_map f0 b0 f7 c= f8 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cface_map f0 b0 f7 c==> c~ cIN f4 * * part cfinal_loops f0 f3 c==> cis_restricted f0 c==> c= chyp'y f0 f3 f4 f5 f7 c==> c= chyp'z f0 f3 f4 f5 f1 c==> c= chyp'p f0 f3 f4 f5 f2 c==> c/\ cis_marked c, f0 c, f3 c, f4 f5 c~ cIN f4 * * part cfinal_loops f0 f3 c==> cIN f4 f3 c==> cis_normal f0 f3 c/\ c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cface_map f0 b0 f7 c= f8 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cface_map f0 b0 f7 c? / c/\ c<= b0 c+ f6 ccomplement_index f0 f1 f2 c= f8 cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 b0 cloop_map f4 f7
- |- ((\L. (!x. (((in_dart_of_loop x) L) ==> ((in_dart_of_loop ((loop_map L) x)) L)))) L)
T * / ! c==> cin_dart_of_loop b1 b0 cin_dart_of_loop cloop_map b0 b1 b0 f0
- (!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))), (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (?i. ((i <= (ny + (((complement_index H) z) m))) /\ (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- ((?i. ((i <= (ny + (((complement_index H) z) m))) /\ (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))))) /\ ((?i. ((i <= ny) /\ (y' = (((POWER (loop_map L)) i) ((loop_map L) y))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f5 cPOWER * part cloop_map f3 b0 cloop_map f3 f5 c==> ! c==> c<= b0 ccomplement_index f1 f6 f7 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 c+ f0 b0 cloop_map f3 f5 ccomplement f1 f6 b0 c==> c? / c/\ c<= b0 c+ f0 ccomplement_index f1 f6 f7 c= f8 cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f5 c==> c~ cIN f3 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= chyp'y f1 f2 f3 f4 f5 c==> c= chyp'z f1 f2 f3 f4 f6 c==> c= chyp'p f1 f2 f3 f4 f7 c==> c/\ cis_marked c, f1 c, f2 c, f3 f4 c~ cIN f3 * * part cfinal_loops f1 f2 c==> cIN f3 f2 c==> cis_normal f1 f2 c/\ c? / c/\ c<= b0 c+ f0 ccomplement_index f1 f6 f7 c= f8 cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f5 c\/ c? / c/\ c<= b0 f0 c= f8 cPOWER * part cloop_map f3 b0 cloop_map f3 f5 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f7 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cface_map f1 b0 f5 c= f8 cPOWER * part cinverse * part cnode_map f1 b1 cPOWER * part cface_map f1 b0 f5
- ((is_normal H) NF) |- (((!L. ((L IN NF) ==> (((is_loop H) L) /\ (?x. ((x IN (dart H)) /\ ((in_dart_of_loop x) L)))))) ==> ((\L. ((L IN NF) ==> (((is_loop H) L) /\ (?x. ((x IN (dart H)) /\ ((in_dart_of_loop x) L)))))) L)) = ((\L. ((L IN NF) ==> (((is_loop H) L) /\ (?x. ((x IN (dart H)) /\ ((in_dart_of_loop x) L)))))) L))
T c==> cis_normal f0 f1 c= c==> ! c==> cIN b0 f1 c/\ cis_loop f0 b0 c? / c/\ cIN b1 * part cdart f0 cin_dart_of_loop b1 b0 * / c==> cIN b0 f1 c/\ cis_loop f0 b0 c? / c/\ cIN b1 * part cdart f0 cin_dart_of_loop b1 b0 f2 * / c==> cIN b0 f1 c/\ cis_loop f0 b0 c? / c/\ cIN b1 * part cdart f0 cin_dart_of_loop b1 b0 f2
- |- (((in_dart_of_loop x) L) ==> ((in_dart_of_loop ((loop_map L) x)) L))
T c==> cin_dart_of_loop f0 f1 cin_dart_of_loop cloop_map f1 f0 f1
- |- ((((((hyp'z H) NF) L) x) = z) = ((\z. (((((hyp'z H) NF) L) x) = z)) z))
T c= c= chyp'z f0 f1 f2 f3 f4 * / c= chyp'z f0 f1 f2 f3 b0 f4
- (~ (L IN ((final_loops H) NF))), (((((hyp'z H) NF) L) x) = z), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- ((((in_dart_of_loop z) L) ==> ((in_dart_of_loop ((inv_loop_map L) z)) L)) = ((in_dart_of_loop ((inv_loop_map L) z)) L))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c= chyp'z f1 f2 f0 f3 f4 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c= c==> cin_dart_of_loop f4 f0 cin_dart_of_loop cinv_loop_map f0 f4 f0 cin_dart_of_loop cinv_loop_map f0 f4 f0
- |- ((\NF. (((is_normal H) NF) = ((!L. ((L IN NF) ==> (((is_loop H) L) /\ (?x. ((x IN (dart H)) /\ ((in_dart_of_loop x) L)))))) /\ ((!L. ((L IN NF) ==> (?y. (?z. (((in_dart_of_loop y) L) /\ (((in_dart_of_loop z) L) /\ (~ (((node H) y) = ((node H) z))))))))) /\ ((!L. (!L'. (!x. (((L IN NF) /\ ((L' IN NF) /\ (((in_dart_of_loop x) L) /\ ((in_dart_of_loop x) L')))) ==> (L = L'))))) /\ (!L. (!x. (!y. (((L IN NF) /\ (((in_dart_of_loop x) L) /\ (y IN ((node H) x)))) ==> (?L'. ((L' IN NF) /\ ((in_dart_of_loop y) L')))))))))))) NF)
T * / c= cis_normal f0 b0 c/\ ! c==> cIN b1 b0 c/\ cis_loop f0 b1 c? / c/\ cIN b2 * part cdart f0 cin_dart_of_loop b2 b1 c/\ ! c==> cIN b1 b0 c? / c? / c/\ cin_dart_of_loop b2 b1 c/\ cin_dart_of_loop b3 b1 c~ c= * * part cnode f0 b2 * * part cnode f0 b3 c/\ ! ! ! c==> c/\ cIN b1 b0 c/\ cIN b2 b0 c/\ cin_dart_of_loop b3 b1 cin_dart_of_loop b3 b2 c= b1 b2 ! ! ! c==> c/\ cIN b1 b0 c/\ cin_dart_of_loop b2 b1 cIN b3 * * part cnode f0 b2 c? / c/\ cIN b4 b0 cin_dart_of_loop b3 b4 f1
- |- ((\x. ((((complement_index H) x) (NUMERAL _0)) = (NUMERAL _0))) x)
T * / c= ccomplement_index f0 b0 cNUMERAL c_0 cNUMERAL c_0 f1
- |- (((!f. (((POWER f) (NUMERAL _0)) = I)) ==> ((\f. (((POWER f) (NUMERAL _0)) = I)) f)) = ((\f. (((POWER f) (NUMERAL _0)) = I)) f))
T c= c==> ! c= * * part cPOWER b0 cNUMERAL c_0 part cI * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0 * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0
- (~ (L IN ((final_loops H) NF))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- (((in_dart_of_loop ((loop_map L) y)) L) /\ ((in_dart_of_loop ((inv_loop_map L) z)) L))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c= chyp'y f1 f2 f0 f3 f4 c==> c= chyp'z f1 f2 f0 f3 f5 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c/\ cin_dart_of_loop cloop_map f0 f4 f0 cin_dart_of_loop cinv_loop_map f0 f5 f0
- |- (((!L. (!x. (!k. ((((path_of_loop L) x) k) = (((POWER (loop_map L)) k) x))))) ==> ((\L. (!x. (!k. ((((path_of_loop L) x) k) = (((POWER (loop_map L)) k) x))))) L)) = ((\L. (!x. (!k. ((((path_of_loop L) x) k) = (((POWER (loop_map L)) k) x))))) L))
T c= c==> ! ! ! c= cpath_of_loop b0 b1 b2 cPOWER * part cloop_map b0 b2 b1 * / ! ! c= cpath_of_loop b0 b1 b2 cPOWER * part cloop_map b0 b2 b1 f0 * / ! ! c= cpath_of_loop b0 b1 b2 cPOWER * part cloop_map b0 b2 b1 f0
- (!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))), (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (?i. ((i <= (ny + (((complement_index H) z) m))) /\ (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- ((?i. ((i <= ny) /\ (y' = (((POWER (loop_map L)) i) ((loop_map L) y))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f5 cPOWER * part cloop_map f3 b0 cloop_map f3 f5 c==> ! c==> c<= b0 ccomplement_index f1 f6 f7 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 c+ f0 b0 cloop_map f3 f5 ccomplement f1 f6 b0 c==> c? / c/\ c<= b0 c+ f0 ccomplement_index f1 f6 f7 c= f8 cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f5 c==> c~ cIN f3 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= chyp'y f1 f2 f3 f4 f5 c==> c= chyp'z f1 f2 f3 f4 f6 c==> c= chyp'p f1 f2 f3 f4 f7 c==> c/\ cis_marked c, f1 c, f2 c, f3 f4 c~ cIN f3 * * part cfinal_loops f1 f2 c==> cIN f3 f2 c==> cis_normal f1 f2 c\/ c? / c/\ c<= b0 f0 c= f8 cPOWER * part cloop_map f3 b0 cloop_map f3 f5 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f7 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cface_map f1 b0 f5 c= f8 cPOWER * part cinverse * part cnode_map f1 b1 cPOWER * part cface_map f1 b0 f5
- ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny), ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) <= (pre_card_dart_of_loop L)) |- (ny <= (pre_card_dart_of_loop L))
T c==> c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 f3 c==> c<= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 cpre_card_dart_of_loop f0 c<= f3 cpre_card_dart_of_loop f0
- |- ((((\m. (((((hyp'p H) NF) L) x) = m)) m) ==> (?m. (((((hyp'p H) NF) L) x) = m))) = T)
T c= c==> * / c= chyp'p f0 f1 f2 f3 b0 f4 c? / c= chyp'p f0 f1 f2 f3 b0 cT
- (~ (L IN ((final_loops H) NF))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- (((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) <= (pre_card_dart_of_loop L)) /\ (((inv_loop_map L) z) = (((POWER (loop_map L)) (((index L) ((loop_map L) y)) ((inv_loop_map L) z))) ((loop_map L) y))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c= chyp'y f1 f2 f0 f3 f4 c==> c= chyp'z f1 f2 f0 f3 f5 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c/\ c<= cindex f0 cloop_map f0 f4 cinv_loop_map f0 f5 cpre_card_dart_of_loop f0 c= cinv_loop_map f0 f5 cPOWER * part cloop_map f0 cindex f0 cloop_map f0 f4 cinv_loop_map f0 f5 cloop_map f0 f4
- |- (((!H. (!NF. (!L. (!x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))))))))) ==> ((\H. (!NF. (!L. (!x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))))))))) H)) = ((\H. (!NF. (!L. (!x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))))))))) H))
T c= c==> ! ! ! ! c= * * * * part cpath2_transform b0 b1 b2 b3 * * * part cglue * * part cpath_of_loop b2 cinverse * part cnode_map b0 chyp'y b0 b1 b2 b3 * * part ccomplement b0 chyp'z b0 b1 b2 b3 cindex b2 cinverse * part cnode_map b0 chyp'y b0 b1 b2 b3 cnode_map b0 chyp'z b0 b1 b2 b3 * / ! ! ! c= * * * * part cpath2_transform b0 b1 b2 b3 * * * part cglue * * part cpath_of_loop b2 cinverse * part cnode_map b0 chyp'y b0 b1 b2 b3 * * part ccomplement b0 chyp'z b0 b1 b2 b3 cindex b2 cinverse * part cnode_map b0 chyp'y b0 b1 b2 b3 cnode_map b0 chyp'z b0 b1 b2 b3 f0 * / ! ! ! c= * * * * part cpath2_transform b0 b1 b2 b3 * * * part cglue * * part cpath_of_loop b2 cinverse * part cnode_map b0 chyp'y b0 b1 b2 b3 * * part ccomplement b0 chyp'z b0 b1 b2 b3 cindex b2 cinverse * part cnode_map b0 chyp'y b0 b1 b2 b3 cnode_map b0 chyp'z b0 b1 b2 b3 f0
- |- ((\x. (!y. ((((in_dart_of_loop x) L) /\ ((in_dart_of_loop y) L)) ==> (((((index L) x) y) <= (pre_card_dart_of_loop L)) /\ (y = (((POWER (loop_map L)) (((index L) x) y)) x)))))) x)
T * / ! c==> c/\ cin_dart_of_loop b0 f0 cin_dart_of_loop b1 f0 c/\ c<= cindex f0 b0 b1 cpre_card_dart_of_loop f0 c= b1 cPOWER * part cloop_map f0 cindex f0 b0 b1 b0 f1
- |- ((\H. (!x. ((((complement_index H) x) (NUMERAL _0)) = (NUMERAL _0)))) H)
T * / ! c= ccomplement_index b0 b1 cNUMERAL c_0 cNUMERAL c_0 f0
- ((\ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) ny) |- ((((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny) ==> (?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny))) = (?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)))
T c==> * / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 f3 c= c==> c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 f3 c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0
- |- ((\L. (!x. (((in_dart_of_loop x) L) ==> ((in_dart_of_loop ((inv_loop_map L) x)) L)))) L)
T * / ! c==> cin_dart_of_loop b1 b0 cin_dart_of_loop cinv_loop_map b0 b1 b0 f0
- ((\z. (((((hyp'z H) NF) L) x) = z)) z) |- (((((((hyp'z H) NF) L) x) = z) ==> (?z. (((((hyp'z H) NF) L) x) = z))) = (?z. (((((hyp'z H) NF) L) x) = z)))
T c==> * / c= chyp'z f0 f1 f2 f3 b0 f4 c= c==> c= chyp'z f0 f1 f2 f3 f4 c? / c= chyp'z f0 f1 f2 f3 b0 c? / c= chyp'z f0 f1 f2 f3 b0
- |- ((\x. (((in_dart_of_loop x) L) ==> ((in_dart_of_loop ((loop_map L) x)) L))) x)
T * / c==> cin_dart_of_loop b0 f0 cin_dart_of_loop cloop_map f0 b0 f0 f1
- |- ((\H. (!NF. (!L. (!x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))))))))) H)
T * / ! ! ! c= * * * * part cpath2_transform b0 b1 b2 b3 * * * part cglue * * part cpath_of_loop b2 cinverse * part cnode_map b0 chyp'y b0 b1 b2 b3 * * part ccomplement b0 chyp'z b0 b1 b2 b3 cindex b2 cinverse * part cnode_map b0 chyp'y b0 b1 b2 b3 cnode_map b0 chyp'z b0 b1 b2 b3 f0
- |- (((!NF. (!L. (!x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))))))) ==> ((\NF. (!L. (!x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))))))) NF)) = ((\NF. (!L. (!x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))))))) NF))
T c= c==> ! ! ! c= * * * * part cpath2_transform f0 b0 b1 b2 * * * part cglue * * part cpath_of_loop b1 cinverse * part cnode_map f0 chyp'y f0 b0 b1 b2 * * part ccomplement f0 chyp'z f0 b0 b1 b2 cindex b1 cinverse * part cnode_map f0 chyp'y f0 b0 b1 b2 cnode_map f0 chyp'z f0 b0 b1 b2 * / ! ! c= * * * * part cpath2_transform f0 b0 b1 b2 * * * part cglue * * part cpath_of_loop b1 cinverse * part cnode_map f0 chyp'y f0 b0 b1 b2 * * part ccomplement f0 chyp'z f0 b0 b1 b2 cindex b1 cinverse * part cnode_map f0 chyp'y f0 b0 b1 b2 cnode_map f0 chyp'z f0 b0 b1 b2 f1 * / ! ! c= * * * * part cpath2_transform f0 b0 b1 b2 * * * part cglue * * part cpath_of_loop b1 cinverse * part cnode_map f0 chyp'y f0 b0 b1 b2 * * part ccomplement f0 chyp'z f0 b0 b1 b2 cindex b1 cinverse * part cnode_map f0 chyp'y f0 b0 b1 b2 cnode_map f0 chyp'z f0 b0 b1 b2 f1
- |- ((?m. (((((hyp'p H) NF) L) x) = m)) ==> (?m. (((((hyp'p H) NF) L) x) = m)))
T c==> c? / c= chyp'p f0 f1 f2 f3 b0 c? / c= chyp'p f0 f1 f2 f3 b0
- (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (?j. ((a < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))) /\ ((SUC d) = ((((complement_index H) z) a) + j)))))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (i = (ny + (SUC d))), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((SUC d) <= (((complement_index H) z) m)), (L IN NF), ((is_normal H) NF) |- (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))
T c==> ! c==> c<= b0 ccomplement_index f0 f1 f2 c= cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 b0 cloop_map f4 f7 ccomplement f0 f1 b0 c==> c? / c/\ c< f8 f2 c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c< b0 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f8 f1 c= cSUC f9 c+ ccomplement_index f0 f1 f8 b0 c==> c~ cIN f4 * * part cfinal_loops f0 f3 c==> cis_restricted f0 c==> c= f10 cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 f11 cloop_map f4 f7 c==> c= chyp'y f0 f3 f4 f5 f7 c==> c= chyp'z f0 f3 f4 f5 f1 c==> c= f11 c+ f6 cSUC f9 c==> c= chyp'p f0 f3 f4 f5 f2 c==> c/\ cis_marked c, f0 c, f3 c, f4 f5 c~ cIN f4 * * part cfinal_loops f0 f3 c==> c<= cSUC f9 ccomplement_index f0 f1 f2 c==> cIN f4 f3 c==> cis_normal f0 f3 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cface_map f0 b0 f7 c= f10 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cface_map f0 b0 f7
- |- ((((\ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) ny) ==> (?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny))) = T)
T c= c==> * / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 f3 c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 cT
- (b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC d)) z)))) |- (T = (b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC d)) z)))))
T c==> c< f0 cCARD * * part cnode f1 cPOWER * part cinverse * part cface_map f1 cSUC f2 f3 c= cT c< f0 cCARD * * part cnode f1 cPOWER * part cinverse * part cface_map f1 cSUC f2 f3
- |- ((((complement_index H) x) (NUMERAL _0)) = (NUMERAL _0))
T c= ccomplement_index f0 f1 cNUMERAL c_0 cNUMERAL c_0
- (((((hyp'p H) NF) L) x) = m) |- ((((((hyp'p H) NF) L) x) = m) /\ (?m. (((((hyp'p H) NF) L) x) = m)))
T c==> c= chyp'p f0 f1 f2 f3 f4 c/\ c= chyp'p f0 f1 f2 f3 f4 c? / c= chyp'p f0 f1 f2 f3 b0
- (((((hyp'y H) NF) L) x) = y), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- ((in_dart_of_loop ((loop_map L) y)) L)
T c==> c= chyp'y f0 f1 f2 f3 f4 c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 cin_dart_of_loop cloop_map f2 f4 f2
- (y' = (((POWER (inverse (node_map H))) b) (((POWER (face_map H)) a) y))) |- (T = (y' = (((POWER (inverse (node_map H))) b) (((POWER (face_map H)) a) y))))
T c==> c= f0 cPOWER * part cinverse * part cnode_map f1 f2 cPOWER * part cface_map f1 f3 f4 c= cT c= f0 cPOWER * part cinverse * part cnode_map f1 f2 cPOWER * part cface_map f1 f3 f4
- (((((hyp'y H) NF) L) x) = y), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- ((in_dart_of_loop y) L)
T c==> c= chyp'y f0 f1 f2 f3 f4 c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 cin_dart_of_loop f4 f2
- (((((hyp'y H) NF) L) x) = y) |- ((((((hyp'y H) NF) L) x) = y) /\ (?y. (((((hyp'y H) NF) L) x) = y)))
T c==> c= chyp'y f0 f1 f2 f3 f4 c/\ c= chyp'y f0 f1 f2 f3 f4 c? / c= chyp'y f0 f1 f2 f3 b0
- |- ((\k. ((((path_of_loop L) x) k) = (((POWER (loop_map L)) k) x))) k)
T * / c= cpath_of_loop f0 f1 b0 cPOWER * part cloop_map f0 b0 f1 f2
- |- (((!x. (((in_dart_of_loop x) L) ==> ((in_dart_of_loop ((inv_loop_map L) x)) L))) ==> ((\x. (((in_dart_of_loop x) L) ==> ((in_dart_of_loop ((inv_loop_map L) x)) L))) x)) = ((\x. (((in_dart_of_loop x) L) ==> ((in_dart_of_loop ((inv_loop_map L) x)) L))) x))
T c= c==> ! c==> cin_dart_of_loop b0 f0 cin_dart_of_loop cinv_loop_map f0 b0 f0 * / c==> cin_dart_of_loop b0 f0 cin_dart_of_loop cinv_loop_map f0 b0 f0 f1 * / c==> cin_dart_of_loop b0 f0 cin_dart_of_loop cinv_loop_map f0 b0 f0 f1
- (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (?j. (((NUMERAL (BIT1 _0)) <= a) /\ ((a <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) a) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) a) y)))))))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- (?i. ((i <= (ny + (((complement_index H) z) m))) /\ (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)))))
T c==> ! c==> c<= b0 ccomplement_index f0 f1 f2 c= cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 b0 cloop_map f4 f7 ccomplement f0 f1 b0 c==> c? / c/\ c<= cNUMERAL cBIT1 c_0 f8 c/\ c<= f8 f2 c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c< b0 cCARD * * part cnode f0 cPOWER * part cface_map f0 f8 f7 c= f9 cPOWER * part cinverse * part cnode_map f0 b0 cPOWER * part cface_map f0 f8 f7 c==> c~ cIN f4 * * part cfinal_loops f0 f3 c==> cis_restricted f0 c==> c= chyp'y f0 f3 f4 f5 f7 c==> c= chyp'z f0 f3 f4 f5 f1 c==> c= chyp'p f0 f3 f4 f5 f2 c==> c/\ cis_marked c, f0 c, f3 c, f4 f5 c~ cIN f4 * * part cfinal_loops f0 f3 c==> cIN f4 f3 c==> cis_normal f0 f3 c? / c/\ c<= b0 c+ f6 ccomplement_index f0 f1 f2 c= f9 cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 b0 cloop_map f4 f7
- |- ((\n. (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0)))) n)
T * / c= cglue f0 f1 b0 cNUMERAL c_0 * f0 cNUMERAL c_0 f2
- |- ((?y. (((((hyp'y H) NF) L) x) = y)) ==> (?y. (((((hyp'y H) NF) L) x) = y)))
T c==> c? / c= chyp'y f0 f1 f2 f3 b0 c? / c= chyp'y f0 f1 f2 f3 b0
- (((((hyp'z H) NF) L) x) = z) |- ((((((hyp'z H) NF) L) x) = z) /\ (?z. (((((hyp'z H) NF) L) x) = z)))
T c==> c= chyp'z f0 f1 f2 f3 f4 c/\ c= chyp'z f0 f1 f2 f3 f4 c? / c= chyp'z f0 f1 f2 f3 b0
- (((inv_loop_map L) z) = (((POWER (loop_map L)) (((index L) ((loop_map L) y)) ((inv_loop_map L) z))) ((loop_map L) y))), ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny) |- (((inv_loop_map L) z) = (((POWER (loop_map L)) ny) ((loop_map L) y)))
T c==> c= cinv_loop_map f0 f1 cPOWER * part cloop_map f0 cindex f0 cloop_map f0 f2 cinv_loop_map f0 f1 cloop_map f0 f2 c==> c= cindex f0 cloop_map f0 f2 cinv_loop_map f0 f1 f3 c= cinv_loop_map f0 f1 cPOWER * part cloop_map f0 f3 cloop_map f0 f2
- |- (((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny) ==> (?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)))
T c==> c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 f3 c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0
- |- (((!p. (!q. (!n. (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0)))))) ==> ((\p. (!q. (!n. (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0)))))) p)) = ((\p. (!q. (!n. (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0)))))) p))
T c= c==> ! ! ! c= cglue b0 b1 b2 cNUMERAL c_0 * b0 cNUMERAL c_0 * / ! ! c= cglue b0 b1 b2 cNUMERAL c_0 * b0 cNUMERAL c_0 f0 * / ! ! c= cglue b0 b1 b2 cNUMERAL c_0 * b0 cNUMERAL c_0 f0
- (~ (L IN ((final_loops H) NF))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- (((((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) <= (pre_card_dart_of_loop L)) /\ (((inv_loop_map L) z) = (((POWER (loop_map L)) (((index L) ((loop_map L) y)) ((inv_loop_map L) z))) ((loop_map L) y)))) ==> (!y'. (((in_dart_of_loop y') ((((loop2_transform H) NF) L) x)) = ((?i. ((i <= (((index L) ((loop_map L) y)) ((inv_loop_map L) z))) /\ (y' = (((POWER (loop_map L)) i) ((loop_map L) y))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))))))) = (!y'. (((in_dart_of_loop y') ((((loop2_transform H) NF) L) x)) = ((?i. ((i <= (((index L) ((loop_map L) y)) ((inv_loop_map L) z))) /\ (y' = (((POWER (loop_map L)) i) ((loop_map L) y))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c= chyp'y f1 f2 f0 f3 f4 c==> c= chyp'z f1 f2 f0 f3 f5 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c= c==> c/\ c<= cindex f0 cloop_map f0 f4 cinv_loop_map f0 f5 cpre_card_dart_of_loop f0 c= cinv_loop_map f0 f5 cPOWER * part cloop_map f0 cindex f0 cloop_map f0 f4 cinv_loop_map f0 f5 cloop_map f0 f4 ! c= cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f3 c\/ c? / c/\ c<= b1 cindex f0 cloop_map f0 f4 cinv_loop_map f0 f5 c= b0 cPOWER * part cloop_map f0 b1 cloop_map f0 f4 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 f6 c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c< b2 cCARD * * part cnode f1 cPOWER * part cface_map f1 b1 f4 c= b0 cPOWER * part cinverse * part cnode_map f1 b2 cPOWER * part cface_map f1 b1 f4 ! c= cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f3 c\/ c? / c/\ c<= b1 cindex f0 cloop_map f0 f4 cinv_loop_map f0 f5 c= b0 cPOWER * part cloop_map f0 b1 cloop_map f0 f4 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 f6 c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c< b2 cCARD * * part cnode f1 cPOWER * part cface_map f1 b1 f4 c= b0 cPOWER * part cinverse * part cnode_map f1 b2 cPOWER * part cface_map f1 b1 f4
- (((((hyp'y H) NF) L) x) = y), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- (((in_dart_of_loop ((inv_loop_map L) z)) L) = (((in_dart_of_loop ((loop_map L) y)) L) /\ ((in_dart_of_loop ((inv_loop_map L) z)) L)))
T c==> c= chyp'y f0 f1 f2 f3 f4 c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 c= cin_dart_of_loop cinv_loop_map f2 f5 f2 c/\ cin_dart_of_loop cloop_map f2 f4 f2 cin_dart_of_loop cinv_loop_map f2 f5 f2
- (((((hyp'y H) NF) L) x) = y), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- ((((in_dart_of_loop y) L) ==> ((in_dart_of_loop ((loop_map L) y)) L)) = ((in_dart_of_loop ((loop_map L) y)) L))
T c==> c= chyp'y f0 f1 f2 f3 f4 c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 c= c==> cin_dart_of_loop f4 f2 cin_dart_of_loop cloop_map f2 f4 f2 cin_dart_of_loop cloop_map f2 f4 f2
- |- (((!x'. (((\z. (((((hyp'z H) NF) L) x) = z)) x') ==> (?z. (((((hyp'z H) NF) L) x) = z)))) ==> ((?z. (((((hyp'z H) NF) L) x) = z)) ==> (?z. (((((hyp'z H) NF) L) x) = z)))) = ((?z. (((((hyp'z H) NF) L) x) = z)) ==> (?z. (((((hyp'z H) NF) L) x) = z))))
T c= c==> ! c==> * / c= chyp'z f0 f1 f2 f3 b1 b0 c? / c= chyp'z f0 f1 f2 f3 b1 c==> c? / c= chyp'z f0 f1 f2 f3 b0 c? / c= chyp'z f0 f1 f2 f3 b0 c==> c? / c= chyp'z f0 f1 f2 f3 b0 c? / c= chyp'z f0 f1 f2 f3 b0
- |- ((?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) ==> (?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)))
T c==> c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0
- |- (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0)))
T c= cglue f0 f1 f2 cNUMERAL c_0 * f0 cNUMERAL c_0
- |- ((((path_of_loop L) x) k) = (((POWER (loop_map L)) k) x))
T c= cpath_of_loop f0 f1 f2 cPOWER * part cloop_map f0 f2 f1
- (~ (L IN ((final_loops H) NF))), (is_restricted H), (((inv_loop_map L) z) = ((node_map H) z)), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((((loop_map L) y) = ((inverse (node_map H)) y)) /\ (~ (((node H) y) = ((node H) x)))), (((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) <= (pre_card_dart_of_loop L)) /\ (((inv_loop_map L) z) = (((POWER (loop_map L)) (((index L) ((loop_map L) y)) ((inv_loop_map L) z))) ((loop_map L) y)))), (L IN NF), ((is_normal H) NF) |- ((((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) <= (pre_card_dart_of_loop L)) /\ (((inv_loop_map L) z) = (((POWER (loop_map L)) (((index L) ((loop_map L) y)) ((inv_loop_map L) z))) ((loop_map L) y)))) /\ (!y'. (((in_dart_of_loop y') ((((loop2_transform H) NF) L) x)) = ((?i. ((i <= (((index L) ((loop_map L) y)) ((inv_loop_map L) z))) /\ (y' = (((POWER (loop_map L)) i) ((loop_map L) y))))) \/ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y)))))))))))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= cinv_loop_map f0 f3 cnode_map f1 f3 c==> c= chyp'y f1 f2 f0 f4 f5 c==> c= chyp'z f1 f2 f0 f4 f3 c==> c= chyp'p f1 f2 f0 f4 f6 c==> c/\ cis_marked c, f1 c, f2 c, f0 f4 c~ cIN f0 * * part cfinal_loops f1 f2 c==> c/\ c= cloop_map f0 f5 cinverse * part cnode_map f1 f5 c~ c= * * part cnode f1 f5 * * part cnode f1 f4 c==> c/\ c<= cindex f0 cloop_map f0 f5 cinv_loop_map f0 f3 cpre_card_dart_of_loop f0 c= cinv_loop_map f0 f3 cPOWER * part cloop_map f0 cindex f0 cloop_map f0 f5 cinv_loop_map f0 f3 cloop_map f0 f5 c==> cIN f0 f2 c==> cis_normal f1 f2 c/\ c/\ c<= cindex f0 cloop_map f0 f5 cinv_loop_map f0 f3 cpre_card_dart_of_loop f0 c= cinv_loop_map f0 f3 cPOWER * part cloop_map f0 cindex f0 cloop_map f0 f5 cinv_loop_map f0 f3 cloop_map f0 f5 ! c= cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f4 c\/ c? / c/\ c<= b1 cindex f0 cloop_map f0 f5 cinv_loop_map f0 f3 c= b0 cPOWER * part cloop_map f0 b1 cloop_map f0 f5 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 f6 c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c< b2 cCARD * * part cnode f1 cPOWER * part cface_map f1 b1 f5 c= b0 cPOWER * part cinverse * part cnode_map f1 b2 cPOWER * part cface_map f1 b1 f5
- |- ((\x. (!k. ((((path_of_loop L) x) k) = (((POWER (loop_map L)) k) x)))) x)
T * / ! c= cpath_of_loop f0 b0 b1 cPOWER * part cloop_map f0 b1 b0 f1
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((!x. (((\ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) x) ==> (?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)))) ==> ((?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) ==> (?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)))) = ((?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) ==> (?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny))))
T c= c==> ! c==> * / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b1 b0 c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b1 c==> c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 c==> c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0
- |- ((\q. (!n. (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0))))) q)
T * / ! c= cglue f0 b0 b1 cNUMERAL c_0 * f0 cNUMERAL c_0 f1
- |- (((!x. (((in_dart_of_loop x) L) ==> ((in_dart_of_loop ((loop_map L) x)) L))) ==> ((\x. (((in_dart_of_loop x) L) ==> ((in_dart_of_loop ((loop_map L) x)) L))) x)) = ((\x. (((in_dart_of_loop x) L) ==> ((in_dart_of_loop ((loop_map L) x)) L))) x))
T c= c==> ! c==> cin_dart_of_loop b0 f0 cin_dart_of_loop cloop_map f0 b0 f0 * / c==> cin_dart_of_loop b0 f0 cin_dart_of_loop cloop_map f0 b0 f0 f1 * / c==> cin_dart_of_loop b0 f0 cin_dart_of_loop cloop_map f0 b0 f0 f1
- |- ((\x. (((in_dart_of_loop x) L) ==> ((in_dart_of_loop ((inv_loop_map L) x)) L))) x)
T * / c==> cin_dart_of_loop b0 f0 cin_dart_of_loop cinv_loop_map f0 b0 f0 f1
- (L IN NF), ((is_normal H) NF) |- (((is_loop H) L) /\ (?x. ((x IN (dart H)) /\ ((in_dart_of_loop x) L))))
T c==> cIN f0 f1 c==> cis_normal f2 f1 c/\ cis_loop f2 f0 c? / c/\ cIN b0 * part cdart f2 cin_dart_of_loop b0 f0
- |- ((I x) = x)
T c= cI f0 f0
- |- ((((((hyp'p H) NF) L) x) = m) ==> (?m. (((((hyp'p H) NF) L) x) = m)))
T c==> c= chyp'p f0 f1 f2 f3 f4 c? / c= chyp'p f0 f1 f2 f3 b0
- |- ((((\z. (((((hyp'z H) NF) L) x) = z)) z) ==> (?z. (((((hyp'z H) NF) L) x) = z))) = T)
T c= c==> * / c= chyp'z f0 f1 f2 f3 b0 f4 c? / c= chyp'z f0 f1 f2 f3 b0 cT
- (L IN NF), ((is_normal H) NF) |- ((is_loop H) L)
T c==> cIN f0 f1 c==> cis_normal f2 f1 cis_loop f2 f0
- |- ((\NF. (!L. (!x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))))))) NF)
T * / ! ! c= * * * * part cpath2_transform f0 b0 b1 b2 * * * part cglue * * part cpath_of_loop b1 cinverse * part cnode_map f0 chyp'y f0 b0 b1 b2 * * part ccomplement f0 chyp'z f0 b0 b1 b2 cindex b1 cinverse * part cnode_map f0 chyp'y f0 b0 b1 b2 cnode_map f0 chyp'z f0 b0 b1 b2 f1
- |- (((!x. (!y. ((((in_dart_of_loop x) L) /\ ((in_dart_of_loop y) L)) ==> (((((index L) x) y) <= (pre_card_dart_of_loop L)) /\ (y = (((POWER (loop_map L)) (((index L) x) y)) x)))))) ==> ((\x. (!y. ((((in_dart_of_loop x) L) /\ ((in_dart_of_loop y) L)) ==> (((((index L) x) y) <= (pre_card_dart_of_loop L)) /\ (y = (((POWER (loop_map L)) (((index L) x) y)) x)))))) x)) = ((\x. (!y. ((((in_dart_of_loop x) L) /\ ((in_dart_of_loop y) L)) ==> (((((index L) x) y) <= (pre_card_dart_of_loop L)) /\ (y = (((POWER (loop_map L)) (((index L) x) y)) x)))))) x))
T c= c==> ! ! c==> c/\ cin_dart_of_loop b0 f0 cin_dart_of_loop b1 f0 c/\ c<= cindex f0 b0 b1 cpre_card_dart_of_loop f0 c= b1 cPOWER * part cloop_map f0 cindex f0 b0 b1 b0 * / ! c==> c/\ cin_dart_of_loop b0 f0 cin_dart_of_loop b1 f0 c/\ c<= cindex f0 b0 b1 cpre_card_dart_of_loop f0 c= b1 cPOWER * part cloop_map f0 cindex f0 b0 b1 b0 f1 * / ! c==> c/\ cin_dart_of_loop b0 f0 cin_dart_of_loop b1 f0 c/\ c<= cindex f0 b0 b1 cpre_card_dart_of_loop f0 c= b1 cPOWER * part cloop_map f0 cindex f0 b0 b1 b0 f1
- ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- ((in_dart_of_loop ((((hyp'y H) NF) L) x)) L)
T c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 cin_dart_of_loop chyp'y f0 f1 f2 f3 f2
- |- (((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny) = ((\ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) ny))
T c= c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 f3 * / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 f3
- |- (((!x. ((((complement_index H) x) (NUMERAL _0)) = (NUMERAL _0))) ==> ((\x. ((((complement_index H) x) (NUMERAL _0)) = (NUMERAL _0))) x)) = ((\x. ((((complement_index H) x) (NUMERAL _0)) = (NUMERAL _0))) x))
T c= c==> ! c= ccomplement_index f0 b0 cNUMERAL c_0 cNUMERAL c_0 * / c= ccomplement_index f0 b0 cNUMERAL c_0 cNUMERAL c_0 f1 * / c= ccomplement_index f0 b0 cNUMERAL c_0 cNUMERAL c_0 f1
- |- ((\L. (!x. (!y. ((((in_dart_of_loop x) L) /\ ((in_dart_of_loop y) L)) ==> (((((index L) x) y) <= (pre_card_dart_of_loop L)) /\ (y = (((POWER (loop_map L)) (((index L) x) y)) x))))))) L)
T * / ! ! c==> c/\ cin_dart_of_loop b1 b0 cin_dart_of_loop b2 b0 c/\ c<= cindex b0 b1 b2 cpre_card_dart_of_loop b0 c= b2 cPOWER * part cloop_map b0 cindex b0 b1 b2 b1 f0
- (((node_map H) z) = ((inv_loop_map L) z)) |- (((inv_loop_map L) z) = ((node_map H) z))
T c==> c= cnode_map f0 f1 cinv_loop_map f2 f1 c= cinv_loop_map f2 f1 cnode_map f0 f1
- |- (((!L. (!x. (!y. ((((in_dart_of_loop x) L) /\ ((in_dart_of_loop y) L)) ==> (((((index L) x) y) <= (pre_card_dart_of_loop L)) /\ (y = (((POWER (loop_map L)) (((index L) x) y)) x))))))) ==> ((\L. (!x. (!y. ((((in_dart_of_loop x) L) /\ ((in_dart_of_loop y) L)) ==> (((((index L) x) y) <= (pre_card_dart_of_loop L)) /\ (y = (((POWER (loop_map L)) (((index L) x) y)) x))))))) L)) = ((\L. (!x. (!y. ((((in_dart_of_loop x) L) /\ ((in_dart_of_loop y) L)) ==> (((((index L) x) y) <= (pre_card_dart_of_loop L)) /\ (y = (((POWER (loop_map L)) (((index L) x) y)) x))))))) L))
T c= c==> ! ! ! c==> c/\ cin_dart_of_loop b1 b0 cin_dart_of_loop b2 b0 c/\ c<= cindex b0 b1 b2 cpre_card_dart_of_loop b0 c= b2 cPOWER * part cloop_map b0 cindex b0 b1 b2 b1 * / ! ! c==> c/\ cin_dart_of_loop b1 b0 cin_dart_of_loop b2 b0 c/\ c<= cindex b0 b1 b2 cpre_card_dart_of_loop b0 c= b2 cPOWER * part cloop_map b0 cindex b0 b1 b2 b1 f0 * / ! ! c==> c/\ cin_dart_of_loop b1 b0 cin_dart_of_loop b2 b0 c/\ c<= cindex b0 b1 b2 cpre_card_dart_of_loop b0 c= b2 cPOWER * part cloop_map b0 cindex b0 b1 b2 b1 f0
- (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (?i. (?j. ((i < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) z)))) /\ ((SUC d) = ((((complement_index H) z) i) + j))))))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (i = (ny + (SUC d))), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((SUC d) <= (((complement_index H) z) m)), (L IN NF), ((is_normal H) NF) |- ((?i. (?j. ((i < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) z)))) /\ ((SUC d) = ((((complement_index H) z) i) + j))))))) /\ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))))
T c==> ! c==> c<= b0 ccomplement_index f0 f1 f2 c= cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 b0 cloop_map f4 f7 ccomplement f0 f1 b0 c==> c? / c? / c/\ c< b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= cSUC f8 c+ ccomplement_index f0 f1 b0 b1 c==> c~ cIN f4 * * part cfinal_loops f0 f3 c==> cis_restricted f0 c==> c= f9 cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 f10 cloop_map f4 f7 c==> c= chyp'y f0 f3 f4 f5 f7 c==> c= chyp'z f0 f3 f4 f5 f1 c==> c= f10 c+ f6 cSUC f8 c==> c= chyp'p f0 f3 f4 f5 f2 c==> c/\ cis_marked c, f0 c, f3 c, f4 f5 c~ cIN f4 * * part cfinal_loops f0 f3 c==> c<= cSUC f8 ccomplement_index f0 f1 f2 c==> cIN f4 f3 c==> cis_normal f0 f3 c/\ c? / c? / c/\ c< b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= cSUC f8 c+ ccomplement_index f0 f1 b0 b1 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cface_map f0 b0 f7 c= f9 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cface_map f0 b0 f7
- |- (((!H. (!x. ((((complement_index H) x) (NUMERAL _0)) = (NUMERAL _0)))) ==> ((\H. (!x. ((((complement_index H) x) (NUMERAL _0)) = (NUMERAL _0)))) H)) = ((\H. (!x. ((((complement_index H) x) (NUMERAL _0)) = (NUMERAL _0)))) H))
T c= c==> ! ! c= ccomplement_index b0 b1 cNUMERAL c_0 cNUMERAL c_0 * / ! c= ccomplement_index b0 b1 cNUMERAL c_0 cNUMERAL c_0 f0 * / ! c= ccomplement_index b0 b1 cNUMERAL c_0 cNUMERAL c_0 f0
- (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (?j. ((a < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))) /\ ((SUC d) = ((((complement_index H) z) a) + j)))))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (y' = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (i = (ny + (SUC d))), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((SUC d) <= (((complement_index H) z) m)), (L IN NF), ((is_normal H) NF) |- ((?j. ((a < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))) /\ ((SUC d) = ((((complement_index H) z) a) + j)))))) /\ (?i. (?j. (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (face_map H)) i) y)))) /\ (y' = (((POWER (inverse (node_map H))) j) (((POWER (face_map H)) i) y))))))))))
T c==> ! c==> c<= b0 ccomplement_index f0 f1 f2 c= cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 b0 cloop_map f4 f7 ccomplement f0 f1 b0 c==> c? / c/\ c< f8 f2 c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c< b0 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f8 f1 c= cSUC f9 c+ ccomplement_index f0 f1 f8 b0 c==> c~ cIN f4 * * part cfinal_loops f0 f3 c==> cis_restricted f0 c==> c= f10 cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 f11 cloop_map f4 f7 c==> c= chyp'y f0 f3 f4 f5 f7 c==> c= chyp'z f0 f3 f4 f5 f1 c==> c= f11 c+ f6 cSUC f9 c==> c= chyp'p f0 f3 f4 f5 f2 c==> c/\ cis_marked c, f0 c, f3 c, f4 f5 c~ cIN f4 * * part cfinal_loops f0 f3 c==> c<= cSUC f9 ccomplement_index f0 f1 f2 c==> cIN f4 f3 c==> cis_normal f0 f3 c/\ c? / c/\ c< f8 f2 c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c< b0 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f8 f1 c= cSUC f9 c+ ccomplement_index f0 f1 f8 b0 c? / c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 f2 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cface_map f0 b0 f7 c= f10 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cface_map f0 b0 f7
- |- ((\y. ((((in_dart_of_loop x) L) /\ ((in_dart_of_loop y) L)) ==> (((((index L) x) y) <= (pre_card_dart_of_loop L)) /\ (y = (((POWER (loop_map L)) (((index L) x) y)) x))))) y)
T * / c==> c/\ cin_dart_of_loop f0 f1 cin_dart_of_loop b0 f1 c/\ c<= cindex f1 f0 b0 cpre_card_dart_of_loop f1 c= b0 cPOWER * part cloop_map f1 cindex f1 f0 b0 f0 f2
- |- (((POWER f) (NUMERAL _0)) = I)
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
- (i <= ny) |- (T = (i <= ny))
T c==> c<= f0 f1 c= cT c<= f0 f1
- ((is_normal H) NF) |- ((!L. ((L IN NF) ==> (((is_loop H) L) /\ (?x. ((x IN (dart H)) /\ ((in_dart_of_loop x) L)))))) /\ ((!L. ((L IN NF) ==> (?y. (?z. (((in_dart_of_loop y) L) /\ (((in_dart_of_loop z) L) /\ (~ (((node H) y) = ((node H) z))))))))) /\ ((!L. (!L'. (!x. (((L IN NF) /\ ((L' IN NF) /\ (((in_dart_of_loop x) L) /\ ((in_dart_of_loop x) L')))) ==> (L = L'))))) /\ (!L. (!x. (!y. (((L IN NF) /\ (((in_dart_of_loop x) L) /\ (y IN ((node H) x)))) ==> (?L'. ((L' IN NF) /\ ((in_dart_of_loop y) L'))))))))))
T c==> cis_normal f0 f1 c/\ ! c==> cIN b0 f1 c/\ cis_loop f0 b0 c? / c/\ cIN b1 * part cdart f0 cin_dart_of_loop b1 b0 c/\ ! c==> cIN b0 f1 c? / c? / c/\ cin_dart_of_loop b1 b0 c/\ cin_dart_of_loop b2 b0 c~ c= * * part cnode f0 b1 * * part cnode f0 b2 c/\ ! ! ! c==> c/\ cIN b0 f1 c/\ cIN b1 f1 c/\ cin_dart_of_loop b2 b0 cin_dart_of_loop b2 b1 c= b0 b1 ! ! ! c==> c/\ cIN b0 f1 c/\ cin_dart_of_loop b1 b0 cIN b2 * * part cnode f0 b1 c? / c/\ cIN b3 f1 cin_dart_of_loop b2 b3
- |- ((\p. (!q. (!n. (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0)))))) p)
T * / ! ! c= cglue b0 b1 b2 cNUMERAL c_0 * b0 cNUMERAL c_0 f0
- |- ((((((hyp'y H) NF) L) x) = y) = ((\y. (((((hyp'y H) NF) L) x) = y)) y))
T c= c= chyp'y f0 f1 f2 f3 f4 * / c= chyp'y f0 f1 f2 f3 b0 f4
- |- (!ny. (((\ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) ny) ==> (?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny))))
T c==> * / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 f3 c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0
- |- (((!x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))))) ==> ((\x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))))) x)) = ((\x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))))) x))
T c= c==> ! c= * * * * part cpath2_transform f0 f1 f2 b0 * * * part cglue * * part cpath_of_loop f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 * * part ccomplement f0 chyp'z f0 f1 f2 b0 cindex f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 cnode_map f0 chyp'z f0 f1 f2 b0 * / c= * * * * part cpath2_transform f0 f1 f2 b0 * * * part cglue * * part cpath_of_loop f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 * * part ccomplement f0 chyp'z f0 f1 f2 b0 cindex f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 cnode_map f0 chyp'z f0 f1 f2 b0 f3 * / c= * * * * part cpath2_transform f0 f1 f2 b0 * * * part cglue * * part cpath_of_loop f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 * * part ccomplement f0 chyp'z f0 f1 f2 b0 cindex f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 cnode_map f0 chyp'z f0 f1 f2 b0 f3
- ((\y. (((((hyp'y H) NF) L) x) = y)) y) |- (((((((hyp'y H) NF) L) x) = y) ==> (?y. (((((hyp'y H) NF) L) x) = y))) = (?y. (((((hyp'y H) NF) L) x) = y)))
T c==> * / c= chyp'y f0 f1 f2 f3 b0 f4 c= c==> c= chyp'y f0 f1 f2 f3 f4 c? / c= chyp'y f0 f1 f2 f3 b0 c? / c= chyp'y f0 f1 f2 f3 b0
- |- (((!L. (!x. (((in_dart_of_loop x) L) ==> ((in_dart_of_loop ((inv_loop_map L) x)) L)))) ==> ((\L. (!x. (((in_dart_of_loop x) L) ==> ((in_dart_of_loop ((inv_loop_map L) x)) L)))) L)) = ((\L. (!x. (((in_dart_of_loop x) L) ==> ((in_dart_of_loop ((inv_loop_map L) x)) L)))) L))
T c= c==> ! ! c==> cin_dart_of_loop b1 b0 cin_dart_of_loop cinv_loop_map b0 b1 b0 * / ! c==> cin_dart_of_loop b1 b0 cin_dart_of_loop cinv_loop_map b0 b1 b0 f0 * / ! c==> cin_dart_of_loop b1 b0 cin_dart_of_loop cinv_loop_map b0 b1 b0 f0
- |- ((\f. (((POWER f) (NUMERAL _0)) = I)) f)
T * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0
- ((\m. (((((hyp'p H) NF) L) x) = m)) m) |- (((\m. (((((hyp'p H) NF) L) x) = m)) m) /\ (?m. (((((hyp'p H) NF) L) x) = m)))
T c==> * / c= chyp'p f0 f1 f2 f3 b0 f4 c/\ * / c= chyp'p f0 f1 f2 f3 b0 f4 c? / c= chyp'p f0 f1 f2 f3 b0
- |- (((!q. (!n. (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0))))) ==> ((\q. (!n. (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0))))) q)) = ((\q. (!n. (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0))))) q))
T c= c==> ! ! c= cglue f0 b0 b1 cNUMERAL c_0 * f0 cNUMERAL c_0 * / ! c= cglue f0 b0 b1 cNUMERAL c_0 * f0 cNUMERAL c_0 f1 * / ! c= cglue f0 b0 b1 cNUMERAL c_0 * f0 cNUMERAL c_0 f1
- |- (!z. (((\z. (((((hyp'z H) NF) L) x) = z)) z) ==> (?z. (((((hyp'z H) NF) L) x) = z))))
T c==> * / c= chyp'z f0 f1 f2 f3 b0 f4 c? / c= chyp'z f0 f1 f2 f3 b0
- |- (((!k. ((((path_of_loop L) x) k) = (((POWER (loop_map L)) k) x))) ==> ((\k. ((((path_of_loop L) x) k) = (((POWER (loop_map L)) k) x))) k)) = ((\k. ((((path_of_loop L) x) k) = (((POWER (loop_map L)) k) x))) k))
T c= c==> ! c= cpath_of_loop f0 f1 b0 cPOWER * part cloop_map f0 b0 f1 * / c= cpath_of_loop f0 f1 b0 cPOWER * part cloop_map f0 b0 f1 f2 * / c= cpath_of_loop f0 f1 b0 cPOWER * part cloop_map f0 b0 f1 f2
- ((is_normal H) NF) |- ((L IN NF) ==> (((is_loop H) L) /\ (?x. ((x IN (dart H)) /\ ((in_dart_of_loop x) L)))))
T c==> cis_normal f0 f1 c==> cIN f2 f1 c/\ cis_loop f0 f2 c? / c/\ cIN b0 * part cdart f0 cin_dart_of_loop b0 f2
- |- (((!x. (((\m. (((((hyp'p H) NF) L) x) = m)) x) ==> (?m. (((((hyp'p H) NF) L) x) = m)))) ==> ((?m. (((((hyp'p H) NF) L) x) = m)) ==> (?m. (((((hyp'p H) NF) L) x) = m)))) = ((?m. (((((hyp'p H) NF) L) x) = m)) ==> (?m. (((((hyp'p H) NF) L) x) = m))))
T c= c==> ! c==> * / c= chyp'p f0 f1 f2 f3 b1 b0 c? / c= chyp'p f0 f1 f2 f3 b1 c==> c? / c= chyp'p f0 f1 f2 f3 b0 c? / c= chyp'p f0 f1 f2 f3 b0 c==> c? / c= chyp'p f0 f1 f2 f3 b0 c? / c= chyp'p f0 f1 f2 f3 b0
- |- ((?z. (((((hyp'z H) NF) L) x) = z)) ==> (?z. (((((hyp'z H) NF) L) x) = z)))
T c==> c? / c= chyp'z f0 f1 f2 f3 b0 c? / c= chyp'z f0 f1 f2 f3 b0
- (i <= ny) |- ((i <= ny) = T)
T c==> c<= f0 f1 c= c<= f0 f1 cT
- ((is_normal H) NF) |- (!L. ((L IN NF) ==> (((is_loop H) L) /\ (?x. ((x IN (dart H)) /\ ((in_dart_of_loop x) L))))))
T c==> cis_normal f0 f1 ! c==> cIN b0 f1 c/\ cis_loop f0 b0 c? / c/\ cIN b1 * part cdart f0 cin_dart_of_loop b1 b0
