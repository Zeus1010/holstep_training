N MEASURE_LUNE_DECOMPOSITION
C |- (!v1. (!v2. (!v3. ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f1 f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
D TRUTH
A |- T
T cT
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D UNION_EMPTY
A |- ((!s. ((EMPTY UNION s) = s)) /\ (!s. ((s UNION EMPTY) = s)))
T c/\ ! c= * * part cUNION part cEMPTY b0 b0 ! c= * * part cUNION b0 part cEMPTY b0
D INSERT_AC
A |- (((x INSERT (y INSERT s)) = (y INSERT (x INSERT s))) /\ ((x INSERT (x INSERT s)) = (x INSERT s)))
T c/\ c= * * part cINSERT f0 * * part cINSERT f1 f2 * * part cINSERT f1 * * part cINSERT f0 f2 c= * * part cINSERT f0 * * part cINSERT f0 f2 * * part cINSERT f0 f2
D COPLANAR_3
A |- (!a. (!b. (!c. (coplanar (a INSERT (b INSERT (c INSERT EMPTY)))))))
T ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
D HAS_MEASURE_MEASURABLE_MEASURE
A |- (!s. (!m. (((has_measure s) m) = ((measurable s) /\ ((measure s) = m)))))
T c= chas_measure f0 f1 c/\ cmeasurable f0 c= cmeasure f0 f1
D NOT_COPLANAR_0_4_IMP_INDEPENDENT
A |- (!v1. (!v2. (!v3. ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (independent (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cindependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
D HAS_MEASURE_LUNE_SIMPLE
A |- (!z. (!w. (!r. (!w1. (!w2. ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar (z INSERT (w INSERT (w1 INSERT (w2 INSERT EMPTY))))))) ==> ((has_measure ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY))))) ((real_mul ((((dihV z) w) w1) w2)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY chas_measure * * part cINTER * part cball c, f1 f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY creal_mul cdihV f1 f2 f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
D MEASURE_BALL_AFF_GT_SHUFFLE
A |- (!r. (!s. (!t. (!v. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t)))))))))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ c~ cIN f1 * * part cUNION f2 f3 cindependent * * part cINSERT f1 * * part cUNION f2 f3 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 f2 f3 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 f2 * * part cINSERT f1 f3 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 f2 * * part cINSERT cvector_neg f1 f3
+ |- ((\v2. (!v3. ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (independent (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) v2)
T * / ! c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cindependent * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1
+ |- ((\c. (coplanar (a INSERT (b INSERT (c INSERT EMPTY))))) c)
T * / ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2
+ (!r. (!s. (!t. (!v. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t))))))))))) |- ((!s. (!v. (!t. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t)))))))))) = T)
T c==> ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c~ cIN b3 * * part cUNION b1 b2 cindependent * * part cINSERT b3 * * part cUNION b1 b2 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b3 b1 b2 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT b3 b2 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT cvector_neg b3 b2 c= ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ c~ cIN b1 * * part cUNION b0 b2 cindependent * * part cINSERT b1 * * part cUNION b0 b2 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b1 b0 b2 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b0 * * part cINSERT b1 b2 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b0 * * part cINSERT cvector_neg b1 b2 cT
+ (v2 = v1) |- ((v2 = v1) /\ ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))
T c==> c= f0 f1 c/\ c= f0 f1 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f2 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f1 f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
- (~ (v2 = v1)), (~ (v3 = v1)) |- ((~ (v1 = (vec (NUMERAL _0)))) ==> ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))
T c==> c~ c= f0 f1 c==> c~ c= f2 f1 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f3 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f3 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f3 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f1 f0 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f3 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
+ |- ((\r. (!s. (!v. (!t. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t))))))))))) r)
T * / ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c~ cIN b2 * * part cUNION b1 b3 cindependent * * part cINSERT b2 * * part cUNION b1 b3 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b2 b1 b3 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT b2 b3 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT cvector_neg b2 b3 f0
+ |- ((\z. (!w. (!r. (!w1. (!w2. ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar (z INSERT (w INSERT (w1 INSERT (w2 INSERT EMPTY))))))) ==> ((measurable ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY))))) /\ (((real_mul ((((dihV z) w) w1) w2)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = (measure ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY))))))))))))) z)
T * / ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b2 c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cmeasurable * * part cINTER * part cball c, b0 b2 * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= creal_mul cdihV b0 b1 b3 b4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow b2 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * part cball c, b0 b2 * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f0
- |- ((v3 = (vec (NUMERAL _0))) ==> ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))
T c==> c= f0 cvec cNUMERAL c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f2 f3 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
- (~ (v2 = v1)), (~ (v2 = (vec (NUMERAL _0)))), (~ (v3 = v1)) |- ((~ (v2 = (vec (NUMERAL _0)))) /\ ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))
T c==> c~ c= f0 f1 c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f2 f1 c/\ c~ c= f0 cvec cNUMERAL c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f3 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f3 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f3 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f1 f0 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f3 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
- ((~ (v1 = (vec (NUMERAL _0)))) ==> ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))) |- ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))
T c==> c==> c~ c= f0 cvec cNUMERAL c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f0 f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f0 f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
+ |- ((\s. (!v. (!t. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t)))))))))) s)
T * / ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ c~ cIN b1 * * part cUNION b0 b2 cindependent * * part cINSERT b1 * * part cUNION b0 b2 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b1 b0 b2 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b0 * * part cINSERT b1 b2 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b0 * * part cINSERT cvector_neg b1 b2 f1
+ (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v1 INSERT EMPTY))) (v2 INSERT (v3 INSERT EMPTY)))))) |- ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v1 INSERT EMPTY))) (v2 INSERT (v3 INSERT EMPTY))))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))))
T c==> c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- ((~ (v3 = v2)) ==> ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))) |- ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))
T c==> c==> c~ c= f0 f1 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f2 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f3 f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f2 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f3 f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))), (~ (v2 = v1)), (~ (v3 = v1)), ((real_le (real_of_num (NUMERAL _0))) r) |- (((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v1 IN (EMPTY UNION (v2 INSERT (v3 INSERT EMPTY))))) /\ (independent (v1 INSERT (EMPTY UNION (v2 INSERT (v3 INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f0 c==> c~ c= f2 f0 c==> creal_le creal_of_num cNUMERAL c_0 f3 c/\ creal_le creal_of_num cNUMERAL c_0 f3 c/\ c~ cIN f0 * * part cUNION part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cindependent * * part cINSERT f0 * * part cUNION part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar (z INSERT (w INSERT (w1 INSERT (w2 INSERT EMPTY))))))) |- (measurable ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY)))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cmeasurable * * part cINTER * part cball c, f1 f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ |- (((!z. (!w. (!r. (!w1. (!w2. ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar (z INSERT (w INSERT (w1 INSERT (w2 INSERT EMPTY))))))) ==> ((measurable ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY))))) /\ (((real_mul ((((dihV z) w) w1) w2)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = (measure ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY))))))))))))) ==> ((\z. (!w. (!r. (!w1. (!w2. ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar (z INSERT (w INSERT (w1 INSERT (w2 INSERT EMPTY))))))) ==> ((measurable ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY))))) /\ (((real_mul ((((dihV z) w) w1) w2)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = (measure ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY))))))))))))) z)) = ((\z. (!w. (!r. (!w1. (!w2. ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar (z INSERT (w INSERT (w1 INSERT (w2 INSERT EMPTY))))))) ==> ((measurable ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY))))) /\ (((real_mul ((((dihV z) w) w1) w2)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = (measure ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY))))))))))))) z))
T c= c==> ! ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b2 c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cmeasurable * * part cINTER * part cball c, b0 b2 * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= creal_mul cdihV b0 b1 b3 b4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow b2 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * part cball c, b0 b2 * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * / ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b2 c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cmeasurable * * part cINTER * part cball c, b0 b2 * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= creal_mul cdihV b0 b1 b3 b4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow b2 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * part cball c, b0 b2 * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f0 * / ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b2 c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cmeasurable * * part cINTER * part cball c, b0 b2 * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= creal_mul cdihV b0 b1 b3 b4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow b2 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * part cball c, b0 b2 * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f0
+ (!r. (!s. (!t. (!v. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t))))))))))) |- (((!s. (!t. (!v. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t)))))))))) ==> ((\s. (!t. (!v. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t)))))))))) s)) = ((\s. (!t. (!v. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t)))))))))) s))
T c==> ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c~ cIN b3 * * part cUNION b1 b2 cindependent * * part cINSERT b3 * * part cUNION b1 b2 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b3 b1 b2 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT b3 b2 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT cvector_neg b3 b2 c= c==> ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ c~ cIN b2 * * part cUNION b0 b1 cindependent * * part cINSERT b2 * * part cUNION b0 b1 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b2 b0 b1 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b0 * * part cINSERT b2 b1 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b0 * * part cINSERT cvector_neg b2 b1 * / ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ c~ cIN b2 * * part cUNION b0 b1 cindependent * * part cINSERT b2 * * part cUNION b0 b1 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b2 b0 b1 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b0 * * part cINSERT b2 b1 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b0 * * part cINSERT cvector_neg b2 b1 f1 * / ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ c~ cIN b2 * * part cUNION b0 b1 cindependent * * part cINSERT b2 * * part cUNION b0 b1 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b2 b0 b1 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b0 * * part cINSERT b2 b1 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b0 * * part cINSERT cvector_neg b2 b1 f1
+ |- ((\r. (!w1. (!w2. ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar (z INSERT (w INSERT (w1 INSERT (w2 INSERT EMPTY))))))) ==> ((measurable ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY))))) /\ (((real_mul ((((dihV z) w) w1) w2)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = (measure ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY))))))))))) r)
T * / ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cmeasurable * * part cINTER * part cball c, f0 b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= creal_mul cdihV f0 f1 b1 b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow b0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * part cball c, f0 b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2
- ((vec (NUMERAL _0)) = v1) |- (v1 = (vec (NUMERAL _0)))
T c==> c= cvec cNUMERAL c_0 f0 c= f0 cvec cNUMERAL c_0
+ |- (((!r. (!s. (!t. (!v. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t))))))))))) ==> (!r. (!s. (!v. (!t. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t)))))))))))) = (!r. (!s. (!v. (!t. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t))))))))))))
T c= c==> ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c~ cIN b3 * * part cUNION b1 b2 cindependent * * part cINSERT b3 * * part cUNION b1 b2 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b3 b1 b2 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT b3 b2 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT cvector_neg b3 b2 ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c~ cIN b2 * * part cUNION b1 b3 cindependent * * part cINSERT b2 * * part cUNION b1 b3 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b2 b1 b3 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT b2 b3 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT cvector_neg b2 b3 ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c~ cIN b2 * * part cUNION b1 b3 cindependent * * part cINSERT b2 * * part cUNION b1 b3 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b2 b1 b3 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT b2 b3 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT cvector_neg b2 b3
+ ((~ (v2 = v1)) ==> ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))) |- ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))
T c==> c==> c~ c= f0 f1 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f2 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f1 f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f2 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f1 f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) |- (T = (independent (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cT cindependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- ((~ (v2 = (vec (NUMERAL _0)))) ==> ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))) |- ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))
T c==> c==> c~ c= f0 cvec cNUMERAL c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f2 f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f2 f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ |- (!z. (!w. (!r. (!w1. (!w2. ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar (z INSERT (w INSERT (w1 INSERT (w2 INSERT EMPTY))))))) ==> ((measurable ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY))))) /\ ((measure ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY))))) = ((real_mul ((((dihV z) w) w1) w2)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))))))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cmeasurable * * part cINTER * part cball c, f1 f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= cmeasure * * part cINTER * part cball c, f1 f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY creal_mul cdihV f1 f2 f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
+ (!r. (!s. (!t. (!v. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t))))))))))) |- (!v. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t))))))))
T c==> ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c~ cIN b3 * * part cUNION b1 b2 cindependent * * part cINSERT b3 * * part cUNION b1 b2 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b3 b1 b2 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT b3 b2 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT cvector_neg b3 b2 ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ c~ cIN b0 * * part cUNION f1 f2 cindependent * * part cINSERT b0 * * part cUNION f1 f2 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 f1 f2 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 f1 * * part cINSERT b0 f2 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 f1 * * part cINSERT cvector_neg b0 f2
- (~ (v1 = (vec (NUMERAL _0)))) |- (((~ ((vec (NUMERAL _0)) = v1)) ==> (((vec (NUMERAL _0)) = v1) = F)) = (((vec (NUMERAL _0)) = v1) = F))
T c==> c~ c= f0 cvec cNUMERAL c_0 c= c==> c~ c= cvec cNUMERAL c_0 f0 c= c= cvec cNUMERAL c_0 f0 cF c= c= cvec cNUMERAL c_0 f0 cF
+ |- ((x INSERT (y INSERT s)) = (y INSERT (x INSERT s)))
T c= * * part cINSERT f0 * * part cINSERT f1 f2 * * part cINSERT f1 * * part cINSERT f0 f2
+ ((~ (v3 = v1)) ==> ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))) |- ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))
T c==> c==> c~ c= f0 f1 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f2 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f1 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f1 f3 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f2 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f1 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f1 f3 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
+ (!r. (!s. (!t. (!v. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t))))))))))) |- ((\r. (!s. (!t. (!v. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t))))))))))) r)
T c==> ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c~ cIN b3 * * part cUNION b1 b2 cindependent * * part cINSERT b3 * * part cUNION b1 b2 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b3 b1 b2 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT b3 b2 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT cvector_neg b3 b2 * / ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c~ cIN b3 * * part cUNION b1 b2 cindependent * * part cINSERT b3 * * part cUNION b1 b2 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b3 b1 b2 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT b3 b2 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT cvector_neg b3 b2 f0
+ |- (((!r. (!w1. (!w2. ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar (z INSERT (w INSERT (w1 INSERT (w2 INSERT EMPTY))))))) ==> ((measurable ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY))))) /\ (((real_mul ((((dihV z) w) w1) w2)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = (measure ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY))))))))))) ==> ((\r. (!w1. (!w2. ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar (z INSERT (w INSERT (w1 INSERT (w2 INSERT EMPTY))))))) ==> ((measurable ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY))))) /\ (((real_mul ((((dihV z) w) w1) w2)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = (measure ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY))))))))))) r)) = ((\r. (!w1. (!w2. ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar (z INSERT (w INSERT (w1 INSERT (w2 INSERT EMPTY))))))) ==> ((measurable ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY))))) /\ (((real_mul ((((dihV z) w) w1) w2)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = (measure ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY))))))))))) r))
T c= c==> ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cmeasurable * * part cINTER * part cball c, f0 b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= creal_mul cdihV f0 f1 b1 b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow b0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * part cball c, f0 b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cmeasurable * * part cINTER * part cball c, f0 b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= creal_mul cdihV f0 f1 b1 b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow b0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * part cball c, f0 b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 * / ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cmeasurable * * part cINTER * part cball c, f0 b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= creal_mul cdihV f0 f1 b1 b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow b0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * part cball c, f0 b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2
+ (((real_mul ((((dihV z) w) w1) w2)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = (measure ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY)))))) |- ((measure ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY))))) = ((real_mul ((((dihV z) w) w1) w2)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))
T c==> c= creal_mul cdihV f0 f1 f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f4 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * part cball c, f0 f4 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cmeasure * * part cINTER * part cball c, f0 f4 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_mul cdihV f0 f1 f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f4 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
- |- ((!w2. t) = t)
T c= ! f0 f0
- |- (((!t. (t \/ (~ t))) ==> ((\t. (t \/ (~ t))) (v1 = (vec (NUMERAL _0))))) = ((\t. (t \/ (~ t))) (v1 = (vec (NUMERAL _0)))))
T c= c==> ! c\/ b0 c~ b0 * / c\/ b0 c~ b0 c= f0 cvec cNUMERAL c_0 * / c\/ b0 c~ b0 c= f0 cvec cNUMERAL c_0
+ |- (((!v1. (!v2. (!v3. ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (independent (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))))) ==> ((\v1. (!v2. (!v3. ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (independent (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))))) v1)) = ((\v1. (!v2. (!v3. ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (independent (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))))) v1))
T c= c==> ! ! ! c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cindependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cindependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0 * / ! ! c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cindependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0
+ |- (((!a. (!b. (!c. (coplanar (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> ((\a. (!b. (!c. (coplanar (a INSERT (b INSERT (c INSERT EMPTY))))))) a)) = ((\a. (!b. (!c. (coplanar (a INSERT (b INSERT (c INSERT EMPTY))))))) a))
T c= c==> ! ! ! ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0 * / ! ! ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0
- ((~ (v3 = (vec (NUMERAL _0)))) ==> ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))), ((v3 = (vec (NUMERAL _0))) ==> ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))) |- ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))
T c==> c==> c~ c= f0 cvec cNUMERAL c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f2 f3 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c==> c==> c= f0 cvec cNUMERAL c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f2 f3 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f2 f3 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
+ |- ((\a. (!b. (!c. (coplanar (a INSERT (b INSERT (c INSERT EMPTY))))))) a)
T * / ! ! ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0
+ |- ((coplanar (a INSERT (b INSERT (c INSERT EMPTY)))) = T)
T c= ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ ((real_le (real_of_num (NUMERAL _0))) r) |- (((real_le (real_of_num (NUMERAL _0))) r) = T)
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c= creal_le creal_of_num cNUMERAL c_0 f0 cT
- (~ (v1 = (vec (NUMERAL _0)))) |- (((vec (NUMERAL _0)) = v1) = F)
T c==> c~ c= f0 cvec cNUMERAL c_0 c= c= cvec cNUMERAL c_0 f0 cF
- (v2 = (vec (NUMERAL _0))) |- ((v2 = (vec (NUMERAL _0))) /\ ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))
T c==> c= f0 cvec cNUMERAL c_0 c/\ c= f0 cvec cNUMERAL c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f2 f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
+ |- (((!s. (!m. (((has_measure s) m) = ((measurable s) /\ ((measure s) = m))))) ==> ((\s. (!m. (((has_measure s) m) = ((measurable s) /\ ((measure s) = m))))) s)) = ((\s. (!m. (((has_measure s) m) = ((measurable s) /\ ((measure s) = m))))) s))
T c= c==> ! ! c= chas_measure b0 b1 c/\ cmeasurable b0 c= cmeasure b0 b1 * / ! c= chas_measure b0 b1 c/\ cmeasurable b0 c= cmeasure b0 b1 f0 * / ! c= chas_measure b0 b1 c/\ cmeasurable b0 c= cmeasure b0 b1 f0
- |- ((v3 = v2) ==> ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))
T c==> c= f0 f1 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f2 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f3 f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
+ |- ((\v. (!t. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t))))))))) v)
T * / ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ c~ cIN b0 * * part cUNION f1 b1 cindependent * * part cINSERT b0 * * part cUNION f1 b1 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 f1 b1 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 f1 * * part cINSERT b0 b1 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 f1 * * part cINSERT cvector_neg b0 b1 f2
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))), ((real_le (real_of_num (NUMERAL _0))) r) |- (((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v1 INSERT EMPTY))) (v2 INSERT (v3 INSERT EMPTY))))))) = (((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v1 INSERT EMPTY))) (v2 INSERT (v3 INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 f3 c= c==> c/\ creal_le creal_of_num cNUMERAL c_0 f3 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_mul cdihV cvec cNUMERAL c_0 f0 f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f3 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f3 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_mul cdihV cvec cNUMERAL c_0 f0 f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f3 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f3 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((!w. (!r. (!w1. (!w2. ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar (z INSERT (w INSERT (w1 INSERT (w2 INSERT EMPTY))))))) ==> ((measurable ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY))))) /\ (((real_mul ((((dihV z) w) w1) w2)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = (measure ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY)))))))))))) ==> ((\w. (!r. (!w1. (!w2. ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar (z INSERT (w INSERT (w1 INSERT (w2 INSERT EMPTY))))))) ==> ((measurable ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY))))) /\ (((real_mul ((((dihV z) w) w1) w2)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = (measure ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY)))))))))))) w)) = ((\w. (!r. (!w1. (!w2. ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar (z INSERT (w INSERT (w1 INSERT (w2 INSERT EMPTY))))))) ==> ((measurable ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY))))) /\ (((real_mul ((((dihV z) w) w1) w2)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = (measure ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY)))))))))))) w))
T c= c==> ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b1 c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cmeasurable * * part cINTER * part cball c, f0 b1 * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= creal_mul cdihV f0 b0 b2 b3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * part cball c, f0 b1 * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b1 c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cmeasurable * * part cINTER * part cball c, f0 b1 * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= creal_mul cdihV f0 b0 b2 b3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * part cball c, f0 b1 * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f1 * / ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b1 c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cmeasurable * * part cINTER * part cball c, f0 b1 * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= creal_mul cdihV f0 b0 b2 b3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * part cball c, f0 b1 * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f1
+ |- (((!v2. (!v3. ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (independent (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((\v2. (!v3. ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (independent (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) v2)) = ((\v2. (!v3. ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (independent (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) v2))
T c= c==> ! ! c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cindependent * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cindependent * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1 * / ! c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cindependent * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1
+ |- (((!x. (~ (x IN EMPTY))) ==> ((\x. (~ (x IN EMPTY))) x)) = ((\x. (~ (x IN EMPTY))) x))
T c= c==> ! c~ cIN b0 part cEMPTY * / c~ cIN b0 part cEMPTY f0 * / c~ cIN b0 part cEMPTY f0
- |- ((v2 = (vec (NUMERAL _0))) ==> ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))
T c==> c= f0 cvec cNUMERAL c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f2 f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
+ (~ (v2 = v1)), (~ (v3 = v1)), ((real_le (real_of_num (NUMERAL _0))) r) |- ((independent (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) = (((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v1 IN (EMPTY UNION (v2 INSERT (v3 INSERT EMPTY))))) /\ (independent (v1 INSERT (EMPTY UNION (v2 INSERT (v3 INSERT EMPTY))))))))
T c==> c~ c= f0 f1 c==> c~ c= f2 f1 c==> creal_le creal_of_num cNUMERAL c_0 f3 c= cindependent * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ creal_le creal_of_num cNUMERAL c_0 f3 c/\ c~ cIN f1 * * part cUNION part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cindependent * * part cINSERT f1 * * part cUNION part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
+ |- ((x INSERT (x INSERT s)) = (x INSERT s))
T c= * * part cINSERT f0 * * part cINSERT f0 f1 * * part cINSERT f0 f1
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))), (~ (v2 = v1)), (~ (v3 = v1)), ((real_le (real_of_num (NUMERAL _0))) r) |- (((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v1 IN (EMPTY UNION (v2 INSERT (v3 INSERT EMPTY))))) /\ (independent (v1 INSERT (EMPTY UNION (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v1 INSERT EMPTY))) (v2 INSERT (v3 INSERT EMPTY))))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))))) = ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v1 INSERT EMPTY))) (v2 INSERT (v3 INSERT EMPTY))))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY)))))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f0 c==> c~ c= f2 f0 c==> creal_le creal_of_num cNUMERAL c_0 f3 c= c==> c/\ creal_le creal_of_num cNUMERAL c_0 f3 c/\ c~ cIN f0 * * part cUNION part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cindependent * * part cINSERT f0 * * part cUNION part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f3 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f3 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f3 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f3 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f3 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f3 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (~ (v2 = v1)) |- ((v2 = v1) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
+ |- ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar (z INSERT (w INSERT (w1 INSERT (w2 INSERT EMPTY))))))) ==> (((real_mul ((((dihV z) w) w1) w2)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = (measure ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY)))))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= creal_mul cdihV f1 f2 f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * part cball c, f1 f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))), (~ (v2 = v1)), (~ (v3 = v1)), ((real_le (real_of_num (NUMERAL _0))) r) |- (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f0 c==> c~ c= f2 f0 c==> creal_le creal_of_num cNUMERAL c_0 f3 c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f3 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f3 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f0 f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f3 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
+ |- ((\t. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t)))))))) t)
T * / c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ c~ cIN f1 * * part cUNION f2 b0 cindependent * * part cINSERT f1 * * part cUNION f2 b0 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 f2 b0 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 f2 * * part cINSERT f1 b0 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 f2 * * part cINSERT cvector_neg f1 b0 f3
+ (!r. (!s. (!t. (!v. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t))))))))))) |- ((!r. (!s. (!t. (!v. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t))))))))))) /\ (!r. (!s. (!v. (!t. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t))))))))))))
T c==> ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c~ cIN b3 * * part cUNION b1 b2 cindependent * * part cINSERT b3 * * part cUNION b1 b2 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b3 b1 b2 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT b3 b2 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT cvector_neg b3 b2 c/\ ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c~ cIN b3 * * part cUNION b1 b2 cindependent * * part cINSERT b3 * * part cUNION b1 b2 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b3 b1 b2 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT b3 b2 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT cvector_neg b3 b2 ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c~ cIN b2 * * part cUNION b1 b3 cindependent * * part cINSERT b2 * * part cUNION b1 b3 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b2 b1 b3 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT b2 b3 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT cvector_neg b2 b3
+ |- (((!v. (!t. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t))))))))) ==> ((\v. (!t. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t))))))))) v)) = ((\v. (!t. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t))))))))) v))
T c= c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ c~ cIN b0 * * part cUNION f1 b1 cindependent * * part cINSERT b0 * * part cUNION f1 b1 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 f1 b1 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 f1 * * part cINSERT b0 b1 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 f1 * * part cINSERT cvector_neg b0 b1 * / ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ c~ cIN b0 * * part cUNION f1 b1 cindependent * * part cINSERT b0 * * part cUNION f1 b1 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 f1 b1 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 f1 * * part cINSERT b0 b1 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 f1 * * part cINSERT cvector_neg b0 b1 f2 * / ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ c~ cIN b0 * * part cUNION f1 b1 cindependent * * part cINSERT b0 * * part cUNION f1 b1 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 f1 b1 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 f1 * * part cINSERT b0 b1 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 f1 * * part cINSERT cvector_neg b0 b1 f2
+ |- ((\v1. (!v2. (!v3. ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (independent (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))))) v1)
T * / ! ! c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cindependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0
+ (((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar (z INSERT (w INSERT (w1 INSERT (w2 INSERT EMPTY))))))) |- ((measurable ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY))))) /\ (((real_mul ((((dihV z) w) w1) w2)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = (measure ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY)))))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cmeasurable * * part cINTER * part cball c, f1 f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= creal_mul cdihV f1 f2 f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * part cball c, f1 f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar (z INSERT (w INSERT (w1 INSERT (w2 INSERT EMPTY))))))) ==> ((measurable ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY))))) = T))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= cmeasurable * * part cINTER * part cball c, f1 f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cT
+ |- (((~ (x IN EMPTY)) ==> ((x IN EMPTY) = F)) = ((x IN EMPTY) = F))
T c= c==> c~ cIN f0 part cEMPTY c= cIN f0 part cEMPTY cF c= cIN f0 part cEMPTY cF
+ |- (((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v1 INSERT EMPTY))) (v2 INSERT (v3 INSERT EMPTY))))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY)))))))) = (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v1 INSERT EMPTY))) (v2 INSERT (v3 INSERT EMPTY)))))))
T c= c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((\x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) x)
T * / ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 f0
- (v3 = v2) |- (T = ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))
T c==> c= f0 f1 c= cT c==> c/\ creal_le creal_of_num cNUMERAL c_0 f2 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f3 f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
+ (!r. (!s. (!t. (!v. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t))))))))))) |- ((!v. (!t. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t))))))))) = T)
T c==> ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c~ cIN b3 * * part cUNION b1 b2 cindependent * * part cINSERT b3 * * part cUNION b1 b2 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b3 b1 b2 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT b3 b2 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT cvector_neg b3 b2 c= ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ c~ cIN b0 * * part cUNION f1 b1 cindependent * * part cINSERT b0 * * part cUNION f1 b1 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 f1 b1 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 f1 * * part cINSERT b0 b1 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 f1 * * part cINSERT cvector_neg b0 b1 cT
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) |- ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) /\ ((independent (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) = T))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cindependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
- ((~ (v3 = v2)) ==> ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))), ((v3 = v2) ==> ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))) |- ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))
T c==> c==> c~ c= f0 f1 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f2 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f3 f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c==> c==> c= f0 f1 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f2 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f3 f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f2 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f3 f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
+ (!r. (!s. (!t. (!v. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t))))))))))) |- ((\s. (!t. (!v. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t)))))))))) s)
T c==> ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c~ cIN b3 * * part cUNION b1 b2 cindependent * * part cINSERT b3 * * part cUNION b1 b2 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b3 b1 b2 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT b3 b2 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT cvector_neg b3 b2 * / ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ c~ cIN b2 * * part cUNION b0 b1 cindependent * * part cINSERT b2 * * part cUNION b0 b1 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b2 b0 b1 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b0 * * part cINSERT b2 b1 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b0 * * part cINSERT cvector_neg b2 b1 f1
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))), ((real_le (real_of_num (NUMERAL _0))) r) |- (((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v1 INSERT EMPTY))) (v2 INSERT (v3 INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 f3 c= creal_mul cdihV cvec cNUMERAL c_0 f0 f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f3 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f3 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((~ (v3 = v2)) ==> ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))
T c==> c~ c= f0 f1 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f2 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f3 f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
+ |- ((\y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) y)
T * / ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 f1
+ (v2 = v1) |- (T = ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))
T c==> c= f0 f1 c= cT c==> c/\ creal_le creal_of_num cNUMERAL c_0 f2 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f1 f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
- (!r. (!s. (!t. (!v. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t))))))))))), (((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) |- ((!r. (!s. (!t. (!v. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t))))))))))) /\ ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t)))))))
T c==> ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c~ cIN b3 * * part cUNION b1 b2 cindependent * * part cINSERT b3 * * part cUNION b1 b2 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b3 b1 b2 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT b3 b2 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT cvector_neg b3 b2 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ c~ cIN f1 * * part cUNION f2 f3 cindependent * * part cINSERT f1 * * part cUNION f2 f3 c/\ ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c~ cIN b3 * * part cUNION b1 b2 cindependent * * part cINSERT b3 * * part cUNION b1 b2 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b3 b1 b2 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT b3 b2 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT cvector_neg b3 b2 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 f2 f3 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 f2 * * part cINSERT f1 f3 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 f2 * * part cINSERT cvector_neg f1 f3
- (v1 = (vec (NUMERAL _0))) |- (T = ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))
T c==> c= f0 cvec cNUMERAL c_0 c= cT c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f0 f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
+ ((~ (v2 = v1)) ==> ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))), ((v2 = v1) ==> ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))) |- ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))
T c==> c==> c~ c= f0 f1 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f2 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f1 f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c==> c==> c= f0 f1 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f2 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f1 f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f2 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f1 f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
- (v3 = (vec (NUMERAL _0))) |- ((v3 = (vec (NUMERAL _0))) /\ ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))
T c==> c= f0 cvec cNUMERAL c_0 c/\ c= f0 cvec cNUMERAL c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f2 f3 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
- (~ (v3 = v2)) |- ((~ (v3 = v2)) /\ ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))
T c==> c~ c= f0 f1 c/\ c~ c= f0 f1 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f2 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f3 f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
- |- ((v1 = (vec (NUMERAL _0))) ==> ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))
T c==> c= f0 cvec cNUMERAL c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f0 f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
- (v1 = (vec (NUMERAL _0))) |- ((vec (NUMERAL _0)) = v1)
T c==> c= f0 cvec cNUMERAL c_0 c= cvec cNUMERAL c_0 f0
- (!r. (!s. (!t. (!v. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t))))))))))), (((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) |- ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) /\ ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t)))))))
T c==> ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c~ cIN b3 * * part cUNION b1 b2 cindependent * * part cINSERT b3 * * part cUNION b1 b2 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b3 b1 b2 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT b3 b2 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT cvector_neg b3 b2 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ c~ cIN f1 * * part cUNION f2 f3 cindependent * * part cINSERT f1 * * part cUNION f2 f3 c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ c~ cIN f1 * * part cUNION f2 f3 cindependent * * part cINSERT f1 * * part cUNION f2 f3 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 f2 f3 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 f2 * * part cINSERT f1 f3 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 f2 * * part cINSERT cvector_neg f1 f3
- (v3 = v2) |- ((v3 = v2) /\ ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))
T c==> c= f0 f1 c/\ c= f0 f1 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f2 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f3 f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
- (~ (v1 = (vec (NUMERAL _0)))), (~ (v2 = v1)), (~ (v3 = v1)) |- ((~ (v1 = (vec (NUMERAL _0)))) /\ ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 f0 c==> c~ c= f2 f0 c/\ c~ c= f0 cvec cNUMERAL c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f3 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f3 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f3 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f0 f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f3 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
- |- ((v1 = (vec (NUMERAL _0))) \/ (~ (v1 = (vec (NUMERAL _0)))))
T c\/ c= f0 cvec cNUMERAL c_0 c~ c= f0 cvec cNUMERAL c_0
- (((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) |- ((!r. (!s. (!t. (!v. ((((real_le (real_of_num (NUMERAL _0))) r) /\ ((~ (v IN (s UNION t))) /\ (independent (v INSERT (s UNION t))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t))))))))))) ==> ((measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT (v INSERT s))) t))) = ((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) (v INSERT t))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT s)) ((vector_neg v) INSERT t)))))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ c~ cIN f1 * * part cUNION f2 f3 cindependent * * part cINSERT f1 * * part cUNION f2 f3 c==> ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c~ cIN b3 * * part cUNION b1 b2 cindependent * * part cINSERT b3 * * part cUNION b1 b2 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b3 b1 b2 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT b3 b2 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 b1 * * part cINSERT cvector_neg b3 b2 c= cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 f2 f3 creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 f2 * * part cINSERT f1 f3 cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 f2 * * part cINSERT cvector_neg f1 f3
- ((~ (v1 = (vec (NUMERAL _0)))) ==> ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))), ((v1 = (vec (NUMERAL _0))) ==> ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))) |- ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))
T c==> c==> c~ c= f0 cvec cNUMERAL c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f0 f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c==> c==> c= f0 cvec cNUMERAL c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f0 f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f0 f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
- (~ (v1 = (vec (NUMERAL _0)))) |- ((v1 = (vec (NUMERAL _0))) = F)
T c==> c~ c= f0 cvec cNUMERAL c_0 c= c= f0 cvec cNUMERAL c_0 cF
- (v2 = (vec (NUMERAL _0))) |- (T = ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))
T c==> c= f0 cvec cNUMERAL c_0 c= cT c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f2 f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((\t. (t \/ (~ t))) (v1 = (vec (NUMERAL _0))))
T * / c\/ b0 c~ b0 c= f0 cvec cNUMERAL c_0
- (~ (v1 = (vec (NUMERAL _0)))) |- (~ ((vec (NUMERAL _0)) = v1))
T c==> c~ c= f0 cvec cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 f0
- ((~ (v2 = (vec (NUMERAL _0)))) ==> ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))), ((v2 = (vec (NUMERAL _0))) ==> ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))) |- ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))
T c==> c==> c~ c= f0 cvec cNUMERAL c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f2 f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c==> c==> c= f0 cvec cNUMERAL c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f2 f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f2 f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
- (~ (v2 = v1)), (~ (v3 = v1)) |- ((~ (v2 = (vec (NUMERAL _0)))) ==> ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))
T c==> c~ c= f0 f1 c==> c~ c= f2 f1 c==> c~ c= f0 cvec cNUMERAL c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f3 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f3 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f3 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f1 f0 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f3 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
- |- ((s UNION EMPTY) = s)
T c= * * part cUNION f0 part cEMPTY f0
- (((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar (z INSERT (w INSERT (w1 INSERT (w2 INSERT EMPTY))))))) |- ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar (z INSERT (w INSERT (w1 INSERT (w2 INSERT EMPTY))))))) /\ ((measurable ((ball (z , r)) INTER ((aff_gt (z INSERT (w INSERT EMPTY))) (w1 INSERT (w2 INSERT EMPTY))))) = T))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= cmeasurable * * part cINTER * part cball c, f1 f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cT
- (~ (v3 = v1)), (~ (v3 = (vec (NUMERAL _0)))) |- ((~ (v3 = (vec (NUMERAL _0)))) /\ ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))
T c==> c~ c= f0 f1 c==> c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f2 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f1 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f1 f3 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
- |- (((!s. ((s UNION EMPTY) = s)) ==> ((\s. ((s UNION EMPTY) = s)) s)) = ((\s. ((s UNION EMPTY) = s)) s))
T c= c==> ! c= * * part cUNION b0 part cEMPTY b0 * / c= * * part cUNION b0 part cEMPTY b0 f0 * / c= * * part cUNION b0 part cEMPTY b0 f0
- ((~ (v3 = (vec (NUMERAL _0)))) ==> ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))) |- ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))
T c==> c==> c~ c= f0 cvec cNUMERAL c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f2 f3 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f2 f3 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
- |- ((\s. ((s UNION EMPTY) = s)) s)
T * / c= * * part cUNION b0 part cEMPTY b0 f0
- (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) |- (T = (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cT c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (v3 = (vec (NUMERAL _0))) |- (T = ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))
T c==> c= f0 cvec cNUMERAL c_0 c= cT c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f2 f3 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
- (v1 = (vec (NUMERAL _0))) |- ((v1 = (vec (NUMERAL _0))) /\ ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))
T c==> c= f0 cvec cNUMERAL c_0 c/\ c= f0 cvec cNUMERAL c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f0 f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
- (~ (v3 = v1)) |- ((~ (v3 = (vec (NUMERAL _0)))) ==> ((((real_le (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_add (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) (measure ((ball ((vec (NUMERAL _0)) , r)) INTER ((aff_gt ((vec (NUMERAL _0)) INSERT EMPTY)) ((vector_neg v1) INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = ((real_mul ((((dihV (vec (NUMERAL _0))) v1) v2) v3)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))
T c==> c~ c= f0 f1 c==> c~ c= f0 cvec cNUMERAL c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f2 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c= creal_add cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY cmeasure * * part cINTER * part cball c, cvec cNUMERAL c_0 f2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvector_neg f1 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY creal_mul cdihV cvec cNUMERAL c_0 f1 f3 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
