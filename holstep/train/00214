N Lp_ineqs_proofs.split_fan_face_eq_add_diag
C |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> (!d. ((d IN (dart_of_fan (V , E))) ==> (((split_fan_face (V , E)) d) = (V , ((add_diag (V , E)) d)))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 ! c==> cIN b0 * part cdart_of_fan c, f0 f1 c= csplit_fan_face c, f0 f1 b0 c, f0 * * part cadd_diag c, f0 f1 b0
D TRUTH
A |- T
T cT
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D pair_INDUCT
A |- (!P. ((!x. (!y. (P (x , y)))) ==> (!p. (P p))))
T c==> ! ! * f0 c, b0 b1 ! * f0 b0
D Add_triangle.split_fan_face
A |- (!V. (!v. (!w. (!E. (((split_fan_face (V , E)) (v , w)) = (V , ((w INSERT ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) INSERT EMPTY)) INSERT E)))))))
T c= csplit_fan_face c, f0 f1 c, f2 f3 c, f0 * * part cINSERT * * part cINSERT f3 * * part cINSERT csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 part cEMPTY f1
D Add_triangle.fully_surrounded_dart_of_fan_eq
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((dart_of_fan (V , E)) = (dart1_of_fan (V , E)))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c= * part cdart_of_fan c, f0 f1 * part cdart1_of_fan c, f0 f1
D Lp_ineqs_proofs.add_diag
A |- (!V. (!v. (!w. (!E. (((add_diag (V , E)) (v , w)) = (((COND ((v , w) IN (dart1_of_fan (V , E)))) ((w INSERT ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) INSERT EMPTY)) INSERT E)) E))))))
T c= * * part cadd_diag c, f0 f1 c, f2 f3 * * * part cCOND cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 * * part cINSERT * * part cINSERT f3 * * part cINSERT csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 part cEMPTY f1 f1
