N Hdplygy.CONTINUOUS_ON_TAU_STAR
C |- (!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))))) ==> ((continuous_on (lift o (\l. ((tau_star s) l)))) ((B_SY1 (a_sy s)) (b_sy s)))))
T c==> c/\ c= ck_sy f0 f1 c/\ c= cdimindex part cUNIV f1 c/\ c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 c< cNUMERAL cBIT0 cBIT1 c_0 f1 ccontinuous_on * * part co part clift / ctau_star f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0
D TRUTH
A |- T
T cT
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D LIFT_SUB
A |- (!x. (!y. ((lift ((real_sub x) y)) = ((vector_sub (lift x)) (lift y)))))
T c= clift creal_sub f0 f1 cvector_sub clift f0 clift f1
D CONTINUOUS_ON_SUB
A |- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 ccontinuous_on / cvector_sub * f0 b0 * f2 b0 f1
D Hdplygy.tau_star
A |- (!s. (!l. (((tau_star s) l) = ((real_sub (((tau_fun (V_SY (vecmats l))) (E_SY (vecmats l))) (F_SY (vecmats l)))) (d_fun (s , l))))))
T c= ctau_star f0 f1 creal_sub ctau_fun * part cV_SY cvecmats f1 * part cE_SY cvecmats f1 * part cF_SY cvecmats f1 cd_fun c, f0 f1
D Hdplygy.CONTINUOUS_ON_D_FUN
A |- (!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ ((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k)))))) ==> ((continuous_on (lift o (\l. (d_fun (s , l))))) ((B_SY1 (a_sy s)) (b_sy s)))))
T c==> c/\ c= ck_sy f0 f1 c/\ c= cdimindex part cUNIV f1 c/\ c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 ccontinuous_on * * part co part clift / cd_fun c, f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0
D Hdplygy.CONTINUOUS_ON_TAU_FUN
A |- (!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))))) ==> ((continuous_on (lift o (\l. (((tau_fun (V_SY (vecmats l))) (E_SY (vecmats l))) (F_SY (vecmats l)))))) ((B_SY1 (a_sy s)) (b_sy s)))))
T c==> c/\ c= ck_sy f0 f1 c/\ c= cdimindex part cUNIV f1 c/\ c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 c< cNUMERAL cBIT0 cBIT1 c_0 f1 ccontinuous_on * * part co part clift / ctau_fun * part cV_SY cvecmats b0 * part cE_SY cvecmats b0 * part cF_SY cvecmats b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0
+ ((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))), ((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))), ((dimindex UNIV) = k), ((k_sy s) = k), ((NUMERAL (BIT0 (BIT1 _0))) < k) |- (((continuous_on (\x. (lift (d_fun (s , x))))) ((B_SY1 (a_sy s)) (b_sy s))) ==> (((continuous_on (\x. (lift (((tau_fun (V_SY (vecmats x))) (E_SY (vecmats x))) (F_SY (vecmats x)))))) ((B_SY1 (a_sy s)) (b_sy s))) /\ ((continuous_on (\x. (lift (d_fun (s , x))))) ((B_SY1 (a_sy s)) (b_sy s)))))
T c==> c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c==> c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 c==> c= cdimindex part cUNIV f1 c==> c= ck_sy f0 f1 c==> c< cNUMERAL cBIT0 cBIT1 c_0 f1 c==> ccontinuous_on / clift cd_fun c, f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 c/\ ccontinuous_on / clift ctau_fun * part cV_SY cvecmats b0 * part cE_SY cvecmats b0 * part cF_SY cvecmats b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 ccontinuous_on / clift cd_fun c, f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) |- ((\f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) f)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 * / ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 f0
+ |- (((!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ ((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k)))))) ==> ((continuous_on (lift o (\l. (d_fun (s , l))))) ((B_SY1 (a_sy s)) (b_sy s))))) ==> ((\s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ ((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k)))))) ==> ((continuous_on (lift o (\l. (d_fun (s , l))))) ((B_SY1 (a_sy s)) (b_sy s))))) s)) = ((\s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ ((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k)))))) ==> ((continuous_on (lift o (\l. (d_fun (s , l))))) ((B_SY1 (a_sy s)) (b_sy s))))) s))
T c= c==> ! c==> c/\ c= ck_sy b0 f0 c/\ c= cdimindex part cUNIV f0 c/\ c= * part cI_SY b0 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c= * part cf_sy b0 / cMOD c+ cNUMERAL cBIT1 c_0 b1 f0 ccontinuous_on * * part co part clift / cd_fun c, b0 b1 * * part cB_SY1 * part ca_sy b0 * part cb_sy b0 * / c==> c/\ c= ck_sy b0 f0 c/\ c= cdimindex part cUNIV f0 c/\ c= * part cI_SY b0 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c= * part cf_sy b0 / cMOD c+ cNUMERAL cBIT1 c_0 b1 f0 ccontinuous_on * * part co part clift / cd_fun c, b0 b1 * * part cB_SY1 * part ca_sy b0 * part cb_sy b0 f1 * / c==> c/\ c= ck_sy b0 f0 c/\ c= cdimindex part cUNIV f0 c/\ c= * part cI_SY b0 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c= * part cf_sy b0 / cMOD c+ cNUMERAL cBIT1 c_0 b1 f0 ccontinuous_on * * part co part clift / cd_fun c, b0 b1 * * part cB_SY1 * part ca_sy b0 * part cb_sy b0 f1
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ ((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))), ((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))), ((dimindex UNIV) = k), ((k_sy s) = k), ((NUMERAL (BIT0 (BIT1 _0))) < k) |- (((continuous_on (\x. (lift (((tau_fun (V_SY (vecmats x))) (E_SY (vecmats x))) (F_SY (vecmats x)))))) ((B_SY1 (a_sy s)) (b_sy s))) /\ ((continuous_on (\x. (lift (d_fun (s , x))))) ((B_SY1 (a_sy s)) (b_sy s))))
T c==> c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c==> c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 c==> c= cdimindex part cUNIV f1 c==> c= ck_sy f0 f1 c==> c< cNUMERAL cBIT0 cBIT1 c_0 f1 c/\ ccontinuous_on / clift ctau_fun * part cV_SY cvecmats b0 * part cE_SY cvecmats b0 * part cF_SY cvecmats b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 ccontinuous_on / clift cd_fun c, f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0
+ |- ((((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))))) ==> ((continuous_on (lift o (\l. (((tau_fun (V_SY (vecmats l))) (E_SY (vecmats l))) (F_SY (vecmats l)))))) ((B_SY1 (a_sy s)) (b_sy s)))) ==> ((continuous_on (\x. (lift (((tau_fun (V_SY (vecmats x))) (E_SY (vecmats x))) (F_SY (vecmats x)))))) ((B_SY1 (a_sy s)) (b_sy s)))) = ((continuous_on (\x. (lift (((tau_fun (V_SY (vecmats x))) (E_SY (vecmats x))) (F_SY (vecmats x)))))) ((B_SY1 (a_sy s)) (b_sy s))))
T c= c==> c==> c/\ c= ck_sy f0 f1 c/\ c= cdimindex part cUNIV f1 c/\ c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 c< cNUMERAL cBIT0 cBIT1 c_0 f1 ccontinuous_on * * part co part clift / ctau_fun * part cV_SY cvecmats b0 * part cE_SY cvecmats b0 * part cF_SY cvecmats b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 ccontinuous_on / clift ctau_fun * part cV_SY cvecmats b0 * part cE_SY cvecmats b0 * part cF_SY cvecmats b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 ccontinuous_on / clift ctau_fun * part cV_SY cvecmats b0 * part cE_SY cvecmats b0 * part cF_SY cvecmats b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0
+ ((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))), ((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))), ((dimindex UNIV) = k), ((k_sy s) = k), ((NUMERAL (BIT0 (BIT1 _0))) < k) |- ((continuous_on (\x. (lift (((tau_fun (V_SY (vecmats x))) (E_SY (vecmats x))) (F_SY (vecmats x)))))) ((B_SY1 (a_sy s)) (b_sy s)))
T c==> c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c==> c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 c==> c= cdimindex part cUNIV f1 c==> c= ck_sy f0 f1 c==> c< cNUMERAL cBIT0 cBIT1 c_0 f1 ccontinuous_on / clift ctau_fun * part cV_SY cvecmats b0 * part cE_SY cvecmats b0 * part cF_SY cvecmats b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) |- (((!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))) ==> ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))) g)) = ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))) g))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 c= c==> ! ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_sub * f0 b2 * b0 b2 b1 * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_sub * f0 b2 * b0 b2 b1 f1 * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_sub * f0 b2 * b0 b2 b1 f1
- |- ((\k. (!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ ((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k)))))) ==> ((continuous_on (lift o (\l. (d_fun (s , l))))) ((B_SY1 (a_sy s)) (b_sy s)))))) k)
T * / ! c==> c/\ c= ck_sy b1 b0 c/\ c= cdimindex part cUNIV b0 c/\ c= * part cI_SY b1 * * part c.. cNUMERAL c_0 c- b0 cNUMERAL cBIT1 c_0 c= * part cf_sy b1 / cMOD c+ cNUMERAL cBIT1 c_0 b2 b0 ccontinuous_on * * part co part clift / cd_fun c, b1 b2 * * part cB_SY1 * part ca_sy b1 * part cb_sy b1 f0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) |- (((!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))) ==> ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))) s)) = ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 c= c==> ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_sub * f0 b1 * f1 b1 b0 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_sub * f0 b1 * f1 b1 b0 f2 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_sub * f0 b1 * f1 b1 b0 f2
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))), (((continuous_on f) s) /\ ((continuous_on g) s)) |- ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 ccontinuous_on / cvector_sub * f0 b0 * f2 b0 f1
+ ((NUMERAL (BIT0 (BIT1 _0))) < k) |- (((NUMERAL (BIT0 (BIT1 _0))) < k) = T)
T c==> c< cNUMERAL cBIT0 cBIT1 c_0 f0 c= c< cNUMERAL cBIT0 cBIT1 c_0 f0 cT
+ |- ((\s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ ((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k)))))) ==> ((continuous_on (lift o (\l. (d_fun (s , l))))) ((B_SY1 (a_sy s)) (b_sy s))))) s)
T * / c==> c/\ c= ck_sy b0 f0 c/\ c= cdimindex part cUNIV f0 c/\ c= * part cI_SY b0 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c= * part cf_sy b0 / cMOD c+ cNUMERAL cBIT1 c_0 b1 f0 ccontinuous_on * * part co part clift / cd_fun c, b0 b1 * * part cB_SY1 * part ca_sy b0 * part cb_sy b0 f1
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (((continuous_on f) s) /\ ((continuous_on g) s)) |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 ccontinuous_on / cvector_sub * f0 b0 * f2 b0 f1
+ |- ((((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ ((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k)))))) ==> ((continuous_on (lift o (\l. (d_fun (s , l))))) ((B_SY1 (a_sy s)) (b_sy s)))) ==> (((continuous_on (\x. (lift (((tau_fun (V_SY (vecmats x))) (E_SY (vecmats x))) (F_SY (vecmats x)))))) ((B_SY1 (a_sy s)) (b_sy s))) /\ ((continuous_on (\x. (lift (d_fun (s , x))))) ((B_SY1 (a_sy s)) (b_sy s))))) = (((continuous_on (\x. (lift (((tau_fun (V_SY (vecmats x))) (E_SY (vecmats x))) (F_SY (vecmats x)))))) ((B_SY1 (a_sy s)) (b_sy s))) /\ ((continuous_on (\x. (lift (d_fun (s , x))))) ((B_SY1 (a_sy s)) (b_sy s)))))
T c= c==> c==> c/\ c= ck_sy f0 f1 c/\ c= cdimindex part cUNIV f1 c/\ c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 ccontinuous_on * * part co part clift / cd_fun c, f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 c/\ ccontinuous_on / clift ctau_fun * part cV_SY cvecmats b0 * part cE_SY cvecmats b0 * part cF_SY cvecmats b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 ccontinuous_on / clift cd_fun c, f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 c/\ ccontinuous_on / clift ctau_fun * part cV_SY cvecmats b0 * part cE_SY cvecmats b0 * part cF_SY cvecmats b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 ccontinuous_on / clift cd_fun c, f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ |- (((!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))) ==> ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))) g)) = ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))) g))
T c= c==> ! ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_sub * f0 b2 * b0 b2 b1 * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_sub * f0 b2 * b0 b2 b1 f1 * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_sub * f0 b2 * b0 b2 b1 f1
+ ((continuous_on (\x. (lift (d_fun (s , x))))) ((B_SY1 (a_sy s)) (b_sy s))) |- (((continuous_on (\x. (lift (((tau_fun (V_SY (vecmats x))) (E_SY (vecmats x))) (F_SY (vecmats x)))))) ((B_SY1 (a_sy s)) (b_sy s))) = (((continuous_on (\x. (lift (((tau_fun (V_SY (vecmats x))) (E_SY (vecmats x))) (F_SY (vecmats x)))))) ((B_SY1 (a_sy s)) (b_sy s))) /\ ((continuous_on (\x. (lift (d_fun (s , x))))) ((B_SY1 (a_sy s)) (b_sy s)))))
T c==> ccontinuous_on / clift cd_fun c, f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 c= ccontinuous_on / clift ctau_fun * part cV_SY cvecmats b0 * part cE_SY cvecmats b0 * part cF_SY cvecmats b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 c/\ ccontinuous_on / clift ctau_fun * part cV_SY cvecmats b0 * part cE_SY cvecmats b0 * part cF_SY cvecmats b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 ccontinuous_on / clift cd_fun c, f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0
+ ((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))), ((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))), ((dimindex UNIV) = k), ((k_sy s) = k) |- ((((continuous_on (\x. (lift (d_fun (s , x))))) ((B_SY1 (a_sy s)) (b_sy s))) ==> (((continuous_on (\x. (lift (((tau_fun (V_SY (vecmats x))) (E_SY (vecmats x))) (F_SY (vecmats x)))))) ((B_SY1 (a_sy s)) (b_sy s))) /\ ((continuous_on (\x. (lift (d_fun (s , x))))) ((B_SY1 (a_sy s)) (b_sy s))))) = (((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ ((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k)))))) ==> ((continuous_on (lift o (\l. (d_fun (s , l))))) ((B_SY1 (a_sy s)) (b_sy s)))) ==> (((continuous_on (\x. (lift (((tau_fun (V_SY (vecmats x))) (E_SY (vecmats x))) (F_SY (vecmats x)))))) ((B_SY1 (a_sy s)) (b_sy s))) /\ ((continuous_on (\x. (lift (d_fun (s , x))))) ((B_SY1 (a_sy s)) (b_sy s))))))
T c==> c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c==> c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 c==> c= cdimindex part cUNIV f1 c==> c= ck_sy f0 f1 c= c==> ccontinuous_on / clift cd_fun c, f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 c/\ ccontinuous_on / clift ctau_fun * part cV_SY cvecmats b0 * part cE_SY cvecmats b0 * part cF_SY cvecmats b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 ccontinuous_on / clift cd_fun c, f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 c==> c==> c/\ c= ck_sy f0 f1 c/\ c= cdimindex part cUNIV f1 c/\ c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 ccontinuous_on * * part co part clift / cd_fun c, f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 c/\ ccontinuous_on / clift ctau_fun * part cV_SY cvecmats b0 * part cE_SY cvecmats b0 * part cF_SY cvecmats b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 ccontinuous_on / clift cd_fun c, f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0
+ |- (((!y. ((lift ((real_sub x) y)) = ((vector_sub (lift x)) (lift y)))) ==> ((\y. ((lift ((real_sub x) y)) = ((vector_sub (lift x)) (lift y)))) y)) = ((\y. ((lift ((real_sub x) y)) = ((vector_sub (lift x)) (lift y)))) y))
T c= c==> ! c= clift creal_sub f0 b0 cvector_sub clift f0 clift b0 * / c= clift creal_sub f0 b0 cvector_sub clift f0 clift b0 f1 * / c= clift creal_sub f0 b0 cvector_sub clift f0 clift b0 f1
+ |- ((\f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) f)
T * / ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 f0
- |- ((!s. t) = t)
T c= ! f0 f0
- |- ((!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))))) ==> ((continuous_on (lift o (\l. (((tau_fun (V_SY (vecmats l))) (E_SY (vecmats l))) (F_SY (vecmats l)))))) ((B_SY1 (a_sy s)) (b_sy s))))) = T)
T c= ! c==> c/\ c= ck_sy b0 f0 c/\ c= cdimindex part cUNIV f0 c/\ c= * part cI_SY b0 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy b0 / cMOD c+ cNUMERAL cBIT1 c_0 b1 f0 c< cNUMERAL cBIT0 cBIT1 c_0 f0 ccontinuous_on * * part co part clift / ctau_fun * part cV_SY cvecmats b1 * part cE_SY cvecmats b1 * part cF_SY cvecmats b1 * * part cB_SY1 * part ca_sy b0 * part cb_sy b0 cT
- |- (((!k. (!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))))) ==> ((continuous_on (lift o (\l. (((tau_fun (V_SY (vecmats l))) (E_SY (vecmats l))) (F_SY (vecmats l)))))) ((B_SY1 (a_sy s)) (b_sy s)))))) ==> ((\k. (!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))))) ==> ((continuous_on (lift o (\l. (((tau_fun (V_SY (vecmats l))) (E_SY (vecmats l))) (F_SY (vecmats l)))))) ((B_SY1 (a_sy s)) (b_sy s)))))) k)) = ((\k. (!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))))) ==> ((continuous_on (lift o (\l. (((tau_fun (V_SY (vecmats l))) (E_SY (vecmats l))) (F_SY (vecmats l)))))) ((B_SY1 (a_sy s)) (b_sy s)))))) k))
T c= c==> ! ! c==> c/\ c= ck_sy b1 b0 c/\ c= cdimindex part cUNIV b0 c/\ c= * part cI_SY b1 * * part c.. cNUMERAL c_0 c- b0 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy b1 / cMOD c+ cNUMERAL cBIT1 c_0 b2 b0 c< cNUMERAL cBIT0 cBIT1 c_0 b0 ccontinuous_on * * part co part clift / ctau_fun * part cV_SY cvecmats b2 * part cE_SY cvecmats b2 * part cF_SY cvecmats b2 * * part cB_SY1 * part ca_sy b1 * part cb_sy b1 * / ! c==> c/\ c= ck_sy b1 b0 c/\ c= cdimindex part cUNIV b0 c/\ c= * part cI_SY b1 * * part c.. cNUMERAL c_0 c- b0 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy b1 / cMOD c+ cNUMERAL cBIT1 c_0 b2 b0 c< cNUMERAL cBIT0 cBIT1 c_0 b0 ccontinuous_on * * part co part clift / ctau_fun * part cV_SY cvecmats b2 * part cE_SY cvecmats b2 * part cF_SY cvecmats b2 * * part cB_SY1 * part ca_sy b1 * part cb_sy b1 f0 * / ! c==> c/\ c= ck_sy b1 b0 c/\ c= cdimindex part cUNIV b0 c/\ c= * part cI_SY b1 * * part c.. cNUMERAL c_0 c- b0 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy b1 / cMOD c+ cNUMERAL cBIT1 c_0 b2 b0 c< cNUMERAL cBIT0 cBIT1 c_0 b0 ccontinuous_on * * part co part clift / ctau_fun * part cV_SY cvecmats b2 * part cE_SY cvecmats b2 * part cF_SY cvecmats b2 * * part cB_SY1 * part ca_sy b1 * part cb_sy b1 f0
+ ((k_sy s) = k), (((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))))) |- ((continuous_on (\x. ((vector_sub (lift (((tau_fun (V_SY (vecmats x))) (E_SY (vecmats x))) (F_SY (vecmats x))))) (lift (d_fun (s , x)))))) ((B_SY1 (a_sy s)) (b_sy s)))
T c==> c= ck_sy f0 f1 c==> c/\ c= ck_sy f0 f1 c/\ c= cdimindex part cUNIV f1 c/\ c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 c< cNUMERAL cBIT0 cBIT1 c_0 f1 ccontinuous_on / cvector_sub clift ctau_fun * part cV_SY cvecmats b0 * part cE_SY cvecmats b0 * part cF_SY cvecmats b0 clift cd_fun c, f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0
+ ((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))), ((dimindex UNIV) = k), ((k_sy s) = k), (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))) |- ((continuous_on (\x. ((vector_sub (lift (((tau_fun (V_SY (vecmats x))) (E_SY (vecmats x))) (F_SY (vecmats x))))) (lift (d_fun (s , x)))))) ((B_SY1 (a_sy s)) (b_sy s)))
T c==> c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c==> c= cdimindex part cUNIV f1 c==> c= ck_sy f0 f1 c==> c/\ c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 c< cNUMERAL cBIT0 cBIT1 c_0 f1 ccontinuous_on / cvector_sub clift ctau_fun * part cV_SY cvecmats b0 * part cE_SY cvecmats b0 * part cF_SY cvecmats b0 clift cd_fun c, f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) |- ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))) g)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_sub * f0 b2 * b0 b2 b1 f1
+ |- ((\l. (((tau_star s) l) = ((real_sub (((tau_fun (V_SY (vecmats l))) (E_SY (vecmats l))) (F_SY (vecmats l)))) (d_fun (s , l))))) l)
T * / c= ctau_star f0 b0 creal_sub ctau_fun * part cV_SY cvecmats b0 * part cE_SY cvecmats b0 * part cF_SY cvecmats b0 cd_fun c, f0 b0 f1
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ ((dimindex UNIV) = k), ((k_sy s) = k), (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k)))) |- ((continuous_on (\x. ((vector_sub (lift (((tau_fun (V_SY (vecmats x))) (E_SY (vecmats x))) (F_SY (vecmats x))))) (lift (d_fun (s , x)))))) ((B_SY1 (a_sy s)) (b_sy s)))
T c==> c= cdimindex part cUNIV f0 c==> c= ck_sy f1 f0 c==> c/\ c= cdimindex part cUNIV f0 c/\ c= * part cI_SY f1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy f1 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f0 c< cNUMERAL cBIT0 cBIT1 c_0 f0 ccontinuous_on / cvector_sub clift ctau_fun * part cV_SY cvecmats b0 * part cE_SY cvecmats b0 * part cF_SY cvecmats b0 clift cd_fun c, f1 b0 * * part cB_SY1 * part ca_sy f1 * part cb_sy f1
- |- (((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) ==> (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))))) = (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))))
T c= c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2
+ (((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))))) |- ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))))) /\ ((continuous_on (\x. ((vector_sub (lift (((tau_fun (V_SY (vecmats x))) (E_SY (vecmats x))) (F_SY (vecmats x))))) (lift (d_fun (s , x)))))) ((B_SY1 (a_sy s)) (b_sy s))))
T c==> c/\ c= ck_sy f0 f1 c/\ c= cdimindex part cUNIV f1 c/\ c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 c< cNUMERAL cBIT0 cBIT1 c_0 f1 c/\ c/\ c= ck_sy f0 f1 c/\ c= cdimindex part cUNIV f1 c/\ c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 c< cNUMERAL cBIT0 cBIT1 c_0 f1 ccontinuous_on / cvector_sub clift ctau_fun * part cV_SY cvecmats b0 * part cE_SY cvecmats b0 * part cF_SY cvecmats b0 clift cd_fun c, f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0
+ |- (((!s. (!l. (((tau_star s) l) = ((real_sub (((tau_fun (V_SY (vecmats l))) (E_SY (vecmats l))) (F_SY (vecmats l)))) (d_fun (s , l)))))) ==> ((\s. (!l. (((tau_star s) l) = ((real_sub (((tau_fun (V_SY (vecmats l))) (E_SY (vecmats l))) (F_SY (vecmats l)))) (d_fun (s , l)))))) s)) = ((\s. (!l. (((tau_star s) l) = ((real_sub (((tau_fun (V_SY (vecmats l))) (E_SY (vecmats l))) (F_SY (vecmats l)))) (d_fun (s , l)))))) s))
T c= c==> ! ! c= ctau_star b0 b1 creal_sub ctau_fun * part cV_SY cvecmats b1 * part cE_SY cvecmats b1 * part cF_SY cvecmats b1 cd_fun c, b0 b1 * / ! c= ctau_star b0 b1 creal_sub ctau_fun * part cV_SY cvecmats b1 * part cE_SY cvecmats b1 * part cF_SY cvecmats b1 cd_fun c, b0 b1 f0 * / ! c= ctau_star b0 b1 creal_sub ctau_fun * part cV_SY cvecmats b1 * part cE_SY cvecmats b1 * part cF_SY cvecmats b1 cd_fun c, b0 b1 f0
+ ((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))), ((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))), ((dimindex UNIV) = k), ((k_sy s) = k), ((NUMERAL (BIT0 (BIT1 _0))) < k), ((continuous_on (\x. (lift (d_fun (s , x))))) ((B_SY1 (a_sy s)) (b_sy s))) |- (((continuous_on (\x. (lift (d_fun (s , x))))) ((B_SY1 (a_sy s)) (b_sy s))) /\ (((continuous_on (\x. (lift (((tau_fun (V_SY (vecmats x))) (E_SY (vecmats x))) (F_SY (vecmats x)))))) ((B_SY1 (a_sy s)) (b_sy s))) /\ ((continuous_on (\x. (lift (d_fun (s , x))))) ((B_SY1 (a_sy s)) (b_sy s)))))
T c==> c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c==> c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 f1 c==> c= cdimindex part cUNIV f1 c==> c= ck_sy f0 f1 c==> c< cNUMERAL cBIT0 cBIT1 c_0 f1 c==> ccontinuous_on / clift cd_fun c, f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 c/\ ccontinuous_on / clift cd_fun c, f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 c/\ ccontinuous_on / clift ctau_fun * part cV_SY cvecmats b0 * part cE_SY cvecmats b0 * part cF_SY cvecmats b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0 ccontinuous_on / clift cd_fun c, f0 b0 * * part cB_SY1 * part ca_sy f0 * part cb_sy f0
- |- ((\k. (!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ (((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k))) /\ ((NUMERAL (BIT0 (BIT1 _0))) < k))))) ==> ((continuous_on (lift o (\l. (((tau_fun (V_SY (vecmats l))) (E_SY (vecmats l))) (F_SY (vecmats l)))))) ((B_SY1 (a_sy s)) (b_sy s)))))) k)
T * / ! c==> c/\ c= ck_sy b1 b0 c/\ c= cdimindex part cUNIV b0 c/\ c= * part cI_SY b1 * * part c.. cNUMERAL c_0 c- b0 cNUMERAL cBIT1 c_0 c/\ c= * part cf_sy b1 / cMOD c+ cNUMERAL cBIT1 c_0 b2 b0 c< cNUMERAL cBIT0 cBIT1 c_0 b0 ccontinuous_on * * part co part clift / ctau_fun * part cV_SY cvecmats b2 * part cE_SY cvecmats b2 * part cF_SY cvecmats b2 * * part cB_SY1 * part ca_sy b1 * part cb_sy b1 f0
+ |- (((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) ==> ((\f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) f)) = ((\f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) f))
T c= c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 * / ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 f0 * / ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 f0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) |- (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_sub * f0 b1 * f1 b1 b0
- |- ((!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ ((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k)))))) ==> ((continuous_on (lift o (\l. (d_fun (s , l))))) ((B_SY1 (a_sy s)) (b_sy s))))) = T)
T c= ! c==> c/\ c= ck_sy b0 f0 c/\ c= cdimindex part cUNIV f0 c/\ c= * part cI_SY b0 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c= * part cf_sy b0 / cMOD c+ cNUMERAL cBIT1 c_0 b1 f0 ccontinuous_on * * part co part clift / cd_fun c, b0 b1 * * part cB_SY1 * part ca_sy b0 * part cb_sy b0 cT
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) |- ((!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))) = T)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 c= ! ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_sub * f0 b2 * b0 b2 b1 cT
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))), (((continuous_on f) s) /\ ((continuous_on g) s)) |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) /\ ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 c/\ ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 ccontinuous_on / cvector_sub * f0 b0 * f2 b0 f1
- |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) ==> (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) |- ((!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))) = T)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 c= ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_sub * f0 b1 * f1 b1 b0 cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) /\ (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 c/\ ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) |- (((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)) = T)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 c= c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 ccontinuous_on / cvector_sub * f0 b0 * f2 b0 f1 cT
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) |- (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 ! ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_sub * f0 b2 * b0 b2 b1
- |- (((!k. (!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ ((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k)))))) ==> ((continuous_on (lift o (\l. (d_fun (s , l))))) ((B_SY1 (a_sy s)) (b_sy s)))))) ==> ((\k. (!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ ((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k)))))) ==> ((continuous_on (lift o (\l. (d_fun (s , l))))) ((B_SY1 (a_sy s)) (b_sy s)))))) k)) = ((\k. (!s. ((((k_sy s) = k) /\ (((dimindex UNIV) = k) /\ (((I_SY s) = ((NUMERAL _0) .. (k - (NUMERAL (BIT1 _0))))) /\ ((f_sy s) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD k)))))) ==> ((continuous_on (lift o (\l. (d_fun (s , l))))) ((B_SY1 (a_sy s)) (b_sy s)))))) k))
T c= c==> ! ! c==> c/\ c= ck_sy b1 b0 c/\ c= cdimindex part cUNIV b0 c/\ c= * part cI_SY b1 * * part c.. cNUMERAL c_0 c- b0 cNUMERAL cBIT1 c_0 c= * part cf_sy b1 / cMOD c+ cNUMERAL cBIT1 c_0 b2 b0 ccontinuous_on * * part co part clift / cd_fun c, b1 b2 * * part cB_SY1 * part ca_sy b1 * part cb_sy b1 * / ! c==> c/\ c= ck_sy b1 b0 c/\ c= cdimindex part cUNIV b0 c/\ c= * part cI_SY b1 * * part c.. cNUMERAL c_0 c- b0 cNUMERAL cBIT1 c_0 c= * part cf_sy b1 / cMOD c+ cNUMERAL cBIT1 c_0 b2 b0 ccontinuous_on * * part co part clift / cd_fun c, b1 b2 * * part cB_SY1 * part ca_sy b1 * part cb_sy b1 f0 * / ! c==> c/\ c= ck_sy b1 b0 c/\ c= cdimindex part cUNIV b0 c/\ c= * part cI_SY b1 * * part c.. cNUMERAL c_0 c- b0 cNUMERAL cBIT1 c_0 c= * part cf_sy b1 / cMOD c+ cNUMERAL cBIT1 c_0 b2 b0 ccontinuous_on * * part co part clift / cd_fun c, b1 b2 * * part cB_SY1 * part ca_sy b1 * part cb_sy b1 f0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) |- ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))) s)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_sub * f0 b1 * f1 b1 b0 f2
- |- (((\l. (f l)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))), (((continuous_on f) s) /\ ((continuous_on g) s)) |- ((((continuous_on f) s) /\ ((continuous_on g) s)) /\ ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 c/\ c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 ccontinuous_on / cvector_sub * f0 b0 * f2 b0 f1
