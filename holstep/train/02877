N Seq2.index_cons
C |- (!x. (!h. (!t. (((indexl x) ((CONS h) t)) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t)))))))
T c= cindexl f0 cCONS f1 f2 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f2
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D ssreflect_eq_def
A |- (!v. (!P. (((ssreflect_eq v) P) = P)))
T c= cssreflect_eq f0 f1 f1
D bool_elim
A |- (!P. (((P T) /\ (P F)) ==> (!x. (P x))))
T c==> c/\ * f0 cT * f0 cF ! * f0 b0
D Seq.find
A |- (!a. (!x. (!s'. ((((find a) NIL) = (NUMERAL _0)) /\ (((find a) ((CONS x) s')) = (((COND (a x)) (NUMERAL _0)) (SUC ((find a) s'))))))))
T c/\ c= cfind f0 cNIL cNUMERAL c_0 c= cfind f0 cCONS f1 f2 cCOND * f0 f1 cNUMERAL c_0 cSUC cfind f0 f2
D Seq.pred1
A |- (!a. ((pred1 a) = (\x. (x = a))))
T c= * part cpred1 f0 / c= b0 f0
D Seq.index
A |- (!x. ((indexl x) = (find (pred1 x))))
T c= * part cindexl f0 * part cfind * part cpred1 f0
+ ((\x1. ((x = h) = x1)) x1) |- (((\x1. ((x = h) = x1)) x1) /\ ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t)))))
T c==> * / c= c= f0 f1 b0 f2 c/\ * / c= c= f0 f1 b0 f2 c= cCOND c= f1 f0 cNUMERAL c_0 cSUC cindexl f0 f3 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f3
- |- (((!p'. (!q'. ((((ssreflect_eq eq) (x = h)) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0)) = q')) ==> ((((ssreflect_eq eq) (x = h)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((ssreflect_eq eq) (x = h)) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0)) = q')) ==> ((((ssreflect_eq eq) (x = h)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((ssreflect_eq eq) (x = h)) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0)) = q')) ==> ((((ssreflect_eq eq) (x = h)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cssreflect_eq f0 c= f1 f2 b0 c==> c==> b0 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0 b1 c= c==> cssreflect_eq f0 c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0 c==> b0 b1 * / ! c==> c= cssreflect_eq f0 c= f1 f2 b0 c==> c==> b0 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0 b1 c= c==> cssreflect_eq f0 c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0 c==> b0 b1 f4 * / ! c==> c= cssreflect_eq f0 c= f1 f2 b0 c==> c==> b0 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0 b1 c= c==> cssreflect_eq f0 c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0 c==> b0 b1 f4
+ |- ((((COND ((\x'. (x' = x)) h)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))))
T c= cCOND * / c= b0 f0 f1 cNUMERAL c_0 cSUC cfind / c= b0 f0 f2 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f2
+ |- (((ssreflect_eq eq) (~ (x = h))) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t))))
T c==> cssreflect_eq f0 c~ c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3
+ |- (((?x1. ((x = h) = x1)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))))) = ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t)))))
T c= c==> c? / c= c= f0 f1 b0 c= cCOND c= f1 f0 cNUMERAL c_0 cSUC cindexl f0 f2 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f2 c= cCOND c= f1 f0 cNUMERAL c_0 cSUC cindexl f0 f2 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f2
- |- ((\p'. (!q'. ((((ssreflect_eq eq) (x = h)) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0)) = q')) ==> ((((ssreflect_eq eq) (x = h)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0))) = (p' ==> q')))))) p')
T * / ! c==> c= cssreflect_eq f0 c= f1 f2 b0 c==> c==> b0 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0 b1 c= c==> cssreflect_eq f0 c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0 c==> b0 b1 f4
+ |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
+ |- (((find a) ((CONS x) s')) = (((COND (a x)) (NUMERAL _0)) (SUC ((find a) s'))))
T c= cfind f0 cCONS f1 f2 cCOND * f0 f1 cNUMERAL c_0 cSUC cfind f0 f2
- |- ((((ssreflect_eq eq) (x = h)) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0)) = q')) ==> ((((ssreflect_eq eq) (x = h)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0))) = (p' ==> q'))))
T c==> c= cssreflect_eq f0 c= f1 f2 f3 c==> c==> f3 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cNUMERAL c_0 f5 c= c==> cssreflect_eq f0 c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cNUMERAL c_0 c==> f3 f5
- ((P T) /\ (P F)) |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) ==> (!x. (P x)))
T c==> c/\ * f0 cT * f0 cF c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! * f0 b0
+ |- ((((((ssreflect_eq eq) ((x = h) = T)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t))))) /\ (((ssreflect_eq eq) ((x = h) = F)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t)))))) ==> (!x1. (((ssreflect_eq eq) ((x = h) = x1)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND x1) (NUMERAL _0)) (SUC ((indexl x) t))))))) = (!x1. (((ssreflect_eq eq) ((x = h) = x1)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND x1) (NUMERAL _0)) (SUC ((indexl x) t)))))))
T c= c==> c/\ c==> cssreflect_eq f0 c= c= f1 f2 cT c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f3 c==> cssreflect_eq f0 c= c= f1 f2 cF c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f3 ! c==> cssreflect_eq f0 c= c= f1 f2 b0 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND b0 cNUMERAL c_0 cSUC cindexl f1 f3 ! c==> cssreflect_eq f0 c= c= f1 f2 b0 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND b0 cNUMERAL c_0 cSUC cindexl f1 f3
- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))) |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c==> c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0 c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
+ |- (P = ((ssreflect_eq eq) P))
T c= f0 cssreflect_eq f1 f0
+ |- ((\a. ((pred1 a) = (\x. (x = a)))) a)
T * / c= * part cpred1 b0 / c= b1 b0 f0
- (~ (x = h)) |- ((~ (x = h)) /\ ((SUC ((indexl x) t)) = (SUC ((indexl x) t))))
T c==> c~ c= f0 f1 c/\ c~ c= f0 f1 c= cSUC cindexl f0 f2 cSUC cindexl f0 f2
- |- ((\p'. (!q'. ((((ssreflect_eq eq) (~ (x = h))) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t))) = q')) ==> ((((ssreflect_eq eq) (~ (x = h))) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t)))) = (p' ==> q')))))) p')
T * / ! c==> c= cssreflect_eq f0 c~ c= f1 f2 b0 c==> c==> b0 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3 b1 c= c==> cssreflect_eq f0 c~ c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3 c==> b0 b1 f4
+ ((x = h) = x1) |- (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND x1) (NUMERAL _0)) (SUC ((indexl x) t)))) = ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t)))))
T c==> c= c= f0 f1 f2 c= c= cCOND c= f1 f0 cNUMERAL c_0 cSUC cindexl f0 f3 cCOND f2 cNUMERAL c_0 cSUC cindexl f0 f3 c= cCOND c= f1 f0 cNUMERAL c_0 cSUC cindexl f0 f3 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f3
- |- ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)
T * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- |- ((((ssreflect_eq eq) (x = h)) ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0)) = q')) ==> ((((ssreflect_eq eq) (x = h)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0))) = (((ssreflect_eq eq) (x = h)) ==> q')))
T c==> c==> cssreflect_eq f0 c= f1 f2 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0 f4 c= c==> cssreflect_eq f0 c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0 c==> cssreflect_eq f0 c= f1 f2 f4
+ |- ((\a. (!x. (!s'. ((((find a) NIL) = (NUMERAL _0)) /\ (((find a) ((CONS x) s')) = (((COND (a x)) (NUMERAL _0)) (SUC ((find a) s')))))))) a)
T * / ! ! c/\ c= cfind b0 cNIL cNUMERAL c_0 c= cfind b0 cCONS b1 b2 cCOND * b0 b1 cNUMERAL c_0 cSUC cfind b0 b2 f0
+ |- ((((COND ((pred1 x) h)) (NUMERAL _0)) (SUC ((find (pred1 x)) t))) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))))
T c= cCOND cpred1 f0 f1 cNUMERAL c_0 cSUC cfind * part cpred1 f0 f2 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f2
- |- (((h = x) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND g') t') e')))))
T c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 f3 c==> c==> c~ f2 c= cSUC cfind / c= b0 f1 f4 f5 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b0 f1 f4 cCOND f2 f3 f5
+ |- (((!q'. ((((ssreflect_eq eq) ((x = h) = F)) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t)))) = q')) ==> ((((ssreflect_eq eq) ((x = h) = F)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t))))) = (p' ==> q'))))) ==> ((\q'. ((((ssreflect_eq eq) ((x = h) = F)) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t)))) = q')) ==> ((((ssreflect_eq eq) ((x = h) = F)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t))))) = (p' ==> q'))))) q')) = ((\q'. ((((ssreflect_eq eq) ((x = h) = F)) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t)))) = q')) ==> ((((ssreflect_eq eq) ((x = h) = F)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cssreflect_eq f0 c= c= f1 f2 cF f3 c==> c==> f3 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f4 b0 c= c==> cssreflect_eq f0 c= c= f1 f2 cF c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f4 c==> f3 b0 * / c==> c= cssreflect_eq f0 c= c= f1 f2 cF f3 c==> c==> f3 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f4 b0 c= c==> cssreflect_eq f0 c= c= f1 f2 cF c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f4 c==> f3 b0 f5 * / c==> c= cssreflect_eq f0 c= c= f1 f2 cF f3 c==> c==> f3 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f4 b0 c= c==> cssreflect_eq f0 c= c= f1 f2 cF c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f4 c==> f3 b0 f5
+ |- (((!g'. (!t'. (!e'. ((((\x'. (x' = x)) h) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND ((\x'. (x' = x)) h)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((\x'. (x' = x)) h) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND ((\x'. (x' = x)) h)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((\x'. (x' = x)) h) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND ((\x'. (x' = x)) h)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= * / c= b3 f0 f1 b0 c==> c==> b0 c= cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cfind / c= b3 f0 f2 b2 c= cCOND * / c= b3 f0 f1 cNUMERAL c_0 cSUC cfind / c= b3 f0 f2 cCOND b0 b1 b2 * / ! ! c==> c= * / c= b3 f0 f1 b0 c==> c==> b0 c= cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cfind / c= b3 f0 f2 b2 c= cCOND * / c= b3 f0 f1 cNUMERAL c_0 cSUC cfind / c= b3 f0 f2 cCOND b0 b1 b2 f3 * / ! ! c==> c= * / c= b3 f0 f1 b0 c==> c==> b0 c= cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cfind / c= b3 f0 f2 b2 c= cCOND * / c= b3 f0 f1 cNUMERAL c_0 cSUC cfind / c= b3 f0 f2 cCOND b0 b1 b2 f3
- ((ssreflect_eq eq) (~ (x = h))) |- (((ssreflect_eq eq) (~ (x = h))) = T)
T c==> cssreflect_eq f0 c~ c= f1 f2 c= cssreflect_eq f0 c~ c= f1 f2 cT
+ |- ((\v. (!P. (((ssreflect_eq v) P) = P))) v)
T * / ! c= cssreflect_eq b0 b1 b1 f0
- |- (((!p'. (!q'. ((((ssreflect_eq eq) (~ (x = h))) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t))) = q')) ==> ((((ssreflect_eq eq) (~ (x = h))) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t)))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((ssreflect_eq eq) (~ (x = h))) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t))) = q')) ==> ((((ssreflect_eq eq) (~ (x = h))) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((ssreflect_eq eq) (~ (x = h))) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t))) = q')) ==> ((((ssreflect_eq eq) (~ (x = h))) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cssreflect_eq f0 c~ c= f1 f2 b0 c==> c==> b0 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3 b1 c= c==> cssreflect_eq f0 c~ c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3 c==> b0 b1 * / ! c==> c= cssreflect_eq f0 c~ c= f1 f2 b0 c==> c==> b0 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3 b1 c= c==> cssreflect_eq f0 c~ c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3 c==> b0 b1 f4 * / ! c==> c= cssreflect_eq f0 c~ c= f1 f2 b0 c==> c==> b0 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3 b1 c= c==> cssreflect_eq f0 c~ c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3 c==> b0 b1 f4
+ |- (((ssreflect_eq eq) ((x = h) = x1)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND x1) (NUMERAL _0)) (SUC ((indexl x) t)))))
T c==> cssreflect_eq f0 c= c= f1 f2 f3 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cCOND f3 cNUMERAL c_0 cSUC cindexl f1 f4
+ |- (((((ssreflect_eq eq) ((x = h) = F)) = ((ssreflect_eq eq) (~ (x = h)))) ==> ((((ssreflect_eq eq) (~ (x = h))) ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t)))) = q')) ==> ((((ssreflect_eq eq) ((x = h) = F)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t))))) = (((ssreflect_eq eq) (~ (x = h))) ==> q')))) = ((((ssreflect_eq eq) (~ (x = h))) ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t)))) = q')) ==> ((((ssreflect_eq eq) ((x = h) = F)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t))))) = (((ssreflect_eq eq) (~ (x = h))) ==> q'))))
T c= c==> c= cssreflect_eq f0 c= c= f1 f2 cF cssreflect_eq f0 c~ c= f1 f2 c==> c==> cssreflect_eq f0 c~ c= f1 f2 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f3 f4 c= c==> cssreflect_eq f0 c= c= f1 f2 cF c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f3 c==> cssreflect_eq f0 c~ c= f1 f2 f4 c==> c==> cssreflect_eq f0 c~ c= f1 f2 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f3 f4 c= c==> cssreflect_eq f0 c= c= f1 f2 cF c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f3 c==> cssreflect_eq f0 c~ c= f1 f2 f4
+ |- (((!a. ((pred1 a) = (\x. (x = a)))) ==> ((\a. ((pred1 a) = (\x. (x = a)))) a)) = ((\a. ((pred1 a) = (\x. (x = a)))) a))
T c= c==> ! c= * part cpred1 b0 / c= b1 b0 * / c= * part cpred1 b0 / c= b1 b0 f0 * / c= * part cpred1 b0 / c= b1 b0 f0
+ |- ((\x. ((find (pred1 x)) = (indexl x))) x)
T * / c= * part cfind * part cpred1 b0 * part cindexl b0 f0
+ |- ((\x. (x = a)) = (pred1 a))
T c= / c= b0 f0 * part cpred1 f0
+ |- ((\x. ((indexl x) = (find (pred1 x)))) x)
T * / c= * part cindexl b0 * part cfind * part cpred1 b0 f0
+ |- ((((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))))
T c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b0 f1 f2 cCOND c= f1 f0 cNUMERAL c_0 cSUC cindexl f1 f2
+ |- (((ssreflect_eq eq) (x = h)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0)))
T c==> cssreflect_eq f0 c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0
+ |- (((ssreflect_eq eq) ((x = h) = T)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t)))))
T c==> cssreflect_eq f0 c= c= f1 f2 cT c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f3
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((\e'. (((h = x) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND g') t') e')))))) e')
T * / c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 f3 c==> c==> c~ f2 c= cSUC cfind / c= b1 f1 f4 b0 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b1 f1 f4 cCOND f2 f3 b0 f5
- |- (((x = h) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND g') t') e')))))
T c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 f3 c==> c==> c~ f2 c= cSUC cindexl f0 f4 f5 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f4 cCOND f2 f3 f5
- |- (((x = h) = x1) = ((\x1. ((x = h) = x1)) x1))
T c= c= c= f0 f1 f2 * / c= c= f0 f1 b0 f2
+ |- ((((ssreflect_eq eq) (~ (x = h))) ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t)))) = q')) ==> ((((ssreflect_eq eq) ((x = h) = F)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t))))) = (((ssreflect_eq eq) (~ (x = h))) ==> q')))
T c==> c==> cssreflect_eq f0 c~ c= f1 f2 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f3 f4 c= c==> cssreflect_eq f0 c= c= f1 f2 cF c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f3 c==> cssreflect_eq f0 c~ c= f1 f2 f4
+ |- (((((ssreflect_eq eq) ((x = h) = T)) = ((ssreflect_eq eq) (x = h))) ==> ((((ssreflect_eq eq) (x = h)) ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t)))) = q')) ==> ((((ssreflect_eq eq) ((x = h) = T)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t))))) = (((ssreflect_eq eq) (x = h)) ==> q')))) = ((((ssreflect_eq eq) (x = h)) ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t)))) = q')) ==> ((((ssreflect_eq eq) ((x = h) = T)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t))))) = (((ssreflect_eq eq) (x = h)) ==> q'))))
T c= c==> c= cssreflect_eq f0 c= c= f1 f2 cT cssreflect_eq f0 c= f1 f2 c==> c==> cssreflect_eq f0 c= f1 f2 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f3 f4 c= c==> cssreflect_eq f0 c= c= f1 f2 cT c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f3 c==> cssreflect_eq f0 c= f1 f2 f4 c==> c==> cssreflect_eq f0 c= f1 f2 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f3 f4 c= c==> cssreflect_eq f0 c= c= f1 f2 cT c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f3 c==> cssreflect_eq f0 c= f1 f2 f4
- |- ((((ssreflect_eq eq) (~ (x = h))) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t))) = q')) ==> ((((ssreflect_eq eq) (~ (x = h))) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t)))) = (p' ==> q'))))
T c==> c= cssreflect_eq f0 c~ c= f1 f2 f3 c==> c==> f3 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cSUC cindexl f1 f4 f5 c= c==> cssreflect_eq f0 c~ c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cSUC cindexl f1 f4 c==> f3 f5
+ |- (((x = h) = x1) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t)))))
T c==> c= c= f0 f1 f2 c= cCOND c= f1 f0 cNUMERAL c_0 cSUC cindexl f0 f3 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f3
+ |- (((ssreflect_eq eq) (x = h)) ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t)))) = ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0))))
T c==> cssreflect_eq f0 c= f1 f2 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f3 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0
+ (~ (h = x)) |- ((~ (h = x)) /\ ((SUC ((find (\x'. (x' = x))) t)) = (SUC ((find (\x'. (x' = x))) t))))
T c==> c~ c= f0 f1 c/\ c~ c= f0 f1 c= cSUC cfind / c= b0 f1 f2 cSUC cfind / c= b0 f1 f2
+ |- (((((COND ((pred1 x) h)) (NUMERAL _0)) (SUC ((find (pred1 x)) t))) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t)))) = (((find (pred1 x)) ((CONS h) t)) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t)))))
T c= c= cCOND cpred1 f0 f1 cNUMERAL c_0 cSUC cfind * part cpred1 f0 f2 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f2 c= cfind * part cpred1 f0 cCONS f1 f2 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f2
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))) |- ((\P. (((P T) /\ (P F)) ==> (!x. (P x)))) P)
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 * / c==> c/\ * b0 cT * b0 cF ! * b0 b1 f0
+ |- ((((indexl x) ((CONS h) t)) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t)))) = T)
T c= c= cindexl f0 cCONS f1 f2 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f2 cT
+ |- ((\q'. ((((ssreflect_eq eq) ((x = h) = F)) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t)))) = q')) ==> ((((ssreflect_eq eq) ((x = h) = F)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t))))) = (p' ==> q'))))) q')
T * / c==> c= cssreflect_eq f0 c= c= f1 f2 cF f3 c==> c==> f3 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f4 b0 c= c==> cssreflect_eq f0 c= c= f1 f2 cF c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f4 c==> f3 b0 f5
+ ((ssreflect_eq eq) (~ (x = h))) |- (~ (h = x))
T c==> cssreflect_eq f0 c~ c= f1 f2 c~ c= f2 f1
+ ((find (pred1 x)) = (indexl x)) |- ((indexl x) = (find (pred1 x)))
T c==> c= * part cfind * part cpred1 f0 * part cindexl f0 c= * part cindexl f0 * part cfind * part cpred1 f0
+ |- (((!q'. ((((ssreflect_eq eq) ((x = h) = T)) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t)))) = q')) ==> ((((ssreflect_eq eq) ((x = h) = T)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t))))) = (p' ==> q'))))) ==> ((\q'. ((((ssreflect_eq eq) ((x = h) = T)) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t)))) = q')) ==> ((((ssreflect_eq eq) ((x = h) = T)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t))))) = (p' ==> q'))))) q')) = ((\q'. ((((ssreflect_eq eq) ((x = h) = T)) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t)))) = q')) ==> ((((ssreflect_eq eq) ((x = h) = T)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cssreflect_eq f0 c= c= f1 f2 cT f3 c==> c==> f3 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f4 b0 c= c==> cssreflect_eq f0 c= c= f1 f2 cT c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f4 c==> f3 b0 * / c==> c= cssreflect_eq f0 c= c= f1 f2 cT f3 c==> c==> f3 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f4 b0 c= c==> cssreflect_eq f0 c= c= f1 f2 cT c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f4 c==> f3 b0 f5 * / c==> c= cssreflect_eq f0 c= c= f1 f2 cT f3 c==> c==> f3 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f4 b0 c= c==> cssreflect_eq f0 c= c= f1 f2 cT c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f4 c==> f3 b0 f5
+ ((ssreflect_eq eq) (x = h)) |- (((ssreflect_eq eq) (x = h)) /\ ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0)))
T c==> cssreflect_eq f0 c= f1 f2 c/\ cssreflect_eq f0 c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0
+ |- (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t)))) = ((((COND (h = x)) (NUMERAL _0)) (SUC ((find (pred1 x)) t))) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t)))))
T c= c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f2 cCOND c= f1 f0 cNUMERAL c_0 cSUC cindexl f1 f2 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind * part cpred1 f1 f2 cCOND c= f1 f0 cNUMERAL c_0 cSUC cindexl f1 f2
+ |- ((\P. (P = ((ssreflect_eq eq) P))) P)
T * / c= b0 cssreflect_eq f0 b0 f1
- |- (((~ (h = x)) ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (h = x)) (NUMERAL _0)) e')))
T c==> c==> c~ c= f0 f1 c= cSUC cindexl f1 f2 f3 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f2 cCOND c= f0 f1 cNUMERAL c_0 f3
+ |- ((\a. ((\x. (x = a)) = (pred1 a))) a)
T * / c= / c= b1 b0 * part cpred1 b0 f0
- |- (((ssreflect_eq eq) (~ (x = h))) ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t))) = ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t)))))
T c==> cssreflect_eq f0 c~ c= f1 f2 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3
+ |- (((((COND ((\x'. (x' = x)) h)) (NUMERAL _0)) (SUC ((find (pred1 x)) t))) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t)))) = ((((COND ((pred1 x) h)) (NUMERAL _0)) (SUC ((find (pred1 x)) t))) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t)))))
T c= c= cCOND * / c= b0 f0 f1 cNUMERAL c_0 cSUC cfind * part cpred1 f0 f2 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f2 c= cCOND cpred1 f0 f1 cNUMERAL c_0 cSUC cfind * part cpred1 f0 f2 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f2
+ |- (((ssreflect_eq eq) (~ (x = h))) ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t)))) = ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t)))))
T c==> cssreflect_eq f0 c~ c= f1 f2 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f3 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3
- |- (((ssreflect_eq eq) (x = h)) ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0)) = ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0))))
T c==> cssreflect_eq f0 c= f1 f2 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0
+ ((x = h) = x1) |- ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND x1) (NUMERAL _0)) (SUC ((indexl x) t))))
T c==> c= c= f0 f1 f2 c= cCOND c= f1 f0 cNUMERAL c_0 cSUC cindexl f0 f3 cCOND f2 cNUMERAL c_0 cSUC cindexl f0 f3
+ |- (((!P. (((ssreflect_eq v) P) = P)) ==> ((\P. (((ssreflect_eq v) P) = P)) P)) = ((\P. (((ssreflect_eq v) P) = P)) P))
T c= c==> ! c= cssreflect_eq f0 b0 b0 * / c= cssreflect_eq f0 b0 b0 f1 * / c= cssreflect_eq f0 b0 b0 f1
+ |- ((\P. (((ssreflect_eq v) P) = P)) P)
T * / c= cssreflect_eq f0 b0 b0 f1
+ |- ((((ssreflect_eq eq) (~ (x = h))) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t)))) = (((ssreflect_eq eq) ((x = h) = F)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t))))))
T c= c==> cssreflect_eq f0 c~ c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3 c==> cssreflect_eq f0 c= c= f1 f2 cF c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f3
- |- ((((~ (h = x)) ==> ((SUC ((find (\x'. (x' = x))) t)) = (SUC ((find (\x'. (x' = x))) t)))) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))))) = ((((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t)))))
T c= c==> c==> c~ c= f0 f1 c= cSUC cfind / c= b0 f1 f2 cSUC cfind / c= b0 f1 f2 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b0 f1 f2 cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b0 f1 f2 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b0 f1 f2 cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b0 f1 f2
- ((ssreflect_eq eq) (~ (x = h))) |- (((~ (x = h)) ==> ((x = h) = F)) = ((x = h) = F))
T c==> cssreflect_eq f0 c~ c= f1 f2 c= c==> c~ c= f1 f2 c= c= f1 f2 cF c= c= f1 f2 cF
+ |- ((\q'. ((((ssreflect_eq eq) ((x = h) = T)) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t)))) = q')) ==> ((((ssreflect_eq eq) ((x = h) = T)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t))))) = (p' ==> q'))))) q')
T * / c==> c= cssreflect_eq f0 c= c= f1 f2 cT f3 c==> c==> f3 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f4 b0 c= c==> cssreflect_eq f0 c= c= f1 f2 cT c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f4 c==> f3 b0 f5
- ((x = h) = x1) |- ((\x1. ((x = h) = x1)) x1)
T c==> c= c= f0 f1 f2 * / c= c= f0 f1 b0 f2
+ ((x = h) = x1) |- ((((ssreflect_eq eq) ((x = h) = x1)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND x1) (NUMERAL _0)) (SUC ((indexl x) t))))) = ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND x1) (NUMERAL _0)) (SUC ((indexl x) t)))))
T c==> c= c= f0 f1 f2 c= c==> cssreflect_eq f3 c= c= f0 f1 f2 c= cCOND c= f1 f0 cNUMERAL c_0 cSUC cindexl f0 f4 cCOND f2 cNUMERAL c_0 cSUC cindexl f0 f4 c= cCOND c= f1 f0 cNUMERAL c_0 cSUC cindexl f0 f4 cCOND f2 cNUMERAL c_0 cSUC cindexl f0 f4
- |- (((~ (x = h)) ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (x = h)) (NUMERAL _0)) e')))
T c==> c==> c~ c= f0 f1 c= cSUC cindexl f0 f2 f3 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f2 cCOND c= f0 f1 cNUMERAL c_0 f3
+ |- ((((ssreflect_eq eq) ((x = h) = F)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t))))) = ((((ssreflect_eq eq) ((x = h) = T)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t))))) /\ (((ssreflect_eq eq) ((x = h) = F)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t)))))))
T c= c==> cssreflect_eq f0 c= c= f1 f2 cF c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f3 c/\ c==> cssreflect_eq f0 c= c= f1 f2 cT c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f3 c==> cssreflect_eq f0 c= c= f1 f2 cF c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f3
- |- ((~ (h = x)) ==> ((SUC ((indexl x) t)) = (SUC ((indexl x) t))))
T c==> c~ c= f0 f1 c= cSUC cindexl f1 f2 cSUC cindexl f1 f2
- |- ((~ (x = h)) ==> ((SUC ((indexl x) t)) = (SUC ((indexl x) t))))
T c==> c~ c= f0 f1 c= cSUC cindexl f0 f2 cSUC cindexl f0 f2
+ |- ((\g'. (!t'. (!e'. ((((\x'. (x' = x)) h) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND ((\x'. (x' = x)) h)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= * / c= b3 f0 f1 b0 c==> c==> b0 c= cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cfind / c= b3 f0 f2 b2 c= cCOND * / c= b3 f0 f1 cNUMERAL c_0 cSUC cfind / c= b3 f0 f2 cCOND b0 b1 b2 f3
- |- (((x = h) = x1) ==> (?x1. ((x = h) = x1)))
T c==> c= c= f0 f1 f2 c? / c= c= f0 f1 b0
- ((ssreflect_eq eq) (~ (x = h))) |- ((x = h) = F)
T c==> cssreflect_eq f0 c~ c= f1 f2 c= c= f1 f2 cF
- |- ((((x = h) = (x = h)) ==> (((x = h) ==> ((NUMERAL _0) = t')) ==> (((~ (x = h)) ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (x = h)) t') e'))))) = (((x = h) ==> ((NUMERAL _0) = t')) ==> (((~ (x = h)) ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (x = h)) t') e')))))
T c= c==> c= c= f0 f1 c= f0 f1 c==> c==> c= f0 f1 c= cNUMERAL c_0 f2 c==> c==> c~ c= f0 f1 c= cSUC cindexl f0 f3 f4 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f3 cCOND c= f0 f1 f2 f4 c==> c==> c= f0 f1 c= cNUMERAL c_0 f2 c==> c==> c~ c= f0 f1 c= cSUC cindexl f0 f3 f4 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f3 cCOND c= f0 f1 f2 f4
+ |- ((?x1. ((x = h) = x1)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t)))))
T c==> c? / c= c= f0 f1 b0 c= cCOND c= f1 f0 cNUMERAL c_0 cSUC cindexl f0 f2 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f2
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))), ((P T) /\ (P F)) |- (!x. (P x))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c==> c/\ * f0 cT * f0 cF ! * f0 b0
+ |- ((((COND ((\x'. (x' = x)) h)) (NUMERAL _0)) (SUC ((find (pred1 x)) t))) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))))
T c= cCOND * / c= b0 f0 f1 cNUMERAL c_0 cSUC cfind * part cpred1 f0 f2 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f2
- |- ((\e'. (((h = x) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND g') t') e')))))) e')
T * / c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 f3 c==> c==> c~ f2 c= cSUC cindexl f1 f4 b0 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cCOND f2 f3 b0 f5
- ((ssreflect_eq eq) (~ (x = h))) |- (T = ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t))))
T c==> cssreflect_eq f0 c~ c= f1 f2 c= cT c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3
- |- (((x = h) ==> ((NUMERAL _0) = t')) ==> (((~ (x = h)) ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (x = h)) t') e'))))
T c==> c==> c= f0 f1 c= cNUMERAL c_0 f2 c==> c==> c~ c= f0 f1 c= cSUC cindexl f0 f3 f4 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f3 cCOND c= f0 f1 f2 f4
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
- (~ (x = h)) |- (((~ (h = x)) ==> ((h = x) = F)) = ((h = x) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
- |- ((((ssreflect_eq eq) (~ (x = h))) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t)))) = (((ssreflect_eq eq) (~ (x = h))) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t)))))
T c= c==> cssreflect_eq f0 c~ c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3 c==> cssreflect_eq f0 c~ c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3
+ ((ssreflect_eq eq) (~ (x = h))) |- ((h = x) = F)
T c==> cssreflect_eq f0 c~ c= f1 f2 c= c= f2 f1 cF
- (~ (x = h)) |- ((x = h) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
+ |- ((((COND (h = x)) (NUMERAL _0)) (SUC ((find (pred1 x)) t))) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))))
T c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind * part cpred1 f1 f2 cCOND c= f1 f0 cNUMERAL c_0 cSUC cindexl f1 f2
+ |- ((((ssreflect_eq eq) (x = h)) ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t)))) = q')) ==> ((((ssreflect_eq eq) ((x = h) = T)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t))))) = (((ssreflect_eq eq) (x = h)) ==> q')))
T c==> c==> cssreflect_eq f0 c= f1 f2 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f3 f4 c= c==> cssreflect_eq f0 c= c= f1 f2 cT c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f3 c==> cssreflect_eq f0 c= f1 f2 f4
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
+ ((ssreflect_eq eq) (x = h)) |- (((ssreflect_eq eq) (x = h)) /\ (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t)))) = ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0))))
T c==> cssreflect_eq f0 c= f1 f2 c/\ cssreflect_eq f0 c= f1 f2 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f3 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0
+ |- ((((ssreflect_eq eq) ((x = h) = T)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t))))) = (((ssreflect_eq eq) (x = h)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0))))
T c= c==> cssreflect_eq f0 c= c= f1 f2 cT c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f3 c==> cssreflect_eq f0 c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0
+ |- (((!x. ((indexl x) = (find (pred1 x)))) ==> ((\x. ((indexl x) = (find (pred1 x)))) x)) = ((\x. ((indexl x) = (find (pred1 x)))) x))
T c= c==> ! c= * part cindexl b0 * part cfind * part cpred1 b0 * / c= * part cindexl b0 * part cfind * part cpred1 b0 f0 * / c= * part cindexl b0 * part cfind * part cpred1 b0 f0
- |- (((((ssreflect_eq eq) (~ (x = h))) = ((ssreflect_eq eq) (~ (x = h)))) ==> ((((ssreflect_eq eq) (~ (x = h))) ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t))) = q')) ==> ((((ssreflect_eq eq) (~ (x = h))) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t)))) = (((ssreflect_eq eq) (~ (x = h))) ==> q')))) = ((((ssreflect_eq eq) (~ (x = h))) ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t))) = q')) ==> ((((ssreflect_eq eq) (~ (x = h))) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t)))) = (((ssreflect_eq eq) (~ (x = h))) ==> q'))))
T c= c==> c= cssreflect_eq f0 c~ c= f1 f2 cssreflect_eq f0 c~ c= f1 f2 c==> c==> cssreflect_eq f0 c~ c= f1 f2 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3 f4 c= c==> cssreflect_eq f0 c~ c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3 c==> cssreflect_eq f0 c~ c= f1 f2 f4 c==> c==> cssreflect_eq f0 c~ c= f1 f2 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3 f4 c= c==> cssreflect_eq f0 c~ c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3 c==> cssreflect_eq f0 c~ c= f1 f2 f4
- |- (((((ssreflect_eq eq) (~ (x = h))) ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t))) = ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t))))) ==> ((((ssreflect_eq eq) (~ (x = h))) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t)))) = (((ssreflect_eq eq) (~ (x = h))) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t)))))) = ((((ssreflect_eq eq) (~ (x = h))) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t)))) = (((ssreflect_eq eq) (~ (x = h))) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t))))))
T c= c==> c==> cssreflect_eq f0 c~ c= f1 f2 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3 c= c==> cssreflect_eq f0 c~ c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3 c==> cssreflect_eq f0 c~ c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3 c= c==> cssreflect_eq f0 c~ c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3 c==> cssreflect_eq f0 c~ c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3
+ |- ((((h = x) ==> ((NUMERAL _0) = (NUMERAL _0))) ==> (((~ (h = x)) ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND ((\x'. (x' = x)) h)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND (h = x)) (NUMERAL _0)) e')))) = (((~ (h = x)) ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND ((\x'. (x' = x)) h)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND (h = x)) (NUMERAL _0)) e'))))
T c= c==> c==> c= f0 f1 c= cNUMERAL c_0 cNUMERAL c_0 c==> c==> c~ c= f0 f1 c= cSUC cfind / c= b0 f1 f2 f3 c= cCOND * / c= b0 f1 f0 cNUMERAL c_0 cSUC cfind / c= b0 f1 f2 cCOND c= f0 f1 cNUMERAL c_0 f3 c==> c==> c~ c= f0 f1 c= cSUC cfind / c= b0 f1 f2 f3 c= cCOND * / c= b0 f1 f0 cNUMERAL c_0 cSUC cfind / c= b0 f1 f2 cCOND c= f0 f1 cNUMERAL c_0 f3
+ ((x = h) = x1) |- ((ssreflect_eq eq) ((x = h) = x1))
T c==> c= c= f0 f1 f2 cssreflect_eq f3 c= c= f0 f1 f2
+ ((ssreflect_eq eq) (~ (x = h))) |- (((ssreflect_eq eq) (~ (x = h))) /\ (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t)))) = ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t)))))
T c==> cssreflect_eq f0 c~ c= f1 f2 c/\ cssreflect_eq f0 c~ c= f1 f2 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f3 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3
- |- (((!t'. (!e'. (((h = x) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((h = x) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((h = x) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 b0 c==> c==> c~ f2 c= cSUC cindexl f1 f3 b1 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND f2 b0 b1 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 b0 c==> c==> c~ f2 c= cSUC cindexl f1 f3 b1 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND f2 b0 b1 f4 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 b0 c==> c==> c~ f2 c= cSUC cindexl f1 f3 b1 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND f2 b0 b1 f4
+ |- ((((find (pred1 x)) ((CONS h) t)) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t)))) = (((indexl x) ((CONS h) t)) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t)))))
T c= c= cfind * part cpred1 f0 cCONS f1 f2 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f2 c= cindexl f0 cCONS f1 f2 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f2
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
- |- (((!x. (((\x1. ((x = h) = x1)) x) ==> (?x1. ((x = h) = x1)))) ==> ((?x1. ((x = h) = x1)) ==> (?x1. ((x = h) = x1)))) = ((?x1. ((x = h) = x1)) ==> (?x1. ((x = h) = x1))))
T c= c==> ! c==> * / c= c= f0 f1 b1 b0 c? / c= c= f0 f1 b1 c==> c? / c= c= f0 f1 b0 c? / c= c= f0 f1 b0 c==> c? / c= c= f0 f1 b0 c? / c= c= f0 f1 b0
- |- ((\q'. ((((ssreflect_eq eq) (~ (x = h))) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t))) = q')) ==> ((((ssreflect_eq eq) (~ (x = h))) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t)))) = (p' ==> q'))))) q')
T * / c==> c= cssreflect_eq f0 c~ c= f1 f2 f3 c==> c==> f3 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cSUC cindexl f1 f4 b0 c= c==> cssreflect_eq f0 c~ c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cSUC cindexl f1 f4 c==> f3 b0 f5
- ((x = h) = x1) |- (((x = h) = x1) /\ (?x1. ((x = h) = x1)))
T c==> c= c= f0 f1 f2 c/\ c= c= f0 f1 f2 c? / c= c= f0 f1 b0
+ |- ((\P. (((P T) /\ (P F)) ==> (!x. (P x)))) P)
T * / c==> c/\ * b0 cT * b0 cF ! * b0 b1 f0
+ |- ((\s'. ((((find a) NIL) = (NUMERAL _0)) /\ (((find a) ((CONS x) s')) = (((COND (a x)) (NUMERAL _0)) (SUC ((find a) s')))))) s')
T * / c/\ c= cfind f0 cNIL cNUMERAL c_0 c= cfind f0 cCONS f1 b0 cCOND * f0 f1 cNUMERAL c_0 cSUC cfind f0 b0 f2
- |- ((\q'. ((((ssreflect_eq eq) (x = h)) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0)) = q')) ==> ((((ssreflect_eq eq) (x = h)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0))) = (p' ==> q'))))) q')
T * / c==> c= cssreflect_eq f0 c= f1 f2 f3 c==> c==> f3 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cNUMERAL c_0 b0 c= c==> cssreflect_eq f0 c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cNUMERAL c_0 c==> f3 b0 f5
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((((COND ((\x'. (x' = x)) h)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))))
T c= cCOND * / c= b0 f0 f1 cNUMERAL c_0 cSUC cfind / c= b0 f0 f2 cCOND c= f1 f0 cNUMERAL c_0 cSUC cfind / c= b0 f0 f2
- |- ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)
T * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- |- ((?x1. ((x = h) = x1)) ==> (?x1. ((x = h) = x1)))
T c==> c? / c= c= f0 f1 b0 c? / c= c= f0 f1 b0
+ (((ssreflect_eq eq) P) = P) |- (P = ((ssreflect_eq eq) P))
T c==> c= cssreflect_eq f0 f1 f1 c= f1 cssreflect_eq f0 f1
+ (x = h) |- (h = x)
T c==> c= f0 f1 c= f1 f0
+ |- (((find (pred1 x)) ((CONS h) t)) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))))
T c= cfind * part cpred1 f0 cCONS f1 f2 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f2
+ |- ((((\x'. (x' = x)) h) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND ((\x'. (x' = x)) h)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND g') t') e')))))
T c==> c= * / c= b0 f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 f3 c==> c==> c~ f2 c= cSUC cfind / c= b0 f0 f4 f5 c= cCOND * / c= b0 f0 f1 cNUMERAL c_0 cSUC cfind / c= b0 f0 f4 cCOND f2 f3 f5
+ |- ((t = T) = t)
T c= c= f0 cT f0
+ |- ((((ssreflect_eq eq) ((x = h) = T)) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t)))) = q')) ==> ((((ssreflect_eq eq) ((x = h) = T)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t))))) = (p' ==> q'))))
T c==> c= cssreflect_eq f0 c= c= f1 f2 cT f3 c==> c==> f3 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f4 f5 c= c==> cssreflect_eq f0 c= c= f1 f2 cT c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f4 c==> f3 f5
+ ((ssreflect_eq eq) (~ (x = h))) |- (~ (x = h))
T c==> cssreflect_eq f0 c~ c= f1 f2 c~ c= f1 f2
- ((ssreflect_eq eq) (x = h)) |- (((ssreflect_eq eq) (x = h)) = T)
T c==> cssreflect_eq f0 c= f1 f2 c= cssreflect_eq f0 c= f1 f2 cT
+ |- ((((ssreflect_eq eq) ((x = h) = F)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t))))) = (((ssreflect_eq eq) (~ (x = h))) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t)))))
T c= c==> cssreflect_eq f0 c= c= f1 f2 cF c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f3 c==> cssreflect_eq f0 c~ c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3
+ |- ((\p'. (!q'. ((((ssreflect_eq eq) ((x = h) = T)) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t)))) = q')) ==> ((((ssreflect_eq eq) ((x = h) = T)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t))))) = (p' ==> q')))))) p')
T * / ! c==> c= cssreflect_eq f0 c= c= f1 f2 cT b0 c==> c==> b0 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f3 b1 c= c==> cssreflect_eq f0 c= c= f1 f2 cT c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f3 c==> b0 b1 f4
+ |- ((((ssreflect_eq eq) (x = h)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0))) = (((ssreflect_eq eq) ((x = h) = T)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t))))))
T c= c==> cssreflect_eq f0 c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0 c==> cssreflect_eq f0 c= c= f1 f2 cT c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f3
+ |- (((((ssreflect_eq eq) (x = h)) ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t)))) = ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0)))) ==> ((((ssreflect_eq eq) ((x = h) = T)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t))))) = (((ssreflect_eq eq) (x = h)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0))))) = ((((ssreflect_eq eq) ((x = h) = T)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND T) (NUMERAL _0)) (SUC ((indexl x) t))))) = (((ssreflect_eq eq) (x = h)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0)))))
T c= c==> c==> cssreflect_eq f0 c= f1 f2 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f3 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0 c= c==> cssreflect_eq f0 c= c= f1 f2 cT c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f3 c==> cssreflect_eq f0 c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0 c= c==> cssreflect_eq f0 c= c= f1 f2 cT c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cT cNUMERAL c_0 cSUC cindexl f1 f3 c==> cssreflect_eq f0 c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0
+ |- (((ssreflect_eq eq) ((x = h) = F)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t)))))
T c==> cssreflect_eq f0 c= c= f1 f2 cF c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f3
+ ((ssreflect_eq eq) (~ (x = h))) |- (((~ (h = x)) ==> ((h = x) = F)) = ((h = x) = F))
T c==> cssreflect_eq f0 c~ c= f1 f2 c= c==> c~ c= f2 f1 c= c= f2 f1 cF c= c= f2 f1 cF
+ |- (((((COND (h = x)) (NUMERAL _0)) (SUC ((find (pred1 x)) t))) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t)))) = ((((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t)))))
T c= c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind * part cpred1 f1 f2 cCOND c= f1 f0 cNUMERAL c_0 cSUC cindexl f1 f2 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b0 f1 f2 cCOND c= f1 f0 cNUMERAL c_0 cSUC cindexl f1 f2
- |- (((!g'. (!t'. (!e'. (((h = x) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((h = x) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((h = x) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cindexl f1 f2 b2 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f2 cCOND b0 b1 b2 * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cindexl f1 f2 b2 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f2 cCOND b0 b1 b2 f3 * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cindexl f1 f2 b2 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f2 cCOND b0 b1 b2 f3
- |- ((((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))))
T c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b0 f1 f2 cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b0 f1 f2
+ |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
+ ((\x1. ((x = h) = x1)) x1) |- ((((x = h) = x1) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))))) = ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t)))))
T c==> * / c= c= f0 f1 b0 f2 c= c==> c= c= f0 f1 f2 c= cCOND c= f1 f0 cNUMERAL c_0 cSUC cindexl f0 f3 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f3 c= cCOND c= f1 f0 cNUMERAL c_0 cSUC cindexl f0 f3 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f3
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))) |- ((((P T) /\ (P F)) ==> (!x. (P x))) = T)
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c= c==> c/\ * f0 cT * f0 cF ! * f0 b0 cT
+ |- (((!p'. (!q'. ((((ssreflect_eq eq) ((x = h) = F)) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t)))) = q')) ==> ((((ssreflect_eq eq) ((x = h) = F)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((ssreflect_eq eq) ((x = h) = F)) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t)))) = q')) ==> ((((ssreflect_eq eq) ((x = h) = F)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((ssreflect_eq eq) ((x = h) = F)) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t)))) = q')) ==> ((((ssreflect_eq eq) ((x = h) = F)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND F) (NUMERAL _0)) (SUC ((indexl x) t))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cssreflect_eq f0 c= c= f1 f2 cF b0 c==> c==> b0 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f3 b1 c= c==> cssreflect_eq f0 c= c= f1 f2 cF c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f3 c==> b0 b1 * / ! c==> c= cssreflect_eq f0 c= c= f1 f2 cF b0 c==> c==> b0 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f3 b1 c= c==> cssreflect_eq f0 c= c= f1 f2 cF c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f3 c==> b0 b1 f4 * / ! c==> c= cssreflect_eq f0 c= c= f1 f2 cF b0 c==> c==> b0 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f3 b1 c= c==> cssreflect_eq f0 c= c= f1 f2 cF c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND cF cNUMERAL c_0 cSUC cindexl f1 f3 c==> b0 b1 f4
- |- (((!P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) ==> ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)) = ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P))
T c= c==> ! ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- |- ((((~ (h = x)) ==> ((SUC ((indexl x) t)) = (SUC ((indexl x) t)))) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))))) = ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t)))))
T c= c==> c==> c~ c= f0 f1 c= cSUC cindexl f1 f2 cSUC cindexl f1 f2 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f2 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f2 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f2 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f2
- |- (((!t'. (!e'. (((x = h) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((x = h) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((x = h) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 b0 c==> c==> c~ f2 c= cSUC cindexl f0 f3 b1 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f3 cCOND f2 b0 b1 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 b0 c==> c==> c~ f2 c= cSUC cindexl f0 f3 b1 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f3 cCOND f2 b0 b1 f4 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 b0 c==> c==> c~ f2 c= cSUC cindexl f0 f3 b1 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f3 cCOND f2 b0 b1 f4
- |- ((\t'. (!e'. (((h = x) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 b0 c==> c==> c~ f2 c= cSUC cindexl f1 f3 b1 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND f2 b0 b1 f4
- |- (((h = x) ==> ((NUMERAL _0) = t')) ==> (((~ (h = x)) ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND (h = x)) t') e'))))
T c==> c==> c= f0 f1 c= cNUMERAL c_0 f2 c==> c==> c~ c= f0 f1 c= cSUC cfind / c= b0 f1 f3 f4 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b0 f1 f3 cCOND c= f0 f1 f2 f4
+ |- (((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) ==> ((\P. (((P T) /\ (P F)) ==> (!x. (P x)))) P)) = ((\P. (((P T) /\ (P F)) ==> (!x. (P x)))) P))
T c= c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 * / c==> c/\ * b0 cT * b0 cF ! * b0 b1 f0 * / c==> c/\ * b0 cT * b0 cF ! * b0 b1 f0
- |- ((((h = x) ==> ((NUMERAL _0) = (NUMERAL _0))) ==> (((~ (h = x)) ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (h = x)) (NUMERAL _0)) e')))) = (((~ (h = x)) ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (h = x)) (NUMERAL _0)) e'))))
T c= c==> c==> c= f0 f1 c= cNUMERAL c_0 cNUMERAL c_0 c==> c==> c~ c= f0 f1 c= cSUC cindexl f1 f2 f3 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f2 cCOND c= f0 f1 cNUMERAL c_0 f3 c==> c==> c~ c= f0 f1 c= cSUC cindexl f1 f2 f3 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f2 cCOND c= f0 f1 cNUMERAL c_0 f3
+ ((\x1. ((x = h) = x1)) x1) |- ((x = h) = x1)
T c==> * / c= c= f0 f1 b0 f2 c= c= f0 f1 f2
+ |- ((((COND F) t1) t2) = t2)
T c= cCOND cF f0 f1 f1
- |- (((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) ==> (!P. (((P T) /\ (P F)) ==> (!x. (P x))))) = (!P. (((P T) /\ (P F)) ==> (!x. (P x)))))
T c= c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1
+ |- ((~ (h = x)) ==> ((SUC ((find (\x'. (x' = x))) t)) = (SUC ((find (\x'. (x' = x))) t))))
T c==> c~ c= f0 f1 c= cSUC cfind / c= b0 f1 f2 cSUC cfind / c= b0 f1 f2
- |- (((!g'. (!t'. (!e'. (((h = x) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((h = x) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((h = x) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cfind / c= b3 f1 f2 b2 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b3 f1 f2 cCOND b0 b1 b2 * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cfind / c= b3 f1 f2 b2 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b3 f1 f2 cCOND b0 b1 b2 f3 * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cfind / c= b3 f1 f2 b2 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b3 f1 f2 cCOND b0 b1 b2 f3
+ |- (((!s'. ((((find a) NIL) = (NUMERAL _0)) /\ (((find a) ((CONS x) s')) = (((COND (a x)) (NUMERAL _0)) (SUC ((find a) s')))))) ==> ((\s'. ((((find a) NIL) = (NUMERAL _0)) /\ (((find a) ((CONS x) s')) = (((COND (a x)) (NUMERAL _0)) (SUC ((find a) s')))))) s')) = ((\s'. ((((find a) NIL) = (NUMERAL _0)) /\ (((find a) ((CONS x) s')) = (((COND (a x)) (NUMERAL _0)) (SUC ((find a) s')))))) s'))
T c= c==> ! c/\ c= cfind f0 cNIL cNUMERAL c_0 c= cfind f0 cCONS f1 b0 cCOND * f0 f1 cNUMERAL c_0 cSUC cfind f0 b0 * / c/\ c= cfind f0 cNIL cNUMERAL c_0 c= cfind f0 cCONS f1 b0 cCOND * f0 f1 cNUMERAL c_0 cSUC cfind f0 b0 f2 * / c/\ c= cfind f0 cNIL cNUMERAL c_0 c= cfind f0 cCONS f1 b0 cCOND * f0 f1 cNUMERAL c_0 cSUC cfind f0 b0 f2
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))) |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) /\ (!P. (((P T) /\ (P F)) ==> (!x. (P x)))))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c/\ ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1
+ |- (((~ (h = x)) ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND ((\x'. (x' = x)) h)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND (h = x)) (NUMERAL _0)) e')))
T c==> c==> c~ c= f0 f1 c= cSUC cfind / c= b0 f1 f2 f3 c= cCOND * / c= b0 f1 f0 cNUMERAL c_0 cSUC cfind / c= b0 f1 f2 cCOND c= f0 f1 cNUMERAL c_0 f3
- |- ((((\x1. ((x = h) = x1)) x1) ==> (?x1. ((x = h) = x1))) = T)
T c= c==> * / c= c= f0 f1 b0 f2 c? / c= c= f0 f1 b0 cT
+ |- ((((\x1. ((x = h) = x1)) x1) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))))) = T)
T c= c==> * / c= c= f0 f1 b0 f2 c= cCOND c= f1 f0 cNUMERAL c_0 cSUC cindexl f0 f3 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f3 cT
+ |- (((!t'. (!e'. ((((\x'. (x' = x)) h) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND ((\x'. (x' = x)) h)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((\x'. (x' = x)) h) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND ((\x'. (x' = x)) h)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((\x'. (x' = x)) h) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND ((\x'. (x' = x)) h)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= * / c= b2 f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 b0 c==> c==> c~ f2 c= cSUC cfind / c= b2 f0 f3 b1 c= cCOND * / c= b2 f0 f1 cNUMERAL c_0 cSUC cfind / c= b2 f0 f3 cCOND f2 b0 b1 * / ! c==> c= * / c= b2 f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 b0 c==> c==> c~ f2 c= cSUC cfind / c= b2 f0 f3 b1 c= cCOND * / c= b2 f0 f1 cNUMERAL c_0 cSUC cfind / c= b2 f0 f3 cCOND f2 b0 b1 f4 * / ! c==> c= * / c= b2 f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 b0 c==> c==> c~ f2 c= cSUC cfind / c= b2 f0 f3 b1 c= cCOND * / c= b2 f0 f1 cNUMERAL c_0 cSUC cfind / c= b2 f0 f3 cCOND f2 b0 b1 f4
+ |- (?x1. ((x = h) = x1))
T c? / c= c= f0 f1 b0
- |- (((find a) NIL) = (NUMERAL _0))
T c= cfind f0 cNIL cNUMERAL c_0
+ |- ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))))
T c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f2 cCOND c= f1 f0 cNUMERAL c_0 cSUC cindexl f1 f2
+ ((ssreflect_eq eq) (~ (x = h))) |- (((ssreflect_eq eq) (~ (x = h))) /\ ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t))))
T c==> cssreflect_eq f0 c~ c= f1 f2 c/\ cssreflect_eq f0 c~ c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3
+ |- (((!x1. (((ssreflect_eq eq) ((x = h) = x1)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND x1) (NUMERAL _0)) (SUC ((indexl x) t)))))) ==> ((\x1. (((ssreflect_eq eq) ((x = h) = x1)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND x1) (NUMERAL _0)) (SUC ((indexl x) t)))))) x1)) = ((\x1. (((ssreflect_eq eq) ((x = h) = x1)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND x1) (NUMERAL _0)) (SUC ((indexl x) t)))))) x1))
T c= c==> ! c==> cssreflect_eq f0 c= c= f1 f2 b0 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND b0 cNUMERAL c_0 cSUC cindexl f1 f3 * / c==> cssreflect_eq f0 c= c= f1 f2 b0 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND b0 cNUMERAL c_0 cSUC cindexl f1 f3 f4 * / c==> cssreflect_eq f0 c= c= f1 f2 b0 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND b0 cNUMERAL c_0 cSUC cindexl f1 f3 f4
+ |- (((((\x'. (x' = x)) h) = (h = x)) ==> (((h = x) ==> ((NUMERAL _0) = t')) ==> (((~ (h = x)) ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND ((\x'. (x' = x)) h)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND (h = x)) t') e'))))) = (((h = x) ==> ((NUMERAL _0) = t')) ==> (((~ (h = x)) ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND ((\x'. (x' = x)) h)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND (h = x)) t') e')))))
T c= c==> c= * / c= b0 f0 f1 c= f1 f0 c==> c==> c= f1 f0 c= cNUMERAL c_0 f2 c==> c==> c~ c= f1 f0 c= cSUC cfind / c= b0 f0 f3 f4 c= cCOND * / c= b0 f0 f1 cNUMERAL c_0 cSUC cfind / c= b0 f0 f3 cCOND c= f1 f0 f2 f4 c==> c==> c= f1 f0 c= cNUMERAL c_0 f2 c==> c==> c~ c= f1 f0 c= cSUC cfind / c= b0 f0 f3 f4 c= cCOND * / c= b0 f0 f1 cNUMERAL c_0 cSUC cfind / c= b0 f0 f3 cCOND c= f1 f0 f2 f4
+ |- ((!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e')))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 cT
+ ((ssreflect_eq eq) (x = h)) |- (x = h)
T c==> cssreflect_eq f0 c= f1 f2 c= f1 f2
+ |- (((!e'. ((((\x'. (x' = x)) h) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND ((\x'. (x' = x)) h)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND g') t') e')))))) ==> ((\e'. ((((\x'. (x' = x)) h) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND ((\x'. (x' = x)) h)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND g') t') e')))))) e')) = ((\e'. ((((\x'. (x' = x)) h) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND ((\x'. (x' = x)) h)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= * / c= b1 f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 f3 c==> c==> c~ f2 c= cSUC cfind / c= b1 f0 f4 b0 c= cCOND * / c= b1 f0 f1 cNUMERAL c_0 cSUC cfind / c= b1 f0 f4 cCOND f2 f3 b0 * / c==> c= * / c= b1 f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 f3 c==> c==> c~ f2 c= cSUC cfind / c= b1 f0 f4 b0 c= cCOND * / c= b1 f0 f1 cNUMERAL c_0 cSUC cfind / c= b1 f0 f4 cCOND f2 f3 b0 f5 * / c==> c= * / c= b1 f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 f3 c==> c==> c~ f2 c= cSUC cfind / c= b1 f0 f4 b0 c= cCOND * / c= b1 f0 f1 cNUMERAL c_0 cSUC cfind / c= b1 f0 f4 cCOND f2 f3 b0 f5
- |- ((\g'. (!t'. (!e'. (((h = x) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cfind / c= b3 f1 f2 b2 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b3 f1 f2 cCOND b0 b1 b2 f3
+ |- ((\t'. (!e'. ((((\x'. (x' = x)) h) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND ((\x'. (x' = x)) h)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= * / c= b2 f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 b0 c==> c==> c~ f2 c= cSUC cfind / c= b2 f0 f3 b1 c= cCOND * / c= b2 f0 f1 cNUMERAL c_0 cSUC cfind / c= b2 f0 f3 cCOND f2 b0 b1 f4
+ (P = ((ssreflect_eq eq) P)) |- (((ssreflect_eq eq) P) = P)
T c==> c= f0 cssreflect_eq f1 f0 c= cssreflect_eq f1 f0 f0
- |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) ==> (!P. (((P T) /\ (P F)) ==> (!x. (P x)))))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1
- |- ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))))
T c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f2 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f2
- (~ (x = h)) |- (~ (h = x))
T c==> c~ c= f0 f1 c~ c= f1 f0
- |- ((((ssreflect_eq eq) (~ (x = h))) ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t))) = q')) ==> ((((ssreflect_eq eq) (~ (x = h))) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t)))) = (((ssreflect_eq eq) (~ (x = h))) ==> q')))
T c==> c==> cssreflect_eq f0 c~ c= f1 f2 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3 f4 c= c==> cssreflect_eq f0 c~ c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3 c==> cssreflect_eq f0 c~ c= f1 f2 f4
- |- (((!t'. (!e'. (((h = x) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((h = x) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((h = x) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 b0 c==> c==> c~ f2 c= cSUC cfind / c= b2 f1 f3 b1 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b2 f1 f3 cCOND f2 b0 b1 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 b0 c==> c==> c~ f2 c= cSUC cfind / c= b2 f1 f3 b1 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b2 f1 f3 cCOND f2 b0 b1 f4 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 b0 c==> c==> c~ f2 c= cSUC cfind / c= b2 f1 f3 b1 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b2 f1 f3 cCOND f2 b0 b1 f4
- |- (((h = x) ==> ((NUMERAL _0) = t')) ==> (((~ (h = x)) ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (h = x)) t') e'))))
T c==> c==> c= f0 f1 c= cNUMERAL c_0 f2 c==> c==> c~ c= f0 f1 c= cSUC cindexl f1 f3 f4 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND c= f0 f1 f2 f4
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))), ((P T) /\ (P F)) |- (((P T) /\ (P F)) /\ (!x. (P x)))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c==> c/\ * f0 cT * f0 cF c/\ c/\ * f0 cT * f0 cF ! * f0 b0
+ ((pred1 a) = (\x. (x = a))) |- ((\x. (x = a)) = (pred1 a))
T c==> c= * part cpred1 f0 / c= b0 f0 c= / c= b0 f0 * part cpred1 f0
- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))) |- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))
T c==> c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0 c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0
- |- ((\t'. (!e'. (((x = h) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 b0 c==> c==> c~ f2 c= cSUC cindexl f0 f3 b1 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f3 cCOND f2 b0 b1 f4
+ ((x = h) = x1) |- (((x = h) = x1) /\ ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t)))))
T c==> c= c= f0 f1 f2 c/\ c= c= f0 f1 f2 c= cCOND c= f1 f0 cNUMERAL c_0 cSUC cindexl f0 f3 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f3
- |- ((\e'. (((x = h) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND g') t') e')))))) e')
T * / c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 f3 c==> c==> c~ f2 c= cSUC cindexl f0 f4 b0 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f4 cCOND f2 f3 b0 f5
+ |- ((\x1. (((ssreflect_eq eq) ((x = h) = x1)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND x1) (NUMERAL _0)) (SUC ((indexl x) t)))))) x1)
T * / c==> cssreflect_eq f0 c= c= f1 f2 b0 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND b0 cNUMERAL c_0 cSUC cindexl f1 f3 f4
- |- (((((ssreflect_eq eq) (x = h)) ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0)) = ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0)))) ==> ((((ssreflect_eq eq) (x = h)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0))) = (((ssreflect_eq eq) (x = h)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0))))) = ((((ssreflect_eq eq) (x = h)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0))) = (((ssreflect_eq eq) (x = h)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0)))))
T c= c==> c==> cssreflect_eq f0 c= f1 f2 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0 c= c==> cssreflect_eq f0 c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0 c==> cssreflect_eq f0 c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0 c= c==> cssreflect_eq f0 c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0 c==> cssreflect_eq f0 c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0
- |- (((!e'. (((h = x) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND g') t') e')))))) ==> ((\e'. (((h = x) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND g') t') e')))))) e')) = ((\e'. (((h = x) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 f3 c==> c==> c~ f2 c= cSUC cfind / c= b1 f1 f4 b0 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b1 f1 f4 cCOND f2 f3 b0 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 f3 c==> c==> c~ f2 c= cSUC cfind / c= b1 f1 f4 b0 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b1 f1 f4 cCOND f2 f3 b0 f5 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 f3 c==> c==> c~ f2 c= cSUC cfind / c= b1 f1 f4 b0 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b1 f1 f4 cCOND f2 f3 b0 f5
- |- (((!e'. (((x = h) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND g') t') e')))))) ==> ((\e'. (((x = h) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND g') t') e')))))) e')) = ((\e'. (((x = h) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 f3 c==> c==> c~ f2 c= cSUC cindexl f0 f4 b0 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f4 cCOND f2 f3 b0 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 f3 c==> c==> c~ f2 c= cSUC cindexl f0 f4 b0 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f4 cCOND f2 f3 b0 f5 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 f3 c==> c==> c~ f2 c= cSUC cindexl f0 f4 b0 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f4 cCOND f2 f3 b0 f5
- (~ (x = h)) |- ((h = x) = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
- ((ssreflect_eq eq) (x = h)) |- (((ssreflect_eq eq) (x = h)) /\ (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0)) = ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0))))
T c==> cssreflect_eq f0 c= f1 f2 c/\ cssreflect_eq f0 c= f1 f2 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0
- |- (((~ (h = x)) ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND (h = x)) (NUMERAL _0)) e')))
T c==> c==> c~ c= f0 f1 c= cSUC cfind / c= b0 f1 f2 f3 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b0 f1 f2 cCOND c= f0 f1 cNUMERAL c_0 f3
- |- (((!g'. (!t'. (!e'. (((x = h) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((x = h) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((x = h) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cindexl f0 f2 b2 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f2 cCOND b0 b1 b2 * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cindexl f0 f2 b2 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f2 cCOND b0 b1 b2 f3 * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cindexl f0 f2 b2 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f2 cCOND b0 b1 b2 f3
- |- (((((ssreflect_eq eq) (x = h)) = ((ssreflect_eq eq) (x = h))) ==> ((((ssreflect_eq eq) (x = h)) ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0)) = q')) ==> ((((ssreflect_eq eq) (x = h)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0))) = (((ssreflect_eq eq) (x = h)) ==> q')))) = ((((ssreflect_eq eq) (x = h)) ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0)) = q')) ==> ((((ssreflect_eq eq) (x = h)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0))) = (((ssreflect_eq eq) (x = h)) ==> q'))))
T c= c==> c= cssreflect_eq f0 c= f1 f2 cssreflect_eq f0 c= f1 f2 c==> c==> cssreflect_eq f0 c= f1 f2 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0 f4 c= c==> cssreflect_eq f0 c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0 c==> cssreflect_eq f0 c= f1 f2 f4 c==> c==> cssreflect_eq f0 c= f1 f2 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0 f4 c= c==> cssreflect_eq f0 c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0 c==> cssreflect_eq f0 c= f1 f2 f4
- |- (((!q'. ((((ssreflect_eq eq) (x = h)) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0)) = q')) ==> ((((ssreflect_eq eq) (x = h)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0))) = (p' ==> q'))))) ==> ((\q'. ((((ssreflect_eq eq) (x = h)) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0)) = q')) ==> ((((ssreflect_eq eq) (x = h)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0))) = (p' ==> q'))))) q')) = ((\q'. ((((ssreflect_eq eq) (x = h)) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0)) = q')) ==> ((((ssreflect_eq eq) (x = h)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cssreflect_eq f0 c= f1 f2 f3 c==> c==> f3 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cNUMERAL c_0 b0 c= c==> cssreflect_eq f0 c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cNUMERAL c_0 c==> f3 b0 * / c==> c= cssreflect_eq f0 c= f1 f2 f3 c==> c==> f3 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cNUMERAL c_0 b0 c= c==> cssreflect_eq f0 c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cNUMERAL c_0 c==> f3 b0 f5 * / c==> c= cssreflect_eq f0 c= f1 f2 f3 c==> c==> f3 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cNUMERAL c_0 b0 c= c==> cssreflect_eq f0 c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cNUMERAL c_0 c==> f3 b0 f5
- |- ((\g'. (!t'. (!e'. (((x = h) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cindexl f0 f2 b2 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f2 cCOND b0 b1 b2 f3
- |- ((((x = h) ==> ((NUMERAL _0) = (NUMERAL _0))) ==> (((~ (x = h)) ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (x = h)) (NUMERAL _0)) e')))) = (((~ (x = h)) ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (x = h)) (NUMERAL _0)) e'))))
T c= c==> c==> c= f0 f1 c= cNUMERAL c_0 cNUMERAL c_0 c==> c==> c~ c= f0 f1 c= cSUC cindexl f0 f2 f3 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f2 cCOND c= f0 f1 cNUMERAL c_0 f3 c==> c==> c~ c= f0 f1 c= cSUC cindexl f0 f2 f3 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f2 cCOND c= f0 f1 cNUMERAL c_0 f3
- |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- |- ((\g'. (!t'. (!e'. (((h = x) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cindexl f1 f2 b2 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f2 cCOND b0 b1 b2 f3
- ((ssreflect_eq eq) (x = h)) |- (T = ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0)))
T c==> cssreflect_eq f0 c= f1 f2 c= cT c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))), ((P T) /\ (P F)) |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) /\ (!x. (P x)))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c==> c/\ * f0 cT * f0 cF c/\ ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! * f0 b0
- ((x = h) = x1) |- (x1 = (x = h))
T c==> c= c= f0 f1 f2 c= f2 c= f0 f1
- |- (((!q'. ((((ssreflect_eq eq) (~ (x = h))) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t))) = q')) ==> ((((ssreflect_eq eq) (~ (x = h))) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t)))) = (p' ==> q'))))) ==> ((\q'. ((((ssreflect_eq eq) (~ (x = h))) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t))) = q')) ==> ((((ssreflect_eq eq) (~ (x = h))) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t)))) = (p' ==> q'))))) q')) = ((\q'. ((((ssreflect_eq eq) (~ (x = h))) = p') ==> ((p' ==> (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t))) = q')) ==> ((((ssreflect_eq eq) (~ (x = h))) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cssreflect_eq f0 c~ c= f1 f2 f3 c==> c==> f3 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cSUC cindexl f1 f4 b0 c= c==> cssreflect_eq f0 c~ c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cSUC cindexl f1 f4 c==> f3 b0 * / c==> c= cssreflect_eq f0 c~ c= f1 f2 f3 c==> c==> f3 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cSUC cindexl f1 f4 b0 c= c==> cssreflect_eq f0 c~ c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cSUC cindexl f1 f4 c==> f3 b0 f5 * / c==> c= cssreflect_eq f0 c~ c= f1 f2 f3 c==> c==> f3 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cSUC cindexl f1 f4 b0 c= c==> cssreflect_eq f0 c~ c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cSUC cindexl f1 f4 c==> f3 b0 f5
- |- (((\x'. (f x')) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((\t'. (!e'. (((h = x) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 b0 c==> c==> c~ f2 c= cSUC cfind / c= b2 f1 f3 b1 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b2 f1 f3 cCOND f2 b0 b1 f4
- |- (((h = x) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND g') t') e')))))
T c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 f3 c==> c==> c~ f2 c= cSUC cindexl f1 f4 f5 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cCOND f2 f3 f5
- ((\x1. ((x = h) = x1)) x1) |- (((\x1. ((x = h) = x1)) x1) /\ (?x1. ((x = h) = x1)))
T c==> * / c= c= f0 f1 b0 f2 c/\ * / c= c= f0 f1 b0 f2 c? / c= c= f0 f1 b0
- |- ((((h = x) = (h = x)) ==> (((h = x) ==> ((NUMERAL _0) = t')) ==> (((~ (h = x)) ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND (h = x)) t') e'))))) = (((h = x) ==> ((NUMERAL _0) = t')) ==> (((~ (h = x)) ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND (h = x)) t') e')))))
T c= c==> c= c= f0 f1 c= f0 f1 c==> c==> c= f0 f1 c= cNUMERAL c_0 f2 c==> c==> c~ c= f0 f1 c= cSUC cfind / c= b0 f1 f3 f4 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b0 f1 f3 cCOND c= f0 f1 f2 f4 c==> c==> c= f0 f1 c= cNUMERAL c_0 f2 c==> c==> c~ c= f0 f1 c= cSUC cfind / c= b0 f1 f3 f4 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b0 f1 f3 cCOND c= f0 f1 f2 f4
- ((\x1. ((x = h) = x1)) x1) |- ((((x = h) = x1) ==> (?x1. ((x = h) = x1))) = (?x1. ((x = h) = x1)))
T c==> * / c= c= f0 f1 b0 f2 c= c==> c= c= f0 f1 f2 c? / c= c= f0 f1 b0 c? / c= c= f0 f1 b0
- |- (!x1. (((\x1. ((x = h) = x1)) x1) ==> (?x1. ((x = h) = x1))))
T c==> * / c= c= f0 f1 b0 f2 c? / c= c= f0 f1 b0
- |- ((((h = x) ==> ((NUMERAL _0) = (NUMERAL _0))) ==> (((~ (h = x)) ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND (h = x)) (NUMERAL _0)) e')))) = (((~ (h = x)) ==> ((SUC ((find (\x'. (x' = x))) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))) = (((COND (h = x)) (NUMERAL _0)) e'))))
T c= c==> c==> c= f0 f1 c= cNUMERAL c_0 cNUMERAL c_0 c==> c==> c~ c= f0 f1 c= cSUC cfind / c= b0 f1 f2 f3 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b0 f1 f2 cCOND c= f0 f1 cNUMERAL c_0 f3 c==> c==> c~ c= f0 f1 c= cSUC cfind / c= b0 f1 f2 f3 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cfind / c= b0 f1 f2 cCOND c= f0 f1 cNUMERAL c_0 f3
- |- ((((~ (x = h)) ==> ((SUC ((indexl x) t)) = (SUC ((indexl x) t)))) ==> ((((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))))) = ((((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (x = h)) (NUMERAL _0)) (SUC ((indexl x) t)))))
T c= c==> c==> c~ c= f0 f1 c= cSUC cindexl f0 f2 cSUC cindexl f0 f2 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f2 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f2 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f2 cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f0 f2
- (~ (h = x)) |- ((~ (h = x)) /\ ((SUC ((indexl x) t)) = (SUC ((indexl x) t))))
T c==> c~ c= f0 f1 c/\ c~ c= f0 f1 c= cSUC cindexl f1 f2 cSUC cindexl f1 f2
- |- (((!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) ==> ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)) = ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q))
T c= c==> ! c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- |- ((((h = x) = (h = x)) ==> (((h = x) ==> ((NUMERAL _0) = t')) ==> (((~ (h = x)) ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (h = x)) t') e'))))) = (((h = x) ==> ((NUMERAL _0) = t')) ==> (((~ (h = x)) ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND (h = x)) t') e')))))
T c= c==> c= c= f0 f1 c= f0 f1 c==> c==> c= f0 f1 c= cNUMERAL c_0 f2 c==> c==> c~ c= f0 f1 c= cSUC cindexl f1 f3 f4 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND c= f0 f1 f2 f4 c==> c==> c= f0 f1 c= cNUMERAL c_0 f2 c==> c==> c~ c= f0 f1 c= cSUC cindexl f1 f3 f4 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cCOND c= f0 f1 f2 f4
- ((ssreflect_eq eq) (~ (x = h))) |- (((ssreflect_eq eq) (~ (x = h))) /\ (((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t))) = ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (SUC ((indexl x) t)))))
T c==> cssreflect_eq f0 c~ c= f1 f2 c/\ cssreflect_eq f0 c~ c= f1 f2 c= c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cSUC cindexl f1 f3
- |- ((((ssreflect_eq eq) (x = h)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0))) = (((ssreflect_eq eq) (x = h)) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (NUMERAL _0))))
T c= c==> cssreflect_eq f0 c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0 c==> cssreflect_eq f0 c= f1 f2 c= cCOND c= f2 f1 cNUMERAL c_0 cSUC cindexl f1 f3 cNUMERAL c_0
- |- (((!e'. (((h = x) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND g') t') e')))))) ==> ((\e'. (((h = x) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND g') t') e')))))) e')) = ((\e'. (((h = x) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC ((indexl x) t)) = e')) ==> ((((COND (h = x)) (NUMERAL _0)) (SUC ((indexl x) t))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 f3 c==> c==> c~ f2 c= cSUC cindexl f1 f4 b0 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cCOND f2 f3 b0 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 f3 c==> c==> c~ f2 c= cSUC cindexl f1 f4 b0 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cCOND f2 f3 b0 f5 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= cNUMERAL c_0 f3 c==> c==> c~ f2 c= cSUC cindexl f1 f4 b0 c= cCOND c= f0 f1 cNUMERAL c_0 cSUC cindexl f1 f4 cCOND f2 f3 b0 f5
