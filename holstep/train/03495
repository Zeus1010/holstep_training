N Marchal_cells_3.DIHV_SYM_2
C |- (!x. (!y. (!z. (!t. (((((dihV x) y) z) t) = ((((dihV x) y) t) z))))))
T c= cdihV f0 f1 f2 f3 cdihV f0 f1 f3 f2
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D DOT_SYM
A |- (!x. (!y. (((dot x) y) = ((dot y) x))))
T c= cdot f0 f1 cdot f1 f0
D Sphere.arcV
A |- (!v. (!w. (!u. ((((arcV u) v) w) = (acs ((real_div ((dot ((vector_sub v) u)) ((vector_sub w) u))) ((real_mul (vector_norm ((vector_sub v) u))) (vector_norm ((vector_sub w) u)))))))))
T c= carcV f0 f1 f2 cacs creal_div cdot cvector_sub f1 f0 cvector_sub f2 f0 creal_mul cvector_norm cvector_sub f1 f0 cvector_norm cvector_sub f2 f0
D Sphere.dihV
A |- (!w1. (!w3. (!w2. (!w0. (((((dihV w0) w1) w2) w3) = ((LET (\va. (LET_END ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))))) ((vector_sub w1) w0))))) ((vector_sub w3) w0))))) ((vector_sub w2) w0)))))))
T c= cdihV f0 f1 f2 f3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b3 b4 cvector_sub c% cdot b2 b2 b1 c% cdot b1 b2 b2 cvector_sub c% cdot b2 b2 b0 c% cdot b0 b2 b2 cvector_sub f1 f0 cvector_sub f3 f0 cvector_sub f2 f0
+ (va' = vb), (vap = ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc))), (vap' = ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc))), (vb' = va), (vbp = ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc))), (vbp' = ((vector_sub ((% ((dot vc) vc)) vb')) ((% ((dot vb') vc)) vc))) |- ((vbp' = ((vector_sub ((% ((dot vc) vc)) vb')) ((% ((dot vb') vc)) vc))) /\ (((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap') vbp)))) ((vector_sub ((% ((dot vc) vc)) vb')) ((% ((dot vb') vc)) vc))) = (((arcV (vec (NUMERAL _0))) vap) vbp)))
T c==> c= f0 f1 c==> c= f2 cvector_sub c% cdot f3 f3 f4 c% cdot f4 f3 f3 c==> c= f5 cvector_sub c% cdot f3 f3 f0 c% cdot f0 f3 f3 c==> c= f6 f4 c==> c= f7 cvector_sub c% cdot f3 f3 f1 c% cdot f1 f3 f3 c==> c= f8 cvector_sub c% cdot f3 f3 f6 c% cdot f6 f3 f3 c/\ c= f8 cvector_sub c% cdot f3 f3 f6 c% cdot f6 f3 f3 c= cLET / cLET_END carcV cvec cNUMERAL c_0 f5 b0 cvector_sub c% cdot f3 f3 f6 c% cdot f6 f3 f3 carcV cvec cNUMERAL c_0 f2 f7
+ (va' = vb), (vap = ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc))), (vbp = ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc))) |- ((vb' = va) ==> (((LET (\vb. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) va) = (((arcV (vec (NUMERAL _0))) vap) vbp)))
T c==> c= f0 f1 c==> c= f2 cvector_sub c% cdot f3 f3 f4 c% cdot f4 f3 f3 c==> c= f5 cvector_sub c% cdot f3 f3 f1 c% cdot f1 f3 f3 c==> c= f6 f4 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b1 b2 cvector_sub c% cdot f3 f3 b0 c% cdot b0 f3 f3 cvector_sub c% cdot f3 f3 f0 c% cdot f0 f3 f3 f4 carcV cvec cNUMERAL c_0 f2 f5
+ |- ((vc = ((vector_sub y) x)) = ((\vc. (vc = ((vector_sub y) x))) vc))
T c= c= f0 cvector_sub f1 f2 * / c= b0 cvector_sub f1 f2 f0
+ (vbp' = ((vector_sub ((% ((dot vc) vc)) vb')) ((% ((dot vb') vc)) vc))) |- (((vector_sub ((% ((dot vc) vc)) vb')) ((% ((dot vb') vc)) vc)) = vbp')
T c==> c= f0 cvector_sub c% cdot f1 f1 f2 c% cdot f2 f1 f1 c= cvector_sub c% cdot f1 f1 f2 c% cdot f2 f1 f1 f0
+ |- (((!x. (((\vap. (vap = ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))) x) ==> (((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) va)))) vb) = ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))))) ==> ((?vap. (vap = ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))) ==> (((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) va)))) vb) = ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))))) = ((?vap. (vap = ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))) ==> (((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) va)))) vb) = ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc))))))
T c= c==> ! c==> * / c= b1 cvector_sub c% cdot f0 f0 f1 c% cdot f1 f0 f0 b0 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b3 b4 cvector_sub c% cdot f0 f0 b2 c% cdot b2 f0 f0 cvector_sub c% cdot f0 f0 b1 c% cdot b1 f0 f0 f1 f2 cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b1 b2 cvector_sub c% cdot f0 f0 f2 c% cdot f2 f0 f0 cvector_sub c% cdot f0 f0 f1 c% cdot f1 f0 f0 c==> c? / c= b0 cvector_sub c% cdot f0 f0 f1 c% cdot f1 f0 f0 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b2 b3 cvector_sub c% cdot f0 f0 b1 c% cdot b1 f0 f0 cvector_sub c% cdot f0 f0 b0 c% cdot b0 f0 f0 f1 f2 cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b0 b1 cvector_sub c% cdot f0 f0 f2 c% cdot f2 f0 f0 cvector_sub c% cdot f0 f0 f1 c% cdot f1 f0 f0 c==> c? / c= b0 cvector_sub c% cdot f0 f0 f1 c% cdot f1 f0 f0 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b2 b3 cvector_sub c% cdot f0 f0 b1 c% cdot b1 f0 f0 cvector_sub c% cdot f0 f0 b0 c% cdot b0 f0 f0 f1 f2 cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b0 b1 cvector_sub c% cdot f0 f0 f2 c% cdot f2 f0 f0 cvector_sub c% cdot f0 f0 f1 c% cdot f1 f0 f0
+ (vap = ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc))) |- (((\vbp. (vbp = ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))) vbp) ==> (((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) va)))) vb) = ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))
T c==> c= f0 cvector_sub c% cdot f1 f1 f2 c% cdot f2 f1 f1 c==> * / c= b0 cvector_sub c% cdot f1 f1 f3 c% cdot f3 f1 f1 f4 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b2 b3 cvector_sub c% cdot f1 f1 b1 c% cdot b1 f1 f1 cvector_sub c% cdot f1 f1 b0 c% cdot b0 f1 f1 f2 f3 cLET / cLET_END carcV cvec cNUMERAL c_0 f0 b0 cvector_sub c% cdot f1 f1 f3 c% cdot f3 f1 f1
+ (vb' = va) |- ((((LET (\vb. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) vb') = (((arcV (vec (NUMERAL _0))) vap) vbp)) = (((LET (\vb. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) va) = (((arcV (vec (NUMERAL _0))) vap) vbp)))
T c==> c= f0 f1 c= c= cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b1 b2 cvector_sub c% cdot f2 f2 b0 c% cdot b0 f2 f2 cvector_sub c% cdot f2 f2 f3 c% cdot f3 f2 f2 f0 carcV cvec cNUMERAL c_0 f4 f5 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b1 b2 cvector_sub c% cdot f2 f2 b0 c% cdot b0 f2 f2 cvector_sub c% cdot f2 f2 f3 c% cdot f3 f2 f2 f1 carcV cvec cNUMERAL c_0 f4 f5
+ |- (((?vb. (vb = ((vector_sub z) x))) ==> (((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) ((vector_sub y) x))))) va)))) ((vector_sub z) x)) = ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))))) ((vector_sub y) x))))) ((vector_sub z) x)))) = (((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) ((vector_sub y) x))))) va)))) ((vector_sub z) x)) = ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))))) ((vector_sub y) x))))) ((vector_sub z) x))))
T c= c==> c? / c= b0 cvector_sub f0 f1 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b3 b4 cvector_sub c% cdot b2 b2 b1 c% cdot b1 b2 b2 cvector_sub c% cdot b2 b2 b0 c% cdot b0 b2 b2 cvector_sub f2 f1 f3 cvector_sub f0 f1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b2 b3 cvector_sub c% cdot b1 b1 b0 c% cdot b0 b1 b1 cvector_sub c% cdot b1 b1 f3 c% cdot f3 b1 b1 cvector_sub f2 f1 cvector_sub f0 f1 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b3 b4 cvector_sub c% cdot b2 b2 b1 c% cdot b1 b2 b2 cvector_sub c% cdot b2 b2 b0 c% cdot b0 b2 b2 cvector_sub f2 f1 f3 cvector_sub f0 f1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b2 b3 cvector_sub c% cdot b1 b1 b0 c% cdot b0 b1 b1 cvector_sub c% cdot b1 b1 f3 c% cdot f3 b1 b1 cvector_sub f2 f1 cvector_sub f0 f1
+ (vc = ((vector_sub y) x)) |- ((vc = ((vector_sub y) x)) /\ (?vc. (vc = ((vector_sub y) x))))
T c==> c= f0 cvector_sub f1 f2 c/\ c= f0 cvector_sub f1 f2 c? / c= b0 cvector_sub f1 f2
+ ((\vbp'. (vbp' = ((vector_sub ((% ((dot vc) vc)) vb')) ((% ((dot vb') vc)) vc)))) vbp') |- (((vbp' = ((vector_sub ((% ((dot vc) vc)) vb')) ((% ((dot vb') vc)) vc))) ==> (((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap') vbp)))) ((vector_sub ((% ((dot vc) vc)) vb')) ((% ((dot vb') vc)) vc))) = (((arcV (vec (NUMERAL _0))) vap) vbp))) = (((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap') vbp)))) ((vector_sub ((% ((dot vc) vc)) vb')) ((% ((dot vb') vc)) vc))) = (((arcV (vec (NUMERAL _0))) vap) vbp)))
T c==> * / c= b0 cvector_sub c% cdot f0 f0 f1 c% cdot f1 f0 f0 f2 c= c==> c= f2 cvector_sub c% cdot f0 f0 f1 c% cdot f1 f0 f0 c= cLET / cLET_END carcV cvec cNUMERAL c_0 f3 b0 cvector_sub c% cdot f0 f0 f1 c% cdot f1 f0 f0 carcV cvec cNUMERAL c_0 f4 f5 c= cLET / cLET_END carcV cvec cNUMERAL c_0 f3 b0 cvector_sub c% cdot f0 f0 f1 c% cdot f1 f0 f0 carcV cvec cNUMERAL c_0 f4 f5
+ (va' = vb), (vap = ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc))), (vbp = ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc))) |- (!vb'. (((\vb'. (vb' = va)) vb') ==> (((LET (\vb. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) va) = (((arcV (vec (NUMERAL _0))) vap) vbp))))
T c==> c= f0 f1 c==> c= f2 cvector_sub c% cdot f3 f3 f4 c% cdot f4 f3 f3 c==> c= f5 cvector_sub c% cdot f3 f3 f1 c% cdot f1 f3 f3 ! c==> * / c= b1 f4 b0 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b2 b3 cvector_sub c% cdot f3 f3 b1 c% cdot b1 f3 f3 cvector_sub c% cdot f3 f3 f0 c% cdot f0 f3 f3 f4 carcV cvec cNUMERAL c_0 f2 f5
+ |- (((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) va)))) vb) = ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc))))
T c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b2 b3 cvector_sub c% cdot f0 f0 b1 c% cdot b1 f0 f0 cvector_sub c% cdot f0 f0 b0 c% cdot b0 f0 f0 f1 f2 cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b0 b1 cvector_sub c% cdot f0 f0 f2 c% cdot f2 f0 f0 cvector_sub c% cdot f0 f0 f1 c% cdot f1 f0 f0
+ (vb = ((vector_sub z) x)) |- ((((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) ((vector_sub y) x))))) va)))) vb) = ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))))) ((vector_sub y) x))))) vb)) = (((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) ((vector_sub y) x))))) va)))) ((vector_sub z) x)) = ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))))) ((vector_sub y) x))))) ((vector_sub z) x))))
T c==> c= f0 cvector_sub f1 f2 c= c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b3 b4 cvector_sub c% cdot b2 b2 b1 c% cdot b1 b2 b2 cvector_sub c% cdot b2 b2 b0 c% cdot b0 b2 b2 cvector_sub f3 f2 f4 f0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b2 b3 cvector_sub c% cdot b1 b1 b0 c% cdot b0 b1 b1 cvector_sub c% cdot b1 b1 f4 c% cdot f4 b1 b1 cvector_sub f3 f2 f0 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b3 b4 cvector_sub c% cdot b2 b2 b1 c% cdot b1 b2 b2 cvector_sub c% cdot b2 b2 b0 c% cdot b0 b2 b2 cvector_sub f3 f2 f4 cvector_sub f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b2 b3 cvector_sub c% cdot b1 b1 b0 c% cdot b0 b1 b1 cvector_sub c% cdot b1 b1 f4 c% cdot f4 b1 b1 cvector_sub f3 f2 cvector_sub f1 f2
+ (va' = vb), (vap = ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc))), (vb' = va), (vbp = ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc))) |- ((vap' = ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc))) ==> (((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb')) ((% ((dot vb') vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc))) = (((arcV (vec (NUMERAL _0))) vap) vbp)))
T c==> c= f0 f1 c==> c= f2 cvector_sub c% cdot f3 f3 f4 c% cdot f4 f3 f3 c==> c= f5 f4 c==> c= f6 cvector_sub c% cdot f3 f3 f1 c% cdot f1 f3 f3 c==> c= f7 cvector_sub c% cdot f3 f3 f0 c% cdot f0 f3 f3 c= cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b0 b1 cvector_sub c% cdot f3 f3 f5 c% cdot f5 f3 f3 cvector_sub c% cdot f3 f3 f0 c% cdot f0 f3 f3 carcV cvec cNUMERAL c_0 f2 f6
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((real_neg ((real_sub ((real_mul a) b)) ((real_mul b) a))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_mul f0 f1 creal_mul f1 f0 creal_of_num cNUMERAL c_0
+ ((\vb. (vb = ((vector_sub z) x))) vb) |- (((vb = ((vector_sub z) x)) ==> (((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) ((vector_sub y) x))))) va)))) ((vector_sub z) x)) = ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))))) ((vector_sub y) x))))) ((vector_sub z) x)))) = (((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) ((vector_sub y) x))))) va)))) ((vector_sub z) x)) = ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))))) ((vector_sub y) x))))) ((vector_sub z) x))))
T c==> * / c= b0 cvector_sub f0 f1 f2 c= c==> c= f2 cvector_sub f0 f1 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b3 b4 cvector_sub c% cdot b2 b2 b1 c% cdot b1 b2 b2 cvector_sub c% cdot b2 b2 b0 c% cdot b0 b2 b2 cvector_sub f3 f1 f4 cvector_sub f0 f1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b2 b3 cvector_sub c% cdot b1 b1 b0 c% cdot b0 b1 b1 cvector_sub c% cdot b1 b1 f4 c% cdot f4 b1 b1 cvector_sub f3 f1 cvector_sub f0 f1 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b3 b4 cvector_sub c% cdot b2 b2 b1 c% cdot b1 b2 b2 cvector_sub c% cdot b2 b2 b0 c% cdot b0 b2 b2 cvector_sub f3 f1 f4 cvector_sub f0 f1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b2 b3 cvector_sub c% cdot b1 b1 b0 c% cdot b0 b1 b1 cvector_sub c% cdot b1 b1 f4 c% cdot f4 b1 b1 cvector_sub f3 f1 cvector_sub f0 f1
+ (vap = ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc))) |- ((vbp = ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc))) ==> (((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) va)))) vb) = ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))
T c==> c= f0 cvector_sub c% cdot f1 f1 f2 c% cdot f2 f1 f1 c==> c= f3 cvector_sub c% cdot f1 f1 f4 c% cdot f4 f1 f1 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b2 b3 cvector_sub c% cdot f1 f1 b1 c% cdot b1 f1 f1 cvector_sub c% cdot f1 f1 b0 c% cdot b0 f1 f1 f2 f4 cLET / cLET_END carcV cvec cNUMERAL c_0 f0 b0 cvector_sub c% cdot f1 f1 f4 c% cdot f4 f1 f1
+ |- ((\v. (!w. (!u. ((((arcV u) v) w) = (acs ((real_div ((dot ((vector_sub v) u)) ((vector_sub w) u))) ((real_mul (vector_norm ((vector_sub v) u))) (vector_norm ((vector_sub w) u))))))))) v)
T * / ! ! c= carcV b2 b0 b1 cacs creal_div cdot cvector_sub b0 b2 cvector_sub b1 b2 creal_mul cvector_norm cvector_sub b0 b2 cvector_norm cvector_sub b1 b2 f0
+ |- (((?vbp. (vbp = ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))) ==> (((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) va)))) vb) = ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc))))) = (((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) va)))) vb) = ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))
T c= c==> c? / c= b0 cvector_sub c% cdot f0 f0 f1 c% cdot f1 f0 f0 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b2 b3 cvector_sub c% cdot f0 f0 b1 c% cdot b1 f0 f0 cvector_sub c% cdot f0 f0 b0 c% cdot b0 f0 f0 f2 f1 cLET / cLET_END carcV cvec cNUMERAL c_0 f3 b0 cvector_sub c% cdot f0 f0 f1 c% cdot f1 f0 f0 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b2 b3 cvector_sub c% cdot f0 f0 b1 c% cdot b1 f0 f0 cvector_sub c% cdot f0 f0 b0 c% cdot b0 f0 f0 f2 f1 cLET / cLET_END carcV cvec cNUMERAL c_0 f3 b0 cvector_sub c% cdot f0 f0 f1 c% cdot f1 f0 f0
+ (vap = ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc))) |- (((!x. (((\vbp. (vbp = ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))) x) ==> (((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) va)))) vb) = ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ==> ((?vbp. (vbp = ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))) ==> (((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) va)))) vb) = ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) = ((?vbp. (vbp = ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))) ==> (((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) va)))) vb) = ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc))))))
T c==> c= f0 cvector_sub c% cdot f1 f1 f2 c% cdot f2 f1 f1 c= c==> ! c==> * / c= b1 cvector_sub c% cdot f1 f1 f3 c% cdot f3 f1 f1 b0 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b3 b4 cvector_sub c% cdot f1 f1 b2 c% cdot b2 f1 f1 cvector_sub c% cdot f1 f1 b1 c% cdot b1 f1 f1 f2 f3 cLET / cLET_END carcV cvec cNUMERAL c_0 f0 b1 cvector_sub c% cdot f1 f1 f3 c% cdot f3 f1 f1 c==> c? / c= b0 cvector_sub c% cdot f1 f1 f3 c% cdot f3 f1 f1 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b2 b3 cvector_sub c% cdot f1 f1 b1 c% cdot b1 f1 f1 cvector_sub c% cdot f1 f1 b0 c% cdot b0 f1 f1 f2 f3 cLET / cLET_END carcV cvec cNUMERAL c_0 f0 b0 cvector_sub c% cdot f1 f1 f3 c% cdot f3 f1 f1 c==> c? / c= b0 cvector_sub c% cdot f1 f1 f3 c% cdot f3 f1 f1 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b2 b3 cvector_sub c% cdot f1 f1 b1 c% cdot b1 f1 f1 cvector_sub c% cdot f1 f1 b0 c% cdot b0 f1 f1 f2 f3 cLET / cLET_END carcV cvec cNUMERAL c_0 f0 b0 cvector_sub c% cdot f1 f1 f3 c% cdot f3 f1 f1
+ (va = ((vector_sub t) x)) |- ((((LET (\va. (LET_END ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))))) ((vector_sub y) x))))) ((vector_sub t) x))))) ((vector_sub z) x)) = ((LET (\va. (LET_END ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))))) ((vector_sub y) x))))) ((vector_sub z) x))))) ((vector_sub t) x))) = (((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) ((vector_sub y) x))))) va)))) ((vector_sub z) x)) = ((LET (\va. (LET_END ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))))) ((vector_sub y) x))))) ((vector_sub z) x))))) va)))
T c==> c= f0 cvector_sub f1 f2 c= c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b3 b4 cvector_sub c% cdot b2 b2 b1 c% cdot b1 b2 b2 cvector_sub c% cdot b2 b2 b0 c% cdot b0 b2 b2 cvector_sub f3 f2 cvector_sub f1 f2 cvector_sub f4 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b3 b4 cvector_sub c% cdot b2 b2 b1 c% cdot b1 b2 b2 cvector_sub c% cdot b2 b2 b0 c% cdot b0 b2 b2 cvector_sub f3 f2 cvector_sub f4 f2 cvector_sub f1 f2 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b3 b4 cvector_sub c% cdot b2 b2 b1 c% cdot b1 b2 b2 cvector_sub c% cdot b2 b2 b0 c% cdot b0 b2 b2 cvector_sub f3 f2 f0 cvector_sub f4 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b3 b4 cvector_sub c% cdot b2 b2 b1 c% cdot b1 b2 b2 cvector_sub c% cdot b2 b2 b0 c% cdot b0 b2 b2 cvector_sub f3 f2 cvector_sub f4 f2 f0
+ ((\vap. (vap = ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))) vap) |- (((vap = ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc))) ==> (((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) va)))) vb) = ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc))))) = (((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) va)))) vb) = ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))))
T c==> * / c= b0 cvector_sub c% cdot f0 f0 f1 c% cdot f1 f0 f0 f2 c= c==> c= f2 cvector_sub c% cdot f0 f0 f1 c% cdot f1 f0 f0 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b2 b3 cvector_sub c% cdot f0 f0 b1 c% cdot b1 f0 f0 cvector_sub c% cdot f0 f0 b0 c% cdot b0 f0 f0 f1 f3 cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b0 b1 cvector_sub c% cdot f0 f0 f3 c% cdot f3 f0 f0 cvector_sub c% cdot f0 f0 f1 c% cdot f1 f0 f0 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b2 b3 cvector_sub c% cdot f0 f0 b1 c% cdot b1 f0 f0 cvector_sub c% cdot f0 f0 b0 c% cdot b0 f0 f0 f1 f3 cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b0 b1 cvector_sub c% cdot f0 f0 f3 c% cdot f3 f0 f0 cvector_sub c% cdot f0 f0 f1 c% cdot f1 f0 f0
+ |- ((!t. (((LET (\va. (LET_END ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))))) ((vector_sub y) x))))) ((vector_sub t) x))))) ((vector_sub z) x)) = ((LET (\va. (LET_END ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))))) ((vector_sub y) x))))) ((vector_sub z) x))))) ((vector_sub t) x)))) = T)
T c= ! c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b4 b5 cvector_sub c% cdot b3 b3 b2 c% cdot b2 b3 b3 cvector_sub c% cdot b3 b3 b1 c% cdot b1 b3 b3 cvector_sub f0 f1 cvector_sub b0 f1 cvector_sub f2 f1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b4 b5 cvector_sub c% cdot b3 b3 b2 c% cdot b2 b3 b3 cvector_sub c% cdot b3 b3 b1 c% cdot b1 b3 b3 cvector_sub f0 f1 cvector_sub f2 f1 cvector_sub b0 f1 cT
+ (vb' = va) |- ((((LET (\vb. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) va) = (((arcV (vec (NUMERAL _0))) vap) vbp)) = (((LET (\vb. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) vb') = (((arcV (vec (NUMERAL _0))) vap) vbp)))
T c==> c= f0 f1 c= c= cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b1 b2 cvector_sub c% cdot f2 f2 b0 c% cdot b0 f2 f2 cvector_sub c% cdot f2 f2 f3 c% cdot f3 f2 f2 f1 carcV cvec cNUMERAL c_0 f4 f5 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b1 b2 cvector_sub c% cdot f2 f2 b0 c% cdot b0 f2 f2 cvector_sub c% cdot f2 f2 f3 c% cdot f3 f2 f2 f0 carcV cvec cNUMERAL c_0 f4 f5
+ (va' = vb), (vap = ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc))), (vb' = va), (vbp = ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc))) |- (((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb')) ((% ((dot vb') vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc))) = (((arcV (vec (NUMERAL _0))) vap) vbp))
T c==> c= f0 f1 c==> c= f2 cvector_sub c% cdot f3 f3 f4 c% cdot f4 f3 f3 c==> c= f5 f4 c==> c= f6 cvector_sub c% cdot f3 f3 f1 c% cdot f1 f3 f3 c= cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b0 b1 cvector_sub c% cdot f3 f3 f5 c% cdot f5 f3 f3 cvector_sub c% cdot f3 f3 f0 c% cdot f0 f3 f3 carcV cvec cNUMERAL c_0 f2 f6
- (vbp' = ((vector_sub ((% ((dot vc) vc)) vb')) ((% ((dot vb') vc)) vc))) |- ((((vector_sub z) x) = va') = (((vector_sub z) x) = va'))
T c==> c= f0 cvector_sub c% cdot f1 f1 f2 c% cdot f2 f1 f1 c= c= cvector_sub f3 f4 f5 c= cvector_sub f3 f4 f5
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (!vc. (((\vc. (vc = ((vector_sub y) x))) vc) ==> (((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) ((vector_sub y) x))))) va)))) vb) = ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))))) ((vector_sub y) x)))))
T c==> * / c= b0 cvector_sub f0 f1 f2 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b3 b4 cvector_sub c% cdot b2 b2 b1 c% cdot b1 b2 b2 cvector_sub c% cdot b2 b2 b0 c% cdot b0 b2 b2 cvector_sub f0 f1 f3 f4 cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b1 b2 cvector_sub c% cdot b0 b0 f4 c% cdot f4 b0 b0 cvector_sub c% cdot b0 b0 f3 c% cdot f3 b0 b0 cvector_sub f0 f1
- |- (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
+ |- ((vap = ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc))) ==> (((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) va)))) vb) = ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))))
T c==> c= f0 cvector_sub c% cdot f1 f1 f2 c% cdot f2 f1 f1 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b2 b3 cvector_sub c% cdot f1 f1 b1 c% cdot b1 f1 f1 cvector_sub c% cdot f1 f1 b0 c% cdot b0 f1 f1 f2 f3 cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b0 b1 cvector_sub c% cdot f1 f1 f3 c% cdot f3 f1 f1 cvector_sub c% cdot f1 f1 f2 c% cdot f2 f1 f1
- |- ((!t. t) = t)
T c= ! f0 f0
- (vb' = va) |- ((((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)) = vbp) = (((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)) = vbp))
T c==> c= f0 f1 c= c= cvector_sub c% cdot f2 f2 f3 c% cdot f3 f2 f2 f4 c= cvector_sub c% cdot f2 f2 f3 c% cdot f3 f2 f2 f4
+ (vc = ((vector_sub y) x)) |- ((\vc. (vc = ((vector_sub y) x))) vc)
T c==> c= f0 cvector_sub f1 f2 * / c= b0 cvector_sub f1 f2 f0
+ (vb = ((vector_sub z) x)) |- ((((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) ((vector_sub y) x))))) va)))) ((vector_sub z) x)) = ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))))) ((vector_sub y) x))))) ((vector_sub z) x))) = (((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) ((vector_sub y) x))))) va)))) vb) = ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))))) ((vector_sub y) x))))) vb)))
T c==> c= f0 cvector_sub f1 f2 c= c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b3 b4 cvector_sub c% cdot b2 b2 b1 c% cdot b1 b2 b2 cvector_sub c% cdot b2 b2 b0 c% cdot b0 b2 b2 cvector_sub f3 f2 f4 cvector_sub f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b2 b3 cvector_sub c% cdot b1 b1 b0 c% cdot b0 b1 b1 cvector_sub c% cdot b1 b1 f4 c% cdot f4 b1 b1 cvector_sub f3 f2 cvector_sub f1 f2 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b3 b4 cvector_sub c% cdot b2 b2 b1 c% cdot b1 b2 b2 cvector_sub c% cdot b2 b2 b0 c% cdot b0 b2 b2 cvector_sub f3 f2 f4 f0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b2 b3 cvector_sub c% cdot b1 b1 b0 c% cdot b0 b1 b1 cvector_sub c% cdot b1 b1 f4 c% cdot f4 b1 b1 cvector_sub f3 f2 f0
+ (va' = vb), (vbp = ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc))) |- (((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)) = vbp)
T c==> c= f0 f1 c==> c= f2 cvector_sub c% cdot f3 f3 f1 c% cdot f1 f3 f3 c= cvector_sub c% cdot f3 f3 f0 c% cdot f0 f3 f3 f2
+ (vap = ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc))) |- ((((\vbp. (vbp = ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))) vbp) ==> (((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) va)))) vb) = ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc))))) = T)
T c==> c= f0 cvector_sub c% cdot f1 f1 f2 c% cdot f2 f1 f1 c= c==> * / c= b0 cvector_sub c% cdot f1 f1 f3 c% cdot f3 f1 f1 f4 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b2 b3 cvector_sub c% cdot f1 f1 b1 c% cdot b1 f1 f1 cvector_sub c% cdot f1 f1 b0 c% cdot b0 f1 f1 f2 f3 cLET / cLET_END carcV cvec cNUMERAL c_0 f0 b0 cvector_sub c% cdot f1 f1 f3 c% cdot f3 f1 f1 cT
+ |- (((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) ((vector_sub y) x))))) va)))) vb) = ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))))) ((vector_sub y) x)))
T c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b3 b4 cvector_sub c% cdot b2 b2 b1 c% cdot b1 b2 b2 cvector_sub c% cdot b2 b2 b0 c% cdot b0 b2 b2 cvector_sub f0 f1 f2 f3 cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b1 b2 cvector_sub c% cdot b0 b0 f3 c% cdot f3 b0 b0 cvector_sub c% cdot b0 b0 f2 c% cdot f2 b0 b0 cvector_sub f0 f1
+ (va' = vb), (vap = ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc))), (vb' = va), (vbp = ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc))), ((\vap'. (vap' = ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))) vap') |- (((\vap'. (vap' = ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))) vap') /\ (((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb')) ((% ((dot vb') vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc))) = (((arcV (vec (NUMERAL _0))) vap) vbp)))
T c==> c= f0 f1 c==> c= f2 cvector_sub c% cdot f3 f3 f4 c% cdot f4 f3 f3 c==> c= f5 f4 c==> c= f6 cvector_sub c% cdot f3 f3 f1 c% cdot f1 f3 f3 c==> * / c= b0 cvector_sub c% cdot f3 f3 f0 c% cdot f0 f3 f3 f7 c/\ * / c= b0 cvector_sub c% cdot f3 f3 f0 c% cdot f0 f3 f3 f7 c= cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b0 b1 cvector_sub c% cdot f3 f3 f5 c% cdot f5 f3 f3 cvector_sub c% cdot f3 f3 f0 c% cdot f0 f3 f3 carcV cvec cNUMERAL c_0 f2 f6
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (?vc. (vc = ((vector_sub y) x)))
T c? / c= b0 cvector_sub f0 f1
+ (va' = vb), (vap = ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc))), (vbp = ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc))) |- (((\vb'. (vb' = va)) vb') ==> (((LET (\vb. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) va) = (((arcV (vec (NUMERAL _0))) vap) vbp)))
T c==> c= f0 f1 c==> c= f2 cvector_sub c% cdot f3 f3 f4 c% cdot f4 f3 f3 c==> c= f5 cvector_sub c% cdot f3 f3 f1 c% cdot f1 f3 f3 c==> * / c= b0 f4 f6 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b1 b2 cvector_sub c% cdot f3 f3 b0 c% cdot b0 f3 f3 cvector_sub c% cdot f3 f3 f0 c% cdot f0 f3 f3 f4 carcV cvec cNUMERAL c_0 f2 f5
+ |- ((?va. (va = ((vector_sub t) x))) ==> (((LET (\va. (LET_END ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))))) ((vector_sub y) x))))) ((vector_sub t) x))))) ((vector_sub z) x)) = ((LET (\va. (LET_END ((LET (\vb. (LET_END ((LET (\vc. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))))) ((vector_sub y) x))))) ((vector_sub z) x))))) ((vector_sub t) x))))
T c==> c? / c= b0 cvector_sub f0 f1 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b3 b4 cvector_sub c% cdot b2 b2 b1 c% cdot b1 b2 b2 cvector_sub c% cdot b2 b2 b0 c% cdot b0 b2 b2 cvector_sub f2 f1 cvector_sub f0 f1 cvector_sub f3 f1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b3 b4 cvector_sub c% cdot b2 b2 b1 c% cdot b1 b2 b2 cvector_sub c% cdot b2 b2 b0 c% cdot b0 b2 b2 cvector_sub f2 f1 cvector_sub f3 f1 cvector_sub f0 f1
+ |- (((?vap. (vap = ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))) ==> (((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) va)))) vb) = ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc))))) = (((LET (\va'. (LET_END ((LET (\vb. (LET_END ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)))))) va)))) vb) = ((LET (\vap. (LET_END ((LET (\vbp. (LET_END (((arcV (vec (NUMERAL _0))) vap) vbp)))) ((vector_sub ((% ((dot vc) vc)) vb)) ((% ((dot vb) vc)) vc)))))) ((vector_sub ((% ((dot vc) vc)) va)) ((% ((dot va) vc)) vc)))))
T c= c==> c? / c= b0 cvector_sub c% cdot f0 f0 f1 c% cdot f1 f0 f0 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b2 b3 cvector_sub c% cdot f0 f0 b1 c% cdot b1 f0 f0 cvector_sub c% cdot f0 f0 b0 c% cdot b0 f0 f0 f1 f2 cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b0 b1 cvector_sub c% cdot f0 f0 f2 c% cdot f2 f0 f0 cvector_sub c% cdot f0 f0 f1 c% cdot f1 f0 f0 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b2 b3 cvector_sub c% cdot f0 f0 b1 c% cdot b1 f0 f0 cvector_sub c% cdot f0 f0 b0 c% cdot b0 f0 f0 f1 f2 cLET / cLET_END cLET / cLET_END carcV cvec cNUMERAL c_0 b0 b1 cvector_sub c% cdot f0 f0 f2 c% cdot f2 f0 f0 cvector_sub c% cdot f0 f0 f1 c% cdot f1 f0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (vbp' = ((vector_sub ((% ((dot vc) vc)) vb')) ((% ((dot vb') vc)) vc))) |- ((((vector_sub y) x) = vc) = (((vector_sub y) x) = vc))
T c==> c= f0 cvector_sub c% cdot f1 f1 f2 c% cdot f2 f1 f1 c= c= cvector_sub f3 f4 f1 c= cvector_sub f3 f4 f1
- (vbp' = ((vector_sub ((% ((dot vc) vc)) vb')) ((% ((dot vb') vc)) vc))) |- ((vb = va') = (vb = va'))
T c==> c= f0 cvector_sub c% cdot f1 f1 f2 c% cdot f2 f1 f1 c= c= f3 f4 c= f3 f4
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (vb' = va) |- ((vb = va') = (vb = va'))
T c==> c= f0 f1 c= c= f2 f3 c= f2 f3
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (vbp' = ((vector_sub ((% ((dot vc) vc)) vb')) ((% ((dot vb') vc)) vc))) |- ((((vector_sub t) x) = vb') = (((vector_sub t) x) = vb'))
T c==> c= f0 cvector_sub c% cdot f1 f1 f2 c% cdot f2 f1 f1 c= c= cvector_sub f3 f4 f2 c= cvector_sub f3 f4 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (vb' = va) |- ((((vector_sub y) x) = vc) = (((vector_sub y) x) = vc))
T c==> c= f0 f1 c= c= cvector_sub f2 f3 f4 c= cvector_sub f2 f3 f4
- (vbp' = ((vector_sub ((% ((dot vc) vc)) vb')) ((% ((dot vb') vc)) vc))) |- ((va = vb') = (va = vb'))
T c==> c= f0 cvector_sub c% cdot f1 f1 f2 c% cdot f2 f1 f1 c= c= f3 f2 c= f3 f2
- (vb' = va) |- ((((vector_sub t) x) = va) = (((vector_sub t) x) = vb'))
T c==> c= f0 f1 c= c= cvector_sub f2 f3 f1 c= cvector_sub f2 f3 f0
- (vc = ((vector_sub y) x)) |- ((((vector_sub z) x) = vb) = (((vector_sub z) x) = vb))
T c==> c= f0 cvector_sub f1 f2 c= c= cvector_sub f3 f2 f4 c= cvector_sub f3 f2 f4
- |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- (va' = vb), (vb = ((vector_sub z) x)) |- (((vector_sub z) x) = va')
T c==> c= f0 f1 c==> c= f1 cvector_sub f2 f3 c= cvector_sub f2 f3 f0
- (vbp' = ((vector_sub ((% ((dot vc) vc)) vb')) ((% ((dot vb') vc)) vc))) |- ((((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)) = vap') = (((vector_sub ((% ((dot vc) vc)) va')) ((% ((dot va') vc)) vc)) = vap'))
T c==> c= f0 cvector_sub c% cdot f1 f1 f2 c% cdot f2 f1 f1 c= c= cvector_sub c% cdot f1 f1 f3 c% cdot f3 f1 f1 f4 c= cvector_sub c% cdot f1 f1 f3 c% cdot f3 f1 f1 f4
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (va = ((vector_sub t) x)), (vb' = va) |- (((vector_sub t) x) = vb')
T c==> c= f0 cvector_sub f1 f2 c==> c= f3 f0 c= cvector_sub f1 f2 f3
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
