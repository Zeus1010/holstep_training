N Tame_list.hyp_m_min
C |- (!H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> (((((hyp'm H) NF) L) x) = (min_num (GSPEC (\GEN%PVAR%8609. (?m. (((SETSPEC GEN%PVAR%8609) (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))) m)))))))))))
T c==> cis_split_condition f0 f1 f2 f3 c= chyp'm f0 f1 f2 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cloop_map f2 cSUC cSUC b1 f3 cPOWER * part cface_map f0 cSUC cSUC b1 f3 b1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D Ssrnat.add0n
A |- (!n. (((NUMERAL _0) + n) = n))
T c= c+ cNUMERAL c_0 f0 f0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D ADD_ASSOC
A |- (!m. (!n. (!p. ((m + (n + p)) = ((m + n) + p)))))
T c= c+ f0 c+ f1 f2 c+ c+ f0 f1 f2
D ADD_AC
A |- (((m + n) = (n + m)) /\ ((((m + n) + p) = (m + (n + p))) /\ ((m + (n + p)) = (n + (m + p)))))
T c/\ c= c+ f0 f1 c+ f1 f0 c/\ c= c+ c+ f0 f1 f2 c+ f0 c+ f1 f2 c= c+ f0 c+ f1 f2 c+ f1 c+ f0 f2
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D ADD1
A |- (!m. ((SUC m) = (m + (NUMERAL (BIT1 _0)))))
T c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
D Ssrnat.mul0n
A |- (!n. (((NUMERAL _0) * n) = (NUMERAL _0)))
T c= c* cNUMERAL c_0 f0 cNUMERAL c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D Ssrnat.mul1n
A |- (!n. (((NUMERAL (BIT1 _0)) * n) = n))
T c= c* cNUMERAL cBIT1 c_0 f0 f0
D LEFT_ADD_DISTRIB
A |- (!m. (!n. (!p. ((m * (n + p)) = ((m * n) + (m * p))))))
T c= c* f0 c+ f1 f2 c+ c* f0 f1 c* f0 f2
D MULT_AC
A |- (((m * n) = (n * m)) /\ ((((m * n) * p) = (m * (n * p))) /\ ((m * (n * p)) = (n * (m * p)))))
T c/\ c= c* f0 f1 c* f1 f0 c/\ c= c* c* f0 f1 f2 c* f0 c* f1 f2 c= c* f0 c* f1 f2 c* f1 c* f0 f2
D Ssrnat.expnS
A |- (!m. (!n. ((m EXP (SUC n)) = (m * (m EXP n)))))
T c= cEXP f0 cSUC f1 c* f0 cEXP f0 f1
D Ssrnat.expn0
A |- (!m. ((m EXP (NUMERAL _0)) = (NUMERAL (BIT1 _0))))
T c= cEXP f0 cNUMERAL c_0 cNUMERAL cBIT1 c_0
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_LE
A |- (!x. (!y. ((~ ((int_le x) y)) = ((int_lt y) x))))
T c= c~ cint_le f0 f1 cint_lt f1 f0
D INT_NOT_LT
A |- (!x. (!y. ((~ ((int_lt x) y)) = ((int_le y) x))))
T c= c~ cint_lt f0 f1 cint_le f1 f0
D INT_OF_NUM_ADD
A |- (!m. (!n. (((int_add (int_of_num m)) (int_of_num n)) = (int_of_num (m + n)))))
T c= cint_add cint_of_num f0 cint_of_num f1 cint_of_num c+ f0 f1
D INT_OF_NUM_LE
A |- (!m. (!n. (((int_le (int_of_num m)) (int_of_num n)) = (m <= n))))
T c= cint_le cint_of_num f0 cint_of_num f1 c<= f0 f1
D INT_OF_NUM_LT
A |- (!m. (!n. (((int_lt (int_of_num m)) (int_of_num n)) = (m < n))))
T c= cint_lt cint_of_num f0 cint_of_num f1 c< f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D Hypermap.lemma_hyp_m
A |- (!H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))))))))
T c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3
D Tame_list.min_num_unique
A |- (!X. (!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c))))
T c==> c/\ cIN f0 f1 ! c==> cIN b0 f1 c<= f0 b0 c= cmin_num f1 f0
+ |- ((!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> ((min_num (GSPEC (\GEN%PVAR%8609. (?m. (((SETSPEC GEN%PVAR%8609) (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))) m))))) = ((((hyp'm H) NF) L) x)))))) = T)
T c= ! ! ! c==> cis_split_condition f0 b0 b1 b2 c= cmin_num * part cGSPEC / c? / cSETSPEC b3 c~ c= cPOWER * part cloop_map b1 cSUC cSUC b4 b2 cPOWER * part cface_map f0 cSUC cSUC b4 b2 b4 chyp'm f0 b0 b1 b2 cT
- |- (((!p'. (!q'. ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) = p') ==> ((p' ==> ((!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))) = q')) ==> ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) = p') ==> ((p' ==> ((!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))) = q')) ==> ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) = p') ==> ((p' ==> ((!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))) = q')) ==> ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ ! c==> c<= b2 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b2 f3 cPOWER * part cface_map f0 b2 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 b0 c==> c==> b0 c= ! c==> c< b2 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b2 f3 cPOWER * part cface_map f0 cSUC cSUC b2 f3 b1 c= c==> c/\ ! c==> c<= b2 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b2 f3 cPOWER * part cface_map f0 b2 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b2 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b2 f3 cPOWER * part cface_map f0 cSUC cSUC b2 f3 c==> b0 b1 * / ! c==> c= c/\ ! c==> c<= b2 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b2 f3 cPOWER * part cface_map f0 b2 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 b0 c==> c==> b0 c= ! c==> c< b2 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b2 f3 cPOWER * part cface_map f0 cSUC cSUC b2 f3 b1 c= c==> c/\ ! c==> c<= b2 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b2 f3 cPOWER * part cface_map f0 b2 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b2 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b2 f3 cPOWER * part cface_map f0 cSUC cSUC b2 f3 c==> b0 b1 f4 * / ! c==> c= c/\ ! c==> c<= b2 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b2 f3 cPOWER * part cface_map f0 b2 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 b0 c==> c==> b0 c= ! c==> c< b2 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b2 f3 cPOWER * part cface_map f0 cSUC cSUC b2 f3 b1 c= c==> c/\ ! c==> c<= b2 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b2 f3 cPOWER * part cface_map f0 b2 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b2 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b2 f3 cPOWER * part cface_map f0 cSUC cSUC b2 f3 c==> b0 b1 f4
- (((SUC (SUC c')) <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))), ((SUC (SUC c')) <= (SUC ((((hyp'm H) NF) L) x))) |- ((((SUC (SUC c')) <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) /\ ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))
T c==> c==> c<= cSUC cSUC f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c==> c<= cSUC cSUC f0 cSUC chyp'm f1 f2 f3 f4 c/\ c==> c<= cSUC cSUC f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4
- |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
- |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) |- ((\i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) i)
T c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 * / c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 f4
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num ((((hyp'm H) NF) L) x))) ==> ((~ ((((is_split_condition H) NF) L) x)) \/ (((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x)) \/ ((~ ((int_lt (int_of_num c')) (int_of_num ((((hyp'm H) NF) L) x)))) \/ ((int_le ((int_add (int_of_num c')) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((int_add (int_of_num ((((hyp'm H) NF) L) x))) (int_of_num (NUMERAL (BIT1 _0))))))))) = ((~ ((((is_split_condition H) NF) L) x)) \/ (((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x)) \/ ((~ ((int_lt (int_of_num c')) (int_of_num ((((hyp'm H) NF) L) x)))) \/ ((int_le ((int_add (int_of_num c')) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((int_add (int_of_num ((((hyp'm H) NF) L) x))) (int_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num chyp'm f0 f1 f2 f3 c\/ c~ cis_split_condition f0 f1 f2 f3 c\/ c= cPOWER * part cloop_map f2 c+ c+ chyp'm f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f3 cPOWER * part cface_map f0 c+ c+ chyp'm f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f3 c\/ c~ cint_lt cint_of_num f4 cint_of_num chyp'm f0 f1 f2 f3 cint_le cint_add cint_of_num f4 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_add cint_of_num chyp'm f0 f1 f2 f3 cint_of_num cNUMERAL cBIT1 c_0 c\/ c~ cis_split_condition f0 f1 f2 f3 c\/ c= cPOWER * part cloop_map f2 c+ c+ chyp'm f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f3 cPOWER * part cface_map f0 c+ c+ chyp'm f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f3 c\/ c~ cint_lt cint_of_num f4 cint_of_num chyp'm f0 f1 f2 f3 cint_le cint_add cint_of_num f4 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_add cint_of_num chyp'm f0 f1 f2 f3 cint_of_num cNUMERAL cBIT1 c_0
+ (!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) |- (((SUC (SUC c')) <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))
T c==> ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c==> c<= cSUC cSUC f4 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC f4 f3 cPOWER * part cface_map f0 cSUC cSUC f4 f3
- ((SUC (SUC c')) <= (SUC ((((hyp'm H) NF) L) x))) |- ((((SUC (SUC c')) <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))
T c==> c<= cSUC cSUC f0 cSUC chyp'm f1 f2 f3 f4 c==> c==> c<= cSUC cSUC f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
- ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) |- (~ ((((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))
T c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c~ c= cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3
- |- (((c' < ((((hyp'm H) NF) L) x)) ==> (((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)) = q')) ==> (((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) = ((c' < ((((hyp'm H) NF) L) x)) ==> q')))
T c==> c==> c< f0 chyp'm f1 f2 f3 f4 c= c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 f5 c= c==> c< f0 chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c==> c< f0 chyp'm f1 f2 f3 f4 f5
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ |- ((m < n) = ((int_lt (int_of_num m)) (int_of_num n)))
T c= c< f0 f1 cint_lt cint_of_num f0 cint_of_num f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- |- ((~ (x = y)) = (((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y) \/ ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x)))
T c= c~ c= f0 f1 c\/ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
+ |- (T = (((~ F) ==> b) = ((~ b) ==> F)))
T c= cT c= c==> c~ cF f0 c==> c~ f0 cF
+ |- ((~ ((((is_split_condition H) NF) L) x)) \/ (((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x)) \/ ((~ ((int_lt (int_of_num c')) (int_of_num ((((hyp'm H) NF) L) x)))) \/ ((int_le ((int_add (int_of_num c')) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((int_add (int_of_num ((((hyp'm H) NF) L) x))) (int_of_num (NUMERAL (BIT1 _0))))))))
T c\/ c~ cis_split_condition f0 f1 f2 f3 c\/ c= cPOWER * part cloop_map f2 c+ c+ chyp'm f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f3 cPOWER * part cface_map f0 c+ c+ chyp'm f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f3 c\/ c~ cint_lt cint_of_num f4 cint_of_num chyp'm f0 f1 f2 f3 cint_le cint_add cint_of_num f4 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_add cint_of_num chyp'm f0 f1 f2 f3 cint_of_num cNUMERAL cBIT1 c_0
- |- (((i <= (SUC ((((hyp'm H) NF) L) x))) ==> (((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)) = q')) ==> (((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))) = ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> q')))
T c==> c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 c= c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 f5 c= c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 f5
- (((real_ge (real_of_int _10158340)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158341)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158340)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158341)) /\ ((((real_le (real_of_int _10158341)) (real_of_int _10158340)) \/ ((real_le (real_of_int _10158341)) (real_of_int _10158340))) /\ (((real_le ((real_add (real_of_int _10158340)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)) \/ ((real_le ((real_add (real_of_int _10158340)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ c\/ creal_le creal_of_int f1 creal_of_int f0 creal_le creal_of_int f1 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 cF
- |- (((!a. (!b. (((~ a) ==> b) = ((~ b) ==> a)))) ==> ((\a. (!b. (((~ a) ==> b) = ((~ b) ==> a)))) a)) = ((\a. (!b. (((~ a) ==> b) = ((~ b) ==> a)))) a))
T c= c==> ! ! c= c==> c~ b0 b1 c==> c~ b1 b0 * / ! c= c==> c~ b0 b1 c==> c~ b1 b0 f0 * / ! c= c==> c~ b0 b1 c==> c~ b1 b0 f0
+ |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158348)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158349)) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_le ((real_add (real_of_int _10158348)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)) /\ ((real_le ((real_add ((real_add (real_of_int _10158349)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10158348)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))) = (~ (((int_le (int_of_num (NUMERAL _0))) _10158348) ==> (((int_le (int_of_num (NUMERAL _0))) _10158349) ==> ((~ ((((is_split_condition H) NF) L) x)) \/ (((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x)) \/ ((~ ((int_lt _10158348) _10158349)) \/ ((int_le ((int_add _10158348) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((int_add _10158349) (int_of_num (NUMERAL (BIT1 _0))))))))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c\/ c~ cis_split_condition f2 f3 f4 f5 c\/ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c\/ c~ cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_add f1 cint_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- (((!X. (!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c)))) ==> ((\X. (!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c)))) X)) = ((\X. (!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c)))) X))
T c= c==> ! ! c==> c/\ cIN b1 b0 ! c==> cIN b2 b0 c<= b1 b2 c= cmin_num b0 b1 * / ! c==> c/\ cIN b1 b0 ! c==> cIN b2 b0 c<= b1 b2 c= cmin_num b0 b1 f0 * / ! c==> c/\ cIN b1 b0 ! c==> cIN b2 b0 c<= b1 b2 c= cmin_num b0 b1 f0
- ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) |- (((~ ((((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) ==> (((((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)) = F)) = (((((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)) = F))
T c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c= c==> c~ c= cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c= c= cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cF c= c= cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cF
- |- (((!X. (!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c)))) ==> (!X. (!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c))))) = (!X. (!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c)))))
T c= c==> ! ! c==> c/\ cIN b1 b0 ! c==> cIN b2 b0 c<= b1 b2 c= cmin_num b0 b1 ! ! c==> c/\ cIN b1 b0 ! c==> cIN b2 b0 c<= b1 b2 c= cmin_num b0 b1 ! ! c==> c/\ cIN b1 b0 ! c==> cIN b2 b0 c<= b1 b2 c= cmin_num b0 b1
+ ((a = F) ==> (((~ a) ==> b) = ((~ b) ==> a))) |- (((~ a) ==> b) = ((~ b) ==> a))
T c==> c==> c= f0 cF c= c==> c~ f0 f1 c==> c~ f1 f0 c= c==> c~ f0 f1 c==> c~ f1 f0
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ ((((is_split_condition H) NF) L) x) |- ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))) = ((((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))) ==> ((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) /\ (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))))))
T c==> cis_split_condition f0 f1 f2 f3 c= c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 c==> c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c/\ c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))), ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))), ((((is_split_condition H) NF) L) x) |- (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))
T c==> ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> cis_split_condition f0 f1 f2 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3
+ |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- (!X. (!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c)))) |- (!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c)))
T c==> ! ! c==> c/\ cIN b1 b0 ! c==> cIN b2 b0 c<= b1 b2 c= cmin_num b0 b1 ! c==> c/\ cIN b0 f0 ! c==> cIN b1 f0 c<= b0 b1 c= cmin_num f0 b0
- |- (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> ((!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))) = (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))))
T c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c= ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3
- |- ((\a. (!b. (((~ a) ==> b) = ((~ b) ==> a)))) a)
T * / ! c= c==> c~ b0 b1 c==> c~ b1 b0 f0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (a = F) |- ((((~ F) ==> b) = ((~ b) ==> F)) = (((~ a) ==> b) = ((~ b) ==> a)))
T c==> c= f0 cF c= c= c==> c~ cF f1 c==> c~ f1 cF c= c==> c~ f0 f1 c==> c~ f1 f0
+ (((real_ge (real_of_int _10158340)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158341)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- F
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- ((((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)) |- ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))
T c==> c= cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) = p') ==> ((p' ==> ((!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))) = q')) ==> ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))) = (p' ==> q'))))
T c==> c= c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 f4 c==> c==> f4 c= ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 f5 c= c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 c==> f4 f5
- |- ((\p'. (!q'. (((c' < ((((hyp'm H) NF) L) x)) = p') ==> ((p' ==> (((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)) = q')) ==> (((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) = (p' ==> q')))))) p')
T * / ! c==> c= c< f0 chyp'm f1 f2 f3 f4 b0 c==> c==> b0 c= c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 b1 c= c==> c< f0 chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c==> b0 b1 f5
+ (((real_ge (real_of_int _10158340)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158341)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_ge ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> ((!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))) = q')) ==> ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))) = (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> q')))
T c==> c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c= ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 f4 c= c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 f4
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- (((real_ge (real_of_int _10158348)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158349)) (real_of_num (NUMERAL _0))) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0)))))))) |- ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- (((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) = ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))) ==> ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> ((!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))) = q')) ==> ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))) = (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> q')))) = ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> ((!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))) = q')) ==> ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))) = (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> q'))))
T c= c==> c= c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c= ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 f4 c= c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 f4 c==> c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c= ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 f4 c= c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 f4
+ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))), ((((is_split_condition H) NF) L) x) |- ((c' < ((((hyp'm H) NF) L) x)) ==> ((SUC (SUC c')) <= (SUC ((((hyp'm H) NF) L) x))))
T c==> c~ c= cPOWER * part cloop_map f0 cSUC cSUC chyp'm f1 f2 f0 f3 f3 cPOWER * part cface_map f1 cSUC cSUC chyp'm f1 f2 f0 f3 f3 c==> cis_split_condition f1 f2 f0 f3 c==> c< f4 chyp'm f1 f2 f0 f3 c<= cSUC cSUC f4 cSUC chyp'm f1 f2 f0 f3
+ ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) |- (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) /\ (((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) /\ (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))) = (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))))
T c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c/\ c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c= c/\ c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3
- |- ((!i. t) = t)
T c= ! f0 f0
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- (((real_ge (real_of_int _10158348)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158349)) (real_of_num (NUMERAL _0))) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0)))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ ((((is_split_condition H) NF) L) x) |- ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> (((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) /\ (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))) = q')) ==> (((((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))) ==> ((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) /\ (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))))) = (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> q')))
T c==> cis_split_condition f0 f1 f2 f3 c==> c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c= c/\ c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 f4 c= c==> c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c/\ c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 f4
+ |- ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))
T c= cint_of_num c+ f0 f1 cint_add cint_of_num f0 cint_of_num f1
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ (a = T) |- ((a = T) /\ (((~ a) ==> b) = ((~ b) ==> a)))
T c==> c= f0 cT c/\ c= f0 cT c= c==> c~ f0 f1 c==> c~ f1 f0
+ |- (((!x. (!y. ((x = y) = (y = x)))) ==> ((\x. (!y. ((x = y) = (y = x)))) x)) = ((\x. (!y. ((x = y) = (y = x)))) x))
T c= c==> ! ! c= c= b0 b1 c= b1 b0 * / ! c= c= b0 b1 c= b1 b0 f0 * / ! c= c= b0 b1 c= b1 b0 f0
- |- ((!b. (((~ a) ==> b) = ((~ b) ==> a))) = T)
T c= ! c= c==> c~ f0 b0 c==> c~ b0 f0 cT
- |- ((!X. (!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c)))) ==> (!X. (!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c)))))
T c==> ! ! c==> c/\ cIN b1 b0 ! c==> cIN b2 b0 c<= b1 b2 c= cmin_num b0 b1 ! ! c==> c/\ cIN b1 b0 ! c==> cIN b2 b0 c<= b1 b2 c= cmin_num b0 b1
+ |- ((c' IN (GSPEC (\GEN%PVAR%8609. (?m. (((SETSPEC GEN%PVAR%8609) (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))) m))))) = (~ ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cloop_map f1 cSUC cSUC b1 f2 cPOWER * part cface_map f3 cSUC cSUC b1 f2 b1 c~ c= cPOWER * part cloop_map f1 cSUC cSUC f0 f2 cPOWER * part cface_map f3 cSUC cSUC f0 f2
+ |- (((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) /\ (!c'. ((~ ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) ==> (((((hyp'm H) NF) L) x) <= c')))) = ((((((hyp'm H) NF) L) x) IN (GSPEC (\GEN%PVAR%8609. (?m. (((SETSPEC GEN%PVAR%8609) (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))) m))))) /\ (!c'. ((c' IN (GSPEC (\GEN%PVAR%8609. (?m. (((SETSPEC GEN%PVAR%8609) (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))) m))))) ==> (((((hyp'm H) NF) L) x) <= c')))))
T c= c/\ c~ c= cPOWER * part cloop_map f0 cSUC cSUC chyp'm f1 f2 f0 f3 f3 cPOWER * part cface_map f1 cSUC cSUC chyp'm f1 f2 f0 f3 f3 ! c==> c~ c= cPOWER * part cloop_map f0 cSUC cSUC b0 f3 cPOWER * part cface_map f1 cSUC cSUC b0 f3 c<= chyp'm f1 f2 f0 f3 b0 c/\ cIN chyp'm f1 f2 f0 f3 * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cloop_map f0 cSUC cSUC b1 f3 cPOWER * part cface_map f1 cSUC cSUC b1 f3 b1 ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cloop_map f0 cSUC cSUC b2 f3 cPOWER * part cface_map f1 cSUC cSUC b2 f3 b2 c<= chyp'm f1 f2 f0 f3 b0
- (((real_ge (real_of_int _10158348)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158349)) (real_of_num (NUMERAL _0))) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0)))))))) |- ((((is_split_condition H) NF) L) x)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 cis_split_condition f2 f3 f4 f5
+ |- (((((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))) ==> ((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) /\ (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))))) = ((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) /\ (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))))
T c= c==> c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c/\ c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 c/\ c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3
- (((SUC (SUC c')) <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))), ((SUC (SUC c')) <= (SUC ((((hyp'm H) NF) L) x))) |- (((SUC (SUC c')) <= (SUC ((((hyp'm H) NF) L) x))) /\ ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))
T c==> c==> c<= cSUC cSUC f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c==> c<= cSUC cSUC f0 cSUC chyp'm f1 f2 f3 f4 c/\ c<= cSUC cSUC f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4
+ |- (((!y. ((x = y) = (y = x))) ==> ((\y. ((x = y) = (y = x))) y)) = ((\y. ((x = y) = (y = x))) y))
T c= c==> ! c= c= f0 b0 c= b0 f0 * / c= c= f0 b0 c= b0 f0 f1 * / c= c= f0 b0 c= b0 f0 f1
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158340)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158341)) /\ ((((real_le (real_of_int _10158341)) (real_of_int _10158340)) \/ ((real_le (real_of_int _10158341)) (real_of_int _10158340))) /\ (((real_le ((real_add (real_of_int _10158340)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)) \/ ((real_le ((real_add (real_of_int _10158340)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158340)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158341)) /\ ((((real_le (real_of_int _10158341)) (real_of_int _10158340)) \/ ((real_le (real_of_int _10158341)) (real_of_int _10158340))) /\ (((real_le ((real_add (real_of_int _10158340)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)) \/ ((real_le ((real_add (real_of_int _10158340)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ c\/ creal_le creal_of_int f1 creal_of_int f0 creal_le creal_of_int f1 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ c\/ creal_le creal_of_int f1 creal_of_int f0 creal_le creal_of_int f1 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 cF
- (!X. (!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c)))) |- ((!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c))) = T)
T c==> ! ! c==> c/\ cIN b1 b0 ! c==> cIN b2 b0 c<= b1 b2 c= cmin_num b0 b1 c= ! c==> c/\ cIN b0 f0 ! c==> cIN b1 f0 c<= b0 b1 c= cmin_num f0 b0 cT
+ T |- (T /\ (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) = ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))))
T c==> cT c/\ cT c= c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3
+ ((((is_split_condition H) NF) L) x) |- (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))))
T c==> cis_split_condition f0 f1 f2 f3 c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3
+ ((((is_split_condition H) NF) L) x) |- ((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) /\ (!c'. ((~ (((((hyp'm H) NF) L) x) <= c')) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))))
T c==> cis_split_condition f0 f1 f2 f3 c/\ c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c~ c<= chyp'm f0 f1 f2 f3 b0 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c))) ==> ((\c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c))) c)) = ((\c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c))) c))
T c= c==> ! c==> c/\ cIN b0 f0 ! c==> cIN b1 f0 c<= b0 b1 c= cmin_num f0 b0 * / c==> c/\ cIN b0 f0 ! c==> cIN b1 f0 c<= b0 b1 c= cmin_num f0 b0 f1 * / c==> c/\ cIN b0 f0 ! c==> cIN b1 f0 c<= b0 b1 c= cmin_num f0 b0 f1
- (((real_ge (real_of_int _10158348)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158349)) (real_of_num (NUMERAL _0))) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0)))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ |- ((\q'. ((((((is_split_condition H) NF) L) x) = p') ==> ((p' ==> (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) = q')) ==> ((((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))) = (p' ==> q'))))) q')
T * / c==> c= cis_split_condition f0 f1 f2 f3 f4 c==> c==> f4 c= c/\ ! c==> c<= b1 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b1 f3 cPOWER * part cface_map f0 b1 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 b0 c= c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b1 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b1 f3 cPOWER * part cface_map f0 b1 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> f4 b0 f5
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((((is_split_condition H) NF) L) x) |- ((T ==> (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) = q')) ==> ((((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))) = (T ==> q')))
T c==> cis_split_condition f0 f1 f2 f3 c==> c==> cT c= c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 f4 c= c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> cT f4
- (((real_ge (real_of_int _10158340)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158341)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!X. (!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c)))), ((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) |- (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) /\ ((min_num X) = c))
T c==> ! ! c==> c/\ cIN b1 b0 ! c==> cIN b2 b0 c<= b1 b2 c= cmin_num b0 b1 c==> c/\ cIN f0 f1 ! c==> cIN b0 f1 c<= f0 b0 c/\ c/\ cIN f0 f1 ! c==> cIN b0 f1 c<= f0 b0 c= cmin_num f1 f0
- |- (((c' < ((((hyp'm H) NF) L) x)) = p') ==> ((p' ==> (((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)) = q')) ==> (((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) = (p' ==> q'))))
T c==> c= c< f0 chyp'm f1 f2 f3 f4 f5 c==> c==> f5 c= c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 f6 c= c==> c< f0 chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c==> f5 f6
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158348)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158349)) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_le ((real_add (real_of_int _10158348)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)) /\ ((real_le ((real_add ((real_add (real_of_int _10158349)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10158348)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158348)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158349)) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_le ((real_add (real_of_int _10158348)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)) /\ ((real_le ((real_add ((real_add (real_of_int _10158349)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10158348)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158348)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158349)) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_le ((real_add (real_of_int _10158348)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)) /\ ((real_le ((real_add ((real_add (real_of_int _10158349)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10158348)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (((~ ((int_le (int_of_num x)) (int_of_num c'))) /\ ((int_lt (int_of_num c')) (int_of_num x))) \/ (((int_le (int_of_num x)) (int_of_num c')) /\ (~ ((int_lt (int_of_num c')) (int_of_num x)))))
T c\/ c/\ c~ cint_le cint_of_num f0 cint_of_num f1 cint_lt cint_of_num f1 cint_of_num f0 c/\ cint_le cint_of_num f0 cint_of_num f1 c~ cint_lt cint_of_num f1 cint_of_num f0
- T |- (T = T)
T c==> cT c= cT cT
- (((real_ge (real_of_int _10158348)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158349)) (real_of_num (NUMERAL _0))) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0)))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!q'. ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) = p') ==> ((p' ==> ((!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))) = q')) ==> ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))) = (p' ==> q'))))) ==> ((\q'. ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) = p') ==> ((p' ==> ((!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))) = q')) ==> ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))) = (p' ==> q'))))) q')) = ((\q'. ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) = p') ==> ((p' ==> ((!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))) = q')) ==> ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ ! c==> c<= b1 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b1 f3 cPOWER * part cface_map f0 b1 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 f4 c==> c==> f4 c= ! c==> c< b1 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b1 f3 cPOWER * part cface_map f0 cSUC cSUC b1 f3 b0 c= c==> c/\ ! c==> c<= b1 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b1 f3 cPOWER * part cface_map f0 b1 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b1 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b1 f3 cPOWER * part cface_map f0 cSUC cSUC b1 f3 c==> f4 b0 * / c==> c= c/\ ! c==> c<= b1 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b1 f3 cPOWER * part cface_map f0 b1 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 f4 c==> c==> f4 c= ! c==> c< b1 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b1 f3 cPOWER * part cface_map f0 cSUC cSUC b1 f3 b0 c= c==> c/\ ! c==> c<= b1 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b1 f3 cPOWER * part cface_map f0 b1 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b1 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b1 f3 cPOWER * part cface_map f0 cSUC cSUC b1 f3 c==> f4 b0 f5 * / c==> c= c/\ ! c==> c<= b1 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b1 f3 cPOWER * part cface_map f0 b1 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 f4 c==> c==> f4 c= ! c==> c< b1 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b1 f3 cPOWER * part cface_map f0 cSUC cSUC b1 f3 b0 c= c==> c/\ ! c==> c<= b1 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b1 f3 cPOWER * part cface_map f0 b1 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b1 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b1 f3 cPOWER * part cface_map f0 cSUC cSUC b1 f3 c==> f4 b0 f5
- |- (T = (((((is_split_condition H) NF) L) x) ==> ((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) ==> ((c' < ((((hyp'm H) NF) L) x)) ==> ((SUC (SUC c')) <= (SUC ((((hyp'm H) NF) L) x)))))))
T c= cT c==> cis_split_condition f0 f1 f2 f3 c==> c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> c< f4 chyp'm f0 f1 f2 f3 c<= cSUC cSUC f4 cSUC chyp'm f0 f1 f2 f3
+ |- ((x = y) = (y = x))
T c= c= f0 f1 c= f1 f0
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\q'. (((c' < ((((hyp'm H) NF) L) x)) = p') ==> ((p' ==> (((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)) = q')) ==> (((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) = (p' ==> q'))))) q')
T * / c==> c= c< f0 chyp'm f1 f2 f3 f4 f5 c==> c==> f5 c= c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 b0 c= c==> c< f0 chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c==> f5 b0 f6
+ |- ((((((is_split_condition H) NF) L) x) ==> ((min_num (GSPEC (\GEN%PVAR%8609. (?m. (((SETSPEC GEN%PVAR%8609) (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))) m))))) = ((((hyp'm H) NF) L) x))) = T)
T c= c==> cis_split_condition f0 f1 f2 f3 c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cloop_map f2 cSUC cSUC b1 f3 cPOWER * part cface_map f0 cSUC cSUC b1 f3 b1 chyp'm f0 f1 f2 f3 cT
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158348)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158349)) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_le ((real_add (real_of_int _10158348)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)) /\ ((real_le ((real_add ((real_add (real_of_int _10158349)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10158348)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))))))) ==> ((\NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))))))) NF)) = ((\NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))))))) NF))
T c= c==> ! ! ! c==> cis_split_condition f0 b0 b1 b2 c/\ ! c==> c<= b3 cSUC chyp'm f0 b0 b1 b2 c= cPOWER * part cloop_map b1 b3 b2 cPOWER * part cface_map f0 b3 b2 c~ c= cPOWER * part cloop_map b1 cSUC cSUC chyp'm f0 b0 b1 b2 b2 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 b0 b1 b2 b2 * / ! ! c==> cis_split_condition f0 b0 b1 b2 c/\ ! c==> c<= b3 cSUC chyp'm f0 b0 b1 b2 c= cPOWER * part cloop_map b1 b3 b2 cPOWER * part cface_map f0 b3 b2 c~ c= cPOWER * part cloop_map b1 cSUC cSUC chyp'm f0 b0 b1 b2 b2 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 b0 b1 b2 b2 f1 * / ! ! c==> cis_split_condition f0 b0 b1 b2 c/\ ! c==> c<= b3 cSUC chyp'm f0 b0 b1 b2 c= cPOWER * part cloop_map b1 b3 b2 cPOWER * part cface_map f0 b3 b2 c~ c= cPOWER * part cloop_map b1 cSUC cSUC chyp'm f0 b0 b1 b2 b2 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 b0 b1 b2 b2 f1
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((i <= (SUC ((((hyp'm H) NF) L) x))) ==> (((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)) = ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) ==> (((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))) = ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))))) = (((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))) = ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))))
T c= c==> c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 c= c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 c= c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 c= c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158348)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158349)) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_le ((real_add (real_of_int _10158348)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)) /\ ((real_le ((real_add ((real_add (real_of_int _10158349)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10158348)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))))) |- (((real_ge (real_of_int _10158348)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158349)) (real_of_num (NUMERAL _0))) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0))))))))
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ (((real_ge (real_of_int _10158340)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158341)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10158348)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158349)) (real_of_num (NUMERAL _0))) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0)))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\y. ((x = y) = (y = x))) y)
T * / c= c= f0 b0 c= b0 f0 f1
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((((is_split_condition H) NF) L) x) |- (((((is_split_condition H) NF) L) x) /\ ((min_num (GSPEC (\GEN%PVAR%8609. (?m. (((SETSPEC GEN%PVAR%8609) (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))) m))))) = ((((hyp'm H) NF) L) x)))
T c==> cis_split_condition f0 f1 f2 f3 c/\ cis_split_condition f0 f1 f2 f3 c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cloop_map f2 cSUC cSUC b1 f3 cPOWER * part cface_map f0 cSUC cSUC b1 f3 b1 chyp'm f0 f1 f2 f3
+ |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158340)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158341)) /\ ((((real_le (real_of_int _10158341)) (real_of_int _10158340)) \/ ((real_le (real_of_int _10158341)) (real_of_int _10158340))) /\ (((real_le ((real_add (real_of_int _10158340)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)) \/ ((real_le ((real_add (real_of_int _10158340)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158340)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158341)) /\ ((((real_le (real_of_int _10158341)) (real_of_int _10158340)) \/ ((real_le (real_of_int _10158341)) (real_of_int _10158340))) /\ (((real_le ((real_add (real_of_int _10158340)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)) \/ ((real_le ((real_add (real_of_int _10158340)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158340)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158341)) /\ ((((real_le (real_of_int _10158341)) (real_of_int _10158340)) \/ ((real_le (real_of_int _10158341)) (real_of_int _10158340))) /\ (((real_le ((real_add (real_of_int _10158340)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)) \/ ((real_le ((real_add (real_of_int _10158340)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341))))))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ c\/ creal_le creal_of_int f1 creal_of_int f0 creal_le creal_of_int f1 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ c\/ creal_le creal_of_int f1 creal_of_int f0 creal_le creal_of_int f1 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ c\/ creal_le creal_of_int f1 creal_of_int f0 creal_le creal_of_int f1 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1
+ |- ((\c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c))) c)
T * / c==> c/\ cIN b0 f0 ! c==> cIN b1 f0 c<= b0 b1 c= cmin_num f0 b0 f1
+ |- (((!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) ==> ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) ((((hyp'm H) NF) L) x))) = ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) ((((hyp'm H) NF) L) x)))
T c= c==> ! cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 chyp'm f0 f1 f2 f3 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 chyp'm f0 f1 f2 f3
+ (a = F) |- ((a = F) /\ (((~ a) ==> b) = ((~ b) ==> a)))
T c==> c= f0 cF c/\ c= f0 cF c= c==> c~ f0 f1 c==> c~ f1 f0
+ |- ((\X. (!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c)))) X)
T * / ! c==> c/\ cIN b1 b0 ! c==> cIN b2 b0 c<= b1 b2 c= cmin_num b0 b1 f0
+ |- (((!q'. ((((((is_split_condition H) NF) L) x) = p') ==> ((p' ==> (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) = q')) ==> ((((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))) = (p' ==> q'))))) ==> ((\q'. ((((((is_split_condition H) NF) L) x) = p') ==> ((p' ==> (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) = q')) ==> ((((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))) = (p' ==> q'))))) q')) = ((\q'. ((((((is_split_condition H) NF) L) x) = p') ==> ((p' ==> (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) = q')) ==> ((((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cis_split_condition f0 f1 f2 f3 f4 c==> c==> f4 c= c/\ ! c==> c<= b1 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b1 f3 cPOWER * part cface_map f0 b1 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 b0 c= c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b1 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b1 f3 cPOWER * part cface_map f0 b1 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> f4 b0 * / c==> c= cis_split_condition f0 f1 f2 f3 f4 c==> c==> f4 c= c/\ ! c==> c<= b1 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b1 f3 cPOWER * part cface_map f0 b1 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 b0 c= c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b1 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b1 f3 cPOWER * part cface_map f0 b1 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> f4 b0 f5 * / c==> c= cis_split_condition f0 f1 f2 f3 f4 c==> c==> f4 c= c/\ ! c==> c<= b1 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b1 f3 cPOWER * part cface_map f0 b1 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 b0 c= c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b1 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b1 f3 cPOWER * part cface_map f0 b1 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> f4 b0 f5
+ |- (((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> (((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) /\ (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))) = (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))))) ==> (((((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))) ==> ((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) /\ (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))))) = (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))))) = (((((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))) ==> ((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) /\ (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))))) = (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))))))
T c= c==> c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c= c/\ c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 c= c==> c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c/\ c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 c= c==> c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c/\ c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((real_ge x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 f1 creal_of_num cNUMERAL c_0
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
+ |- (((!p'. (!q'. ((((((is_split_condition H) NF) L) x) = p') ==> ((p' ==> (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) = q')) ==> ((((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((((is_split_condition H) NF) L) x) = p') ==> ((p' ==> (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) = q')) ==> ((((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((((is_split_condition H) NF) L) x) = p') ==> ((p' ==> (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) = q')) ==> ((((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cis_split_condition f0 f1 f2 f3 b0 c==> c==> b0 c= c/\ ! c==> c<= b2 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b2 f3 cPOWER * part cface_map f0 b2 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 b1 c= c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b2 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b2 f3 cPOWER * part cface_map f0 b2 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> b0 b1 * / ! c==> c= cis_split_condition f0 f1 f2 f3 b0 c==> c==> b0 c= c/\ ! c==> c<= b2 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b2 f3 cPOWER * part cface_map f0 b2 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 b1 c= c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b2 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b2 f3 cPOWER * part cface_map f0 b2 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> b0 b1 f4 * / ! c==> c= cis_split_condition f0 f1 f2 f3 b0 c==> c==> b0 c= c/\ ! c==> c<= b2 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b2 f3 cPOWER * part cface_map f0 b2 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 b1 c= c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b2 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b2 f3 cPOWER * part cface_map f0 b2 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> b0 b1 f4
+ |- (!H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> ((min_num (GSPEC (\GEN%PVAR%8609. (?m. (((SETSPEC GEN%PVAR%8609) (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))) m))))) = ((((hyp'm H) NF) L) x)))))))
T c==> cis_split_condition f0 f1 f2 f3 c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cloop_map f2 cSUC cSUC b1 f3 cPOWER * part cface_map f0 cSUC cSUC b1 f3 b1 chyp'm f0 f1 f2 f3
+ |- ((!x. (((((is_split_condition H) NF) L) x) ==> ((min_num (GSPEC (\GEN%PVAR%8609. (?m. (((SETSPEC GEN%PVAR%8609) (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))) m))))) = ((((hyp'm H) NF) L) x)))) = T)
T c= ! c==> cis_split_condition f0 f1 f2 b0 c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cloop_map f2 cSUC cSUC b2 b0 cPOWER * part cface_map f0 cSUC cSUC b2 b0 b2 chyp'm f0 f1 f2 b0 cT
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- (((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) = ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))
T c= c==> c< f0 chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c==> c< f0 chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4
- (!X. (!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c)))) |- ((\X. (!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c)))) X)
T c==> ! ! c==> c/\ cIN b1 b0 ! c==> cIN b2 b0 c<= b1 b2 c= cmin_num b0 b1 * / ! c==> c/\ cIN b1 b0 ! c==> cIN b2 b0 c<= b1 b2 c= cmin_num b0 b1 f0
+ |- (((int_le (int_of_num (NUMERAL _0))) _10158340) ==> (((int_le (int_of_num (NUMERAL _0))) _10158341) ==> (((~ ((int_le _10158341) _10158340)) /\ ((int_lt _10158340) _10158341)) \/ (((int_le _10158341) _10158340) /\ (~ ((int_lt _10158340) _10158341))))))
T c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c\/ c/\ c~ cint_le f1 f0 cint_lt f0 f1 c/\ cint_le f1 f0 c~ cint_lt f0 f1
+ |- ((m <= n) = ((int_le (int_of_num m)) (int_of_num n)))
T c= c<= f0 f1 cint_le cint_of_num f0 cint_of_num f1
+ (((real_ge (real_of_int _10158340)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158341)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ |- ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) x)
T * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- |- (((!p'. (!q'. (((c' < ((((hyp'm H) NF) L) x)) = p') ==> ((p' ==> (((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)) = q')) ==> (((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((c' < ((((hyp'm H) NF) L) x)) = p') ==> ((p' ==> (((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)) = q')) ==> (((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((c' < ((((hyp'm H) NF) L) x)) = p') ==> ((p' ==> (((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)) = q')) ==> (((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c< f0 chyp'm f1 f2 f3 f4 b0 c==> c==> b0 c= c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 b1 c= c==> c< f0 chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c==> b0 b1 * / ! c==> c= c< f0 chyp'm f1 f2 f3 f4 b0 c==> c==> b0 c= c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 b1 c= c==> c< f0 chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c==> b0 b1 f5 * / ! c==> c= c< f0 chyp'm f1 f2 f3 f4 b0 c==> c==> b0 c= c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 b1 c= c==> c< f0 chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c==> b0 b1 f5
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_ge (real_of_int _10158348)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158349)) (real_of_num (NUMERAL _0))) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0)))))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ ((((is_split_condition H) NF) L) x) |- ((((((hyp'm H) NF) L) x) IN (GSPEC (\GEN%PVAR%8609. (?m. (((SETSPEC GEN%PVAR%8609) (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))) m))))) /\ (!c'. ((c' IN (GSPEC (\GEN%PVAR%8609. (?m. (((SETSPEC GEN%PVAR%8609) (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))) m))))) ==> (((((hyp'm H) NF) L) x) <= c'))))
T c==> cis_split_condition f0 f1 f2 f3 c/\ cIN chyp'm f0 f1 f2 f3 * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cloop_map f2 cSUC cSUC b1 f3 cPOWER * part cface_map f0 cSUC cSUC b1 f3 b1 ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cloop_map f2 cSUC cSUC b2 f3 cPOWER * part cface_map f0 cSUC cSUC b2 f3 b2 c<= chyp'm f0 f1 f2 f3 b0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (~ (~ (((int_le (int_of_num (NUMERAL _0))) _10158340) ==> (((int_le (int_of_num (NUMERAL _0))) _10158341) ==> (((~ ((int_le _10158341) _10158340)) /\ ((int_lt _10158340) _10158341)) \/ (((int_le _10158341) _10158340) /\ (~ ((int_lt _10158340) _10158341))))))))
T c~ c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c\/ c/\ c~ cint_le f1 f0 cint_lt f0 f1 c/\ cint_le f1 f0 c~ cint_lt f0 f1
- (i <= (SUC ((((hyp'm H) NF) L) x))) |- ((i <= (SUC ((((hyp'm H) NF) L) x))) = T)
T c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 c= c<= f0 cSUC chyp'm f1 f2 f3 f4 cT
- (!X. (!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c)))) |- (((!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c))) ==> ((\c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c))) c)) = ((\c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c))) c))
T c==> ! ! c==> c/\ cIN b1 b0 ! c==> cIN b2 b0 c<= b1 b2 c= cmin_num b0 b1 c= c==> ! c==> c/\ cIN b0 f0 ! c==> cIN b1 f0 c<= b0 b1 c= cmin_num f0 b0 * / c==> c/\ cIN b0 f0 ! c==> cIN b1 f0 c<= b0 b1 c= cmin_num f0 b0 f1 * / c==> c/\ cIN b0 f0 ! c==> cIN b1 f0 c<= b0 b1 c= cmin_num f0 b0 f1
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((\L. (!x. (((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))))) L)
T * / ! c==> cis_split_condition f0 f1 b0 b1 c/\ ! c==> c<= b2 cSUC chyp'm f0 f1 b0 b1 c= cPOWER * part cloop_map b0 b2 b1 cPOWER * part cface_map f0 b2 b1 c~ c= cPOWER * part cloop_map b0 cSUC cSUC chyp'm f0 f1 b0 b1 b1 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 b0 b1 b1 f2
- |- (((i <= (SUC ((((hyp'm H) NF) L) x))) = p') ==> ((p' ==> (((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)) = q')) ==> (((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))) = (p' ==> q'))))
T c==> c= c<= f0 cSUC chyp'm f1 f2 f3 f4 f5 c==> c==> f5 c= c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 f6 c= c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 c==> f5 f6
- (((real_ge (real_of_int _10158340)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158341)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) |- (((((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)) = F)
T c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c= c= cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cF
+ |- (((!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) ==> ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) x)) = ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) x))
T c= c==> ! cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
+ |- (((~ ((((is_split_condition H) NF) L) x)) \/ (((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x)) \/ ((~ ((int_lt (int_of_num c')) (int_of_num ((((hyp'm H) NF) L) x)))) \/ ((int_le ((int_add (int_of_num c')) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((int_add (int_of_num ((((hyp'm H) NF) L) x))) (int_of_num (NUMERAL (BIT1 _0)))))))) = (((((is_split_condition H) NF) L) x) ==> ((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) ==> ((c' < ((((hyp'm H) NF) L) x)) ==> ((SUC (SUC c')) <= (SUC ((((hyp'm H) NF) L) x)))))))
T c= c\/ c~ cis_split_condition f0 f1 f2 f3 c\/ c= cPOWER * part cloop_map f2 c+ c+ chyp'm f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f3 cPOWER * part cface_map f0 c+ c+ chyp'm f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f3 c\/ c~ cint_lt cint_of_num f4 cint_of_num chyp'm f0 f1 f2 f3 cint_le cint_add cint_of_num f4 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_add cint_of_num chyp'm f0 f1 f2 f3 cint_of_num cNUMERAL cBIT1 c_0 c==> cis_split_condition f0 f1 f2 f3 c==> c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> c< f4 chyp'm f0 f1 f2 f3 c<= cSUC cSUC f4 cSUC chyp'm f0 f1 f2 f3
+ |- ((\p'. (!q'. (((((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))) = p') ==> ((p' ==> (((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) /\ (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))) = q')) ==> (((((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))) ==> ((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) /\ (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))))) = (p' ==> q')))))) p')
T * / ! c==> c= c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b2 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b2 f3 cPOWER * part cface_map f0 b2 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 b0 c==> c==> b0 c= c/\ c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b2 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b2 f3 cPOWER * part cface_map f0 cSUC cSUC b2 f3 b1 c= c==> c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b2 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b2 f3 cPOWER * part cface_map f0 b2 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c/\ c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b2 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b2 f3 cPOWER * part cface_map f0 cSUC cSUC b2 f3 c==> b0 b1 f4
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((((is_split_condition H) NF) L) x) |- (((((((is_split_condition H) NF) L) x) = T) ==> ((T ==> (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) = q')) ==> ((((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))) = (T ==> q')))) = ((T ==> (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) = q')) ==> ((((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))) = (T ==> q'))))
T c==> cis_split_condition f0 f1 f2 f3 c= c==> c= cis_split_condition f0 f1 f2 f3 cT c==> c==> cT c= c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 f4 c= c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> cT f4 c==> c==> cT c= c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 f4 c= c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> cT f4
- |- ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> (((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)) = ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))))
T c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 c= c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4
- |- ((((((is_split_condition H) NF) L) x) ==> ((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) ==> ((c' < ((((hyp'm H) NF) L) x)) ==> ((SUC (SUC c')) <= (SUC ((((hyp'm H) NF) L) x)))))) = T)
T c= c==> cis_split_condition f0 f1 f2 f3 c==> c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> c< f4 chyp'm f0 f1 f2 f3 c<= cSUC cSUC f4 cSUC chyp'm f0 f1 f2 f3 cT
+ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))), (((SUC (SUC c')) <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))), (c' < ((((hyp'm H) NF) L) x)), ((((is_split_condition H) NF) L) x) |- ((((SUC (SUC c')) <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) /\ ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))
T c==> c~ c= cPOWER * part cloop_map f0 cSUC cSUC chyp'm f1 f2 f0 f3 f3 cPOWER * part cface_map f1 cSUC cSUC chyp'm f1 f2 f0 f3 f3 c==> c==> c<= cSUC cSUC f4 cSUC chyp'm f1 f2 f0 f3 c= cPOWER * part cloop_map f0 cSUC cSUC f4 f3 cPOWER * part cface_map f1 cSUC cSUC f4 f3 c==> c< f4 chyp'm f1 f2 f0 f3 c==> cis_split_condition f1 f2 f0 f3 c/\ c==> c<= cSUC cSUC f4 cSUC chyp'm f1 f2 f0 f3 c= cPOWER * part cloop_map f0 cSUC cSUC f4 f3 cPOWER * part cface_map f1 cSUC cSUC f4 f3 c= cPOWER * part cloop_map f0 cSUC cSUC f4 f3 cPOWER * part cface_map f1 cSUC cSUC f4 f3
+ (((real_ge (real_of_int _10158348)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158349)) (real_of_num (NUMERAL _0))) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0)))))))) |- ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ (((real_ge (real_of_int _10158348)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158349)) (real_of_num (NUMERAL _0))) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0)))))))) |- (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0))))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ |- (((int_le (int_of_num (NUMERAL _0))) (int_of_num ((((hyp'm H) NF) L) x))) ==> ((~ ((((is_split_condition H) NF) L) x)) \/ (((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x)) \/ ((~ ((int_lt (int_of_num c')) (int_of_num ((((hyp'm H) NF) L) x)))) \/ ((int_le ((int_add (int_of_num c')) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((int_add (int_of_num ((((hyp'm H) NF) L) x))) (int_of_num (NUMERAL (BIT1 _0)))))))))
T c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num chyp'm f0 f1 f2 f3 c\/ c~ cis_split_condition f0 f1 f2 f3 c\/ c= cPOWER * part cloop_map f2 c+ c+ chyp'm f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f3 cPOWER * part cface_map f0 c+ c+ chyp'm f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f3 c\/ c~ cint_lt cint_of_num f4 cint_of_num chyp'm f0 f1 f2 f3 cint_le cint_add cint_of_num f4 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_add cint_of_num chyp'm f0 f1 f2 f3 cint_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10158348)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158349)) (real_of_num (NUMERAL _0))) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0)))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ (((real_ge (real_of_int _10158340)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158341)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_ge ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))) (real_of_num (NUMERAL _0))) = (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ (a = F) |- ((((~ a) ==> b) = ((~ b) ==> a)) = (((~ F) ==> b) = ((~ b) ==> F)))
T c==> c= f0 cF c= c= c==> c~ f0 f1 c==> c~ f1 f0 c= c==> c~ cF f1 c==> c~ f1 cF
+ |- (((~ T) ==> b) = ((~ b) ==> T))
T c= c==> c~ cT f0 c==> c~ f0 cT
- |- ((((c' < ((((hyp'm H) NF) L) x)) = (c' < ((((hyp'm H) NF) L) x))) ==> (((c' < ((((hyp'm H) NF) L) x)) ==> (((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)) = q')) ==> (((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) = ((c' < ((((hyp'm H) NF) L) x)) ==> q')))) = (((c' < ((((hyp'm H) NF) L) x)) ==> (((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)) = q')) ==> (((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) = ((c' < ((((hyp'm H) NF) L) x)) ==> q'))))
T c= c==> c= c< f0 chyp'm f1 f2 f3 f4 c< f0 chyp'm f1 f2 f3 f4 c==> c==> c< f0 chyp'm f1 f2 f3 f4 c= c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 f5 c= c==> c< f0 chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c==> c< f0 chyp'm f1 f2 f3 f4 f5 c==> c==> c< f0 chyp'm f1 f2 f3 f4 c= c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 f5 c= c==> c< f0 chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c==> c< f0 chyp'm f1 f2 f3 f4 f5
+ |- (((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (T = (((~ T) ==> b) = ((~ b) ==> T)))
T c= cT c= c==> c~ cT f0 c==> c~ f0 cT
+ |- (((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) /\ (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))) = ((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) /\ (!c'. ((~ (((((hyp'm H) NF) L) x) <= c')) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))))
T c= c/\ c~ c= cPOWER * part cloop_map f0 cSUC cSUC chyp'm f1 f2 f0 f3 f3 cPOWER * part cface_map f1 cSUC cSUC chyp'm f1 f2 f0 f3 f3 ! c==> c< b0 chyp'm f1 f2 f0 f3 c= cPOWER * part cloop_map f0 cSUC cSUC b0 f3 cPOWER * part cface_map f1 cSUC cSUC b0 f3 c/\ c~ c= cPOWER * part cloop_map f0 cSUC cSUC chyp'm f1 f2 f0 f3 f3 cPOWER * part cface_map f1 cSUC cSUC chyp'm f1 f2 f0 f3 f3 ! c==> c~ c<= chyp'm f1 f2 f0 f3 b0 c= cPOWER * part cloop_map f0 cSUC cSUC b0 f3 cPOWER * part cface_map f1 cSUC cSUC b0 f3
+ ((((is_split_condition H) NF) L) x) |- ((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) ==> ((c' < ((((hyp'm H) NF) L) x)) ==> ((SUC (SUC c')) <= (SUC ((((hyp'm H) NF) L) x)))))
T c==> cis_split_condition f0 f1 f2 f3 c==> c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> c< f4 chyp'm f0 f1 f2 f3 c<= cSUC cSUC f4 cSUC chyp'm f0 f1 f2 f3
+ ((((is_split_condition H) NF) L) x) |- (((((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))) ==> ((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) /\ (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))))) = (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))))
T c==> cis_split_condition f0 f1 f2 f3 c= c==> c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c/\ c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3
- |- (((!b. (((~ a) ==> b) = ((~ b) ==> a))) ==> ((\b. (((~ a) ==> b) = ((~ b) ==> a))) b)) = ((\b. (((~ a) ==> b) = ((~ b) ==> a))) b))
T c= c==> ! c= c==> c~ f0 b0 c==> c~ b0 f0 * / c= c==> c~ f0 b0 c==> c~ b0 f0 f1 * / c= c==> c~ f0 b0 c==> c~ b0 f0 f1
+ (((real_ge (real_of_int _10158340)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158341)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num c')) ==> (((int_le (int_of_num (NUMERAL _0))) (int_of_num x)) ==> (((~ ((int_le (int_of_num x)) (int_of_num c'))) /\ ((int_lt (int_of_num c')) (int_of_num x))) \/ (((int_le (int_of_num x)) (int_of_num c')) /\ (~ ((int_lt (int_of_num c')) (int_of_num x))))))) = (((int_le (int_of_num (NUMERAL _0))) (int_of_num x)) ==> (((~ ((int_le (int_of_num x)) (int_of_num c'))) /\ ((int_lt (int_of_num c')) (int_of_num x))) \/ (((int_le (int_of_num x)) (int_of_num c')) /\ (~ ((int_lt (int_of_num c')) (int_of_num x)))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f1 c\/ c/\ c~ cint_le cint_of_num f1 cint_of_num f0 cint_lt cint_of_num f0 cint_of_num f1 c/\ cint_le cint_of_num f1 cint_of_num f0 c~ cint_lt cint_of_num f0 cint_of_num f1 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f1 c\/ c/\ c~ cint_le cint_of_num f1 cint_of_num f0 cint_lt cint_of_num f0 cint_of_num f1 c/\ cint_le cint_of_num f1 cint_of_num f0 c~ cint_lt cint_of_num f0 cint_of_num f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((((is_split_condition H) NF) L) x) |- ((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) /\ (!c'. ((~ ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) ==> (((((hyp'm H) NF) L) x) <= c'))))
T c==> cis_split_condition f0 f1 f2 f3 c/\ c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c~ c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 c<= chyp'm f0 f1 f2 f3 b0
- ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) |- (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) /\ ((!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))) = (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))))
T c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c/\ c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c= ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3
+ |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158348)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158349)) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_le ((real_add (real_of_int _10158348)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)) /\ ((real_le ((real_add ((real_add (real_of_int _10158349)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10158348)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cF
- (!X. (!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c)))) |- ((!X. (!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c)))) /\ (!X. (!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c)))))
T c==> ! ! c==> c/\ cIN b1 b0 ! c==> cIN b2 b0 c<= b1 b2 c= cmin_num b0 b1 c/\ ! ! c==> c/\ cIN b1 b0 ! c==> cIN b2 b0 c<= b1 b2 c= cmin_num b0 b1 ! ! c==> c/\ cIN b1 b0 ! c==> cIN b2 b0 c<= b1 b2 c= cmin_num b0 b1
- |- ((\q'. ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) = p') ==> ((p' ==> ((!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))) = q')) ==> ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ ! c==> c<= b1 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b1 f3 cPOWER * part cface_map f0 b1 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 f4 c==> c==> f4 c= ! c==> c< b1 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b1 f3 cPOWER * part cface_map f0 cSUC cSUC b1 f3 b0 c= c==> c/\ ! c==> c<= b1 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b1 f3 cPOWER * part cface_map f0 b1 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b1 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b1 f3 cPOWER * part cface_map f0 cSUC cSUC b1 f3 c==> f4 b0 f5
- |- ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((int_le (int_of_num (NUMERAL _0))) _10158348) ==> (((int_le (int_of_num (NUMERAL _0))) _10158349) ==> ((~ ((((is_split_condition H) NF) L) x)) \/ (((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x)) \/ ((~ ((int_lt _10158348) _10158349)) \/ ((int_le ((int_add _10158348) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((int_add _10158349) (int_of_num (NUMERAL (BIT1 _0))))))))))
T c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c\/ c~ cis_split_condition f2 f3 f4 f5 c\/ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c\/ c~ cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_add f1 cint_of_num cNUMERAL cBIT1 c_0
- |- ((((i <= (SUC ((((hyp'm H) NF) L) x))) = (i <= (SUC ((((hyp'm H) NF) L) x)))) ==> (((i <= (SUC ((((hyp'm H) NF) L) x))) ==> (((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)) = q')) ==> (((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))) = ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> q')))) = (((i <= (SUC ((((hyp'm H) NF) L) x))) ==> (((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)) = q')) ==> (((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))) = ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> q'))))
T c= c==> c= c<= f0 cSUC chyp'm f1 f2 f3 f4 c<= f0 cSUC chyp'm f1 f2 f3 f4 c==> c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 c= c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 f5 c= c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 f5 c==> c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 c= c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 f5 c= c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 f5
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ a) ==> b) = ((~ b) ==> a)) = T)
T c= c= c==> c~ f0 f1 c==> c~ f1 f0 cT
+ |- (((!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) ==> ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)) = ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
- (i <= (SUC ((((hyp'm H) NF) L) x))) |- ((i <= (SUC ((((hyp'm H) NF) L) x))) /\ (((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)) = ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))))
T c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 c/\ c<= f0 cSUC chyp'm f1 f2 f3 f4 c= c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- ((((c' < ((((hyp'm H) NF) L) x)) ==> (((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)) = ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))) ==> (((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) = ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))) = (((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) = ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))))
T c= c==> c==> c< f0 chyp'm f1 f2 f3 f4 c= c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c= c==> c< f0 chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c==> c< f0 chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c= c==> c< f0 chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c==> c< f0 chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4
- (((real_ge (real_of_int _10158348)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158349)) (real_of_num (NUMERAL _0))) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0)))))))) |- ((real_ge (real_of_int _10158349)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
+ ((((is_split_condition H) NF) L) x) |- ((((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))) = (T ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))))
T c==> cis_split_condition f0 f1 f2 f3 c= c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> cT c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3
+ |- ((((((is_split_condition H) NF) L) x) = p') ==> ((p' ==> (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) = q')) ==> ((((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))) = (p' ==> q'))))
T c==> c= cis_split_condition f0 f1 f2 f3 f4 c==> c==> f4 c= c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 f5 c= c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> f4 f5
- ((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) |- ((!X. (!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c)))) ==> ((min_num X) = c))
T c==> c/\ cIN f0 f1 ! c==> cIN b0 f1 c<= f0 b0 c==> ! ! c==> c/\ cIN b1 b0 ! c==> cIN b2 b0 c<= b1 b2 c= cmin_num b0 b1 c= cmin_num f1 f0
- |- (((!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- (((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- |- ((x = y) = ((real_of_int x) = (real_of_int y)))
T c= c= f0 f1 c= creal_of_int f0 creal_of_int f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) |- (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) ==> ((\i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) i)) = ((\i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) i))
T c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c= c==> ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 * / c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 f4 * / c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 f4
- (c' < ((((hyp'm H) NF) L) x)) |- ((c' < ((((hyp'm H) NF) L) x)) /\ (((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)) = ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))
T c==> c< f0 chyp'm f1 f2 f3 f4 c/\ c< f0 chyp'm f1 f2 f3 f4 c= c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4
+ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))), (((SUC (SUC c')) <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))), (c' < ((((hyp'm H) NF) L) x)), ((((is_split_condition H) NF) L) x) |- ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))
T c==> c~ c= cPOWER * part cloop_map f0 cSUC cSUC chyp'm f1 f2 f0 f3 f3 cPOWER * part cface_map f1 cSUC cSUC chyp'm f1 f2 f0 f3 f3 c==> c==> c<= cSUC cSUC f4 cSUC chyp'm f1 f2 f0 f3 c= cPOWER * part cloop_map f0 cSUC cSUC f4 f3 cPOWER * part cface_map f1 cSUC cSUC f4 f3 c==> c< f4 chyp'm f1 f2 f0 f3 c==> cis_split_condition f1 f2 f0 f3 c= cPOWER * part cloop_map f0 cSUC cSUC f4 f3 cPOWER * part cface_map f1 cSUC cSUC f4 f3
- (!X. (!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c)))), ((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) |- ((!X. (!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c)))) /\ ((min_num X) = c))
T c==> ! ! c==> c/\ cIN b1 b0 ! c==> cIN b2 b0 c<= b1 b2 c= cmin_num b0 b1 c==> c/\ cIN f0 f1 ! c==> cIN b0 f1 c<= f0 b0 c/\ ! ! c==> c/\ cIN b1 b0 ! c==> cIN b2 b0 c<= b1 b2 c= cmin_num b0 b1 c= cmin_num f1 f0
+ |- ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) ((((hyp'm H) NF) L) x))
T * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 chyp'm f0 f1 f2 f3
- |- ((((SUC (SUC c')) <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) ==> (((SUC (SUC c')) <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))
T c==> c==> c<= cSUC cSUC f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c==> c<= cSUC cSUC f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4
- |- ((\b. (((~ a) ==> b) = ((~ b) ==> a))) b)
T * / c= c==> c~ f0 b0 c==> c~ b0 f0 f1
- (!X. (!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c)))), ((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) |- ((min_num X) = c)
T c==> ! ! c==> c/\ cIN b1 b0 ! c==> cIN b2 b0 c<= b1 b2 c= cmin_num b0 b1 c==> c/\ cIN f0 f1 ! c==> cIN b0 f1 c<= f0 b0 c= cmin_num f1 f0
+ |- ((\H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))))))) H)
T * / ! ! ! c==> cis_split_condition b0 b1 b2 b3 c/\ ! c==> c<= b4 cSUC chyp'm b0 b1 b2 b3 c= cPOWER * part cloop_map b2 b4 b3 cPOWER * part cface_map b0 b4 b3 c~ c= cPOWER * part cloop_map b2 cSUC cSUC chyp'm b0 b1 b2 b3 b3 cPOWER * part cface_map b0 cSUC cSUC chyp'm b0 b1 b2 b3 b3 f0
+ |- ((\q'. (((((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))) = p') ==> ((p' ==> (((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) /\ (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))) = q')) ==> (((((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))) ==> ((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) /\ (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))))) = (p' ==> q'))))) q')
T * / c==> c= c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b1 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b1 f3 cPOWER * part cface_map f0 b1 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 f4 c==> c==> f4 c= c/\ c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b1 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b1 f3 cPOWER * part cface_map f0 cSUC cSUC b1 f3 b0 c= c==> c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b1 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b1 f3 cPOWER * part cface_map f0 b1 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c/\ c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b1 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b1 f3 cPOWER * part cface_map f0 cSUC cSUC b1 f3 c==> f4 b0 f5
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158348)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158349)) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_le ((real_add (real_of_int _10158348)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)) /\ ((real_le ((real_add ((real_add (real_of_int _10158349)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10158348)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158348)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158349)) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_le ((real_add (real_of_int _10158348)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)) /\ ((real_le ((real_add ((real_add (real_of_int _10158349)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10158348)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cF
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- ((\x. (((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))))) x)
T * / c==> cis_split_condition f0 f1 f2 b0 c/\ ! c==> c<= b1 cSUC chyp'm f0 f1 f2 b0 c= cPOWER * part cloop_map f2 b1 b0 cPOWER * part cface_map f0 b1 b0 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 b0 b0 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 b0 b0 f3
- |- (((!q'. (((c' < ((((hyp'm H) NF) L) x)) = p') ==> ((p' ==> (((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)) = q')) ==> (((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) = (p' ==> q'))))) ==> ((\q'. (((c' < ((((hyp'm H) NF) L) x)) = p') ==> ((p' ==> (((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)) = q')) ==> (((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) = (p' ==> q'))))) q')) = ((\q'. (((c' < ((((hyp'm H) NF) L) x)) = p') ==> ((p' ==> (((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)) = q')) ==> (((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c< f0 chyp'm f1 f2 f3 f4 f5 c==> c==> f5 c= c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 b0 c= c==> c< f0 chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c==> f5 b0 * / c==> c= c< f0 chyp'm f1 f2 f3 f4 f5 c==> c==> f5 c= c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 b0 c= c==> c< f0 chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c==> f5 b0 f6 * / c==> c= c< f0 chyp'm f1 f2 f3 f4 f5 c==> c==> f5 c= c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 b0 c= c==> c< f0 chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c==> f5 b0 f6
- |- ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))
T c= cIN f0 * part cGSPEC / * f1 * part cSETSPEC b0 * f1 / / c/\ b0 c= f0 b1
+ (!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))), (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))), ((((is_split_condition H) NF) L) x) |- (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))
T c==> ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c==> c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> cis_split_condition f0 f1 f2 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3
+ ((a = T) ==> (((~ a) ==> b) = ((~ b) ==> a))), ((a = F) ==> (((~ a) ==> b) = ((~ b) ==> a))) |- (((~ a) ==> b) = ((~ b) ==> a))
T c==> c==> c= f0 cT c= c==> c~ f0 f1 c==> c~ f1 f0 c==> c==> c= f0 cF c= c==> c~ f0 f1 c==> c~ f1 f0 c= c==> c~ f0 f1 c==> c~ f1 f0
+ |- ((a = T) ==> (((~ a) ==> b) = ((~ b) ==> a)))
T c==> c= f0 cT c= c==> c~ f0 f1 c==> c~ f1 f0
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num x)) ==> (((~ ((int_le (int_of_num x)) (int_of_num c'))) /\ ((int_lt (int_of_num c')) (int_of_num x))) \/ (((int_le (int_of_num x)) (int_of_num c')) /\ (~ ((int_lt (int_of_num c')) (int_of_num x)))))) = (((~ ((int_le (int_of_num x)) (int_of_num c'))) /\ ((int_lt (int_of_num c')) (int_of_num x))) \/ (((int_le (int_of_num x)) (int_of_num c')) /\ (~ ((int_lt (int_of_num c')) (int_of_num x))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c\/ c/\ c~ cint_le cint_of_num f0 cint_of_num f1 cint_lt cint_of_num f1 cint_of_num f0 c/\ cint_le cint_of_num f0 cint_of_num f1 c~ cint_lt cint_of_num f1 cint_of_num f0 c\/ c/\ c~ cint_le cint_of_num f0 cint_of_num f1 cint_lt cint_of_num f1 cint_of_num f0 c/\ cint_le cint_of_num f0 cint_of_num f1 c~ cint_lt cint_of_num f1 cint_of_num f0
+ |- ((F ==> t) = T)
T c= c==> cF f0 cT
+ |- (((real_le (real_of_num m)) (real_neg (real_of_num n))) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))
T c= creal_le creal_of_num f0 creal_neg creal_of_num f1 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
- ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))), (i <= (SUC ((((hyp'm H) NF) L) x))) |- ((i <= (SUC ((((hyp'm H) NF) L) x))) /\ ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))
T c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> c<= f4 cSUC chyp'm f0 f1 f2 f3 c/\ c<= f4 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 f4 f3 cPOWER * part cface_map f0 f4 f3
+ ((((is_split_condition H) NF) L) x) |- ((((((((hyp'm H) NF) L) x) IN (GSPEC (\GEN%PVAR%8609. (?m. (((SETSPEC GEN%PVAR%8609) (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))) m))))) /\ (!c'. ((c' IN (GSPEC (\GEN%PVAR%8609. (?m. (((SETSPEC GEN%PVAR%8609) (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))) m))))) ==> (((((hyp'm H) NF) L) x) <= c')))) ==> ((min_num (GSPEC (\GEN%PVAR%8609. (?m. (((SETSPEC GEN%PVAR%8609) (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))) m))))) = ((((hyp'm H) NF) L) x))) = ((min_num (GSPEC (\GEN%PVAR%8609. (?m. (((SETSPEC GEN%PVAR%8609) (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))) m))))) = ((((hyp'm H) NF) L) x)))
T c==> cis_split_condition f0 f1 f2 f3 c= c==> c/\ cIN chyp'm f0 f1 f2 f3 * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cloop_map f2 cSUC cSUC b1 f3 cPOWER * part cface_map f0 cSUC cSUC b1 f3 b1 ! c==> cIN b0 * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cloop_map f2 cSUC cSUC b2 f3 cPOWER * part cface_map f0 cSUC cSUC b2 f3 b2 c<= chyp'm f0 f1 f2 f3 b0 c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cloop_map f2 cSUC cSUC b1 f3 cPOWER * part cface_map f0 cSUC cSUC b1 f3 b1 chyp'm f0 f1 f2 f3 c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cloop_map f2 cSUC cSUC b1 f3 cPOWER * part cface_map f0 cSUC cSUC b1 f3 b1 chyp'm f0 f1 f2 f3
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
+ ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))), ((((is_split_condition H) NF) L) x) |- (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))
T c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> cis_split_condition f0 f1 f2 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3
+ |- (((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) /\ (!c'. ((~ (((((hyp'm H) NF) L) x) <= c')) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))) = ((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) /\ (!c'. ((~ ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) ==> (((((hyp'm H) NF) L) x) <= c')))))
T c= c/\ c~ c= cPOWER * part cloop_map f0 cSUC cSUC chyp'm f1 f2 f0 f3 f3 cPOWER * part cface_map f1 cSUC cSUC chyp'm f1 f2 f0 f3 f3 ! c==> c~ c<= chyp'm f1 f2 f0 f3 b0 c= cPOWER * part cloop_map f0 cSUC cSUC b0 f3 cPOWER * part cface_map f1 cSUC cSUC b0 f3 c/\ c~ c= cPOWER * part cloop_map f0 cSUC cSUC chyp'm f1 f2 f0 f3 f3 cPOWER * part cface_map f1 cSUC cSUC chyp'm f1 f2 f0 f3 f3 ! c==> c~ c= cPOWER * part cloop_map f0 cSUC cSUC b0 f3 cPOWER * part cface_map f1 cSUC cSUC b0 f3 c<= chyp'm f1 f2 f0 f3 b0
- |- (((NUMERAL (BIT0 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!L. (!x. (((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))))) ==> ((\L. (!x. (((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))))) L)) = ((\L. (!x. (((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))))) L))
T c= c==> ! ! c==> cis_split_condition f0 f1 b0 b1 c/\ ! c==> c<= b2 cSUC chyp'm f0 f1 b0 b1 c= cPOWER * part cloop_map b0 b2 b1 cPOWER * part cface_map f0 b2 b1 c~ c= cPOWER * part cloop_map b0 cSUC cSUC chyp'm f0 f1 b0 b1 b1 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 b0 b1 b1 * / ! c==> cis_split_condition f0 f1 b0 b1 c/\ ! c==> c<= b2 cSUC chyp'm f0 f1 b0 b1 c= cPOWER * part cloop_map b0 b2 b1 cPOWER * part cface_map f0 b2 b1 c~ c= cPOWER * part cloop_map b0 cSUC cSUC chyp'm f0 f1 b0 b1 b1 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 b0 b1 b1 f2 * / ! c==> cis_split_condition f0 f1 b0 b1 c/\ ! c==> c<= b2 cSUC chyp'm f0 f1 b0 b1 c= cPOWER * part cloop_map b0 b2 b1 cPOWER * part cface_map f0 b2 b1 c~ c= cPOWER * part cloop_map b0 cSUC cSUC chyp'm f0 f1 b0 b1 b1 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 b0 b1 b1 f2
+ |- ((((((hyp'm H) NF) L) x) IN (GSPEC (\GEN%PVAR%8609. (?m. (((SETSPEC GEN%PVAR%8609) (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))) m))))) = (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))
T c= cIN chyp'm f0 f1 f2 f3 * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cloop_map f2 cSUC cSUC b1 f3 cPOWER * part cface_map f0 cSUC cSUC b1 f3 b1 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3
+ ((((is_split_condition H) NF) L) x) |- ((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) /\ (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))))
T c==> cis_split_condition f0 f1 f2 f3 c/\ c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3
+ (a = T) |- ((((~ a) ==> b) = ((~ b) ==> a)) = (((~ T) ==> b) = ((~ b) ==> T)))
T c==> c= f0 cT c= c= c==> c~ f0 f1 c==> c~ f1 f0 c= c==> c~ cT f1 c==> c~ f1 cT
+ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))), (c' < ((((hyp'm H) NF) L) x)), ((((is_split_condition H) NF) L) x) |- ((SUC (SUC c')) <= (SUC ((((hyp'm H) NF) L) x)))
T c==> c~ c= cPOWER * part cloop_map f0 cSUC cSUC chyp'm f1 f2 f0 f3 f3 cPOWER * part cface_map f1 cSUC cSUC chyp'm f1 f2 f0 f3 f3 c==> c< f4 chyp'm f1 f2 f0 f3 c==> cis_split_condition f1 f2 f0 f3 c<= cSUC cSUC f4 cSUC chyp'm f1 f2 f0 f3
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!X. (!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c)))) |- ((((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c)) = T)
T c==> ! ! c==> c/\ cIN b1 b0 ! c==> cIN b2 b0 c<= b1 b2 c= cmin_num b0 b1 c= c==> c/\ cIN f0 f1 ! c==> cIN b0 f1 c<= f0 b0 c= cmin_num f1 f0 cT
+ |- ((~ T) = F)
T c= c~ cT cF
- |- ((\p'. (!q'. (((i <= (SUC ((((hyp'm H) NF) L) x))) = p') ==> ((p' ==> (((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)) = q')) ==> (((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))) = (p' ==> q')))))) p')
T * / ! c==> c= c<= f0 cSUC chyp'm f1 f2 f3 f4 b0 c==> c==> b0 c= c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 b1 c= c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 c==> b0 b1 f5
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ |- (((!x. (((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))))) ==> ((\x. (((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))))) x)) = ((\x. (((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))))) x))
T c= c==> ! c==> cis_split_condition f0 f1 f2 b0 c/\ ! c==> c<= b1 cSUC chyp'm f0 f1 f2 b0 c= cPOWER * part cloop_map f2 b1 b0 cPOWER * part cface_map f0 b1 b0 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 b0 b0 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 b0 b0 * / c==> cis_split_condition f0 f1 f2 b0 c/\ ! c==> c<= b1 cSUC chyp'm f0 f1 f2 b0 c= cPOWER * part cloop_map f2 b1 b0 cPOWER * part cface_map f0 b1 b0 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 b0 b0 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 b0 b0 f3 * / c==> cis_split_condition f0 f1 f2 b0 c/\ ! c==> c<= b1 cSUC chyp'm f0 f1 f2 b0 c= cPOWER * part cloop_map f2 b1 b0 cPOWER * part cface_map f0 b1 b0 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 b0 b0 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 b0 b0 f3
- |- ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))) = (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))))
T c= c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3
- (((real_ge (real_of_int _10158340)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158341)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (a = T) |- ((((~ T) ==> b) = ((~ b) ==> T)) = (((~ a) ==> b) = ((~ b) ==> a)))
T c==> c= f0 cT c= c= c==> c~ cT f1 c==> c~ f1 cT c= c==> c~ f0 f1 c==> c~ f1 f0
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
+ |- (((int_le (int_of_num (NUMERAL _0))) (int_of_num x)) ==> (((~ ((int_le (int_of_num x)) (int_of_num c'))) /\ ((int_lt (int_of_num c')) (int_of_num x))) \/ (((int_le (int_of_num x)) (int_of_num c')) /\ (~ ((int_lt (int_of_num c')) (int_of_num x))))))
T c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c\/ c/\ c~ cint_le cint_of_num f0 cint_of_num f1 cint_lt cint_of_num f1 cint_of_num f0 c/\ cint_le cint_of_num f0 cint_of_num f1 c~ cint_lt cint_of_num f1 cint_of_num f0
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
+ ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) |- (((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) ==> (((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)) = F)) = (((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)) = F))
T c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c= c==> c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c= c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cF c= c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cF
+ |- (((!H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))))))) ==> ((\H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))))))) H)) = ((\H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))))))) H))
T c= c==> ! ! ! ! c==> cis_split_condition b0 b1 b2 b3 c/\ ! c==> c<= b4 cSUC chyp'm b0 b1 b2 b3 c= cPOWER * part cloop_map b2 b4 b3 cPOWER * part cface_map b0 b4 b3 c~ c= cPOWER * part cloop_map b2 cSUC cSUC chyp'm b0 b1 b2 b3 b3 cPOWER * part cface_map b0 cSUC cSUC chyp'm b0 b1 b2 b3 b3 * / ! ! ! c==> cis_split_condition b0 b1 b2 b3 c/\ ! c==> c<= b4 cSUC chyp'm b0 b1 b2 b3 c= cPOWER * part cloop_map b2 b4 b3 cPOWER * part cface_map b0 b4 b3 c~ c= cPOWER * part cloop_map b2 cSUC cSUC chyp'm b0 b1 b2 b3 b3 cPOWER * part cface_map b0 cSUC cSUC chyp'm b0 b1 b2 b3 b3 f0 * / ! ! ! c==> cis_split_condition b0 b1 b2 b3 c/\ ! c==> c<= b4 cSUC chyp'm b0 b1 b2 b3 c= cPOWER * part cloop_map b2 b4 b3 cPOWER * part cface_map b0 b4 b3 c~ c= cPOWER * part cloop_map b2 cSUC cSUC chyp'm b0 b1 b2 b3 b3 cPOWER * part cface_map b0 cSUC cSUC chyp'm b0 b1 b2 b3 b3 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))), (c' < ((((hyp'm H) NF) L) x)), ((((is_split_condition H) NF) L) x) |- ((((SUC (SUC c')) <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) = ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))
T c==> c~ c= cPOWER * part cloop_map f0 cSUC cSUC chyp'm f1 f2 f0 f3 f3 cPOWER * part cface_map f1 cSUC cSUC chyp'm f1 f2 f0 f3 f3 c==> c< f4 chyp'm f1 f2 f0 f3 c==> cis_split_condition f1 f2 f0 f3 c= c==> c<= cSUC cSUC f4 cSUC chyp'm f1 f2 f0 f3 c= cPOWER * part cloop_map f0 cSUC cSUC f4 f3 cPOWER * part cface_map f1 cSUC cSUC f4 f3 c= cPOWER * part cloop_map f0 cSUC cSUC f4 f3 cPOWER * part cface_map f1 cSUC cSUC f4 f3
- |- ((\p'. (!q'. ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) = p') ==> ((p' ==> ((!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))) = q')) ==> ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ ! c==> c<= b2 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b2 f3 cPOWER * part cface_map f0 b2 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 b0 c==> c==> b0 c= ! c==> c< b2 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b2 f3 cPOWER * part cface_map f0 cSUC cSUC b2 f3 b1 c= c==> c/\ ! c==> c<= b2 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b2 f3 cPOWER * part cface_map f0 b2 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b2 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b2 f3 cPOWER * part cface_map f0 cSUC cSUC b2 f3 c==> b0 b1 f4
- |- (((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> ((!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))) = (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))))) ==> ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))) = (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))))) = ((((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))) = (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) ==> (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))))))
T c= c==> c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c= ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 c= c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 c= c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3
+ (!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))), (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))), ((((is_split_condition H) NF) L) x) |- (((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) = T)
T c==> ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c==> c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> cis_split_condition f0 f1 f2 f3 c= c==> c< f4 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC f4 f3 cPOWER * part cface_map f0 cSUC cSUC f4 f3 cT
+ ((((is_split_condition H) NF) L) x) |- ((((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))) ==> ((~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))) /\ (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))))
T c==> cis_split_condition f0 f1 f2 f3 c==> c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c/\ c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3
+ (!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))), (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))), (c' < ((((hyp'm H) NF) L) x)), ((((is_split_condition H) NF) L) x) |- ((c' < ((((hyp'm H) NF) L) x)) /\ ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))
T c==> ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c==> c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> c< f4 chyp'm f0 f1 f2 f3 c==> cis_split_condition f0 f1 f2 f3 c/\ c< f4 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC f4 f3 cPOWER * part cface_map f0 cSUC cSUC f4 f3
+ |- ((a = F) ==> (((~ a) ==> b) = ((~ b) ==> a)))
T c==> c= f0 cF c= c==> c~ f0 f1 c==> c~ f1 f0
+ |- (((!t. ((t = T) \/ (t = F))) ==> ((\t. ((t = T) \/ (t = F))) a)) = ((\t. ((t = T) \/ (t = F))) a))
T c= c==> ! c\/ c= b0 cT c= b0 cF * / c\/ c= b0 cT c= b0 cF f0 * / c\/ c= b0 cT c= b0 cF f0
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num c')) ==> (((int_le (int_of_num (NUMERAL _0))) (int_of_num ((((hyp'm H) NF) L) x))) ==> ((~ ((((is_split_condition H) NF) L) x)) \/ (((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x)) \/ ((~ ((int_lt (int_of_num c')) (int_of_num ((((hyp'm H) NF) L) x)))) \/ ((int_le ((int_add (int_of_num c')) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((int_add (int_of_num ((((hyp'm H) NF) L) x))) (int_of_num (NUMERAL (BIT1 _0)))))))))) = (((int_le (int_of_num (NUMERAL _0))) (int_of_num ((((hyp'm H) NF) L) x))) ==> ((~ ((((is_split_condition H) NF) L) x)) \/ (((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x)) \/ ((~ ((int_lt (int_of_num c')) (int_of_num ((((hyp'm H) NF) L) x)))) \/ ((int_le ((int_add (int_of_num c')) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((int_add (int_of_num ((((hyp'm H) NF) L) x))) (int_of_num (NUMERAL (BIT1 _0))))))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num chyp'm f1 f2 f3 f4 c\/ c~ cis_split_condition f1 f2 f3 f4 c\/ c= cPOWER * part cloop_map f3 c+ c+ chyp'm f1 f2 f3 f4 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f4 cPOWER * part cface_map f1 c+ c+ chyp'm f1 f2 f3 f4 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f4 c\/ c~ cint_lt cint_of_num f0 cint_of_num chyp'm f1 f2 f3 f4 cint_le cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_add cint_of_num chyp'm f1 f2 f3 f4 cint_of_num cNUMERAL cBIT1 c_0 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num chyp'm f1 f2 f3 f4 c\/ c~ cis_split_condition f1 f2 f3 f4 c\/ c= cPOWER * part cloop_map f3 c+ c+ chyp'm f1 f2 f3 f4 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f4 cPOWER * part cface_map f1 c+ c+ chyp'm f1 f2 f3 f4 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f4 c\/ c~ cint_lt cint_of_num f0 cint_of_num chyp'm f1 f2 f3 f4 cint_le cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_add cint_of_num chyp'm f1 f2 f3 f4 cint_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((int_le (int_of_num (NUMERAL _0))) (int_of_num ((((hyp'm H) NF) L) x)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num chyp'm f0 f1 f2 f3
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (c' < ((((hyp'm H) NF) L) x)) |- ((c' < ((((hyp'm H) NF) L) x)) = T)
T c==> c< f0 chyp'm f1 f2 f3 f4 c= c< f0 chyp'm f1 f2 f3 f4 cT
+ (((real_ge (real_of_int _10158340)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158341)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10158348)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158349)) (real_of_num (NUMERAL _0))) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0)))))))) |- (~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5
+ (((real_ge (real_of_int _10158348)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158349)) (real_of_num (NUMERAL _0))) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0)))))))) |- ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ |- (T ==> (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) = ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))))
T c==> cT c= c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3
+ (((real_ge (real_of_int _10158340)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158341)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10158348)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158349)) (real_of_num (NUMERAL _0))) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0)))))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\x. (!y. ((x = y) = (y = x)))) x)
T * / ! c= c= b0 b1 c= b1 b0 f0
+ |- ((~ F) = T)
T c= c~ cF cT
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))), (i <= (SUC ((((hyp'm H) NF) L) x))) |- ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))
T c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> c<= f4 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 f4 f3 cPOWER * part cface_map f0 f4 f3
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!L. (!x. (((((is_split_condition H) NF) L) x) ==> ((min_num (GSPEC (\GEN%PVAR%8609. (?m. (((SETSPEC GEN%PVAR%8609) (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))) m))))) = ((((hyp'm H) NF) L) x))))) = T)
T c= ! ! c==> cis_split_condition f0 f1 b0 b1 c= cmin_num * part cGSPEC / c? / cSETSPEC b2 c~ c= cPOWER * part cloop_map b0 cSUC cSUC b3 b1 cPOWER * part cface_map f0 cSUC cSUC b3 b1 b3 chyp'm f0 f1 b0 b1 cT
- |- (((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))) = ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))))
T c= c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!p'. (!q'. (((i <= (SUC ((((hyp'm H) NF) L) x))) = p') ==> ((p' ==> (((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)) = q')) ==> (((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((i <= (SUC ((((hyp'm H) NF) L) x))) = p') ==> ((p' ==> (((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)) = q')) ==> (((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((i <= (SUC ((((hyp'm H) NF) L) x))) = p') ==> ((p' ==> (((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)) = q')) ==> (((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c<= f0 cSUC chyp'm f1 f2 f3 f4 b0 c==> c==> b0 c= c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 b1 c= c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 c==> b0 b1 * / ! c==> c= c<= f0 cSUC chyp'm f1 f2 f3 f4 b0 c==> c==> b0 c= c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 b1 c= c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 c==> b0 b1 f5 * / ! c==> c= c<= f0 cSUC chyp'm f1 f2 f3 f4 b0 c==> c==> b0 c= c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 b1 c= c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 c==> b0 b1 f5
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10158340)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158341)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- (((real_ge (real_of_int _10158348)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158349)) (real_of_num (NUMERAL _0))) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0)))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!X. (!c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c)))) |- ((\c. (((c IN X) /\ (!c'. ((c' IN X) ==> (c <= c')))) ==> ((min_num X) = c))) c)
T c==> ! ! c==> c/\ cIN b1 b0 ! c==> cIN b2 b0 c<= b1 b2 c= cmin_num b0 b1 * / c==> c/\ cIN b0 f0 ! c==> cIN b1 f0 c<= b0 b1 c= cmin_num f0 b0 f1
+ (!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))), (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))), ((((is_split_condition H) NF) L) x) |- ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))
T c==> ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c==> c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> cis_split_condition f0 f1 f2 f3 c==> c< f4 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC f4 f3 cPOWER * part cface_map f0 cSUC cSUC f4 f3
+ (!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) |- ((\i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) (SUC (SUC c')))
T c==> ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 * / c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 cSUC cSUC f4
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))))))) NF)
T * / ! ! c==> cis_split_condition f0 b0 b1 b2 c/\ ! c==> c<= b3 cSUC chyp'm f0 b0 b1 b2 c= cPOWER * part cloop_map b1 b3 b2 cPOWER * part cface_map f0 b3 b2 c~ c= cPOWER * part cloop_map b1 cSUC cSUC chyp'm f0 b0 b1 b2 b2 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 b0 b1 b2 b2 f1
+ (((real_ge (real_of_int _10158348)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158349)) (real_of_num (NUMERAL _0))) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0)))))))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ |- (((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) ==> ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)) = ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
+ |- ((((~ ((int_le (int_of_num x)) (int_of_num c'))) /\ ((int_lt (int_of_num c')) (int_of_num x))) \/ (((int_le (int_of_num x)) (int_of_num c')) /\ (~ ((int_lt (int_of_num c')) (int_of_num x))))) = ((~ (x <= c')) = (c' < x)))
T c= c\/ c/\ c~ cint_le cint_of_num f0 cint_of_num f1 cint_lt cint_of_num f1 cint_of_num f0 c/\ cint_le cint_of_num f0 cint_of_num f1 c~ cint_lt cint_of_num f1 cint_of_num f0 c= c~ c<= f0 f1 c< f1 f0
- ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)) |- ((((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))
T c==> c= cPOWER * part cloop_map f0 cSUC cSUC chyp'm f1 f2 f0 f3 f3 cPOWER * part cface_map f1 cSUC cSUC chyp'm f1 f2 f0 f3 f3 c= cPOWER * part cface_map f1 cSUC cSUC chyp'm f1 f2 f0 f3 f3 cPOWER * part cloop_map f0 cSUC cSUC chyp'm f1 f2 f0 f3 f3
+ ((((is_split_condition H) NF) L) x) |- (((((is_split_condition H) NF) L) x) = T)
T c==> cis_split_condition f0 f1 f2 f3 c= cis_split_condition f0 f1 f2 f3 cT
- (((real_ge (real_of_int _10158340)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158341)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ |- ((T = t) = t)
T c= c= cT f0 f0
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158340)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158341)) /\ ((((real_le (real_of_int _10158341)) (real_of_int _10158340)) \/ ((real_le (real_of_int _10158341)) (real_of_int _10158340))) /\ (((real_le ((real_add (real_of_int _10158340)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)) \/ ((real_le ((real_add (real_of_int _10158340)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ c\/ creal_le creal_of_int f1 creal_of_int f0 creal_le creal_of_int f1 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1
+ |- (!p'. (!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3
+ (((real_ge (real_of_int _10158348)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158349)) (real_of_num (NUMERAL _0))) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0)))))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ |- (((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q')))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3 cT
+ |- ((\p'. (!q'. ((((((is_split_condition H) NF) L) x) = p') ==> ((p' ==> (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) = q')) ==> ((((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x))))) = (p' ==> q')))))) p')
T * / ! c==> c= cis_split_condition f0 f1 f2 f3 b0 c==> c==> b0 c= c/\ ! c==> c<= b2 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b2 f3 cPOWER * part cface_map f0 b2 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 b1 c= c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b2 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b2 f3 cPOWER * part cface_map f0 b2 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> b0 b1 f4
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158340)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10158341)) /\ ((((real_le (real_of_int _10158341)) (real_of_int _10158340)) \/ ((real_le (real_of_int _10158341)) (real_of_int _10158340))) /\ (((real_le ((real_add (real_of_int _10158340)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)) \/ ((real_le ((real_add (real_of_int _10158340)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))))))) |- (((real_ge (real_of_int _10158340)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158341)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ c\/ creal_le creal_of_int f1 creal_of_int f0 creal_le creal_of_int f1 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) |- (((((SUC (SUC c')) <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) = ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))
T c==> ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c= c==> c==> c<= cSUC cSUC f4 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC f4 f3 cPOWER * part cface_map f0 cSUC cSUC f4 f3 c= cPOWER * part cloop_map f2 cSUC cSUC f4 f3 cPOWER * part cface_map f0 cSUC cSUC f4 f3 c= cPOWER * part cloop_map f2 cSUC cSUC f4 f3 cPOWER * part cface_map f0 cSUC cSUC f4 f3
+ |- ((~ ((int_le x) y)) = ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x))
T c= c~ cint_le f0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
+ |- ((T /\ t) = t)
T c= c/\ cT f0 f0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
+ ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) |- (((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)) = F)
T c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c= c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cF
- (((real_ge (real_of_int _10158340)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158341)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge (real_of_int _10158341)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
+ |- ((\t. ((t = T) \/ (t = F))) a)
T * / c\/ c= b0 cT c= b0 cF f0
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
+ (((real_ge (real_of_int _10158340)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158341)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158340))) ((real_add (real_of_int _10158341)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_int _10158340)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158341))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ |- ((!H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> ((min_num (GSPEC (\GEN%PVAR%8609. (?m. (((SETSPEC GEN%PVAR%8609) (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))) m))))) = ((((hyp'm H) NF) L) x))))))) = (!H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> (((((hyp'm H) NF) L) x) = (min_num (GSPEC (\GEN%PVAR%8609. (?m. (((SETSPEC GEN%PVAR%8609) (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))) m))))))))))))
T c= ! ! ! ! c==> cis_split_condition b0 b1 b2 b3 c= cmin_num * part cGSPEC / c? / cSETSPEC b4 c~ c= cPOWER * part cloop_map b2 cSUC cSUC b5 b3 cPOWER * part cface_map b0 cSUC cSUC b5 b3 b5 chyp'm b0 b1 b2 b3 ! ! ! ! c==> cis_split_condition b0 b1 b2 b3 c= chyp'm b0 b1 b2 b3 cmin_num * part cGSPEC / c? / cSETSPEC b4 c~ c= cPOWER * part cloop_map b2 cSUC cSUC b5 b3 cPOWER * part cface_map b0 cSUC cSUC b5 b3 b5
+ ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))), ((((is_split_condition H) NF) L) x) |- (((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))) /\ (!c'. ((c' < ((((hyp'm H) NF) L) x)) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)))))
T c==> c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 c==> cis_split_condition f0 f1 f2 f3 c/\ c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3 ! c==> c< b0 chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
+ |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
+ (((real_ge (real_of_int _10158348)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158349)) (real_of_num (NUMERAL _0))) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0)))))))) |- F
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 cF
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- ((c' < ((((hyp'm H) NF) L) x)) ==> (((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x)) = ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))
T c==> c< f0 chyp'm f1 f2 f3 f4 c= c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4
- (((real_ge (real_of_int _10158348)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10158349)) (real_of_num (NUMERAL _0))) /\ (((((is_split_condition H) NF) L) x) /\ ((~ ((((POWER (loop_map L)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x) = (((POWER (face_map H)) ((((((hyp'm H) NF) L) x) + (NUMERAL (BIT1 _0))) + (NUMERAL (BIT1 _0)))) x))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0)))))))) |- (((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0))) = (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158348))) ((real_add (real_of_int _10158349)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10158348)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10158349)))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ cis_split_condition f2 f3 f4 f5 c/\ c~ c= cPOWER * part cloop_map f4 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 cPOWER * part cface_map f2 c+ c+ chyp'm f2 f3 f4 f5 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f5 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- (((SUC (SUC c')) <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) |- ((((SUC (SUC c')) <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))) /\ (((SUC (SUC c')) <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) (SUC (SUC c'))) x) = (((POWER (face_map H)) (SUC (SUC c'))) x))))
T c==> c==> c<= cSUC cSUC f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c/\ c==> c<= cSUC cSUC f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4 c==> c<= cSUC cSUC f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 cSUC cSUC f0 f4 cPOWER * part cface_map f1 cSUC cSUC f0 f4
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\q'. (((i <= (SUC ((((hyp'm H) NF) L) x))) = p') ==> ((p' ==> (((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)) = q')) ==> (((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))) = (p' ==> q'))))) q')
T * / c==> c= c<= f0 cSUC chyp'm f1 f2 f3 f4 f5 c==> c==> f5 c= c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 b0 c= c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 c==> f5 b0 f6
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- |- (((!q'. (((i <= (SUC ((((hyp'm H) NF) L) x))) = p') ==> ((p' ==> (((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)) = q')) ==> (((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))) = (p' ==> q'))))) ==> ((\q'. (((i <= (SUC ((((hyp'm H) NF) L) x))) = p') ==> ((p' ==> (((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)) = q')) ==> (((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))) = (p' ==> q'))))) q')) = ((\q'. (((i <= (SUC ((((hyp'm H) NF) L) x))) = p') ==> ((p' ==> (((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)) = q')) ==> (((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c<= f0 cSUC chyp'm f1 f2 f3 f4 f5 c==> c==> f5 c= c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 b0 c= c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 c==> f5 b0 * / c==> c= c<= f0 cSUC chyp'm f1 f2 f3 f4 f5 c==> c==> f5 c= c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 b0 c= c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 c==> f5 b0 f6 * / c==> c= c<= f0 cSUC chyp'm f1 f2 f3 f4 f5 c==> c==> f5 c= c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 b0 c= c==> c<= f0 cSUC chyp'm f1 f2 f3 f4 c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cface_map f1 f0 f4 c==> f5 b0 f6
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
