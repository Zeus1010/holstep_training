N Aq8.uniq_fst_betwn_parts
C |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f3 cl'y f0 f2 f3 cl'z f0 f1 f2 f3
D TRUTH
A |- T
T cT
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D I_DEF
A |- (I = (\x. x))
T c= part cI / b0
D FST
A |- (!x. (!y. ((FST (x , y)) = x)))
T c= cFST c, f0 f1 f0
D SND
A |- (!x. (!y. ((SND (x , y)) = y)))
T c= cSND c, f0 f1 f1
D HD
A |- ((HD ((CONS h) t)) = h)
T c= cHD cCONS f0 f1 f0
D MAP_o
A |- (!f. (!g. (!l. (((MAP (g o f)) l) = ((MAP g) ((MAP f) l))))))
T c= cMAP * * part co f0 f1 f2 cMAP f0 cMAP f1 f2
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D INTER
A |- (!s. (!t. ((s INTER t) = (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN s) /\ (x IN t))) x)))))))
T c= * * part cINTER f0 f1 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 f0 cIN b1 f1 b1
D IN_SING
A |- (!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y))))
T c= cIN f0 * * part cINSERT f1 part cEMPTY c= f0 f1
D IN_SET_OF_LIST
A |- (!x. (!l. ((x IN (set_of_list l)) = ((MEM x) l))))
T c= cIN f0 * part cset_of_list f1 cMEM f0 f1
D Fan.POWER_0
A |- (!f. (((POWER f) (NUMERAL _0)) = I))
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
D Hypermap.simple_hypermap
A |- (!H. ((simple_hypermap H) = (!x. ((x IN (dart H)) ==> ((((node H) x) INTER ((face H) x)) = (x INSERT EMPTY))))))
T c= csimple_hypermap f0 ! c==> cIN b0 * part cdart f0 c= * * part cINTER * * part cnode f0 b0 * * part cface f0 b0 * * part cINSERT b0 part cEMPTY
D Hypermap.is_restricted
A |- (!H. ((is_restricted H) = ((~ ((dart H) = EMPTY)) /\ ((planar_hypermap H) /\ ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x)))))))))))))))
T c= cis_restricted f0 c/\ c~ c= * part cdart f0 part cEMPTY c/\ cplanar_hypermap f0 c/\ cplain_hypermap f0 c/\ cconnected_hypermap f0 c/\ csimple_hypermap f0 c/\ cis_no_double_joins f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0
D Seq2.next_prev_id
A |- (!x. (!s. ((uniq s) ==> (((next_el s) ((prev_el s) x)) = x))))
T c==> cuniq f0 c= cnext_el f0 cprev_el f0 f1 f1
D List_hypermap.dart_in_face
A |- (!d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d)))))
T c= cMEM f0 clist_of_darts f1 cMEM f0 cfind_face f1 f0
D List_hypermap.uniq_find_face
A |- (!d. (!L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) d)))))
T c==> cuniq clist_of_darts f0 cuniq cfind_face f0 f1
D List_hypermap.mem_find_face_imp_faces_eq
A |- (!d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2))))))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2
D List_hypermap.face_of_list
A |- (!L. (!d. (((good_list L) /\ ((MEM d) (list_of_darts L))) ==> (((face (hypermap_of_list L)) d) = (set_of_list ((find_face L) d))))))
T c==> c/\ cgood_list f0 cMEM f1 clist_of_darts f0 c= * * part cface chypermap_of_list f0 f1 * part cset_of_list cfind_face f0 f1
D Lp_gen_theory.dart_list_all
A |- (!L. ((good_list L) ==> (!P. ((!d. ((d IN (dart (hypermap_of_list L))) ==> (P d))) = (!d. (((MEM d) (list_of_darts L)) ==> (P d)))))))
T c==> cgood_list f0 ! c= ! c==> cIN b1 * part cdart chypermap_of_list f0 * b0 b1 ! c==> cMEM b1 clist_of_darts f0 * b0 b1
D Tame_defs2.good_list
A |- (!L. ((good_list L) = ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))))))
T c= cgood_list f0 c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0
D Tame_defs2.normal_list
A |- (!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))))))
T c= cnormal_list f0 f1 c/\ cuniq cflatten f1 c/\ call / c~ c= b0 cNIL f1 c/\ call * part cf_last f0 f1 c/\ call * part cloop_list f0 f1 ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1
D Tame_defs2.ntrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))))))
T c= cntrans f0 f1 f2 f3 f4 cFST cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2
D Tame_defs2.rtrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))))
T c= crtrans f0 f1 f2 f3 f4 cSND cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2
D Tame_defs2.ytrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))))))
T c= cytrans f0 f1 f2 f3 f4 cl'y f0 crtrans f0 f1 f2 f3 f4 f3
D Tame_defs2.ztrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))
T c= cztrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3
D Tame_defs2.marked_list
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))))
T c= cmarked_list f0 f1 f2 f3 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3
D Tame_list.uniq_map
A |- (!y. (!f. (((uniq y) /\ (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v))))) ==> (uniq ((MAP f) y)))))
T c==> c/\ cuniq f0 ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 cuniq cMAP f1 f0
D Tame_list.betwn_mem
A |- (!f. (!u. (!v. (!w. (((MEM w) (((betwn f) u) v)) ==> ((MEM w) f))))))
T c==> cMEM f0 cbetwn f1 f2 f3 cMEM f0 f1
D Tame_list.uniq_flatten_uniq
A |- (!L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s))))
T c==> c/\ cuniq cflatten f0 cMEM f1 f0 cuniq f1
D Tame_list.MEM_hypermap_of_list_node
A |- (!L. (!x. (!y. (((good_list_nodes L) /\ ((MEM x) (list_of_darts L))) ==> ((y IN ((node (hypermap_of_list L)) x)) = (((FST x) = (FST y)) /\ ((MEM y) (list_of_darts L))))))))
T c==> c/\ cgood_list_nodes f0 cMEM f1 clist_of_darts f0 c= cIN f2 * * part cnode chypermap_of_list f0 f1 c/\ c= cFST f1 cFST f2 cMEM f2 clist_of_darts f0
D Ohcgkfu.uniq_betwn
A |- (!r. (((uniq r) /\ (((MEM z) r) /\ (((MEM y) r) /\ (~ (z = y))))) ==> (uniq (((betwn r) z) y))))
T c==> c/\ cuniq f0 c/\ cMEM f1 f0 c/\ cMEM f2 f0 c~ c= f1 f2 cuniq cbetwn f0 f1 f2
D Pplhulj.marked_list_of_dart
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))))
T c==> cmarked_list f0 f1 f2 f3 cMEM f3 clist_of_darts f0
D Hojodcm.ytrans_mem_rtrans_v0
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f2
D Hojodcm.mem_ztrans_rtrans_v0
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2
D Hojodcm.z_not_eq_ytrans_v0
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c~ c= cztrans f0 f1 f2 f3 cNUMERAL c_0 cytrans f0 f1 f2 f3 cNUMERAL c_0
D Hojodcm.PPLHULJ_v0
A |- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= f4 cfind_face f0 f3 c= f5 cnext_el f4 f3 c/\ cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 c/\ cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 c< cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 cindexf f5 cztrans f0 f1 f2 f3 cNUMERAL c_0 f4
D Aq8.parts_f_betwn_pure
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x))) = ((MAP (\x. ((CONS x) NIL))) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x)))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c= cparts f0 cbetwn cfind_face f0 f3 cl'y f0 f2 f3 cl'z f0 f1 f2 f3 cMAP / cCONS b0 cNIL cbetwn cfind_face f0 f3 cl'y f0 f2 f3 cl'z f0 f1 f2 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((\f. (((find_face L) x) = f)) f) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z))))) = T)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c= c==> * / c= cfind_face f1 f5 b0 f8 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f5 f3 f2 cT
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((!x. (((\f. (((find_face L) x) = f)) x) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z)))))) ==> ((?f. (((find_face L) x) = f)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z)))))) = ((?f. (((find_face L) x) = f)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c= c==> ! c==> * / c= cfind_face f1 f5 b1 b0 cuniq cMAP / cFST cHD b1 cparts f1 cbetwn cfind_face f1 f5 f3 f2 c==> c? / c= cfind_face f1 f5 b0 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f5 f3 f2 c==> c? / c= cfind_face f1 f5 b0 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f5 f3 f2
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((((MEM y) f) /\ (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f)))) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn f) y) z))))) = ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn f) y) z))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> c= cl'y f0 f1 f2 f4 c==> c= cl'z f0 f5 f1 f2 f6 c==> c= cfind_face f0 f2 f7 c==> cmarked_list f0 f5 f1 f2 c= c==> c/\ cMEM f4 f7 c/\ cMEM f6 f7 c< cindexf f3 f4 f7 cindexf f3 f6 f7 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn f7 f4 f6 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f5 f1 f2 c/\ c~ cfinal_list f0 f1 c/\ c= f7 cfind_face f0 f2 c= f3 cnext_el f7 f2 c/\ cMEM cytrans f0 f5 f1 f2 cNUMERAL c_0 f7 c/\ cMEM cztrans f0 f5 f1 f2 cNUMERAL c_0 f7 c< cindexf f3 cytrans f0 f5 f1 f2 cNUMERAL c_0 f7 cindexf f3 cztrans f0 f5 f1 f2 cNUMERAL c_0 f7 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn f7 f4 f6
- |- ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)
T * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
+ |- ((\d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d))))) d)
T * / ! c= cMEM b0 clist_of_darts b1 cMEM b0 cfind_face b1 b0 f0
+ |- (((!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) ==> ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i)) = ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i))
T c= c==> ! c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4 * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM y) f) /\ (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f)))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((MEM y) f) /\ (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f)))) /\ (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn f) y) z)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f8 c==> c/\ cMEM f3 f8 c/\ cMEM f2 f8 c< cindexf f7 f3 f8 cindexf f7 f2 f8 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c/\ c/\ cMEM f3 f8 c/\ cMEM f2 f8 c< cindexf f7 f3 f8 cindexf f7 f2 f8 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn f8 f3 f2
+ |- ((\f. (!u. (!v. (!w. (((MEM w) (((betwn f) u) v)) ==> ((MEM w) f)))))) f)
T * / ! ! ! c==> cMEM b3 cbetwn b0 b1 b2 cMEM b3 b0 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cl'z f1 f0 f2 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f6 f2 c==> cMEM f5 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f3 f6 f5
+ ((((node (hypermap_of_list L)) u) INTER (set_of_list f)) = (u INSERT EMPTY)) |- (((v = u) ==> (u = v)) = ((v IN (((node (hypermap_of_list L)) u) INTER (set_of_list f))) ==> (u = v)))
T c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f1 * part cset_of_list f2 * * part cINSERT f1 part cEMPTY c= c==> c= f3 f1 c= f1 f3 c==> cIN f3 * * part cINTER * * part cnode chypermap_of_list f0 f1 * part cset_of_list f2 c= f1 f3
+ |- (((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ztrans L) N) r) x) (NUMERAL _0))) = ((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) (((((ztrans L) N) r) x) (NUMERAL _0))))
T c= c= cztrans f0 f1 f2 f3 cNUMERAL c_0 cztrans f0 f1 f2 f3 cNUMERAL c_0 * / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 cztrans f0 f1 f2 f3 cNUMERAL c_0
+ |- ((((~ ((dart (hypermap_of_list L)) = EMPTY)) /\ ((planar_hypermap (hypermap_of_list L)) /\ ((plain_hypermap (hypermap_of_list L)) /\ ((connected_hypermap (hypermap_of_list L)) /\ ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) /\ ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))))))))))) ==> (u = v)) = ((is_restricted (hypermap_of_list L)) ==> (u = v)))
T c= c==> c/\ c~ c= * part cdart chypermap_of_list f0 part cEMPTY c/\ cplanar_hypermap chypermap_of_list f0 c/\ cplain_hypermap chypermap_of_list f0 c/\ cconnected_hypermap chypermap_of_list f0 c/\ ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c/\ cis_no_double_joins chypermap_of_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cis_node_nondegenerate chypermap_of_list f0 ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c= f1 f2 c==> cis_restricted chypermap_of_list f0 c= f1 f2
- |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ (is_restricted (hypermap_of_list L)), (good_list L), ((MEM r) N) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cMEM f1 f2 c/\ cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f7 c==> cMEM f3 clist_of_darts f0 c==> cuniq cflatten f2 c==> call / c~ c= b0 cNIL f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> c= cnext_el f1 f6 f5 c==> cMEM f5 f1 c==> cMEM f4 f1 c==> c= cl'z f0 f2 f1 f3 f5 c==> c~ c= f5 f4 c==> c= cnext_el f7 f3 f8 c==> c= cfind_face f0 f3 f7 c==> cMEM f4 f7 c==> cMEM f5 f7 c==> c< cindexf f8 f4 f7 cindexf f8 f5 f7 c==> c= cfind_face f0 f4 f7 c==> c= cparts f0 cbetwn f7 f4 f5 cMAP / cCONS b0 cNIL cbetwn f7 f4 f5 c==> cuniq cbetwn f7 f4 f5 c==> cMEM f9 cbetwn f7 f4 f5 c==> cMEM f10 cbetwn f7 f4 f5 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f0 f9 f7 c==> c= cfind_face f0 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c==> cs_flag_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f4 cl'z f0 f3 f1 f2
- |- (((!x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) ==> ((\x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) x)) = ((\x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) x))
T c= c==> ! ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 * / ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0 * / ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f6 f2 c==> cMEM f5 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f3 f6 cl'z f1 f0 f2 f3
- |- (((all a) s) = (!x. (((MEM x) s) ==> (a x))))
T c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0
- |- ((((~ (~ F)) = F) ==> (F ==> (~ (~ F)))) = (F ==> (~ (~ F))))
T c= c==> c= c~ c~ cF cF c==> cF c~ c~ cF c==> cF c~ c~ cF
+ |- (((!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))) ==> ((\N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))) N)) = ((\N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))) N))
T c= c==> ! ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= b3 cfind_face f0 b2 c= b4 cnext_el b3 b2 c/\ cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 c/\ cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 c< cindexf b4 cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 cindexf b4 cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 * / ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= b3 cfind_face f0 b2 c= b4 cnext_el b3 b2 c/\ cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 c/\ cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 c< cindexf b4 cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 cindexf b4 cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 f1 * / ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= b3 cfind_face f0 b2 c= b4 cnext_el b3 b2 c/\ cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 c/\ cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 c< cindexf b4 cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 cindexf b4 cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 f1
- |- (((!r. (((core L) r) = ((MAP (FST o HD)) ((parts L) r)))) ==> ((\r. (((core L) r) = ((MAP (FST o HD)) ((parts L) r)))) r)) = ((\r. (((core L) r) = ((MAP (FST o HD)) ((parts L) r)))) r))
T c= c==> ! c= ccore f0 b0 cMAP * * part co part cFST part cHD cparts f0 b0 * / c= ccore f0 b0 cMAP * * part co part cFST part cHD cparts f0 b0 f1 * / c= ccore f0 b0 cMAP * * part co part cFST part cHD cparts f0 b0 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f1 f2 cNUMERAL c_0 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cs_flag_list f0 f3 f1 f2 c==> cmarked_list f0 f3 f1 f2 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f3 f1 f2
- |- ((\L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))) L)
T * / c= cMEM f0 cflatten b0 c? / c/\ cMEM b1 b0 cMEM f0 b1 f1
+ (is_restricted (hypermap_of_list L)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cs_flag_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 c==> c= cprev_el f1 f5 f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f7 c==> cMEM f2 clist_of_darts f0 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f0 f3 c==> call * part cloop_list f0 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c==> cuniq f1 c==> c= cnext_el f1 f6 f5 c==> cMEM f5 f1 c==> cMEM f4 f1 c==> c= cl'z f0 f3 f1 f2 f5 c==> c~ c= f5 f4 c==> c= cnext_el f7 f2 f8 c==> c= cfind_face f0 f2 f7 c==> cMEM f4 f7 c==> cMEM f5 f7 c==> c< cindexf f8 f4 f7 cindexf f8 f5 f7 c==> c= cfind_face f0 f4 f7 c==> c= cparts f0 cbetwn f7 f4 f5 cMAP / cCONS b0 cNIL cbetwn f7 f4 f5 c==> cuniq cbetwn f7 f4 f5 c==> cMEM f9 cbetwn f7 f4 f5 c==> cMEM f10 cbetwn f7 f4 f5 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f0 f9 f7 c==> c= cfind_face f0 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) r)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f3 f6 cl'z f1 f0 f2 f3
+ (is_restricted (hypermap_of_list L)), (good_list L) |- ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cfind_face f0 f1 f2 c==> cMEM f3 f2 c==> cMEM f4 f2 c==> c< cindexf f5 f3 f2 cindexf f5 f4 f2 c==> c= cfind_face f0 f3 f2 c==> c= cparts f0 cbetwn f2 f3 f4 cMAP / cCONS b0 cNIL cbetwn f2 f3 f4 c==> cuniq cbetwn f2 f3 f4 c==> cMEM f6 cbetwn f2 f3 f4 c==> cMEM f7 cbetwn f2 f3 f4 c==> c= cFST f6 cFST f7 c==> cMEM f6 f2 c==> cMEM f7 f2 c==> c= cfind_face f0 f6 f2 c==> c= cfind_face f0 f7 f2 c==> cIN f7 * * part cnode chypermap_of_list f0 f6 c= f6 f7
- |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- ((\L. (!s. (((f_last L) s) = (((next_el s) (LAST s)) = ((f_list L) (LAST s)))))) L)
T * / ! c= cf_last b0 b1 c= cnext_el b1 cLAST b1 cf_list b0 cLAST b1 f0
- |- (((!L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) ==> ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L)) = ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L))
T c= c==> ! ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0 * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f1 f2 cNUMERAL c_0 f4 c==> c= cl'y f0 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cs_flag_list f0 f3 f1 f2 c==> cmarked_list f0 f3 f1 f2 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f6 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f3 f1 f2
- (good_list L), (good_list_nodes L) |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))) = (\r. (!x. ((((((marked_list L) N) r) x) /\ (~ ((final_list L) r))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c= / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 c~ c= cztrans f0 f1 b0 b1 cNUMERAL c_0 cytrans f0 f1 b0 b1 cNUMERAL c_0 / ! c==> c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 c~ c= cztrans f0 f1 b0 b1 cNUMERAL c_0 cytrans f0 f1 b0 b1 cNUMERAL c_0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f4 f3 c==> cMEM f3 f1 c==> cMEM f5 f1 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
+ |- (((!l. ((x IN (set_of_list l)) = ((MEM x) l))) ==> ((\l. ((x IN (set_of_list l)) = ((MEM x) l))) l)) = ((\l. ((x IN (set_of_list l)) = ((MEM x) l))) l))
T c= c==> ! c= cIN f0 * part cset_of_list b0 cMEM f0 b0 * / c= cIN f0 * part cset_of_list b0 cMEM f0 b0 f1 * / c= cIN f0 * part cset_of_list b0 cMEM f0 b0 f1
- |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM y) f) /\ (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f)))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn f) y) z))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f8 c==> c/\ cMEM f3 f8 c/\ cMEM f2 f8 c< cindexf f7 f3 f8 cindexf f7 f2 f8 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn f8 f3 f2
- |- ((?y. ((((l'y L) r) x) = y)) ==> (?y. ((((l'y L) r) x) = y)))
T c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
- (((all a) s) = (!x. (((MEM x) s) ==> (a x)))) |- ((!x. (((MEM x) s) ==> (a x))) = ((all a) s))
T c==> c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0 c= ! c==> cMEM b0 f1 * f0 b0 call f0 f1
+ |- ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r)
T * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L))
T c= c==> ! ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0
- |- ((\s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) s1)
T * / ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cs_flag_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f4 cl'z f0 f3 f1 f2
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))) |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))) = (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f4 cl'z f0 f1 f2 f3 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f4 cl'z f0 f1 f2 f3
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
+ |- ((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x))))))) = T)
T c= ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 b0 cl'y f0 f2 b0 cl'z f0 f1 f2 b0 cT
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)) = T)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 cT
- |- ((((find_face L) x) = f) = ((\f. (((find_face L) x) = f)) f))
T c= c= cfind_face f0 f1 f2 * / c= cfind_face f0 f1 b0 f2
- |- (((!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) ==> ((\s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) s2)) = ((\s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) s2))
T c= c==> ! c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 * / c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2 * / c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2
+ (~ (z = y)), (uniq ((find_face L) x)), (((find_face L) x) = f), ((MEM y) f), ((MEM z) f) |- (((uniq (((betwn f) y) z)) ==> (uniq ((MAP (\x. (FST x))) (((betwn f) y) z)))) = ((((uniq f) /\ (((MEM y) f) /\ (((MEM z) f) /\ (~ (y = z))))) ==> (uniq (((betwn f) y) z))) ==> (uniq ((MAP (\x. (FST x))) (((betwn f) y) z)))))
T c==> c~ c= f0 f1 c==> cuniq cfind_face f2 f3 c==> c= cfind_face f2 f3 f4 c==> cMEM f1 f4 c==> cMEM f0 f4 c= c==> cuniq cbetwn f4 f1 f0 cuniq cMAP / cFST b0 cbetwn f4 f1 f0 c==> c==> c/\ cuniq f4 c/\ cMEM f1 f4 c/\ cMEM f0 f4 c~ c= f1 f0 cuniq cbetwn f4 f1 f0 cuniq cMAP / cFST b0 cbetwn f4 f1 f0
- |- (((!s. (((f_last L) s) = (((next_el s) (LAST s)) = ((f_list L) (LAST s))))) ==> ((\s. (((f_last L) s) = (((next_el s) (LAST s)) = ((f_list L) (LAST s))))) s)) = ((\s. (((f_last L) s) = (((next_el s) (LAST s)) = ((f_list L) (LAST s))))) s))
T c= c==> ! c= cf_last f0 b0 c= cnext_el b0 cLAST b0 cf_list f0 cLAST b0 * / c= cf_last f0 b0 c= cnext_el b0 cLAST b0 cf_list f0 cLAST b0 f1 * / c= cf_last f0 b0 c= cnext_el b0 cLAST b0 cf_list f0 cLAST b0 f1
- ((\w. (((next_el ((find_face L) x)) x) = w)) w) |- (((\w. (((next_el ((find_face L) x)) x) = w)) w) /\ (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c/\ * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
+ |- (((!t. ((s INTER t) = (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN s) /\ (x IN t))) x)))))) ==> ((\t. ((s INTER t) = (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN s) /\ (x IN t))) x)))))) t)) = ((\t. ((s INTER t) = (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN s) /\ (x IN t))) x)))))) t))
T c= c==> ! c= * * part cINTER f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 f0 cIN b2 b0 b2 * / c= * * part cINTER f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 f0 cIN b2 b0 b2 f1 * / c= * * part cINTER f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 f0 cIN b2 b0 b2 f1
+ |- (((!y. ((x IN (y INSERT EMPTY)) = (x = y))) ==> ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y)) = ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y))
T c= c==> ! c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1
- (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) = T)
T c==> cis_restricted chypermap_of_list f0 c= cis_restricted chypermap_of_list f0 cT
- (is_no_double_joins (hypermap_of_list L)) |- ((is_no_double_joins (hypermap_of_list L)) = T)
T c==> cis_no_double_joins chypermap_of_list f0 c= cis_no_double_joins chypermap_of_list f0 cT
- |- (((!x'. (((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) x') ==> (?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)))) ==> ((?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) ==> (?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)))) = ((?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) ==> (?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z))))
T c= c==> ! c==> * / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b1 b0 c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b1 c==> c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 c==> c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0
- |- (((!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) ==> ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x)) = ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x))
T c= c==> ! c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3 * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3
- |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
+ (((find_face L) x) = f) |- ((uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn f) y) z)))) = (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z)))))
T c==> c= cfind_face f0 f1 f2 c= cuniq cMAP / cFST cHD b0 cparts f0 cbetwn f2 f3 f4 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f1 f3 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f8 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cMEM f3 f8 c==> cMEM f2 f8 c==> c< cindexf f7 f3 f8 cindexf f7 f2 f8 c==> c= cfind_face f1 f3 f8 c==> c= cparts f1 cbetwn f8 f3 f2 cMAP / cCONS b0 cNIL cbetwn f8 f3 f2 c==> cuniq cbetwn f8 f3 f2 c==> cMEM f9 cbetwn f8 f3 f2 c==> cMEM f10 cbetwn f8 f3 f2 c==> c= cFST f9 cFST f10 c==> cMEM f9 f8 c==> cMEM f10 f8 c==> c= cfind_face f1 f9 f8 c==> c= cfind_face f1 f10 f8 c==> cIN f10 * * part cnode chypermap_of_list f1 f9 c= f9 f10
+ (is_restricted (hypermap_of_list L)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cs_flag_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 c==> c= cprev_el f1 f5 f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f7 c==> cMEM f2 clist_of_darts f0 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f0 f3 c==> call * part cloop_list f0 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c==> cuniq f1 c==> c= cnext_el f1 f6 f5 c==> cMEM f5 f1 c==> cMEM f4 f1 c==> c= cl'z f0 f3 f1 f2 f5 c==> c~ c= f5 f4 c==> c= cnext_el f7 f2 f8 c==> c= cfind_face f0 f2 f7 c==> cMEM f4 f7 c==> cMEM f5 f7 c==> c< cindexf f8 f4 f7 cindexf f8 f5 f7 c==> c= cfind_face f0 f4 f7 c==> c= cparts f0 cbetwn f7 f4 f5 cMAP / cCONS b0 cNIL cbetwn f7 f4 f5 c==> cuniq cbetwn f7 f4 f5 c==> cMEM f9 cbetwn f7 f4 f5 c==> cMEM f10 cbetwn f7 f4 f5 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f0 f9 f7 c==> c= cfind_face f0 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (uniq (((betwn f) y) z)), (good_list L), (good_list_nodes L), ((FST u) = (FST v)), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) f), ((MEM u) (((betwn f) y) z)), ((MEM v) (((betwn f) y) z)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM v) f) ==> (u = v))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cuniq cbetwn f6 f3 f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f7 cFST f8 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f9 f2 c==> c= cnext_el cfind_face f1 f5 f5 f10 c==> c= cprev_el f4 f2 f9 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f6 c==> c= cfind_face f1 f3 f6 c==> c= cparts f1 cbetwn f6 f3 f2 cMAP / cCONS b0 cNIL cbetwn f6 f3 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f10 f3 f6 cindexf f10 f2 f6 c==> cMEM f7 f6 c==> cMEM f7 cbetwn f6 f3 f2 c==> cMEM f8 cbetwn f6 f3 f2 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f6 c==> cMEM f3 f4 c==> cMEM f2 f6 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cMEM f8 f6 c= f7 f8
- |- (((f_last L) s) = (((next_el s) (LAST s)) = ((f_list L) (LAST s))))
T c= cf_last f0 f1 c= cnext_el f1 cLAST f1 cf_list f0 cLAST f1
- |- ((\L. ((darts_of_list L) = (set_of_list (list_of_darts L)))) L)
T * / c= * part cdarts_of_list b0 * part cset_of_list clist_of_darts b0 f0
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ |- ((v IN (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN ((node (hypermap_of_list L)) u)) /\ ((MEM x) f))) x))))) = ((v IN ((node (hypermap_of_list L)) u)) /\ ((MEM v) f)))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cnode chypermap_of_list f1 f2 cMEM b1 f3 b1 c/\ cIN f0 * * part cnode chypermap_of_list f1 f2 cMEM f0 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn f) y) z)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f8 c==> c= cfind_face f1 f3 f8 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f7 f3 f8 cindexf f7 f2 f8 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f8 c==> cMEM f3 f4 c==> cMEM f2 f8 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> c= cparts f1 cbetwn f8 f3 f2 cMAP / cCONS b0 cNIL cbetwn f8 f3 f2 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn f8 f3 f2
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c/\ cuniq cflatten f2 c==> call / c~ c= b0 cNIL f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> c= cnext_el f1 f5 f4 c==> cMEM f4 f1 c==> cMEM f6 f1 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f6 cl'z f0 f2 f1 f3
+ |- ((\d. (!L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) d))))) x)
T * / ! c==> cuniq clist_of_darts b1 cuniq cfind_face b1 b0 f0
- |- (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))
T c= cMEM f0 ccat f1 f2 c\/ cMEM f0 f1 cMEM f0 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f3 f6 cl'z f1 f0 f2 f3
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f4 f3 c==> cMEM f3 f1 c==> cMEM f5 f1 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((uniq (list_of_darts L)) ==> (uniq ((find_face L) x))) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c==> c==> cuniq clist_of_darts f0 cuniq cfind_face f0 f2 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cs_flag_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f5 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f4 cl'z f0 f3 f1 f2
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) |- (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 c~ c= cztrans f0 f1 b0 b1 cNUMERAL c_0 cytrans f0 f1 b0 b1 cNUMERAL c_0
+ (uniq (((betwn f) y) z)) |- ((uniq (((betwn f) y) z)) = T)
T c==> cuniq cbetwn f0 f1 f2 c= cuniq cbetwn f0 f1 f2 cT
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x))))), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cMEM f2 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c/\ c= cnext_el f1 f2 cf_list f0 f2 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 cs_flag_list f0 f3 f1 f2 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f2 cl'y f0 f1 f2 cl'z f0 f3 f1 f2
+ |- (((!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) ==> ((\r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) r)) = ((\r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) r))
T c= c==> ! ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 * / ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2 * / ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2
+ |- (((!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) ==> ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L)) = ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L))
T c= c==> ! ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((\y. ((((l'y L) r) x) = y)) y) ==> (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cs_flag_list f0 f3 f1 f2 c==> cmarked_list f0 f3 f1 f2 c==> * / c= cl'y f0 f1 f2 b0 f4 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f2 cl'y f0 f1 f2 cl'z f0 f3 f1 f2
- |- ((((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1) = ((\z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) z1))
T c= c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 f4 * / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 f4
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) z) ==> (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f1 f2 cNUMERAL c_0 f4 c==> c= cl'y f0 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cs_flag_list f0 f3 f1 f2 c==> cmarked_list f0 f3 f1 f2 c==> * / c= cztrans f0 f3 f1 f2 cNUMERAL c_0 b0 f6 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f3 f1 f2
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))) = (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f4 cl'z f0 f1 f2 f3 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f4 cl'z f0 f1 f2 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (uniq (((betwn f) y) z)), (good_list L), (good_list_nodes L), ((FST u) = (FST v)), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) (((betwn f) y) z)), ((MEM v) (((betwn f) y) z)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((MEM u) (((betwn f) y) z)) ==> ((MEM u) f)) ==> (u = v))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cuniq cbetwn f6 f3 f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f7 cFST f8 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f9 f2 c==> c= cnext_el cfind_face f1 f5 f5 f10 c==> c= cprev_el f4 f2 f9 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f6 c==> c= cfind_face f1 f3 f6 c==> c= cparts f1 cbetwn f6 f3 f2 cMAP / cCONS b0 cNIL cbetwn f6 f3 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f10 f3 f6 cindexf f10 f2 f6 c==> cMEM f7 cbetwn f6 f3 f2 c==> cMEM f8 cbetwn f6 f3 f2 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f6 c==> cMEM f3 f4 c==> cMEM f2 f6 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> c==> cMEM f7 cbetwn f6 f3 f2 cMEM f7 f6 c= f7 f8
+ |- (((uniq (((betwn f) y) z)) /\ (!u. (!v. ((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ (((\x. (FST x)) u) = ((\x. (FST x)) v)))) ==> (u = v))))) ==> (uniq ((MAP (\x. (FST x))) (((betwn f) y) z))))
T c==> c/\ cuniq cbetwn f0 f1 f2 ! ! c==> c/\ cMEM b0 cbetwn f0 f1 f2 c/\ cMEM b1 cbetwn f0 f1 f2 c= * / cFST b2 b0 * / cFST b2 b1 c= b0 b1 cuniq cMAP / cFST b0 cbetwn f0 f1 f2
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) /\ (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cs_flag_list f0 f3 f1 f2 c==> cmarked_list f0 f3 f1 f2 c/\ cs_flag_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f4 cl'z f0 f3 f1 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (is_restricted (hypermap_of_list L)), (good_list L) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) /\ ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cis_restricted chypermap_of_list f1 c==> cgood_list f1 c/\ ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cuniq f2 c==> c= cnext_el f2 f3 f4 c==> cMEM f4 f2 c==> cMEM f5 f2 c==> c= cl'z f1 f0 f2 f6 f4 c==> c~ c= f4 f5 c==> c= cnext_el f7 f6 f8 c==> c= cfind_face f1 f6 f7 c==> cMEM f5 f7 c==> cMEM f4 f7 c==> c< cindexf f8 f5 f7 cindexf f8 f4 f7 c==> c= cfind_face f1 f5 f7 c==> c= cparts f1 cbetwn f7 f5 f4 cMAP / cCONS b0 cNIL cbetwn f7 f5 f4 c==> cuniq cbetwn f7 f5 f4 c==> cMEM f9 cbetwn f7 f5 f4 c==> cMEM f10 cbetwn f7 f5 f4 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f1 f9 f7 c==> c= cfind_face f1 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f1 f9 c= f9 f10
- |- ((\x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))) x)
T * / ! c= cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 cztrans f0 f1 f2 b0 b1 f3
+ (is_restricted (hypermap_of_list L)), (good_list L), ((MEM x) r) |- (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cMEM f1 f2 c/\ cMEM f1 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f1 cf_list f0 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f1 c==> cs_flag_list f0 f3 f2 f1 c==> c= cl'y f0 f2 f1 f4 c==> c= cprev_el f2 f5 f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f7 c==> cMEM f1 clist_of_darts f0 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f0 f3 c==> call * part cloop_list f0 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c==> cuniq f2 c==> c= cnext_el f2 f6 f5 c==> cMEM f5 f2 c==> cMEM f4 f2 c==> c= cl'z f0 f3 f2 f1 f5 c==> c~ c= f5 f4 c==> c= cnext_el f7 f1 f8 c==> c= cfind_face f0 f1 f7 c==> cMEM f4 f7 c==> cMEM f5 f7 c==> c< cindexf f8 f4 f7 cindexf f8 f5 f7 c==> c= cfind_face f0 f4 f7 c==> c= cparts f0 cbetwn f7 f4 f5 cMAP / cCONS b0 cNIL cbetwn f7 f4 f5 c==> cuniq cbetwn f7 f4 f5 c==> cMEM f9 cbetwn f7 f4 f5 c==> cMEM f10 cbetwn f7 f4 f5 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f0 f9 f7 c==> c= cfind_face f0 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
+ (is_restricted (hypermap_of_list L)), (good_list L), ((normal_list L) N) |- (((normal_list L) N) /\ (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cnormal_list f0 f1 c/\ cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c==> c= cl'y f0 f2 f3 f4 c==> c= cprev_el f2 f5 f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f7 c==> cMEM f3 clist_of_darts f0 c==> cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f2 c==> c= cnext_el f2 f6 f5 c==> cMEM f5 f2 c==> cMEM f4 f2 c==> c= cl'z f0 f1 f2 f3 f5 c==> c~ c= f5 f4 c==> c= cnext_el f7 f3 f8 c==> c= cfind_face f0 f3 f7 c==> cMEM f4 f7 c==> cMEM f5 f7 c==> c< cindexf f8 f4 f7 cindexf f8 f5 f7 c==> c= cfind_face f0 f4 f7 c==> c= cparts f0 cbetwn f7 f4 f5 cMAP / cCONS b0 cNIL cbetwn f7 f4 f5 c==> cuniq cbetwn f7 f4 f5 c==> cMEM f9 cbetwn f7 f4 f5 c==> cMEM f10 cbetwn f7 f4 f5 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f0 f9 f7 c==> c= cfind_face f0 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
+ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (((face (hypermap_of_list L)) u) = (set_of_list f)), (((find_face L) u) = f), ((MEM u) f), ((MEM v) f), (v IN ((node (hypermap_of_list L)) u)) |- (((!d. ((d IN (dart (hypermap_of_list L))) ==> ((\u. ((((node (hypermap_of_list L)) u) INTER ((face (hypermap_of_list L)) u)) = (u INSERT EMPTY))) d))) = (!d. (((MEM d) (list_of_darts L)) ==> ((\u. ((((node (hypermap_of_list L)) u) INTER ((face (hypermap_of_list L)) u)) = (u INSERT EMPTY))) d)))) ==> (u = v))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> c= * * part cface chypermap_of_list f0 f1 * part cset_of_list f2 c==> c= cfind_face f0 f1 f2 c==> cMEM f1 f2 c==> cMEM f3 f2 c==> cIN f3 * * part cnode chypermap_of_list f0 f1 c==> c= ! c==> cIN b0 * part cdart chypermap_of_list f0 * / c= * * part cINTER * * part cnode chypermap_of_list f0 b1 * * part cface chypermap_of_list f0 b1 * * part cINSERT b1 part cEMPTY b0 ! c==> cMEM b0 clist_of_darts f0 * / c= * * part cINTER * * part cnode chypermap_of_list f0 b1 * * part cface chypermap_of_list f0 b1 * * part cINSERT b1 part cEMPTY b0 c= f1 f3
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f3 cl'y f0 f1 f3 cl'z f0 f2 f1 f3
+ (uniq (flatten N)) |- ((uniq (flatten N)) = T)
T c==> cuniq cflatten f0 c= cuniq cflatten f0 cT
+ (is_restricted (hypermap_of_list L)), (good_list L), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f2 f3 c==> cMEM f3 f1 c==> cnormal_list f0 f1 c==> c= cnext_el f3 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c==> cs_flag_list f0 f1 f3 f2 c==> c= cl'y f0 f3 f2 f4 c==> c= cprev_el f3 f5 f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f7 c==> cMEM f2 clist_of_darts f0 c==> cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f3 c==> c= cnext_el f3 f6 f5 c==> cMEM f5 f3 c==> cMEM f4 f3 c==> c= cl'z f0 f1 f3 f2 f5 c==> c~ c= f5 f4 c==> c= cnext_el f7 f2 f8 c==> c= cfind_face f0 f2 f7 c==> cMEM f4 f7 c==> cMEM f5 f7 c==> c< cindexf f8 f4 f7 cindexf f8 f5 f7 c==> c= cfind_face f0 f4 f7 c==> c= cparts f0 cbetwn f7 f4 f5 cMAP / cCONS b0 cNIL cbetwn f7 f4 f5 c==> cuniq cbetwn f7 f4 f5 c==> cMEM f9 cbetwn f7 f4 f5 c==> cMEM f10 cbetwn f7 f4 f5 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f0 f9 f7 c==> c= cfind_face f0 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((uniq f) /\ (((MEM y) f) /\ (((MEM z) f) /\ (~ (y = z))))) ==> (uniq (((betwn f) y) z))) ==> (uniq ((MAP (\x. (FST x))) (((betwn f) y) z))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f8 c==> c= cfind_face f1 f3 f8 c==> c= cparts f1 cbetwn f8 f3 f2 cMAP / cCONS b0 cNIL cbetwn f8 f3 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f7 f3 f8 cindexf f7 f2 f8 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f8 c==> cMEM f3 f4 c==> cMEM f2 f8 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> c==> c/\ cuniq f8 c/\ cMEM f3 f8 c/\ cMEM f2 f8 c~ c= f3 f2 cuniq cbetwn f8 f3 f2 cuniq cMAP / cFST b0 cbetwn f8 f3 f2
- (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) |- ((((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY))) = T)
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c= c==> cMEM f1 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 f1 * * part cface chypermap_of_list f0 f1 * * part cINSERT f1 part cEMPTY cT
+ (uniq (list_of_darts L)), (((find_face L) x) = f), ((MEM y) f) |- (((((find_face L) y) = f) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn f) y) z))))) = ((((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) x))) ==> (((find_face L) y) = ((find_face L) x))) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn f) y) z))))))
T c==> cuniq clist_of_darts f0 c==> c= cfind_face f0 f1 f2 c==> cMEM f3 f2 c= c==> c= cfind_face f0 f3 f2 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn f2 f3 f4 c==> c==> c/\ cuniq clist_of_darts f0 cMEM f3 cfind_face f0 f1 c= cfind_face f0 f3 cfind_face f0 f1 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn f2 f3 f4
+ |- ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x)
T * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3
+ |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
- (~ ((dart (hypermap_of_list L)) = EMPTY)) |- (((~ (EMPTY = (dart (hypermap_of_list L)))) ==> ((EMPTY = (dart (hypermap_of_list L))) = F)) = ((EMPTY = (dart (hypermap_of_list L))) = F))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c= c==> c~ c= part cEMPTY * part cdart chypermap_of_list f0 c= c= part cEMPTY * part cdart chypermap_of_list f0 cF c= c= part cEMPTY * part cdart chypermap_of_list f0 cF
- |- (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)))
T c==> c= cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0
+ (is_restricted (hypermap_of_list L)), (good_list L) |- ((((prev_el r) z) = z1) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cprev_el f1 f2 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f4 c==> cMEM f5 clist_of_darts f0 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> cMEM f2 f1 c==> cMEM f7 f1 c==> c= cl'z f0 f6 f1 f5 f2 c==> c~ c= f2 f7 c==> c= cnext_el f4 f5 f8 c==> c= cfind_face f0 f5 f4 c==> cMEM f7 f4 c==> cMEM f2 f4 c==> c< cindexf f8 f7 f4 cindexf f8 f2 f4 c==> c= cfind_face f0 f7 f4 c==> c= cparts f0 cbetwn f4 f7 f2 cMAP / cCONS b0 cNIL cbetwn f4 f7 f2 c==> cuniq cbetwn f4 f7 f2 c==> cMEM f9 cbetwn f4 f7 f2 c==> cMEM f10 cbetwn f4 f7 f2 c==> c= cFST f9 cFST f10 c==> cMEM f9 f4 c==> cMEM f10 f4 c==> c= cfind_face f0 f9 f4 c==> c= cfind_face f0 f10 f4 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))) ==> (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c/\ c==> cfinal_list f0 f1 cflag_list f0 f2 c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f3 cl'y f0 f1 f3 cl'z f0 f2 f1 f3
- |- ((((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) z) ==> (?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z))) = T)
T c= c==> * / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 f4 c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 cT
- (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1) |- ((\z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) z1)
T c==> c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 f4 * / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 f4
+ |- (((?w. (((next_el ((find_face L) x)) x) = w)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z))))) = (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z)))))
T c= c==> c? / c= cnext_el cfind_face f0 f1 f1 b0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f1 f2 f3 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f1 f2 f3
- |- (((!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) ==> ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1)) = ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1))
T c= c==> ! ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1 * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
+ |- (((((((l'z L) N) r) x) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))) = (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))
T c= c==> c= cl'z f0 f1 f2 f3 f4 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f5 cl'z f0 f1 f2 f3 c==> c= cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f5 cl'z f0 f1 f2 f3
- |- ((\r. (((core L) r) = ((MAP (FST o HD)) ((parts L) r)))) r)
T * / c= ccore f0 b0 cMAP * * part co part cFST part cHD cparts f0 b0 f1
+ |- ((\d. (((good_list L) /\ ((MEM d) (list_of_darts L))) ==> (((face (hypermap_of_list L)) d) = (set_of_list ((find_face L) d))))) u)
T * / c==> c/\ cgood_list f0 cMEM b0 clist_of_darts f0 c= * * part cface chypermap_of_list f0 b0 * part cset_of_list cfind_face f0 b0 f1
+ ((\z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) z1) |- (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)
T c==> * / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 f4 c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 f4
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c/\ cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
+ |- ((\s. (((uniq (flatten N)) /\ ((MEM s) N)) ==> (uniq s))) r)
T * / c==> c/\ cuniq cflatten f0 cMEM b0 f0 cuniq b0 f1
+ |- (((!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM v) ((find_face L) d2))) ==> (((find_face L) v) = ((find_face L) d2))))) ==> ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM v) ((find_face L) d2))) ==> (((find_face L) v) = ((find_face L) d2))))) x)) = ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM v) ((find_face L) d2))) ==> (((find_face L) v) = ((find_face L) d2))))) x))
T c= c==> ! ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1 * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cMEM f3 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f4 cl'z f0 f2 f1 f3
+ |- ((\L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s)))) N)
T * / ! c==> c/\ cuniq cflatten b0 cMEM b1 b0 cuniq b1 f0
+ |- (((!L. (!x. (!y. (((good_list_nodes L) /\ ((MEM x) (list_of_darts L))) ==> ((y IN ((node (hypermap_of_list L)) x)) = (((FST x) = (FST y)) /\ ((MEM y) (list_of_darts L)))))))) ==> ((\L. (!x. (!y. (((good_list_nodes L) /\ ((MEM x) (list_of_darts L))) ==> ((y IN ((node (hypermap_of_list L)) x)) = (((FST x) = (FST y)) /\ ((MEM y) (list_of_darts L)))))))) L)) = ((\L. (!x. (!y. (((good_list_nodes L) /\ ((MEM x) (list_of_darts L))) ==> ((y IN ((node (hypermap_of_list L)) x)) = (((FST x) = (FST y)) /\ ((MEM y) (list_of_darts L)))))))) L))
T c= c==> ! ! ! c==> c/\ cgood_list_nodes b0 cMEM b1 clist_of_darts b0 c= cIN b2 * * part cnode chypermap_of_list b0 b1 c/\ c= cFST b1 cFST b2 cMEM b2 clist_of_darts b0 * / ! ! c==> c/\ cgood_list_nodes b0 cMEM b1 clist_of_darts b0 c= cIN b2 * * part cnode chypermap_of_list b0 b1 c/\ c= cFST b1 cFST b2 cMEM b2 clist_of_darts b0 f0 * / ! ! c==> c/\ cgood_list_nodes b0 cMEM b1 clist_of_darts b0 c= cIN b2 * * part cnode chypermap_of_list b0 b1 c/\ c= cFST b1 cFST b2 cMEM b2 clist_of_darts b0 f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> call * part cf_last f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> c= cnext_el f1 f5 f4 c==> cMEM f4 f1 c==> cMEM f6 f1 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f6 cl'z f0 f2 f1 f3
+ |- ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N)
T * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f5 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f3 f6 cl'z f1 f0 f2 f3
+ (is_restricted (hypermap_of_list L)), (good_list L), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c==> cs_flag_list f0 f1 f3 f2 c==> c= cl'y f0 f3 f2 f4 c==> c= cprev_el f3 f5 f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f7 c==> cMEM f2 clist_of_darts f0 c==> cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f3 c==> c= cnext_el f3 f6 f5 c==> cMEM f5 f3 c==> cMEM f4 f3 c==> c= cl'z f0 f1 f3 f2 f5 c==> c~ c= f5 f4 c==> c= cnext_el f7 f2 f8 c==> c= cfind_face f0 f2 f7 c==> cMEM f4 f7 c==> cMEM f5 f7 c==> c< cindexf f8 f4 f7 cindexf f8 f5 f7 c==> c= cfind_face f0 f4 f7 c==> c= cparts f0 cbetwn f7 f4 f5 cMAP / cCONS b0 cNIL cbetwn f7 f4 f5 c==> cuniq cbetwn f7 f4 f5 c==> cMEM f9 cbetwn f7 f4 f5 c==> cMEM f10 cbetwn f7 f4 f5 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f0 f9 f7 c==> c= cfind_face f0 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))))), ((((marked_list L) N) r) x) |- (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f3 cl'y f0 f1 f3 cl'z f0 f2 f1 f3
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cl'y f0 f1 f2 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c==> cmarked_list f0 f4 f1 f2 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f4 f1 f2 cNUMERAL c_0 f5 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f3 cl'z f0 f4 f1 f2
+ |- ((\u. (!v. (!w. (((MEM w) (((betwn f) u) v)) ==> ((MEM w) f))))) y)
T * / ! ! c==> cMEM b2 cbetwn f0 b0 b1 cMEM b2 f0 f1
+ |- (((!x. (!s. ((uniq s) ==> (((next_el s) ((prev_el s) x)) = x)))) ==> ((\x. (!s. ((uniq s) ==> (((next_el s) ((prev_el s) x)) = x)))) (((((ztrans L) N) r) x) (NUMERAL _0)))) = ((\x. (!s. ((uniq s) ==> (((next_el s) ((prev_el s) x)) = x)))) (((((ztrans L) N) r) x) (NUMERAL _0))))
T c= c==> ! ! c==> cuniq b1 c= cnext_el b1 cprev_el b1 b0 b0 * / ! c==> cuniq b1 c= cnext_el b1 cprev_el b1 b0 b0 cztrans f0 f1 f2 f3 cNUMERAL c_0 * / ! c==> cuniq b1 c= cnext_el b1 cprev_el b1 b0 b0 cztrans f0 f1 f2 f3 cNUMERAL c_0
- |- (((!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) ==> ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s)) = ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s))
T c= c==> ! c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cfind_face f1 f3 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f5 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cMEM f6 f2 c==> c= cl'z f1 f0 f2 f3 f5 c==> c~ c= f5 f6 c==> c= cnext_el f7 f3 f8 c==> c= cfind_face f1 f3 f7 c==> cMEM f6 f7 c==> cMEM f5 f7 c==> c< cindexf f8 f6 f7 cindexf f8 f5 f7 c==> c= cfind_face f1 f6 f7 c==> c= cparts f1 cbetwn f7 f6 f5 cMAP / cCONS b0 cNIL cbetwn f7 f6 f5 c==> cuniq cbetwn f7 f6 f5 c==> cMEM f9 cbetwn f7 f6 f5 c==> cMEM f10 cbetwn f7 f6 f5 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f1 f9 f7 c==> c= cfind_face f1 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f1 f9 c= f9 f10
- |- (((!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))) ==> ((\i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))) i)) = ((\i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))) i))
T c= c==> ! c= cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 cztrans f0 f1 f2 f3 b0 * / c= cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 cztrans f0 f1 f2 f3 b0 f4 * / c= cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 cztrans f0 f1 f2 f3 b0 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((\w. (((next_el ((find_face L) x)) x) = w)) w) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z))))) = T)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c= c==> * / c= cnext_el cfind_face f1 f5 f5 b0 f7 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f5 f3 f2 cT
- ((\z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) z1) |- (((((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1) ==> (?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1))) = (?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)))
T c==> * / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 f4 c= c==> c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 f4 c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))))))))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cuniq f7 c==> cMEM f2 clist_of_darts f0 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f4 f3 c==> cMEM f3 f1 c==> cMEM f5 f1 c==> c= cl'z f0 f6 f1 f2 f3 c==> c~ c= f3 f5 c==> c= cnext_el f7 f2 f8 c==> c= cfind_face f0 f2 f7 c==> cMEM f5 f7 c==> cMEM f3 f7 c==> c< cindexf f8 f5 f7 cindexf f8 f3 f7 c==> c= cfind_face f0 f5 f7 c==> c= cparts f0 cbetwn f7 f5 f3 cMAP / cCONS b0 cNIL cbetwn f7 f5 f3 c==> cuniq cbetwn f7 f5 f3 c==> cMEM f9 cbetwn f7 f5 f3 c==> cMEM f10 cbetwn f7 f5 f3 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f0 f9 f7 c==> c= cfind_face f0 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((?w. (((next_el ((find_face L) x)) x) = w)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c==> c? / c= cnext_el cfind_face f1 f5 f5 b0 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f5 f3 f2
+ (good_list L), (good_list_nodes L), ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))) |- (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f3 cl'y f0 f2 f3 cl'z f0 f1 f2 f3
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- |- (((!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) ==> ((\s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) s1)) = ((\s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) s1))
T c= c==> ! ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 * / ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1 * / ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
- (((find_face L) x) = f) |- ((((find_face L) x) = f) /\ (?f. (((find_face L) x) = f)))
T c==> c= cfind_face f0 f1 f2 c/\ c= cfind_face f0 f1 f2 c? / c= cfind_face f0 f1 b0
- (good_list L), (good_list_nodes L) |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) = (\r. (!x. ((((((marked_list L) N) r) x) /\ (~ ((final_list L) r))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c= / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 / ! c==> c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0
+ |- (((!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) ==> ((\N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) N)) = ((\N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) N))
T c= c==> ! ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 * / ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 f1 * / ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 f1
- |- (((!x'. (((\y. ((((l'y L) r) x) = y)) x') ==> (?y. ((((l'y L) r) x) = y)))) ==> ((?y. ((((l'y L) r) x) = y)) ==> (?y. ((((l'y L) r) x) = y)))) = ((?y. ((((l'y L) r) x) = y)) ==> (?y. ((((l'y L) r) x) = y))))
T c= c==> ! c==> * / c= cl'y f0 f1 f2 b1 b0 c? / c= cl'y f0 f1 f2 b1 c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0 c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (uniq (((betwn f) y) z)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), ((!u. (!v. ((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((FST u) = (FST v)))) ==> (u = v)))) ==> (uniq ((MAP (\x. (FST x))) (((betwn f) y) z)))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (uniq ((MAP (\x. (FST x))) (((betwn f) y) z)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cuniq cbetwn f6 f3 f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f7 f2 c==> c= cnext_el cfind_face f1 f5 f5 f8 c==> c= cprev_el f4 f2 f7 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f6 c==> c= cfind_face f1 f3 f6 c==> c= cparts f1 cbetwn f6 f3 f2 cMAP / cCONS b0 cNIL cbetwn f6 f3 f2 c==> c==> ! ! c==> c/\ cMEM b0 cbetwn f6 f3 f2 c/\ cMEM b1 cbetwn f6 f3 f2 c= cFST b0 cFST b1 c= b0 b1 cuniq cMAP / cFST b0 cbetwn f6 f3 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f8 f3 f6 cindexf f8 f2 f6 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f6 c==> cMEM f3 f4 c==> cMEM f2 f6 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 cuniq cMAP / cFST b0 cbetwn f6 f3 f2
+ (good_list L), ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))) |- (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x)))))
T c==> cgood_list f0 c==> c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f3 cl'y f0 f2 f3 cl'z f0 f1 f2 f3
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c/\ c= cnext_el f1 f2 cf_list f0 f2 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 cs_flag_list f0 f3 f1 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f2 cl'y f0 f1 f2 cl'z f0 f3 f1 f2
- ((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) z) |- ((((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z))) = (?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)))
T c==> * / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 f4 c= c==> c= cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c==> c= cfind_face f1 f5 f8 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f5 f3 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq ((find_face L) x)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c==> cuniq cfind_face f0 f2 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((uniq r) ==> (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0)))) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f4 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c==> c==> cuniq f2 c= cnext_el f2 cprev_el f2 cztrans f1 f0 f2 f3 cNUMERAL c_0 cztrans f1 f0 f2 f3 cNUMERAL c_0 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f3 f6 cl'z f1 f0 f2 f3
- (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)) |- ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))
T c==> c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cztrans f0 f1 f2 f3 f4 c= cztrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3
+ (is_restricted (hypermap_of_list L)), (good_list L), (((find_face L) u) = f), (((find_face L) v) = f), ((MEM u) f), ((MEM v) f) |- ((((find_face L) v) = f) /\ ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cfind_face f0 f1 f2 c==> c= cfind_face f0 f3 f2 c==> cMEM f1 f2 c==> cMEM f3 f2 c/\ c= cfind_face f0 f3 f2 c==> cIN f3 * * part cnode chypermap_of_list f0 f1 c= f1 f3
- |- (((!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) ==> ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)) = ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f))
T c= c==> ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
- |- (((!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ==> ((\ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ram1)) = ((\ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ram1))
T c= c==> ! ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 * / ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 f3 * / ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 f3
+ |- (((!v. (!w. (((MEM w) (((betwn f) y) v)) ==> ((MEM w) f)))) ==> ((\v. (!w. (((MEM w) (((betwn f) y) v)) ==> ((MEM w) f)))) z)) = ((\v. (!w. (((MEM w) (((betwn f) y) v)) ==> ((MEM w) f)))) z))
T c= c==> ! ! c==> cMEM b1 cbetwn f0 f1 b0 cMEM b1 f0 * / ! c==> cMEM b1 cbetwn f0 f1 b0 cMEM b1 f0 f2 * / ! c==> cMEM b1 cbetwn f0 f1 b0 cMEM b1 f0 f2
+ (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z) |- (((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))) = (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))
T c==> c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 f4 c==> c= cztrans f1 f2 f0 f3 cNUMERAL c_0 f5 c= c==> c= cprev_el f0 f5 f4 c==> c= cztrans f1 f2 f0 f3 cNUMERAL c_0 f5 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f3 f6 cl'z f1 f2 f0 f3 c==> c= cztrans f1 f2 f0 f3 cNUMERAL c_0 f5 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f3 f6 cl'z f1 f2 f0 f3
+ |- ((\g. (!l. (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l)))) g)
T * / ! c= cMAP b0 cMAP f0 b1 cMAP * * part co b0 f0 b1 f1
+ (good_list L), (((find_face L) u) = f), ((MEM u) f) |- (((((face (hypermap_of_list L)) u) = (set_of_list f)) ==> (u = v)) = ((((good_list L) /\ ((MEM u) (list_of_darts L))) ==> (((face (hypermap_of_list L)) u) = (set_of_list ((find_face L) u)))) ==> (u = v)))
T c==> cgood_list f0 c==> c= cfind_face f0 f1 f2 c==> cMEM f1 f2 c= c==> c= * * part cface chypermap_of_list f0 f1 * part cset_of_list f2 c= f1 f3 c==> c==> c/\ cgood_list f0 cMEM f1 clist_of_darts f0 c= * * part cface chypermap_of_list f0 f1 * part cset_of_list cfind_face f0 f1 c= f1 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (uniq (((betwn f) y) z)), (good_list L), (good_list_nodes L), ((FST u) = (FST v)), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) (((betwn f) y) z)), ((MEM v) (((betwn f) y) z)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (u = v)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cuniq cbetwn f6 f3 f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f7 cFST f8 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f9 f2 c==> c= cnext_el cfind_face f1 f5 f5 f10 c==> c= cprev_el f4 f2 f9 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f6 c==> c= cfind_face f1 f3 f6 c==> c= cparts f1 cbetwn f6 f3 f2 cMAP / cCONS b0 cNIL cbetwn f6 f3 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f10 f3 f6 cindexf f10 f2 f6 c==> cMEM f7 cbetwn f6 f3 f2 c==> cMEM f8 cbetwn f6 f3 f2 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f6 c==> cMEM f3 f4 c==> cMEM f2 f6 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c= f7 f8
- |- ((((~ (~ F)) = F) ==> ((~ (~ F)) ==> F)) = ((~ (~ F)) ==> F))
T c= c==> c= c~ c~ cF cF c==> c~ c~ cF cF c==> c~ c~ cF cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))) = T)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c= c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0 cT
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))))), ((((marked_list L) N) r) x) |- (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f3 cl'y f0 f1 f3 cl'z f0 f2 f1 f3
+ |- (((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z))))) = (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z)))))
T c= c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f1 f2 f3 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f1 f2 f3
+ (is_restricted (hypermap_of_list L)), (good_list L), ((MEM v) (((betwn f) y) z)) |- (((MEM v) (((betwn f) y) z)) /\ (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cMEM f1 cbetwn f2 f3 f4 c/\ cMEM f1 cbetwn f2 f3 f4 c==> c= cFST f5 cFST f1 c==> cMEM f5 f2 c==> cMEM f1 f2 c==> c= cfind_face f0 f5 f2 c==> c= cfind_face f0 f1 f2 c==> cIN f1 * * part cnode chypermap_of_list f0 f5 c= f5 f1
+ |- (((((uniq f) /\ (((MEM y) f) /\ (((MEM z) f) /\ (~ (y = z))))) ==> (uniq (((betwn f) y) z))) ==> (uniq ((MAP (\x. (FST x))) (((betwn f) y) z)))) = (uniq ((MAP (\x. (FST x))) (((betwn f) y) z))))
T c= c==> c==> c/\ cuniq f0 c/\ cMEM f1 f0 c/\ cMEM f2 f0 c~ c= f1 f2 cuniq cbetwn f0 f1 f2 cuniq cMAP / cFST b0 cbetwn f0 f1 f2 cuniq cMAP / cFST b0 cbetwn f0 f1 f2
+ |- (((!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) ==> ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r)) = ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r))
T c= c==> ! ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2 * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2
+ (is_restricted (hypermap_of_list L)), (good_list L) |- (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cs_flag_list f0 f1 f2 f3 c==> c= cl'y f0 f2 f3 f4 c==> c= cprev_el f2 f5 f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f7 c==> cMEM f3 clist_of_darts f0 c==> cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f2 c==> c= cnext_el f2 f6 f5 c==> cMEM f5 f2 c==> cMEM f4 f2 c==> c= cl'z f0 f1 f2 f3 f5 c==> c~ c= f5 f4 c==> c= cnext_el f7 f3 f8 c==> c= cfind_face f0 f3 f7 c==> cMEM f4 f7 c==> cMEM f5 f7 c==> c< cindexf f8 f4 f7 cindexf f8 f5 f7 c==> c= cfind_face f0 f4 f7 c==> c= cparts f0 cbetwn f7 f4 f5 cMAP / cCONS b0 cNIL cbetwn f7 f4 f5 c==> cuniq cbetwn f7 f4 f5 c==> cMEM f9 cbetwn f7 f4 f5 c==> cMEM f10 cbetwn f7 f4 f5 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f0 f9 f7 c==> c= cfind_face f0 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
+ (uniq (list_of_darts L)), (((find_face L) x) = f), ((MEM u) f) |- (((((find_face L) u) = f) ==> (u = v)) = ((((uniq (list_of_darts L)) /\ ((MEM u) ((find_face L) x))) ==> (((find_face L) u) = ((find_face L) x))) ==> (u = v)))
T c==> cuniq clist_of_darts f0 c==> c= cfind_face f0 f1 f2 c==> cMEM f3 f2 c= c==> c= cfind_face f0 f3 f2 c= f3 f4 c==> c==> c/\ cuniq clist_of_darts f0 cMEM f3 cfind_face f0 f1 c= cfind_face f0 f3 cfind_face f0 f1 c= f3 f4
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> c= cnext_el f1 f5 f4 c==> cMEM f4 f1 c==> cMEM f6 f1 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f6 cl'z f0 f2 f1 f3
+ |- ((\s. (!t. ((s INTER t) = (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN s) /\ (x IN t))) x))))))) s)
T * / ! c= * * part cINTER b0 b1 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 b0 cIN b3 b1 b3 f0
+ |- ((\r. (((uniq r) /\ (((MEM y) r) /\ (((MEM z) r) /\ (~ (y = z))))) ==> (uniq (((betwn r) y) z)))) f)
T * / c==> c/\ cuniq b0 c/\ cMEM f0 b0 c/\ cMEM f1 b0 c~ c= f0 f1 cuniq cbetwn b0 f0 f1 f2
- |- (((LET f) x) = (f x))
T c= cLET f0 f1 * f0 f1
+ (is_restricted (hypermap_of_list L)), (good_list L) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cMEM f1 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f1 cf_list f0 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f1 c==> cs_flag_list f0 f3 f2 f1 c==> c= cl'y f0 f2 f1 f4 c==> c= cprev_el f2 f5 f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f7 c==> cMEM f1 clist_of_darts f0 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f0 f3 c==> call * part cloop_list f0 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c==> cuniq f2 c==> c= cnext_el f2 f6 f5 c==> cMEM f5 f2 c==> cMEM f4 f2 c==> c= cl'z f0 f3 f2 f1 f5 c==> c~ c= f5 f4 c==> c= cnext_el f7 f1 f8 c==> c= cfind_face f0 f1 f7 c==> cMEM f4 f7 c==> cMEM f5 f7 c==> c< cindexf f8 f4 f7 cindexf f8 f5 f7 c==> c= cfind_face f0 f4 f7 c==> c= cparts f0 cbetwn f7 f4 f5 cMAP / cCONS b0 cNIL cbetwn f7 f4 f5 c==> cuniq cbetwn f7 f4 f5 c==> cMEM f9 cbetwn f7 f4 f5 c==> cMEM f10 cbetwn f7 f4 f5 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f0 f9 f7 c==> c= cfind_face f0 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c==> call / c~ c= b0 cNIL f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> c= cnext_el f1 f5 f4 c==> cMEM f4 f1 c==> cMEM f6 f1 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f6 cl'z f0 f2 f1 f3
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- (?y. ((((l'y L) r) x) = y))
T c? / c= cl'y f0 f1 f2 b0
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cs_flag_list f0 f2 f1 f3 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f3 cl'y f0 f1 f3 cl'z f0 f2 f1 f3
+ (is_restricted (hypermap_of_list L)), (good_list L) |- (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cFST f1 cFST f2 c==> cMEM f1 f3 c==> cMEM f2 f3 c==> c= cfind_face f0 f1 f3 c==> c= cfind_face f0 f2 f3 c==> cIN f2 * * part cnode chypermap_of_list f0 f1 c= f1 f2
- |- ((\l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))) l)
T * / c= cMEM f0 cMAP f1 b0 c? / c/\ cMEM b1 b0 c= f0 * f1 b1 f2
- |- (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))
T c= cMEM f0 cMAP f1 f2 c? / c/\ cMEM b0 f2 c= f0 * f1 b0
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))) N)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b1 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))) = T)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c= c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0 cT
+ |- ((\l. (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l))) l)
T * / c= cMAP f0 cMAP f1 b0 cMAP * * part co f0 f1 b0 f2
+ |- ((\x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))) x)
T * / ! c= crtrans f0 f1 f2 b0 b1 cSND cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
+ |- ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)
T * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq ((find_face L) x)) /\ (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c/\ cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f4 f3 c==> cMEM f3 f1 c==> cMEM f5 f1 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
- (~ ((dart (hypermap_of_list L)) = EMPTY)) |- ((EMPTY = (dart (hypermap_of_list L))) = F)
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c= c= part cEMPTY * part cdart chypermap_of_list f0 cF
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
+ (is_restricted (hypermap_of_list L)), (good_list L) |- (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cMEM f1 cbetwn f2 f3 f4 c==> cMEM f5 cbetwn f2 f3 f4 c==> c= cFST f1 cFST f5 c==> cMEM f1 f2 c==> cMEM f5 f2 c==> c= cfind_face f0 f1 f2 c==> c= cfind_face f0 f5 f2 c==> cIN f5 * * part cnode chypermap_of_list f0 f1 c= f1 f5
+ (((next_el ((find_face L) x)) x) = w), (((find_face L) x) = f) |- (((next_el f) x) = w)
T c==> c= cnext_el cfind_face f0 f1 f1 f2 c==> c= cfind_face f0 f1 f3 c= cnext_el f3 f1 f2
+ |- (((!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) ==> ((\L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) L)) = ((\L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) L))
T c= c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 * / ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 f0 * / ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 f0
+ (((MAP (g o f)) l) = ((MAP g) ((MAP f) l))) |- (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l))
T c==> c= cMAP * * part co f0 f1 f2 cMAP f0 cMAP f1 f2 c= cMAP f0 cMAP f1 f2 cMAP * * part co f0 f1 f2
- |- (((!N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))))) ==> ((\N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))))) N)) = ((\N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))))) N))
T c= c==> ! ! ! ! c= cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 cztrans f0 b0 b1 b2 b3 * / ! ! ! c= cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 cztrans f0 b0 b1 b2 b3 f1 * / ! ! ! c= cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 cztrans f0 b0 b1 b2 b3 f1
+ |- (((!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) ==> ((\N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) N)) = ((\N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) N))
T c= c==> ! ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 * / ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1 * / ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1
+ |- ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)
T * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((\f. (((find_face L) x) = f)) f) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c==> * / c= cfind_face f1 f5 b0 f8 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f5 f3 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (uniq (((betwn f) y) z)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), ((!u. (!v. ((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((FST u) = (FST v)))) ==> (u = v)))) ==> (uniq ((MAP (\x. (FST x))) (((betwn f) y) z)))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((!u. (!v. ((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((FST u) = (FST v)))) ==> (u = v)))) ==> (uniq ((MAP (\x. (FST x))) (((betwn f) y) z)))) /\ (uniq ((MAP (\x. (FST x))) (((betwn f) y) z))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cuniq cbetwn f6 f3 f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f7 f2 c==> c= cnext_el cfind_face f1 f5 f5 f8 c==> c= cprev_el f4 f2 f7 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f6 c==> c= cfind_face f1 f3 f6 c==> c= cparts f1 cbetwn f6 f3 f2 cMAP / cCONS b0 cNIL cbetwn f6 f3 f2 c==> c==> ! ! c==> c/\ cMEM b0 cbetwn f6 f3 f2 c/\ cMEM b1 cbetwn f6 f3 f2 c= cFST b0 cFST b1 c= b0 b1 cuniq cMAP / cFST b0 cbetwn f6 f3 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f8 f3 f6 cindexf f8 f2 f6 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f6 c==> cMEM f3 f4 c==> cMEM f2 f6 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c/\ c==> ! ! c==> c/\ cMEM b0 cbetwn f6 f3 f2 c/\ cMEM b1 cbetwn f6 f3 f2 c= cFST b0 cFST b1 c= b0 b1 cuniq cMAP / cFST b0 cbetwn f6 f3 f2 cuniq cMAP / cFST b0 cbetwn f6 f3 f2
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)) = T)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cT
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f5 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f4 cl'z f0 f2 f1 f3
- |- ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x)
T * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3
+ |- (((!x. (!y. (((good_list_nodes L) /\ ((MEM x) (list_of_darts L))) ==> ((y IN ((node (hypermap_of_list L)) x)) = (((FST x) = (FST y)) /\ ((MEM y) (list_of_darts L))))))) ==> ((\x. (!y. (((good_list_nodes L) /\ ((MEM x) (list_of_darts L))) ==> ((y IN ((node (hypermap_of_list L)) x)) = (((FST x) = (FST y)) /\ ((MEM y) (list_of_darts L))))))) u)) = ((\x. (!y. (((good_list_nodes L) /\ ((MEM x) (list_of_darts L))) ==> ((y IN ((node (hypermap_of_list L)) x)) = (((FST x) = (FST y)) /\ ((MEM y) (list_of_darts L))))))) u))
T c= c==> ! ! c==> c/\ cgood_list_nodes f0 cMEM b0 clist_of_darts f0 c= cIN b1 * * part cnode chypermap_of_list f0 b0 c/\ c= cFST b0 cFST b1 cMEM b1 clist_of_darts f0 * / ! c==> c/\ cgood_list_nodes f0 cMEM b0 clist_of_darts f0 c= cIN b1 * * part cnode chypermap_of_list f0 b0 c/\ c= cFST b0 cFST b1 cMEM b1 clist_of_darts f0 f1 * / ! c==> c/\ cgood_list_nodes f0 cMEM b0 clist_of_darts f0 c= cIN b1 * * part cnode chypermap_of_list f0 b0 c/\ c= cFST b0 cFST b1 cMEM b1 clist_of_darts f0 f1
+ |- ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L)
T * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
+ (is_restricted (hypermap_of_list L)), (good_list L), ((MEM x) (list_of_darts L)) |- (((MEM x) (list_of_darts L)) /\ ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cMEM f1 clist_of_darts f0 c/\ cMEM f1 clist_of_darts f0 c==> cuniq cflatten f2 c==> call / c~ c= b0 cNIL f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f3 c==> c= cnext_el f3 f4 f5 c==> cMEM f5 f3 c==> cMEM f6 f3 c==> c= cl'z f0 f2 f3 f1 f5 c==> c~ c= f5 f6 c==> c= cnext_el f7 f1 f8 c==> c= cfind_face f0 f1 f7 c==> cMEM f6 f7 c==> cMEM f5 f7 c==> c< cindexf f8 f6 f7 cindexf f8 f5 f7 c==> c= cfind_face f0 f6 f7 c==> c= cparts f0 cbetwn f7 f6 f5 cMAP / cCONS b0 cNIL cbetwn f7 f6 f5 c==> cuniq cbetwn f7 f6 f5 c==> cMEM f9 cbetwn f7 f6 f5 c==> cMEM f10 cbetwn f7 f6 f5 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f0 f9 f7 c==> c= cfind_face f0 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
- |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))))))))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> cgood_list f0 c==> c= cnext_el f2 f1 cf_list f0 f1 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f0 f2 f1 f5 c==> c= cfind_face f0 f1 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f1 f2 c==> cMEM f2 f7 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f2 f1 c==> cMEM f1 clist_of_darts f0 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f2 c==> c= cnext_el f2 f4 f3 c==> cMEM f3 f2 c==> cMEM f5 f2 c==> c= cl'z f0 f7 f2 f1 f3 c==> c~ c= f3 f5 c==> c= cnext_el f6 f1 f8 c==> c= cfind_face f0 f1 f6 c==> cMEM f5 f6 c==> cMEM f3 f6 c==> c< cindexf f8 f5 f6 cindexf f8 f3 f6 c==> c= cfind_face f0 f5 f6 c==> c= cparts f0 cbetwn f6 f5 f3 cMAP / cCONS b0 cNIL cbetwn f6 f5 f3 c==> cuniq cbetwn f6 f5 f3 c==> cMEM f9 cbetwn f6 f5 f3 c==> cMEM f10 cbetwn f6 f5 f3 c==> c= cFST f9 cFST f10 c==> cMEM f9 f6 c==> cMEM f10 f6 c==> c= cfind_face f0 f9 f6 c==> c= cfind_face f0 f10 f6 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
- |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
- |- ((?f. (((find_face L) x) = f)) ==> (?f. (((find_face L) x) = f)))
T c==> c? / c= cfind_face f0 f1 b0 c? / c= cfind_face f0 f1 b0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (uniq (((betwn f) y) z)), (good_list L), (good_list_nodes L), ((FST u) = (FST v)), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) (((betwn f) y) z)), ((MEM v) (((betwn f) y) z)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM u) f) ==> (u = v))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cuniq cbetwn f6 f3 f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f7 cFST f8 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f9 f2 c==> c= cnext_el cfind_face f1 f5 f5 f10 c==> c= cprev_el f4 f2 f9 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f6 c==> c= cfind_face f1 f3 f6 c==> c= cparts f1 cbetwn f6 f3 f2 cMAP / cCONS b0 cNIL cbetwn f6 f3 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f10 f3 f6 cindexf f10 f2 f6 c==> cMEM f7 cbetwn f6 f3 f2 c==> cMEM f8 cbetwn f6 f3 f2 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f6 c==> cMEM f3 f4 c==> cMEM f2 f6 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cMEM f7 f6 c= f7 f8
+ |- ((((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = ((\z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))))
T c= c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 * / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0
+ (is_restricted (hypermap_of_list L)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((prev_el r) z) = z1) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cl'y f0 f1 f2 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c==> c= cprev_el f1 f5 f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f7 c==> cMEM f2 clist_of_darts f0 c==> cuniq cflatten f4 c==> call / c~ c= b0 cNIL f4 c==> call * part cf_last f0 f4 c==> call * part cloop_list f0 f4 c==> ! c==> cMEM b0 cflatten f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f4 c==> cuniq f1 c==> c= cnext_el f1 f6 f5 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> c= cl'z f0 f4 f1 f2 f5 c==> c~ c= f5 f3 c==> c= cnext_el f7 f2 f8 c==> c= cfind_face f0 f2 f7 c==> cMEM f3 f7 c==> cMEM f5 f7 c==> c< cindexf f8 f3 f7 cindexf f8 f5 f7 c==> c= cfind_face f0 f3 f7 c==> c= cparts f0 cbetwn f7 f3 f5 cMAP / cCONS b0 cNIL cbetwn f7 f3 f5 c==> cuniq cbetwn f7 f3 f5 c==> cMEM f9 cbetwn f7 f3 f5 c==> cMEM f10 cbetwn f7 f3 f5 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f0 f9 f7 c==> c= cfind_face f0 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
+ |- (((!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) ==> ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i)) = ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i))
T c= c==> ! c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((\w. (((next_el ((find_face L) x)) x) = w)) w) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c==> * / c= cnext_el cfind_face f1 f5 f5 b0 f7 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f5 f3 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (good_list L) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) /\ ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))))))))))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c/\ ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f1 c==> cMEM f2 clist_of_darts f0 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f0 f3 c==> call * part cloop_list f0 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c==> cuniq f4 c==> c= cnext_el f4 f5 f6 c==> cMEM f6 f4 c==> cMEM f7 f4 c==> c= cl'z f0 f3 f4 f2 f6 c==> c~ c= f6 f7 c==> c= cnext_el f1 f2 f8 c==> c= cfind_face f0 f2 f1 c==> cMEM f7 f1 c==> cMEM f6 f1 c==> c< cindexf f8 f7 f1 cindexf f8 f6 f1 c==> c= cfind_face f0 f7 f1 c==> c= cparts f0 cbetwn f1 f7 f6 cMAP / cCONS b0 cNIL cbetwn f1 f7 f6 c==> cuniq cbetwn f1 f7 f6 c==> cMEM f9 cbetwn f1 f7 f6 c==> cMEM f10 cbetwn f1 f7 f6 c==> c= cFST f9 cFST f10 c==> cMEM f9 f1 c==> cMEM f10 f1 c==> c= cfind_face f0 f9 f1 c==> c= cfind_face f0 f10 f1 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
+ (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (((face (hypermap_of_list L)) u) = (set_of_list f)), (((find_face L) u) = f), ((MEM u) f), ((MEM v) f), (v IN ((node (hypermap_of_list L)) u)) |- (u = v)
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> c= * * part cface chypermap_of_list f0 f1 * part cset_of_list f2 c==> c= cfind_face f0 f1 f2 c==> cMEM f1 f2 c==> cMEM f3 f2 c==> cIN f3 * * part cnode chypermap_of_list f0 f1 c= f1 f3
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cs_flag_list f0 f3 f1 f2 c==> cmarked_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f5 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f4 cl'z f0 f3 f1 f2
+ |- ((\z. (!y. (!r. (((uniq r) /\ (((MEM z) r) /\ (((MEM y) r) /\ (~ (z = y))))) ==> (uniq (((betwn r) z) y)))))) y)
T * / ! ! c==> c/\ cuniq b2 c/\ cMEM b0 b2 c/\ cMEM b1 b2 c~ c= b0 b1 cuniq cbetwn b2 b0 b1 f0
- |- (F ==> (~ (~ F)))
T c==> cF c~ c~ cF
- |- ((\y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x))))))) y)
T * / ! c= cMEM b0 cMAP f0 b1 c? / c/\ cMEM b2 b1 c= b0 * f0 b2 f1
+ |- (((!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) ==> ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x)) = ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x))
T c= c==> ! ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0
+ (good_list L), (((find_face L) u) = f), ((plain_hypermap (hypermap_of_list L)) /\ ((connected_hypermap (hypermap_of_list L)) /\ ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) /\ ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))))))))), ((MEM u) f), ((MEM v) f), (v IN ((node (hypermap_of_list L)) u)) |- (u = v)
T c==> cgood_list f0 c==> c= cfind_face f0 f1 f2 c==> c/\ cplain_hypermap chypermap_of_list f0 c/\ cconnected_hypermap chypermap_of_list f0 c/\ ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c/\ cis_no_double_joins chypermap_of_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cis_node_nondegenerate chypermap_of_list f0 ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> cMEM f1 f2 c==> cMEM f3 f2 c==> cIN f3 * * part cnode chypermap_of_list f0 f1 c= f1 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f4 c==> c/\ call * part cf_last f0 f2 c/\ call * part cloop_list f0 f2 ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> call * part cf_last f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f6 cl'z f0 f2 f1 f3
+ |- ((\r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))))) r)
T * / ! ! c= cytrans f0 f1 b0 b1 b2 cl'y f0 crtrans f0 f1 b0 b1 b2 b1 f2
+ |- ((\f. (((find_face L) x) = f)) ((find_face L) x))
T * / c= cfind_face f0 f1 b0 cfind_face f0 f1
- (!P. ((!d. ((d IN (dart (hypermap_of_list L))) ==> (P d))) = (!d. (((MEM d) (list_of_darts L)) ==> (P d))))) |- ((\P. ((!d. ((d IN (dart (hypermap_of_list L))) ==> (P d))) = (!d. (((MEM d) (list_of_darts L)) ==> (P d))))) P)
T c==> ! c= ! c==> cIN b1 * part cdart chypermap_of_list f0 * b0 b1 ! c==> cMEM b1 clist_of_darts f0 * b0 b1 * / c= ! c==> cIN b1 * part cdart chypermap_of_list f0 * b0 b1 ! c==> cMEM b1 clist_of_darts f0 * b0 b1 f1
+ |- (((((MEM u) (((betwn f) y) z)) ==> ((MEM u) f)) ==> (u = v)) = (u = v))
T c= c==> c==> cMEM f0 cbetwn f1 f2 f3 cMEM f0 f1 c= f0 f4 c= f0 f4
+ (is_restricted (hypermap_of_list L)), (good_list L) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cs_flag_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 c==> c= cprev_el f1 f5 f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f7 c==> cMEM f2 clist_of_darts f0 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f0 f3 c==> call * part cloop_list f0 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c==> cuniq f1 c==> c= cnext_el f1 f6 f5 c==> cMEM f5 f1 c==> cMEM f4 f1 c==> c= cl'z f0 f3 f1 f2 f5 c==> c~ c= f5 f4 c==> c= cnext_el f7 f2 f8 c==> c= cfind_face f0 f2 f7 c==> cMEM f4 f7 c==> cMEM f5 f7 c==> c< cindexf f8 f4 f7 cindexf f8 f5 f7 c==> c= cfind_face f0 f4 f7 c==> c= cparts f0 cbetwn f7 f4 f5 cMAP / cCONS b0 cNIL cbetwn f7 f4 f5 c==> cuniq cbetwn f7 f4 f5 c==> cMEM f9 cbetwn f7 f4 f5 c==> cMEM f10 cbetwn f7 f4 f5 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f0 f9 f7 c==> c= cfind_face f0 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (uniq (((betwn f) y) z)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((FST u) = (FST v)))) ==> (u = v))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cuniq cbetwn f6 f3 f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f7 f2 c==> c= cnext_el cfind_face f1 f5 f5 f8 c==> c= cprev_el f4 f2 f7 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f6 c==> c= cfind_face f1 f3 f6 c==> c= cparts f1 cbetwn f6 f3 f2 cMAP / cCONS b0 cNIL cbetwn f6 f3 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f8 f3 f6 cindexf f8 f2 f6 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f6 c==> cMEM f3 f4 c==> cMEM f2 f6 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> c/\ cMEM f9 cbetwn f6 f3 f2 c/\ cMEM f10 cbetwn f6 f3 f2 c= cFST f9 cFST f10 c= f9 f10
- |- ((?x. t) = t)
T c= c? / f0 f0
+ |- (((((uniq (list_of_darts L)) /\ ((MEM u) ((find_face L) x))) ==> (((find_face L) u) = ((find_face L) x))) ==> (u = v)) = (u = v))
T c= c==> c==> c/\ cuniq clist_of_darts f0 cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2 c= f1 f3 c= f1 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f4 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c==> cuniq f2 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f3 f6 cl'z f1 f0 f2 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (uniq ((MAP (\x. (FST x))) (((betwn f) y) z)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f8 c==> c= cfind_face f1 f3 f8 c==> c= cparts f1 cbetwn f8 f3 f2 cMAP / cCONS b0 cNIL cbetwn f8 f3 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f7 f3 f8 cindexf f7 f2 f8 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f8 c==> cMEM f3 f4 c==> cMEM f2 f8 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 cuniq cMAP / cFST b0 cbetwn f8 f3 f2
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- (((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))) ==> ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))) N)) = ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))) N))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b1 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b1 f1 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b1 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((good_list L) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c==> cgood_list f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
+ (good_list L), (good_list_nodes L), (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))), ((((marked_list L) N) r) x) |- (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c==> cmarked_list f0 f1 f2 f3 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f3 cl'y f0 f2 f3 cl'z f0 f1 f2 f3
- |- ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s)
T * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1
- |- ((\i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))) i)
T * / c= cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 cztrans f0 f1 f2 f3 b0 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (uniq (((betwn f) y) z)), (good_list L), (good_list_nodes L), ((FST u) = (FST v)), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) f), ((MEM u) (((betwn f) y) z)), ((MEM v) (((betwn f) y) z)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM u) f) /\ (u = v))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cuniq cbetwn f6 f3 f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f7 cFST f8 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f9 f2 c==> c= cnext_el cfind_face f1 f5 f5 f10 c==> c= cprev_el f4 f2 f9 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f6 c==> c= cfind_face f1 f3 f6 c==> c= cparts f1 cbetwn f6 f3 f2 cMAP / cCONS b0 cNIL cbetwn f6 f3 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f10 f3 f6 cindexf f10 f2 f6 c==> cMEM f7 f6 c==> cMEM f7 cbetwn f6 f3 f2 c==> cMEM f8 cbetwn f6 f3 f2 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f6 c==> cMEM f3 f4 c==> cMEM f2 f6 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c/\ cMEM f7 f6 c= f7 f8
+ |- (!f. (((uniq (((betwn f) y) z)) /\ (!u. (!v. ((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((f u) = (f v)))) ==> (u = v))))) ==> (uniq ((MAP f) (((betwn f) y) z)))))
T c==> c/\ cuniq cbetwn f0 f1 f2 ! ! c==> c/\ cMEM b0 cbetwn f0 f1 f2 c/\ cMEM b1 cbetwn f0 f1 f2 c= * f3 b0 * f3 b1 c= b0 b1 cuniq cMAP f3 cbetwn f0 f1 f2
+ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) |- ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cIN f1 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 f1 * * part cface chypermap_of_list f0 f1 * * part cINSERT f1 part cEMPTY
+ (!P. ((!d. ((d IN (dart (hypermap_of_list L))) ==> (P d))) = (!d. (((MEM d) (list_of_darts L)) ==> (P d))))) |- ((!d. ((d IN (dart (hypermap_of_list L))) ==> ((\u. ((((node (hypermap_of_list L)) u) INTER ((face (hypermap_of_list L)) u)) = (u INSERT EMPTY))) d))) = (!d. (((MEM d) (list_of_darts L)) ==> ((\u. ((((node (hypermap_of_list L)) u) INTER ((face (hypermap_of_list L)) u)) = (u INSERT EMPTY))) d))))
T c==> ! c= ! c==> cIN b1 * part cdart chypermap_of_list f0 * b0 b1 ! c==> cMEM b1 clist_of_darts f0 * b0 b1 c= ! c==> cIN b0 * part cdart chypermap_of_list f0 * / c= * * part cINTER * * part cnode chypermap_of_list f0 b1 * * part cface chypermap_of_list f0 b1 * * part cINSERT b1 part cEMPTY b0 ! c==> cMEM b0 clist_of_darts f0 * / c= * * part cINTER * * part cnode chypermap_of_list f0 b1 * * part cface chypermap_of_list f0 b1 * * part cINSERT b1 part cEMPTY b0
- |- ((\r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))) r)
T * / ! c= ctransform_list f0 b1 c, f1 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b0 c, f1 b0 c, b7 cSND b6 cAPPEND creplace b0 cCONS cSND b6 cNIL f1 cCONS cFST b6 cNIL csplit_normal_list f0 b0 b5 b2 b4 cfind_face f0 b2 cprev_el b0 b3 cl'z f0 f1 b0 b1 cl'y f0 b0 b1 f2
- ((all (loop_list L)) N) |- (((all (loop_list L)) N) = T)
T c==> call * part cloop_list f0 f1 c= call * part cloop_list f0 f1 cT
- |- ((\x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y)))) x)
T * / ! c= cMEM b0 cCONS b1 cNIL c= b0 b1 f0
+ (is_restricted (hypermap_of_list L)), (good_list L) |- (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cMEM f1 f2 c==> cMEM f3 f2 c==> c< cindexf f4 f1 f2 cindexf f4 f3 f2 c==> c= cfind_face f0 f1 f2 c==> c= cparts f0 cbetwn f2 f1 f3 cMAP / cCONS b0 cNIL cbetwn f2 f1 f3 c==> cuniq cbetwn f2 f1 f3 c==> cMEM f5 cbetwn f2 f1 f3 c==> cMEM f6 cbetwn f2 f1 f3 c==> c= cFST f5 cFST f6 c==> cMEM f5 f2 c==> cMEM f6 f2 c==> c= cfind_face f0 f5 f2 c==> c= cfind_face f0 f6 f2 c==> cIN f6 * * part cnode chypermap_of_list f0 f5 c= f5 f6
+ (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L) |- ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c/\ cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f1 c==> cMEM f2 clist_of_darts f0 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f0 f3 c==> call * part cloop_list f0 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c==> cuniq f4 c==> c= cnext_el f4 f5 f6 c==> cMEM f6 f4 c==> cMEM f7 f4 c==> c= cl'z f0 f3 f4 f2 f6 c==> c~ c= f6 f7 c==> c= cnext_el f1 f2 f8 c==> c= cfind_face f0 f2 f1 c==> cMEM f7 f1 c==> cMEM f6 f1 c==> c< cindexf f8 f7 f1 cindexf f8 f6 f1 c==> c= cfind_face f0 f7 f1 c==> c= cparts f0 cbetwn f1 f7 f6 cMAP / cCONS b0 cNIL cbetwn f1 f7 f6 c==> cuniq cbetwn f1 f7 f6 c==> cMEM f9 cbetwn f1 f7 f6 c==> cMEM f10 cbetwn f1 f7 f6 c==> c= cFST f9 cFST f10 c==> cMEM f9 f1 c==> cMEM f10 f1 c==> c= cfind_face f0 f9 f1 c==> c= cfind_face f0 f10 f1 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
+ |- (((!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) ==> ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x)) = ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x))
T c= c==> ! ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3 * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
+ |- ((\y. (!f. (((uniq y) /\ (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v))))) ==> (uniq ((MAP f) y))))) (((betwn f) y) z))
T * / ! c==> c/\ cuniq b0 ! ! c==> c/\ cMEM b2 b0 c/\ cMEM b3 b0 c= * b1 b2 * b1 b3 c= b2 b3 cuniq cMAP b1 b0 cbetwn f0 f1 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((next_el ((find_face L) x)) x) = w) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c==> c= cnext_el cfind_face f1 f5 f5 f7 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f5 f3 f2
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c/\ cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cMEM f3 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f4 cl'z f0 f2 f1 f3
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) |- (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 c~ c= cztrans f0 f1 f2 b0 cNUMERAL c_0 cytrans f0 f1 f2 b0 cNUMERAL c_0
- ((all (\s. (~ (s = NIL)))) N) |- (((all (\s. (~ (s = NIL)))) N) = T)
T c==> call / c~ c= b0 cNIL f0 c= call / c~ c= b0 cNIL f0 cT
+ (is_restricted (hypermap_of_list L)), (good_list L) |- (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f2 c==> c= cnext_el f2 f3 f4 c==> cMEM f4 f2 c==> cMEM f5 f2 c==> c= cl'z f0 f1 f2 f6 f4 c==> c~ c= f4 f5 c==> c= cnext_el f7 f6 f8 c==> c= cfind_face f0 f6 f7 c==> cMEM f5 f7 c==> cMEM f4 f7 c==> c< cindexf f8 f5 f7 cindexf f8 f4 f7 c==> c= cfind_face f0 f5 f7 c==> c= cparts f0 cbetwn f7 f5 f4 cMAP / cCONS b0 cNIL cbetwn f7 f5 f4 c==> cuniq cbetwn f7 f5 f4 c==> cMEM f9 cbetwn f7 f5 f4 c==> cMEM f10 cbetwn f7 f5 f4 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f0 f9 f7 c==> c= cfind_face f0 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f5 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f4 cl'z f0 f2 f1 f3
+ |- (((!L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) x)))) ==> ((\L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) x)))) L)) = ((\L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) x)))) L))
T c= c==> ! c==> cuniq clist_of_darts b0 cuniq cfind_face b0 f0 * / c==> cuniq clist_of_darts b0 cuniq cfind_face b0 f0 f1 * / c==> cuniq clist_of_darts b0 cuniq cfind_face b0 f0 f1
+ (is_restricted (hypermap_of_list L)), (good_list L) |- ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cuniq f1 c==> c= cnext_el f1 f2 f3 c==> cMEM f3 f1 c==> cMEM f4 f1 c==> c= cl'z f0 f5 f1 f6 f3 c==> c~ c= f3 f4 c==> c= cnext_el f7 f6 f8 c==> c= cfind_face f0 f6 f7 c==> cMEM f4 f7 c==> cMEM f3 f7 c==> c< cindexf f8 f4 f7 cindexf f8 f3 f7 c==> c= cfind_face f0 f4 f7 c==> c= cparts f0 cbetwn f7 f4 f3 cMAP / cCONS b0 cNIL cbetwn f7 f4 f3 c==> cuniq cbetwn f7 f4 f3 c==> cMEM f9 cbetwn f7 f4 f3 c==> cMEM f10 cbetwn f7 f4 f3 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f0 f9 f7 c==> c= cfind_face f0 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
+ |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ (is_restricted (hypermap_of_list L)), (good_list L), ((MEM y) f) |- (((MEM y) f) /\ (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cMEM f1 f2 c/\ cMEM f1 f2 c==> cMEM f3 f2 c==> c< cindexf f4 f1 f2 cindexf f4 f3 f2 c==> c= cfind_face f0 f1 f2 c==> c= cparts f0 cbetwn f2 f1 f3 cMAP / cCONS b0 cNIL cbetwn f2 f1 f3 c==> cuniq cbetwn f2 f1 f3 c==> cMEM f5 cbetwn f2 f1 f3 c==> cMEM f6 cbetwn f2 f1 f3 c==> c= cFST f5 cFST f6 c==> cMEM f5 f2 c==> cMEM f6 f2 c==> c= cfind_face f0 f5 f2 c==> c= cfind_face f0 f6 f2 c==> cIN f6 * * part cnode chypermap_of_list f0 f5 c= f5 f6
+ |- (((!x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) ==> ((\x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) x)) = ((\x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) x))
T c= c==> ! ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 * / ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 f0 * / ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq ((find_face L) x)) /\ (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c/\ cuniq cfind_face f0 f2 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) /\ ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f4 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c/\ ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cuniq f2 c==> c= cnext_el f2 f5 f4 c==> cMEM f4 f2 c==> cMEM f6 f2 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f3 f6 cl'z f1 f0 f2 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((normal_list L) N) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c==> cnormal_list f0 f6 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) /\ (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn f) y) z)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f8 c==> c= cfind_face f1 f3 f8 c==> c= cparts f1 cbetwn f8 f3 f2 cMAP / cCONS b0 cNIL cbetwn f8 f3 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f7 f3 f8 cindexf f7 f2 f8 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f8 c==> cMEM f3 f4 c==> cMEM f2 f8 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c/\ c= cparts f1 cbetwn f8 f3 f2 cMAP / cCONS b0 cNIL cbetwn f8 f3 f2 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn f8 f3 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (uniq (((betwn f) y) z)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((!u. (!v. ((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((FST u) = (FST v)))) ==> (u = v)))) ==> (uniq ((MAP (\x. (FST x))) (((betwn f) y) z)))) = (uniq ((MAP (\x. (FST x))) (((betwn f) y) z))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cuniq cbetwn f6 f3 f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f7 f2 c==> c= cnext_el cfind_face f1 f5 f5 f8 c==> c= cprev_el f4 f2 f7 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f6 c==> c= cfind_face f1 f3 f6 c==> c= cparts f1 cbetwn f6 f3 f2 cMAP / cCONS b0 cNIL cbetwn f6 f3 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f8 f3 f6 cindexf f8 f2 f6 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f6 c==> cMEM f3 f4 c==> cMEM f2 f6 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c= c==> ! ! c==> c/\ cMEM b0 cbetwn f6 f3 f2 c/\ cMEM b1 cbetwn f6 f3 f2 c= cFST b0 cFST b1 c= b0 b1 cuniq cMAP / cFST b0 cbetwn f6 f3 f2 cuniq cMAP / cFST b0 cbetwn f6 f3 f2
+ (is_restricted (hypermap_of_list L)), (good_list L), ((all (loop_list L)) N) |- (((all (loop_list L)) N) /\ ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> call * part cloop_list f0 f1 c/\ call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f2 c==> c= cnext_el f2 f3 f4 c==> cMEM f4 f2 c==> cMEM f5 f2 c==> c= cl'z f0 f1 f2 f6 f4 c==> c~ c= f4 f5 c==> c= cnext_el f7 f6 f8 c==> c= cfind_face f0 f6 f7 c==> cMEM f5 f7 c==> cMEM f4 f7 c==> c< cindexf f8 f5 f7 cindexf f8 f4 f7 c==> c= cfind_face f0 f5 f7 c==> c= cparts f0 cbetwn f7 f5 f4 cMAP / cCONS b0 cNIL cbetwn f7 f5 f4 c==> cuniq cbetwn f7 f5 f4 c==> cMEM f9 cbetwn f7 f5 f4 c==> cMEM f10 cbetwn f7 f5 f4 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f0 f9 f7 c==> c= cfind_face f0 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
+ |- (((!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) ==> ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)) = ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x))
T c= c==> ! c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ |- (((!y'. (!r. (((uniq r) /\ (((MEM y) r) /\ (((MEM y') r) /\ (~ (y = y'))))) ==> (uniq (((betwn r) y) y'))))) ==> ((\y'. (!r. (((uniq r) /\ (((MEM y) r) /\ (((MEM y') r) /\ (~ (y = y'))))) ==> (uniq (((betwn r) y) y'))))) z)) = ((\y'. (!r. (((uniq r) /\ (((MEM y) r) /\ (((MEM y') r) /\ (~ (y = y'))))) ==> (uniq (((betwn r) y) y'))))) z))
T c= c==> ! ! c==> c/\ cuniq b1 c/\ cMEM f0 b1 c/\ cMEM b0 b1 c~ c= f0 b0 cuniq cbetwn b1 f0 b0 * / ! c==> c/\ cuniq b1 c/\ cMEM f0 b1 c/\ cMEM b0 b1 c~ c= f0 b0 cuniq cbetwn b1 f0 b0 f1 * / ! c==> c/\ cuniq b1 c/\ cMEM f0 b1 c/\ cMEM b0 b1 c~ c= f0 b0 cuniq cbetwn b1 f0 b0 f1
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM y) f) /\ (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f)))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn f) y) z))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f8 c==> c/\ cMEM f3 f8 c/\ cMEM f2 f8 c< cindexf f7 f3 f8 cindexf f7 f2 f8 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f8 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn f8 f3 f2
- ((normal_list L) N) |- (((normal_list L) N) = T)
T c==> cnormal_list f0 f1 c= cnormal_list f0 f1 cT
- (planar_hypermap (hypermap_of_list L)) |- ((planar_hypermap (hypermap_of_list L)) = T)
T c==> cplanar_hypermap chypermap_of_list f0 c= cplanar_hypermap chypermap_of_list f0 cT
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) L))
T c= c==> ! ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 * / ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 f0 * / ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 f0
+ |- ((\x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))) x)
T * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ c= b1 cfind_face f0 b0 c= b2 cnext_el b1 b0 c/\ cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 b1 c/\ cMEM cztrans f0 f1 f2 b0 cNUMERAL c_0 b1 c< cindexf b2 cytrans f0 f1 f2 b0 cNUMERAL c_0 b1 cindexf b2 cztrans f0 f1 f2 b0 cNUMERAL c_0 b1 f3
- |- ((((\f. (((find_face L) x) = f)) f) ==> (?f. (((find_face L) x) = f))) = T)
T c= c==> * / c= cfind_face f0 f1 b0 f2 c? / c= cfind_face f0 f1 b0 cT
- |- ((\s. (((f_last L) s) = (((next_el s) (LAST s)) = ((f_list L) (LAST s))))) s)
T * / c= cf_last f0 b0 c= cnext_el b0 cLAST b0 cf_list f0 cLAST b0 f1
+ (is_restricted (hypermap_of_list L)), (good_list L), ((all (\l. (~ (l = NIL)))) L) |- (((all (\l. (~ (l = NIL)))) L) /\ ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> call / c~ c= b0 cNIL f0 c/\ call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f1 c==> cMEM f2 clist_of_darts f0 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f0 f3 c==> call * part cloop_list f0 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c==> cuniq f4 c==> c= cnext_el f4 f5 f6 c==> cMEM f6 f4 c==> cMEM f7 f4 c==> c= cl'z f0 f3 f4 f2 f6 c==> c~ c= f6 f7 c==> c= cnext_el f1 f2 f8 c==> c= cfind_face f0 f2 f1 c==> cMEM f7 f1 c==> cMEM f6 f1 c==> c< cindexf f8 f7 f1 cindexf f8 f6 f1 c==> c= cfind_face f0 f7 f1 c==> c= cparts f0 cbetwn f1 f7 f6 cMAP / cCONS b0 cNIL cbetwn f1 f7 f6 c==> cuniq cbetwn f1 f7 f6 c==> cMEM f9 cbetwn f1 f7 f6 c==> cMEM f10 cbetwn f1 f7 f6 c==> c= cFST f9 cFST f10 c==> cMEM f9 f1 c==> cMEM f10 f1 c==> c= cfind_face f0 f9 f1 c==> c= cfind_face f0 f10 f1 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (uniq (((betwn f) y) z)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), (((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((FST u) = (FST v)))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) (((betwn f) y) z)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (u = v)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cuniq cbetwn f6 f3 f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f7 f2 c==> c= cnext_el cfind_face f1 f5 f5 f8 c==> c= cprev_el f4 f2 f7 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f6 c==> c= cfind_face f1 f3 f6 c==> c= cparts f1 cbetwn f6 f3 f2 cMAP / cCONS b0 cNIL cbetwn f6 f3 f2 c==> c/\ cMEM f9 cbetwn f6 f3 f2 c/\ cMEM f10 cbetwn f6 f3 f2 c= cFST f9 cFST f10 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f8 f3 f6 cindexf f8 f2 f6 c==> cMEM f9 cbetwn f6 f3 f2 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f6 c==> cMEM f3 f4 c==> cMEM f2 f6 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c= f9 f10
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- (((!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) ==> ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) r)) = ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) r))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 f2 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((find_face L) y) = f) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn f) y) z)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f8 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f7 f3 f8 cindexf f7 f2 f8 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f8 c==> cMEM f3 f4 c==> cMEM f2 f8 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c==> c= cfind_face f1 f3 f8 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn f8 f3 f2
+ (good_list L), (((find_face L) u) = f), ((planar_hypermap (hypermap_of_list L)) /\ ((plain_hypermap (hypermap_of_list L)) /\ ((connected_hypermap (hypermap_of_list L)) /\ ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) /\ ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x)))))))))))), ((MEM u) f), ((MEM v) f), (v IN ((node (hypermap_of_list L)) u)) |- (u = v)
T c==> cgood_list f0 c==> c= cfind_face f0 f1 f2 c==> c/\ cplanar_hypermap chypermap_of_list f0 c/\ cplain_hypermap chypermap_of_list f0 c/\ cconnected_hypermap chypermap_of_list f0 c/\ ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c/\ cis_no_double_joins chypermap_of_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cis_node_nondegenerate chypermap_of_list f0 ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> cMEM f1 f2 c==> cMEM f3 f2 c==> cIN f3 * * part cnode chypermap_of_list f0 f1 c= f1 f3
- |- ((\N. (((quotient_list L) N) = ((MAP (core L)) N))) N)
T * / c= cquotient_list f0 b0 cMAP * part ccore f0 b0 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L) |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r))) = (\x. (((((marked_list L) N) r) x) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c= / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 b0 c~ cfinal_list f0 f1 cMEM cztrans f0 f2 f1 b0 cNUMERAL c_0 f1 / c==> cmarked_list f0 f2 f1 b0 cMEM cztrans f0 f2 f1 b0 cNUMERAL c_0 f1
- |- ((\r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))))) r)
T * / ! ! ! c= csplit_normal_list f0 b0 b1 b2 b3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b9 b10 cAPPEND b11 b8 cAPPEND cCONS b5 cNIL cAPPEND cbetwn b0 b5 b2 cCONS b2 cNIL cAPPEND cCONS b4 cNIL cAPPEND cbetwn b0 b4 b3 cCONS b3 cNIL cflatten cmap b7 b8 cbetwn b1 b2 b5 / cmap / cPOWER * part cn_list f0 b8 b7 cupt cNUMERAL cBIT1 c_0 * b6 cFST b7 / csizel cfilter / c= b7 b6 cflatten f0 cnext_el b0 b3 cnext_el b0 b2 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x), ((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) z) |- (((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) z) /\ (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f1 f2 cNUMERAL c_0 f4 c==> c= cl'y f0 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cs_flag_list f0 f3 f1 f2 c==> cmarked_list f0 f3 f1 f2 c==> * / c= cztrans f0 f3 f1 f2 cNUMERAL c_0 b0 f6 c/\ * / c= cztrans f0 f3 f1 f2 cNUMERAL c_0 b0 f6 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f3 f1 f2
+ |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x)))))) = T)
T c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f3 cl'y f0 f2 f3 cl'z f0 f1 f2 f3 cT
+ |- (((((MEM v) (((betwn f) y) z)) ==> ((MEM v) f)) ==> (u = v)) = (u = v))
T c= c==> c==> cMEM f0 cbetwn f1 f2 f3 cMEM f0 f1 c= f4 f0 c= f4 f0
- ((MEM x) (list_of_darts L)) |- (((MEM x) (list_of_darts L)) = T)
T c==> cMEM f0 clist_of_darts f1 c= cMEM f0 clist_of_darts f1 cT
+ |- ((\L. (((uniq (list_of_darts L)) /\ ((MEM v) ((find_face L) x))) ==> (((find_face L) v) = ((find_face L) x)))) L)
T * / c==> c/\ cuniq clist_of_darts b0 cMEM f0 cfind_face b0 f1 c= cfind_face b0 f0 cfind_face b0 f1 f2
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- |- (!z. (((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) z) ==> (?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z))))
T c==> * / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 f4 c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ c= cnext_el f1 f2 cf_list f0 f2 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 cs_flag_list f0 f3 f1 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f2 cl'y f0 f1 f2 cl'z f0 f3 f1 f2
+ |- ((\L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) L)
T * / ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (uniq (((betwn f) y) z)), (good_list L), (good_list_nodes L), ((FST u) = (FST v)), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) f), ((MEM u) (((betwn f) y) z)), ((MEM v) f), ((MEM v) (((betwn f) y) z)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM v) f) /\ (u = v))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cuniq cbetwn f6 f3 f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f7 cFST f8 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f9 f2 c==> c= cnext_el cfind_face f1 f5 f5 f10 c==> c= cprev_el f4 f2 f9 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f6 c==> c= cfind_face f1 f3 f6 c==> c= cparts f1 cbetwn f6 f3 f2 cMAP / cCONS b0 cNIL cbetwn f6 f3 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f10 f3 f6 cindexf f10 f2 f6 c==> cMEM f7 f6 c==> cMEM f7 cbetwn f6 f3 f2 c==> cMEM f8 f6 c==> cMEM f8 cbetwn f6 f3 f2 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f6 c==> cMEM f3 f4 c==> cMEM f2 f6 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c/\ cMEM f8 f6 c= f7 f8
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (uniq (((betwn f) y) z)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((uniq (((betwn f) y) z)) /\ (uniq ((MAP (\x. (FST x))) (((betwn f) y) z))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cuniq cbetwn f6 f3 f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f7 f2 c==> c= cnext_el cfind_face f1 f5 f5 f8 c==> c= cprev_el f4 f2 f7 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f6 c==> c= cfind_face f1 f3 f6 c==> c= cparts f1 cbetwn f6 f3 f2 cMAP / cCONS b0 cNIL cbetwn f6 f3 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f8 f3 f6 cindexf f8 f2 f6 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f6 c==> cMEM f3 f4 c==> cMEM f2 f6 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c/\ cuniq cbetwn f6 f3 f2 cuniq cMAP / cFST b0 cbetwn f6 f3 f2
+ (is_restricted (hypermap_of_list L)), (good_list L) |- (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c< cindexf f1 f2 f3 cindexf f1 f4 f3 c==> c= cfind_face f0 f2 f3 c==> c= cparts f0 cbetwn f3 f2 f4 cMAP / cCONS b0 cNIL cbetwn f3 f2 f4 c==> cuniq cbetwn f3 f2 f4 c==> cMEM f5 cbetwn f3 f2 f4 c==> cMEM f6 cbetwn f3 f2 f4 c==> c= cFST f5 cFST f6 c==> cMEM f5 f3 c==> cMEM f6 f3 c==> c= cfind_face f0 f5 f3 c==> c= cfind_face f0 f6 f3 c==> cIN f6 * * part cnode chypermap_of_list f0 f5 c= f5 f6
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM y) r) /\ (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f6 f2 c==> cMEM f5 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c/\ cMEM f6 f2 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f3 f6 cl'z f1 f0 f2 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c==> cMEM f2 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) /\ (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f5 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c/\ ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f3 f6 cl'z f1 f0 f2 f3
+ |- (((!d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) ==> ((\d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) v)) = ((\d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) v))
T c= c==> ! ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 * / ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 f0 * / ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 f0
+ ((MEM v) (((betwn f) y) z)) |- (((MEM v) (((betwn f) y) z)) = T)
T c==> cMEM f0 cbetwn f1 f2 f3 c= cMEM f0 cbetwn f1 f2 f3 cT
- (is_node_nondegenerate (hypermap_of_list L)) |- ((is_node_nondegenerate (hypermap_of_list L)) = T)
T c==> cis_node_nondegenerate chypermap_of_list f0 c= cis_node_nondegenerate chypermap_of_list f0 cT
+ |- ((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) (((((ztrans L) N) r) x) (NUMERAL _0)))
T * / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 cztrans f0 f1 f2 f3 cNUMERAL c_0
+ |- ((\y'. (!r. (((uniq r) /\ (((MEM y) r) /\ (((MEM y') r) /\ (~ (y = y'))))) ==> (uniq (((betwn r) y) y'))))) z)
T * / ! c==> c/\ cuniq b1 c/\ cMEM f0 b1 c/\ cMEM b0 b1 c~ c= f0 b0 cuniq cbetwn b1 f0 b0 f1
+ (is_restricted (hypermap_of_list L)), (good_list L) |- ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cparts f0 cbetwn f1 f2 f3 cMAP / cCONS b0 cNIL cbetwn f1 f2 f3 c==> cuniq cbetwn f1 f2 f3 c==> cMEM f4 cbetwn f1 f2 f3 c==> cMEM f5 cbetwn f1 f2 f3 c==> c= cFST f4 cFST f5 c==> cMEM f4 f1 c==> cMEM f5 f1 c==> c= cfind_face f0 f4 f1 c==> c= cfind_face f0 f5 f1 c==> cIN f5 * * part cnode chypermap_of_list f0 f4 c= f4 f5
+ |- ((\L. ((good_list L) ==> (!P. ((!d. ((d IN (dart (hypermap_of_list L))) ==> (P d))) = (!d. (((MEM d) (list_of_darts L)) ==> (P d))))))) L)
T * / c==> cgood_list b0 ! c= ! c==> cIN b2 * part cdart chypermap_of_list b0 * b1 b2 ! c==> cMEM b2 clist_of_darts b0 * b1 b2 f0
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) |- ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> cIN f1 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 f1
- |- (((((l'y L) r) x) = y) = ((\y. ((((l'y L) r) x) = y)) y))
T c= c= cl'y f0 f1 f2 f3 * / c= cl'y f0 f1 f2 b0 f3
+ |- (((?f. (((find_face L) x) = f)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z))))) = (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z)))))
T c= c==> c? / c= cfind_face f0 f1 b0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f1 f2 f3 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f1 f2 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (uniq (((betwn f) y) z)), (good_list L), (good_list_nodes L), ((FST u) = (FST v)), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) u) = f), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) f), ((MEM u) (((betwn f) y) z)), ((MEM v) f), ((MEM v) (((betwn f) y) z)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((find_face L) u) = f) /\ (u = v))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cuniq cbetwn f6 f3 f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f7 cFST f8 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f9 f2 c==> c= cnext_el cfind_face f1 f5 f5 f10 c==> c= cprev_el f4 f2 f9 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f7 f6 c==> c= cfind_face f1 f5 f6 c==> c= cfind_face f1 f3 f6 c==> c= cparts f1 cbetwn f6 f3 f2 cMAP / cCONS b0 cNIL cbetwn f6 f3 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f10 f3 f6 cindexf f10 f2 f6 c==> cMEM f7 f6 c==> cMEM f7 cbetwn f6 f3 f2 c==> cMEM f8 f6 c==> cMEM f8 cbetwn f6 f3 f2 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f6 c==> cMEM f3 f4 c==> cMEM f2 f6 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c/\ c= cfind_face f1 f7 f6 c= f7 f8
+ |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))) /\ (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> c/\ cuniq cflatten f6 c/\ call / c~ c= b0 cNIL f6 c/\ call * part cf_last f0 f6 c/\ call * part cloop_list f0 f6 ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c/\ c/\ cuniq cflatten f6 c/\ call / c~ c= b0 cNIL f6 c/\ call * part cf_last f0 f6 c/\ call * part cloop_list f0 f6 ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L) |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))) = (\x. (((((marked_list L) N) r) x) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c= / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 b0 c~ cfinal_list f0 f1 c~ c= cztrans f0 f2 f1 b0 cNUMERAL c_0 cytrans f0 f2 f1 b0 cNUMERAL c_0 / c==> cmarked_list f0 f2 f1 b0 c~ c= cztrans f0 f2 f1 b0 cNUMERAL c_0 cytrans f0 f2 f1 b0 cNUMERAL c_0
- |- ((~ (~ F)) ==> F)
T c==> c~ c~ cF cF
- |- ((\r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))))) r)
T * / ! ! c= cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 cztrans f0 f1 b0 b1 b2 f2
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x))) = ((MAP (\x. ((CONS x) NIL))) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x))))) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn f) y) z))))) = (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn f) y) z)))))
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c= cparts f0 cbetwn cfind_face f0 f3 cl'y f0 f2 f3 cl'z f0 f1 f2 f3 cMAP / cCONS b0 cNIL cbetwn cfind_face f0 f3 cl'y f0 f2 f3 cl'z f0 f1 f2 f3 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn f4 f5 f6 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn f4 f5 f6
+ ((\z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) z1) |- (((((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1) ==> (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))) = (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c==> * / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 f4 c= c==> c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 f4 cuniq cMAP * * part co part cFST part cHD cparts f1 cbetwn cfind_face f1 f3 f5 cl'z f1 f2 f0 f3 cuniq cMAP * * part co part cFST part cHD cparts f1 cbetwn cfind_face f1 f3 f5 cl'z f1 f2 f0 f3
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c/\ cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f5 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f4 cl'z f0 f2 f1 f3
- |- ((?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) ==> (?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)))
T c==> c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0
- |- ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L)
T * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 f2
+ (good_list L), (((find_face L) u) = f), ((MEM u) f), ((MEM v) f), (v IN ((node (hypermap_of_list L)) u)) |- (((~ ((dart (hypermap_of_list L)) = EMPTY)) /\ ((planar_hypermap (hypermap_of_list L)) /\ ((plain_hypermap (hypermap_of_list L)) /\ ((connected_hypermap (hypermap_of_list L)) /\ ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) /\ ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))))))))))) ==> (u = v))
T c==> cgood_list f0 c==> c= cfind_face f0 f1 f2 c==> cMEM f1 f2 c==> cMEM f3 f2 c==> cIN f3 * * part cnode chypermap_of_list f0 f1 c==> c/\ c~ c= * part cdart chypermap_of_list f0 part cEMPTY c/\ cplanar_hypermap chypermap_of_list f0 c/\ cplain_hypermap chypermap_of_list f0 c/\ cconnected_hypermap chypermap_of_list f0 c/\ ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c/\ cis_no_double_joins chypermap_of_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cis_node_nondegenerate chypermap_of_list f0 ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c= f1 f3
- |- (((!x'. (((\w. (((next_el ((find_face L) x)) x) = w)) x') ==> (?w. (((next_el ((find_face L) x)) x) = w)))) ==> ((?w. (((next_el ((find_face L) x)) x) = w)) ==> (?w. (((next_el ((find_face L) x)) x) = w)))) = ((?w. (((next_el ((find_face L) x)) x) = w)) ==> (?w. (((next_el ((find_face L) x)) x) = w))))
T c= c==> ! c==> * / c= cnext_el cfind_face f0 f1 f1 b1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b1 c==> c? / c= cnext_el cfind_face f0 f1 f1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b0 c==> c? / c= cnext_el cfind_face f0 f1 f1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b0
- ((((((ztrans L) N) r) x) (NUMERAL _0)) = z) |- (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) /\ (?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)))
T c==> c= cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 c/\ c= cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) /\ ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c/\ c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x))))), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cMEM f2 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c/\ c= cnext_el f1 f2 cf_list f0 f2 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 cs_flag_list f0 f3 f1 f2 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f2 cl'y f0 f1 f2 cl'z f0 f3 f1 f2
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cs_flag_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f5 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f4 cl'z f0 f3 f1 f2
- |- (!y. (((\y. ((((l'y L) r) x) = y)) y) ==> (?y. ((((l'y L) r) x) = y))))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0
- |- ((LET_END t) = t)
T c= cLET_END f0 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f2 c==> cgood_list f1 c==> c= cnext_el f3 f2 cf_list f1 f2 c==> c= cprev_el f3 f4 f5 c==> c= cl'y f1 f3 f2 f6 c==> c= cfind_face f1 f2 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f2 f3 c==> cMEM f2 clist_of_darts f1 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f2 c==> cuniq f3 c==> c= cnext_el f3 f5 f4 c==> cMEM f4 f3 c==> cMEM f6 f3 c==> c= cl'z f1 f0 f3 f2 f4 c==> c~ c= f4 f6 c==> c= cnext_el f7 f2 f8 c==> c= cfind_face f1 f2 f7 c==> cMEM f6 f7 c==> cMEM f4 f7 c==> c< cindexf f8 f6 f7 cindexf f8 f4 f7 c==> c= cfind_face f1 f6 f7 c==> c= cparts f1 cbetwn f7 f6 f4 cMAP / cCONS b0 cNIL cbetwn f7 f6 f4 c==> cuniq cbetwn f7 f6 f4 c==> cMEM f9 cbetwn f7 f6 f4 c==> cMEM f10 cbetwn f7 f6 f4 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f1 f9 f7 c==> c= cfind_face f1 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f1 f9 c= f9 f10
- ((!x. (((MEM x) s) ==> (a x))) = ((all a) s)) |- (((all a) s) = (!x. (((MEM x) s) ==> (a x))))
T c==> c= ! c==> cMEM b0 f0 * f1 b0 call f1 f0 c= call f1 f0 ! c==> cMEM b0 f0 * f1 b0
- |- ((\s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s)))) s)
T * / c= cMEM f0 cfilter f1 b0 c/\ * f1 f0 cMEM f0 b0 f2
- |- (((!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))) ==> ((\x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))) x)) = ((\x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))) x))
T c= c==> ! ! c= cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 cztrans f0 f1 f2 b0 b1 * / ! c= cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 cztrans f0 f1 f2 b0 b1 f3 * / ! c= cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 cztrans f0 f1 f2 b0 b1 f3
+ |- ((\H. ((is_restricted H) = ((~ ((dart H) = EMPTY)) /\ ((planar_hypermap H) /\ ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))))))))))))) H)
T * / c= cis_restricted b0 c/\ c~ c= * part cdart b0 part cEMPTY c/\ cplanar_hypermap b0 c/\ cplain_hypermap b0 c/\ cconnected_hypermap b0 c/\ csimple_hypermap b0 c/\ cis_no_double_joins b0 c/\ cis_edge_nondegenerate b0 c/\ cis_node_nondegenerate b0 ! c==> cIN b1 * part cdart b0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface b0 b1 f0
+ ((MEM v) (((betwn f) y) z)) |- ((((MEM v) f) ==> (u = v)) = ((((MEM v) (((betwn f) y) z)) ==> ((MEM v) f)) ==> (u = v)))
T c==> cMEM f0 cbetwn f1 f2 f3 c= c==> cMEM f0 f1 c= f4 f0 c==> c==> cMEM f0 cbetwn f1 f2 f3 cMEM f0 f1 c= f4 f0
- |- ((\ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ram1)
T * / ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 f3
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c/\ c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cs_flag_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f5 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f4 cl'z f0 f3 f1 f2
- |- ((((\z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) z1) ==> (?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1))) = T)
T c= c==> * / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 f4 c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 cT
+ (~ (z = y)) |- (((~ (y = z)) ==> ((y = z) = F)) = ((y = z) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
+ |- ((!r. (((uniq r) /\ (((MEM z) r) /\ (((MEM y) r) /\ (~ (z = y))))) ==> (uniq (((betwn r) z) y)))) = T)
T c= ! c==> c/\ cuniq b0 c/\ cMEM f0 b0 c/\ cMEM f1 b0 c~ c= f0 f1 cuniq cbetwn b0 f0 f1 cT
- |- ((\x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l)))))) x)
T * / ! c= cMEM b0 cflatten b1 c? / c/\ cMEM b2 b1 cMEM b0 b2 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM z) r) /\ (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f5 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c/\ cMEM f5 f2 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f3 f6 cl'z f1 f0 f2 f3
+ (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f7 c==> cMEM f2 clist_of_darts f0 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f4 f3 c==> cMEM f3 f1 c==> cMEM f5 f1 c==> c= cl'z f0 f6 f1 f2 f3 c==> c~ c= f3 f5 c==> c= cnext_el f7 f2 f8 c==> c= cfind_face f0 f2 f7 c==> cMEM f5 f7 c==> cMEM f3 f7 c==> c< cindexf f8 f5 f7 cindexf f8 f3 f7 c==> c= cfind_face f0 f5 f7 c==> c= cparts f0 cbetwn f7 f5 f3 cMAP / cCONS b0 cNIL cbetwn f7 f5 f3 c==> cuniq cbetwn f7 f5 f3 c==> cMEM f9 cbetwn f7 f5 f3 c==> cMEM f10 cbetwn f7 f5 f3 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f0 f9 f7 c==> c= cfind_face f0 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
- (~ (z = y)) |- ((z = y) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
+ |- (((!f. (((POWER f) (NUMERAL _0)) = I)) ==> ((\f. (((POWER f) (NUMERAL _0)) = I)) f)) = ((\f. (((POWER f) (NUMERAL _0)) = I)) f))
T c= c==> ! c= * * part cPOWER b0 cNUMERAL c_0 part cI * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0 * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0
+ |- ((\x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) x)
T * / ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 f0
- |- ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))
T c= csplit_normal_list f0 f1 f2 f3 f4 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b5 b6 cAPPEND b7 b4 cAPPEND cCONS b1 cNIL cAPPEND cbetwn f1 b1 f3 cCONS f3 cNIL cAPPEND cCONS b0 cNIL cAPPEND cbetwn f1 b0 f4 cCONS f4 cNIL cflatten cmap b3 b4 cbetwn f2 f3 b1 / cmap / cPOWER * part cn_list f0 b4 b3 cupt cNUMERAL cBIT1 c_0 * b2 cFST b3 / csizel cfilter / c= b3 b2 cflatten f0 cnext_el f1 f4 cnext_el f1 f3
+ |- ((\i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))) i)
T * / c= crtrans f0 f1 f2 f3 b0 cSND cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (uniq (((betwn f) y) z)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) (((betwn f) y) z)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cuniq cbetwn f6 f3 f2 c==> cgood_list f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f7 f2 c==> c= cnext_el cfind_face f1 f5 f5 f8 c==> c= cprev_el f4 f2 f7 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f6 c==> c= cfind_face f1 f3 f6 c==> c= cparts f1 cbetwn f6 f3 f2 cMAP / cCONS b0 cNIL cbetwn f6 f3 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f8 f3 f6 cindexf f8 f2 f6 c==> cMEM f9 cbetwn f6 f3 f2 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f6 c==> cMEM f3 f4 c==> cMEM f2 f6 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cMEM f10 cbetwn f6 f3 f2 c==> c= cFST f9 cFST f10 c==> cMEM f9 f6 c==> cMEM f10 f6 c==> c= cfind_face f1 f9 f6 c==> c= cfind_face f1 f10 f6 c==> cIN f10 * * part cnode chypermap_of_list f1 f9 c= f9 f10
- ((((l'y L) r) x) = y) |- ((\y. ((((l'y L) r) x) = y)) y)
T c==> c= cl'y f0 f1 f2 f3 * / c= cl'y f0 f1 f2 b0 f3
+ |- ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L)
T * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c/\ cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f4 f3 c==> cMEM f3 f1 c==> cMEM f5 f1 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
- |- ((?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) ==> (?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)))
T c==> c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f8 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f8 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cMEM f2 f8 c==> c< cindexf f7 f3 f8 cindexf f7 f2 f8 c==> c= cfind_face f1 f3 f8 c==> c= cparts f1 cbetwn f8 f3 f2 cMAP / cCONS b0 cNIL cbetwn f8 f3 f2 c==> cuniq cbetwn f8 f3 f2 c==> cMEM f9 cbetwn f8 f3 f2 c==> cMEM f10 cbetwn f8 f3 f2 c==> c= cFST f9 cFST f10 c==> cMEM f9 f8 c==> cMEM f10 f8 c==> c= cfind_face f1 f9 f8 c==> c= cfind_face f1 f10 f8 c==> cIN f10 * * part cnode chypermap_of_list f1 f9 c= f9 f10
- |- ((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0)))
T c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ (is_restricted (hypermap_of_list L)), (good_list L) |- (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cMEM f1 f2 c==> c< cindexf f3 f4 f2 cindexf f3 f1 f2 c==> c= cfind_face f0 f4 f2 c==> c= cparts f0 cbetwn f2 f4 f1 cMAP / cCONS b0 cNIL cbetwn f2 f4 f1 c==> cuniq cbetwn f2 f4 f1 c==> cMEM f5 cbetwn f2 f4 f1 c==> cMEM f6 cbetwn f2 f4 f1 c==> c= cFST f5 cFST f6 c==> cMEM f5 f2 c==> cMEM f6 f2 c==> c= cfind_face f0 f5 f2 c==> c= cfind_face f0 f6 f2 c==> cIN f6 * * part cnode chypermap_of_list f0 f5 c= f5 f6
+ (is_restricted (hypermap_of_list L)), (good_list L), ((((s_flag_list L) N) r) x) |- (((((s_flag_list L) N) r) x) /\ (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cs_flag_list f0 f1 f2 f3 c/\ cs_flag_list f0 f1 f2 f3 c==> c= cl'y f0 f2 f3 f4 c==> c= cprev_el f2 f5 f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f7 c==> cMEM f3 clist_of_darts f0 c==> cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f2 c==> c= cnext_el f2 f6 f5 c==> cMEM f5 f2 c==> cMEM f4 f2 c==> c= cl'z f0 f1 f2 f3 f5 c==> c~ c= f5 f4 c==> c= cnext_el f7 f3 f8 c==> c= cfind_face f0 f3 f7 c==> cMEM f4 f7 c==> cMEM f5 f7 c==> c< cindexf f8 f4 f7 cindexf f8 f5 f7 c==> c= cfind_face f0 f4 f7 c==> c= cparts f0 cbetwn f7 f4 f5 cMAP / cCONS b0 cNIL cbetwn f7 f4 f5 c==> cuniq cbetwn f7 f4 f5 c==> cMEM f9 cbetwn f7 f4 f5 c==> cMEM f10 cbetwn f7 f4 f5 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f0 f9 f7 c==> c= cfind_face f0 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
+ |- (((!r. (((uniq r) /\ (((MEM y) r) /\ (((MEM z) r) /\ (~ (y = z))))) ==> (uniq (((betwn r) y) z)))) ==> ((\r. (((uniq r) /\ (((MEM y) r) /\ (((MEM z) r) /\ (~ (y = z))))) ==> (uniq (((betwn r) y) z)))) f)) = ((\r. (((uniq r) /\ (((MEM y) r) /\ (((MEM z) r) /\ (~ (y = z))))) ==> (uniq (((betwn r) y) z)))) f))
T c= c==> ! c==> c/\ cuniq b0 c/\ cMEM f0 b0 c/\ cMEM f1 b0 c~ c= f0 f1 cuniq cbetwn b0 f0 f1 * / c==> c/\ cuniq b0 c/\ cMEM f0 b0 c/\ cMEM f1 b0 c~ c= f0 f1 cuniq cbetwn b0 f0 f1 f2 * / c==> c/\ cuniq b0 c/\ cMEM f0 b0 c/\ cMEM f1 b0 c~ c= f0 f1 cuniq cbetwn b0 f0 f1 f2
+ |- (?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1))
T c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) /\ ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c/\ ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f4 f3 c==> cMEM f3 f1 c==> cMEM f5 f1 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
+ (is_restricted (hypermap_of_list L)), (good_list L) |- (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cMEM f1 f2 c==> cMEM f3 f2 c==> c= cfind_face f0 f1 f2 c==> c= cfind_face f0 f3 f2 c==> cIN f3 * * part cnode chypermap_of_list f0 f1 c= f1 f3
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1) /\ (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f1 f2 cNUMERAL c_0 f4 c==> c= cl'y f0 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cs_flag_list f0 f3 f1 f2 c==> cmarked_list f0 f3 f1 f2 c/\ c= cprev_el f1 cztrans f0 f3 f1 f2 cNUMERAL c_0 f4 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f3 f1 f2
+ (is_restricted (hypermap_of_list L)), (uniq r), (good_list L) |- ((uniq r) /\ ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f1 c==> cgood_list f0 c/\ cuniq f1 c==> c= cnext_el f1 f2 f3 c==> cMEM f3 f1 c==> cMEM f4 f1 c==> c= cl'z f0 f5 f1 f6 f3 c==> c~ c= f3 f4 c==> c= cnext_el f7 f6 f8 c==> c= cfind_face f0 f6 f7 c==> cMEM f4 f7 c==> cMEM f3 f7 c==> c< cindexf f8 f4 f7 cindexf f8 f3 f7 c==> c= cfind_face f0 f4 f7 c==> c= cparts f0 cbetwn f7 f4 f3 cMAP / cCONS b0 cNIL cbetwn f7 f4 f3 c==> cuniq cbetwn f7 f4 f3 c==> cMEM f9 cbetwn f7 f4 f3 c==> cMEM f10 cbetwn f7 f4 f3 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f0 f9 f7 c==> c= cfind_face f0 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
+ (is_restricted (hypermap_of_list L)), (good_list L), ((((l'y L) r) x) = y) |- (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cl'y f0 f1 f2 f3 c/\ c= cl'y f0 f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f6 c==> cMEM f2 clist_of_darts f0 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> c= cnext_el f1 f5 f4 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> c= cl'z f0 f7 f1 f2 f4 c==> c~ c= f4 f3 c==> c= cnext_el f6 f2 f8 c==> c= cfind_face f0 f2 f6 c==> cMEM f3 f6 c==> cMEM f4 f6 c==> c< cindexf f8 f3 f6 cindexf f8 f4 f6 c==> c= cfind_face f0 f3 f6 c==> c= cparts f0 cbetwn f6 f3 f4 cMAP / cCONS b0 cNIL cbetwn f6 f3 f4 c==> cuniq cbetwn f6 f3 f4 c==> cMEM f9 cbetwn f6 f3 f4 c==> cMEM f10 cbetwn f6 f3 f4 c==> c= cFST f9 cFST f10 c==> cMEM f9 f6 c==> cMEM f10 f6 c==> c= cfind_face f0 f9 f6 c==> c= cfind_face f0 f10 f6 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z))))) = (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z)))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c~ c= cztrans f0 f1 f2 f3 cNUMERAL c_0 cytrans f0 f1 f2 f3 cNUMERAL c_0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f4 f5 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f4 f5
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L) |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))) = (\x. (((((marked_list L) N) r) x) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c= / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 b0 c~ cfinal_list f0 f1 cMEM cytrans f0 f2 f1 b0 cNUMERAL c_0 f1 / c==> cmarked_list f0 f2 f1 b0 cMEM cytrans f0 f2 f1 b0 cNUMERAL c_0 f1
+ (uniq r), (((prev_el r) z) = z1), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z) |- (((((next_el r) z1) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))) = (((uniq r) ==> (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0)))) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))
T c==> cuniq f0 c==> c= cprev_el f0 f1 f2 c==> c= cztrans f3 f4 f0 f5 cNUMERAL c_0 f1 c= c==> c= cnext_el f0 f2 f1 cuniq cMAP / cFST cHD b0 cparts f3 cbetwn cfind_face f3 f5 f6 cl'z f3 f4 f0 f5 c==> c==> cuniq f0 c= cnext_el f0 cprev_el f0 cztrans f3 f4 f0 f5 cNUMERAL c_0 cztrans f3 f4 f0 f5 cNUMERAL c_0 cuniq cMAP / cFST cHD b0 cparts f3 cbetwn cfind_face f3 f5 f6 cl'z f3 f4 f0 f5
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))))))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> cgood_list f0 c==> c= cnext_el f2 f1 cf_list f0 f1 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f0 f2 f1 f5 c==> c= cfind_face f0 f1 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f1 f2 c==> cMEM f1 clist_of_darts f0 c==> cMEM f2 f7 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f2 f1 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f2 c==> c= cnext_el f2 f4 f3 c==> cMEM f3 f2 c==> cMEM f5 f2 c==> c= cl'z f0 f7 f2 f1 f3 c==> c~ c= f3 f5 c==> c= cnext_el f6 f1 f8 c==> c= cfind_face f0 f1 f6 c==> cMEM f5 f6 c==> cMEM f3 f6 c==> c< cindexf f8 f5 f6 cindexf f8 f3 f6 c==> c= cfind_face f0 f5 f6 c==> c= cparts f0 cbetwn f6 f5 f3 cMAP / cCONS b0 cNIL cbetwn f6 f5 f3 c==> cuniq cbetwn f6 f5 f3 c==> cMEM f9 cbetwn f6 f5 f3 c==> cMEM f10 cbetwn f6 f5 f3 c==> c= cFST f9 cFST f10 c==> cMEM f9 f6 c==> cMEM f10 f6 c==> c= cfind_face f0 f9 f6 c==> c= cfind_face f0 f10 f6 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
- ((\w. (((next_el ((find_face L) x)) x) = w)) w) |- (((((next_el ((find_face L) x)) x) = w) ==> (?w. (((next_el ((find_face L) x)) x) = w))) = (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c= c==> c= cnext_el cfind_face f0 f1 f1 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b0
- |- (((!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))) ==> ((\l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))) l)) = ((\l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))) l))
T c= c==> ! c= cMEM f0 cMAP f1 b0 c? / c/\ cMEM b1 b0 c= f0 * f1 b1 * / c= cMEM f0 cMAP f1 b0 c? / c/\ cMEM b1 b0 c= f0 * f1 b1 f2 * / c= cMEM f0 cMAP f1 b0 c? / c/\ cMEM b1 b0 c= f0 * f1 b1 f2
+ (is_restricted (hypermap_of_list L)), (good_list L), (((((l'z L) N) r) x) = z) |- ((((((l'z L) N) r) x) = z) /\ ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cl'z f0 f1 f2 f3 f4 c/\ c= cl'z f0 f1 f2 f3 f4 c==> c~ c= f4 f5 c==> c= cnext_el f6 f3 f7 c==> c= cfind_face f0 f3 f6 c==> cMEM f5 f6 c==> cMEM f4 f6 c==> c< cindexf f7 f5 f6 cindexf f7 f4 f6 c==> c= cfind_face f0 f5 f6 c==> c= cparts f0 cbetwn f6 f5 f4 cMAP / cCONS b0 cNIL cbetwn f6 f5 f4 c==> cuniq cbetwn f6 f5 f4 c==> cMEM f8 cbetwn f6 f5 f4 c==> cMEM f9 cbetwn f6 f5 f4 c==> c= cFST f8 cFST f9 c==> cMEM f8 f6 c==> cMEM f9 f6 c==> c= cfind_face f0 f8 f6 c==> c= cfind_face f0 f9 f6 c==> cIN f9 * * part cnode chypermap_of_list f0 f8 c= f8 f9
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c==> cMEM f2 clist_of_darts f0 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f4 f3 c==> cMEM f3 f1 c==> cMEM f5 f1 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 cs_flag_list f0 f3 f1 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f2 cl'y f0 f1 f2 cl'z f0 f3 f1 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> c= cnext_el f7 f5 f8 c==> c= cfind_face f1 f5 f7 c==> cMEM f3 f7 c==> cMEM f2 f7 c==> c< cindexf f8 f3 f7 cindexf f8 f2 f7 c==> c= cfind_face f1 f3 f7 c==> c= cparts f1 cbetwn f7 f3 f2 cMAP / cCONS b0 cNIL cbetwn f7 f3 f2 c==> cuniq cbetwn f7 f3 f2 c==> cMEM f9 cbetwn f7 f3 f2 c==> cMEM f10 cbetwn f7 f3 f2 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f1 f9 f7 c==> c= cfind_face f1 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f1 f9 c= f9 f10
+ |- (((!y. (((good_list_nodes L) /\ ((MEM u) (list_of_darts L))) ==> ((y IN ((node (hypermap_of_list L)) u)) = (((FST u) = (FST y)) /\ ((MEM y) (list_of_darts L)))))) ==> ((\y. (((good_list_nodes L) /\ ((MEM u) (list_of_darts L))) ==> ((y IN ((node (hypermap_of_list L)) u)) = (((FST u) = (FST y)) /\ ((MEM y) (list_of_darts L)))))) v)) = ((\y. (((good_list_nodes L) /\ ((MEM u) (list_of_darts L))) ==> ((y IN ((node (hypermap_of_list L)) u)) = (((FST u) = (FST y)) /\ ((MEM y) (list_of_darts L)))))) v))
T c= c==> ! c==> c/\ cgood_list_nodes f0 cMEM f1 clist_of_darts f0 c= cIN b0 * * part cnode chypermap_of_list f0 f1 c/\ c= cFST f1 cFST b0 cMEM b0 clist_of_darts f0 * / c==> c/\ cgood_list_nodes f0 cMEM f1 clist_of_darts f0 c= cIN b0 * * part cnode chypermap_of_list f0 f1 c/\ c= cFST f1 cFST b0 cMEM b0 clist_of_darts f0 f2 * / c==> c/\ cgood_list_nodes f0 cMEM f1 clist_of_darts f0 c= cIN b0 * * part cnode chypermap_of_list f0 f1 c/\ c= cFST f1 cFST b0 cMEM b0 clist_of_darts f0 f2
+ |- (((!L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))))) ==> ((\L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))))) L)) = ((\L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))))) L))
T c= c==> ! ! ! ! ! c= crtrans b0 b1 b2 b3 b4 cSND cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 * / ! ! ! ! c= crtrans b0 b1 b2 b3 b4 cSND cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0 * / ! ! ! ! c= crtrans b0 b1 b2 b3 b4 cSND cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
+ |- (((!s. (!t. ((s INTER t) = (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN s) /\ (x IN t))) x))))))) ==> ((\s. (!t. ((s INTER t) = (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN s) /\ (x IN t))) x))))))) s)) = ((\s. (!t. ((s INTER t) = (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN s) /\ (x IN t))) x))))))) s))
T c= c==> ! ! c= * * part cINTER b0 b1 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 b0 cIN b3 b1 b3 * / ! c= * * part cINTER b0 b1 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 b0 cIN b3 b1 b3 f0 * / ! c= * * part cINTER b0 b1 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 b0 cIN b3 b1 b3 f0
+ |- ((\N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))))) N)
T * / ! ! ! c= cytrans f0 b0 b1 b2 b3 cl'y f0 crtrans f0 b0 b1 b2 b3 b2 f1
+ ((\w. (((next_el ((find_face L) x)) x) = w)) w) |- (((((next_el ((find_face L) x)) x) = w) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z))))) = (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z)))))
T c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c= c==> c= cnext_el cfind_face f0 f1 f1 f2 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f1 f3 f4 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f1 f3 f4
- |- ((\f. (!y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))))) f)
T * / ! ! c= cMEM b1 cMAP b0 b2 c? / c/\ cMEM b3 b2 c= b1 * b0 b3 f0
+ (is_restricted (hypermap_of_list L)), (good_list L) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c==> cs_flag_list f0 f1 f3 f2 c==> c= cl'y f0 f3 f2 f4 c==> c= cprev_el f3 f5 f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f7 c==> cMEM f2 clist_of_darts f0 c==> cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f3 c==> c= cnext_el f3 f6 f5 c==> cMEM f5 f3 c==> cMEM f4 f3 c==> c= cl'z f0 f1 f3 f2 f5 c==> c~ c= f5 f4 c==> c= cnext_el f7 f2 f8 c==> c= cfind_face f0 f2 f7 c==> cMEM f4 f7 c==> cMEM f5 f7 c==> c< cindexf f8 f4 f7 cindexf f8 f5 f7 c==> c= cfind_face f0 f4 f7 c==> c= cparts f0 cbetwn f7 f4 f5 cMAP / cCONS b0 cNIL cbetwn f7 f4 f5 c==> cuniq cbetwn f7 f4 f5 c==> cMEM f9 cbetwn f7 f4 f5 c==> cMEM f10 cbetwn f7 f4 f5 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f0 f9 f7 c==> c= cfind_face f0 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
+ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) |- (((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY))) = T)
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c= c==> cIN f1 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 f1 * * part cface chypermap_of_list f0 f1 * * part cINSERT f1 part cEMPTY cT
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
+ (uniq ((find_face L) x)), (((find_face L) x) = f) |- ((uniq f) = T)
T c==> cuniq cfind_face f0 f1 c==> c= cfind_face f0 f1 f2 c= cuniq f2 cT
- |- (((((l'y L) r) x) = y) ==> (?y. ((((l'y L) r) x) = y)))
T c==> c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- |- ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1)
T * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
+ |- (((((l'y L) r) x) = (((l'y L) r) x)) = ((\y. ((((l'y L) r) x) = y)) (((l'y L) r) x)))
T c= c= cl'y f0 f1 f2 cl'y f0 f1 f2 * / c= cl'y f0 f1 f2 b0 cl'y f0 f1 f2
+ |- (((!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) ==> ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x)) = ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x))
T c= c==> ! ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3 * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((\z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) z1) ==> (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))) = T)
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cl'y f0 f1 f2 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c==> cmarked_list f0 f4 f1 f2 c= c==> * / c= cprev_el f1 cztrans f0 f4 f1 f2 cNUMERAL c_0 b0 f5 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f2 f3 cl'z f0 f4 f1 f2 cT
+ |- (((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x))) = ((MAP (\x. ((CONS x) NIL))) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x))))))))) ==> ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x))) = ((MAP (\x. ((CONS x) NIL))) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x))))))))) L)) = ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x))) = ((MAP (\x. ((CONS x) NIL))) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x))))))))) L))
T c= c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c= cparts b0 cbetwn cfind_face b0 b3 cl'y b0 b2 b3 cl'z b0 b1 b2 b3 cMAP / cCONS b4 cNIL cbetwn cfind_face b0 b3 cl'y b0 b2 b3 cl'z b0 b1 b2 b3 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c= cparts b0 cbetwn cfind_face b0 b3 cl'y b0 b2 b3 cl'z b0 b1 b2 b3 cMAP / cCONS b4 cNIL cbetwn cfind_face b0 b3 cl'y b0 b2 b3 cl'z b0 b1 b2 b3 f0 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c= cparts b0 cbetwn cfind_face b0 b3 cl'y b0 b2 b3 cl'z b0 b1 b2 b3 cMAP / cCONS b4 cNIL cbetwn cfind_face b0 b3 cl'y b0 b2 b3 cl'z b0 b1 b2 b3 f0
- |- (((!r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))))) ==> ((\r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))))) r)) = ((\r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))))) r))
T c= c==> ! ! ! ! c= csplit_normal_list f0 b0 b1 b2 b3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b9 b10 cAPPEND b11 b8 cAPPEND cCONS b5 cNIL cAPPEND cbetwn b0 b5 b2 cCONS b2 cNIL cAPPEND cCONS b4 cNIL cAPPEND cbetwn b0 b4 b3 cCONS b3 cNIL cflatten cmap b7 b8 cbetwn b1 b2 b5 / cmap / cPOWER * part cn_list f0 b8 b7 cupt cNUMERAL cBIT1 c_0 * b6 cFST b7 / csizel cfilter / c= b7 b6 cflatten f0 cnext_el b0 b3 cnext_el b0 b2 * / ! ! ! c= csplit_normal_list f0 b0 b1 b2 b3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b9 b10 cAPPEND b11 b8 cAPPEND cCONS b5 cNIL cAPPEND cbetwn b0 b5 b2 cCONS b2 cNIL cAPPEND cCONS b4 cNIL cAPPEND cbetwn b0 b4 b3 cCONS b3 cNIL cflatten cmap b7 b8 cbetwn b1 b2 b5 / cmap / cPOWER * part cn_list f0 b8 b7 cupt cNUMERAL cBIT1 c_0 * b6 cFST b7 / csizel cfilter / c= b7 b6 cflatten f0 cnext_el b0 b3 cnext_el b0 b2 f1 * / ! ! ! c= csplit_normal_list f0 b0 b1 b2 b3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b9 b10 cAPPEND b11 b8 cAPPEND cCONS b5 cNIL cAPPEND cbetwn b0 b5 b2 cCONS b2 cNIL cAPPEND cCONS b4 cNIL cAPPEND cbetwn b0 b4 b3 cCONS b3 cNIL cflatten cmap b7 b8 cbetwn b1 b2 b5 / cmap / cPOWER * part cn_list f0 b8 b7 cupt cNUMERAL cBIT1 c_0 * b6 cFST b7 / csizel cfilter / c= b7 b6 cflatten f0 cnext_el b0 b3 cnext_el b0 b2 f1
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq r) /\ (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f4 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c/\ cuniq f2 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f3 f6 cl'z f1 f0 f2 f3
- (connected_hypermap (hypermap_of_list L)) |- ((connected_hypermap (hypermap_of_list L)) = T)
T c==> cconnected_hypermap chypermap_of_list f0 c= cconnected_hypermap chypermap_of_list f0 cT
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cs_flag_list f0 f2 f1 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f3 cl'y f0 f1 f3 cl'z f0 f2 f1 f3
+ (is_restricted (hypermap_of_list L)), (good_list L) |- (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f2 c==> c= cnext_el f2 f3 f4 c==> cMEM f4 f2 c==> cMEM f5 f2 c==> c= cl'z f0 f1 f2 f6 f4 c==> c~ c= f4 f5 c==> c= cnext_el f7 f6 f8 c==> c= cfind_face f0 f6 f7 c==> cMEM f5 f7 c==> cMEM f4 f7 c==> c< cindexf f8 f5 f7 cindexf f8 f4 f7 c==> c= cfind_face f0 f5 f7 c==> c= cparts f0 cbetwn f7 f5 f4 cMAP / cCONS b0 cNIL cbetwn f7 f5 f4 c==> cuniq cbetwn f7 f5 f4 c==> cMEM f9 cbetwn f7 f5 f4 c==> cMEM f10 cbetwn f7 f5 f4 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f0 f9 f7 c==> c= cfind_face f0 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
- |- (((!f. (!x. (((LET f) x) = (f x)))) ==> ((\f. (!x. (((LET f) x) = (f x)))) f)) = ((\f. (!x. (((LET f) x) = (f x)))) f))
T c= c==> ! ! c= cLET b0 b1 * b0 b1 * / ! c= cLET b0 b1 * b0 b1 f0 * / ! c= cLET b0 b1 * b0 b1 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> c= cnext_el f3 f2 cf_list f0 f2 c==> c= cprev_el f3 f4 f5 c==> c= cl'y f0 f3 f2 f6 c==> c= cfind_face f0 f2 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f2 f3 c==> cMEM f2 clist_of_darts f0 c==> cMEM f3 f1 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL f1 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f3 f2 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f3 c==> c= cnext_el f3 f5 f4 c==> cMEM f4 f3 c==> cMEM f6 f3 c==> c= cl'z f0 f1 f3 f2 f4 c==> c~ c= f4 f6 c==> c= cnext_el f7 f2 f8 c==> c= cfind_face f0 f2 f7 c==> cMEM f6 f7 c==> cMEM f4 f7 c==> c< cindexf f8 f6 f7 cindexf f8 f4 f7 c==> c= cfind_face f0 f6 f7 c==> c= cparts f0 cbetwn f7 f6 f4 cMAP / cCONS b0 cNIL cbetwn f7 f6 f4 c==> cuniq cbetwn f7 f6 f4 c==> cMEM f9 cbetwn f7 f6 f4 c==> cMEM f10 cbetwn f7 f6 f4 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f0 f9 f7 c==> c= cfind_face f0 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))) = T)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c~ c= cztrans f0 f1 f2 f3 cNUMERAL c_0 cytrans f0 f1 f2 f3 cNUMERAL c_0 cT
+ (is_restricted (hypermap_of_list L)), (good_list L), ((MEM u) f), ((MEM v) f) |- (((MEM v) f) /\ ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cMEM f1 f2 c==> cMEM f3 f2 c/\ cMEM f3 f2 c==> c= cfind_face f0 f1 f2 c==> c= cfind_face f0 f3 f2 c==> cIN f3 * * part cnode chypermap_of_list f0 f1 c= f1 f3
- (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) ==> (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f3 cl'y f0 f2 f3 cl'z f0 f1 f2 f3
- |- ((\p. (!q. ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q))))) p)
T * / ! c= cLAST cAPPEND b0 b1 cCOND c= b1 cNIL cLAST b0 cLAST b1 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (uniq (((betwn f) y) z)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) (((betwn f) y) z)), ((MEM v) (((betwn f) y) z)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cuniq cbetwn f6 f3 f2 c==> cgood_list f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f7 f2 c==> c= cnext_el cfind_face f1 f5 f5 f8 c==> c= cprev_el f4 f2 f7 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f6 c==> c= cfind_face f1 f3 f6 c==> c= cparts f1 cbetwn f6 f3 f2 cMAP / cCONS b0 cNIL cbetwn f6 f3 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f8 f3 f6 cindexf f8 f2 f6 c==> cMEM f9 cbetwn f6 f3 f2 c==> cMEM f10 cbetwn f6 f3 f2 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f6 c==> cMEM f3 f4 c==> cMEM f2 f6 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> c= cFST f9 cFST f10 c==> cMEM f9 f6 c==> cMEM f10 f6 c==> c= cfind_face f1 f9 f6 c==> c= cfind_face f1 f10 f6 c==> cIN f10 * * part cnode chypermap_of_list f1 f9 c= f9 f10
- (!u. (!v. ((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((FST u) = (FST v)))) ==> (u = v)))) |- (((!u. (!v. ((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((FST u) = (FST v)))) ==> (u = v)))) ==> (uniq ((MAP (\x. (FST x))) (((betwn f) y) z)))) ==> (uniq ((MAP (\x. (FST x))) (((betwn f) y) z))))
T c==> ! ! c==> c/\ cMEM b0 cbetwn f0 f1 f2 c/\ cMEM b1 cbetwn f0 f1 f2 c= cFST b0 cFST b1 c= b0 b1 c==> c==> ! ! c==> c/\ cMEM b0 cbetwn f0 f1 f2 c/\ cMEM b1 cbetwn f0 f1 f2 c= cFST b0 cFST b1 c= b0 b1 cuniq cMAP / cFST b0 cbetwn f0 f1 f2 cuniq cMAP / cFST b0 cbetwn f0 f1 f2
+ ((MEM v) f), (v IN ((node (hypermap_of_list L)) u)) |- (((((node (hypermap_of_list L)) u) INTER (set_of_list f)) = (u INSERT EMPTY)) ==> (u = v))
T c==> cMEM f0 f1 c==> cIN f0 * * part cnode chypermap_of_list f2 f3 c==> c= * * part cINTER * * part cnode chypermap_of_list f2 f3 * part cset_of_list f1 * * part cINSERT f3 part cEMPTY c= f3 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f4 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f3 f6 cl'z f1 f0 f2 f3
+ |- ((((next_el ((find_face L) x)) x) = ((next_el ((find_face L) x)) x)) = ((\w. (((next_el ((find_face L) x)) x) = w)) ((next_el ((find_face L) x)) x)))
T c= c= cnext_el cfind_face f0 f1 f1 cnext_el cfind_face f0 f1 f1 * / c= cnext_el cfind_face f0 f1 f1 b0 cnext_el cfind_face f0 f1 f1
+ |- (((!L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) ==> ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L)) = ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L))
T c= c==> ! ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0 * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f6 f2 c==> cMEM f5 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f5 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f3 f6 cl'z f1 f0 f2 f3
+ |- (((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x))) = ((MAP (\x. ((CONS x) NIL))) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x)))))) ==> ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x))) = ((MAP (\x. ((CONS x) NIL))) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x)))))) x)) = ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x))) = ((MAP (\x. ((CONS x) NIL))) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x)))))) x))
T c= c==> ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 c= cparts f0 cbetwn cfind_face f0 b0 cl'y f0 f2 b0 cl'z f0 f1 f2 b0 cMAP / cCONS b1 cNIL cbetwn cfind_face f0 b0 cl'y f0 f2 b0 cl'z f0 f1 f2 b0 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 c= cparts f0 cbetwn cfind_face f0 b0 cl'y f0 f2 b0 cl'z f0 f1 f2 b0 cMAP / cCONS b1 cNIL cbetwn cfind_face f0 b0 cl'y f0 f2 b0 cl'z f0 f1 f2 b0 f3 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 c= cparts f0 cbetwn cfind_face f0 b0 cl'y f0 f2 b0 cl'z f0 f1 f2 b0 cMAP / cCONS b1 cNIL cbetwn cfind_face f0 b0 cl'y f0 f2 b0 cl'z f0 f1 f2 b0 f3
+ (((face (hypermap_of_list L)) u) = (set_of_list f)), (((find_face L) u) = f), ((MEM u) f), ((MEM v) f), (v IN ((node (hypermap_of_list L)) u)) |- ((((MEM u) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) u) INTER ((face (hypermap_of_list L)) u)) = (u INSERT EMPTY))) ==> (u = v))
T c==> c= * * part cface chypermap_of_list f0 f1 * part cset_of_list f2 c==> c= cfind_face f0 f1 f2 c==> cMEM f1 f2 c==> cMEM f3 f2 c==> cIN f3 * * part cnode chypermap_of_list f0 f1 c==> c==> cMEM f1 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 f1 * * part cface chypermap_of_list f0 f1 * * part cINSERT f1 part cEMPTY c= f1 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f8 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f7 f3 f8 cindexf f7 f2 f8 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f8 c==> cMEM f3 f4 c==> cMEM f2 f8 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> c= cfind_face f1 f3 f8 c==> c= cparts f1 cbetwn f8 f3 f2 cMAP / cCONS b0 cNIL cbetwn f8 f3 f2 c==> cuniq cbetwn f8 f3 f2 c==> cMEM f9 cbetwn f8 f3 f2 c==> cMEM f10 cbetwn f8 f3 f2 c==> c= cFST f9 cFST f10 c==> cMEM f9 f8 c==> cMEM f10 f8 c==> c= cfind_face f1 f9 f8 c==> c= cfind_face f1 f10 f8 c==> cIN f10 * * part cnode chypermap_of_list f1 f9 c= f9 f10
+ |- (((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))) = (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c= c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f1 f2 cl'z f0 f3 f4 f1 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f1 f2 cl'z f0 f3 f4 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c/\ c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cs_flag_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f4 cl'z f0 f3 f1 f2
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))) |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))) r)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cztrans f0 f1 b0 b1 cNUMERAL c_0 b0 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (!f. (((\f. (((find_face L) x) = f)) f) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 ! c==> * / c= cfind_face f1 f5 b1 b0 cuniq cMAP / cFST cHD b1 cparts f1 cbetwn cfind_face f1 f5 f3 f2
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x))))))), ((((marked_list L) N) r) x) |- (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f3 cl'y f0 f1 f3 cl'z f0 f2 f1 f3
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ (is_restricted (hypermap_of_list L)), (good_list L), ((FST u) = (FST v)) |- (((FST u) = (FST v)) /\ (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cFST f1 cFST f2 c/\ c= cFST f1 cFST f2 c==> cMEM f1 f3 c==> cMEM f2 f3 c==> c= cfind_face f0 f1 f3 c==> c= cfind_face f0 f2 f3 c==> cIN f2 * * part cnode chypermap_of_list f0 f1 c= f1 f2
+ |- (((!y. (!f. (((uniq y) /\ (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v))))) ==> (uniq ((MAP f) y))))) ==> ((\y. (!f. (((uniq y) /\ (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v))))) ==> (uniq ((MAP f) y))))) (((betwn f) y) z))) = ((\y. (!f. (((uniq y) /\ (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v))))) ==> (uniq ((MAP f) y))))) (((betwn f) y) z)))
T c= c==> ! ! c==> c/\ cuniq b0 ! ! c==> c/\ cMEM b2 b0 c/\ cMEM b3 b0 c= * b1 b2 * b1 b3 c= b2 b3 cuniq cMAP b1 b0 * / ! c==> c/\ cuniq b0 ! ! c==> c/\ cMEM b2 b0 c/\ cMEM b3 b0 c= * b1 b2 * b1 b3 c= b2 b3 cuniq cMAP b1 b0 cbetwn f0 f1 f2 * / ! c==> c/\ cuniq b0 ! ! c==> c/\ cMEM b2 b0 c/\ cMEM b3 b0 c= * b1 b2 * b1 b3 c= b2 b3 cuniq cMAP b1 b0 cbetwn f0 f1 f2
+ (is_restricted (hypermap_of_list L)), (good_list L), ((all (\s. (~ (s = NIL)))) N) |- (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> call / c~ c= b0 cNIL f1 c/\ call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f2 c==> c= cnext_el f2 f3 f4 c==> cMEM f4 f2 c==> cMEM f5 f2 c==> c= cl'z f0 f1 f2 f6 f4 c==> c~ c= f4 f5 c==> c= cnext_el f7 f6 f8 c==> c= cfind_face f0 f6 f7 c==> cMEM f5 f7 c==> cMEM f4 f7 c==> c< cindexf f8 f5 f7 cindexf f8 f4 f7 c==> c= cfind_face f0 f5 f7 c==> c= cparts f0 cbetwn f7 f5 f4 cMAP / cCONS b0 cNIL cbetwn f7 f5 f4 c==> cuniq cbetwn f7 f5 f4 c==> cMEM f9 cbetwn f7 f5 f4 c==> cMEM f10 cbetwn f7 f5 f4 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f0 f9 f7 c==> c= cfind_face f0 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f4 c==> c/\ call * part cf_last f0 f2 c/\ call * part cloop_list f0 f2 ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f6 cl'z f0 f2 f1 f3
- |- ((\L. (!N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))))))) L)
T * / ! ! ! ! c= cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 cztrans b0 b1 b2 b3 b4 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (uniq (((betwn f) y) z)), (good_list L), (good_list_nodes L), ((FST u) = (FST v)), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) u) = f), (((find_face L) v) = f), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) f), ((MEM u) (((betwn f) y) z)), ((MEM v) f), ((MEM v) (((betwn f) y) z)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((good_list_nodes L) /\ ((MEM u) (list_of_darts L))) ==> ((v IN ((node (hypermap_of_list L)) u)) = (((FST u) = (FST v)) /\ ((MEM v) (list_of_darts L))))) ==> (u = v))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cuniq cbetwn f6 f3 f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f7 cFST f8 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f9 f2 c==> c= cnext_el cfind_face f1 f5 f5 f10 c==> c= cprev_el f4 f2 f9 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f7 f6 c==> c= cfind_face f1 f8 f6 c==> c= cfind_face f1 f5 f6 c==> c= cfind_face f1 f3 f6 c==> c= cparts f1 cbetwn f6 f3 f2 cMAP / cCONS b0 cNIL cbetwn f6 f3 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f10 f3 f6 cindexf f10 f2 f6 c==> cMEM f7 f6 c==> cMEM f7 cbetwn f6 f3 f2 c==> cMEM f8 f6 c==> cMEM f8 cbetwn f6 f3 f2 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f6 c==> cMEM f3 f4 c==> cMEM f2 f6 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> c==> c/\ cgood_list_nodes f1 cMEM f7 clist_of_darts f1 c= cIN f8 * * part cnode chypermap_of_list f1 f7 c/\ c= cFST f7 cFST f8 cMEM f8 clist_of_darts f1 c= f7 f8
+ |- (((?y. ((((l'y L) r) x) = y)) ==> (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x)))))) = (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x))))))
T c= c==> c? / c= cl'y f0 f1 f2 b0 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f2 cl'y f0 f1 f2 cl'z f0 f3 f1 f2 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f2 cl'y f0 f1 f2 cl'z f0 f3 f1 f2
- |- (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))
T c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cztrans f0 f1 f2 f3 f4
- |- (((!y. (((MEM x) ((CONS y) NIL)) = (x = y))) ==> ((\y. (((MEM x) ((CONS y) NIL)) = (x = y))) y)) = ((\y. (((MEM x) ((CONS y) NIL)) = (x = y))) y))
T c= c==> ! c= cMEM f0 cCONS b0 cNIL c= f0 b0 * / c= cMEM f0 cCONS b0 cNIL c= f0 b0 f1 * / c= cMEM f0 cCONS b0 cNIL c= f0 b0 f1
- ((\f. (((find_face L) x) = f)) f) |- (((((find_face L) x) = f) ==> (?f. (((find_face L) x) = f))) = (?f. (((find_face L) x) = f)))
T c==> * / c= cfind_face f0 f1 b0 f2 c= c==> c= cfind_face f0 f1 f2 c? / c= cfind_face f0 f1 b0 c? / c= cfind_face f0 f1 b0
+ ((MEM v) f), (v IN ((node (hypermap_of_list L)) u)) |- (T = (v IN (((node (hypermap_of_list L)) u) INTER (set_of_list f))))
T c==> cMEM f0 f1 c==> cIN f0 * * part cnode chypermap_of_list f2 f3 c= cT cIN f0 * * part cINTER * * part cnode chypermap_of_list f2 f3 * part cset_of_list f1
+ |- (((!H. ((simple_hypermap H) = (!x. ((x IN (dart H)) ==> ((((node H) x) INTER ((face H) x)) = (x INSERT EMPTY)))))) ==> ((\H. ((simple_hypermap H) = (!x. ((x IN (dart H)) ==> ((((node H) x) INTER ((face H) x)) = (x INSERT EMPTY)))))) H)) = ((\H. ((simple_hypermap H) = (!x. ((x IN (dart H)) ==> ((((node H) x) INTER ((face H) x)) = (x INSERT EMPTY)))))) H))
T c= c==> ! c= csimple_hypermap b0 ! c==> cIN b1 * part cdart b0 c= * * part cINTER * * part cnode b0 b1 * * part cface b0 b1 * * part cINSERT b1 part cEMPTY * / c= csimple_hypermap b0 ! c==> cIN b1 * part cdart b0 c= * * part cINTER * * part cnode b0 b1 * * part cface b0 b1 * * part cINSERT b1 part cEMPTY f0 * / c= csimple_hypermap b0 ! c==> cIN b1 * part cdart b0 c= * * part cINTER * * part cnode b0 b1 * * part cface b0 b1 * * part cINSERT b1 part cEMPTY f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (\l. (~ (l = NIL)))) L) /\ ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c/\ call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f4 f3 c==> cMEM f3 f1 c==> cMEM f5 f1 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
+ |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x))) = ((MAP (\x. ((CONS x) NIL))) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x))))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c= cparts b0 cbetwn cfind_face b0 b3 cl'y b0 b2 b3 cl'z b0 b1 b2 b3 cMAP / cCONS b4 cNIL cbetwn cfind_face b0 b3 cl'y b0 b2 b3 cl'z b0 b1 b2 b3 f0
- |- (((!s. ((~ (s = NIL)) = (?x. ((MEM x) s)))) ==> ((\s. ((~ (s = NIL)) = (?x. ((MEM x) s)))) s)) = ((\s. ((~ (s = NIL)) = (?x. ((MEM x) s)))) s))
T c= c==> ! c= c~ c= b0 cNIL c? / cMEM b1 b0 * / c= c~ c= b0 cNIL c? / cMEM b1 b0 f0 * / c= c~ c= b0 cNIL c? / cMEM b1 b0 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (uniq (((betwn f) y) z)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), (((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((FST u) = (FST v)))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((FST u) = (FST v)))) /\ (u = v))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cuniq cbetwn f6 f3 f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f7 f2 c==> c= cnext_el cfind_face f1 f5 f5 f8 c==> c= cprev_el f4 f2 f7 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f6 c==> c= cfind_face f1 f3 f6 c==> c= cparts f1 cbetwn f6 f3 f2 cMAP / cCONS b0 cNIL cbetwn f6 f3 f2 c==> c/\ cMEM f9 cbetwn f6 f3 f2 c/\ cMEM f10 cbetwn f6 f3 f2 c= cFST f9 cFST f10 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f8 f3 f6 cindexf f8 f2 f6 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f6 c==> cMEM f3 f4 c==> cMEM f2 f6 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c/\ c/\ cMEM f9 cbetwn f6 f3 f2 c/\ cMEM f10 cbetwn f6 f3 f2 c= cFST f9 cFST f10 c= f9 f10
- |- (((!a. (!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x)))))) ==> ((\a. (!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x)))))) a)) = ((\a. (!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x)))))) a))
T c= c==> ! ! c= call b0 b1 ! c==> cMEM b2 b1 * b0 b2 * / ! c= call b0 b1 ! c==> cMEM b2 b1 * b0 b2 f0 * / ! c= call b0 b1 ! c==> cMEM b2 b1 * b0 b2 f0
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) /\ ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c/\ ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))) |- (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f4 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c==> cuniq f2 c==> c= cnext_el f2 f5 f4 c==> cMEM f4 f2 c==> cMEM f6 f2 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f3 f6 cl'z f1 f0 f2 f3
+ (good_list_nodes L) |- ((good_list_nodes L) = T)
T c==> cgood_list_nodes f0 c= cgood_list_nodes f0 cT
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f5 f3 f2
+ (is_restricted (hypermap_of_list L)), (good_list L) |- (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cMEM f1 f2 c==> c= cl'z f0 f3 f2 f4 f5 c==> c~ c= f5 f1 c==> c= cnext_el f6 f4 f7 c==> c= cfind_face f0 f4 f6 c==> cMEM f1 f6 c==> cMEM f5 f6 c==> c< cindexf f7 f1 f6 cindexf f7 f5 f6 c==> c= cfind_face f0 f1 f6 c==> c= cparts f0 cbetwn f6 f1 f5 cMAP / cCONS b0 cNIL cbetwn f6 f1 f5 c==> cuniq cbetwn f6 f1 f5 c==> cMEM f8 cbetwn f6 f1 f5 c==> cMEM f9 cbetwn f6 f1 f5 c==> c= cFST f8 cFST f9 c==> cMEM f8 f6 c==> cMEM f9 f6 c==> c= cfind_face f0 f8 f6 c==> c= cfind_face f0 f9 f6 c==> cIN f9 * * part cnode chypermap_of_list f0 f8 c= f8 f9
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) /\ (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cs_flag_list f0 f3 f1 f2 c==> cmarked_list f0 f3 f1 f2 c/\ cs_flag_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f5 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f4 cl'z f0 f3 f1 f2
+ |- (((!f. (((uniq (((betwn f) y) z)) /\ (!u. (!v. ((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((f u) = (f v)))) ==> (u = v))))) ==> (uniq ((MAP f) (((betwn f) y) z))))) ==> ((\f. (((uniq (((betwn f) y) z)) /\ (!u. (!v. ((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((f u) = (f v)))) ==> (u = v))))) ==> (uniq ((MAP f) (((betwn f) y) z))))) (\x. (FST x)))) = ((\f. (((uniq (((betwn f) y) z)) /\ (!u. (!v. ((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((f u) = (f v)))) ==> (u = v))))) ==> (uniq ((MAP f) (((betwn f) y) z))))) (\x. (FST x))))
T c= c==> ! c==> c/\ cuniq cbetwn f0 f1 f2 ! ! c==> c/\ cMEM b1 cbetwn f0 f1 f2 c/\ cMEM b2 cbetwn f0 f1 f2 c= * b0 b1 * b0 b2 c= b1 b2 cuniq cMAP b0 cbetwn f0 f1 f2 * / c==> c/\ cuniq cbetwn f0 f1 f2 ! ! c==> c/\ cMEM b1 cbetwn f0 f1 f2 c/\ cMEM b2 cbetwn f0 f1 f2 c= * b0 b1 * b0 b2 c= b1 b2 cuniq cMAP b0 cbetwn f0 f1 f2 / cFST b0 * / c==> c/\ cuniq cbetwn f0 f1 f2 ! ! c==> c/\ cMEM b1 cbetwn f0 f1 f2 c/\ cMEM b2 cbetwn f0 f1 f2 c= * b0 b1 * b0 b2 c= b1 b2 cuniq cMAP b0 cbetwn f0 f1 f2 / cFST b0
- (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1) |- ((((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1) /\ (?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)))
T c==> c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 f4 c/\ c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 f4 c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) /\ (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cl'z f1 f0 f2 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f6 f2 c==> cMEM f5 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c/\ ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f3 f6 f5
+ |- ((\w. (((MEM w) (((betwn f) y) z)) ==> ((MEM w) f))) v)
T * / c==> cMEM b0 cbetwn f0 f1 f2 cMEM b0 f0 f3
+ |- (((!s. ((uniq s) ==> (((next_el s) ((prev_el s) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))))) ==> ((\s. ((uniq s) ==> (((next_el s) ((prev_el s) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))))) r)) = ((\s. ((uniq s) ==> (((next_el s) ((prev_el s) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))))) r))
T c= c==> ! c==> cuniq b0 c= cnext_el b0 cprev_el b0 cztrans f0 f1 f2 f3 cNUMERAL c_0 cztrans f0 f1 f2 f3 cNUMERAL c_0 * / c==> cuniq b0 c= cnext_el b0 cprev_el b0 cztrans f0 f1 f2 f3 cNUMERAL c_0 cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 * / c==> cuniq b0 c= cnext_el b0 cprev_el b0 cztrans f0 f1 f2 f3 cNUMERAL c_0 cztrans f0 f1 f2 f3 cNUMERAL c_0 f2
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f1 f2 cNUMERAL c_0 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cs_flag_list f0 f3 f1 f2 c==> cmarked_list f0 f3 f1 f2 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f3 f1 f2
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cl'y f0 f1 f2 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c==> cmarked_list f0 f4 f1 f2 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f2 f3 cl'z f0 f4 f1 f2
+ |- (((!u. (!v. (!w. (((MEM w) (((betwn f) u) v)) ==> ((MEM w) f))))) ==> ((\u. (!v. (!w. (((MEM w) (((betwn f) u) v)) ==> ((MEM w) f))))) y)) = ((\u. (!v. (!w. (((MEM w) (((betwn f) u) v)) ==> ((MEM w) f))))) y))
T c= c==> ! ! ! c==> cMEM b2 cbetwn f0 b0 b1 cMEM b2 f0 * / ! ! c==> cMEM b2 cbetwn f0 b0 b1 cMEM b2 f0 f1 * / ! ! c==> cMEM b2 cbetwn f0 b0 b1 cMEM b2 f0 f1
+ |- ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x)
T * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((uniq (((betwn f) y) z)) ==> (uniq ((MAP (\x. (FST x))) (((betwn f) y) z))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f8 c==> c= cfind_face f1 f3 f8 c==> c= cparts f1 cbetwn f8 f3 f2 cMAP / cCONS b0 cNIL cbetwn f8 f3 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f7 f3 f8 cindexf f7 f2 f8 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f8 c==> cMEM f3 f4 c==> cMEM f2 f8 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cuniq cbetwn f8 f3 f2 cuniq cMAP / cFST b0 cbetwn f8 f3 f2
+ |- ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i)
T * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cl'y f0 f1 f2 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c==> cmarked_list f0 f4 f1 f2 c/\ c= cl'y f0 f1 f2 f3 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f4 f1 f2 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f3 cl'z f0 f4 f1 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f8 c==> c= cfind_face f1 f3 f8 c==> c= cparts f1 cbetwn f8 f3 f2 cMAP / cCONS b0 cNIL cbetwn f8 f3 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f7 f3 f8 cindexf f7 f2 f8 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f8 c==> cMEM f3 f4 c==> cMEM f2 f8 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cuniq cbetwn f8 f3 f2 c==> cMEM f9 cbetwn f8 f3 f2 c==> cMEM f10 cbetwn f8 f3 f2 c==> c= cFST f9 cFST f10 c==> cMEM f9 f8 c==> cMEM f10 f8 c==> c= cfind_face f1 f9 f8 c==> c= cfind_face f1 f10 f8 c==> cIN f10 * * part cnode chypermap_of_list f1 f9 c= f9 f10
+ |- ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x)
T * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
+ |- ((\x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))) x)
T * / ! c= cytrans f0 f1 f2 b0 b1 cl'y f0 crtrans f0 f1 f2 b0 b1 b0 f3
+ |- (((!f. (!u. (!v. (!w. (((MEM w) (((betwn f) u) v)) ==> ((MEM w) f)))))) ==> ((\f. (!u. (!v. (!w. (((MEM w) (((betwn f) u) v)) ==> ((MEM w) f)))))) f)) = ((\f. (!u. (!v. (!w. (((MEM w) (((betwn f) u) v)) ==> ((MEM w) f)))))) f))
T c= c==> ! ! ! ! c==> cMEM b3 cbetwn b0 b1 b2 cMEM b3 b0 * / ! ! ! c==> cMEM b3 cbetwn b0 b1 b2 cMEM b3 b0 f0 * / ! ! ! c==> cMEM b3 cbetwn b0 b1 b2 cMEM b3 b0 f0
- |- (((!p. (!q. ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q))))) ==> ((\p. (!q. ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q))))) p)) = ((\p. (!q. ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q))))) p))
T c= c==> ! ! c= cLAST cAPPEND b0 b1 cCOND c= b1 cNIL cLAST b0 cLAST b1 * / ! c= cLAST cAPPEND b0 b1 cCOND c= b1 cNIL cLAST b0 cLAST b1 f0 * / ! c= cLAST cAPPEND b0 b1 cCOND c= b1 cNIL cLAST b0 cLAST b1 f0
+ |- ((\w. (((next_el ((find_face L) x)) x) = w)) ((next_el ((find_face L) x)) x))
T * / c= cnext_el cfind_face f0 f1 f1 b0 cnext_el cfind_face f0 f1 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) /\ (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c/\ c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((next_el ((find_face L) x)) x) = w) /\ (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c/\ c= cnext_el cfind_face f1 f5 f5 f7 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f5 f3 f2
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) |- (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 c~ c= cztrans f0 b0 b1 b2 cNUMERAL c_0 cytrans f0 b0 b1 b2 cNUMERAL c_0
+ (is_restricted (hypermap_of_list L)), (good_list L), ((MEM z) f) |- (((MEM z) f) /\ (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cMEM f1 f2 c/\ cMEM f1 f2 c==> c< cindexf f3 f4 f2 cindexf f3 f1 f2 c==> c= cfind_face f0 f4 f2 c==> c= cparts f0 cbetwn f2 f4 f1 cMAP / cCONS b0 cNIL cbetwn f2 f4 f1 c==> cuniq cbetwn f2 f4 f1 c==> cMEM f5 cbetwn f2 f4 f1 c==> cMEM f6 cbetwn f2 f4 f1 c==> c= cFST f5 cFST f6 c==> cMEM f5 f2 c==> cMEM f6 f2 c==> c= cfind_face f0 f5 f2 c==> c= cfind_face f0 f6 f2 c==> cIN f6 * * part cnode chypermap_of_list f0 f5 c= f5 f6
+ |- ((v = u) ==> (u = v))
T c==> c= f0 f1 c= f1 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> c= cnext_el f3 f2 cf_list f0 f2 c==> c= cprev_el f3 f4 f5 c==> c= cl'y f0 f3 f2 f6 c==> c= cfind_face f0 f2 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f2 f3 c==> cMEM f2 clist_of_darts f0 c==> cMEM f3 f1 c==> call / c~ c= b0 cNIL f0 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> call / c~ c= b0 cNIL f1 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f3 f2 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f3 c==> c= cnext_el f3 f5 f4 c==> cMEM f4 f3 c==> cMEM f6 f3 c==> c= cl'z f0 f1 f3 f2 f4 c==> c~ c= f4 f6 c==> c= cnext_el f7 f2 f8 c==> c= cfind_face f0 f2 f7 c==> cMEM f6 f7 c==> cMEM f4 f7 c==> c< cindexf f8 f6 f7 cindexf f8 f4 f7 c==> c= cfind_face f0 f6 f7 c==> c= cparts f0 cbetwn f7 f6 f4 cMAP / cCONS b0 cNIL cbetwn f7 f6 f4 c==> cuniq cbetwn f7 f6 f4 c==> cMEM f9 cbetwn f7 f6 f4 c==> cMEM f10 cbetwn f7 f6 f4 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f0 f9 f7 c==> c= cfind_face f0 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
+ (is_restricted (hypermap_of_list L)), (good_list L) |- (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f6 c==> cMEM f2 clist_of_darts f0 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> c= cnext_el f1 f5 f4 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> c= cl'z f0 f7 f1 f2 f4 c==> c~ c= f4 f3 c==> c= cnext_el f6 f2 f8 c==> c= cfind_face f0 f2 f6 c==> cMEM f3 f6 c==> cMEM f4 f6 c==> c< cindexf f8 f3 f6 cindexf f8 f4 f6 c==> c= cfind_face f0 f3 f6 c==> c= cparts f0 cbetwn f6 f3 f4 cMAP / cCONS b0 cNIL cbetwn f6 f3 f4 c==> cuniq cbetwn f6 f3 f4 c==> cMEM f9 cbetwn f6 f3 f4 c==> cMEM f10 cbetwn f6 f3 f4 c==> c= cFST f9 cFST f10 c==> cMEM f9 f6 c==> cMEM f10 f6 c==> c= cfind_face f0 f9 f6 c==> c= cfind_face f0 f10 f6 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
+ |- (?f. (((find_face L) x) = f))
T c? / c= cfind_face f0 f1 b0
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 cs_flag_list f0 f3 f1 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f2 cl'y f0 f1 f2 cl'z f0 f3 f1 f2
+ |- ((t = T) = t)
T c= c= f0 cT f0
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- (((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))) ==> ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))) x)) = ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))) x))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 f2 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 f2 f3 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 f2 f3
- |- (((MEM x) ((CONS y) NIL)) = (x = y))
T c= cMEM f0 cCONS f1 cNIL c= f0 f1
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) |- (((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))))) ==> ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))))) N)) = ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))))) N))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 c= c==> ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 c~ c= cztrans f0 b0 b1 b2 cNUMERAL c_0 cytrans f0 b0 b1 b2 cNUMERAL c_0 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 c~ c= cztrans f0 b0 b1 b2 cNUMERAL c_0 cytrans f0 b0 b1 b2 cNUMERAL c_0 f1 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 c~ c= cztrans f0 b0 b1 b2 cNUMERAL c_0 cytrans f0 b0 b1 b2 cNUMERAL c_0 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cl'y f0 f1 f2 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c==> cmarked_list f0 f4 f1 f2 c/\ c= cl'y f0 f1 f2 f3 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f4 f1 f2 cNUMERAL c_0 f5 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f3 cl'z f0 f4 f1 f2
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))) /\ (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c/\ c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) x))) ==> (((find_face L) y) = ((find_face L) x))) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn f) y) z)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f8 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f7 f3 f8 cindexf f7 f2 f8 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f8 c==> cMEM f3 f4 c==> cMEM f2 f8 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c==> c==> c/\ cuniq clist_of_darts f1 cMEM f3 cfind_face f1 f5 c= cfind_face f1 f3 cfind_face f1 f5 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn f8 f3 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn f) y) z)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f8 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c==> c==> c/\ cgood_list f1 c/\ cgood_list_nodes f1 c/\ cmarked_list f1 f0 f4 f5 c/\ c~ cfinal_list f1 f4 c/\ c= f8 cfind_face f1 f5 c= f7 cnext_el f8 f5 c/\ cMEM cytrans f1 f0 f4 f5 cNUMERAL c_0 f8 c/\ cMEM cztrans f1 f0 f4 f5 cNUMERAL c_0 f8 c< cindexf f7 cytrans f1 f0 f4 f5 cNUMERAL c_0 f8 cindexf f7 cztrans f1 f0 f4 f5 cNUMERAL c_0 f8 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn f8 f3 f2
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cs_flag_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f4 cl'z f0 f3 f1 f2
+ (is_restricted (hypermap_of_list L)), (good_list L), ((all (f_last L)) N) |- (((all (f_last L)) N) /\ (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> call * part cf_last f0 f1 c/\ call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f2 c==> c= cnext_el f2 f3 f4 c==> cMEM f4 f2 c==> cMEM f5 f2 c==> c= cl'z f0 f1 f2 f6 f4 c==> c~ c= f4 f5 c==> c= cnext_el f7 f6 f8 c==> c= cfind_face f0 f6 f7 c==> cMEM f5 f7 c==> cMEM f4 f7 c==> c< cindexf f8 f5 f7 cindexf f8 f4 f7 c==> c= cfind_face f0 f5 f7 c==> c= cparts f0 cbetwn f7 f5 f4 cMAP / cCONS b0 cNIL cbetwn f7 f5 f4 c==> cuniq cbetwn f7 f5 f4 c==> cMEM f9 cbetwn f7 f5 f4 c==> cMEM f10 cbetwn f7 f5 f4 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f0 f9 f7 c==> c= cfind_face f0 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) L)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 f0
+ |- ((((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))) = (((normal_list L) N) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))
T c= c==> c/\ cuniq cflatten f0 c/\ call / c~ c= b0 cNIL f0 c/\ call * part cf_last f1 f0 c/\ call * part cloop_list f1 f0 ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f2 f3 cl'z f1 f0 f4 f2 c==> cnormal_list f1 f0 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f2 f3 cl'z f1 f0 f4 f2
- |- (((!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))) ==> ((\ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))) ram2)) = ((\ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))) ram2))
T c= c==> ! c= csplit_normal_list f0 f1 f2 f3 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b6 b7 cAPPEND b8 b5 cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 f3 cCONS f3 cNIL cAPPEND cCONS b1 cNIL cAPPEND cbetwn f1 b1 b0 cCONS b0 cNIL cflatten cmap b4 b5 cbetwn f2 f3 b2 / cmap / cPOWER * part cn_list f0 b5 b4 cupt cNUMERAL cBIT1 c_0 * b3 cFST b4 / csizel cfilter / c= b4 b3 cflatten f0 cnext_el f1 b0 cnext_el f1 f3 * / c= csplit_normal_list f0 f1 f2 f3 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b6 b7 cAPPEND b8 b5 cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 f3 cCONS f3 cNIL cAPPEND cCONS b1 cNIL cAPPEND cbetwn f1 b1 b0 cCONS b0 cNIL cflatten cmap b4 b5 cbetwn f2 f3 b2 / cmap / cPOWER * part cn_list f0 b5 b4 cupt cNUMERAL cBIT1 c_0 * b3 cFST b4 / csizel cfilter / c= b4 b3 cflatten f0 cnext_el f1 b0 cnext_el f1 f3 f4 * / c= csplit_normal_list f0 f1 f2 f3 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b6 b7 cAPPEND b8 b5 cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 f3 cCONS f3 cNIL cAPPEND cCONS b1 cNIL cAPPEND cbetwn f1 b1 b0 cCONS b0 cNIL cflatten cmap b4 b5 cbetwn f2 f3 b2 / cmap / cPOWER * part cn_list f0 b5 b4 cupt cNUMERAL cBIT1 c_0 * b3 cFST b4 / csizel cfilter / c= b4 b3 cflatten f0 cnext_el f1 b0 cnext_el f1 f3 f4
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f4 c==> c/\ call / c~ c= b0 cNIL f2 c/\ call * part cf_last f0 f2 c/\ call * part cloop_list f0 f2 ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f6 cl'z f0 f2 f1 f3
+ (uniq (list_of_darts L)) |- (((uniq ((find_face L) x)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))) = (((uniq (list_of_darts L)) ==> (uniq ((find_face L) x))) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))
T c==> cuniq clist_of_darts f0 c= c==> cuniq cfind_face f0 f1 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f1 f2 cl'z f0 f3 f4 f1 c==> c==> cuniq clist_of_darts f0 cuniq cfind_face f0 f1 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f1 f2 cl'z f0 f3 f4 f1
+ |- (((!l. (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l))) ==> ((\l. (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l))) l)) = ((\l. (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l))) l))
T c= c==> ! c= cMAP f0 cMAP f1 b0 cMAP * * part co f0 f1 b0 * / c= cMAP f0 cMAP f1 b0 cMAP * * part co f0 f1 b0 f2 * / c= cMAP f0 cMAP f1 b0 cMAP * * part co f0 f1 b0 f2
- (good_list L), (good_list_nodes L) |- ((good_list_nodes L) /\ (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c/\ cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c==> c= cl'y f0 f2 f3 f4 c==> c= cprev_el f2 f5 f6 c==> c= cztrans f0 f1 f2 f3 cNUMERAL c_0 f5 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f4 cl'z f0 f1 f2 f3
+ (good_list L), ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) |- (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x)))))
T c==> cgood_list f0 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f3 cl'y f0 f2 f3 cl'z f0 f1 f2 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) /\ (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f8 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c/\ c= cfind_face f1 f5 f8 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f5 f3 f2
- |- (((!u. (!v. ((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((FST u) = (FST v)))) ==> (u = v)))) ==> (uniq ((MAP (\x. (FST x))) (((betwn f) y) z)))) ==> ((!u. (!v. ((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((FST u) = (FST v)))) ==> (u = v)))) ==> (uniq ((MAP (\x. (FST x))) (((betwn f) y) z)))))
T c==> c==> ! ! c==> c/\ cMEM b0 cbetwn f0 f1 f2 c/\ cMEM b1 cbetwn f0 f1 f2 c= cFST b0 cFST b1 c= b0 b1 cuniq cMAP / cFST b0 cbetwn f0 f1 f2 c==> ! ! c==> c/\ cMEM b0 cbetwn f0 f1 f2 c/\ cMEM b1 cbetwn f0 f1 f2 c= cFST b0 cFST b1 c= b0 b1 cuniq cMAP / cFST b0 cbetwn f0 f1 f2
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) |- (((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x)))) = T)
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c= c==> cIN f1 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 f1 cT
+ |- ((\N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))) N)
T * / ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= b3 cfind_face f0 b2 c= b4 cnext_el b3 b2 c/\ cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 c/\ cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 c< cindexf b4 cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 cindexf b4 cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 f1
- |- (!f. (((\f. (((find_face L) x) = f)) f) ==> (?f. (((find_face L) x) = f))))
T c==> * / c= cfind_face f0 f1 b0 f2 c? / c= cfind_face f0 f1 b0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq ((find_face L) x)) /\ (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c/\ cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
- |- (((POWER f) (SUC n)) = (((POWER f) n) o f))
T c= * * part cPOWER f0 cSUC f1 * * part co * * part cPOWER f0 f1 f0
+ (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) |- ((uniq ((MAP (\x. (FST x))) (((betwn f) y) z))) = (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn f) y) z)))))
T c==> c= cparts f0 cbetwn f1 f2 f3 cMAP / cCONS b0 cNIL cbetwn f1 f2 f3 c= cuniq cMAP / cFST b0 cbetwn f1 f2 f3 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn f1 f2 f3
+ (is_restricted (hypermap_of_list L)), (good_list L), ((MEM x) r), ((MEM r) N), ((normal_list L) N) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((((((l'z L) N) r) x) = z) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))) ==> ((uniq (((betwn f) y) z)) ==> (((MEM u) (((betwn f) y) z)) ==> (((MEM v) (((betwn f) y) z)) ==> (((FST u) = (FST v)) ==> (((MEM u) f) ==> (((MEM v) f) ==> ((((find_face L) u) = f) ==> ((((find_face L) v) = f) ==> ((v IN ((node (hypermap_of_list L)) u)) ==> (u = v)))))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cMEM f1 f2 c==> cMEM f2 f3 c==> cnormal_list f0 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f1 cf_list f0 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f1 c==> cs_flag_list f0 f3 f2 f1 c==> c= cl'y f0 f2 f1 f4 c==> c= cprev_el f2 f5 f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f7 c==> cMEM f1 clist_of_darts f0 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f0 f3 c==> call * part cloop_list f0 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c==> cuniq f2 c==> c= cnext_el f2 f6 f5 c==> cMEM f5 f2 c==> cMEM f4 f2 c==> c= cl'z f0 f3 f2 f1 f5 c==> c~ c= f5 f4 c==> c= cnext_el f7 f1 f8 c==> c= cfind_face f0 f1 f7 c==> cMEM f4 f7 c==> cMEM f5 f7 c==> c< cindexf f8 f4 f7 cindexf f8 f5 f7 c==> c= cfind_face f0 f4 f7 c==> c= cparts f0 cbetwn f7 f4 f5 cMAP / cCONS b0 cNIL cbetwn f7 f4 f5 c==> cuniq cbetwn f7 f4 f5 c==> cMEM f9 cbetwn f7 f4 f5 c==> cMEM f10 cbetwn f7 f4 f5 c==> c= cFST f9 cFST f10 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> c= cfind_face f0 f9 f7 c==> c= cfind_face f0 f10 f7 c==> cIN f10 * * part cnode chypermap_of_list f0 f9 c= f9 f10
+ |- (((!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))) ==> ((\r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))) r)) = ((\r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))) r))
T c= c==> ! ! ! c= cztrans f0 f1 b0 b1 b2 cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 * / ! ! c= cztrans f0 f1 b0 b1 b2 cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 f2 * / ! ! c= cztrans f0 f1 b0 b1 b2 cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM x) (list_of_darts L)) /\ (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c/\ cMEM f2 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
+ |- (((!L. (((uniq (list_of_darts L)) /\ ((MEM v) ((find_face L) x))) ==> (((find_face L) v) = ((find_face L) x)))) ==> ((\L. (((uniq (list_of_darts L)) /\ ((MEM v) ((find_face L) x))) ==> (((find_face L) v) = ((find_face L) x)))) L)) = ((\L. (((uniq (list_of_darts L)) /\ ((MEM v) ((find_face L) x))) ==> (((find_face L) v) = ((find_face L) x)))) L))
T c= c==> ! c==> c/\ cuniq clist_of_darts b0 cMEM f0 cfind_face b0 f1 c= cfind_face b0 f0 cfind_face b0 f1 * / c==> c/\ cuniq clist_of_darts b0 cMEM f0 cfind_face b0 f1 c= cfind_face b0 f0 cfind_face b0 f1 f2 * / c==> c/\ cuniq clist_of_darts b0 cMEM f0 cfind_face b0 f1 c= cfind_face b0 f0 cfind_face b0 f1 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (uniq (((betwn f) y) z)), (good_list L), (good_list_nodes L), ((FST u) = (FST v)), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) u) = f), (((find_face L) v) = f), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) f), ((MEM u) (((betwn f) y) z)), ((MEM v) f), ((MEM v) (((betwn f) y) z)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((find_face L) v) = f) /\ (u = v))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cuniq cbetwn f6 f3 f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f7 cFST f8 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f9 f2 c==> c= cnext_el cfind_face f1 f5 f5 f10 c==> c= cprev_el f4 f2 f9 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f7 f6 c==> c= cfind_face f1 f8 f6 c==> c= cfind_face f1 f5 f6 c==> c= cfind_face f1 f3 f6 c==> c= cparts f1 cbetwn f6 f3 f2 cMAP / cCONS b0 cNIL cbetwn f6 f3 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f10 f3 f6 cindexf f10 f2 f6 c==> cMEM f7 f6 c==> cMEM f7 cbetwn f6 f3 f2 c==> cMEM f8 f6 c==> cMEM f8 cbetwn f6 f3 f2 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f6 c==> cMEM f3 f4 c==> cMEM f2 f6 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c/\ c= cfind_face f1 f8 f6 c= f7 f8
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) /\ (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f1 f2 cNUMERAL c_0 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cs_flag_list f0 f3 f1 f2 c==> cmarked_list f0 f3 f1 f2 c/\ c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f6 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f3 f1 f2
- |- (((!n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) ==> ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n)) = ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n))
T c= c==> ! c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1 * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1
+ |- (((!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) ==> ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N)) = ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N))
T c= c==> ! ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1 * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn f) y) z))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f8 c==> c= cfind_face f1 f3 f8 c==> c= cparts f1 cbetwn f8 f3 f2 cMAP / cCONS b0 cNIL cbetwn f8 f3 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f7 f3 f8 cindexf f7 f2 f8 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f8 c==> cMEM f3 f4 c==> cMEM f2 f8 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn f8 f3 f2
+ |- (((!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))) ==> ((\f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))) f)) = ((\f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))) f))
T c= c==> ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= b0 cfind_face f0 f3 c= b1 cnext_el b0 f3 c/\ cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 b0 c/\ cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 c< cindexf b1 cytrans f0 f1 f2 f3 cNUMERAL c_0 b0 cindexf b1 cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= b0 cfind_face f0 f3 c= b1 cnext_el b0 f3 c/\ cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 b0 c/\ cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 c< cindexf b1 cytrans f0 f1 f2 f3 cNUMERAL c_0 b0 cindexf b1 cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 f4 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= b0 cfind_face f0 f3 c= b1 cnext_el b0 f3 c/\ cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 b0 c/\ cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 c< cindexf b1 cytrans f0 f1 f2 f3 cNUMERAL c_0 b0 cindexf b1 cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 f4
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq r) /\ ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f4 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c/\ cuniq f2 c==> c= cnext_el f2 f5 f4 c==> cMEM f4 f2 c==> cMEM f6 f2 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f3 f6 cl'z f1 f0 f2 f3
- |- (((!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))) ==> ((\l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))) l2)) = ((\l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))) l2))
T c= c==> ! c= cMEM f0 cAPPEND f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 * / c= cMEM f0 cAPPEND f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2 * / c= cMEM f0 cAPPEND f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2
+ |- ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x))) = ((MAP (\x. ((CONS x) NIL))) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x)))))))) N)
T * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 c= cparts f0 cbetwn cfind_face f0 b2 cl'y f0 b1 b2 cl'z f0 b0 b1 b2 cMAP / cCONS b3 cNIL cbetwn cfind_face f0 b2 cl'y f0 b1 b2 cl'z f0 b0 b1 b2 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1) ==> (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cl'y f0 f1 f2 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c==> cmarked_list f0 f4 f1 f2 c==> c= cprev_el f1 cztrans f0 f4 f1 f2 cNUMERAL c_0 f5 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f2 f3 cl'z f0 f4 f1 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (((face (hypermap_of_list L)) u) = (set_of_list f)), (((find_face L) u) = f), ((MEM u) f), ((MEM v) f), (v IN ((node (hypermap_of_list L)) u)) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) /\ (u = v))
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> c= * * part cface chypermap_of_list f0 f1 * part cset_of_list f2 c==> c= cfind_face f0 f1 f2 c==> cMEM f1 f2 c==> cMEM f3 f2 c==> cIN f3 * * part cnode chypermap_of_list f0 f1 c/\ ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c= f1 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ (z = y)) /\ (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) z)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f6 f2 c==> c= cprev_el f4 f2 f6 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c/\ c~ c= f2 f3 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f5 f3 f2
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0
- ((((((ztrans L) N) r) x) (NUMERAL _0)) = z) |- ((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) z)
T c==> c= cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 * / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 f4
+ |- (((!L. (!d. (((good_list L) /\ ((MEM d) (list_of_darts L))) ==> (((face (hypermap_of_list L)) d) = (set_of_list ((find_face L) d)))))) ==> ((\L. (!d. (((good_list L) /\ ((MEM d) (list_of_darts L))) ==> (((face (hypermap_of_list L)) d) = (set_of_list ((find_face L) d)))))) L)) = ((\L. (!d. (((good_list L) /\ ((MEM d) (list_of_darts L))) ==> (((face (hypermap_of_list L)) d) = (set_of_list ((find_face L) d)))))) L))
T c= c==> ! ! c==> c/\ cgood_list b0 cMEM b1 clist_of_darts b0 c= * * part cface chypermap_of_list b0 b1 * part cset_of_list cfind_face b0 b1 * / ! c==> c/\ cgood_list b0 cMEM b1 clist_of_darts b0 c= * * part cface chypermap_of_list b0 b1 * part cset_of_list cfind_face b0 b1 f0 * / ! c==> c/\ cgood_list b0 cMEM b1 clist_of_darts b0 c= * * part cface chypermap_of_list b0 b1 * part cset_of_list cfind_face b0 b1 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (uniq (((betwn f) y) z)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((FST u) = (FST v)))) ==> (u = v)) = T)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cuniq cbetwn f6 f3 f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f7 f2 c==> c= cnext_el cfind_face f1 f5 f5 f8 c==> c= cprev_el f4 f2 f7 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f6 c==> c= cfind_face f1 f3 f6 c==> c= cparts f1 cbetwn f6 f3 f2 cMAP / cCONS b0 cNIL cbetwn f6 f3 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f8 f3 f6 cindexf f8 f2 f6 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f6 c==> cMEM f3 f4 c==> cMEM f2 f6 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c= c==> c/\ cMEM f9 cbetwn f6 f3 f2 c/\ cMEM f10 cbetwn f6 f3 f2 c= cFST f9 cFST f10 c= f9 f10 cT
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))) x)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 c~ c= cztrans f0 f1 f2 b0 cNUMERAL c_0 cytrans f0 f1 f2 b0 cNUMERAL c_0 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f5 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f3 f6 cl'z f1 f0 f2 f3
- ((dart (hypermap_of_list L)) = EMPTY) |- (EMPTY = (dart (hypermap_of_list L)))
T c==> c= * part cdart chypermap_of_list f0 part cEMPTY c= part cEMPTY * part cdart chypermap_of_list f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) /\ (uniq ((MAP (FST o HD)) ((parts L) (((betwn ((find_face L) x)) (((l'y L) r) x)) ((((l'z L) N) r) x))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 f1 cuniq cMAP * * part co part cFST part cHD cparts f0 cbetwn cfind_face f0 f3 cl'y f0 f1 f3 cl'z f0 f2 f1 f3
- |- (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s)))
T c= cMEM f0 cfilter f1 f2 c/\ * f1 f0 cMEM f0 f2
- |- ((\f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))) f)
T * / ! ! c= csplit_normal_list f0 f1 b0 b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b8 b9 cAPPEND b10 b7 cAPPEND cCONS b4 cNIL cAPPEND cbetwn f1 b4 b1 cCONS b1 cNIL cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b2 cCONS b2 cNIL cflatten cmap b6 b7 cbetwn b0 b1 b4 / cmap / cPOWER * part cn_list f0 b7 b6 cupt cNUMERAL cBIT1 c_0 * b5 cFST b6 / csizel cfilter / c= b6 b5 cflatten f0 cnext_el f1 b2 cnext_el f1 b1 f2
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((\d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) d)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 * / c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 f1
- |- ((\l. (((APPEND l) NIL) = l)) l)
T * / c= cAPPEND b0 cNIL b0 f0
- |- ((\s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) s2)
T * / c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f4 f3 c==> cMEM f3 f1 c==> cMEM f5 f1 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
- |- (((!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))) ==> ((\f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))) f)) = ((\f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))) f))
T c= c==> ! ! ! c= csplit_normal_list f0 f1 b0 b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b8 b9 cAPPEND b10 b7 cAPPEND cCONS b4 cNIL cAPPEND cbetwn f1 b4 b1 cCONS b1 cNIL cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b2 cCONS b2 cNIL cflatten cmap b6 b7 cbetwn b0 b1 b4 / cmap / cPOWER * part cn_list f0 b7 b6 cupt cNUMERAL cBIT1 c_0 * b5 cFST b6 / csizel cfilter / c= b6 b5 cflatten f0 cnext_el f1 b2 cnext_el f1 b1 * / ! ! c= csplit_normal_list f0 f1 b0 b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b8 b9 cAPPEND b10 b7 cAPPEND cCONS b4 cNIL cAPPEND cbetwn f1 b4 b1 cCONS b1 cNIL cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b2 cCONS b2 cNIL cflatten cmap b6 b7 cbetwn b0 b1 b4 / cmap / cPOWER * part cn_list f0 b7 b6 cupt cNUMERAL cBIT1 c_0 * b5 cFST b6 / csizel cfilter / c= b6 b5 cflatten f0 cnext_el f1 b2 cnext_el f1 b1 f2 * / ! ! c= csplit_normal_list f0 f1 b0 b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b8 b9 cAPPEND b10 b7 cAPPEND cCONS b4 cNIL cAPPEND cbetwn f1 b4 b1 cCONS b1 cNIL cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b2 cCONS b2 cNIL cflatten cmap b6 b7 cbetwn b0 b1 b4 / cmap / cPOWER * part cn_list f0 b7 b6 cupt cNUMERAL cBIT1 c_0 * b5 cFST b6 / csizel cfilter / c= b6 b5 cflatten f0 cnext_el f1 b2 cnext_el f1 b1 f2
- |- (((!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))))) ==> ((\N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))))) N)) = ((\N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))))) N))
T c= c==> ! ! ! c= ctransform_list f0 b2 c, b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b1 c, b0 b1 c, b8 cSND b7 cAPPEND creplace b1 cCONS cSND b7 cNIL b0 cCONS cFST b7 cNIL csplit_normal_list f0 b1 b6 b3 b5 cfind_face f0 b3 cprev_el b1 b4 cl'z f0 b0 b1 b2 cl'y f0 b1 b2 * / ! ! c= ctransform_list f0 b2 c, b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b1 c, b0 b1 c, b8 cSND b7 cAPPEND creplace b1 cCONS cSND b7 cNIL b0 cCONS cFST b7 cNIL csplit_normal_list f0 b1 b6 b3 b5 cfind_face f0 b3 cprev_el b1 b4 cl'z f0 b0 b1 b2 cl'y f0 b1 b2 f1 * / ! ! c= ctransform_list f0 b2 c, b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b1 c, b0 b1 c, b8 cSND b7 cAPPEND creplace b1 cCONS cSND b7 cNIL b0 cCONS cFST b7 cNIL csplit_normal_list f0 b1 b6 b3 b5 cfind_face f0 b3 cprev_el b1 b4 cl'z f0 b0 b1 b2 cl'y f0 b1 b2 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((normal_list L) N) /\ (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c/\ cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f5 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f4 cl'z f0 f2 f1 f3
- |- ((darts_of_list L) = (set_of_list (list_of_darts L)))
T c= * part cdarts_of_list f0 * part cset_of_list clist_of_darts f0
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- (((!x'. (((\z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) x') ==> (?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)))) ==> ((?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) ==> (?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)))) = ((?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) ==> (?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1))))
T c= c==> ! c==> * / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b1 b0 c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b1 c==> c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 c==> c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0
- |- (((!x. (!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))))) ==> ((\x. (!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))))) x)) = ((\x. (!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))))) x))
T c= c==> ! ! ! c= cMEM b0 ccat b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 * / ! ! c= cMEM b0 ccat b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0 * / ! ! c= cMEM b0 ccat b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c/\ cMEM f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cs_flag_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f5 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f4 cl'z f0 f3 f1 f2
- (!u. (!v. ((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((FST u) = (FST v)))) ==> (u = v)))), ((!u. (!v. ((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((FST u) = (FST v)))) ==> (u = v)))) ==> (uniq ((MAP (\x. (FST x))) (((betwn f) y) z)))) |- ((!u. (!v. ((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((FST u) = (FST v)))) ==> (u = v)))) /\ (uniq ((MAP (\x. (FST x))) (((betwn f) y) z))))
T c==> ! ! c==> c/\ cMEM b0 cbetwn f0 f1 f2 c/\ cMEM b1 cbetwn f0 f1 f2 c= cFST b0 cFST b1 c= b0 b1 c==> c==> ! ! c==> c/\ cMEM b0 cbetwn f0 f1 f2 c/\ cMEM b1 cbetwn f0 f1 f2 c= cFST b0 cFST b1 c= b0 b1 cuniq cMAP / cFST b0 cbetwn f0 f1 f2 c/\ ! ! c==> c/\ cMEM b0 cbetwn f0 f1 f2 c/\ cMEM b1 cbetwn f0 f1 f2 c= cFST b0 cFST b1 c= b0 b1 cuniq cMAP / cFST b0 cbetwn f0 f1 f2
- (~ ((dart (hypermap_of_list L)) = EMPTY)) |- (~ (EMPTY = (dart (hypermap_of_list L))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c~ c= part cEMPTY * part cdart chypermap_of_list f0
- |- (((!L. (!N. (((quotient_list L) N) = ((MAP (core L)) N)))) ==> ((\L. (!N. (((quotient_list L) N) = ((MAP (core L)) N)))) L)) = ((\L. (!N. (((quotient_list L) N) = ((MAP (core L)) N)))) L))
T c= c==> ! ! c= cquotient_list b0 b1 cMAP * part ccore b0 b1 * / ! c= cquotient_list b0 b1 cMAP * part ccore b0 b1 f0 * / ! c= cquotient_list b0 b1 cMAP * part ccore b0 b1 f0
- |- (((core L) r) = ((MAP (FST o HD)) ((parts L) r)))
T c= ccore f0 f1 cMAP * * part co part cFST part cHD cparts f0 f1
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (uniq (((betwn f) y) z)), (good_list L), ((FST u) = (FST v)), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) u) = f), (((find_face L) v) = f), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) f), ((MEM u) (((betwn f) y) z)), ((MEM v) f), ((MEM v) (((betwn f) y) z)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), (v IN ((node (hypermap_of_list L)) u)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((v IN ((node (hypermap_of_list L)) u)) /\ (u = v))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cuniq cbetwn f6 f3 f2 c==> cgood_list f1 c==> c= cFST f7 cFST f8 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f9 f2 c==> c= cnext_el cfind_face f1 f5 f5 f10 c==> c= cprev_el f4 f2 f9 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f7 f6 c==> c= cfind_face f1 f8 f6 c==> c= cfind_face f1 f5 f6 c==> c= cfind_face f1 f3 f6 c==> c= cparts f1 cbetwn f6 f3 f2 cMAP / cCONS b0 cNIL cbetwn f6 f3 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f10 f3 f6 cindexf f10 f2 f6 c==> cMEM f7 f6 c==> cMEM f7 cbetwn f6 f3 f2 c==> cMEM f8 f6 c==> cMEM f8 cbetwn f6 f3 f2 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f6 c==> cMEM f3 f4 c==> cMEM f2 f6 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> cIN f8 * * part cnode chypermap_of_list f1 f7 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c/\ cIN f8 * * part cnode chypermap_of_list f1 f7 c= f7 f8
- |- (((!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- (((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- |- (((!s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s)))) ==> ((\s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s)))) s)) = ((\s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s)))) s))
T c= c==> ! c= cMEM f0 cfilter f1 b0 c/\ * f1 f0 cMEM f0 b0 * / c= cMEM f0 cfilter f1 b0 c/\ * f1 f0 cMEM f0 b0 f2 * / c= cMEM f0 cfilter f1 b0 c/\ * f1 f0 cMEM f0 b0 f2
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((\d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) d)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 * / c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 f2
- (plain_hypermap (hypermap_of_list L)) |- ((plain_hypermap (hypermap_of_list L)) = T)
T c==> cplain_hypermap chypermap_of_list f0 c= cplain_hypermap chypermap_of_list f0 cT
- |- (((!a. (!x. (!s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s)))))) ==> ((\a. (!x. (!s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s)))))) a)) = ((\a. (!x. (!s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s)))))) a))
T c= c==> ! ! ! c= cMEM b1 cfilter b0 b2 c/\ * b0 b1 cMEM b1 b2 * / ! ! c= cMEM b1 cfilter b0 b2 c/\ * b0 b1 cMEM b1 b2 f0 * / ! ! c= cMEM b1 cfilter b0 b2 c/\ * b0 b1 cMEM b1 b2 f0
- |- ((\a. (!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x)))))) a)
T * / ! c= call b0 b1 ! c==> cMEM b2 b1 * b0 b2 f0
- |- ((\x. (!s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s))))) x)
T * / ! c= cMEM b0 cfilter f0 b1 c/\ * f0 b0 cMEM b0 b1 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f4 f3 c==> cMEM f3 f1 c==> cMEM f5 f1 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
- ((((s_flag_list L) N) r) x) |- (((((s_flag_list L) N) r) x) = T)
T c==> cs_flag_list f0 f1 f2 f3 c= cs_flag_list f0 f1 f2 f3 cT
- |- (((!L. (!N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))))))) ==> ((\L. (!N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))))))) L)) = ((\L. (!N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))))))) L))
T c= c==> ! ! ! ! ! c= cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 cztrans b0 b1 b2 b3 b4 * / ! ! ! ! c= cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 cztrans b0 b1 b2 b3 b4 f0 * / ! ! ! ! c= cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 cztrans b0 b1 b2 b3 b4 f0
- |- (((!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))) ==> ((\r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))) r)) = ((\r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))) r))
T c= c==> ! ! c= ctransform_list f0 b1 c, f1 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b0 c, f1 b0 c, b7 cSND b6 cAPPEND creplace b0 cCONS cSND b6 cNIL f1 cCONS cFST b6 cNIL csplit_normal_list f0 b0 b5 b2 b4 cfind_face f0 b2 cprev_el b0 b3 cl'z f0 f1 b0 b1 cl'y f0 b0 b1 * / ! c= ctransform_list f0 b1 c, f1 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b0 c, f1 b0 c, b7 cSND b6 cAPPEND creplace b0 cCONS cSND b6 cNIL f1 cCONS cFST b6 cNIL csplit_normal_list f0 b0 b5 b2 b4 cfind_face f0 b2 cprev_el b0 b3 cl'z f0 f1 b0 b1 cl'y f0 b0 b1 f2 * / ! c= ctransform_list f0 b1 c, f1 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b0 c, f1 b0 c, b7 cSND b6 cAPPEND creplace b0 cCONS cSND b6 cNIL f1 cCONS cFST b6 cNIL csplit_normal_list f0 b0 b5 b2 b4 cfind_face f0 b2 cprev_el b0 b3 cl'z f0 f1 b0 b1 cl'y f0 b0 b1 f2
- |- ((((\w. (((next_el ((find_face L) x)) x) = w)) w) ==> (?w. (((next_el ((find_face L) x)) x) = w))) = T)
T c= c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0 cT
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f4 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c==> c= cnext_el f2 f5 f4 c==> cMEM f4 f2 c==> cMEM f6 f2 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f3 f6 cl'z f1 f0 f2 f3
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f5 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f4 cl'z f0 f2 f1 f3
- |- ((\q. ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q)))) q)
T * / c= cLAST cAPPEND f0 b0 cCOND c= b0 cNIL cLAST f0 cLAST b0 f1
- ((\y. ((((l'y L) r) x) = y)) y) |- ((((((l'y L) r) x) = y) ==> (?y. ((((l'y L) r) x) = y))) = (?y. ((((l'y L) r) x) = y)))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c= c==> c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
- |- ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))
T c= cIN f0 * part cGSPEC / * f1 * part cSETSPEC b0 * f1 / / c/\ b0 c= f0 b1
- |- (F = (~ T))
T c= cF c~ cT
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM z) r) /\ (((MEM y) r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f5 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c/\ cMEM f5 f2 c==> cMEM f6 f2 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f3 f6 cl'z f1 f0 f2 f3
- ((\z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) z1) |- (((\z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) z1) /\ (?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)))
T c==> * / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 f4 c/\ * / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 f4 c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0
- |- (((!N. (((quotient_list L) N) = ((MAP (core L)) N))) ==> ((\N. (((quotient_list L) N) = ((MAP (core L)) N))) N)) = ((\N. (((quotient_list L) N) = ((MAP (core L)) N))) N))
T c= c==> ! c= cquotient_list f0 b0 cMAP * part ccore f0 b0 * / c= cquotient_list f0 b0 cMAP * part ccore f0 b0 f1 * / c= cquotient_list f0 b0 cMAP * part ccore f0 b0 f1
- |- ((((\y. ((((l'y L) r) x) = y)) y) ==> (?y. ((((l'y L) r) x) = y))) = T)
T c= c==> * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0 cT
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) /\ ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f5 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f4 cl'z f0 f2 f1 f3
- |- ((\L. (!r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))))) L)
T * / ! ! ! ! c= csplit_normal_list b0 b1 b2 b3 b4 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b10 b11 cAPPEND b12 b9 cAPPEND cCONS b6 cNIL cAPPEND cbetwn b1 b6 b3 cCONS b3 cNIL cAPPEND cCONS b5 cNIL cAPPEND cbetwn b1 b5 b4 cCONS b4 cNIL cflatten cmap b8 b9 cbetwn b2 b3 b6 / cmap / cPOWER * part cn_list b0 b9 b8 cupt cNUMERAL cBIT1 c_0 * b7 cFST b8 / csizel cfilter / c= b8 b7 cflatten b0 cnext_el b1 b4 cnext_el b1 b3 f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
- |- (((!x. (!s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s))))) ==> ((\x. (!s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s))))) x)) = ((\x. (!s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s))))) x))
T c= c==> ! ! c= cMEM b0 cfilter f0 b1 c/\ * f0 b0 cMEM b0 b1 * / ! c= cMEM b0 cfilter f0 b1 c/\ * f0 b0 cMEM b0 b1 f1 * / ! c= cMEM b0 cfilter f0 b1 c/\ * f0 b0 cMEM b0 b1 f1
- |- ((((find_face L) x) = f) ==> (?f. (((find_face L) x) = f)))
T c==> c= cfind_face f0 f1 f2 c? / c= cfind_face f0 f1 b0
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) |- ((\x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) x)
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 * / c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cs_flag_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f5 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f4 cl'z f0 f3 f1 f2
- |- ((\x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) x)
T * / ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0
- (good_list L), (good_list_nodes L) |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))) = (\r. (!x. ((((((marked_list L) N) r) x) /\ (~ ((final_list L) r))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c= / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cztrans f0 f1 b0 b1 cNUMERAL c_0 b0 / ! c==> c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cztrans f0 f1 b0 b1 cNUMERAL c_0 b0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((~ (~ F)) ==> F) ==> (~ F)) = (~ F))
T c= c==> c==> c~ c~ cF cF c~ cF c~ cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cMEM f3 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f4 cl'z f0 f2 f1 f3
- |- ((\N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))))) N)
T * / ! ! c= ctransform_list f0 b2 c, b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b1 c, b0 b1 c, b8 cSND b7 cAPPEND creplace b1 cCONS cSND b7 cNIL b0 cCONS cFST b7 cNIL csplit_normal_list f0 b1 b6 b3 b5 cfind_face f0 b3 cprev_el b1 b4 cl'z f0 b0 b1 b2 cl'y f0 b1 b2 f1
- |- (T = ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0))))
T c= cT c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
- |- ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q)))
T c= cLAST cAPPEND f0 f1 cCOND c= f1 cNIL cLAST f0 cLAST f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f4 f3 c==> cMEM f3 f1 c==> cMEM f5 f1 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
- |- (((!L. (!r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))))) ==> ((\L. (!r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))))) L)) = ((\L. (!r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))))) L))
T c= c==> ! ! ! ! ! c= csplit_normal_list b0 b1 b2 b3 b4 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b10 b11 cAPPEND b12 b9 cAPPEND cCONS b6 cNIL cAPPEND cbetwn b1 b6 b3 cCONS b3 cNIL cAPPEND cCONS b5 cNIL cAPPEND cbetwn b1 b5 b4 cCONS b4 cNIL cflatten cmap b8 b9 cbetwn b2 b3 b6 / cmap / cPOWER * part cn_list b0 b9 b8 cupt cNUMERAL cBIT1 c_0 * b7 cFST b8 / csizel cfilter / c= b8 b7 cflatten b0 cnext_el b1 b4 cnext_el b1 b3 * / ! ! ! ! c= csplit_normal_list b0 b1 b2 b3 b4 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b10 b11 cAPPEND b12 b9 cAPPEND cCONS b6 cNIL cAPPEND cbetwn b1 b6 b3 cCONS b3 cNIL cAPPEND cCONS b5 cNIL cAPPEND cbetwn b1 b5 b4 cCONS b4 cNIL cflatten cmap b8 b9 cbetwn b2 b3 b6 / cmap / cPOWER * part cn_list b0 b9 b8 cupt cNUMERAL cBIT1 c_0 * b7 cFST b8 / csizel cfilter / c= b8 b7 cflatten b0 cnext_el b1 b4 cnext_el b1 b3 f0 * / ! ! ! ! c= csplit_normal_list b0 b1 b2 b3 b4 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b10 b11 cAPPEND b12 b9 cAPPEND cCONS b6 cNIL cAPPEND cbetwn b1 b6 b3 cCONS b3 cNIL cAPPEND cCONS b5 cNIL cAPPEND cbetwn b1 b5 b4 cCONS b4 cNIL cflatten cmap b8 b9 cbetwn b2 b3 b6 / cmap / cPOWER * part cn_list b0 b9 b8 cupt cNUMERAL cBIT1 c_0 * b7 cFST b8 / csizel cfilter / c= b8 b7 cflatten b0 cnext_el b1 b4 cnext_el b1 b3 f0
- (!P. ((!d. ((d IN (dart (hypermap_of_list L))) ==> (P d))) = (!d. (((MEM d) (list_of_darts L)) ==> (P d))))) |- ((!d. ((d IN (dart (hypermap_of_list L))) ==> (P d))) = (!d. (((MEM d) (list_of_darts L)) ==> (P d))))
T c==> ! c= ! c==> cIN b1 * part cdart chypermap_of_list f0 * b0 b1 ! c==> cMEM b1 clist_of_darts f0 * b0 b1 c= ! c==> cIN b0 * part cdart chypermap_of_list f0 * f1 b0 ! c==> cMEM b0 clist_of_darts f0 * f1 b0
- |- ((\s. ((~ (s = NIL)) = (?x. ((MEM x) s)))) s)
T * / c= c~ c= b0 cNIL c? / cMEM b1 b0 f0
- |- ((\N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))))) N)
T * / ! ! ! c= cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 cztrans f0 b0 b1 b2 b3 f1
- |- ((~ T) = F)
T c= c~ cT cF
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c/\ cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f5 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f4 cl'z f0 f2 f1 f3
- |- (!z1. (((\z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) z1) ==> (?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1))))
T c==> * / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 f4 c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0
- |- (((!f. (!y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))))) ==> ((\f. (!y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))))) f)) = ((\f. (!y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))))) f))
T c= c==> ! ! ! c= cMEM b1 cMAP b0 b2 c? / c/\ cMEM b3 b2 c= b1 * b0 b3 * / ! ! c= cMEM b1 cMAP b0 b2 c? / c/\ cMEM b3 b2 c= b1 * b0 b3 f0 * / ! ! c= cMEM b1 cMAP b0 b2 c? / c/\ cMEM b3 b2 c= b1 * b0 b3 f0
- |- ((\l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))) l2)
T * / c= cMEM f0 cAPPEND f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2
- |- ((\x. (!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))))) x)
T * / ! ! c= cMEM b0 ccat b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- ((!u. (!v. ((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((FST u) = (FST v)))) ==> (u = v)))) ==> (uniq ((MAP (\x. (FST x))) (((betwn f) y) z)))) |- (((!u. (!v. ((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((FST u) = (FST v)))) ==> (u = v)))) ==> (uniq ((MAP (\x. (FST x))) (((betwn f) y) z)))) /\ ((!u. (!v. ((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((FST u) = (FST v)))) ==> (u = v)))) ==> (uniq ((MAP (\x. (FST x))) (((betwn f) y) z)))))
T c==> c==> ! ! c==> c/\ cMEM b0 cbetwn f0 f1 f2 c/\ cMEM b1 cbetwn f0 f1 f2 c= cFST b0 cFST b1 c= b0 b1 cuniq cMAP / cFST b0 cbetwn f0 f1 f2 c/\ c==> ! ! c==> c/\ cMEM b0 cbetwn f0 f1 f2 c/\ cMEM b1 cbetwn f0 f1 f2 c= cFST b0 cFST b1 c= b0 b1 cuniq cMAP / cFST b0 cbetwn f0 f1 f2 c==> ! ! c==> c/\ cMEM b0 cbetwn f0 f1 f2 c/\ cMEM b1 cbetwn f0 f1 f2 c= cFST b0 cFST b1 c= b0 b1 cuniq cMAP / cFST b0 cbetwn f0 f1 f2
- |- ((((next_el ((find_face L) x)) x) = w) ==> (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> c= cnext_el cfind_face f0 f1 f1 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM x) (list_of_darts L)) /\ ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c/\ cMEM f2 clist_of_darts f0 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f4 f3 c==> cMEM f3 f1 c==> cMEM f5 f1 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
- (good_list L) |- ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c==> c= cl'y f0 f2 f3 f4 c==> c= cprev_el f2 f5 f6 c==> c= cztrans f0 f1 f2 f3 cNUMERAL c_0 f5 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f4 cl'z f0 f1 f2 f3
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0
- |- (!w. (((\w. (((next_el ((find_face L) x)) x) = w)) w) ==> (?w. (((next_el ((find_face L) x)) x) = w))))
T c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0
- |- (((!q. ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q)))) ==> ((\q. ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q)))) q)) = ((\q. ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q)))) q))
T c= c==> ! c= cLAST cAPPEND f0 b0 cCOND c= b0 cNIL cLAST f0 cLAST b0 * / c= cLAST cAPPEND f0 b0 cCOND c= b0 cNIL cLAST f0 cLAST b0 f1 * / c= cLAST cAPPEND f0 b0 cCOND c= b0 cNIL cLAST f0 cLAST b0 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c==> cs_flag_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f5 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f4 cl'z f0 f3 f1 f2
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (uniq (((betwn f) y) z)), (good_list L), ((FST u) = (FST v)), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) u) = f), (((find_face L) v) = f), (((find_face L) x) = f), (((find_face L) y) = f), (((parts L) (((betwn f) y) z)) = ((MAP (\x. ((CONS x) NIL))) (((betwn f) y) z))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) f), ((MEM u) (((betwn f) y) z)), ((MEM v) f), ((MEM v) (((betwn f) y) z)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM r) N), (v IN ((node (hypermap_of_list L)) u)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (u = v)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cuniq cbetwn f6 f3 f2 c==> cgood_list f1 c==> c= cFST f7 cFST f8 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f9 f2 c==> c= cnext_el cfind_face f1 f5 f5 f10 c==> c= cprev_el f4 f2 f9 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f7 f6 c==> c= cfind_face f1 f8 f6 c==> c= cfind_face f1 f5 f6 c==> c= cfind_face f1 f3 f6 c==> c= cparts f1 cbetwn f6 f3 f2 cMAP / cCONS b0 cNIL cbetwn f6 f3 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f10 f3 f6 cindexf f10 f2 f6 c==> cMEM f7 f6 c==> cMEM f7 cbetwn f6 f3 f2 c==> cMEM f8 f6 c==> cMEM f8 cbetwn f6 f3 f2 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f6 c==> cMEM f3 f4 c==> cMEM f2 f6 c==> cMEM f2 f4 c==> cMEM f4 f0 c==> cIN f8 * * part cnode chypermap_of_list f1 f7 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c= f7 f8
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cMEM f3 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f4 cl'z f0 f2 f1 f3
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c/\ call / c~ c= b0 cNIL f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> c= cnext_el f1 f5 f4 c==> cMEM f4 f1 c==> cMEM f6 f1 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f6 cl'z f0 f2 f1 f3
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cs_flag_list f0 f3 f1 f2 c==> cmarked_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f4 cl'z f0 f3 f1 f2
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- |- (((!y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x))))))) ==> ((\y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x))))))) y)) = ((\y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x))))))) y))
T c= c==> ! ! c= cMEM b0 cMAP f0 b1 c? / c/\ cMEM b2 b1 c= b0 * f0 b2 * / ! c= cMEM b0 cMAP f0 b1 c? / c/\ cMEM b2 b1 c= b0 * f0 b2 f1 * / ! c= cMEM b0 cMAP f0 b1 c? / c/\ cMEM b2 b1 c= b0 * f0 b2 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cl'y f0 f1 f2 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c==> cmarked_list f0 f4 f1 f2 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f4 f1 f2 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f3 cl'z f0 f4 f1 f2
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- ((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) z) |- (((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) z) /\ (?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)))
T c==> * / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 f4 c/\ * / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 f4 c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> c= cnext_el f1 f5 f4 c==> cMEM f4 f1 c==> cMEM f6 f1 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f6 cl'z f0 f2 f1 f3
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c/\ cMEM f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cs_flag_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f4 cl'z f0 f3 f1 f2
- |- (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))
T c= cMEM f0 cAPPEND f1 f2 c\/ cMEM f0 f1 cMEM f0 f2
- |- (((!L. (!s. (((f_last L) s) = (((next_el s) (LAST s)) = ((f_list L) (LAST s)))))) ==> ((\L. (!s. (((f_last L) s) = (((next_el s) (LAST s)) = ((f_list L) (LAST s)))))) L)) = ((\L. (!s. (((f_last L) s) = (((next_el s) (LAST s)) = ((f_list L) (LAST s)))))) L))
T c= c==> ! ! c= cf_last b0 b1 c= cnext_el b1 cLAST b1 cf_list b0 cLAST b1 * / ! c= cf_last b0 b1 c= cnext_el b1 cLAST b1 cf_list b0 cLAST b1 f0 * / ! c= cf_last b0 b1 c= cnext_el b1 cLAST b1 cf_list b0 cLAST b1 f0
- |- (((!l. (((APPEND l) NIL) = l)) ==> ((\l. (((APPEND l) NIL) = l)) l)) = ((\l. (((APPEND l) NIL) = l)) l))
T c= c==> ! c= cAPPEND b0 cNIL b0 * / c= cAPPEND b0 cNIL b0 f0 * / c= cAPPEND b0 cNIL b0 f0
- ((\f. (((find_face L) x) = f)) f) |- (((\f. (((find_face L) x) = f)) f) /\ (?f. (((find_face L) x) = f)))
T c==> * / c= cfind_face f0 f1 b0 f2 c/\ * / c= cfind_face f0 f1 b0 f2 c? / c= cfind_face f0 f1 b0
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- |- ((~ (s = NIL)) = (?x. ((MEM x) s)))
T c= c~ c= f0 cNIL c? / cMEM b0 f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (loop_list L)) N) /\ ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c/\ call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> c= cnext_el f1 f5 f4 c==> cMEM f4 f1 c==> cMEM f6 f1 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f6 cl'z f0 f2 f1 f3
- (is_edge_nondegenerate (hypermap_of_list L)) |- ((is_edge_nondegenerate (hypermap_of_list L)) = T)
T c==> cis_edge_nondegenerate chypermap_of_list f0 c= cis_edge_nondegenerate chypermap_of_list f0 cT
- |- (((!L. ((darts_of_list L) = (set_of_list (list_of_darts L)))) ==> ((\L. ((darts_of_list L) = (set_of_list (list_of_darts L)))) L)) = ((\L. ((darts_of_list L) = (set_of_list (list_of_darts L)))) L))
T c= c==> ! c= * part cdarts_of_list b0 * part cset_of_list clist_of_darts b0 * / c= * part cdarts_of_list b0 * part cset_of_list clist_of_darts b0 f0 * / c= * part cdarts_of_list b0 * part cset_of_list clist_of_darts b0 f0
- (~ ((dart (hypermap_of_list L)) = EMPTY)) |- (((dart (hypermap_of_list L)) = EMPTY) = F)
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c= c= * part cdart chypermap_of_list f0 part cEMPTY cF
- |- (((quotient_list L) N) = ((MAP (core L)) N))
T c= cquotient_list f0 f1 cMAP * part ccore f0 f1
- |- ((((next_el ((find_face L) x)) x) = w) = ((\w. (((next_el ((find_face L) x)) x) = w)) w))
T c= c= cnext_el cfind_face f0 f1 f1 f2 * / c= cnext_el cfind_face f0 f1 f1 b0 f2
- ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) = T)
T c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c= cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 cT
- ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)) |- (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))
T c==> c= cztrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cztrans f0 f1 f2 f3 f4
- (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c/\ cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c==> c= cl'y f0 f2 f3 f4 c==> c= cprev_el f2 f5 f6 c==> c= cztrans f0 f1 f2 f3 cNUMERAL c_0 f5 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f4 cl'z f0 f1 f2 f3
- ((((node (hypermap_of_list L)) u) INTER (set_of_list f)) = (u INSERT EMPTY)), ((MEM v) f), (v IN ((node (hypermap_of_list L)) u)) |- (u = v)
T c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f1 * part cset_of_list f2 * * part cINSERT f1 part cEMPTY c==> cMEM f3 f2 c==> cIN f3 * * part cnode chypermap_of_list f0 f1 c= f1 f3
- |- (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) = ((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) z))
T c= c= cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 * / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 f4
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (f_last L)) N) /\ (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM z) r) ==> (((MEM y) r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> call * part cf_last f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c/\ call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> c= cnext_el f1 f5 f4 c==> cMEM f4 f1 c==> cMEM f6 f1 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f6 cl'z f0 f2 f1 f3
- (!u. (!v. ((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((FST u) = (FST v)))) ==> (u = v)))), ((!u. (!v. ((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((FST u) = (FST v)))) ==> (u = v)))) ==> (uniq ((MAP (\x. (FST x))) (((betwn f) y) z)))) |- (((!u. (!v. ((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((FST u) = (FST v)))) ==> (u = v)))) ==> (uniq ((MAP (\x. (FST x))) (((betwn f) y) z)))) /\ (uniq ((MAP (\x. (FST x))) (((betwn f) y) z))))
T c==> ! ! c==> c/\ cMEM b0 cbetwn f0 f1 f2 c/\ cMEM b1 cbetwn f0 f1 f2 c= cFST b0 cFST b1 c= b0 b1 c==> c==> ! ! c==> c/\ cMEM b0 cbetwn f0 f1 f2 c/\ cMEM b1 cbetwn f0 f1 f2 c= cFST b0 cFST b1 c= b0 b1 cuniq cMAP / cFST b0 cbetwn f0 f1 f2 c/\ c==> ! ! c==> c/\ cMEM b0 cbetwn f0 f1 f2 c/\ cMEM b1 cbetwn f0 f1 f2 c= cFST b0 cFST b1 c= b0 b1 cuniq cMAP / cFST b0 cbetwn f0 f1 f2 cuniq cMAP / cFST b0 cbetwn f0 f1 f2
- (uniq ((find_face L) x)) |- ((uniq ((find_face L) x)) = T)
T c==> cuniq cfind_face f0 f1 c= cuniq cfind_face f0 f1 cT
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f5 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f4 cl'z f0 f2 f1 f3
- ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) = T)
T c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c= cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 cT
- |- (((!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))))) ==> ((\r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))))) r)) = ((\r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))))) r))
T c= c==> ! ! ! c= cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 cztrans f0 f1 b0 b1 b2 * / ! ! c= cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 cztrans f0 f1 b0 b1 b2 f2 * / ! ! c= cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 cztrans f0 f1 b0 b1 b2 f2
- |- (((!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))) ==> ((\L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))) L)) = ((\L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))) L))
T c= c==> ! c= cMEM f0 cflatten b0 c? / c/\ cMEM b1 b0 cMEM f0 b1 * / c= cMEM f0 cflatten b0 c? / c/\ cMEM b1 b0 cMEM f0 b1 f1 * / c= cMEM f0 cflatten b0 c? / c/\ cMEM b1 b0 cMEM f0 b1 f1
- |- (((!x. (((\f. (((find_face L) x) = f)) x) ==> (?f. (((find_face L) x) = f)))) ==> ((?f. (((find_face L) x) = f)) ==> (?f. (((find_face L) x) = f)))) = ((?f. (((find_face L) x) = f)) ==> (?f. (((find_face L) x) = f))))
T c= c==> ! c==> * / c= cfind_face f0 f1 b1 b0 c? / c= cfind_face f0 f1 b1 c==> c? / c= cfind_face f0 f1 b0 c? / c= cfind_face f0 f1 b0 c==> c? / c= cfind_face f0 f1 b0 c? / c= cfind_face f0 f1 b0
- |- ((\ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))) ram2)
T * / c= csplit_normal_list f0 f1 f2 f3 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b6 b7 cAPPEND b8 b5 cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 f3 cCONS f3 cNIL cAPPEND cCONS b1 cNIL cAPPEND cbetwn f1 b1 b0 cCONS b0 cNIL cflatten cmap b4 b5 cbetwn f2 f3 b2 / cmap / cPOWER * part cn_list f0 b5 b4 cupt cNUMERAL cBIT1 c_0 * b3 cFST b4 / csizel cfilter / c= b4 b3 cflatten f0 cnext_el f1 b0 cnext_el f1 f3 f4
- ((!u. (!v. ((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((FST u) = (FST v)))) ==> (u = v)))) ==> (uniq ((MAP (\x. (FST x))) (((betwn f) y) z)))) |- (((!u. (!v. ((((MEM u) (((betwn f) y) z)) /\ (((MEM v) (((betwn f) y) z)) /\ ((FST u) = (FST v)))) ==> (u = v)))) ==> (uniq ((MAP (\x. (FST x))) (((betwn f) y) z)))) = T)
T c==> c==> ! ! c==> c/\ cMEM b0 cbetwn f0 f1 f2 c/\ cMEM b1 cbetwn f0 f1 f2 c= cFST b0 cFST b1 c= b0 b1 cuniq cMAP / cFST b0 cbetwn f0 f1 f2 c= c==> ! ! c==> c/\ cMEM b0 cbetwn f0 f1 f2 c/\ cMEM b1 cbetwn f0 f1 f2 c= cFST b0 cFST b1 c= b0 b1 cuniq cMAP / cFST b0 cbetwn f0 f1 f2 cT
- |- ((\t. ((LET_END t) = t)) t)
T * / c= cLET_END b0 b0 f0
- |- (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))
T c= cMEM f0 cflatten f1 c? / c/\ cMEM b0 f1 cMEM f0 b0
- ((all (f_last L)) N) |- (((all (f_last L)) N) = T)
T c==> call * part cf_last f0 f1 c= call * part cf_last f0 f1 cT
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cMEM f3 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f4 cl'z f0 f2 f1 f3
- |- ((?w. (((next_el ((find_face L) x)) x) = w)) ==> (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> c? / c= cnext_el cfind_face f0 f1 f1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) /\ (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c/\ c= cprev_el f1 f3 f4 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
- |- (((APPEND l) NIL) = l)
T c= cAPPEND f0 cNIL f0
- ((((node (hypermap_of_list L)) u) INTER (set_of_list f)) = (u INSERT EMPTY)), ((MEM v) f), (v IN ((node (hypermap_of_list L)) u)) |- (((((node (hypermap_of_list L)) u) INTER (set_of_list f)) = (u INSERT EMPTY)) /\ (u = v))
T c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f1 * part cset_of_list f2 * * part cINSERT f1 part cEMPTY c==> cMEM f3 f2 c==> cIN f3 * * part cnode chypermap_of_list f0 f1 c/\ c= * * part cINTER * * part cnode chypermap_of_list f0 f1 * part cset_of_list f2 * * part cINSERT f1 part cEMPTY c= f1 f3
- |- ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))
T c= ctransform_list f0 f1 c, f2 f3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f3 c, f2 f3 c, b5 cSND b4 cAPPEND creplace f3 cCONS cSND b4 cNIL f2 cCONS cFST b4 cNIL csplit_normal_list f0 f3 b3 b0 b2 cfind_face f0 b0 cprev_el f3 b1 cl'z f0 f2 f3 f1 cl'y f0 f3 f1
- ((((indexf w) y) f) < (((indexf w) z) f)) |- (((((indexf w) y) f) < (((indexf w) z) f)) = T)
T c==> c< cindexf f0 f1 f2 cindexf f0 f3 f2 c= c< cindexf f0 f1 f2 cindexf f0 f3 f2 cT
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (\l. (~ (l = NIL)))) L) /\ ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c/\ call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f5 cl'z f0 f6 f1 f2
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f5 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f4 cl'z f0 f2 f1 f3
- (((find_face L) x) = f) |- ((\f. (((find_face L) x) = f)) f)
T c==> c= cfind_face f0 f1 f2 * / c= cfind_face f0 f1 b0 f2
- |- ((\y. (((MEM x) ((CONS y) NIL)) = (x = y))) y)
T * / c= cMEM f0 cCONS b0 cNIL c= f0 b0 f1
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- (((next_el ((find_face L) x)) x) = w) |- ((\w. (((next_el ((find_face L) x)) x) = w)) w)
T c==> c= cnext_el cfind_face f0 f1 f1 f2 * / c= cnext_el cfind_face f0 f1 f1 b0 f2
- |- (((!x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l)))))) ==> ((\x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l)))))) x)) = ((\x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l)))))) x))
T c= c==> ! ! c= cMEM b0 cflatten b1 c? / c/\ cMEM b2 b1 cMEM b0 b2 * / ! c= cMEM b0 cflatten b1 c? / c/\ cMEM b2 b1 cMEM b0 b2 f0 * / ! c= cMEM b0 cflatten b1 c? / c/\ cMEM b2 b1 cMEM b0 b2 f0
- |- ((\L. (!N. (((quotient_list L) N) = ((MAP (core L)) N)))) L)
T * / ! c= cquotient_list b0 b1 cMAP * part ccore b0 b1 f0
- |- ((\a. (!x. (!s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s)))))) a)
T * / ! ! c= cMEM b1 cfilter b0 b2 c/\ * b0 b1 cMEM b1 b2 f0
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- (((!L. (!r. (((core L) r) = ((MAP (FST o HD)) ((parts L) r))))) ==> ((\L. (!r. (((core L) r) = ((MAP (FST o HD)) ((parts L) r))))) L)) = ((\L. (!r. (((core L) r) = ((MAP (FST o HD)) ((parts L) r))))) L))
T c= c==> ! ! c= ccore b0 b1 cMAP * * part co part cFST part cHD cparts b0 b1 * / ! c= ccore b0 b1 cMAP * * part co part cFST part cHD cparts b0 b1 f0 * / ! c= ccore b0 b1 cMAP * * part co part cFST part cHD cparts b0 b1 f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cs_flag_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f2 f4 cl'z f0 f3 f1 f2
- ((\y. ((((l'y L) r) x) = y)) y) |- (((\y. ((((l'y L) r) x) = y)) y) /\ (?y. ((((l'y L) r) x) = y)))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c/\ * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f5 cuniq cMAP / cFST cHD b0 cparts f0 cbetwn cfind_face f0 f3 f4 cl'z f0 f2 f1 f3
- |- (~ (~ T))
T c~ c~ cT
- |- ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n)
T * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1
- (EMPTY = (dart (hypermap_of_list L))) |- ((dart (hypermap_of_list L)) = EMPTY)
T c==> c= part cEMPTY * part cdart chypermap_of_list f0 c= * part cdart chypermap_of_list f0 part cEMPTY
- ((((l'y L) r) x) = y) |- (((((l'y L) r) x) = y) /\ (?y. ((((l'y L) r) x) = y)))
T c==> c= cl'y f0 f1 f2 f3 c/\ c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0
- |- (((!x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y)))) ==> ((\x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y)))) x)) = ((\x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y)))) x))
T c= c==> ! ! c= cMEM b0 cCONS b1 cNIL c= b0 b1 * / ! c= cMEM b0 cCONS b1 cNIL c= b0 b1 f0 * / ! c= cMEM b0 cCONS b1 cNIL c= b0 b1 f0
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- (((next_el ((find_face L) x)) x) = w) |- ((((next_el ((find_face L) x)) x) = w) /\ (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> c= cnext_el cfind_face f0 f1 f1 f2 c/\ c= cnext_el cfind_face f0 f1 f1 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0
- |- ((\L. (!r. (((core L) r) = ((MAP (FST o HD)) ((parts L) r))))) L)
T * / ! c= ccore b0 b1 cMAP * * part co part cFST part cHD cparts b0 b1 f0
- |- ((((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1) ==> (?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)))
T c==> c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 f4 c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM z) r) ==> (((MEM y) r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x)))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c==> cMEM f5 f2 c==> cMEM f6 f2 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f3 f6 cl'z f1 f0 f2 f3
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((next_el r) z1) = z) /\ (((MEM z) r) ==> (((MEM y) r) ==> (uniq ((MAP (\x. (FST (HD x)))) ((parts L) (((betwn ((find_face L) x)) y) ((((l'z L) N) r) x))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c/\ c= cnext_el f2 f4 f5 c==> cMEM f5 f2 c==> cMEM f6 f2 cuniq cMAP / cFST cHD b0 cparts f1 cbetwn cfind_face f1 f3 f6 cl'z f1 f0 f2 f3
