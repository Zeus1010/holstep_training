N Lp_ineqs_proofs.inverse_f_fan_pair_ext_power2
C |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((packing V) ==> ((V SUBSET ball_annulus) ==> (!v. (!w. (((v , w) IN (dart_of_fan (V , E))) ==> ((LET (\w'. (LET_END ((LET (\u. (LET_END ((((POWER (inverse (f_fan_pair_ext (V , E)))) (NUMERAL (BIT0 (BIT1 _0)))) (v , w)) = (u , w'))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) w') v))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus ! ! c==> cIN c, b0 b1 * part cdart_of_fan c, f0 f1 cLET / cLET_END cLET / cLET_END c= cPOWER * part cinverse * part cf_fan_pair_ext c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c, b0 b1 c, b3 b2 csigma_fan cvec cNUMERAL c_0 f0 f1 b2 b0 csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D SELECT_AX
A |- (!P. (!x. ((P x) ==> (P (@ P)))))
T c==> * f0 f1 * f0 c@ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D o_THM
A |- (!f. (!g. (!x. (((f o g) x) = (f (g x))))))
T c= co f0 f1 f2 * f0 * f1 f2
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D GABS_DEF
A |- (!P. ((GABS P) = (@ P)))
T c= cGABS f0 c@ f0
D GEQ_DEF
A |- (!a. (!b. (((GEQ a) b) = (a = b))))
T c= cGEQ f0 f1 c= f0 f1
D pair_RECURSION
A |- (!PAIR'. (?fn. (!a0. (!a1. ((fn (a0 , a1)) = ((PAIR' a0) a1))))))
T c? / ! ! c= * b0 c, b1 b2 * * f0 b1 b2
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D Hypermap.res
A |- (!f. (!s. (!x. ((((res f) s) x) = (((COND (x IN s)) (f x)) x)))))
T c= cres f0 f1 f2 cCOND cIN f2 f1 * f0 f2 f2
D Fan.POWER
A |- ((!f. (((POWER f) (NUMERAL _0)) = I)) /\ (!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))))
T c/\ ! c= * * part cPOWER b0 cNUMERAL c_0 part cI ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0
D Fan.POWER_1
A |- (!f. (((POWER f) (NUMERAL (BIT1 _0))) = f))
T c= * * part cPOWER f0 cNUMERAL cBIT1 c_0 f0
D Hypermap_and_fan.INVERSE_F_FAN_PAIR_EXT_EXPLICIT
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((inverse (f_fan_pair_ext (V , E))) = ((res (GABS (\f. (!v. (!w. ((GEQ (f (v , w))) ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) , v))))))) (dart1_of_fan (V , E)))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c= * part cinverse * part cf_fan_pair_ext c, f0 f1 * * part cres * part cGABS / ! ! cGEQ * b0 c, b1 b2 c, csigma_fan cvec cNUMERAL c_0 f0 f1 b1 b2 b1 * part cdart1_of_fan c, f0 f1
D Add_triangle.dart_switch
A |- (!V. (!E. (!v. (!w. (((v , w) IN (dart_of_fan (V , E))) = ((w , v) IN (dart_of_fan (V , E))))))))
T c= cIN c, f0 f1 * part cdart_of_fan c, f2 f3 cIN c, f1 f0 * part cdart_of_fan c, f2 f3
D Add_triangle.fully_surrounded_dart_of_fan_eq
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((dart_of_fan (V , E)) = (dart1_of_fan (V , E)))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c= * part cdart_of_fan c, f0 f1 * part cdart1_of_fan c, f0 f1
D Add_triangle.sigma_in_dart1
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (!v. (!w. (((v , w) IN (dart1_of_fan (V , E))) ==> ((v , (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)) IN (dart1_of_fan (V , E)))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 ! ! c==> cIN c, b0 b1 * part cdart1_of_fan c, f0 f1 cIN c, b0 csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 * part cdart1_of_fan c, f0 f1
