N Cuxvzoz.deform_684_pent_exists
C |- (!V. (!g23. (!v0. (!v1. (!v2. (!v3. (!e. (?f. (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v2) ((cross v3) v0))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) /\ ((g23 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2))))))))))))))))))))))
T c? / c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ creal_gt cdot f1 ccross f2 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt cdot f3 ccross f1 f0 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f4 c/\ creal_continuous_on f5 * part copen_real_interval c, creal_neg f4 f4 c= * f5 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ cdeformation b0 f6 c, creal_neg b1 b1 c/\ ! ! c==> c/\ c~ c= b2 f3 c~ c= b2 f1 c= * * b0 b2 b3 b2 ! c==> creal_lt creal_abs b2 b1 c/\ c= cdistance c, f0 * * b0 f3 b2 cdistance c, f0 f3 c/\ c= cdistance c, * * b0 f1 b2 * * b0 f3 b2 cdistance c, f1 f3 c/\ c= cvector_norm * * b0 f3 b2 cvector_norm f3 c/\ c= cdistance c, * * b0 f1 b2 f0 cdistance c, f1 f0 c/\ c= cdistance c, * * b0 f1 b2 f2 creal_add cdistance c, f1 f2 * f5 b2 c= cvector_norm * * b0 f1 b2 cvector_norm f1
D TRUTH
A |- T
T cT
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D Cuxvzoz.deform_simplex_684_pent
A |- (!V. (!g23. (!v0. (!v1. (!v2. (!v3. (!e. ((LET (\f1. (LET_END ((LET (\f. (LET_END (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v2) ((cross v3) v0))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) /\ ((g23 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2))))))))))))))))) (\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))))))) (\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))))))))))
T cLET / cLET_END cLET / cLET_END c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ creal_gt cdot f1 ccross f2 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt cdot f3 ccross f1 f0 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f4 c/\ creal_continuous_on f5 * part copen_real_interval c, creal_neg f4 f4 c= * f5 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ cdeformation b1 f6 c, creal_neg b2 b2 c/\ ! ! c==> c/\ c~ c= b3 f3 c~ c= b3 f1 c= * * b1 b3 b4 b3 ! c==> creal_lt creal_abs b3 b2 c/\ c= cdistance c, f0 * * b1 f3 b3 cdistance c, f0 f3 c/\ c= cdistance c, * * b1 f1 b3 * * b1 f3 b3 cdistance c, f1 f3 c/\ c= cvector_norm * * b1 f3 b3 cvector_norm f3 c/\ c= cdistance c, * * b1 f1 b3 f0 cdistance c, f1 f0 c/\ c= cdistance c, * * b1 f1 b3 f2 creal_add cdistance c, f1 f2 * f5 b3 c= cvector_norm * * b1 f1 b3 cvector_norm f1 / / cCOND c= b1 f1 * * b0 f1 b2 cCOND c= b1 f3 cmk_simplex1 cvec cNUMERAL c_0 * * b0 f1 b2 f0 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 / / cCOND c= b0 f1 cmk_simplex1 cvec cNUMERAL c_0 f2 f0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f1 * f5 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 b0
+ |- (?f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1))
T c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0
+ ((\f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1)) f1) |- ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1)
T c==> * / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f4 c= / / cCOND c= b0 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f4
- |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
- |- ((?f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1)) ==> (?f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1)))
T c==> c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0
+ |- (((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = (\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))))) = ((\f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f)) (\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))))))
T c= c= / / cCOND c= b0 f0 * * f1 f0 b1 cCOND c= b0 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b1 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b0 / / cCOND c= b0 f0 * * f1 f0 b1 cCOND c= b0 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b1 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b0 * / c= / / cCOND c= b1 f0 * * f1 f0 b2 cCOND c= b1 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b2 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 / / cCOND c= b0 f0 * * f1 f0 b1 cCOND c= b0 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b1 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b0
+ ((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) |- (((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) = T)
T c==> creal_continuous_on f0 * part copen_real_interval c, creal_neg f1 f1 c= creal_continuous_on f0 * part copen_real_interval c, creal_neg f1 f1 cT
- |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
+ |- ((!g23. (!v0. (!v1. (!v2. (!v3. (!e. (?f. (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v2) ((cross v3) v0))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) /\ ((g23 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! c? / c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b1 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ creal_gt cdot b3 ccross b4 b1 creal_of_num cNUMERAL c_0 c/\ creal_gt cdot b2 ccross b3 b1 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ creal_continuous_on b0 * part copen_real_interval c, creal_neg b5 b5 c= * b0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b7 c/\ cdeformation b6 f0 c, creal_neg b7 b7 c/\ ! ! c==> c/\ c~ c= b8 b2 c~ c= b8 b3 c= * * b6 b8 b9 b8 ! c==> creal_lt creal_abs b8 b7 c/\ c= cdistance c, b1 * * b6 b2 b8 cdistance c, b1 b2 c/\ c= cdistance c, * * b6 b3 b8 * * b6 b2 b8 cdistance c, b3 b2 c/\ c= cvector_norm * * b6 b2 b8 cvector_norm b2 c/\ c= cdistance c, * * b6 b3 b8 b1 cdistance c, b3 b1 c/\ c= cdistance c, * * b6 b3 b8 b4 creal_add cdistance c, b3 b4 * b0 b8 c= cvector_norm * * b6 b3 b8 cvector_norm b3 cT
+ |- ((\v1. (!v2. (!v3. (!e. ((LET (\f1. (LET_END ((LET (\f. (LET_END (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v2) ((cross v3) v0))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) /\ ((g23 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2))))))))))))))))) (\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))))))) (\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))))))) v1)
T * / ! ! ! cLET / cLET_END cLET / cLET_END c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ creal_gt cdot b1 ccross b2 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt cdot b0 ccross b1 f0 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_continuous_on f1 * part copen_real_interval c, creal_neg b3 b3 c= * f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b6 c/\ cdeformation b5 f2 c, creal_neg b6 b6 c/\ ! ! c==> c/\ c~ c= b7 b0 c~ c= b7 b1 c= * * b5 b7 b8 b7 ! c==> creal_lt creal_abs b7 b6 c/\ c= cdistance c, f0 * * b5 b0 b7 cdistance c, f0 b0 c/\ c= cdistance c, * * b5 b1 b7 * * b5 b0 b7 cdistance c, b1 b0 c/\ c= cvector_norm * * b5 b0 b7 cvector_norm b0 c/\ c= cdistance c, * * b5 b1 b7 f0 cdistance c, b1 f0 c/\ c= cdistance c, * * b5 b1 b7 b2 creal_add cdistance c, b1 b2 * f1 b7 c= cvector_norm * * b5 b1 b7 cvector_norm b1 / / cCOND c= b5 b1 * * b4 b1 b6 cCOND c= b5 b0 cmk_simplex1 cvec cNUMERAL c_0 * * b4 b1 b6 f0 creal_pow cvector_norm b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b1 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 b1 cNUMERAL cBIT0 cBIT1 c_0 b5 / / cCOND c= b4 b1 cmk_simplex1 cvec cNUMERAL c_0 b2 f0 creal_pow cvector_norm b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, b2 b1 * f1 b5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 b2 cNUMERAL cBIT0 cBIT1 c_0 b4 f3
+ ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1) |- ((((\f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f)) f) ==> (?f. (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v2) ((cross v3) v0))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) /\ ((g23 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2)))))))))))))))) = T)
T c==> c= / / cCOND c= b0 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f4 c= c==> * / c= / / cCOND c= b1 f0 * * f4 f0 b2 cCOND c= b1 f5 cmk_simplex1 cvec cNUMERAL c_0 * * f4 f0 b2 f2 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f6 c? / c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f5 * * part cINSERT f0 part cEMPTY c/\ creal_gt cdot f0 ccross f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_gt cdot f5 ccross f0 f2 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f7 c/\ creal_continuous_on f3 * part copen_real_interval c, creal_neg f7 f7 c= * f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ cdeformation b0 f8 c, creal_neg b1 b1 c/\ ! ! c==> c/\ c~ c= b2 f5 c~ c= b2 f0 c= * * b0 b2 b3 b2 ! c==> creal_lt creal_abs b2 b1 c/\ c= cdistance c, f2 * * b0 f5 b2 cdistance c, f2 f5 c/\ c= cdistance c, * * b0 f0 b2 * * b0 f5 b2 cdistance c, f0 f5 c/\ c= cvector_norm * * b0 f5 b2 cvector_norm f5 c/\ c= cdistance c, * * b0 f0 b2 f2 cdistance c, f0 f2 c/\ c= cdistance c, * * b0 f0 b2 f1 creal_add cdistance c, f0 f1 * f3 b2 c= cvector_norm * * b0 f0 b2 cvector_norm f0 cT
- |- ((((\f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1)) f1) ==> (?f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1))) = T)
T c= c==> * / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f4 c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 cT
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT (v3 INSERT EMPTY)))))), ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f), ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1), ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v2) ((cross v3) v0))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) /\ ((g23 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))))))) |- (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2)))))))))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= / / cCOND c= b0 f1 * * f3 f1 b1 cCOND c= b0 f4 cmk_simplex1 cvec cNUMERAL c_0 * * f3 f1 b1 f0 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f5 c==> c= / / cCOND c= b0 f1 cmk_simplex1 cvec cNUMERAL c_0 f2 f0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f1 * f6 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 f3 c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY c/\ creal_gt cdot f1 ccross f2 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt cdot f4 ccross f1 f0 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f7 c/\ creal_continuous_on f6 * part copen_real_interval c, creal_neg f7 f7 c= * f6 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ cdeformation f5 f8 c, creal_neg b0 b0 c/\ ! ! c==> c/\ c~ c= b1 f4 c~ c= b1 f1 c= * * f5 b1 b2 b1 ! c==> creal_lt creal_abs b1 b0 c/\ c= cdistance c, f0 * * f5 f4 b1 cdistance c, f0 f4 c/\ c= cdistance c, * * f5 f1 b1 * * f5 f4 b1 cdistance c, f1 f4 c/\ c= cvector_norm * * f5 f4 b1 cvector_norm f4 c/\ c= cdistance c, * * f5 f1 b1 f0 cdistance c, f1 f0 c/\ c= cdistance c, * * f5 f1 b1 f2 creal_add cdistance c, f1 f2 * f6 b1 c= cvector_norm * * f5 f1 b1 cvector_norm f1
+ ((\f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f)) f) |- ((((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f) ==> (?f. (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v2) ((cross v3) v0))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) /\ ((g23 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2)))))))))))))))) = (?f. (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v2) ((cross v3) v0))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) /\ ((g23 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2))))))))))))))))
T c==> * / c= / / cCOND c= b1 f0 * * f1 f0 b2 cCOND c= b1 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b2 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f4 c= c==> c= / / cCOND c= b0 f0 * * f1 f0 b1 cCOND c= b0 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b1 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b0 f4 c? / c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c/\ creal_gt cdot f0 ccross f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt cdot f2 ccross f0 f3 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f6 c/\ creal_continuous_on f7 * part copen_real_interval c, creal_neg f6 f6 c= * f7 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ cdeformation b0 f8 c, creal_neg b1 b1 c/\ ! ! c==> c/\ c~ c= b2 f2 c~ c= b2 f0 c= * * b0 b2 b3 b2 ! c==> creal_lt creal_abs b2 b1 c/\ c= cdistance c, f3 * * b0 f2 b2 cdistance c, f3 f2 c/\ c= cdistance c, * * b0 f0 b2 * * b0 f2 b2 cdistance c, f0 f2 c/\ c= cvector_norm * * b0 f2 b2 cvector_norm f2 c/\ c= cdistance c, * * b0 f0 b2 f3 cdistance c, f0 f3 c/\ c= cdistance c, * * b0 f0 b2 f5 creal_add cdistance c, f0 f5 * f7 b2 c= cvector_norm * * b0 f0 b2 cvector_norm f0 c? / c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c/\ creal_gt cdot f0 ccross f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt cdot f2 ccross f0 f3 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f6 c/\ creal_continuous_on f7 * part copen_real_interval c, creal_neg f6 f6 c= * f7 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ cdeformation b0 f8 c, creal_neg b1 b1 c/\ ! ! c==> c/\ c~ c= b2 f2 c~ c= b2 f0 c= * * b0 b2 b3 b2 ! c==> creal_lt creal_abs b2 b1 c/\ c= cdistance c, f3 * * b0 f2 b2 cdistance c, f3 f2 c/\ c= cdistance c, * * b0 f0 b2 * * b0 f2 b2 cdistance c, f0 f2 c/\ c= cvector_norm * * b0 f2 b2 cvector_norm f2 c/\ c= cdistance c, * * b0 f0 b2 f3 cdistance c, f0 f3 c/\ c= cdistance c, * * b0 f0 b2 f5 creal_add cdistance c, f0 f5 * f7 b2 c= cvector_norm * * b0 f0 b2 cvector_norm f0
+ ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f), ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1) |- (((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f) /\ (?f. (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v2) ((cross v3) v0))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) /\ ((g23 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2))))))))))))))))
T c==> c= / / cCOND c= b0 f0 * * f1 f0 b1 cCOND c= b0 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b1 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b0 f4 c==> c= / / cCOND c= b0 f0 cmk_simplex1 cvec cNUMERAL c_0 f5 f3 creal_pow cvector_norm f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f5 f0 * f6 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 b0 f1 c/\ c= / / cCOND c= b0 f0 * * f1 f0 b1 cCOND c= b0 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b1 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b0 f4 c? / c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c/\ creal_gt cdot f0 ccross f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt cdot f2 ccross f0 f3 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f7 c/\ creal_continuous_on f6 * part copen_real_interval c, creal_neg f7 f7 c= * f6 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ cdeformation b0 f8 c, creal_neg b1 b1 c/\ ! ! c==> c/\ c~ c= b2 f2 c~ c= b2 f0 c= * * b0 b2 b3 b2 ! c==> creal_lt creal_abs b2 b1 c/\ c= cdistance c, f3 * * b0 f2 b2 cdistance c, f3 f2 c/\ c= cdistance c, * * b0 f0 b2 * * b0 f2 b2 cdistance c, f0 f2 c/\ c= cvector_norm * * b0 f2 b2 cvector_norm f2 c/\ c= cdistance c, * * b0 f0 b2 f3 cdistance c, f0 f3 c/\ c= cdistance c, * * b0 f0 b2 f5 creal_add cdistance c, f0 f5 * f6 b2 c= cvector_norm * * b0 f0 b2 cvector_norm f0
+ |- (((?f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1)) ==> (?f. (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v2) ((cross v3) v0))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) /\ ((g23 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2)))))))))))))))) = (?f. (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v2) ((cross v3) v0))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) /\ ((g23 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2))))))))))))))))
T c= c==> c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 c? / c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f0 part cEMPTY c/\ creal_gt cdot f0 ccross f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_gt cdot f4 ccross f0 f2 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f5 c/\ creal_continuous_on f3 * part copen_real_interval c, creal_neg f5 f5 c= * f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ cdeformation b0 f6 c, creal_neg b1 b1 c/\ ! ! c==> c/\ c~ c= b2 f4 c~ c= b2 f0 c= * * b0 b2 b3 b2 ! c==> creal_lt creal_abs b2 b1 c/\ c= cdistance c, f2 * * b0 f4 b2 cdistance c, f2 f4 c/\ c= cdistance c, * * b0 f0 b2 * * b0 f4 b2 cdistance c, f0 f4 c/\ c= cvector_norm * * b0 f4 b2 cvector_norm f4 c/\ c= cdistance c, * * b0 f0 b2 f2 cdistance c, f0 f2 c/\ c= cdistance c, * * b0 f0 b2 f1 creal_add cdistance c, f0 f1 * f3 b2 c= cvector_norm * * b0 f0 b2 cvector_norm f0 c? / c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f0 part cEMPTY c/\ creal_gt cdot f0 ccross f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_gt cdot f4 ccross f0 f2 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f5 c/\ creal_continuous_on f3 * part copen_real_interval c, creal_neg f5 f5 c= * f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ cdeformation b0 f6 c, creal_neg b1 b1 c/\ ! ! c==> c/\ c~ c= b2 f4 c~ c= b2 f0 c= * * b0 b2 b3 b2 ! c==> creal_lt creal_abs b2 b1 c/\ c= cdistance c, f2 * * b0 f4 b2 cdistance c, f2 f4 c/\ c= cdistance c, * * b0 f0 b2 * * b0 f4 b2 cdistance c, f0 f4 c/\ c= cvector_norm * * b0 f4 b2 cvector_norm f4 c/\ c= cdistance c, * * b0 f0 b2 f2 cdistance c, f0 f2 c/\ c= cdistance c, * * b0 f0 b2 f1 creal_add cdistance c, f0 f1 * f3 b2 c= cvector_norm * * b0 f0 b2 cvector_norm f0
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))), (~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT (v3 INSERT EMPTY)))))), ((g23 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))), ((real_lt (real_of_num (NUMERAL _0))) e), ((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))), ((real_gt ((dot v2) ((cross v3) v0))) (real_of_num (NUMERAL _0))), ((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) |- ((\f1. (LET_END ((LET (\f. (LET_END (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v2) ((cross v3) v0))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) /\ ((g23 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2))))))))))))))))) (\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))))))) = (\f1. (LET_END ((LET (\f. (LET_END (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2)))))))))))))))) (\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * f4 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f5 c==> creal_gt cdot f1 ccross f2 f0 creal_of_num cNUMERAL c_0 c==> creal_gt cdot f2 ccross f3 f0 creal_of_num cNUMERAL c_0 c==> creal_continuous_on f4 * part copen_real_interval c, creal_neg f5 f5 c= / cLET_END cLET / cLET_END c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_gt cdot f2 ccross f3 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt cdot f1 ccross f2 f0 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f5 c/\ creal_continuous_on f4 * part copen_real_interval c, creal_neg f5 f5 c= * f4 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ cdeformation b1 f6 c, creal_neg b2 b2 c/\ ! ! c==> c/\ c~ c= b3 f1 c~ c= b3 f2 c= * * b1 b3 b4 b3 ! c==> creal_lt creal_abs b3 b2 c/\ c= cdistance c, f0 * * b1 f1 b3 cdistance c, f0 f1 c/\ c= cdistance c, * * b1 f2 b3 * * b1 f1 b3 cdistance c, f2 f1 c/\ c= cvector_norm * * b1 f1 b3 cvector_norm f1 c/\ c= cdistance c, * * b1 f2 b3 f0 cdistance c, f2 f0 c/\ c= cdistance c, * * b1 f2 b3 f3 creal_add cdistance c, f2 f3 * f4 b3 c= cvector_norm * * b1 f2 b3 cvector_norm f2 / / cCOND c= b1 f2 * * b0 f2 b2 cCOND c= b1 f1 cmk_simplex1 cvec cNUMERAL c_0 * * b0 f2 b2 f0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 b1 / cLET_END cLET / cLET_END c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ cdeformation b1 f6 c, creal_neg b2 b2 c/\ ! ! c==> c/\ c~ c= b3 f1 c~ c= b3 f2 c= * * b1 b3 b4 b3 ! c==> creal_lt creal_abs b3 b2 c/\ c= cdistance c, f0 * * b1 f1 b3 cdistance c, f0 f1 c/\ c= cdistance c, * * b1 f2 b3 * * b1 f1 b3 cdistance c, f2 f1 c/\ c= cvector_norm * * b1 f1 b3 cvector_norm f1 c/\ c= cdistance c, * * b1 f2 b3 f0 cdistance c, f2 f0 c/\ c= cdistance c, * * b1 f2 b3 f3 creal_add cdistance c, f2 f3 * f4 b3 c= cvector_norm * * b1 f2 b3 cvector_norm f2 / / cCOND c= b1 f2 * * b0 f2 b2 cCOND c= b1 f1 cmk_simplex1 cvec cNUMERAL c_0 * * b0 f2 b2 f0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 b1
- ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1) |- (((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1) /\ (?f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1)))
T c==> c= / / cCOND c= b0 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f4 c/\ c= / / cCOND c= b0 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f4 c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0
+ |- ((!v3. (!e. (?f. (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v2) ((cross v3) v0))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) /\ ((g23 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2))))))))))))))))) = T)
T c= ! ! c? / c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ creal_gt cdot f1 ccross b0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt cdot f2 ccross f1 f0 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ creal_continuous_on f3 * part copen_real_interval c, creal_neg b1 b1 c= * f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ cdeformation b2 f4 c, creal_neg b3 b3 c/\ ! ! c==> c/\ c~ c= b4 f2 c~ c= b4 f1 c= * * b2 b4 b5 b4 ! c==> creal_lt creal_abs b4 b3 c/\ c= cdistance c, f0 * * b2 f2 b4 cdistance c, f0 f2 c/\ c= cdistance c, * * b2 f1 b4 * * b2 f2 b4 cdistance c, f1 f2 c/\ c= cvector_norm * * b2 f2 b4 cvector_norm f2 c/\ c= cdistance c, * * b2 f1 b4 f0 cdistance c, f1 f0 c/\ c= cdistance c, * * b2 f1 b4 b0 creal_add cdistance c, f1 b0 * f3 b4 c= cvector_norm * * b2 f1 b4 cvector_norm f1 cT
+ |- ((\f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f)) (\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))))
T * / c= / / cCOND c= b1 f0 * * f1 f0 b2 cCOND c= b1 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b2 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 / / cCOND c= b0 f0 * * f1 f0 b1 cCOND c= b0 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b1 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b0
- ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f) |- (((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f) /\ (?f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f)))
T c==> c= / / cCOND c= b0 f0 * * f1 f0 b1 cCOND c= b0 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b1 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b0 f4 c/\ c= / / cCOND c= b0 f0 * * f1 f0 b1 cCOND c= b0 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b1 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b0 f4 c? / c= / / cCOND c= b1 f0 * * f1 f0 b2 cCOND c= b1 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b2 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 b0
- |- ((((\f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f)) f) ==> (?f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f))) = T)
T c= c==> * / c= / / cCOND c= b1 f0 * * f1 f0 b2 cCOND c= b1 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b2 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f4 c? / c= / / cCOND c= b1 f0 * * f1 f0 b2 cCOND c= b1 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b2 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 cT
+ |- ((\v2. (!v3. (!e. ((LET (\f1. (LET_END ((LET (\f. (LET_END (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v2) ((cross v3) v0))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) /\ ((g23 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2))))))))))))))))) (\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))))))) (\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))))))) v2)
T * / ! ! cLET / cLET_END cLET / cLET_END c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ creal_gt cdot b0 ccross b1 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt cdot f1 ccross b0 f0 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_continuous_on f2 * part copen_real_interval c, creal_neg b2 b2 c= * f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ cdeformation b4 f3 c, creal_neg b5 b5 c/\ ! ! c==> c/\ c~ c= b6 f1 c~ c= b6 b0 c= * * b4 b6 b7 b6 ! c==> creal_lt creal_abs b6 b5 c/\ c= cdistance c, f0 * * b4 f1 b6 cdistance c, f0 f1 c/\ c= cdistance c, * * b4 b0 b6 * * b4 f1 b6 cdistance c, b0 f1 c/\ c= cvector_norm * * b4 f1 b6 cvector_norm f1 c/\ c= cdistance c, * * b4 b0 b6 f0 cdistance c, b0 f0 c/\ c= cdistance c, * * b4 b0 b6 b1 creal_add cdistance c, b0 b1 * f2 b6 c= cvector_norm * * b4 b0 b6 cvector_norm b0 / / cCOND c= b4 b0 * * b3 b0 b5 cCOND c= b4 f1 cmk_simplex1 cvec cNUMERAL c_0 * * b3 b0 b5 f0 creal_pow cvector_norm b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 b0 cNUMERAL cBIT0 cBIT1 c_0 b4 / / cCOND c= b3 b0 cmk_simplex1 cvec cNUMERAL c_0 b1 f0 creal_pow cvector_norm b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, b1 b0 * f2 b4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 b1 cNUMERAL cBIT0 cBIT1 c_0 b3 f4
- |- ((!t. t) = t)
T c= ! f0 f0
- |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
+ ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f), ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1) |- (?f. (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v2) ((cross v3) v0))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) /\ ((g23 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2)))))))))))))))
T c==> c= / / cCOND c= b0 f0 * * f1 f0 b1 cCOND c= b0 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b1 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b0 f4 c==> c= / / cCOND c= b0 f0 cmk_simplex1 cvec cNUMERAL c_0 f5 f3 creal_pow cvector_norm f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f5 f0 * f6 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 b0 f1 c? / c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c/\ creal_gt cdot f0 ccross f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt cdot f2 ccross f0 f3 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f7 c/\ creal_continuous_on f6 * part copen_real_interval c, creal_neg f7 f7 c= * f6 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ cdeformation b0 f8 c, creal_neg b1 b1 c/\ ! ! c==> c/\ c~ c= b2 f2 c~ c= b2 f0 c= * * b0 b2 b3 b2 ! c==> creal_lt creal_abs b2 b1 c/\ c= cdistance c, f3 * * b0 f2 b2 cdistance c, f3 f2 c/\ c= cdistance c, * * b0 f0 b2 * * b0 f2 b2 cdistance c, f0 f2 c/\ c= cvector_norm * * b0 f2 b2 cvector_norm f2 c/\ c= cdistance c, * * b0 f0 b2 f3 cdistance c, f0 f3 c/\ c= cdistance c, * * b0 f0 b2 f5 creal_add cdistance c, f0 f5 * f6 b2 c= cvector_norm * * b0 f0 b2 cvector_norm f0
- |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
- |- (((!x. (((\f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1)) x) ==> (?f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1)))) ==> ((?f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1)) ==> (?f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1)))) = ((?f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1)) ==> (?f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1))))
T c= c==> ! c==> * / c= / / cCOND c= b2 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b2 b1 b0 c? / c= / / cCOND c= b2 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b2 b1 c==> c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 c==> c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))), (~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT (v3 INSERT EMPTY)))))), ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f), ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1), ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v2) ((cross v3) v0))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) /\ ((g23 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))))))) |- (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2)))))))))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= / / cCOND c= b0 f2 * * f4 f2 b1 cCOND c= b0 f1 cmk_simplex1 cvec cNUMERAL c_0 * * f4 f2 b1 f0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 f5 c==> c= / / cCOND c= b0 f2 cmk_simplex1 cvec cNUMERAL c_0 f3 f0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f3 f2 * f6 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 b0 f4 c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_gt cdot f2 ccross f3 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt cdot f1 ccross f2 f0 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f7 c/\ creal_continuous_on f6 * part copen_real_interval c, creal_neg f7 f7 c= * f6 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ cdeformation f5 f8 c, creal_neg b0 b0 c/\ ! ! c==> c/\ c~ c= b1 f1 c~ c= b1 f2 c= * * f5 b1 b2 b1 ! c==> creal_lt creal_abs b1 b0 c/\ c= cdistance c, f0 * * f5 f1 b1 cdistance c, f0 f1 c/\ c= cdistance c, * * f5 f2 b1 * * f5 f1 b1 cdistance c, f2 f1 c/\ c= cvector_norm * * f5 f1 b1 cvector_norm f1 c/\ c= cdistance c, * * f5 f2 b1 f0 cdistance c, f2 f0 c/\ c= cdistance c, * * f5 f2 b1 f3 creal_add cdistance c, f2 f3 * f6 b1 c= cvector_norm * * f5 f2 b1 cvector_norm f2
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))), (~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT (v3 INSERT EMPTY)))))), ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f), ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1), (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) /\ ((g23 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))))), ((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))), ((real_gt ((dot v2) ((cross v3) v0))) (real_of_num (NUMERAL _0))) |- (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2)))))))))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= / / cCOND c= b0 f2 * * f4 f2 b1 cCOND c= b0 f1 cmk_simplex1 cvec cNUMERAL c_0 * * f4 f2 b1 f0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 f5 c==> c= / / cCOND c= b0 f2 cmk_simplex1 cvec cNUMERAL c_0 f3 f0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f3 f2 * f6 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 b0 f4 c==> c/\ creal_gt cdot f1 ccross f2 f0 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f7 c/\ creal_continuous_on f6 * part copen_real_interval c, creal_neg f7 f7 c= * f6 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c==> creal_gt cdot f1 ccross f2 f0 creal_of_num cNUMERAL c_0 c==> creal_gt cdot f2 ccross f3 f0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ cdeformation f5 f8 c, creal_neg b0 b0 c/\ ! ! c==> c/\ c~ c= b1 f1 c~ c= b1 f2 c= * * f5 b1 b2 b1 ! c==> creal_lt creal_abs b1 b0 c/\ c= cdistance c, f0 * * f5 f1 b1 cdistance c, f0 f1 c/\ c= cdistance c, * * f5 f2 b1 * * f5 f1 b1 cdistance c, f2 f1 c/\ c= cvector_norm * * f5 f1 b1 cvector_norm f1 c/\ c= cdistance c, * * f5 f2 b1 f0 cdistance c, f2 f0 c/\ c= cdistance c, * * f5 f2 b1 f3 creal_add cdistance c, f2 f3 * f6 b1 c= cvector_norm * * f5 f2 b1 cvector_norm f2
- |- ((?e'. t) = t)
T c= c? / f0 f0
+ ((\f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f)) f) |- ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f)
T c==> * / c= / / cCOND c= b1 f0 * * f1 f0 b2 cCOND c= b1 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b2 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f4 c= / / cCOND c= b0 f0 * * f1 f0 b1 cCOND c= b0 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b1 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b0 f4
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1) |- (((\f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f)) f) ==> (?f. (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v2) ((cross v3) v0))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) /\ ((g23 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2))))))))))))))))
T c==> c= / / cCOND c= b0 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f4 c==> * / c= / / cCOND c= b1 f0 * * f4 f0 b2 cCOND c= b1 f5 cmk_simplex1 cvec cNUMERAL c_0 * * f4 f0 b2 f2 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f6 c? / c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f5 * * part cINSERT f0 part cEMPTY c/\ creal_gt cdot f0 ccross f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_gt cdot f5 ccross f0 f2 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f7 c/\ creal_continuous_on f3 * part copen_real_interval c, creal_neg f7 f7 c= * f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ cdeformation b0 f8 c, creal_neg b1 b1 c/\ ! ! c==> c/\ c~ c= b2 f5 c~ c= b2 f0 c= * * b0 b2 b3 b2 ! c==> creal_lt creal_abs b2 b1 c/\ c= cdistance c, f2 * * b0 f5 b2 cdistance c, f2 f5 c/\ c= cdistance c, * * b0 f0 b2 * * b0 f5 b2 cdistance c, f0 f5 c/\ c= cvector_norm * * b0 f5 b2 cvector_norm f5 c/\ c= cdistance c, * * b0 f0 b2 f2 cdistance c, f0 f2 c/\ c= cdistance c, * * b0 f0 b2 f1 creal_add cdistance c, f0 f1 * f3 b2 c= cvector_norm * * b0 f0 b2 cvector_norm f0
+ |- (!f1. (((\f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1)) f1) ==> (?f. (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v2) ((cross v3) v0))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) /\ ((g23 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2)))))))))))))))))
T c==> * / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f4 c? / c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f5 * * part cINSERT f0 part cEMPTY c/\ creal_gt cdot f0 ccross f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_gt cdot f5 ccross f0 f2 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f6 c/\ creal_continuous_on f3 * part copen_real_interval c, creal_neg f6 f6 c= * f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ cdeformation b0 f7 c, creal_neg b1 b1 c/\ ! ! c==> c/\ c~ c= b2 f5 c~ c= b2 f0 c= * * b0 b2 b3 b2 ! c==> creal_lt creal_abs b2 b1 c/\ c= cdistance c, f2 * * b0 f5 b2 cdistance c, f2 f5 c/\ c= cdistance c, * * b0 f0 b2 * * b0 f5 b2 cdistance c, f0 f5 c/\ c= cvector_norm * * b0 f5 b2 cvector_norm f5 c/\ c= cdistance c, * * b0 f0 b2 f2 cdistance c, f0 f2 c/\ c= cdistance c, * * b0 f0 b2 f1 creal_add cdistance c, f0 f1 * f3 b2 c= cvector_norm * * b0 f0 b2 cvector_norm f0
- ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1) |- ((\f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1)) f1)
T c==> c= / / cCOND c= b0 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f4 * / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f4
+ |- ((\f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1)) (\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))))
T * / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 / / cCOND c= b0 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b0
+ |- (((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1) ==> (?f. (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v2) ((cross v3) v0))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) /\ ((g23 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2))))))))))))))))
T c==> c= / / cCOND c= b0 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f4 c? / c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f5 * * part cINSERT f0 part cEMPTY c/\ creal_gt cdot f0 ccross f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_gt cdot f5 ccross f0 f2 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f6 c/\ creal_continuous_on f3 * part copen_real_interval c, creal_neg f6 f6 c= * f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ cdeformation b0 f7 c, creal_neg b1 b1 c/\ ! ! c==> c/\ c~ c= b2 f5 c~ c= b2 f0 c= * * b0 b2 b3 b2 ! c==> creal_lt creal_abs b2 b1 c/\ c= cdistance c, f2 * * b0 f5 b2 cdistance c, f2 f5 c/\ c= cdistance c, * * b0 f0 b2 * * b0 f5 b2 cdistance c, f0 f5 c/\ c= cvector_norm * * b0 f5 b2 cvector_norm f5 c/\ c= cdistance c, * * b0 f0 b2 f2 cdistance c, f0 f2 c/\ c= cdistance c, * * b0 f0 b2 f1 creal_add cdistance c, f0 f1 * f3 b2 c= cvector_norm * * b0 f0 b2 cvector_norm f0
+ |- ((\v0. (!v1. (!v2. (!v3. (!e. ((LET (\f1. (LET_END ((LET (\f. (LET_END (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v2) ((cross v3) v0))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) /\ ((g23 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2))))))))))))))))) (\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))))))) (\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))))))))) v0)
T * / ! ! ! ! cLET / cLET_END cLET / cLET_END c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ creal_gt cdot b2 ccross b3 b0 creal_of_num cNUMERAL c_0 c/\ creal_gt cdot b1 ccross b2 b0 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ creal_continuous_on f0 * part copen_real_interval c, creal_neg b4 b4 c= * f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b7 c/\ cdeformation b6 f1 c, creal_neg b7 b7 c/\ ! ! c==> c/\ c~ c= b8 b1 c~ c= b8 b2 c= * * b6 b8 b9 b8 ! c==> creal_lt creal_abs b8 b7 c/\ c= cdistance c, b0 * * b6 b1 b8 cdistance c, b0 b1 c/\ c= cdistance c, * * b6 b2 b8 * * b6 b1 b8 cdistance c, b2 b1 c/\ c= cvector_norm * * b6 b1 b8 cvector_norm b1 c/\ c= cdistance c, * * b6 b2 b8 b0 cdistance c, b2 b0 c/\ c= cdistance c, * * b6 b2 b8 b3 creal_add cdistance c, b2 b3 * f0 b8 c= cvector_norm * * b6 b2 b8 cvector_norm b2 / / cCOND c= b6 b2 * * b5 b2 b7 cCOND c= b6 b1 cmk_simplex1 cvec cNUMERAL c_0 * * b5 b2 b7 b0 creal_pow cvector_norm b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b2 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b0 b2 cNUMERAL cBIT0 cBIT1 c_0 b6 / / cCOND c= b5 b2 cmk_simplex1 cvec cNUMERAL c_0 b3 b0 creal_pow cvector_norm b3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b0 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, b3 b2 * f0 b6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b0 b3 cNUMERAL cBIT0 cBIT1 c_0 b5 f2
+ |- ((\V. (!g23. (!v0. (!v1. (!v2. (!v3. (!e. ((LET (\f1. (LET_END ((LET (\f. (LET_END (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v2) ((cross v3) v0))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) /\ ((g23 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2))))))))))))))))) (\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))))))) (\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))))))))))) V)
T * / ! ! ! ! ! ! cLET / cLET_END cLET / cLET_END c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b2 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ creal_gt cdot b4 ccross b5 b2 creal_of_num cNUMERAL c_0 c/\ creal_gt cdot b3 ccross b4 b2 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b6 c/\ creal_continuous_on b1 * part copen_real_interval c, creal_neg b6 b6 c= * b1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b9 c/\ cdeformation b8 b0 c, creal_neg b9 b9 c/\ ! ! c==> c/\ c~ c= b10 b3 c~ c= b10 b4 c= * * b8 b10 b11 b10 ! c==> creal_lt creal_abs b10 b9 c/\ c= cdistance c, b2 * * b8 b3 b10 cdistance c, b2 b3 c/\ c= cdistance c, * * b8 b4 b10 * * b8 b3 b10 cdistance c, b4 b3 c/\ c= cvector_norm * * b8 b3 b10 cvector_norm b3 c/\ c= cdistance c, * * b8 b4 b10 b2 cdistance c, b4 b2 c/\ c= cdistance c, * * b8 b4 b10 b5 creal_add cdistance c, b4 b5 * b1 b10 c= cvector_norm * * b8 b4 b10 cvector_norm b4 / / cCOND c= b8 b4 * * b7 b4 b9 cCOND c= b8 b3 cmk_simplex1 cvec cNUMERAL c_0 * * b7 b4 b9 b2 creal_pow cvector_norm b4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm b3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b2 b3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b4 b3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b2 b4 cNUMERAL cBIT0 cBIT1 c_0 b8 / / cCOND c= b7 b4 cmk_simplex1 cvec cNUMERAL c_0 b5 b2 creal_pow cvector_norm b5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm b4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b2 b4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, b5 b4 * b1 b8 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b2 b5 cNUMERAL cBIT0 cBIT1 c_0 b7 f0
+ ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f) |- (((LET (\f1. (LET_END ((LET (\f. (LET_END (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2)))))))))))))))) (\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))))))) f1) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2))))))))))))))
T c==> c= / / cCOND c= b0 f0 * * f1 f0 b1 cCOND c= b0 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b1 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b0 f4 c==> cLET / cLET_END cLET / cLET_END c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ cdeformation b1 f5 c, creal_neg b2 b2 c/\ ! ! c==> c/\ c~ c= b3 f2 c~ c= b3 f0 c= * * b1 b3 b4 b3 ! c==> creal_lt creal_abs b3 b2 c/\ c= cdistance c, f3 * * b1 f2 b3 cdistance c, f3 f2 c/\ c= cdistance c, * * b1 f0 b3 * * b1 f2 b3 cdistance c, f0 f2 c/\ c= cvector_norm * * b1 f2 b3 cvector_norm f2 c/\ c= cdistance c, * * b1 f0 b3 f3 cdistance c, f0 f3 c/\ c= cdistance c, * * b1 f0 b3 f6 creal_add cdistance c, f0 f6 * f7 b3 c= cvector_norm * * b1 f0 b3 cvector_norm f0 / / cCOND c= b1 f0 * * b0 f0 b2 cCOND c= b1 f2 cmk_simplex1 cvec cNUMERAL c_0 * * b0 f0 b2 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 f1 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ cdeformation f4 f5 c, creal_neg b0 b0 c/\ ! ! c==> c/\ c~ c= b1 f2 c~ c= b1 f0 c= * * f4 b1 b2 b1 ! c==> creal_lt creal_abs b1 b0 c/\ c= cdistance c, f3 * * f4 f2 b1 cdistance c, f3 f2 c/\ c= cdistance c, * * f4 f0 b1 * * f4 f2 b1 cdistance c, f0 f2 c/\ c= cvector_norm * * f4 f2 b1 cvector_norm f2 c/\ c= cdistance c, * * f4 f0 b1 f3 cdistance c, f0 f3 c/\ c= cdistance c, * * f4 f0 b1 f6 creal_add cdistance c, f0 f6 * f7 b1 c= cvector_norm * * f4 f0 b1 cvector_norm f0
- ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f) |- ((\f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f)) f)
T c==> c= / / cCOND c= b0 f0 * * f1 f0 b1 cCOND c= b0 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b1 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b0 f4 * / c= / / cCOND c= b1 f0 * * f1 f0 b2 cCOND c= b1 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b2 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f4
+ |- (T = (((LET (\f. (LET_END (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2)))))))))))))))) f) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2)))))))))))))))
T c= cT c==> cLET / cLET_END c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ cdeformation b0 f0 c, creal_neg b1 b1 c/\ ! ! c==> c/\ c~ c= b2 f1 c~ c= b2 f2 c= * * b0 b2 b3 b2 ! c==> creal_lt creal_abs b2 b1 c/\ c= cdistance c, f3 * * b0 f1 b2 cdistance c, f3 f1 c/\ c= cdistance c, * * b0 f2 b2 * * b0 f1 b2 cdistance c, f2 f1 c/\ c= cvector_norm * * b0 f1 b2 cvector_norm f1 c/\ c= cdistance c, * * b0 f2 b2 f3 cdistance c, f2 f3 c/\ c= cdistance c, * * b0 f2 b2 f4 creal_add cdistance c, f2 f4 * f5 b2 c= cvector_norm * * b0 f2 b2 cvector_norm f2 f6 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ cdeformation f6 f0 c, creal_neg b0 b0 c/\ ! ! c==> c/\ c~ c= b1 f1 c~ c= b1 f2 c= * * f6 b1 b2 b1 ! c==> creal_lt creal_abs b1 b0 c/\ c= cdistance c, f3 * * f6 f1 b1 cdistance c, f3 f1 c/\ c= cdistance c, * * f6 f2 b1 * * f6 f1 b1 cdistance c, f2 f1 c/\ c= cvector_norm * * f6 f1 b1 cvector_norm f1 c/\ c= cdistance c, * * f6 f2 b1 f3 cdistance c, f2 f3 c/\ c= cdistance c, * * f6 f2 b1 f4 creal_add cdistance c, f2 f4 * f5 b1 c= cvector_norm * * f6 f2 b1 cvector_norm f2
+ |- ((!e. (?f. (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v2) ((cross v3) v0))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) /\ ((g23 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2)))))))))))))))) = T)
T c= ! c? / c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ creal_gt cdot f1 ccross f2 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt cdot f3 ccross f1 f0 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ creal_continuous_on f4 * part copen_real_interval c, creal_neg b0 b0 c= * f4 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ cdeformation b1 f5 c, creal_neg b2 b2 c/\ ! ! c==> c/\ c~ c= b3 f3 c~ c= b3 f1 c= * * b1 b3 b4 b3 ! c==> creal_lt creal_abs b3 b2 c/\ c= cdistance c, f0 * * b1 f3 b3 cdistance c, f0 f3 c/\ c= cdistance c, * * b1 f1 b3 * * b1 f3 b3 cdistance c, f1 f3 c/\ c= cvector_norm * * b1 f3 b3 cvector_norm f3 c/\ c= cdistance c, * * b1 f1 b3 f0 cdistance c, f1 f0 c/\ c= cdistance c, * * b1 f1 b3 f2 creal_add cdistance c, f1 f2 * f4 b3 c= cvector_norm * * b1 f1 b3 cvector_norm f1 cT
- |- (((!f. (!x. (((LET f) x) = (f x)))) ==> ((\f. (!x. (((LET f) x) = (f x)))) f)) = ((\f. (!x. (((LET f) x) = (f x)))) f))
T c= c==> ! ! c= cLET b0 b1 * b0 b1 * / ! c= cLET b0 b1 * b0 b1 f0 * / ! c= cLET b0 b1 * b0 b1 f0
- ((\f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1)) f1) |- ((((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1) ==> (?f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1))) = (?f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1)))
T c==> * / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f4 c= c==> c= / / cCOND c= b0 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f4 c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0
+ ((\f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1)) f1) |- ((((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1) ==> (?f. (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v2) ((cross v3) v0))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) /\ ((g23 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2)))))))))))))))) = (?f. (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v2) ((cross v3) v0))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g23) (open_real_interval ((real_neg e) , e))) /\ ((g23 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. (((~ (v = v1)) /\ (~ (v = v2))) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = (distance (v0 , v1))) /\ (((distance (((f v2) t) , ((f v1) t))) = (distance (v2 , v1))) /\ (((vector_norm ((f v1) t)) = (vector_norm v1)) /\ (((distance (((f v2) t) , v0)) = (distance (v2 , v0))) /\ (((distance (((f v2) t) , v3)) = ((real_add (distance (v2 , v3))) (g23 t))) /\ ((vector_norm ((f v2) t)) = (vector_norm v2))))))))))))))))
T c==> * / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f4 c= c==> c= / / cCOND c= b0 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f4 c? / c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f5 * * part cINSERT f0 part cEMPTY c/\ creal_gt cdot f0 ccross f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_gt cdot f5 ccross f0 f2 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f6 c/\ creal_continuous_on f3 * part copen_real_interval c, creal_neg f6 f6 c= * f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ cdeformation b0 f7 c, creal_neg b1 b1 c/\ ! ! c==> c/\ c~ c= b2 f5 c~ c= b2 f0 c= * * b0 b2 b3 b2 ! c==> creal_lt creal_abs b2 b1 c/\ c= cdistance c, f2 * * b0 f5 b2 cdistance c, f2 f5 c/\ c= cdistance c, * * b0 f0 b2 * * b0 f5 b2 cdistance c, f0 f5 c/\ c= cvector_norm * * b0 f5 b2 cvector_norm f5 c/\ c= cdistance c, * * b0 f0 b2 f2 cdistance c, f0 f2 c/\ c= cdistance c, * * b0 f0 b2 f1 creal_add cdistance c, f0 f1 * f3 b2 c= cvector_norm * * b0 f0 b2 cvector_norm f0 c? / c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f5 * * part cINSERT f0 part cEMPTY c/\ creal_gt cdot f0 ccross f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_gt cdot f5 ccross f0 f2 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f6 c/\ creal_continuous_on f3 * part copen_real_interval c, creal_neg f6 f6 c= * f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ cdeformation b0 f7 c, creal_neg b1 b1 c/\ ! ! c==> c/\ c~ c= b2 f5 c~ c= b2 f0 c= * * b0 b2 b3 b2 ! c==> creal_lt creal_abs b2 b1 c/\ c= cdistance c, f2 * * b0 f5 b2 cdistance c, f2 f5 c/\ c= cdistance c, * * b0 f0 b2 * * b0 f5 b2 cdistance c, f0 f5 c/\ c= cvector_norm * * b0 f5 b2 cvector_norm f5 c/\ c= cdistance c, * * b0 f0 b2 f2 cdistance c, f0 f2 c/\ c= cdistance c, * * b0 f0 b2 f1 creal_add cdistance c, f0 f1 * f3 b2 c= cvector_norm * * b0 f0 b2 cvector_norm f0
- ((\f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1)) f1) |- (((\f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1)) f1) /\ (?f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1)))
T c==> * / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f4 c/\ * / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f4 c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
- ((\f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f)) f) |- ((((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f) ==> (?f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f))) = (?f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f)))
T c==> * / c= / / cCOND c= b1 f0 * * f1 f0 b2 cCOND c= b1 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b2 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f4 c= c==> c= / / cCOND c= b0 f0 * * f1 f0 b1 cCOND c= b0 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b1 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b0 f4 c? / c= / / cCOND c= b1 f0 * * f1 f0 b2 cCOND c= b1 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b2 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 c? / c= / / cCOND c= b1 f0 * * f1 f0 b2 cCOND c= b1 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b2 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 b0
- |- ((?f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f)) ==> (?f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f)))
T c==> c? / c= / / cCOND c= b1 f0 * * f1 f0 b2 cCOND c= b1 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b2 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 c? / c= / / cCOND c= b1 f0 * * f1 f0 b2 cCOND c= b1 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b2 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 b0
- |- (((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1) ==> (?f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1)))
T c==> c= / / cCOND c= b0 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f4 c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f) = ((\f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f)) f))
T c= c= / / cCOND c= b0 f0 * * f1 f0 b1 cCOND c= b0 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b1 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b0 f4 * / c= / / cCOND c= b1 f0 * * f1 f0 b2 cCOND c= b1 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b2 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f4
- |- (!f. (((\f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f)) f) ==> (?f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f))))
T c==> * / c= / / cCOND c= b1 f0 * * f1 f0 b2 cCOND c= b1 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b2 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f4 c? / c= / / cCOND c= b1 f0 * * f1 f0 b2 cCOND c= b1 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b2 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 b0
- |- (((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f) ==> (?f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f)))
T c==> c= / / cCOND c= b0 f0 * * f1 f0 b1 cCOND c= b0 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b1 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b0 f4 c? / c= / / cCOND c= b1 f0 * * f1 f0 b2 cCOND c= b1 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b2 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 b0
- |- (!f1. (((\f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1)) f1) ==> (?f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1))))
T c==> * / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f4 c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0
- |- (((\f. (f f)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- ((\f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f)) f) |- (((\f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f)) f) /\ (?f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f)))
T c==> * / c= / / cCOND c= b1 f0 * * f1 f0 b2 cCOND c= b1 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b2 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f4 c/\ * / c= / / cCOND c= b1 f0 * * f1 f0 b2 cCOND c= b1 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b2 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f4 c? / c= / / cCOND c= b1 f0 * * f1 f0 b2 cCOND c= b1 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b2 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 b0
- |- ((\t. ((LET_END t) = t)) t)
T * / c= cLET_END b0 b0 f0
- |- (((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1) = ((\f1. ((\w. (\t. (((COND (w = v2)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v3) v0) ((real_pow (vector_norm v3)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v3 , v2))) (g23 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f1)) f1))
T c= c= / / cCOND c= b0 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f4 * / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f4
- |- (((!x. (((\f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f)) x) ==> (?f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f)))) ==> ((?f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f)) ==> (?f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f)))) = ((?f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f)) ==> (?f. ((\w. (\t. (((COND (w = v2)) ((f1 v2) t)) (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) ((f1 v2) t)) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = f))))
T c= c==> ! c==> * / c= / / cCOND c= b2 f0 * * f1 f0 b3 cCOND c= b2 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b3 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b2 b1 b0 c? / c= / / cCOND c= b2 f0 * * f1 f0 b3 cCOND c= b2 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b3 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b2 b1 c==> c? / c= / / cCOND c= b1 f0 * * f1 f0 b2 cCOND c= b1 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b2 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 c? / c= / / cCOND c= b1 f0 * * f1 f0 b2 cCOND c= b1 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b2 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 c==> c? / c= / / cCOND c= b1 f0 * * f1 f0 b2 cCOND c= b1 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b2 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 c? / c= / / cCOND c= b1 f0 * * f1 f0 b2 cCOND c= b1 f2 cmk_simplex1 cvec cNUMERAL c_0 * * f1 f0 b2 f3 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 b1 b0
