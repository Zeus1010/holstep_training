N Tame_list.parts_in_node
C |- (!L. (!N. (!r. (!p. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM x) p))))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))))))))
T c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 cMEM f4 f3 cIN f4 * * part cnode chypermap_of_list f0 cHD f3
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.add0n
A |- (!n. (((NUMERAL _0) + n) = n))
T c= c+ cNUMERAL c_0 f0 f0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D ADD_ASSOC
A |- (!m. (!n. (!p. ((m + (n + p)) = ((m + n) + p)))))
T c= c+ f0 c+ f1 f2 c+ c+ f0 f1 f2
D ADD_AC
A |- (((m + n) = (n + m)) /\ ((((m + n) + p) = (m + (n + p))) /\ ((m + (n + p)) = (n + (m + p)))))
T c/\ c= c+ f0 f1 c+ f1 f0 c/\ c= c+ c+ f0 f1 f2 c+ f0 c+ f1 f2 c= c+ f0 c+ f1 f2 c+ f1 c+ f0 f2
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D Ssrnat.mul0n
A |- (!n. (((NUMERAL _0) * n) = (NUMERAL _0)))
T c= c* cNUMERAL c_0 f0 cNUMERAL c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D Ssrnat.mul1n
A |- (!n. (((NUMERAL (BIT1 _0)) * n) = n))
T c= c* cNUMERAL cBIT1 c_0 f0 f0
D LEFT_ADD_DISTRIB
A |- (!m. (!n. (!p. ((m * (n + p)) = ((m * n) + (m * p))))))
T c= c* f0 c+ f1 f2 c+ c* f0 f1 c* f0 f2
D MULT_AC
A |- (((m * n) = (n * m)) /\ ((((m * n) * p) = (m * (n * p))) /\ ((m * (n * p)) = (n * (m * p)))))
T c/\ c= c* f0 f1 c* f1 f0 c/\ c= c* c* f0 f1 f2 c* f0 c* f1 f2 c= c* f0 c* f1 f2 c* f1 c* f0 f2
D Ssrnat.expnS
A |- (!m. (!n. ((m EXP (SUC n)) = (m * (m EXP n)))))
T c= cEXP f0 cSUC f1 c* f0 cEXP f0 f1
D Ssrnat.expn0
A |- (!m. ((m EXP (NUMERAL _0)) = (NUMERAL (BIT1 _0))))
T c= cEXP f0 cNUMERAL c_0 cNUMERAL cBIT1 c_0
D Hypermap.lemma_power_inverse_in_node2
A |- (!H. (!x. (!n. ((((POWER (inverse (node_map H))) n) x) IN ((node H) x)))))
T cIN cPOWER * part cinverse * part cnode_map f0 f1 f2 * * part cnode f0 f2
D Seq.index_mem
A |- (!x. (!s. ((((indexl x) s) < (sizel s)) = ((MEM x) s))))
T c= c< cindexl f0 f1 csizel f1 cMEM f0 f1
D Seq2.EL_index
A |- (!x. (!s. (((MEM x) s) ==> (((EL ((indexl x) s)) s) = x))))
T c==> cMEM f0 f1 c= cEL cindexl f0 f1 f1 f0
D Tame_list.MEM_HD
A |- (!xs. ((~ (xs = NIL)) ==> ((MEM (HD xs)) xs)))
T c==> c~ c= f0 cNIL cMEM cHD f0 f0
D Tame_list.index_hd0
A |- (!s. ((~ (s = NIL)) ==> (((indexl (HD s)) s) = (NUMERAL _0))))
T c==> c~ c= f0 cNIL c= cindexl cHD f0 f0 cNUMERAL c_0
D Tame_list.parts_uniq_nonnil
A |- (!L. (!N. (!r. (!p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))))))))
T c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM f3 cparts f0 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f3 c/\ c~ c= f3 cNIL ! c==> cMEM b0 f3 cMEM b0 f2
D Tame_list.parts_node_inverse_power
A |- (!L. (!N. (!r. (!p. (!k. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM x) p) /\ ((k + ((indexl x) p)) < (sizel p))))))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) k) x) = ((EL (k + ((indexl x) p))) p)))))))))
T c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 c/\ cMEM f4 f3 c< c+ f5 cindexl f4 f3 csizel f3 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 f5 f4 cEL c+ f5 cindexl f4 f3 f3
+ |- ((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = (x IN ((node (hypermap_of_list L)) (HD p)))))
T c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1
+ |- ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = (((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))))
T c= c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1
+ ((MEM x) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))
T c==> cMEM f0 f1 c==> cMEM f1 cparts f2 f3 c==> cMEM f3 f4 c==> cnormal_list f2 f4 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1
+ |- ((\p'. (!q'. (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)) = q')) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 b0 c==> c==> b0 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 b1 c= c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 c==> b0 b1 f3
+ ((((indexl x) p) + (NUMERAL _0)) < (sizel p)) |- (((((indexl x) p) + (NUMERAL _0)) < (sizel p)) /\ (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p)) = ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))))
T c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c/\ c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1
- |- (((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) = ((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x))) ==> ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> q')))) = ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> q'))))
T c= c==> c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c==> c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 f3 c= c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 f3 c==> c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 f3 c= c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 f3
+ (good_list L), (((MEM p) ((parts L) r)) /\ ((MEM x) p)), ((MEM r) N), ((normal_list L) N) |- (x IN ((node (hypermap_of_list L)) (HD p)))
T c==> cgood_list f0 c==> c/\ cMEM f1 cparts f0 f2 cMEM f3 f1 c==> cMEM f2 f4 c==> cnormal_list f0 f4 cIN f3 * * part cnode chypermap_of_list f0 cHD f1
- |- ((\q'. ((((MEM _10131655) p) = p') ==> ((p' ==> (((MEM _10131655) r) = q')) ==> ((((MEM _10131655) p) ==> ((MEM _10131655) r)) = (p' ==> q'))))) q')
T * / c==> c= cMEM f0 f1 f2 c==> c==> f2 c= cMEM f0 f3 b0 c= c==> cMEM f0 f1 cMEM f0 f3 c==> f2 b0 f4
- |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
- (((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))), ((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) |- ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))
T c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0
- |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10131650)) /\ (((real_le ((real_add (real_of_int _10131650)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10131650)) \/ ((real_le ((real_add (real_of_int _10131650)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10131650)))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10131650)) /\ (((real_le ((real_add (real_of_int _10131650)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10131650)) \/ ((real_le ((real_add (real_of_int _10131650)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10131650)))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10131650)) /\ (((real_le ((real_add (real_of_int _10131650)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10131650)) \/ ((real_le ((real_add (real_of_int _10131650)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10131650))))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0
+ |- (((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) = p') ==> ((p' ==> (((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) = q')) ==> (((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))) = (p' ==> q'))))
T c==> c= c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM f3 cparts f0 f2 f4 c==> c==> f4 c= c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f3 c/\ c~ c= f3 cNIL ! c==> cMEM b0 f3 cMEM b0 f2 f5 c= c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM f3 cparts f0 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f3 c/\ c~ c= f3 cNIL ! c==> cMEM b0 f3 cMEM b0 f2 c==> f4 f5
+ |- (!x'. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM x') p) /\ ((((indexl x) p) + ((indexl x') p)) < (sizel p))))))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) x') = ((EL (((indexl x) p) + ((indexl x') p))) p))))
T c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 c/\ cMEM f4 f3 c< c+ cindexl f5 f3 cindexl f4 f3 csizel f3 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 cindexl f5 f3 f4 cEL c+ cindexl f5 f3 cindexl f4 f3 f3
- |- ((\p'. (!q'. ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q')))))) p')
T * / ! c==> c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 b0 c==> c==> b0 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 b1 c= c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> b0 b1 f3
- ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- (~ (NIL = p))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c~ c= cNIL f1
+ |- (((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> (((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> q')))
T c==> c==> c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 f3 c= c==> c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 f3
+ |- ((\k. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM x) p) /\ ((k + ((indexl x) p)) < (sizel p))))))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) k) x) = ((EL (k + ((indexl x) p))) p))))) ((indexl x) p))
T * / ! c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 c/\ cMEM b1 f3 c< c+ b0 cindexl b1 f3 csizel f3 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 b0 b1 cEL c+ b0 cindexl b1 f3 f3 cindexl f4 f3
+ (good_list L), ((MEM x) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- (x IN ((node (hypermap_of_list L)) (HD p)))
T c==> cgood_list f0 c==> cMEM f1 f2 c==> cMEM f2 cparts f0 f3 c==> cMEM f3 f4 c==> cnormal_list f0 f4 cIN f1 * * part cnode chypermap_of_list f0 cHD f2
+ |- (((!s. ((((indexl x) s) < (sizel s)) = ((MEM x) s))) ==> ((\s. ((((indexl x) s) < (sizel s)) = ((MEM x) s))) s)) = ((\s. ((((indexl x) s) < (sizel s)) = ((MEM x) s))) s))
T c= c==> ! c= c< cindexl f0 b0 csizel b0 cMEM f0 b0 * / c= c< cindexl f0 b0 csizel b0 cMEM f0 b0 f1 * / c= c< cindexl f0 b0 csizel b0 cMEM f0 b0 f1
+ |- (((!p'. (!q'. ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 b0 c==> c==> b0 c= cIN f1 * * part cnode chypermap_of_list f2 cHD f0 b1 c= c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 cIN f1 * * part cnode chypermap_of_list f2 cHD f0 c==> b0 b1 * / ! c==> c= c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 b0 c==> c==> b0 c= cIN f1 * * part cnode chypermap_of_list f2 cHD f0 b1 c= c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 cIN f1 * * part cnode chypermap_of_list f2 cHD f0 c==> b0 b1 f3 * / ! c==> c= c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 b0 c==> c==> b0 c= cIN f1 * * part cnode chypermap_of_list f2 cHD f0 b1 c= c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 cIN f1 * * part cnode chypermap_of_list f2 cHD f0 c==> b0 b1 f3
- |- (((!p'. (!q'. ((((MEM _10131655) p) = p') ==> ((p' ==> (((MEM _10131655) r) = q')) ==> ((((MEM _10131655) p) ==> ((MEM _10131655) r)) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((MEM _10131655) p) = p') ==> ((p' ==> (((MEM _10131655) r) = q')) ==> ((((MEM _10131655) p) ==> ((MEM _10131655) r)) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((MEM _10131655) p) = p') ==> ((p' ==> (((MEM _10131655) r) = q')) ==> ((((MEM _10131655) p) ==> ((MEM _10131655) r)) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cMEM f0 f1 b0 c==> c==> b0 c= cMEM f0 f2 b1 c= c==> cMEM f0 f1 cMEM f0 f2 c==> b0 b1 * / ! c==> c= cMEM f0 f1 b0 c==> c==> b0 c= cMEM f0 f2 b1 c= c==> cMEM f0 f1 cMEM f0 f2 c==> b0 b1 f3 * / ! c==> c= cMEM f0 f1 b0 c==> c==> b0 c= cMEM f0 f2 b1 c= c==> cMEM f0 f1 cMEM f0 f2 c==> b0 b1 f3
- (((indexl x) p) < (sizel p)) |- ((((indexl x) p) < (sizel p)) = T)
T c==> c< cindexl f0 f1 csizel f1 c= c< cindexl f0 f1 csizel f1 cT
+ (((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) |- ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) /\ ((x IN ((node (hypermap_of_list L)) (HD p))) = (x IN ((node (hypermap_of_list L)) (HD p)))))
T c==> c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c/\ c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1
+ ((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) |- (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) /\ ((x IN ((node (hypermap_of_list L)) (HD p))) = (x IN ((node (hypermap_of_list L)) (HD p)))))
T c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c/\ c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1
- |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ |- ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)) = q')) ==> ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = (((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> q')))
T c==> c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 f3 c= c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 f3
+ |- (((!x'. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM x') p) /\ ((((indexl x) p) + ((indexl x') p)) < (sizel p))))))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) x') = ((EL (((indexl x) p) + ((indexl x') p))) p)))) ==> ((\x'. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM x') p) /\ ((((indexl x) p) + ((indexl x') p)) < (sizel p))))))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) x') = ((EL (((indexl x) p) + ((indexl x') p))) p)))) (HD p))) = ((\x'. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM x') p) /\ ((((indexl x) p) + ((indexl x') p)) < (sizel p))))))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) x') = ((EL (((indexl x) p) + ((indexl x') p))) p)))) (HD p)))
T c= c==> ! c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 c/\ cMEM b0 f3 c< c+ cindexl f4 f3 cindexl b0 f3 csizel f3 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 cindexl f4 f3 b0 cEL c+ cindexl f4 f3 cindexl b0 f3 f3 * / c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 c/\ cMEM b0 f3 c< c+ cindexl f4 f3 cindexl b0 f3 csizel f3 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 cindexl f4 f3 b0 cEL c+ cindexl f4 f3 cindexl b0 f3 f3 cHD f3 * / c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 c/\ cMEM b0 f3 c< c+ cindexl f4 f3 cindexl b0 f3 csizel f3 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 cindexl f4 f3 b0 cEL c+ cindexl f4 f3 cindexl b0 f3 f3 cHD f3
+ ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = q')) ==> ((((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) = (((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> q')))
T c==> cMEM f0 cparts f1 f2 c==> cMEM f2 f3 c==> cnormal_list f1 f3 c==> c==> c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f0 c/\ c~ c= f0 cNIL ! c==> cMEM b0 f0 cMEM b0 f2 c= c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f4 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f1 cindexl f4 f0 cHD f0 cEL c+ cindexl f4 f0 cindexl cHD f0 f0 f0 cIN f4 * * part cnode chypermap_of_list f1 cHD f0 f5 c= c==> c==> c/\ cnormal_list f1 f3 c/\ cMEM f2 f3 cMEM f0 cparts f1 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f0 c/\ c~ c= f0 cNIL ! c==> cMEM b0 f0 cMEM b0 f2 c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f4 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f1 cindexl f4 f0 cHD f0 cEL c+ cindexl f4 f0 cindexl cHD f0 f0 f0 cIN f4 * * part cnode chypermap_of_list f1 cHD f0 c==> c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f0 c/\ c~ c= f0 cNIL ! c==> cMEM b0 f0 cMEM b0 f2 f5
+ |- ((\r. (!p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))))) r)
T * / ! c==> c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 cMEM b1 cparts f0 b0 c/\ cuniq b0 c/\ c~ c= b0 cNIL c/\ cuniq b1 c/\ c~ c= b1 cNIL ! c==> cMEM b2 b1 cMEM b2 b0 f2
- |- ((~ (x = y)) = (((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y) \/ ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x)))
T c= c~ c= f0 f1 c\/ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((((POWER (inverse (node_map H))) n) x) IN ((node H) x)) = T)
T c= cIN cPOWER * part cinverse * part cnode_map f0 f1 f2 * * part cnode f0 f2 cT
+ |- ((\q'. (((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) = p') ==> ((p' ==> (((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) = q')) ==> (((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM f3 cparts f0 f2 f4 c==> c==> f4 c= c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f3 c/\ c~ c= f3 cNIL ! c==> cMEM b1 f3 cMEM b1 f2 b0 c= c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM f3 cparts f0 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f3 c/\ c~ c= f3 cNIL ! c==> cMEM b1 f3 cMEM b1 f2 c==> f4 b0 f5
+ |- (((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM x) p))))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = T)
T c= c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 cMEM f4 f3 cIN f4 * * part cnode chypermap_of_list f0 cHD f3 cT
+ |- ((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) = (((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))))
T c= c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1
- |- (((((indexl x) p) < (sizel p)) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x) = q')) ==> (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) = (p' ==> q'))))
T c==> c= c< cindexl f0 f1 csizel f1 f2 c==> c==> f2 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f0 f1 cHD f1 f0 f4 c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f0 f1 cHD f1 f0 c==> f2 f4
+ ((MEM x) p) |- (((indexl x) p) < (sizel p))
T c==> cMEM f0 f1 c< cindexl f0 f1 csizel f1
+ |- (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = (x IN ((node (hypermap_of_list L)) (HD p)))))
T c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 c= cIN f1 * * part cnode chypermap_of_list f2 cHD f0 cIN f1 * * part cnode chypermap_of_list f2 cHD f0
- |- (T ==> (((MEM x) r) = ((MEM x) r)))
T c==> cT c= cMEM f0 f1 cMEM f0 f1
+ |- (((!n. ((((POWER (inverse (node_map H))) n) x) IN ((node H) x))) ==> ((\n. ((((POWER (inverse (node_map H))) n) x) IN ((node H) x))) n)) = ((\n. ((((POWER (inverse (node_map H))) n) x) IN ((node H) x))) n))
T c= c==> ! cIN cPOWER * part cinverse * part cnode_map f0 b0 f1 * * part cnode f0 f1 * / cIN cPOWER * part cinverse * part cnode_map f0 b0 f1 * * part cnode f0 f1 f2 * / cIN cPOWER * part cinverse * part cnode_map f0 b0 f1 * * part cnode f0 f1 f2
+ |- ((\r. (!p. (!k. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM x) p) /\ ((k + ((indexl x) p)) < (sizel p))))))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) k) x) = ((EL (k + ((indexl x) p))) p))))))) r)
T * / ! ! ! c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM b0 f1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b3 b1 c< c+ b2 cindexl b3 b1 csizel b1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 b2 b3 cEL c+ b2 cindexl b3 b1 b1 f2
+ |- ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) IN ((node (hypermap_of_list L)) (HD p)))
T cIN cPOWER * part cinverse * part cnode_map chypermap_of_list f0 cindexl f1 f2 cHD f2 * * part cnode chypermap_of_list f0 cHD f2
+ |- ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q'))))
T c==> c= c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 f3 c==> c==> f3 c= cIN f1 * * part cnode chypermap_of_list f2 cHD f0 f4 c= c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 cIN f1 * * part cnode chypermap_of_list f2 cHD f0 c==> f3 f4
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\p'. (!q'. ((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p)) = q')) ==> ((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) = (p' ==> q')))))) p')
T * / ! c==> c= c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 b0 c==> c==> b0 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 b1 c= c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 c==> b0 b1 f3
+ |- ((!r. (!p. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM x) p))))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))))) = T)
T c= ! ! ! c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM b0 f1 c/\ cMEM b1 cparts f0 b0 cMEM b2 b1 cIN b2 * * part cnode chypermap_of_list f0 cHD b1 cT
+ (good_list L), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))))))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))))
T c==> cgood_list f0 c==> cMEM f1 cparts f0 f2 c==> cMEM f2 f3 c==> cnormal_list f0 f3 c= c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f4 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 cindexl f4 f1 cHD f1 cEL c+ cindexl f4 f1 cindexl cHD f1 f1 f1 cIN f4 * * part cnode chypermap_of_list f0 cHD f1 c==> c==> c/\ cnormal_list f0 f3 c/\ cgood_list f0 c/\ cMEM f2 f3 c/\ cMEM f1 cparts f0 f2 c/\ cMEM cHD f1 f1 c< c+ cindexl f4 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 cindexl f4 f1 cHD f1 cEL c+ cindexl f4 f1 cindexl cHD f1 f1 f1 cIN f4 * * part cnode chypermap_of_list f0 cHD f1
+ ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- (((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))) = (T ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))))
T c==> cMEM f0 cparts f1 f2 c==> cMEM f2 f3 c==> cnormal_list f1 f3 c= c==> c/\ cnormal_list f1 f3 c/\ cMEM f2 f3 cMEM f0 cparts f1 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f0 c/\ c~ c= f0 cNIL ! c==> cMEM b0 f0 cMEM b0 f2 c==> cT c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f0 c/\ c~ c= f0 cNIL ! c==> cMEM b0 f0 cMEM b0 f2
- |- (((T ==> (((MEM x) r) = ((MEM x) r))) ==> ((((MEM x) p) ==> ((MEM x) r)) = (T ==> ((MEM x) r)))) = ((((MEM x) p) ==> ((MEM x) r)) = (T ==> ((MEM x) r))))
T c= c==> c==> cT c= cMEM f0 f1 cMEM f0 f1 c= c==> cMEM f0 f2 cMEM f0 f1 c==> cT cMEM f0 f1 c= c==> cMEM f0 f2 cMEM f0 f1 c==> cT cMEM f0 f1
- ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- (uniq p)
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 cuniq f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((\s. (((MEM x) s) ==> (((EL ((indexl x) s)) s) = x))) s)
T * / c==> cMEM f0 b0 c= cEL cindexl f0 b0 b0 f0 f1
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ |- (((!xs. ((~ (xs = NIL)) ==> ((MEM (HD xs)) xs))) ==> ((\xs. ((~ (xs = NIL)) ==> ((MEM (HD xs)) xs))) xs)) = ((\xs. ((~ (xs = NIL)) ==> ((MEM (HD xs)) xs))) xs))
T c= c==> ! c==> c~ c= b0 cNIL cMEM cHD b0 b0 * / c==> c~ c= b0 cNIL cMEM cHD b0 b0 f0 * / c==> c~ c= b0 cNIL cMEM cHD b0 b0 f0
+ |- (((!x. (!s. (((MEM x) s) ==> (((EL ((indexl x) s)) s) = x)))) ==> ((\x. (!s. (((MEM x) s) ==> (((EL ((indexl x) s)) s) = x)))) x)) = ((\x. (!s. (((MEM x) s) ==> (((EL ((indexl x) s)) s) = x)))) x))
T c= c==> ! ! c==> cMEM b0 b1 c= cEL cindexl b0 b1 b1 b0 * / ! c==> cMEM b0 b1 c= cEL cindexl b0 b1 b1 b0 f0 * / ! c==> cMEM b0 b1 c= cEL cindexl b0 b1 b1 b0 f0
+ T |- (T /\ (((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) = ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))))
T c==> cT c/\ cT c= c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0
- ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- (((~ (r = NIL)) ==> ((r = NIL) = F)) = ((r = NIL) = F))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c==> c~ c= f0 cNIL c= c= f0 cNIL cF c= c= f0 cNIL cF
- |- ((((indexl x) p) < (sizel p)) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x) = ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)))
T c==> c< cindexl f0 f1 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = (x IN ((node (hypermap_of_list L)) (HD p)))))
T c==> c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1
- |- (((((MEM _10131655) p) = ((MEM _10131655) p)) ==> ((((MEM _10131655) p) ==> (((MEM _10131655) r) = q')) ==> ((((MEM _10131655) p) ==> ((MEM _10131655) r)) = (((MEM _10131655) p) ==> q')))) = ((((MEM _10131655) p) ==> (((MEM _10131655) r) = q')) ==> ((((MEM _10131655) p) ==> ((MEM _10131655) r)) = (((MEM _10131655) p) ==> q'))))
T c= c==> c= cMEM f0 f1 cMEM f0 f1 c==> c==> cMEM f0 f1 c= cMEM f0 f2 f3 c= c==> cMEM f0 f1 cMEM f0 f2 c==> cMEM f0 f1 f3 c==> c==> cMEM f0 f1 c= cMEM f0 f2 f3 c= c==> cMEM f0 f1 cMEM f0 f2 c==> cMEM f0 f1 f3
- |- (((int_le (int_of_num (NUMERAL _0))) _10131650) ==> (_10131650 = _10131650))
T c==> cint_le cint_of_num cNUMERAL c_0 f0 c= f0 f0
- (x = (((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p))) |- ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)
T c==> c= f0 cPOWER * part cinverse * part cnode_map chypermap_of_list f1 cindexl f0 f2 cHD f2 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f1 cindexl f0 f2 cHD f2 f0
- |- (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
- (((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))), ((((indexl x) p) + (NUMERAL _0)) < (sizel p)) |- (((((indexl x) p) + (NUMERAL _0)) < (sizel p)) /\ ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p)))
T c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c/\ c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1
+ ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))), ((((indexl x) p) + (NUMERAL _0)) < (sizel p)) |- (((((indexl x) p) + (NUMERAL _0)) < (sizel p)) /\ (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)) = ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c==> c< c+ cindexl f2 f1 cNUMERAL c_0 csizel f1 c/\ c< c+ cindexl f2 f1 cNUMERAL c_0 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cNUMERAL c_0 f1
+ ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x) |- (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) IN ((node (hypermap_of_list L)) (HD p))) = (x IN ((node (hypermap_of_list L)) (HD p))))
T c==> c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 cindexl f1 f2 cHD f2 f1 c= cIN cPOWER * part cinverse * part cnode_map chypermap_of_list f0 cindexl f1 f2 cHD f2 * * part cnode chypermap_of_list f0 cHD f2 cIN f1 * * part cnode chypermap_of_list f0 cHD f2
- |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
+ |- (((!H. (!x. (!n. ((((POWER (inverse (node_map H))) n) x) IN ((node H) x))))) ==> ((\H. (!x. (!n. ((((POWER (inverse (node_map H))) n) x) IN ((node H) x))))) H)) = ((\H. (!x. (!n. ((((POWER (inverse (node_map H))) n) x) IN ((node H) x))))) H))
T c= c==> ! ! ! cIN cPOWER * part cinverse * part cnode_map b0 b2 b1 * * part cnode b0 b1 * / ! ! cIN cPOWER * part cinverse * part cnode_map b0 b2 b1 * * part cnode b0 b1 f0 * / ! ! cIN cPOWER * part cinverse * part cnode_map b0 b2 b1 * * part cnode b0 b1 f0
- ((MEM x) p) |- ((T ==> (((MEM x) r) = q')) ==> ((((MEM x) p) ==> ((MEM x) r)) = (T ==> q')))
T c==> cMEM f0 f1 c==> c==> cT c= cMEM f0 f2 f3 c= c==> cMEM f0 f1 cMEM f0 f2 c==> cT f3
+ |- ((\p'. (!q'. ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q')))))) p')
T * / ! c==> c= c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 b0 c==> c==> b0 c= cIN f1 * * part cnode chypermap_of_list f2 cHD f0 b1 c= c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 cIN f1 * * part cnode chypermap_of_list f2 cHD f0 c==> b0 b1 f3
- |- ((!x. t) = t)
T c= ! f0 f0
+ |- ((\q'. ((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p)) = q')) ==> ((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) = (p' ==> q'))))) q')
T * / c==> c= c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 f2 c==> c==> f2 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 b0 c= c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 c==> f2 b0 f4
- ((MEM _10131655) p) |- (((MEM _10131655) p) /\ (((MEM _10131655) r) = ((MEM _10131655) r)))
T c==> cMEM f0 f1 c/\ cMEM f0 f1 c= cMEM f0 f2 cMEM f0 f2
+ ((MEM x) p) |- ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> (x IN ((node (hypermap_of_list L)) (HD p)))))
T c==> cMEM f0 f1 c= c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 cIN f0 * * part cnode chypermap_of_list f2 cHD f1
- |- (((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) = ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))) ==> ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = q')) ==> ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) = (((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> q')))) = ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = q')) ==> ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) = (((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> q'))))
T c= c==> c= c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c==> c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 f4 c= c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 f4 c==> c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 f4 c= c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 f4
- |- ((\p'. (!q'. (((((indexl x) p) < (sizel p)) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x) = q')) ==> (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) = (p' ==> q')))))) p')
T * / ! c==> c= c< cindexl f0 f1 csizel f1 b0 c==> c==> b0 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 b1 c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c==> b0 b1 f3
+ |- ((\p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))))) p)
T * / c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM b0 cparts f0 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq b0 c/\ c~ c= b0 cNIL ! c==> cMEM b1 b0 cMEM b1 f2 f3
- |- ((((MEM _10131655) p) = p') ==> ((p' ==> (((MEM _10131655) r) = q')) ==> ((((MEM _10131655) p) ==> ((MEM _10131655) r)) = (p' ==> q'))))
T c==> c= cMEM f0 f1 f2 c==> c==> f2 c= cMEM f0 f3 f4 c= c==> cMEM f0 f1 cMEM f0 f3 c==> f2 f4
- |- ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) = (((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))))
T c= c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1
+ |- ((~ (xs = NIL)) ==> (((MEM (HD xs)) xs) = T))
T c==> c~ c= f0 cNIL c= cMEM cHD f0 f0 cT
+ |- ((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)) = ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))))
T c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0
+ |- (((!p'. (!q'. (((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) = p') ==> ((p' ==> (((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) = q')) ==> (((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) = p') ==> ((p' ==> (((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) = q')) ==> (((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) = p') ==> ((p' ==> (((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) = q')) ==> (((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM f3 cparts f0 f2 b0 c==> c==> b0 c= c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f3 c/\ c~ c= f3 cNIL ! c==> cMEM b2 f3 cMEM b2 f2 b1 c= c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM f3 cparts f0 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f3 c/\ c~ c= f3 cNIL ! c==> cMEM b2 f3 cMEM b2 f2 c==> b0 b1 * / ! c==> c= c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM f3 cparts f0 f2 b0 c==> c==> b0 c= c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f3 c/\ c~ c= f3 cNIL ! c==> cMEM b2 f3 cMEM b2 f2 b1 c= c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM f3 cparts f0 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f3 c/\ c~ c= f3 cNIL ! c==> cMEM b2 f3 cMEM b2 f2 c==> b0 b1 f4 * / ! c==> c= c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM f3 cparts f0 f2 b0 c==> c==> b0 c= c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f3 c/\ c~ c= f3 cNIL ! c==> cMEM b2 f3 cMEM b2 f2 b1 c= c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM f3 cparts f0 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f3 c/\ c~ c= f3 cNIL ! c==> cMEM b2 f3 cMEM b2 f2 c==> b0 b1 f4
+ |- (((!q'. ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p))) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q'))))) ==> ((\q'. ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p))) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q'))))) q')) = ((\q'. ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p))) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 f3 c==> c==> f3 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 b0 c= c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> f3 b0 * / c==> c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 f3 c==> c==> f3 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 b0 c= c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> f3 b0 f4 * / c==> c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 f3 c==> c==> f3 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 b0 c= c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> f3 b0 f4
+ ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- (((MEM (HD p)) p) = T)
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= cMEM cHD f1 f1 cT
+ |- (((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)) = ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = (((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))))) = (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = (((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)))))
T c= c==> c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c= c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c= c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1
+ |- (((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))))) ==> ((((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) = (((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))))) = ((((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) = (((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))))))
T c= c==> c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 c= c==> c==> c/\ cnormal_list f3 f4 c/\ cMEM f0 f4 cMEM f1 cparts f3 f0 c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 c= c==> c==> c/\ cnormal_list f3 f4 c/\ cMEM f0 f4 cMEM f1 cparts f3 f0 c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1
+ |- (((!p'. (!q'. ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)) = q')) ==> ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)) = q')) ==> ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)) = q')) ==> ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 b0 c==> c==> b0 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 b1 c= c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c==> b0 b1 * / ! c==> c= c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 b0 c==> c==> b0 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 b1 c= c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c==> b0 b1 f3 * / ! c==> c= c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 b0 c==> c==> b0 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 b1 c= c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c==> b0 b1 f3
+ |- (T = ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) IN ((node (hypermap_of_list L)) (HD p))))
T c= cT cIN cPOWER * part cinverse * part cnode_map chypermap_of_list f0 cindexl f1 f2 cHD f2 * * part cnode chypermap_of_list f0 cHD f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> (((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q'))))
T c==> c= c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 f3 c==> c==> f3 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 f4 c= c==> c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> f3 f4
+ ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- ((((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) = (((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))))
T c==> cMEM f0 cparts f1 f2 c==> cMEM f2 f3 c==> cnormal_list f1 f3 c= c==> c==> c/\ cnormal_list f1 f3 c/\ cMEM f2 f3 cMEM f0 cparts f1 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f0 c/\ c~ c= f0 cNIL ! c==> cMEM b0 f0 cMEM b0 f2 c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f4 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f1 cindexl f4 f0 cHD f0 cEL c+ cindexl f4 f0 cindexl cHD f0 f0 f0 cIN f4 * * part cnode chypermap_of_list f1 cHD f0 c==> c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f0 c/\ c~ c= f0 cNIL ! c==> cMEM b0 f0 cMEM b0 f2 c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f4 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f1 cindexl f4 f0 cHD f0 cEL c+ cindexl f4 f0 cindexl cHD f0 f0 f0 cIN f4 * * part cnode chypermap_of_list f1 cHD f0
+ |- (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)) = q')) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = ((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> q')))
T c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 f3 c= c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 f3
- ((MEM x) p) |- (T = ((MEM x) p))
T c==> cMEM f0 f1 c= cT cMEM f0 f1
+ ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- (((((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))) = ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))) ==> ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = q')) ==> ((((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) = (((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> q')))) = ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = q')) ==> ((((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) = (((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> q'))))
T c==> cMEM f0 cparts f1 f2 c==> cMEM f2 f3 c==> cnormal_list f1 f3 c= c==> c= c==> c/\ cnormal_list f1 f3 c/\ cMEM f2 f3 cMEM f0 cparts f1 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f0 c/\ c~ c= f0 cNIL ! c==> cMEM b0 f0 cMEM b0 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f0 c/\ c~ c= f0 cNIL ! c==> cMEM b0 f0 cMEM b0 f2 c==> c==> c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f0 c/\ c~ c= f0 cNIL ! c==> cMEM b0 f0 cMEM b0 f2 c= c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f4 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f1 cindexl f4 f0 cHD f0 cEL c+ cindexl f4 f0 cindexl cHD f0 f0 f0 cIN f4 * * part cnode chypermap_of_list f1 cHD f0 f5 c= c==> c==> c/\ cnormal_list f1 f3 c/\ cMEM f2 f3 cMEM f0 cparts f1 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f0 c/\ c~ c= f0 cNIL ! c==> cMEM b0 f0 cMEM b0 f2 c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f4 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f1 cindexl f4 f0 cHD f0 cEL c+ cindexl f4 f0 cindexl cHD f0 f0 f0 cIN f4 * * part cnode chypermap_of_list f1 cHD f0 c==> c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f0 c/\ c~ c= f0 cNIL ! c==> cMEM b0 f0 cMEM b0 f2 f5 c==> c==> c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f0 c/\ c~ c= f0 cNIL ! c==> cMEM b0 f0 cMEM b0 f2 c= c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f4 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f1 cindexl f4 f0 cHD f0 cEL c+ cindexl f4 f0 cindexl cHD f0 f0 f0 cIN f4 * * part cnode chypermap_of_list f1 cHD f0 f5 c= c==> c==> c/\ cnormal_list f1 f3 c/\ cMEM f2 f3 cMEM f0 cparts f1 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f0 c/\ c~ c= f0 cNIL ! c==> cMEM b0 f0 cMEM b0 f2 c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f4 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f1 cindexl f4 f0 cHD f0 cEL c+ cindexl f4 f0 cindexl cHD f0 f0 f0 cIN f4 * * part cnode chypermap_of_list f1 cHD f0 c==> c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f0 c/\ c~ c= f0 cNIL ! c==> cMEM b0 f0 cMEM b0 f2 f5
+ |- (((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)) = ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)))) ==> ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = (((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))))) = ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = (((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)))))
T c= c==> c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c= c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c= c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\xs. ((~ (xs = NIL)) ==> ((MEM (HD xs)) xs))) xs)
T * / c==> c~ c= b0 cNIL cMEM cHD b0 b0 f0
+ |- (((!r. (!p. (!k. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM x) p) /\ ((k + ((indexl x) p)) < (sizel p))))))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) k) x) = ((EL (k + ((indexl x) p))) p))))))) ==> ((\r. (!p. (!k. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM x) p) /\ ((k + ((indexl x) p)) < (sizel p))))))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) k) x) = ((EL (k + ((indexl x) p))) p))))))) r)) = ((\r. (!p. (!k. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM x) p) /\ ((k + ((indexl x) p)) < (sizel p))))))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) k) x) = ((EL (k + ((indexl x) p))) p))))))) r))
T c= c==> ! ! ! ! c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM b0 f1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b3 b1 c< c+ b2 cindexl b3 b1 csizel b1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 b2 b3 cEL c+ b2 cindexl b3 b1 b1 * / ! ! ! c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM b0 f1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b3 b1 c< c+ b2 cindexl b3 b1 csizel b1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 b2 b3 cEL c+ b2 cindexl b3 b1 b1 f2 * / ! ! ! c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM b0 f1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b3 b1 c< c+ b2 cindexl b3 b1 csizel b1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 b2 b3 cEL c+ b2 cindexl b3 b1 b1 f2
+ ((normal_list L) N) |- (((normal_list L) N) = T)
T c==> cnormal_list f0 f1 c= cnormal_list f0 f1 cT
+ ((MEM x) p) |- (((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))))
T c==> cMEM f0 f1 c==> c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f2 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 cIN f0 * * part cnode chypermap_of_list f3 cHD f1
+ ((MEM x) p) |- ((((((indexl x) p) < (sizel p)) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p)) = ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x))) ==> (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p))) = ((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)))) = (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p))) = ((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x))))
T c==> cMEM f0 f1 c= c==> c==> c< cindexl f0 f1 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0
+ |- ((\p'. (!q'. (((((indexl x) p) < (sizel p)) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p)) = q')) ==> (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p))) = (p' ==> q')))))) p')
T * / ! c==> c= c< cindexl f0 f1 csizel f1 b0 c==> c==> b0 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 b1 c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 c==> b0 b1 f3
+ ((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) |- (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) /\ ((x IN ((node (hypermap_of_list L)) (HD p))) = (x IN ((node (hypermap_of_list L)) (HD p)))))
T c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 c/\ c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 c= cIN f1 * * part cnode chypermap_of_list f2 cHD f0 cIN f1 * * part cnode chypermap_of_list f2 cHD f0
- ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- (~ (r = NIL))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c~ c= f0 cNIL
- (((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))), ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) |- ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))
T c==> c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- ((uniq r) = T)
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= cuniq f0 cT
- |- (((!q'. (((((indexl x) p) < (sizel p)) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x) = q')) ==> (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) = (p' ==> q'))))) ==> ((\q'. (((((indexl x) p) < (sizel p)) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x) = q')) ==> (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) = (p' ==> q'))))) q')) = ((\q'. (((((indexl x) p) < (sizel p)) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x) = q')) ==> (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c< cindexl f0 f1 csizel f1 f2 c==> c==> f2 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f0 f1 cHD f1 f0 b0 c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f0 f1 cHD f1 f0 c==> f2 b0 * / c==> c= c< cindexl f0 f1 csizel f1 f2 c==> c==> f2 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f0 f1 cHD f1 f0 b0 c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f0 f1 cHD f1 f0 c==> f2 b0 f4 * / c==> c= c< cindexl f0 f1 csizel f1 f2 c==> c==> f2 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f0 f1 cHD f1 f0 b0 c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f0 f1 cHD f1 f0 c==> f2 b0 f4
+ ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0
+ |- ((((((indexl x) p) < (sizel p)) = (((indexl x) p) < (sizel p))) ==> (((((indexl x) p) < (sizel p)) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p)) = q')) ==> (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p))) = ((((indexl x) p) < (sizel p)) ==> q')))) = (((((indexl x) p) < (sizel p)) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p)) = q')) ==> (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p))) = ((((indexl x) p) < (sizel p)) ==> q'))))
T c= c==> c= c< cindexl f0 f1 csizel f1 c< cindexl f0 f1 csizel f1 c==> c==> c< cindexl f0 f1 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 f3 c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 c==> c< cindexl f0 f1 csizel f1 f3 c==> c==> c< cindexl f0 f1 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 f3 c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 c==> c< cindexl f0 f1 csizel f1 f3
- |- ((((MEM _10131655) p) ==> ((MEM _10131655) r)) = (((MEM _10131655) p) ==> ((MEM _10131655) r)))
T c= c==> cMEM f0 f1 cMEM f0 f2 c==> cMEM f0 f1 cMEM f0 f2
+ |- (((T ==> (((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) = ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))))) ==> (((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))) = (T ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))))) = (((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))) = (T ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))))))
T c= c==> c==> cT c= c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c==> c/\ cnormal_list f2 f3 c/\ cMEM f0 f3 cMEM f1 cparts f2 f0 c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c==> cT c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c==> c/\ cnormal_list f2 f3 c/\ cMEM f0 f3 cMEM f1 cparts f2 f0 c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c==> cT c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0
- |- (((!p'. (!q'. (((((indexl x) p) < (sizel p)) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x) = q')) ==> (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((indexl x) p) < (sizel p)) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x) = q')) ==> (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((indexl x) p) < (sizel p)) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x) = q')) ==> (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c< cindexl f0 f1 csizel f1 b0 c==> c==> b0 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 b1 c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c==> b0 b1 * / ! c==> c= c< cindexl f0 f1 csizel f1 b0 c==> c==> b0 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 b1 c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c==> b0 b1 f3 * / ! c==> c= c< cindexl f0 f1 csizel f1 b0 c==> c==> b0 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 b1 c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c==> b0 b1 f3
- T |- (T = T)
T c==> cT c= cT cT
+ |- (((!k. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM x) p) /\ ((k + ((indexl x) p)) < (sizel p))))))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) k) x) = ((EL (k + ((indexl x) p))) p))))) ==> ((\k. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM x) p) /\ ((k + ((indexl x) p)) < (sizel p))))))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) k) x) = ((EL (k + ((indexl x) p))) p))))) ((indexl x) p))) = ((\k. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM x) p) /\ ((k + ((indexl x) p)) < (sizel p))))))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) k) x) = ((EL (k + ((indexl x) p))) p))))) ((indexl x) p)))
T c= c==> ! ! c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 c/\ cMEM b1 f3 c< c+ b0 cindexl b1 f3 csizel f3 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 b0 b1 cEL c+ b0 cindexl b1 f3 f3 * / ! c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 c/\ cMEM b1 f3 c< c+ b0 cindexl b1 f3 csizel f3 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 b0 b1 cEL c+ b0 cindexl b1 f3 f3 cindexl f4 f3 * / ! c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 c/\ cMEM b1 f3 c< c+ b0 cindexl b1 f3 csizel f3 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 b0 b1 cEL c+ b0 cindexl b1 f3 f3 cindexl f4 f3
+ |- ((\x'. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM x') p) /\ ((((indexl x) p) + ((indexl x') p)) < (sizel p))))))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) x') = ((EL (((indexl x) p) + ((indexl x') p))) p)))) (HD p))
T * / c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 c/\ cMEM b0 f3 c< c+ cindexl f4 f3 cindexl b0 f3 csizel f3 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 cindexl f4 f3 b0 cEL c+ cindexl f4 f3 cindexl b0 f3 f3 cHD f3
+ |- ((((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))))))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (x IN ((node (hypermap_of_list L)) (HD p))))
T c= c==> c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 c/\ cMEM cHD f3 f3 c< c+ cindexl f4 f3 cindexl cHD f3 f3 csizel f3 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 cindexl f4 f3 cHD f3 cEL c+ cindexl f4 f3 cindexl cHD f3 f3 f3 cIN f4 * * part cnode chypermap_of_list f0 cHD f3 cIN f4 * * part cnode chypermap_of_list f0 cHD f3
+ ((MEM x) p) |- ((((indexl x) p) < (sizel p)) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p)) = ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)))
T c==> cMEM f0 f1 c==> c< cindexl f0 f1 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((\q'. ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)) = q')) ==> ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = (p' ==> q'))))) q')
T * / c==> c= c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 f2 c==> c==> f2 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 b0 c= c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c==> f2 b0 f4
+ ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- (((~ (p = NIL)) ==> (((indexl (HD p)) p) = (NUMERAL _0))) = (((indexl (HD p)) p) = (NUMERAL _0)))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c==> c~ c= f1 cNIL c= cindexl cHD f1 f1 cNUMERAL c_0 c= cindexl cHD f1 f1 cNUMERAL c_0
+ |- (((!N. (!r. (!p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))))))) ==> ((\N. (!r. (!p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))))))) N)) = ((\N. (!r. (!p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))))))) N))
T c= c==> ! ! ! c==> c/\ cnormal_list f0 b0 c/\ cMEM b1 b0 cMEM b2 cparts f0 b1 c/\ cuniq b1 c/\ c~ c= b1 cNIL c/\ cuniq b2 c/\ c~ c= b2 cNIL ! c==> cMEM b3 b2 cMEM b3 b1 * / ! ! c==> c/\ cnormal_list f0 b0 c/\ cMEM b1 b0 cMEM b2 cparts f0 b1 c/\ cuniq b1 c/\ c~ c= b1 cNIL c/\ cuniq b2 c/\ c~ c= b2 cNIL ! c==> cMEM b3 b2 cMEM b3 b1 f1 * / ! ! c==> c/\ cnormal_list f0 b0 c/\ cMEM b1 b0 cMEM b2 cparts f0 b1 c/\ cuniq b1 c/\ c~ c= b1 cNIL c/\ cuniq b2 c/\ c~ c= b2 cNIL ! c==> cMEM b3 b2 cMEM b3 b1 f1
- ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- (~ (NIL = r))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c~ c= cNIL f0
+ ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))), ((MEM x) p) |- (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c==> cMEM f2 f1 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1
+ |- (((!p'. (!q'. (((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> (((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> (((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> (((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 b0 c==> c==> b0 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 b1 c= c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> b0 b1 * / ! c==> c= c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 b0 c==> c==> b0 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 b1 c= c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> b0 b1 f3 * / ! c==> c= c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 b0 c==> c==> b0 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 b1 c= c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> b0 b1 f3
- |- ((((((indexl x) p) < (sizel p)) = (((indexl x) p) < (sizel p))) ==> (((((indexl x) p) < (sizel p)) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x) = q')) ==> (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) = ((((indexl x) p) < (sizel p)) ==> q')))) = (((((indexl x) p) < (sizel p)) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x) = q')) ==> (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) = ((((indexl x) p) < (sizel p)) ==> q'))))
T c= c==> c= c< cindexl f0 f1 csizel f1 c< cindexl f0 f1 csizel f1 c==> c==> c< cindexl f0 f1 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 f3 c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c==> c< cindexl f0 f1 csizel f1 f3 c==> c==> c< cindexl f0 f1 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 f3 c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c==> c< cindexl f0 f1 csizel f1 f3
+ |- ((((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) = (((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p)))) ==> (((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> (((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = ((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) ==> q')))) = (((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> (((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = ((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) ==> q'))))
T c= c==> c= c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 c==> c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 f3 c= c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 f3 c==> c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 f3 c= c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 f3
- |- (((real_ge x) y) = ((real_le y) x))
T c= creal_ge f0 f1 creal_le f1 f0
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- ((((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = (x IN ((node (hypermap_of_list L)) (HD p))))) ==> (((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = ((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))))) = (((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = ((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))))
T c= c==> c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c= c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c= c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1
+ |- (((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p)) = ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))))
T c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1
- ((MEM x) s) |- (((MEM x) s) /\ (((EL ((indexl x) s)) s) = x))
T c==> cMEM f0 f1 c/\ cMEM f0 f1 c= cEL cindexl f0 f1 f1 f0
+ |- ((((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = (x IN ((node (hypermap_of_list L)) (HD p))))) ==> (((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))))) = (((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))))
T c= c==> c==> c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c= c==> c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c= c==> c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1
- |- ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
- ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- (!x. (((MEM x) p) ==> ((MEM x) r)))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 ! c==> cMEM b0 f1 cMEM b0 f0
+ |- ((\L. (!N. (!r. (!p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))))))) L)
T * / ! ! ! c==> c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 cMEM b3 cparts b0 b2 c/\ cuniq b2 c/\ c~ c= b2 cNIL c/\ cuniq b3 c/\ c~ c= b3 cNIL ! c==> cMEM b4 b3 cMEM b4 b2 f0
+ ((MEM x) p) |- ((((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = ((((indexl x) p) < (sizel p)) /\ (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x) ==> (x IN ((node (hypermap_of_list L)) (HD p))))))
T c==> cMEM f0 f1 c= c==> c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c/\ c< cindexl f0 f1 csizel f1 c==> c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 cIN f0 * * part cnode chypermap_of_list f2 cHD f1
- |- (~ (~ (((int_le (int_of_num (NUMERAL _0))) _10131650) ==> (_10131650 = _10131650))))
T c~ c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c= f0 f0
+ |- ((\p'. (!q'. (((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) = p') ==> ((p' ==> (((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) = q')) ==> (((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM f3 cparts f0 f2 b0 c==> c==> b0 c= c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f3 c/\ c~ c= f3 cNIL ! c==> cMEM b2 f3 cMEM b2 f2 b1 c= c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM f3 cparts f0 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f3 c/\ c~ c= f3 cNIL ! c==> cMEM b2 f3 cMEM b2 f2 c==> b0 b1 f4
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- ((((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = (((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)))) ==> (((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> (((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> q')))) = (((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> (((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> q'))))
T c= c==> c= c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c==> c==> c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 f3 c= c==> c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 f3 c==> c==> c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 f3 c= c==> c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 f3
- (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10131650)) /\ (((real_le ((real_add (real_of_int _10131650)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10131650)) \/ ((real_le ((real_add (real_of_int _10131650)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10131650)))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10131650)) /\ (((real_le ((real_add (real_of_int _10131650)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10131650)) \/ ((real_le ((real_add (real_of_int _10131650)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10131650)))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF
- |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _10131650)) /\ (((real_le ((real_add (real_of_int _10131650)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10131650)) \/ ((real_le ((real_add (real_of_int _10131650)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10131650)))) = (~ (((int_le (int_of_num (NUMERAL _0))) _10131650) ==> (_10131650 = _10131650))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c= f0 f0
+ |- (((!p'. (!q'. (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)) = q')) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)) = q')) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)) = q')) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 b0 c==> c==> b0 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 b1 c= c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 c==> b0 b1 * / ! c==> c= c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 b0 c==> c==> b0 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 b1 c= c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 c==> b0 b1 f3 * / ! c==> c= c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 b0 c==> c==> b0 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 b1 c= c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 c==> b0 b1 f3
+ |- (((!p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))))) ==> ((\p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))))) p)) = ((\p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))))) p))
T c= c==> ! c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM b0 cparts f0 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq b0 c/\ c~ c= b0 cNIL ! c==> cMEM b1 b0 cMEM b1 f2 * / c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM b0 cparts f0 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq b0 c/\ c~ c= b0 cNIL ! c==> cMEM b1 b0 cMEM b1 f2 f3 * / c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM b0 cparts f0 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq b0 c/\ c~ c= b0 cNIL ! c==> cMEM b1 b0 cMEM b1 f2 f3
- ((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)), (((indexl x) p) < (sizel p)) |- ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)
T c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0
+ ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 c==> c==> c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1
- ((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)), (((indexl x) p) < (sizel p)) |- ((((indexl x) p) < (sizel p)) /\ ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x))
T c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c==> c< cindexl f0 f1 csizel f1 c/\ c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0
+ ((MEM x) p) |- (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p))) = ((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)))
T c==> cMEM f0 f1 c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!p'. (!q'. (((((indexl x) p) < (sizel p)) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p)) = q')) ==> (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((indexl x) p) < (sizel p)) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p)) = q')) ==> (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((indexl x) p) < (sizel p)) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p)) = q')) ==> (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c< cindexl f0 f1 csizel f1 b0 c==> c==> b0 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 b1 c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 c==> b0 b1 * / ! c==> c= c< cindexl f0 f1 csizel f1 b0 c==> c==> b0 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 b1 c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 c==> b0 b1 f3 * / ! c==> c= c< cindexl f0 f1 csizel f1 b0 c==> c==> b0 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 b1 c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 c==> b0 b1 f3
+ |- ((\s. ((~ (s = NIL)) ==> (((indexl (HD s)) s) = (NUMERAL _0)))) s)
T * / c==> c~ c= b0 cNIL c= cindexl cHD b0 b0 cNUMERAL c_0 f0
+ |- (((!q'. ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q'))))) ==> ((\q'. ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q'))))) q')) = ((\q'. ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 f3 c==> c==> f3 c= cIN f1 * * part cnode chypermap_of_list f2 cHD f0 b0 c= c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 cIN f1 * * part cnode chypermap_of_list f2 cHD f0 c==> f3 b0 * / c==> c= c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 f3 c==> c==> f3 c= cIN f1 * * part cnode chypermap_of_list f2 cHD f0 b0 c= c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 cIN f1 * * part cnode chypermap_of_list f2 cHD f0 c==> f3 b0 f4 * / c==> c= c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 f3 c==> c==> f3 c= cIN f1 * * part cnode chypermap_of_list f2 cHD f0 b0 c= c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 cIN f1 * * part cnode chypermap_of_list f2 cHD f0 c==> f3 b0 f4
- |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((\N. (!r. (!p. (!k. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM x) p) /\ ((k + ((indexl x) p)) < (sizel p))))))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) k) x) = ((EL (k + ((indexl x) p))) p)))))))) N)
T * / ! ! ! ! c==> c/\ cnormal_list f0 b0 c/\ cgood_list f0 c/\ cMEM b1 b0 c/\ cMEM b2 cparts f0 b1 c/\ cMEM b4 b2 c< c+ b3 cindexl b4 b2 csizel b2 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 b3 b4 cEL c+ b3 cindexl b4 b2 b2 f1
- |- ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> q')))
T c==> c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 f3 c= c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 f3
+ |- ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)) = ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = ((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))))) = (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = ((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)))))
T c= c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 c= c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 c= c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0
+ ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = (((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c==> c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 c==> c< c+ cindexl f2 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cNUMERAL c_0 f1
- |- ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) n)
T * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
+ ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- (((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)) = ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p)))) ==> ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = (((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))))) = ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = (((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p)))))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c==> c==> c< c+ cindexl f2 f1 cNUMERAL c_0 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cNUMERAL c_0 f1 c= c==> c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 c==> c< c+ cindexl f2 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cNUMERAL c_0 f1 c= c==> c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 c==> c< c+ cindexl f2 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cNUMERAL c_0 f1
- (NIL = r) |- (r = NIL)
T c==> c= cNIL f0 c= f0 cNIL
+ (~ (xs = NIL)) |- ((~ (xs = NIL)) /\ (((MEM (HD xs)) xs) = T))
T c==> c~ c= f0 cNIL c/\ c~ c= f0 cNIL c= cMEM cHD f0 f0 cT
+ (good_list L), (((MEM p) ((parts L) r)) /\ ((MEM x) p)), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- (x IN ((node (hypermap_of_list L)) (HD p)))
T c==> cgood_list f0 c==> c/\ cMEM f1 cparts f0 f2 cMEM f3 f1 c==> cMEM f1 cparts f0 f2 c==> cMEM f2 f4 c==> cnormal_list f0 f4 cIN f3 * * part cnode chypermap_of_list f0 cHD f1
- |- ((((((indexl x) p) < (sizel p)) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x) = ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x))) ==> (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) = ((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)))) = (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) = ((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x))))
T c= c==> c==> c< cindexl f0 f1 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0
+ |- (((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> (((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = ((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) ==> q')))
T c==> c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 f3 c= c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 f3
- |- (((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))))) ==> ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) = (((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))))) = ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) = (((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))))))
T c= c==> c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 c= c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 c= c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1
+ |- ((!N. (!r. (!p. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM x) p))))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))))))) = T)
T c= ! ! ! ! c==> c/\ cnormal_list f0 b0 c/\ cgood_list f0 c/\ cMEM b1 b0 c/\ cMEM b2 cparts f0 b1 cMEM b3 b2 cIN b3 * * part cnode chypermap_of_list f0 cHD b2 cT
+ ((MEM x) p) |- ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> q')))
T c==> cMEM f0 f1 c==> c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 f3 c= c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 f3
+ |- (((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> (((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q'))))
T c==> c= c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 f3 c==> c==> f3 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 f4 c= c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> f3 f4
+ |- ((\p'. (!q'. (((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> (((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q')))))) p')
T * / ! c==> c= c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 b0 c==> c==> b0 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 b1 c= c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> b0 b1 f3
+ ((MEM x) p) |- (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> (x IN ((node (hypermap_of_list L)) (HD p))))
T c==> cMEM f0 f1 c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 cIN f0 * * part cnode chypermap_of_list f2 cHD f1
- ((MEM x) p) |- (((((MEM x) p) = T) ==> ((T ==> (((MEM x) r) = q')) ==> ((((MEM x) p) ==> ((MEM x) r)) = (T ==> q')))) = ((T ==> (((MEM x) r) = q')) ==> ((((MEM x) p) ==> ((MEM x) r)) = (T ==> q'))))
T c==> cMEM f0 f1 c= c==> c= cMEM f0 f1 cT c==> c==> cT c= cMEM f0 f2 f3 c= c==> cMEM f0 f1 cMEM f0 f2 c==> cT f3 c==> c==> cT c= cMEM f0 f2 f3 c= c==> cMEM f0 f1 cMEM f0 f2 c==> cT f3
- |- (((!q'. ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q'))))) ==> ((\q'. ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q'))))) q')) = ((\q'. ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 f3 c==> c==> f3 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 b0 c= c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> f3 b0 * / c==> c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 f3 c==> c==> f3 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 b0 c= c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> f3 b0 f4 * / c==> c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 f3 c==> c==> f3 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 b0 c= c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> f3 b0 f4
+ |- ((\p. (!k. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM x) p) /\ ((k + ((indexl x) p)) < (sizel p))))))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) k) x) = ((EL (k + ((indexl x) p))) p)))))) p)
T * / ! ! c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM b0 cparts f0 f2 c/\ cMEM b2 b0 c< c+ b1 cindexl b2 b0 csizel b0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 b1 b2 cEL c+ b1 cindexl b2 b0 b0 f3
+ |- (((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = (x IN ((node (hypermap_of_list L)) (HD p))))) ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))))) = ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))))
T c= c==> c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 c= cIN f1 * * part cnode chypermap_of_list f2 cHD f0 cIN f1 * * part cnode chypermap_of_list f2 cHD f0 c= c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 cIN f1 * * part cnode chypermap_of_list f2 cHD f0 c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 cIN f1 * * part cnode chypermap_of_list f2 cHD f0 c= c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 cIN f1 * * part cnode chypermap_of_list f2 cHD f0 c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 cIN f1 * * part cnode chypermap_of_list f2 cHD f0
- |- ((x = x) = T)
T c= c= f0 f0 cT
+ ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))), ((MEM x) p) |- (((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) /\ (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c==> cMEM f2 f1 c/\ c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1
+ ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- (((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c==> c==> c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1
- |- (((!q'. ((((MEM _10131655) p) = p') ==> ((p' ==> (((MEM _10131655) r) = q')) ==> ((((MEM _10131655) p) ==> ((MEM _10131655) r)) = (p' ==> q'))))) ==> ((\q'. ((((MEM _10131655) p) = p') ==> ((p' ==> (((MEM _10131655) r) = q')) ==> ((((MEM _10131655) p) ==> ((MEM _10131655) r)) = (p' ==> q'))))) q')) = ((\q'. ((((MEM _10131655) p) = p') ==> ((p' ==> (((MEM _10131655) r) = q')) ==> ((((MEM _10131655) p) ==> ((MEM _10131655) r)) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cMEM f0 f1 f2 c==> c==> f2 c= cMEM f0 f3 b0 c= c==> cMEM f0 f1 cMEM f0 f3 c==> f2 b0 * / c==> c= cMEM f0 f1 f2 c==> c==> f2 c= cMEM f0 f3 b0 c= c==> cMEM f0 f1 cMEM f0 f3 c==> f2 b0 f4 * / c==> c= cMEM f0 f1 f2 c==> c==> f2 c= cMEM f0 f3 b0 c= c==> cMEM f0 f1 cMEM f0 f3 c==> f2 b0 f4
- ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- ((r = NIL) = F)
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c= f0 cNIL cF
+ ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) = ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)) = q')) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = (((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> q')))) = ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)) = q')) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = (((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> q'))))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c==> c= c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c==> c==> c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 f4 c= c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 c==> c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 f4 c==> c==> c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 f4 c= c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 c==> c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 f4
- |- ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = q')) ==> ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) = (((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> q')))
T c==> c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 f4 c= c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 f4
+ ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- (((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) = ((((indexl x) p) + (NUMERAL _0)) < (sizel p))) ==> ((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)) = q')) ==> ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = (((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> q')))) = ((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)) = q')) ==> ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = (((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> q'))))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c==> c= c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c< c+ cindexl f2 f1 cNUMERAL c_0 csizel f1 c==> c==> c< c+ cindexl f2 f1 cNUMERAL c_0 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 f4 c= c==> c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 c==> c< c+ cindexl f2 f1 cNUMERAL c_0 csizel f1 f4 c==> c==> c< c+ cindexl f2 f1 cNUMERAL c_0 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 f4 c= c==> c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 c==> c< c+ cindexl f2 f1 cNUMERAL c_0 csizel f1 f4
+ |- (((!q'. (((((indexl x) p) < (sizel p)) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p)) = q')) ==> (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p))) = (p' ==> q'))))) ==> ((\q'. (((((indexl x) p) < (sizel p)) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p)) = q')) ==> (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p))) = (p' ==> q'))))) q')) = ((\q'. (((((indexl x) p) < (sizel p)) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p)) = q')) ==> (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c< cindexl f0 f1 csizel f1 f2 c==> c==> f2 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 b0 c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 c==> f2 b0 * / c==> c= c< cindexl f0 f1 csizel f1 f2 c==> c==> f2 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 b0 c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 c==> f2 b0 f4 * / c==> c= c< cindexl f0 f1 csizel f1 f2 c==> c==> f2 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 b0 c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 c==> f2 b0 f4
+ (((indexl x) p) < (sizel p)), ((MEM x) p) |- ((((indexl x) p) < (sizel p)) /\ (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p)) = ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)))
T c==> c< cindexl f0 f1 csizel f1 c==> cMEM f0 f1 c/\ c< cindexl f0 f1 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0
+ ((MEM x) p) |- ((((((indexl x) p) < (sizel p)) /\ (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) ==> (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) = (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> (x IN ((node (hypermap_of_list L)) (HD p)))))
T c==> cMEM f0 f1 c= c==> c/\ c< cindexl f0 f1 csizel f1 c==> c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 cIN f0 * * part cnode chypermap_of_list f2 cHD f1
- |- (((!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) ==> ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) n)) = ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) n))
T c= c==> ! cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((MEM _10131655) p) ==> (((MEM _10131655) r) = ((MEM _10131655) r)))
T c==> cMEM f0 f1 c= cMEM f0 f2 cMEM f0 f2
- ((((indexl x) p) + (NUMERAL _0)) < (sizel p)) |- (((((indexl x) p) + (NUMERAL _0)) < (sizel p)) = T)
T c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 cT
- ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))), ((MEM x) p) |- ((MEM x) r)
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c==> cMEM f2 f1 cMEM f2 f0
+ |- ((((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))) = p') ==> ((p' ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = q')) ==> ((((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) = (p' ==> q'))))
T c==> c= c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM f3 cparts f0 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f3 c/\ c~ c= f3 cNIL ! c==> cMEM b0 f3 cMEM b0 f2 f4 c==> c==> f4 c= c==> c==> c/\ cMEM cHD f3 f3 c< c+ cindexl f5 f3 cindexl cHD f3 f3 csizel f3 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 cindexl f5 f3 cHD f3 cEL c+ cindexl f5 f3 cindexl cHD f3 f3 f3 cIN f5 * * part cnode chypermap_of_list f0 cHD f3 f6 c= c==> c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM f3 cparts f0 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f3 c/\ c~ c= f3 cNIL ! c==> cMEM b0 f3 cMEM b0 f2 c==> c==> c/\ cMEM cHD f3 f3 c< c+ cindexl f5 f3 cindexl cHD f3 f3 csizel f3 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 cindexl f5 f3 cHD f3 cEL c+ cindexl f5 f3 cindexl cHD f3 f3 f3 cIN f5 * * part cnode chypermap_of_list f0 cHD f3 c==> f4 f6
- |- (((((indexl x) p) < (sizel p)) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x) = q')) ==> (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) = ((((indexl x) p) < (sizel p)) ==> q')))
T c==> c==> c< cindexl f0 f1 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 f3 c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c==> c< cindexl f0 f1 csizel f1 f3
- (((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))), ((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) |- ((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) /\ ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)))
T c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 c/\ c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0
+ (good_list L), ((MEM x) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- (((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))))))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))
T c==> cgood_list f0 c==> cMEM f1 f2 c==> cMEM f2 cparts f0 f3 c==> cMEM f3 f4 c==> cnormal_list f0 f4 c==> c==> c/\ cnormal_list f0 f4 c/\ cgood_list f0 c/\ cMEM f3 f4 c/\ cMEM f2 cparts f0 f3 c/\ cMEM cHD f2 f2 c< c+ cindexl f1 f2 cindexl cHD f2 f2 csizel f2 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 cindexl f1 f2 cHD f2 cEL c+ cindexl f1 f2 cindexl cHD f2 f2 f2 cIN f1 * * part cnode chypermap_of_list f0 cHD f2
+ |- (((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = ((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)))) ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> q')))) = ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> q'))))
T c= c==> c= c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 c==> c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 c= cIN f1 * * part cnode chypermap_of_list f2 cHD f0 f3 c= c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 cIN f1 * * part cnode chypermap_of_list f2 cHD f0 c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 f3 c==> c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 c= cIN f1 * * part cnode chypermap_of_list f2 cHD f0 f3 c= c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 cIN f1 * * part cnode chypermap_of_list f2 cHD f0 c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 f3
+ |- (((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p)) = ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p)))) ==> ((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) = (((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))))) = ((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) = (((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p)))))
T c= c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 c= c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 c= c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1
+ |- ((\q'. (((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> (((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q'))))) q')
T * / c==> c= c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 f3 c==> c==> f3 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 b0 c= c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> f3 b0 f4
+ |- (((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1
+ |- ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)) = q')) ==> ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = (p' ==> q'))))
T c==> c= c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 f2 c==> c==> f2 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 f4 c= c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c==> f2 f4
+ |- (((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) = ((((indexl x) p) + (NUMERAL _0)) < (sizel p))) ==> ((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p)) = q')) ==> ((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) = (((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> q')))) = ((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p)) = q')) ==> ((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) = (((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> q'))))
T c= c==> c= c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 f3 c= c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 f3 c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 f3 c= c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 f3
+ |- (((!L. (!N. (!r. (!p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))))))) ==> ((\L. (!N. (!r. (!p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))))))) L)) = ((\L. (!N. (!r. (!p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))))))) L))
T c= c==> ! ! ! ! c==> c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 cMEM b3 cparts b0 b2 c/\ cuniq b2 c/\ c~ c= b2 cNIL c/\ cuniq b3 c/\ c~ c= b3 cNIL ! c==> cMEM b4 b3 cMEM b4 b2 * / ! ! ! c==> c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 cMEM b3 cparts b0 b2 c/\ cuniq b2 c/\ c~ c= b2 cNIL c/\ cuniq b3 c/\ c~ c= b3 cNIL ! c==> cMEM b4 b3 cMEM b4 b2 f0 * / ! ! ! c==> c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 cMEM b3 cparts b0 b2 c/\ cuniq b2 c/\ c~ c= b2 cNIL c/\ cuniq b3 c/\ c~ c= b3 cNIL ! c==> cMEM b4 b3 cMEM b4 b2 f0
+ |- ((\q'. ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p))) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q'))))) q')
T * / c==> c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 f3 c==> c==> f3 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 b0 c= c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> f3 b0 f4
+ |- ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = ((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))))
T c= c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1
+ ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- ((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)) = q')) ==> ((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = (((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> q')))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c==> c==> c< c+ cindexl f2 f1 cNUMERAL c_0 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 f4 c= c==> c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 c==> c< c+ cindexl f2 f1 cNUMERAL c_0 csizel f1 f4
+ |- ((!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM x) p))))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) = T)
T c= ! c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 cMEM b0 f3 cIN b0 * * part cnode chypermap_of_list f0 cHD f3 cT
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- (((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> (((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = ((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) ==> q')))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c==> c==> c==> c< c+ cindexl f2 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cNUMERAL c_0 f1 c= cIN f2 * * part cnode chypermap_of_list f3 cHD f1 f4 c= c==> c==> c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 c==> c==> c< c+ cindexl f2 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cNUMERAL c_0 f1 f4
+ ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- (((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = ((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c==> c==> c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 c==> c==> c< c+ cindexl f2 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cNUMERAL c_0 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1
+ |- ((\H. (!x. (!n. ((((POWER (inverse (node_map H))) n) x) IN ((node H) x))))) H)
T * / ! ! cIN cPOWER * part cinverse * part cnode_map b0 b2 b1 * * part cnode b0 b1 f0
+ |- ((\s. ((((indexl x) s) < (sizel s)) = ((MEM x) s))) s)
T * / c= c< cindexl f0 b0 csizel b0 cMEM f0 b0 f1
+ ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- (((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) /\ ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c/\ c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1
+ |- ((\q'. ((((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))) = p') ==> ((p' ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = q')) ==> ((((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) = (p' ==> q'))))) q')
T * / c==> c= c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM f3 cparts f0 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f3 c/\ c~ c= f3 cNIL ! c==> cMEM b1 f3 cMEM b1 f2 f4 c==> c==> f4 c= c==> c==> c/\ cMEM cHD f3 f3 c< c+ cindexl f5 f3 cindexl cHD f3 f3 csizel f3 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 cindexl f5 f3 cHD f3 cEL c+ cindexl f5 f3 cindexl cHD f3 f3 f3 cIN f5 * * part cnode chypermap_of_list f0 cHD f3 b0 c= c==> c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM f3 cparts f0 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f3 c/\ c~ c= f3 cNIL ! c==> cMEM b1 f3 cMEM b1 f2 c==> c==> c/\ cMEM cHD f3 f3 c< c+ cindexl f5 f3 cindexl cHD f3 f3 csizel f3 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 cindexl f5 f3 cHD f3 cEL c+ cindexl f5 f3 cindexl cHD f3 f3 f3 cIN f5 * * part cnode chypermap_of_list f0 cHD f3 c==> f4 b0 f6
- |- ((\q'. ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q'))))) q')
T * / c==> c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 f3 c==> c==> f3 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 b0 c= c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> f3 b0 f4
+ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM x) p)))), ((normal_list L) N) |- (x IN ((node (hypermap_of_list L)) (HD p)))
T c==> c/\ cgood_list f0 c/\ cMEM f1 f2 c/\ cMEM f3 cparts f0 f1 cMEM f4 f3 c==> cnormal_list f0 f2 cIN f4 * * part cnode chypermap_of_list f0 cHD f3
+ |- ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) = (((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)) = q')) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = ((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> q')))) = (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)) = q')) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = ((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> q'))))
T c= c==> c= c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 f3 c= c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 f3 c==> c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 f3 c= c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 f3
+ |- ((\q'. (((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> (((((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q'))))) q')
T * / c==> c= c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 f3 c==> c==> f3 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 b0 c= c==> c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> f3 b0 f4
+ ((MEM x) p) |- ((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))
T c==> cMEM f0 f1 c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1
+ (((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) |- ((((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))) /\ ((x IN ((node (hypermap_of_list L)) (HD p))) = (x IN ((node (hypermap_of_list L)) (HD p)))))
T c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 c/\ c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1
+ |- ((((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) = (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))))
T c= c==> c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM f3 cparts f0 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f3 c/\ c~ c= f3 cNIL ! c==> cMEM b0 f3 cMEM b0 f2 c==> c==> c/\ cMEM cHD f3 f3 c< c+ cindexl f4 f3 cindexl cHD f3 f3 csizel f3 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 cindexl f4 f3 cHD f3 cEL c+ cindexl f4 f3 cindexl cHD f3 f3 f3 cIN f4 * * part cnode chypermap_of_list f0 cHD f3 c==> c==> c/\ cMEM cHD f3 f3 c< c+ cindexl f4 f3 cindexl cHD f3 f3 csizel f3 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 cindexl f4 f3 cHD f3 cEL c+ cindexl f4 f3 cindexl cHD f3 f3 f3 cIN f4 * * part cnode chypermap_of_list f0 cHD f3
+ (((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) |- ((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) /\ (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)) = ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))))
T c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c/\ c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f1 f0 cHD f0 cEL c+ cindexl f1 f0 cindexl cHD f0 f0 f0
+ ((MEM x) p) |- (((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p))) = ((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x))) ==> ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> q')))) = ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL ((indexl x) p)) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> q'))))
T c==> cMEM f0 f1 c= c==> c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c==> c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 f3 c= c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 f3 c==> c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 f3 c= c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL cindexl f0 f1 f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 f3
- |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10131650)) /\ (((real_le ((real_add (real_of_int _10131650)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10131650)) \/ ((real_le ((real_add (real_of_int _10131650)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10131650)))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF
+ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) |- (((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) /\ (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)) = ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))))
T c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c/\ c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1
- |- ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) = p') ==> ((p' ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = q')) ==> ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) = (p' ==> q'))))
T c==> c= c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 f2 c==> c==> f2 c= c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f3 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f4 cindexl f3 f1 cHD f1 cEL c+ cindexl f3 f1 cindexl cHD f1 f1 f1 cIN f3 * * part cnode chypermap_of_list f4 cHD f1 f5 c= c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f3 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f4 cindexl f3 f1 cHD f1 cEL c+ cindexl f3 f1 cindexl cHD f1 f1 f1 cIN f3 * * part cnode chypermap_of_list f4 cHD f1 c==> f2 f5
- |- ((\q'. ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) = p') ==> ((p' ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = q')) ==> ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b1 f1 cMEM b1 f0 f2 c==> c==> f2 c= c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f3 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f4 cindexl f3 f1 cHD f1 cEL c+ cindexl f3 f1 cindexl cHD f1 f1 f1 cIN f3 * * part cnode chypermap_of_list f4 cHD f1 b0 c= c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b1 f1 cMEM b1 f0 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f3 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f4 cindexl f3 f1 cHD f1 cEL c+ cindexl f3 f1 cindexl cHD f1 f1 f1 cIN f3 * * part cnode chypermap_of_list f4 cHD f1 c==> f2 b0 f5
+ ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x) |- (x = (((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)))
T c==> c= cPOWER * part cinverse * part cnode_map chypermap_of_list f0 cindexl f1 f2 cHD f2 f1 c= f1 cPOWER * part cinverse * part cnode_map chypermap_of_list f0 cindexl f1 f2 cHD f2
- (~ (s = NIL)) |- ((~ (s = NIL)) /\ (((indexl (HD s)) s) = (NUMERAL _0)))
T c==> c~ c= f0 cNIL c/\ c~ c= f0 cNIL c= cindexl cHD f0 f0 cNUMERAL c_0
- |- (((!q'. ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) = p') ==> ((p' ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = q')) ==> ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) = (p' ==> q'))))) ==> ((\q'. ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) = p') ==> ((p' ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = q')) ==> ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) = (p' ==> q'))))) q')) = ((\q'. ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) = p') ==> ((p' ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = q')) ==> ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b1 f1 cMEM b1 f0 f2 c==> c==> f2 c= c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f3 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f4 cindexl f3 f1 cHD f1 cEL c+ cindexl f3 f1 cindexl cHD f1 f1 f1 cIN f3 * * part cnode chypermap_of_list f4 cHD f1 b0 c= c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b1 f1 cMEM b1 f0 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f3 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f4 cindexl f3 f1 cHD f1 cEL c+ cindexl f3 f1 cindexl cHD f1 f1 f1 cIN f3 * * part cnode chypermap_of_list f4 cHD f1 c==> f2 b0 * / c==> c= c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b1 f1 cMEM b1 f0 f2 c==> c==> f2 c= c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f3 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f4 cindexl f3 f1 cHD f1 cEL c+ cindexl f3 f1 cindexl cHD f1 f1 f1 cIN f3 * * part cnode chypermap_of_list f4 cHD f1 b0 c= c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b1 f1 cMEM b1 f0 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f3 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f4 cindexl f3 f1 cHD f1 cEL c+ cindexl f3 f1 cindexl cHD f1 f1 f1 cIN f3 * * part cnode chypermap_of_list f4 cHD f1 c==> f2 b0 f5 * / c==> c= c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b1 f1 cMEM b1 f0 f2 c==> c==> f2 c= c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f3 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f4 cindexl f3 f1 cHD f1 cEL c+ cindexl f3 f1 cindexl cHD f1 f1 f1 cIN f3 * * part cnode chypermap_of_list f4 cHD f1 b0 c= c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b1 f1 cMEM b1 f0 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f3 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f4 cindexl f3 f1 cHD f1 cEL c+ cindexl f3 f1 cindexl cHD f1 f1 f1 cIN f3 * * part cnode chypermap_of_list f4 cHD f1 c==> f2 b0 f5
- ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- ((p = NIL) = F)
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c= f1 cNIL cF
- ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))), ((MEM x) p) |- (((MEM x) p) /\ (((MEM x) r) = T))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c==> cMEM f2 f1 c/\ cMEM f2 f1 c= cMEM f2 f0 cT
- |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10131650)) /\ (((real_le ((real_add (real_of_int _10131650)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10131650)) \/ ((real_le ((real_add (real_of_int _10131650)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10131650)))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0
- |- ((real_of_int (int_of_num n)) = (real_of_num n))
T c= creal_of_int cint_of_num f0 creal_of_num f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- (T = (~ (p = NIL)))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= cT c~ c= f1 cNIL
- |- ((\p'. (!q'. ((((MEM _10131655) p) = p') ==> ((p' ==> (((MEM _10131655) r) = q')) ==> ((((MEM _10131655) p) ==> ((MEM _10131655) r)) = (p' ==> q')))))) p')
T * / ! c==> c= cMEM f0 f1 b0 c==> c==> b0 c= cMEM f0 f2 b1 c= c==> cMEM f0 f1 cMEM f0 f2 c==> b0 b1 f3
- |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num n)) ==> ((int_of_num n) = (int_of_num n))) = ((int_of_num n) = (int_of_num n)))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c= cint_of_num f0 cint_of_num f0 c= cint_of_num f0 cint_of_num f0
- ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- ((((MEM x) p) ==> ((MEM x) r)) = T)
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c==> cMEM f2 f1 cMEM f2 f0 cT
- |- (((real_le (real_of_num m)) (real_neg (real_of_num n))) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))
T c= creal_le creal_of_num f0 creal_neg creal_of_num f1 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
- ((MEM x) p) |- ((((MEM x) p) ==> ((MEM x) r)) = (T ==> ((MEM x) r)))
T c==> cMEM f0 f1 c= c==> cMEM f0 f1 cMEM f0 f2 c==> cT cMEM f0 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((\p'. (!q'. ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) = p') ==> ((p' ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = q')) ==> ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b2 f1 cMEM b2 f0 b0 c==> c==> b0 c= c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 b1 c= c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b2 f1 cMEM b2 f0 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 c==> b0 b1 f4
- |- ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
- |- (((!p'. (!q'. ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 b0 c==> c==> b0 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 b1 c= c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> b0 b1 * / ! c==> c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 b0 c==> c==> b0 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 b1 c= c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> b0 b1 f3 * / ! c==> c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 b0 c==> c==> b0 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 b1 c= c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> b0 b1 f3
- ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) |- (((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) = T)
T c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 cT
- |- (((!p'. (!q'. ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) = p') ==> ((p' ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = q')) ==> ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) = p') ==> ((p' ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = q')) ==> ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) = p') ==> ((p' ==> ((((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = q')) ==> ((((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) ==> (((((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))) ==> (x IN ((node (hypermap_of_list L)) (HD p))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b2 f1 cMEM b2 f0 b0 c==> c==> b0 c= c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 b1 c= c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b2 f1 cMEM b2 f0 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 c==> b0 b1 * / ! c==> c= c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b2 f1 cMEM b2 f0 b0 c==> c==> b0 c= c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 b1 c= c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b2 f1 cMEM b2 f0 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 c==> b0 b1 f4 * / ! c==> c= c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b2 f1 cMEM b2 f0 b0 c==> c==> b0 c= c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 b1 c= c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b2 f1 cMEM b2 f0 c==> c==> c/\ cMEM cHD f1 f1 c< c+ cindexl f2 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f2 f1 cHD f1 cEL c+ cindexl f2 f1 cindexl cHD f1 f1 f1 cIN f2 * * part cnode chypermap_of_list f3 cHD f1 c==> b0 b1 f4
- (((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) |- (((MEM (HD p)) p) = T)
T c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= cMEM cHD f0 f0 cT
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((int_of_num n) = (int_of_num n)) = ((n + (NUMERAL _0)) = n))
T c= c= cint_of_num f0 cint_of_num f0 c= c+ f0 cNUMERAL c_0 f0
- ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- ((\x. (((MEM x) p) ==> ((MEM x) r))) x)
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 * / c==> cMEM b0 f1 cMEM b0 f0 f2
- |- ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> (x IN ((node (hypermap_of_list L)) (HD p)))))
T c= c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 cIN f0 * * part cnode chypermap_of_list f2 cHD f1
- ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- ((NIL = r) = F)
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c= cNIL f0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((((indexl x) p) + (NUMERAL _0)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))), ((((indexl x) p) + (NUMERAL _0)) < (sizel p)) |- ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + (NUMERAL _0))) p))
T c==> c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1 c==> c< c+ cindexl f0 f1 cNUMERAL c_0 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cNUMERAL c_0 f1
- |- (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
- (((real_ge (real_of_int _10131650)) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) |- F
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- |- ((~ F) = T)
T c= c~ cF cT
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = (x IN ((node (hypermap_of_list L)) (HD p))))) ==> ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> (x IN ((node (hypermap_of_list L)) (HD p)))))) = ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> (x IN ((node (hypermap_of_list L)) (HD p))))))
T c= c==> c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c= c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c= c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 cIN f0 * * part cnode chypermap_of_list f2 cHD f1
- |- ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) = p') ==> ((p' ==> ((x IN ((node (hypermap_of_list L)) (HD p))) = q')) ==> ((((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) ==> (x IN ((node (hypermap_of_list L)) (HD p)))) = (p' ==> q'))))
T c==> c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 f3 c==> c==> f3 c= cIN f0 * * part cnode chypermap_of_list f2 cHD f1 f4 c= c==> c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 cIN f0 * * part cnode chypermap_of_list f2 cHD f1 c==> f3 f4
- ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- (((!x. (((MEM x) p) ==> ((MEM x) r))) ==> ((\x. (((MEM x) p) ==> ((MEM x) r))) x)) = ((\x. (((MEM x) p) ==> ((MEM x) r))) x))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c==> ! c==> cMEM b0 f1 cMEM b0 f0 * / c==> cMEM b0 f1 cMEM b0 f0 f2 * / c==> cMEM b0 f1 cMEM b0 f0 f2
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10131650)) /\ (((real_le ((real_add (real_of_int _10131650)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10131650)) \/ ((real_le ((real_add (real_of_int _10131650)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10131650)))))) |- (((real_ge (real_of_int _10131650)) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- ((uniq p) = T)
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= cuniq f1 cT
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- (((indexl x) p) < (sizel p)) |- ((((indexl x) p) < (sizel p)) /\ (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x) = ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)))
T c==> c< cindexl f0 f1 csizel f1 c/\ c< cindexl f0 f1 csizel f1 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0
- ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- (((MEM x) p) ==> (((MEM x) r) = T))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c==> cMEM f2 f1 c= cMEM f2 f0 cT
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- (((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p))), ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) |- (((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) /\ ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = ((EL (((indexl x) p) + ((indexl (HD p)) p))) p)))
T c==> c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1 c==> c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c/\ c< c+ cindexl f0 f1 cindexl cHD f1 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 cEL c+ cindexl f0 f1 cindexl cHD f1 f1 f1
- |- ((((MEM _10131655) p) ==> (((MEM _10131655) r) = q')) ==> ((((MEM _10131655) p) ==> ((MEM _10131655) r)) = (((MEM _10131655) p) ==> q')))
T c==> c==> cMEM f0 f1 c= cMEM f0 f2 f3 c= c==> cMEM f0 f1 cMEM f0 f2 c==> cMEM f0 f1 f3
- ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- (((~ (NIL = p)) ==> ((NIL = p) = F)) = ((NIL = p) = F))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c==> c~ c= cNIL f1 c= c= cNIL f1 cF c= c= cNIL f1 cF
- ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- (((~ (NIL = r)) ==> ((NIL = r) = F)) = ((NIL = r) = F))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c==> c~ c= cNIL f0 c= c= cNIL f0 cF c= c= cNIL f0 cF
- |- (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) = ((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)))
T c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0 c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f2 cindexl f0 f1 cHD f1 f0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- (((~ (p = NIL)) ==> ((p = NIL) = F)) = ((p = NIL) = F))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c==> c~ c= f1 cNIL c= c= f1 cNIL cF c= c= f1 cNIL cF
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))) |- ((NIL = p) = F)
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL c/\ cuniq f1 c/\ c~ c= f1 cNIL ! c==> cMEM b0 f1 cMEM b0 f0 c= c= cNIL f1 cF
- (((MEM (HD p)) p) /\ ((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p))) |- (((((indexl x) p) + ((indexl (HD p)) p)) < (sizel p)) = T)
T c==> c/\ cMEM cHD f0 f0 c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 c= c< c+ cindexl f1 f0 cindexl cHD f0 f0 csizel f0 cT
- |- ((int_of_num n) = (int_of_num n))
T c= cint_of_num f0 cint_of_num f0
- |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((MEM _10131655) p) ==> (((MEM _10131655) r) = ((MEM _10131655) r))) ==> ((((MEM _10131655) p) ==> ((MEM _10131655) r)) = (((MEM _10131655) p) ==> ((MEM _10131655) r)))) = ((((MEM _10131655) p) ==> ((MEM _10131655) r)) = (((MEM _10131655) p) ==> ((MEM _10131655) r))))
T c= c==> c==> cMEM f0 f1 c= cMEM f0 f2 cMEM f0 f2 c= c==> cMEM f0 f1 cMEM f0 f2 c==> cMEM f0 f1 cMEM f0 f2 c= c==> cMEM f0 f1 cMEM f0 f2 c==> cMEM f0 f1 cMEM f0 f2
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- T |- (T /\ (((MEM x) r) = ((MEM x) r)))
T c==> cT c/\ cT c= cMEM f0 f1 cMEM f0 f1
- (r = NIL) |- (NIL = r)
T c==> c= f0 cNIL c= cNIL f0
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- |- ((\q'. (((((indexl x) p) < (sizel p)) = p') ==> ((p' ==> (((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x) = q')) ==> (((((indexl x) p) < (sizel p)) ==> ((((POWER (inverse (node_map (hypermap_of_list L)))) ((indexl x) p)) (HD p)) = x)) = (p' ==> q'))))) q')
T * / c==> c= c< cindexl f0 f1 csizel f1 f2 c==> c==> f2 c= c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f0 f1 cHD f1 f0 b0 c= c==> c< cindexl f0 f1 csizel f1 c= cPOWER * part cinverse * part cnode_map chypermap_of_list f3 cindexl f0 f1 cHD f1 f0 c==> f2 b0 f4
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
