N LINEAR_VMUL_DROP
C |- (!f. (!v. ((linear f) ==> (linear (\x. ((% (drop (f x))) v))))))
T c==> clinear f0 clinear / c% cdrop * f0 b0 f1
D TRUTH
A |- T
T cT
D LE_REFL
A |- (!n. (n <= n))
T c<= f0 f0
D DIMINDEX_1
A |- ((dimindex UNIV) = (NUMERAL (BIT1 _0)))
T c= cdimindex part cUNIV cNUMERAL cBIT1 c_0
D LINEAR_VMUL_COMPONENT
A |- (!f. (!v. (!k. (((linear f) /\ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV)))) ==> (linear (\x. ((% ((f x) $ k)) v)))))))
T c==> c/\ clinear f0 c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV clinear / c% c$ * f0 b0 f1 f2
D drop
A |- (!x. ((drop x) = (x $ (NUMERAL (BIT1 _0)))))
T c= cdrop f0 c$ f0 cNUMERAL cBIT1 c_0
- |- ((!x. ((vector_norm x) = (real_abs (drop x)))) = (!x. ((vector_norm (lift x)) = (real_abs (drop (lift x))))))
T c= ! c= cvector_norm b0 creal_abs cdrop b0 ! c= cvector_norm clift b0 creal_abs cdrop clift b0
- |- (((!x. ((lift (drop x)) = x)) ==> ((\x. ((lift (drop x)) = x)) x)) = ((\x. ((lift (drop x)) = x)) x))
T c= c==> ! c= clift cdrop b0 b0 * / c= clift cdrop b0 b0 f0 * / c= clift cdrop b0 b0 f0
+ |- ((\q'. (((linear f) = p') ==> ((p' ==> ((linear (\x. ((% (drop (f x))) v))) = q')) ==> (((linear f) ==> (linear (\x. ((% (drop (f x))) v)))) = (p' ==> q'))))) q')
T * / c==> c= clinear f0 f1 c==> c==> f1 c= clinear / c% cdrop * f0 b1 f2 b0 c= c==> clinear f0 clinear / c% cdrop * f0 b1 f2 c==> f1 b0 f3
- |- (((!x. ((drop (lift x)) = x)) ==> ((\x. ((drop (lift x)) = x)) x)) = ((\x. ((drop (lift x)) = x)) x))
T c= c==> ! c= cdrop clift b0 b0 * / c= cdrop clift b0 b0 f0 * / c= cdrop clift b0 b0 f0
- |- (T = (!x. ((vector_norm x) = (real_abs (drop x)))))
T c= cT ! c= cvector_norm b0 creal_abs cdrop b0
- |- ((vector_norm (lift x)) = (real_abs x))
T c= cvector_norm clift f0 creal_abs f0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- (((linear f) /\ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV)))) ==> ((linear (\x. ((% ((f x) $ k)) v))) = T))
T c==> c/\ clinear f0 c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= clinear / c% c$ * f0 b0 f1 f2 cT
+ (linear f) |- ((linear f) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ ((NUMERAL (BIT1 _0)) <= (dimindex UNIV))))
T c==> clinear f0 c/\ clinear f0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV
+ (linear f) |- (T = ((linear f) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ ((NUMERAL (BIT1 _0)) <= (dimindex UNIV)))))
T c==> clinear f0 c= cT c/\ clinear f0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV
+ |- ((linear f) ==> ((linear (\x. ((% (drop (f x))) v))) = T))
T c==> clinear f0 c= clinear / c% cdrop * f0 b0 f1 cT
+ (linear f) |- ((linear f) = T)
T c==> clinear f0 c= clinear f0 cT
+ |- ((\p'. (!q'. (((linear f) = p') ==> ((p' ==> ((linear (\x. ((% (drop (f x))) v))) = q')) ==> (((linear f) ==> (linear (\x. ((% (drop (f x))) v)))) = (p' ==> q')))))) p')
T * / ! c==> c= clinear f0 b0 c==> c==> b0 c= clinear / c% cdrop * f0 b2 f1 b1 c= c==> clinear f0 clinear / c% cdrop * f0 b2 f1 c==> b0 b1 f2
- |- ((drop (lift x)) = x)
T c= cdrop clift f0 f0
+ |- (((!p'. (!q'. (((linear f) = p') ==> ((p' ==> ((linear (\x. ((% (drop (f x))) v))) = q')) ==> (((linear f) ==> (linear (\x. ((% (drop (f x))) v)))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((linear f) = p') ==> ((p' ==> ((linear (\x. ((% (drop (f x))) v))) = q')) ==> (((linear f) ==> (linear (\x. ((% (drop (f x))) v)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((linear f) = p') ==> ((p' ==> ((linear (\x. ((% (drop (f x))) v))) = q')) ==> (((linear f) ==> (linear (\x. ((% (drop (f x))) v)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= clinear f0 b0 c==> c==> b0 c= clinear / c% cdrop * f0 b2 f1 b1 c= c==> clinear f0 clinear / c% cdrop * f0 b2 f1 c==> b0 b1 * / ! c==> c= clinear f0 b0 c==> c==> b0 c= clinear / c% cdrop * f0 b2 f1 b1 c= c==> clinear f0 clinear / c% cdrop * f0 b2 f1 c==> b0 b1 f2 * / ! c==> c= clinear f0 b0 c==> c==> b0 c= clinear / c% cdrop * f0 b2 f1 b1 c= c==> clinear f0 clinear / c% cdrop * f0 b2 f1 c==> b0 b1 f2
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- ((\x. ((drop x) = (x $ (NUMERAL (BIT1 _0))))) x)
T * / c= cdrop b0 c$ b0 cNUMERAL cBIT1 c_0 f0
+ |- (((!n. (n <= n)) ==> ((\n. (n <= n)) n)) = ((\n. (n <= n)) n))
T c= c==> ! c<= b0 b0 * / c<= b0 b0 f0 * / c<= b0 b0 f0
+ |- (((!k. (((linear f) /\ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV)))) ==> (linear (\x. ((% ((f x) $ k)) v))))) ==> ((\k. (((linear f) /\ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV)))) ==> (linear (\x. ((% ((f x) $ k)) v))))) k)) = ((\k. (((linear f) /\ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV)))) ==> (linear (\x. ((% ((f x) $ k)) v))))) k))
T c= c==> ! c==> c/\ clinear f0 c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV clinear / c% c$ * f0 b1 b0 f1 * / c==> c/\ clinear f0 c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV clinear / c% c$ * f0 b1 b0 f1 f2 * / c==> c/\ clinear f0 c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV clinear / c% c$ * f0 b1 b0 f1 f2
+ ((linear f) /\ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV)))) |- (((linear f) /\ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV)))) /\ ((linear (\x. ((% ((f x) $ k)) v))) = T))
T c==> c/\ clinear f0 c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c/\ c/\ clinear f0 c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= clinear / c% c$ * f0 b0 f1 f2 cT
- |- (((!x. ((vector_norm (lift x)) = (real_abs x))) ==> ((\x. ((vector_norm (lift x)) = (real_abs x))) x)) = ((\x. ((vector_norm (lift x)) = (real_abs x))) x))
T c= c==> ! c= cvector_norm clift b0 creal_abs b0 * / c= cvector_norm clift b0 creal_abs b0 f0 * / c= cvector_norm clift b0 creal_abs b0 f0
- |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((\x. ((drop (lift x)) = x)) x)
T * / c= cdrop clift b0 b0 f0
- |- ((\x. ((lift (drop x)) = x)) x)
T * / c= clift cdrop b0 b0 f0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((\x. ((vector_norm (lift x)) = (real_abs x))) x)
T * / c= cvector_norm clift b0 creal_abs b0 f0
- |- ((lift (drop x)) = x)
T c= clift cdrop f0 f0
