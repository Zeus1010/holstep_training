N Aq1.uniq_replace_filter_flatten
C |- (((uniq (flatten N)) /\ (((all (\l. (~ (l = NIL)))) N) /\ ((MEM r) N))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))
T c==> c/\ cuniq cflatten f0 c/\ call / c~ c= b0 cNIL f0 cMEM f1 f0 c= cuniq cflatten creplace f1 cCONS f2 cNIL f0 cuniq cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0
D TRUTH
A |- T
T cT
D Seq.perm_uniq
A |- (!s1. (!s2. ((!x. (((MEM x) s1) = ((MEM x) s2))) ==> (((sizel s1) = (sizel s2)) ==> ((uniq s1) = (uniq s2))))))
T c==> ! c= cMEM b0 f0 cMEM b0 f1 c==> c= csizel f0 csizel f1 c= cuniq f0 cuniq f1
D Aq1.change_flatten_replace_filter
A |- (((uniq (flatten N)) /\ (((all (\l. (~ (l = NIL)))) N) /\ ((MEM r) N))) ==> (!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))))
T c==> c/\ cuniq cflatten f0 c/\ call / c~ c= b0 cNIL f0 cMEM f1 f0 ! c= cMEM b0 cflatten creplace f1 cCONS f2 cNIL f0 cMEM b0 cAPPEND f2 cfilter / c~ cMEM b1 f1 cflatten f0
D Aq1.sizel_replace_filter_flatten
A |- (!N. (((uniq (flatten N)) /\ ((MEM r) N)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))))
T c==> c/\ cuniq cflatten f0 cMEM f1 f0 c= csizel cflatten creplace f1 cCONS f2 cNIL f0 csizel cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0
- |- ((\s. (!r. (!N. (((uniq (flatten N)) /\ (((all (\l. (~ (l = NIL)))) N) /\ ((MEM r) N))) ==> (!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))))))) s)
T * / ! ! c==> c/\ cuniq cflatten b2 c/\ call / c~ c= b3 cNIL b2 cMEM b1 b2 ! c= cMEM b3 cflatten creplace b1 cCONS b0 cNIL b2 cMEM b3 cAPPEND b0 cfilter / c~ cMEM b4 b1 cflatten b2 f0
- (!N. (((uniq (flatten N)) /\ ((MEM r) N)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))), ((uniq (flatten N)) /\ ((MEM r) N)) |- (((uniq (flatten N)) /\ ((MEM r) N)) /\ ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))
T c==> ! c==> c/\ cuniq cflatten b0 cMEM f0 b0 c= csizel cflatten creplace f0 cCONS f1 cNIL b0 csizel cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten b0 c==> c/\ cuniq cflatten f2 cMEM f0 f2 c/\ c/\ cuniq cflatten f2 cMEM f0 f2 c= csizel cflatten creplace f0 cCONS f1 cNIL f2 csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2
+ (!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))) |- (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))
T c==> ! c= cMEM b0 cflatten creplace f0 cCONS f1 cNIL f2 cMEM b0 cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten f2 c= cMEM f3 cflatten creplace f0 cCONS f1 cNIL f2 cMEM f3 cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2
+ |- (((!s1. (!s2. ((!x. (((MEM x) s1) = ((MEM x) s2))) ==> (((sizel s1) = (sizel s2)) ==> ((uniq s1) = (uniq s2)))))) ==> ((\s1. (!s2. ((!x. (((MEM x) s1) = ((MEM x) s2))) ==> (((sizel s1) = (sizel s2)) ==> ((uniq s1) = (uniq s2)))))) (flatten (((replace r) ((CONS s) NIL)) N)))) = ((\s1. (!s2. ((!x. (((MEM x) s1) = ((MEM x) s2))) ==> (((sizel s1) = (sizel s2)) ==> ((uniq s1) = (uniq s2)))))) (flatten (((replace r) ((CONS s) NIL)) N))))
T c= c==> ! ! c==> ! c= cMEM b2 b0 cMEM b2 b1 c==> c= csizel b0 csizel b1 c= cuniq b0 cuniq b1 * / ! c==> ! c= cMEM b2 b0 cMEM b2 b1 c==> c= csizel b0 csizel b1 c= cuniq b0 cuniq b1 cflatten creplace f0 cCONS f1 cNIL f2 * / ! c==> ! c= cMEM b2 b0 cMEM b2 b1 c==> c= csizel b0 csizel b1 c= cuniq b0 cuniq b1 cflatten creplace f0 cCONS f1 cNIL f2
- |- ((!r. (!N. (((uniq (flatten N)) /\ (((all (\l. (~ (l = NIL)))) N) /\ ((MEM r) N))) ==> (!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))))) = T)
T c= ! ! c==> c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 cMEM b0 b1 ! c= cMEM b2 cflatten creplace b0 cCONS f0 cNIL b1 cMEM b2 cAPPEND f0 cfilter / c~ cMEM b3 b0 cflatten b1 cT
- (!N. (((uniq (flatten N)) /\ ((MEM r) N)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))) |- ((!N. (((uniq (flatten N)) /\ ((MEM r) N)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))) /\ (!N. (((uniq (flatten N)) /\ ((MEM r) N)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))))
T c==> ! c==> c/\ cuniq cflatten b0 cMEM f0 b0 c= csizel cflatten creplace f0 cCONS f1 cNIL b0 csizel cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten b0 c/\ ! c==> c/\ cuniq cflatten b0 cMEM f0 b0 c= csizel cflatten creplace f0 cCONS f1 cNIL b0 csizel cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten b0 ! c==> c/\ cuniq cflatten b0 cMEM f0 b0 c= csizel cflatten creplace f0 cCONS f1 cNIL b0 csizel cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten b0
+ (uniq (flatten N)), ((MEM r) N) |- ((((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))
T c==> cuniq cflatten f0 c==> cMEM f1 f0 c==> c==> c= csizel cflatten creplace f1 cCONS f2 cNIL f0 csizel cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0 c= cuniq cflatten creplace f1 cCONS f2 cNIL f0 cuniq cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0 c= cuniq cflatten creplace f1 cCONS f2 cNIL f0 cuniq cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0
- |- (((!s. (!r. (!N. (((uniq (flatten N)) /\ (((all (\l. (~ (l = NIL)))) N) /\ ((MEM r) N))) ==> (!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))))))) ==> ((\s. (!r. (!N. (((uniq (flatten N)) /\ (((all (\l. (~ (l = NIL)))) N) /\ ((MEM r) N))) ==> (!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))))))) s)) = ((\s. (!r. (!N. (((uniq (flatten N)) /\ (((all (\l. (~ (l = NIL)))) N) /\ ((MEM r) N))) ==> (!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))))))) s))
T c= c==> ! ! ! c==> c/\ cuniq cflatten b2 c/\ call / c~ c= b3 cNIL b2 cMEM b1 b2 ! c= cMEM b3 cflatten creplace b1 cCONS b0 cNIL b2 cMEM b3 cAPPEND b0 cfilter / c~ cMEM b4 b1 cflatten b2 * / ! ! c==> c/\ cuniq cflatten b2 c/\ call / c~ c= b3 cNIL b2 cMEM b1 b2 ! c= cMEM b3 cflatten creplace b1 cCONS b0 cNIL b2 cMEM b3 cAPPEND b0 cfilter / c~ cMEM b4 b1 cflatten b2 f0 * / ! ! c==> c/\ cuniq cflatten b2 c/\ call / c~ c= b3 cNIL b2 cMEM b1 b2 ! c= cMEM b3 cflatten creplace b1 cCONS b0 cNIL b2 cMEM b3 cAPPEND b0 cfilter / c~ cMEM b4 b1 cflatten b2 f0
+ (uniq (flatten N)) |- ((uniq (flatten N)) = T)
T c==> cuniq cflatten f0 c= cuniq cflatten f0 cT
+ (uniq (flatten N)), ((MEM r) N) |- ((!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))
T c==> cuniq cflatten f0 c==> cMEM f1 f0 c==> ! c= cMEM b0 cflatten creplace f1 cCONS f2 cNIL f0 cMEM b0 cAPPEND f2 cfilter / c~ cMEM b1 f1 cflatten f0 c= cuniq cflatten creplace f1 cCONS f2 cNIL f0 cuniq cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((\N. (((uniq (flatten N)) /\ (((all (\l. (~ (l = NIL)))) N) /\ ((MEM r) N))) ==> (!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))))) N)
T * / c==> c/\ cuniq cflatten b0 c/\ call / c~ c= b1 cNIL b0 cMEM f0 b0 ! c= cMEM b1 cflatten creplace f0 cCONS f1 cNIL b0 cMEM b1 cAPPEND f1 cfilter / c~ cMEM b2 f0 cflatten b0 f2
+ |- ((((!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))) ==> (((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))) = ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))
T c= c==> c==> ! c= cMEM b0 cflatten creplace f0 cCONS f1 cNIL f2 cMEM b0 cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten f2 c==> c= csizel cflatten creplace f0 cCONS f1 cNIL f2 csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- ((\s1. (!s2. ((!x. (((MEM x) s1) = ((MEM x) s2))) ==> (((sizel s1) = (sizel s2)) ==> ((uniq s1) = (uniq s2)))))) (flatten (((replace r) ((CONS s) NIL)) N)))
T * / ! c==> ! c= cMEM b2 b0 cMEM b2 b1 c==> c= csizel b0 csizel b1 c= cuniq b0 cuniq b1 cflatten creplace f0 cCONS f1 cNIL f2
+ |- ((!x. t) = t)
T c= ! f0 f0
+ ((all (\l. (~ (l = NIL)))) N) |- (((all (\l. (~ (l = NIL)))) N) = T)
T c==> call / c~ c= b0 cNIL f0 c= call / c~ c= b0 cNIL f0 cT
+ (uniq (flatten N)), ((MEM r) N) |- ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))
T c==> cuniq cflatten f0 c==> cMEM f1 f0 c= csizel cflatten creplace f1 cCONS f2 cNIL f0 csizel cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (uniq (flatten N)), ((MEM r) N) |- (T = ((uniq (flatten N)) /\ ((MEM r) N)))
T c==> cuniq cflatten f0 c==> cMEM f1 f0 c= cT c/\ cuniq cflatten f0 cMEM f1 f0
+ (uniq (flatten N)), (((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))), ((MEM r) N) |- ((((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))) /\ ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))
T c==> cuniq cflatten f0 c==> c==> c= csizel cflatten creplace f1 cCONS f2 cNIL f0 csizel cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0 c= cuniq cflatten creplace f1 cCONS f2 cNIL f0 cuniq cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0 c==> cMEM f1 f0 c/\ c==> c= csizel cflatten creplace f1 cCONS f2 cNIL f0 csizel cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0 c= cuniq cflatten creplace f1 cCONS f2 cNIL f0 cuniq cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0 c= cuniq cflatten creplace f1 cCONS f2 cNIL f0 cuniq cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0
- |- (((!N. (((uniq (flatten N)) /\ ((MEM r) N)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))) ==> (!N. (((uniq (flatten N)) /\ ((MEM r) N)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))))) = (!N. (((uniq (flatten N)) /\ ((MEM r) N)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))))
T c= c==> ! c==> c/\ cuniq cflatten b0 cMEM f0 b0 c= csizel cflatten creplace f0 cCONS f1 cNIL b0 csizel cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten b0 ! c==> c/\ cuniq cflatten b0 cMEM f0 b0 c= csizel cflatten creplace f0 cCONS f1 cNIL b0 csizel cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten b0 ! c==> c/\ cuniq cflatten b0 cMEM f0 b0 c= csizel cflatten creplace f0 cCONS f1 cNIL b0 csizel cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten b0
+ ((uniq (flatten N)) /\ (((all (\l. (~ (l = NIL)))) N) /\ ((MEM r) N))) |- (((uniq (flatten N)) /\ (((all (\l. (~ (l = NIL)))) N) /\ ((MEM r) N))) /\ ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))
T c==> c/\ cuniq cflatten f0 c/\ call / c~ c= b0 cNIL f0 cMEM f1 f0 c/\ c/\ cuniq cflatten f0 c/\ call / c~ c= b0 cNIL f0 cMEM f1 f0 c= cuniq cflatten creplace f1 cCONS f2 cNIL f0 cuniq cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0
+ |- (((!N. (((uniq (flatten N)) /\ ((MEM r) N)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))) ==> ((\N. (((uniq (flatten N)) /\ ((MEM r) N)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))) N)) = ((\N. (((uniq (flatten N)) /\ ((MEM r) N)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))) N))
T c= c==> ! c==> c/\ cuniq cflatten b0 cMEM f0 b0 c= csizel cflatten creplace f0 cCONS f1 cNIL b0 csizel cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten b0 * / c==> c/\ cuniq cflatten b0 cMEM f0 b0 c= csizel cflatten creplace f0 cCONS f1 cNIL b0 csizel cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten b0 f2 * / c==> c/\ cuniq cflatten b0 cMEM f0 b0 c= csizel cflatten creplace f0 cCONS f1 cNIL b0 csizel cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten b0 f2
+ (uniq (flatten N)), (((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))), ((MEM r) N) |- ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))
T c==> cuniq cflatten f0 c==> c==> c= csizel cflatten creplace f1 cCONS f2 cNIL f0 csizel cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0 c= cuniq cflatten creplace f1 cCONS f2 cNIL f0 cuniq cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0 c==> cMEM f1 f0 c= cuniq cflatten creplace f1 cCONS f2 cNIL f0 cuniq cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0
- (((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))) |- ((((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))) = T)
T c==> c==> c= csizel cflatten creplace f0 cCONS f1 cNIL f2 csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c= c==> c= csizel cflatten creplace f0 cCONS f1 cNIL f2 csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 cT
+ (uniq (flatten N)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) N) |- (((!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))) = ((((uniq (flatten N)) /\ (((all (\l. (~ (l = NIL)))) N) /\ ((MEM r) N))) ==> (!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))))
T c==> cuniq cflatten f0 c==> cMEM f1 f0 c==> call / c~ c= b0 cNIL f0 c= c==> ! c= cMEM b0 cflatten creplace f1 cCONS f2 cNIL f0 cMEM b0 cAPPEND f2 cfilter / c~ cMEM b1 f1 cflatten f0 c= cuniq cflatten creplace f1 cCONS f2 cNIL f0 cuniq cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0 c==> c==> c/\ cuniq cflatten f0 c/\ call / c~ c= b0 cNIL f0 cMEM f1 f0 ! c= cMEM b0 cflatten creplace f1 cCONS f2 cNIL f0 cMEM b0 cAPPEND f2 cfilter / c~ cMEM b1 f1 cflatten f0 c= cuniq cflatten creplace f1 cCONS f2 cNIL f0 cuniq cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0
- (!N. (((uniq (flatten N)) /\ ((MEM r) N)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))), ((uniq (flatten N)) /\ ((MEM r) N)) |- ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))
T c==> ! c==> c/\ cuniq cflatten b0 cMEM f0 b0 c= csizel cflatten creplace f0 cCONS f1 cNIL b0 csizel cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten b0 c==> c/\ cuniq cflatten f2 cMEM f0 f2 c= csizel cflatten creplace f0 cCONS f1 cNIL f2 csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2
- ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))), (((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))) |- (((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))) /\ ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))
T c==> c= csizel cflatten creplace f0 cCONS f1 cNIL f2 csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c==> c==> c= csizel cflatten creplace f0 cCONS f1 cNIL f2 csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c/\ c= csizel cflatten creplace f0 cCONS f1 cNIL f2 csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2
+ |- (((!s2. ((!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) s2))) ==> (((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel s2)) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq s2))))) ==> ((\s2. ((!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) s2))) ==> (((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel s2)) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq s2))))) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))) = ((\s2. ((!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) s2))) ==> (((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel s2)) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq s2))))) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))
T c= c==> ! c==> ! c= cMEM b1 cflatten creplace f0 cCONS f1 cNIL f2 cMEM b1 b0 c==> c= csizel cflatten creplace f0 cCONS f1 cNIL f2 csizel b0 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq b0 * / c==> ! c= cMEM b1 cflatten creplace f0 cCONS f1 cNIL f2 cMEM b1 b0 c==> c= csizel cflatten creplace f0 cCONS f1 cNIL f2 csizel b0 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq b0 cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 * / c==> ! c= cMEM b1 cflatten creplace f0 cCONS f1 cNIL f2 cMEM b1 b0 c==> c= csizel cflatten creplace f0 cCONS f1 cNIL f2 csizel b0 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq b0 cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2
+ (uniq (flatten N)), ((uniq (flatten N)) /\ (((all (\l. (~ (l = NIL)))) N) /\ ((MEM r) N))) |- ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))
T c==> cuniq cflatten f0 c==> c/\ cuniq cflatten f0 c/\ call / c~ c= b0 cNIL f0 cMEM f1 f0 c= cuniq cflatten creplace f1 cCONS f2 cNIL f0 cuniq cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0
- ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))) |- ((((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))
T c==> c= csizel cflatten creplace f0 cCONS f1 cNIL f2 csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c==> c==> c= csizel cflatten creplace f0 cCONS f1 cNIL f2 csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((\N. (((uniq (flatten N)) /\ ((MEM r) N)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))) N)
T * / c==> c/\ cuniq cflatten b0 cMEM f0 b0 c= csizel cflatten creplace f0 cCONS f1 cNIL b0 csizel cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten b0 f2
- |- (((!r. (!N. (((uniq (flatten N)) /\ (((all (\l. (~ (l = NIL)))) N) /\ ((MEM r) N))) ==> (!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))))) ==> ((\r. (!N. (((uniq (flatten N)) /\ (((all (\l. (~ (l = NIL)))) N) /\ ((MEM r) N))) ==> (!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))))) r)) = ((\r. (!N. (((uniq (flatten N)) /\ (((all (\l. (~ (l = NIL)))) N) /\ ((MEM r) N))) ==> (!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))))) r))
T c= c==> ! ! c==> c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 cMEM b0 b1 ! c= cMEM b2 cflatten creplace b0 cCONS f0 cNIL b1 cMEM b2 cAPPEND f0 cfilter / c~ cMEM b3 b0 cflatten b1 * / ! c==> c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 cMEM b0 b1 ! c= cMEM b2 cflatten creplace b0 cCONS f0 cNIL b1 cMEM b2 cAPPEND f0 cfilter / c~ cMEM b3 b0 cflatten b1 f1 * / ! c==> c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 cMEM b0 b1 ! c= cMEM b2 cflatten creplace b0 cCONS f0 cNIL b1 cMEM b2 cAPPEND f0 cfilter / c~ cMEM b3 b0 cflatten b1 f1
+ (uniq (flatten N)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) N) |- ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))
T c==> cuniq cflatten f0 c==> cMEM f1 f0 c==> call / c~ c= b0 cNIL f0 c= cuniq cflatten creplace f1 cCONS f2 cNIL f0 cuniq cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0
+ (!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))) |- (((((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))) = (((!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))) ==> (((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))))
T c==> ! c= cMEM b0 cflatten creplace f0 cCONS f1 cNIL f2 cMEM b0 cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten f2 c= c==> c==> c= csizel cflatten creplace f0 cCONS f1 cNIL f2 csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c==> c==> ! c= cMEM b0 cflatten creplace f0 cCONS f1 cNIL f2 cMEM b0 cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten f2 c==> c= csizel cflatten creplace f0 cCONS f1 cNIL f2 csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2
- |- ((!N. (((uniq (flatten N)) /\ (((all (\l. (~ (l = NIL)))) N) /\ ((MEM r) N))) ==> (!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))))) = T)
T c= ! c==> c/\ cuniq cflatten b0 c/\ call / c~ c= b1 cNIL b0 cMEM f0 b0 ! c= cMEM b1 cflatten creplace f0 cCONS f1 cNIL b0 cMEM b1 cAPPEND f1 cfilter / c~ cMEM b2 f0 cflatten b0 cT
- |- ((((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))) ==> (((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))))
T c==> c==> c= csizel cflatten creplace f0 cCONS f1 cNIL f2 csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c==> c= csizel cflatten creplace f0 cCONS f1 cNIL f2 csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2
+ (!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))) |- ((\x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))) x)
T c==> ! c= cMEM b0 cflatten creplace f0 cCONS f1 cNIL f2 cMEM b0 cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten f2 * / c= cMEM b0 cflatten creplace f0 cCONS f1 cNIL f2 cMEM b0 cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten f2 f3
+ (!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))), (uniq (flatten N)), ((MEM r) N) |- (((!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))) ==> (((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))
T c==> ! c= cMEM b0 cflatten creplace f0 cCONS f1 cNIL f2 cMEM b0 cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten f2 c==> cuniq cflatten f2 c==> cMEM f0 f2 c==> c==> ! c= cMEM b0 cflatten creplace f0 cCONS f1 cNIL f2 cMEM b0 cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten f2 c==> c= csizel cflatten creplace f0 cCONS f1 cNIL f2 csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2
+ (uniq (flatten N)), (((all (\l. (~ (l = NIL)))) N) /\ ((MEM r) N)), ((all (\l. (~ (l = NIL)))) N) |- ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))
T c==> cuniq cflatten f0 c==> c/\ call / c~ c= b0 cNIL f0 cMEM f1 f0 c==> call / c~ c= b0 cNIL f0 c= cuniq cflatten creplace f1 cCONS f2 cNIL f0 cuniq cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0
- (!N. (((uniq (flatten N)) /\ ((MEM r) N)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))) |- ((((uniq (flatten N)) /\ ((MEM r) N)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))) = T)
T c==> ! c==> c/\ cuniq cflatten b0 cMEM f0 b0 c= csizel cflatten creplace f0 cCONS f1 cNIL b0 csizel cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten b0 c= c==> c/\ cuniq cflatten f2 cMEM f0 f2 c= csizel cflatten creplace f0 cCONS f1 cNIL f2 csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 cT
+ (!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))), (uniq (flatten N)), ((MEM r) N) |- ((!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))) /\ ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))
T c==> ! c= cMEM b0 cflatten creplace f0 cCONS f1 cNIL f2 cMEM b0 cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten f2 c==> cuniq cflatten f2 c==> cMEM f0 f2 c/\ ! c= cMEM b0 cflatten creplace f0 cCONS f1 cNIL f2 cMEM b0 cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten f2 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2
- (!N. (((uniq (flatten N)) /\ ((MEM r) N)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))), ((uniq (flatten N)) /\ ((MEM r) N)) |- ((!N. (((uniq (flatten N)) /\ ((MEM r) N)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))) /\ ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))
T c==> ! c==> c/\ cuniq cflatten b0 cMEM f0 b0 c= csizel cflatten creplace f0 cCONS f1 cNIL b0 csizel cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten b0 c==> c/\ cuniq cflatten f2 cMEM f0 f2 c/\ ! c==> c/\ cuniq cflatten b0 cMEM f0 b0 c= csizel cflatten creplace f0 cCONS f1 cNIL b0 csizel cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten b0 c= csizel cflatten creplace f0 cCONS f1 cNIL f2 csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2
- (((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))) |- ((((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))) /\ (((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))))
T c==> c==> c= csizel cflatten creplace f0 cCONS f1 cNIL f2 csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c/\ c==> c= csizel cflatten creplace f0 cCONS f1 cNIL f2 csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c==> c= csizel cflatten creplace f0 cCONS f1 cNIL f2 csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2
- ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))), (((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))) |- ((((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))) ==> ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))) /\ ((uniq (flatten (((replace r) ((CONS s) NIL)) N))) = (uniq ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))
T c==> c= csizel cflatten creplace f0 cCONS f1 cNIL f2 csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c==> c==> c= csizel cflatten creplace f0 cCONS f1 cNIL f2 csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c/\ c==> c= csizel cflatten creplace f0 cCONS f1 cNIL f2 csizel cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2 c= cuniq cflatten creplace f0 cCONS f1 cNIL f2 cuniq cAPPEND f1 cfilter / c~ cMEM b0 f0 cflatten f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((uniq (flatten N)) /\ (((all (\l. (~ (l = NIL)))) N) /\ ((MEM r) N))) ==> (!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))) = T)
T c= c==> c/\ cuniq cflatten f0 c/\ call / c~ c= b0 cNIL f0 cMEM f1 f0 ! c= cMEM b0 cflatten creplace f1 cCONS f2 cNIL f0 cMEM b0 cAPPEND f2 cfilter / c~ cMEM b1 f1 cflatten f0 cT
- |- ((!N. (((uniq (flatten N)) /\ ((MEM r) N)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))) ==> (!N. (((uniq (flatten N)) /\ ((MEM r) N)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))))
T c==> ! c==> c/\ cuniq cflatten b0 cMEM f0 b0 c= csizel cflatten creplace f0 cCONS f1 cNIL b0 csizel cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten b0 ! c==> c/\ cuniq cflatten b0 cMEM f0 b0 c= csizel cflatten creplace f0 cCONS f1 cNIL b0 csizel cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten b0
- ((uniq (flatten N)) /\ ((MEM r) N)) |- ((!N. (((uniq (flatten N)) /\ ((MEM r) N)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))
T c==> c/\ cuniq cflatten f0 cMEM f1 f0 c==> ! c==> c/\ cuniq cflatten b0 cMEM f1 b0 c= csizel cflatten creplace f1 cCONS f2 cNIL b0 csizel cAPPEND f2 cfilter / c~ cMEM b1 f1 cflatten b0 c= csizel cflatten creplace f1 cCONS f2 cNIL f0 csizel cAPPEND f2 cfilter / c~ cMEM b0 f1 cflatten f0
- (!N. (((uniq (flatten N)) /\ ((MEM r) N)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))) |- ((\N. (((uniq (flatten N)) /\ ((MEM r) N)) ==> ((sizel (flatten (((replace r) ((CONS s) NIL)) N))) = (sizel ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))) N)
T c==> ! c==> c/\ cuniq cflatten b0 cMEM f0 b0 c= csizel cflatten creplace f0 cCONS f1 cNIL b0 csizel cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten b0 * / c==> c/\ cuniq cflatten b0 cMEM f0 b0 c= csizel cflatten creplace f0 cCONS f1 cNIL b0 csizel cAPPEND f1 cfilter / c~ cMEM b1 f0 cflatten b0 f2
- |- (((!N. (((uniq (flatten N)) /\ (((all (\l. (~ (l = NIL)))) N) /\ ((MEM r) N))) ==> (!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))))) ==> ((\N. (((uniq (flatten N)) /\ (((all (\l. (~ (l = NIL)))) N) /\ ((MEM r) N))) ==> (!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))))) N)) = ((\N. (((uniq (flatten N)) /\ (((all (\l. (~ (l = NIL)))) N) /\ ((MEM r) N))) ==> (!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N)))))))) N))
T c= c==> ! c==> c/\ cuniq cflatten b0 c/\ call / c~ c= b1 cNIL b0 cMEM f0 b0 ! c= cMEM b1 cflatten creplace f0 cCONS f1 cNIL b0 cMEM b1 cAPPEND f1 cfilter / c~ cMEM b2 f0 cflatten b0 * / c==> c/\ cuniq cflatten b0 c/\ call / c~ c= b1 cNIL b0 cMEM f0 b0 ! c= cMEM b1 cflatten creplace f0 cCONS f1 cNIL b0 cMEM b1 cAPPEND f1 cfilter / c~ cMEM b2 f0 cflatten b0 f2 * / c==> c/\ cuniq cflatten b0 c/\ call / c~ c= b1 cNIL b0 cMEM f0 b0 ! c= cMEM b1 cflatten creplace f0 cCONS f1 cNIL b0 cMEM b1 cAPPEND f1 cfilter / c~ cMEM b2 f0 cflatten b0 f2
- |- ((\r. (!N. (((uniq (flatten N)) /\ (((all (\l. (~ (l = NIL)))) N) /\ ((MEM r) N))) ==> (!x. (((MEM x) (flatten (((replace r) ((CONS s) NIL)) N))) = ((MEM x) ((APPEND s) ((filter (\d. (~ ((MEM d) r)))) (flatten N))))))))) r)
T * / ! c==> c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 cMEM b0 b1 ! c= cMEM b2 cflatten creplace b0 cCONS f0 cNIL b1 cMEM b2 cAPPEND f0 cfilter / c~ cMEM b3 b0 cflatten b1 f1
