N Seq.count_pred0
C |- (!s. (((count pred0) s) = (NUMERAL _0)))
T c= ccount part cpred0 f0 cNUMERAL c_0
D Seq.size_nil
A |- ((sizel NIL) = (NUMERAL _0))
T c= csizel cNIL cNUMERAL c_0
D Seq.count_filter
A |- (!a. (!s. (((count a) s) = (sizel ((filter a) s)))))
T c= ccount f0 f1 csizel cfilter f0 f1
D Seq.filter_pred0
A |- (!s. (((filter pred0) s) = NIL))
T c= cfilter part cpred0 f0 cNIL
- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))) |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c==> c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0 c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- |- ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)
T * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
+ |- ((\a. (!s. (((count a) s) = (sizel ((filter a) s))))) a)
T * / ! c= ccount b0 b1 csizel cfilter b0 b1 f0
+ |- (((!s. (((count a) s) = (sizel ((filter a) s)))) ==> ((\s. (((count a) s) = (sizel ((filter a) s)))) s)) = ((\s. (((count a) s) = (sizel ((filter a) s)))) s))
T c= c==> ! c= ccount f0 b0 csizel cfilter f0 b0 * / c= ccount f0 b0 csizel cfilter f0 b0 f1 * / c= ccount f0 b0 csizel cfilter f0 b0 f1
- |- (((NUMERAL _0) = (NUMERAL _0)) = ((sizel NIL) = (NUMERAL _0)))
T c= c= cNUMERAL c_0 cNUMERAL c_0 c= csizel cNIL cNUMERAL c_0
- |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)
T * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
+ |- ((\s. (((filter pred0) s) = NIL)) s)
T * / c= cfilter part cpred0 b0 cNIL f0
- |- (((!P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) ==> ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)) = ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P))
T c= c==> ! ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
+ |- (((sizel ((filter pred0) s)) = (NUMERAL _0)) = (((count pred0) s) = (NUMERAL _0)))
T c= c= csizel cfilter part cpred0 f0 cNUMERAL c_0 c= ccount part cpred0 f0 cNUMERAL c_0
+ |- ((\s. (((count a) s) = (sizel ((filter a) s)))) s)
T * / c= ccount f0 b0 csizel cfilter f0 b0 f1
+ |- ((sizel ((filter pred0) s)) = (NUMERAL _0))
T c= csizel cfilter part cpred0 f0 cNUMERAL c_0
- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))) |- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))
T c==> c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0 c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0
- |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
+ |- (((!s. (((filter pred0) s) = NIL)) ==> ((\s. (((filter pred0) s) = NIL)) s)) = ((\s. (((filter pred0) s) = NIL)) s))
T c= c==> ! c= cfilter part cpred0 b0 cNIL * / c= cfilter part cpred0 b0 cNIL f0 * / c= cfilter part cpred0 b0 cNIL f0
+ |- (((!a. (!s. (((count a) s) = (sizel ((filter a) s))))) ==> ((\a. (!s. (((count a) s) = (sizel ((filter a) s))))) a)) = ((\a. (!s. (((count a) s) = (sizel ((filter a) s))))) a))
T c= c==> ! ! c= ccount b0 b1 csizel cfilter b0 b1 * / ! c= ccount b0 b1 csizel cfilter b0 b1 f0 * / ! c= ccount b0 b1 csizel cfilter b0 b1 f0
- |- (T = ((NUMERAL _0) = (NUMERAL _0)))
T c= cT c= cNUMERAL c_0 cNUMERAL c_0
+ |- ((((count pred0) s) = (NUMERAL _0)) = T)
T c= c= ccount part cpred0 f0 cNUMERAL c_0 cT
+ |- (((sizel NIL) = (NUMERAL _0)) = ((sizel ((filter pred0) s)) = (NUMERAL _0)))
T c= c= csizel cNIL cNUMERAL c_0 c= csizel cfilter part cpred0 f0 cNUMERAL c_0
- |- (((!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) ==> ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)) = ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q))
T c= c==> ! c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
