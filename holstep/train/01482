N REAL_CONTINUOUS_WITHIN_AZIM_COMPOSE
C |- (!f. (!g. (!h. (!k. (!x. (!s. (((~ (collinear ((f x) INSERT ((g x) INSERT ((h x) INSERT EMPTY))))) /\ ((~ (collinear ((f x) INSERT ((g x) INSERT ((k x) INSERT EMPTY))))) /\ ((~ ((k x) IN ((aff_ge ((f x) INSERT ((g x) INSERT EMPTY))) ((h x) INSERT EMPTY)))) /\ (((continuous f) ((within (at x)) s)) /\ (((continuous g) ((within (at x)) s)) /\ (((continuous h) ((within (at x)) s)) /\ ((continuous k) ((within (at x)) s)))))))) ==> ((real_continuous (\x. ((((azim (f x)) (g x)) (h x)) (k x)))) ((within (at x)) s)))))))))
T c==> c/\ c~ ccollinear * * part cINSERT * f0 f1 * * part cINSERT * f2 f1 * * part cINSERT * f3 f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT * f0 f1 * * part cINSERT * f2 f1 * * part cINSERT * f4 f1 part cEMPTY c/\ c~ cIN * f4 f1 * * part caff_ge * * part cINSERT * f0 f1 * * part cINSERT * f2 f1 part cEMPTY * * part cINSERT * f3 f1 part cEMPTY c/\ ccontinuous f0 cwithin cat f1 f5 c/\ ccontinuous f2 cwithin cat f1 f5 c/\ ccontinuous f3 cwithin cat f1 f5 ccontinuous f4 cwithin cat f1 f5 creal_continuous / cazim * f0 b0 * f2 b0 * f3 b0 * f4 b0 cwithin cat f1 f5
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D FUN_EQ_THM
A |- (!f. (!g. ((f = g) = (!x. ((f x) = (g x))))))
T c= c= f0 f1 ! c= * f0 b0 * f1 b0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D RIGHT_OR_FORALL_THM
A |- (!P. (!Q. ((P \/ (!x. (Q x))) = (!x. (P \/ (Q x))))))
T c= c\/ f0 ! * f1 b0 ! c\/ f0 * f1 b0
D SKOLEM_THM
A |- (!P. ((!x. (?y. ((P x) y))) = (?y. (!x. ((P x) (y x))))))
T c= ! c? / * * f0 b0 b1 c? / ! * * f0 b1 * b0 b1
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D o_THM
A |- (!f. (!g. (!x. (((f o g) x) = (f (g x))))))
T c= co f0 f1 f2 * f0 * f1 f2
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D Float.POW_2
A |- (!x. (((real_pow x) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul x) x)))
T c= creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul f0 f0
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_NEG_MINUS1
A |- (!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)))
T c= creal_neg f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_UNIV
A |- (!x. (x IN UNIV))
T cIN f0 part cUNIV
D IN_UNION
A |- (!s. (!t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t))))))
T c= cIN f0 * * part cUNION f1 f2 c\/ cIN f0 f1 cIN f0 f2
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D IN_DIFF
A |- (!s. (!t. (!x. ((x IN (s DIFF t)) = ((x IN s) /\ (~ (x IN t)))))))
T c= cIN f0 * * part cDIFF f1 f2 c/\ cIN f0 f1 c~ cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D IN_IMAGE
A |- (!y. (!s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s)))))))
T c= cIN f0 * * part cIMAGE f1 f2 c? / c/\ c= f0 * f1 b0 cIN b0 f2
D INSERT_AC
A |- (((x INSERT (y INSERT s)) = (y INSERT (x INSERT s))) /\ ((x INSERT (x INSERT s)) = (x INSERT s)))
T c/\ c= * * part cINSERT f0 * * part cINSERT f1 f2 * * part cINSERT f1 * * part cINSERT f0 f2 c= * * part cINSERT f0 * * part cINSERT f0 f2 * * part cINSERT f0 f2
D IMAGE_UNION
A |- (!f. (!s. (!t. (((IMAGE f) (s UNION t)) = (((IMAGE f) s) UNION ((IMAGE f) t))))))
T c= * * part cIMAGE f0 * * part cUNION f1 f2 * * part cUNION * * part cIMAGE f0 f1 * * part cIMAGE f0 f2
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D FSTCART_PASTECART
A |- (!x. (!y. ((fstcart ((pastecart x) y)) = x)))
T c= cfstcart cpastecart f0 f1 f0
D SNDCART_PASTECART
A |- (!x. (!y. ((sndcart ((pastecart x) y)) = y)))
T c= csndcart cpastecart f0 f1 f1
D FORALL_PASTECART
A |- ((!p. (P p)) = (!x. (!y. (P ((pastecart x) y)))))
T c= ! * f0 b0 ! ! * f0 cpastecart b0 b1
D vector_add
A |- (!x. (!y. (((vector_add x) y) = (lambdai. ((real_add (x $ i)) (y $ i))))))
T c= cvector_add f0 f1 clambda / creal_add c$ f0 b0 c$ f1 b0
D vector_sub
A |- (!x. (!y. (((vector_sub x) y) = (lambdai. ((real_sub (x $ i)) (y $ i))))))
T c= cvector_sub f0 f1 clambda / creal_sub c$ f0 b0 c$ f1 b0
D vec
A |- (!n. ((vec n) = (lambdai. (real_of_num n))))
T c= cvec f0 clambda / creal_of_num f0
D VECTOR_ADD_SYM
A |- (!x. (!y. (((vector_add x) y) = ((vector_add y) x))))
T c= cvector_add f0 f1 cvector_add f1 f0
D VECTOR_SUB
A |- (((vector_sub x) y) = ((vector_add x) (vector_neg y)))
T c= cvector_sub f0 f1 cvector_add f0 cvector_neg f1
D VECTOR_SUB_RZERO
A |- (((vector_sub x) (vec (NUMERAL _0))) = x)
T c= cvector_sub f0 cvec cNUMERAL c_0 f0
D drop
A |- (!x. ((drop x) = (x $ (NUMERAL (BIT1 _0)))))
T c= cdrop f0 c$ f0 cNUMERAL cBIT1 c_0
D LIFT_DROP
A |- ((!x. ((lift (drop x)) = x)) /\ (!x. ((drop (lift x)) = x)))
T c/\ ! c= clift cdrop b0 b0 ! c= cdrop clift b0 b0
D LIFT_EQ
A |- (!x. (!y. (((lift x) = (lift y)) = (x = y))))
T c= c= clift f0 clift f1 c= f0 f1
D LIFT_NUM
A |- (!n. ((lift (real_of_num n)) = (vec n)))
T c= clift creal_of_num f0 cvec f0
D LIFT_SUB
A |- (!x. (!y. ((lift ((real_sub x) y)) = ((vector_sub (lift x)) (lift y)))))
T c= clift creal_sub f0 f1 cvector_sub clift f0 clift f1
D LIFT_CMUL
A |- (!x. (!c. ((lift ((real_mul c) x)) = ((% c) (lift x)))))
T c= clift creal_mul f0 f1 c% f0 clift f1
D LINEAR_FSTCART
A |- (linear fstcart)
T clinear part cfstcart
D LINEAR_SNDCART
A |- (linear sndcart)
T clinear part csndcart
D COLLINEAR_3
A |- (!x. (!y. (!z. ((collinear (x INSERT (y INSERT (z INSERT EMPTY)))) = (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub x) y) INSERT (((vector_sub z) y) INSERT EMPTY))))))))
T c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY
D DOT_CAUCHY_SCHWARZ_EQUAL
A |- (!x. (!y. ((((real_pow ((dot x) y)) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul ((dot x) x)) ((dot y) y))) = (collinear ((vec (NUMERAL _0)) INSERT (x INSERT (y INSERT EMPTY)))))))
T c= c= creal_pow cdot f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul cdot f0 f0 cdot f1 f1 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
D closed
A |- (!s. ((closed s) = (open (UNIV DIFF s))))
T c= cclosed f0 copen * * part cDIFF part cUNIV f0
D CLOSED_UNIV
A |- (closed UNIV)
T cclosed part cUNIV
D CLOSED_UNION
A |- (!s. (!t. (((closed s) /\ (closed t)) ==> (closed (s UNION t)))))
T c==> c/\ cclosed f0 cclosed f1 cclosed * * part cUNION f0 f1
D CLOSED_INTER
A |- (!s. (!t. (((closed s) /\ (closed t)) ==> (closed (s INTER t)))))
T c==> c/\ cclosed f0 cclosed f1 cclosed * * part cINTER f0 f1
D CLOSED_IN_CLOSED
A |- (!s. (!u. (((closed_in ((subtopology euclidean) u)) s) = (?t. ((closed t) /\ (s = (u INTER t)))))))
T c= cclosed_in csubtopology ceuclidean f0 f1 c? / c/\ cclosed b0 c= f1 * * part cINTER f0 b0
D CLOSED_SING
A |- (!a. (closed (a INSERT EMPTY)))
T cclosed * * part cINSERT f0 part cEMPTY
D CONTINUOUS_AT_WITHIN
A |- (!f. (!x. (!s. (((continuous f) (at x)) ==> ((continuous f) ((within (at x)) s))))))
T c==> ccontinuous f0 cat f1 ccontinuous f0 cwithin cat f1 f2
D CONTINUOUS_AT_IMP_CONTINUOUS_ON
A |- (!f. (!s. ((!x. ((x IN s) ==> ((continuous f) (at x)))) ==> ((continuous_on f) s))))
T c==> ! c==> cIN b0 f0 ccontinuous f1 cat b0 ccontinuous_on f1 f0
D CONTINUOUS_ON_EQ_CONTINUOUS_AT
A |- (!f. (!s. ((open s) ==> (((continuous_on f) s) = (!x. ((x IN s) ==> ((continuous f) (at x))))))))
T c==> copen f0 c= ccontinuous_on f1 f0 ! c==> cIN b0 f0 ccontinuous f1 cat b0
D CONTINUOUS_ON_EQ
A |- (!f. (!g. (!s. (((!x. ((x IN s) ==> ((f x) = (g x)))) /\ ((continuous_on f) s)) ==> ((continuous_on g) s)))))
T c==> c/\ ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 ccontinuous_on f1 f0 ccontinuous_on f2 f0
D CONTINUOUS_CONST
A |- (!net. (!c. ((continuous (\x. c)) net)))
T ccontinuous / f0 f1
D CONTINUOUS_SUB
A |- (!f. (!g. (!net. ((((continuous f) net) /\ ((continuous g) net)) ==> ((continuous (\x. ((vector_sub (f x)) (g x)))) net)))))
T c==> c/\ ccontinuous f0 f1 ccontinuous f2 f1 ccontinuous / cvector_sub * f0 b0 * f2 b0 f1
D CONTINUOUS_ON_SUB
A |- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 ccontinuous_on / cvector_sub * f0 b0 * f2 b0 f1
D CONTINUOUS_WITHIN_COMPOSE
A |- (!f. (!g. (!x. (!s. ((((continuous f) ((within (at x)) s)) /\ ((continuous g) ((within (at (f x))) ((IMAGE f) s)))) ==> ((continuous (g o f)) ((within (at x)) s)))))))
T c==> c/\ ccontinuous f0 cwithin cat f1 f2 ccontinuous f3 cwithin cat * f0 f1 * * part cIMAGE f0 f2 ccontinuous * * part co f3 f0 cwithin cat f1 f2
D CONTINUOUS_AT_COMPOSE
A |- (!f. (!g. (!x. ((((continuous f) (at x)) /\ ((continuous g) (at (f x)))) ==> ((continuous (g o f)) (at x))))))
T c==> c/\ ccontinuous f0 cat f1 ccontinuous f2 cat * f0 f1 ccontinuous * * part co f2 f0 cat f1
D CONTINUOUS_ON_COMPOSE
A |- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 ccontinuous_on * * part co f2 f0 f1
D CONTINUOUS_CLOSED_PREIMAGE
A |- (!f. (!s. (!t. ((((continuous_on f) s) /\ ((closed s) /\ (closed t))) ==> (closed (GSPEC (\GEN%PVAR%626. (?x. (((SETSPEC GEN%PVAR%626) ((x IN s) /\ ((f x) IN t))) x)))))))))
T c==> c/\ ccontinuous_on f0 f1 c/\ cclosed f1 cclosed f2 cclosed * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 f1 cIN * f0 b1 f2 b1
D LINEAR_CONTINUOUS_AT
A |- (!f. (!a. ((linear f) ==> ((continuous f) (at a)))))
T c==> clinear f0 ccontinuous f0 cat f1
D LINEAR_CONTINUOUS_ON
A |- (!f. (!s. ((linear f) ==> ((continuous_on f) s))))
T c==> clinear f0 ccontinuous_on f0 f1
D CONTINUOUS_ON_LIFT_DOT2
A |- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. (lift ((dot (f x)) (g x))))) s)))))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 ccontinuous_on / clift cdot * f0 b0 * f2 b0 f1
D CLOSED_HALFSPACE_COMPONENT_LE
A |- (!a. (!k. (closed (GSPEC (\GEN%PVAR%774. (?x. (((SETSPEC GEN%PVAR%774) ((real_le (x $ k)) a)) x)))))))
T cclosed * part cGSPEC / c? / cSETSPEC b0 creal_le c$ b1 f0 f1 b1
D CLOSED_HALFSPACE_COMPONENT_GE
A |- (!a. (!k. (closed (GSPEC (\GEN%PVAR%775. (?x. (((SETSPEC GEN%PVAR%775) ((real_ge (x $ k)) a)) x)))))))
T cclosed * part cGSPEC / c? / cSETSPEC b0 creal_ge c$ b1 f0 f1 b1
D CONTINUOUS_ON_MUL
A |- (!s. (!c. (!f. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s)))))
T c==> c/\ ccontinuous_on * * part co part clift f0 f1 ccontinuous_on f2 f1 ccontinuous_on / c% * f0 b0 * f2 b0 f1
D CONTINUOUS_PASTECART
A |- (!net. (!f. (!g. ((((continuous f) net) /\ ((continuous g) net)) ==> ((continuous (\x. ((pastecart (f x)) (g x)))) net)))))
T c==> c/\ ccontinuous f0 f1 ccontinuous f2 f1 ccontinuous / cpastecart * f0 b0 * f2 b0 f1
D CONTINUOUS_ON_UNION_LOCAL
A |- (!f. (!s. ((((closed_in ((subtopology euclidean) (s UNION t))) s) /\ (((closed_in ((subtopology euclidean) (s UNION t))) t) /\ (((continuous_on f) s) /\ ((continuous_on f) t)))) ==> ((continuous_on f) (s UNION t)))))
T c==> c/\ cclosed_in csubtopology ceuclidean * * part cUNION f0 f1 f0 c/\ cclosed_in csubtopology ceuclidean * * part cUNION f0 f1 f1 c/\ ccontinuous_on f2 f0 ccontinuous_on f2 f1 ccontinuous_on f2 * * part cUNION f0 f1
D CX_INJ
A |- (!x. (!y. (((Cx x) = (Cx y)) = (x = y))))
T c= c= cCx f0 cCx f1 c= f0 f1
D CX_SUB
A |- (!x. (!y. ((Cx ((real_sub x) y)) = ((vector_sub (Cx x)) (Cx y)))))
T c= cCx creal_sub f0 f1 cvector_sub cCx f0 cCx f1
D REAL_CONTINUOUS_CONTINUOUS
A |- (((real_continuous f) net) = ((continuous (Cx o f)) net))
T c= creal_continuous f0 f1 ccontinuous * * part co part cCx f0 f1
D CONTINUOUS_ON_CROSS
A |- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((cross (f x)) (g x)))) s)))))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 ccontinuous_on / ccross * f0 b0 * f2 b0 f1
D AFF_GE_TRANSLATION
A |- (!a. (!s. (!t. (((aff_ge ((IMAGE (\x. ((vector_add a) x))) s)) ((IMAGE (\x. ((vector_add a) x))) t)) = ((IMAGE (\x. ((vector_add a) x))) ((aff_ge s) t))))))
T c= * * part caff_ge * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 * * part cIMAGE / cvector_add f0 b0 * * part caff_ge f1 f2
D AFF_GE_2_1_0_SEMIALGEBRAIC
A |- (!x. (!y. (!z. (((~ (collinear ((vec (NUMERAL _0)) INSERT (x INSERT (y INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (x INSERT (z INSERT EMPTY)))))) ==> ((z IN ((aff_ge ((vec (NUMERAL _0)) INSERT (x INSERT EMPTY))) (y INSERT EMPTY))) = ((((cross ((cross x) y)) ((cross x) z)) = (vec (NUMERAL _0))) /\ ((real_le (real_of_num (NUMERAL _0))) ((dot ((cross x) z)) ((cross x) y)))))))))
T c==> c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c= cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c= ccross ccross f0 f1 ccross f0 f2 cvec cNUMERAL c_0 creal_le creal_of_num cNUMERAL c_0 cdot ccross f0 f2 ccross f0 f1
D AZIM_TRANSLATION
A |- (!a. (!v. (!w. (!w1. (!w2. (((((azim ((vector_add a) v)) ((vector_add a) w)) ((vector_add a) w1)) ((vector_add a) w2)) = ((((azim v) w) w1) w2)))))))
T c= cazim cvector_add f0 f1 cvector_add f0 f2 cvector_add f0 f3 cvector_add f0 f4 cazim f1 f2 f3 f4
D AZIM_EQ_0_GE_ALT
A |- (!v0. (!v1. (!w. (!x. (((~ (collinear (v0 INSERT (v1 INSERT (w INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (x INSERT EMPTY)))))) ==> ((((((azim v0) v1) w) x) = (real_of_num (NUMERAL _0))) = (x IN ((aff_ge (v0 INSERT (v1 INSERT EMPTY))) (w INSERT EMPTY)))))))))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c= c= cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 cIN f3 * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
D AZIM_IN_UPPER_HALFSPACE
A |- (!v. (!w. (!x. (!y. (((real_le ((((azim v) w) x) y)) pi) = ((real_le (real_of_num (NUMERAL _0))) ((dot ((cross ((vector_sub w) v)) ((vector_sub x) v))) ((vector_sub y) v))))))))
T c= creal_le cazim f0 f1 f2 f3 cpi creal_le creal_of_num cNUMERAL c_0 cdot ccross cvector_sub f1 f0 cvector_sub f2 f0 cvector_sub f3 f0
D AZIM_DIHV_COMPL
A |- (!v. (!w. (!v1. (!v2. (((~ (collinear (v INSERT (w INSERT (v1 INSERT EMPTY))))) /\ ((~ (collinear (v INSERT (w INSERT (v2 INSERT EMPTY))))) /\ ((real_le pi) ((((azim v) w) v1) v2)))) ==> (((((azim v) w) v1) v2) = ((real_sub ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((((dihV v) w) v1) v2))))))))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cpi cazim f0 f1 f2 f3 c= cazim f0 f1 f2 f3 creal_sub creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cdihV f0 f1 f2 f3
D AZIM_EQ_0_PI_EQ_COPLANAR
A |- (!v0. (!v1. (!w1. (!w2. (((~ (collinear (v0 INSERT (v1 INSERT (w1 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (w2 INSERT EMPTY)))))) ==> (((((((azim v0) v1) w1) w2) = (real_of_num (NUMERAL _0))) \/ (((((azim v0) v1) w1) w2) = pi)) = (coplanar (v0 INSERT (v1 INSERT (w1 INSERT (w2 INSERT EMPTY)))))))))))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c= c\/ c= cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 c= cazim f0 f1 f2 f3 cpi ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
D AZIM_DIHV_SAME_STRONG
A |- (!v. (!w. (!v1. (!v2. (((~ (collinear (v INSERT (w INSERT (v1 INSERT EMPTY))))) /\ ((~ (collinear (v INSERT (w INSERT (v2 INSERT EMPTY))))) /\ ((real_le ((((azim v) w) v1) v2)) pi))) ==> (((((azim v) w) v1) v2) = ((((dihV v) w) v1) v2)))))))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cazim f0 f1 f2 f3 cpi c= cazim f0 f1 f2 f3 cdihV f0 f1 f2 f3
D REAL_CONTINUOUS_AT_DIHV_COMPOSE
A |- (!f. (!g. (!h. (!k. (!x. (((~ (collinear ((f x) INSERT ((g x) INSERT ((h x) INSERT EMPTY))))) /\ ((~ (collinear ((f x) INSERT ((g x) INSERT ((k x) INSERT EMPTY))))) /\ (((continuous f) (at x)) /\ (((continuous g) (at x)) /\ (((continuous h) (at x)) /\ ((continuous k) (at x))))))) ==> ((real_continuous (\x. ((((dihV (f x)) (g x)) (h x)) (k x)))) (at x))))))))
T c==> c/\ c~ ccollinear * * part cINSERT * f0 f1 * * part cINSERT * f2 f1 * * part cINSERT * f3 f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT * f0 f1 * * part cINSERT * f2 f1 * * part cINSERT * f4 f1 part cEMPTY c/\ ccontinuous f0 cat f1 c/\ ccontinuous f2 cat f1 c/\ ccontinuous f3 cat f1 ccontinuous f4 cat f1 creal_continuous / cdihV * f0 b0 * f2 b0 * f3 b0 * f4 b0 cat f1
D Local_lemmas.CROSS_DOT_COPLANAR
A |- ((((dot ((cross x) y)) z) = (real_of_num (NUMERAL _0))) = (coplanar ((vec (NUMERAL _0)) INSERT (x INSERT (y INSERT (z INSERT EMPTY))))))
T c= c= cdot ccross f0 f1 f2 creal_of_num cNUMERAL c_0 ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (collinear ((f x) INSERT ((g x) INSERT ((h x) INSERT EMPTY))))), (~ (collinear ((f x) INSERT ((g x) INSERT ((k x) INSERT EMPTY))))), (~ ((k x) IN ((aff_ge ((f x) INSERT ((g x) INSERT EMPTY))) ((h x) INSERT EMPTY)))), (((continuous h) ((within (at x)) s)) /\ ((continuous k) ((within (at x)) s))), ((continuous f) ((within (at x)) s)), ((continuous g) ((within (at x)) s)) |- ((real_continuous (\x. ((((azim (f x)) (g x)) (h x)) (k x)))) ((within (at x)) s))
T c==> c~ ccollinear * * part cINSERT * f0 f1 * * part cINSERT * f2 f1 * * part cINSERT * f3 f1 part cEMPTY c==> c~ ccollinear * * part cINSERT * f0 f1 * * part cINSERT * f2 f1 * * part cINSERT * f4 f1 part cEMPTY c==> c~ cIN * f4 f1 * * part caff_ge * * part cINSERT * f0 f1 * * part cINSERT * f2 f1 part cEMPTY * * part cINSERT * f3 f1 part cEMPTY c==> c/\ ccontinuous f3 cwithin cat f1 f5 ccontinuous f4 cwithin cat f1 f5 c==> ccontinuous f0 cwithin cat f1 f5 c==> ccontinuous f2 cwithin cat f1 f5 creal_continuous / cazim * f0 b0 * f2 b0 * f3 b0 * f4 b0 cwithin cat f1 f5
+ |- ((!h. (!k. (!x. (!s. (((~ (collinear ((f x) INSERT ((g x) INSERT ((h x) INSERT EMPTY))))) /\ ((~ (collinear ((f x) INSERT ((g x) INSERT ((k x) INSERT EMPTY))))) /\ ((~ ((k x) IN ((aff_ge ((f x) INSERT ((g x) INSERT EMPTY))) ((h x) INSERT EMPTY)))) /\ (((continuous f) ((within (at x)) s)) /\ (((continuous g) ((within (at x)) s)) /\ (((continuous h) ((within (at x)) s)) /\ ((continuous k) ((within (at x)) s)))))))) ==> ((real_continuous (\x. ((((azim (f x)) (g x)) (h x)) (k x)))) ((within (at x)) s))))))) = T)
T c= ! ! ! ! c==> c/\ c~ ccollinear * * part cINSERT * f0 b2 * * part cINSERT * f1 b2 * * part cINSERT * b0 b2 part cEMPTY c/\ c~ ccollinear * * part cINSERT * f0 b2 * * part cINSERT * f1 b2 * * part cINSERT * b1 b2 part cEMPTY c/\ c~ cIN * b1 b2 * * part caff_ge * * part cINSERT * f0 b2 * * part cINSERT * f1 b2 part cEMPTY * * part cINSERT * b0 b2 part cEMPTY c/\ ccontinuous f0 cwithin cat b2 b3 c/\ ccontinuous f1 cwithin cat b2 b3 c/\ ccontinuous b0 cwithin cat b2 b3 ccontinuous b1 cwithin cat b2 b3 creal_continuous / cazim * f0 b4 * f1 b4 * b0 b4 * b1 b4 cwithin cat b2 b3 cT
+ (~ (collinear ((f x) INSERT ((g x) INSERT ((h x) INSERT EMPTY))))), (~ (collinear ((f x) INSERT ((g x) INSERT ((k x) INSERT EMPTY))))), ((~ (collinear ((f x) INSERT ((g x) INSERT ((k x) INSERT EMPTY))))) /\ ((~ ((k x) IN ((aff_ge ((f x) INSERT ((g x) INSERT EMPTY))) ((h x) INSERT EMPTY)))) /\ (((continuous f) ((within (at x)) s)) /\ (((continuous g) ((within (at x)) s)) /\ (((continuous h) ((within (at x)) s)) /\ ((continuous k) ((within (at x)) s))))))) |- ((real_continuous (\x. ((((azim (f x)) (g x)) (h x)) (k x)))) ((within (at x)) s))
T c==> c~ ccollinear * * part cINSERT * f0 f1 * * part cINSERT * f2 f1 * * part cINSERT * f3 f1 part cEMPTY c==> c~ ccollinear * * part cINSERT * f0 f1 * * part cINSERT * f2 f1 * * part cINSERT * f4 f1 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT * f0 f1 * * part cINSERT * f2 f1 * * part cINSERT * f4 f1 part cEMPTY c/\ c~ cIN * f4 f1 * * part caff_ge * * part cINSERT * f0 f1 * * part cINSERT * f2 f1 part cEMPTY * * part cINSERT * f3 f1 part cEMPTY c/\ ccontinuous f0 cwithin cat f1 f5 c/\ ccontinuous f2 cwithin cat f1 f5 c/\ ccontinuous f3 cwithin cat f1 f5 ccontinuous f4 cwithin cat f1 f5 creal_continuous / cazim * f0 b0 * f2 b0 * f3 b0 * f4 b0 cwithin cat f1 f5
+ (~ (collinear ((f x) INSERT ((g x) INSERT ((h x) INSERT EMPTY))))), (~ (collinear ((f x) INSERT ((g x) INSERT ((k x) INSERT EMPTY))))), ((~ ((k x) IN ((aff_ge ((f x) INSERT ((g x) INSERT EMPTY))) ((h x) INSERT EMPTY)))) /\ (((continuous f) ((within (at x)) s)) /\ (((continuous g) ((within (at x)) s)) /\ (((continuous h) ((within (at x)) s)) /\ ((continuous k) ((within (at x)) s)))))) |- ((real_continuous (\x. ((((azim (f x)) (g x)) (h x)) (k x)))) ((within (at x)) s))
T c==> c~ ccollinear * * part cINSERT * f0 f1 * * part cINSERT * f2 f1 * * part cINSERT * f3 f1 part cEMPTY c==> c~ ccollinear * * part cINSERT * f0 f1 * * part cINSERT * f2 f1 * * part cINSERT * f4 f1 part cEMPTY c==> c/\ c~ cIN * f4 f1 * * part caff_ge * * part cINSERT * f0 f1 * * part cINSERT * f2 f1 part cEMPTY * * part cINSERT * f3 f1 part cEMPTY c/\ ccontinuous f0 cwithin cat f1 f5 c/\ ccontinuous f2 cwithin cat f1 f5 c/\ ccontinuous f3 cwithin cat f1 f5 ccontinuous f4 cwithin cat f1 f5 creal_continuous / cazim * f0 b0 * f2 b0 * f3 b0 * f4 b0 cwithin cat f1 f5
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (x INSERT (y INSERT EMPTY))))), (~ (collinear ((vec (NUMERAL _0)) INSERT (x INSERT (z INSERT EMPTY))))) |- (T = ((~ (collinear ((vec (NUMERAL _0)) INSERT (x INSERT (y INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (x INSERT (z INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c= cT c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
+ |- ((!k. (!x. (!s. (((~ (collinear ((f x) INSERT ((g x) INSERT ((h x) INSERT EMPTY))))) /\ ((~ (collinear ((f x) INSERT ((g x) INSERT ((k x) INSERT EMPTY))))) /\ ((~ ((k x) IN ((aff_ge ((f x) INSERT ((g x) INSERT EMPTY))) ((h x) INSERT EMPTY)))) /\ (((continuous f) ((within (at x)) s)) /\ (((continuous g) ((within (at x)) s)) /\ (((continuous h) ((within (at x)) s)) /\ ((continuous k) ((within (at x)) s)))))))) ==> ((real_continuous (\x. ((((azim (f x)) (g x)) (h x)) (k x)))) ((within (at x)) s)))))) = T)
T c= ! ! ! c==> c/\ c~ ccollinear * * part cINSERT * f0 b1 * * part cINSERT * f1 b1 * * part cINSERT * f2 b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT * f0 b1 * * part cINSERT * f1 b1 * * part cINSERT * b0 b1 part cEMPTY c/\ c~ cIN * b0 b1 * * part caff_ge * * part cINSERT * f0 b1 * * part cINSERT * f1 b1 part cEMPTY * * part cINSERT * f2 b1 part cEMPTY c/\ ccontinuous f0 cwithin cat b1 b2 c/\ ccontinuous f1 cwithin cat b1 b2 c/\ ccontinuous f2 cwithin cat b1 b2 ccontinuous b0 cwithin cat b1 b2 creal_continuous / cazim * f0 b3 * f1 b3 * f2 b3 * b0 b3 cwithin cat b1 b2 cT
+ (~ (collinear ((f x) INSERT ((g x) INSERT ((h x) INSERT EMPTY))))), (~ (collinear ((f x) INSERT ((g x) INSERT ((k x) INSERT EMPTY))))), (~ ((k x) IN ((aff_ge ((f x) INSERT ((g x) INSERT EMPTY))) ((h x) INSERT EMPTY)))), (((continuous f) ((within (at x)) s)) /\ (((continuous g) ((within (at x)) s)) /\ (((continuous h) ((within (at x)) s)) /\ ((continuous k) ((within (at x)) s))))), ((continuous f) ((within (at x)) s)) |- ((real_continuous (\x. ((((azim (f x)) (g x)) (h x)) (k x)))) ((within (at x)) s))
T c==> c~ ccollinear * * part cINSERT * f0 f1 * * part cINSERT * f2 f1 * * part cINSERT * f3 f1 part cEMPTY c==> c~ ccollinear * * part cINSERT * f0 f1 * * part cINSERT * f2 f1 * * part cINSERT * f4 f1 part cEMPTY c==> c~ cIN * f4 f1 * * part caff_ge * * part cINSERT * f0 f1 * * part cINSERT * f2 f1 part cEMPTY * * part cINSERT * f3 f1 part cEMPTY c==> c/\ ccontinuous f0 cwithin cat f1 f5 c/\ ccontinuous f2 cwithin cat f1 f5 c/\ ccontinuous f3 cwithin cat f1 f5 ccontinuous f4 cwithin cat f1 f5 c==> ccontinuous f0 cwithin cat f1 f5 creal_continuous / cazim * f0 b0 * f2 b0 * f3 b0 * f4 b0 cwithin cat f1 f5
+ |- ((\v1. (!w. (!x. (((~ (collinear (v0 INSERT (v1 INSERT (w INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (x INSERT EMPTY)))))) ==> ((((((azim v0) v1) w) x) = (real_of_num (NUMERAL _0))) = (x IN ((aff_ge (v0 INSERT (v1 INSERT EMPTY))) (w INSERT EMPTY)))))))) v1)
T * / ! ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY c= c= cazim f0 b0 b1 b2 creal_of_num cNUMERAL c_0 cIN b2 * * part caff_ge * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY f1
+ |- ((((~ (collinear ((f x) INSERT ((g x) INSERT ((h x) INSERT EMPTY))))) /\ ((~ (collinear ((f x) INSERT ((g x) INSERT ((k x) INSERT EMPTY))))) /\ ((~ ((k x) IN ((aff_ge ((f x) INSERT ((g x) INSERT EMPTY))) ((h x) INSERT EMPTY)))) /\ (((continuous f) ((within (at x)) s)) /\ (((continuous g) ((within (at x)) s)) /\ (((continuous h) ((within (at x)) s)) /\ ((continuous k) ((within (at x)) s)))))))) ==> ((real_continuous (\x. ((((azim (f x)) (g x)) (h x)) (k x)))) ((within (at x)) s))) = T)
T c= c==> c/\ c~ ccollinear * * part cINSERT * f0 f1 * * part cINSERT * f2 f1 * * part cINSERT * f3 f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT * f0 f1 * * part cINSERT * f2 f1 * * part cINSERT * f4 f1 part cEMPTY c/\ c~ cIN * f4 f1 * * part caff_ge * * part cINSERT * f0 f1 * * part cINSERT * f2 f1 part cEMPTY * * part cINSERT * f3 f1 part cEMPTY c/\ ccontinuous f0 cwithin cat f1 f5 c/\ ccontinuous f2 cwithin cat f1 f5 c/\ ccontinuous f3 cwithin cat f1 f5 ccontinuous f4 cwithin cat f1 f5 creal_continuous / cazim * f0 b0 * f2 b0 * f3 b0 * f4 b0 cwithin cat f1 f5 cT
+ |- ((\w1. (!w2. (((~ (collinear (v0 INSERT (v1 INSERT (w1 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (w2 INSERT EMPTY)))))) ==> ((coplanar (v0 INSERT (v1 INSERT (w1 INSERT (w2 INSERT EMPTY))))) = ((((((azim v0) v1) w1) w2) = (real_of_num (NUMERAL _0))) \/ (((((azim v0) v1) w1) w2) = pi)))))) w1)
T * / ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c= ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c= cazim f0 f1 b0 b1 creal_of_num cNUMERAL c_0 c= cazim f0 f1 b0 b1 cpi f2
- ((~ (collinear (v0 INSERT (v1 INSERT (w1 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (w2 INSERT EMPTY)))))) |- (((~ (collinear (v0 INSERT (v1 INSERT (w1 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (w2 INSERT EMPTY)))))) /\ ((coplanar (v0 INSERT (v1 INSERT (w1 INSERT (w2 INSERT EMPTY))))) = ((((((azim v0) v1) w1) w2) = (real_of_num (NUMERAL _0))) \/ (((((azim v0) v1) w1) w2) = pi))))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c= ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c= cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 c= cazim f0 f1 f2 f3 cpi
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- (~ ((k x) IN ((aff_ge ((f x) INSERT ((g x) INSERT EMPTY))) ((h x) INSERT EMPTY)))) |- (((k x) IN ((aff_ge ((f x) INSERT ((g x) INSERT EMPTY))) ((h x) INSERT EMPTY))) = F)
T c==> c~ cIN * f0 f1 * * part caff_ge * * part cINSERT * f2 f1 * * part cINSERT * f3 f1 part cEMPTY * * part cINSERT * f4 f1 part cEMPTY c= cIN * f0 f1 * * part caff_ge * * part cINSERT * f2 f1 * * part cINSERT * f3 f1 part cEMPTY * * part cINSERT * f4 f1 part cEMPTY cF
- ((real_le ((dot ((cross x) y)) z)) (real_of_num (NUMERAL _0))) |- (((real_le ((dot ((cross x) y)) z)) (real_of_num (NUMERAL _0))) = T)
T c==> creal_le cdot ccross f0 f1 f2 creal_of_num cNUMERAL c_0 c= creal_le cdot ccross f0 f1 f2 creal_of_num cNUMERAL c_0 cT
- (~ (collinear ((f x) INSERT ((g x) INSERT ((k x) INSERT EMPTY))))) |- ((collinear ((f x) INSERT ((g x) INSERT ((k x) INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT * f0 f1 * * part cINSERT * f2 f1 * * part cINSERT * f3 f1 part cEMPTY c= ccollinear * * part cINSERT * f0 f1 * * part cINSERT * f2 f1 * * part cINSERT * f3 f1 part cEMPTY cF
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- ((continuous k) ((within (at x)) s)) |- (((continuous k) ((within (at x)) s)) = T)
T c==> ccontinuous f0 cwithin cat f1 f2 c= ccontinuous f0 cwithin cat f1 f2 cT
- ((~ (collinear (v0 INSERT (v1 INSERT (w INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (x INSERT EMPTY)))))) |- (((~ (collinear (v0 INSERT (v1 INSERT (w INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (x INSERT EMPTY)))))) /\ ((((((azim v0) v1) w) x) = (real_of_num (NUMERAL _0))) = (x IN ((aff_ge (v0 INSERT (v1 INSERT EMPTY))) (w INSERT EMPTY)))))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c= c= cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 cIN f3 * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
