N IN_CLOSURE_CONNECTED_COMPONENT
C |- (!x. (!y. (((x IN s) /\ (open s)) ==> ((x IN (closure ((connected_component s) y))) = (x IN ((connected_component s) y))))))
T c==> c/\ cIN f0 f1 copen f1 c= cIN f0 * part cclosure * * part cconnected_component f1 f2 cIN f0 * * part cconnected_component f1 f2
D TRUTH
A |- T
T cT
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D MEMBER_NOT_EMPTY
A |- (!s. ((?x. (x IN s)) = (~ (s = EMPTY))))
T c= c? / cIN b0 f0 c~ c= f0 part cEMPTY
D CLOSURE_SUBSET
A |- (!s. (s SUBSET (closure s)))
T cSUBSET f0 * part cclosure f0
D OPEN_INTER_CLOSURE_EQ_EMPTY
A |- (!s. (!t. ((open s) ==> (((s INTER (closure t)) = EMPTY) = ((s INTER t) = EMPTY)))))
T c==> copen f0 c= c= * * part cINTER f0 * part cclosure f1 part cEMPTY c= * * part cINTER f0 f1 part cEMPTY
D CONNECTED_COMPONENT_REFL_EQ
A |- (!s. (!x. ((((connected_component s) x) x) = (x IN s))))
T c= cconnected_component f0 f1 f1 cIN f1 f0
D CONNECTED_COMPONENT_OVERLAP
A |- (!s. (!a. (!b. ((~ ((((connected_component s) a) INTER ((connected_component s) b)) = EMPTY)) = ((a IN s) /\ ((b IN s) /\ (((connected_component s) a) = ((connected_component s) b))))))))
T c= c~ c= * * part cINTER * * part cconnected_component f0 f1 * * part cconnected_component f0 f2 part cEMPTY c/\ cIN f1 f0 c/\ cIN f2 f0 c= * * part cconnected_component f0 f1 * * part cconnected_component f0 f2
D OPEN_CONNECTED_COMPONENT
A |- (!s. (!x. ((open s) ==> (open ((connected_component s) x)))))
T c==> copen f0 copen * * part cconnected_component f0 f1
+ (open s), (x IN s), (x IN (closure ((connected_component s) y))) |- ((x IN (closure ((connected_component s) y))) /\ (x IN ((connected_component s) y)))
T c==> copen f0 c==> cIN f1 f0 c==> cIN f1 * part cclosure * * part cconnected_component f0 f2 c/\ cIN f1 * part cclosure * * part cconnected_component f0 f2 cIN f1 * * part cconnected_component f0 f2
+ (~ ((((connected_component s) x) INTER (closure ((connected_component s) y))) = EMPTY)), (open s) |- (x IN ((connected_component s) y))
T c==> c~ c= * * part cINTER * * part cconnected_component f0 f1 * part cclosure * * part cconnected_component f0 f2 part cEMPTY c==> copen f0 cIN f1 * * part cconnected_component f0 f2
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
- (open s) |- ((open s) /\ (((s INTER (closure t)) = EMPTY) = ((s INTER t) = EMPTY)))
T c==> copen f0 c/\ copen f0 c= c= * * part cINTER f0 * part cclosure f1 part cEMPTY c= * * part cINTER f0 f1 part cEMPTY
+ |- (((!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) ==> ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)) = ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s))
T c= c==> ! ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
+ |- ((\q'. (((~ ((((connected_component s) x) INTER (closure ((connected_component s) y))) = EMPTY)) = p') ==> ((p' ==> ((x IN ((connected_component s) y)) = q')) ==> (((~ ((((connected_component s) x) INTER (closure ((connected_component s) y))) = EMPTY)) ==> (x IN ((connected_component s) y))) = (p' ==> q'))))) q')
T * / c==> c= c~ c= * * part cINTER * * part cconnected_component f0 f1 * part cclosure * * part cconnected_component f0 f2 part cEMPTY f3 c==> c==> f3 c= cIN f1 * * part cconnected_component f0 f2 b0 c= c==> c~ c= * * part cINTER * * part cconnected_component f0 f1 * part cclosure * * part cconnected_component f0 f2 part cEMPTY cIN f1 * * part cconnected_component f0 f2 c==> f3 b0 f4
+ |- (((!s. (!x. ((open s) ==> (open ((connected_component s) x))))) ==> ((\s. (!x. ((open s) ==> (open ((connected_component s) x))))) s)) = ((\s. (!x. ((open s) ==> (open ((connected_component s) x))))) s))
T c= c==> ! ! c==> copen b0 copen * * part cconnected_component b0 b1 * / ! c==> copen b0 copen * * part cconnected_component b0 b1 f0 * / ! c==> copen b0 copen * * part cconnected_component b0 b1 f0
+ |- ((\x. ((open s) ==> (open ((connected_component s) x)))) x)
T * / c==> copen f0 copen * * part cconnected_component f0 b0 f1
+ (open s), (x IN s) |- (((x IN (closure ((connected_component s) y))) ==> (x IN ((connected_component s) y))) /\ ((x IN ((connected_component s) y)) ==> (x IN (closure ((connected_component s) y)))))
T c==> copen f0 c==> cIN f1 f0 c/\ c==> cIN f1 * part cclosure * * part cconnected_component f0 f2 cIN f1 * * part cconnected_component f0 f2 c==> cIN f1 * * part cconnected_component f0 f2 cIN f1 * part cclosure * * part cconnected_component f0 f2
- (~ ((((connected_component s) x) INTER ((connected_component s) y)) = EMPTY)) |- ((EMPTY = (((connected_component s) x) INTER ((connected_component s) y))) = F)
T c==> c~ c= * * part cINTER * * part cconnected_component f0 f1 * * part cconnected_component f0 f2 part cEMPTY c= c= part cEMPTY * * part cINTER * * part cconnected_component f0 f1 * * part cconnected_component f0 f2 cF
+ (x IN s) |- (T = (x IN ((connected_component s) x)))
T c==> cIN f0 f1 c= cT cIN f0 * * part cconnected_component f1 f0
+ |- (((!s. (!x. ((((connected_component s) x) x) = (x IN s)))) ==> ((\s. (!x. ((((connected_component s) x) x) = (x IN s)))) s)) = ((\s. (!x. ((((connected_component s) x) x) = (x IN s)))) s))
T c= c==> ! ! c= cconnected_component b0 b1 b1 cIN b1 b0 * / ! c= cconnected_component b0 b1 b1 cIN b1 b0 f0 * / ! c= cconnected_component b0 b1 b1 cIN b1 b0 f0
- (open s) |- (T = (open s))
T c==> copen f0 c= cT copen f0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (x IN (closure ((connected_component s) y))) |- ((x IN (closure ((connected_component s) y))) = T)
T c==> cIN f0 * part cclosure * * part cconnected_component f1 f2 c= cIN f0 * part cclosure * * part cconnected_component f1 f2 cT
+ |- (T = ((x IN ((connected_component s) y)) ==> (x IN (closure ((connected_component s) y)))))
T c= cT c==> cIN f0 * * part cconnected_component f1 f2 cIN f0 * part cclosure * * part cconnected_component f1 f2
+ |- ((\a. (!b. ((~ ((((connected_component s) a) INTER ((connected_component s) b)) = EMPTY)) = ((a IN s) /\ ((b IN s) /\ (((connected_component s) a) = ((connected_component s) b))))))) a)
T * / ! c= c~ c= * * part cINTER * * part cconnected_component f0 b0 * * part cconnected_component f0 b1 part cEMPTY c/\ cIN b0 f0 c/\ cIN b1 f0 c= * * part cconnected_component f0 b0 * * part cconnected_component f0 b1 f1
+ |- ((\s. (!t. ((open s) ==> (((s INTER (closure t)) = EMPTY) = ((s INTER t) = EMPTY))))) s)
T * / ! c==> copen b0 c= c= * * part cINTER b0 * part cclosure b1 part cEMPTY c= * * part cINTER b0 b1 part cEMPTY f0
+ |- (((!s. (!t. ((open s) ==> (((s INTER (closure t)) = EMPTY) = ((s INTER t) = EMPTY))))) ==> ((\s. (!t. ((open s) ==> (((s INTER (closure t)) = EMPTY) = ((s INTER t) = EMPTY))))) s)) = ((\s. (!t. ((open s) ==> (((s INTER (closure t)) = EMPTY) = ((s INTER t) = EMPTY))))) s))
T c= c==> ! ! c==> copen b0 c= c= * * part cINTER b0 * part cclosure b1 part cEMPTY c= * * part cINTER b0 b1 part cEMPTY * / ! c==> copen b0 c= c= * * part cINTER b0 * part cclosure b1 part cEMPTY c= * * part cINTER b0 b1 part cEMPTY f0 * / ! c==> copen b0 c= c= * * part cINTER b0 * part cclosure b1 part cEMPTY c= * * part cINTER b0 b1 part cEMPTY f0
- |- ((!x. t) = t)
T c= ! f0 f0
+ (open s) |- (((((connected_component s) x) INTER (closure ((connected_component s) y))) = EMPTY) = ((((connected_component s) x) INTER ((connected_component s) y)) = EMPTY))
T c==> copen f0 c= c= * * part cINTER * * part cconnected_component f0 f1 * part cclosure * * part cconnected_component f0 f2 part cEMPTY c= * * part cINTER * * part cconnected_component f0 f1 * * part cconnected_component f0 f2 part cEMPTY
+ (open s) |- (((~ ((((connected_component s) x) INTER ((connected_component s) y)) = EMPTY)) ==> ((x IN ((connected_component s) y)) = q')) ==> (((~ ((((connected_component s) x) INTER (closure ((connected_component s) y))) = EMPTY)) ==> (x IN ((connected_component s) y))) = ((~ ((((connected_component s) x) INTER ((connected_component s) y)) = EMPTY)) ==> q')))
T c==> copen f0 c==> c==> c~ c= * * part cINTER * * part cconnected_component f0 f1 * * part cconnected_component f0 f2 part cEMPTY c= cIN f1 * * part cconnected_component f0 f2 f3 c= c==> c~ c= * * part cINTER * * part cconnected_component f0 f1 * part cclosure * * part cconnected_component f0 f2 part cEMPTY cIN f1 * * part cconnected_component f0 f2 c==> c~ c= * * part cINTER * * part cconnected_component f0 f1 * * part cconnected_component f0 f2 part cEMPTY f3
- |- ((?x'. t) = t)
T c= c? / f0 f0
- (open s) |- (T = (open ((connected_component s) x)))
T c==> copen f0 c= cT copen * * part cconnected_component f0 f1
- |- ((x = x) = T)
T c= c= f0 f0 cT
- (open s) |- ((open s) = T)
T c==> copen f0 c= copen f0 cT
- (open s) |- ((open s) /\ ((open ((connected_component s) x)) = T))
T c==> copen f0 c/\ copen f0 c= copen * * part cconnected_component f0 f1 cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((open s) ==> ((open ((connected_component s) x)) = T))
T c==> copen f0 c= copen * * part cconnected_component f0 f1 cT
- (~ ((((connected_component s) x) INTER ((connected_component s) y)) = EMPTY)) |- (~ (EMPTY = (((connected_component s) x) INTER ((connected_component s) y))))
T c==> c~ c= * * part cINTER * * part cconnected_component f0 f1 * * part cconnected_component f0 f2 part cEMPTY c~ c= part cEMPTY * * part cINTER * * part cconnected_component f0 f1 * * part cconnected_component f0 f2
- (EMPTY = (((connected_component s) x) INTER ((connected_component s) y))) |- ((((connected_component s) x) INTER ((connected_component s) y)) = EMPTY)
T c==> c= part cEMPTY * * part cINTER * * part cconnected_component f0 f1 * * part cconnected_component f0 f2 c= * * part cINTER * * part cconnected_component f0 f1 * * part cconnected_component f0 f2 part cEMPTY
- (~ ((((connected_component s) x) INTER ((connected_component s) y)) = EMPTY)) |- (((((connected_component s) x) INTER ((connected_component s) y)) = EMPTY) = F)
T c==> c~ c= * * part cINTER * * part cconnected_component f0 f1 * * part cconnected_component f0 f2 part cEMPTY c= c= * * part cINTER * * part cconnected_component f0 f1 * * part cconnected_component f0 f2 part cEMPTY cF
- (~ ((((connected_component s) x) INTER ((connected_component s) y)) = EMPTY)) |- (((~ (EMPTY = (((connected_component s) x) INTER ((connected_component s) y)))) ==> ((EMPTY = (((connected_component s) x) INTER ((connected_component s) y))) = F)) = ((EMPTY = (((connected_component s) x) INTER ((connected_component s) y))) = F))
T c==> c~ c= * * part cINTER * * part cconnected_component f0 f1 * * part cconnected_component f0 f2 part cEMPTY c= c==> c~ c= part cEMPTY * * part cINTER * * part cconnected_component f0 f1 * * part cconnected_component f0 f2 c= c= part cEMPTY * * part cINTER * * part cconnected_component f0 f1 * * part cconnected_component f0 f2 cF c= c= part cEMPTY * * part cINTER * * part cconnected_component f0 f1 * * part cconnected_component f0 f2 cF
- ((((connected_component s) x) INTER ((connected_component s) y)) = EMPTY) |- (EMPTY = (((connected_component s) x) INTER ((connected_component s) y)))
T c==> c= * * part cINTER * * part cconnected_component f0 f1 * * part cconnected_component f0 f2 part cEMPTY c= part cEMPTY * * part cINTER * * part cconnected_component f0 f1 * * part cconnected_component f0 f2
