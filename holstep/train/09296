N Fan.module_of_vector
C |- (!x. (!v. (!u. (!w. (!r. (!psi. (!h. (((~ (v = x)) /\ ((~ (u = x)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r) /\ (w = ((vector_add ((% ((real_mul r) (cos psi))) (((e1_fan x) v) u))) ((vector_add ((% ((real_mul r) (sin psi))) (((e2_fan x) v) u))) ((% h) ((vector_sub v) x))))))))) ==> ((sqrt ((real_add ((real_pow ((dot ((cross w) (((e3_fan x) v) u))) (((e1_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot ((cross w) (((e3_fan x) v) u))) (((e2_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0)))))) = r)))))))))
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f2 f1 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 c= f4 cvector_add c% creal_mul f3 ccos f5 ce1_fan f1 f0 f2 cvector_add c% creal_mul f3 csin f5 ce2_fan f1 f0 f2 c% f6 cvector_sub f0 f1 c= csqrt creal_add creal_pow cdot ccross f4 ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot ccross f4 ce3_fan f1 f0 f2 ce2_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f3
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D BIT0
A |- (!n. ((BIT0 n) = (n + n)))
T c= cBIT0 f0 c+ f0 f0
D BIT1
A |- (!n. ((BIT1 n) = (SUC (n + n))))
T c= cBIT1 f0 cSUC c+ f0 f0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D Ssrnat.expnS
A |- (!m. (!n. ((m EXP (SUC n)) = (m * (m EXP n)))))
T c= cEXP f0 cSUC f1 c* f0 cEXP f0 f1
D Ssrnat.expn0
A |- (!m. ((m EXP (NUMERAL _0)) = (NUMERAL (BIT1 _0))))
T c= cEXP f0 cNUMERAL c_0 cNUMERAL cBIT1 c_0
D EXP_ADD
A |- (!m. (!n. (!p. ((m EXP (n + p)) = ((m EXP n) * (m EXP p))))))
T c= cEXP f0 c+ f1 f2 c* cEXP f0 f1 cEXP f0 f2
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D ARITH_EVEN
A |- ((!n. ((EVEN (NUMERAL n)) = (EVEN n))) /\ (((EVEN _0) = T) /\ ((!n. ((EVEN (BIT0 n)) = T)) /\ (!n. ((EVEN (BIT1 n)) = F)))))
T c/\ ! c= cEVEN cNUMERAL b0 cEVEN b0 c/\ c= cEVEN c_0 cT c/\ ! c= cEVEN cBIT0 b0 cT ! c= cEVEN cBIT1 b0 cF
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_OF_NUM_POW
A |- (!x. (!n. (((real_pow (real_of_num x)) n) = (real_of_num (x EXP n)))))
T c= creal_pow creal_of_num f0 f1 creal_of_num cEXP f0 f1
D REAL_POW_NEG
A |- (!x. (!n. (((real_pow (real_neg x)) n) = (((COND (EVEN n)) ((real_pow x) n)) (real_neg ((real_pow x) n))))))
T c= creal_pow creal_neg f0 f1 cCOND cEVEN f1 creal_pow f0 f1 creal_neg creal_pow f0 f1
D REAL_LT_IMP_LE
A |- (!x. (!y. (((real_lt x) y) ==> ((real_le x) y))))
T c==> creal_lt f0 f1 creal_le f0 f1
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_POW_MUL
A |- (!x. (!y. (!n. (((real_pow ((real_mul x) y)) n) = ((real_mul ((real_pow x) n)) ((real_pow y) n))))))
T c= creal_pow creal_mul f0 f1 f2 creal_mul creal_pow f0 f2 creal_pow f1 f2
D POW_2_SQRT
A |- (!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x)))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c= csqrt creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 f0
D DOT_SYM
A |- (!x. (!y. (((dot x) y) = ((dot y) x))))
T c= cdot f0 f1 cdot f1 f0
D DOT_LADD
A |- (!x. (!y. (!z. (((dot ((vector_add x) y)) z) = ((real_add ((dot x) z)) ((dot y) z))))))
T c= cdot cvector_add f0 f1 f2 creal_add cdot f0 f2 cdot f1 f2
D DOT_LMUL
A |- (!c. (!x. (!y. (((dot ((% c) x)) y) = ((real_mul c) ((dot x) y))))))
T c= cdot c% f0 f1 f2 creal_mul f0 cdot f1 f2
D DOT_LNEG
A |- (!x. (!y. (((dot (vector_neg x)) y) = (real_neg ((dot x) y)))))
T c= cdot cvector_neg f0 f1 creal_neg cdot f0 f1
D DOT_LZERO
A |- (!x. (((dot (vec (NUMERAL _0))) x) = (real_of_num (NUMERAL _0))))
T c= cdot cvec cNUMERAL c_0 f0 creal_of_num cNUMERAL c_0
D SIN_CIRCLE
A |- (!x. (((real_add ((real_pow (sin x)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos x)) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_pow csin f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
D Trigonometry.BKMUSOX1
A |- (!x. (!y. (((cross x) y) = (vector_neg ((cross y) x)))))
T c= ccross f0 f1 cvector_neg ccross f1 f0
D CROSS_LADD
A |- (!x. (!y. (!z. (((cross ((vector_add x) y)) z) = ((vector_add ((cross x) z)) ((cross y) z))))))
T c= ccross cvector_add f0 f1 f2 cvector_add ccross f0 f2 ccross f1 f2
D CROSS_LMUL
A |- (!c. (!x. (!y. (((cross ((% c) x)) y) = ((% c) ((cross x) y))))))
T c= ccross c% f0 f1 f2 c% f0 ccross f1 f2
D Trigonometry.AXBTGQX
A |- (!e1. (!e2. (!e3. ((((orthonormal e1) e2) e3) = ((((dot e1) e1) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e2) e2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e3) e3) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e1) e2) = (real_of_num (NUMERAL _0))) /\ ((((dot e1) e3) = (real_of_num (NUMERAL _0))) /\ ((((dot e2) e3) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross e1) e2)) e3))))))))))))
T c= corthonormal f0 f1 f2 c/\ c= cdot f0 f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot f1 f1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot f2 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot f0 f1 creal_of_num cNUMERAL c_0 c/\ c= cdot f0 f2 creal_of_num cNUMERAL c_0 c/\ c= cdot f1 f2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross f0 f1 f2
D ORTHONORMAL_CROSS
A |- (!e1. (!e2. (!e3. ((((orthonormal e1) e2) e3) ==> ((((cross e2) e3) = e1) /\ ((((cross e3) e1) = e2) /\ (((cross e1) e2) = e3)))))))
T c==> corthonormal f0 f1 f2 c/\ c= ccross f1 f2 f0 c/\ c= ccross f2 f0 f1 c= ccross f0 f1 f2
D Fan.orthonormal_e1_e2_e3_fan
A |- (!x. (!v. (!u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u))))))
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f2 f1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY corthonormal ce1_fan f1 f0 f2 ce2_fan f1 f0 f2 ce3_fan f1 f0 f2
D Fan.vcross_e3_fan
A |- (!x. (!v. (!u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((cross ((vector_sub v) x)) (((e3_fan x) v) u)) = (vec (NUMERAL _0)))))))
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f2 f1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c= ccross cvector_sub f0 f1 ce3_fan f1 f0 f2 cvec cNUMERAL c_0
- |- ((real_neg ((real_sub ((real_mul a) (real_of_num (NUMERAL (BIT1 _0))))) a)) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_mul f0 creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ |- ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0))))
T c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0
+ |- (((((BIT1 _0) EXP _0) = (BIT1 _0)) ==> ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0))))) = ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0)))))
T c= c==> c= cEXP cBIT1 c_0 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0
+ |- (((!x. (!y. (((cross ((% c) x)) y) = ((% c) ((cross x) y))))) ==> ((\x. (!y. (((cross ((% c) x)) y) = ((% c) ((cross x) y))))) x)) = ((\x. (!y. (((cross ((% c) x)) y) = ((% c) ((cross x) y))))) x))
T c= c==> ! ! c= ccross c% f0 b0 b1 c% f0 ccross b0 b1 * / ! c= ccross c% f0 b0 b1 c% f0 ccross b0 b1 f1 * / ! c= ccross c% f0 b0 b1 c% f0 ccross b0 b1 f1
+ |- (((!y. (((dot ((% c) x)) y) = ((real_mul c) ((dot x) y)))) ==> ((\y. (((dot ((% c) x)) y) = ((real_mul c) ((dot x) y)))) y)) = ((\y. (((dot ((% c) x)) y) = ((real_mul c) ((dot x) y)))) y))
T c= c==> ! c= cdot c% f0 f1 b0 creal_mul f0 cdot f1 b0 * / c= cdot c% f0 f1 b0 creal_mul f0 cdot f1 b0 f2 * / c= cdot c% f0 f1 b0 creal_mul f0 cdot f1 b0 f2
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))), (~ (u = x)), (~ (v = x)), ((((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (((e1_fan x) v) u)) /\ ((((cross (((e3_fan x) v) u)) (((e1_fan x) v) u)) = (((e2_fan x) v) u)) /\ (((cross (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (((e3_fan x) v) u)))), ((real_lt (real_of_num (NUMERAL _0))) r), (((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u)) |- ((sqrt ((real_add ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) ((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) (((e1_fan x) v) u))) ((% h) ((cross ((vector_sub v) x)) (((e3_fan x) v) u)))))) (((e1_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) ((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) (((e1_fan x) v) u))) ((% h) ((cross ((vector_sub v) x)) (((e3_fan x) v) u)))))) (((e2_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0)))))) = r)
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c==> c~ c= f2 f1 c==> c~ c= f0 f1 c==> c/\ c= ccross ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 c/\ c= ccross ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 ce2_fan f1 f0 f2 c= ccross ce1_fan f1 f0 f2 ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> corthonormal ce1_fan f1 f0 f2 ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 c= csqrt creal_add creal_pow cdot cvector_add c% creal_mul f3 ccos f4 ccross ce1_fan f1 f0 f2 ce3_fan f1 f0 f2 cvector_add c% creal_mul f3 csin f4 ce1_fan f1 f0 f2 c% f5 ccross cvector_sub f0 f1 ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot cvector_add c% creal_mul f3 ccos f4 ccross ce1_fan f1 f0 f2 ce3_fan f1 f0 f2 cvector_add c% creal_mul f3 csin f4 ce1_fan f1 f0 f2 c% f5 ccross cvector_sub f0 f1 ce3_fan f1 f0 f2 ce2_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f3
+ |- ((\u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u)))) u)
T * / c==> c/\ c~ c= f0 f1 c/\ c~ c= b0 f1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub b0 f1 part cEMPTY corthonormal ce1_fan f1 f0 b0 ce2_fan f1 f0 b0 ce3_fan f1 f0 b0 f2
- |- ((real_neg ((real_sub (real_neg (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL _0)))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (((!y. (!n. (((real_pow ((real_mul x) y)) n) = ((real_mul ((real_pow x) n)) ((real_pow y) n))))) ==> ((\y. (!n. (((real_pow ((real_mul x) y)) n) = ((real_mul ((real_pow x) n)) ((real_pow y) n))))) y)) = ((\y. (!n. (((real_pow ((real_mul x) y)) n) = ((real_mul ((real_pow x) n)) ((real_pow y) n))))) y))
T c= c==> ! ! c= creal_pow creal_mul f0 b0 b1 creal_mul creal_pow f0 b1 creal_pow b0 b1 * / ! c= creal_pow creal_mul f0 b0 b1 creal_mul creal_pow f0 b1 creal_pow b0 b1 f1 * / ! c= creal_pow creal_mul f0 b0 b1 creal_mul creal_pow f0 b1 creal_pow b0 b1 f1
+ |- (((!c. (!x. (!y. (((dot ((% c) x)) y) = ((real_mul c) ((dot x) y)))))) ==> ((\c. (!x. (!y. (((dot ((% c) x)) y) = ((real_mul c) ((dot x) y)))))) c)) = ((\c. (!x. (!y. (((dot ((% c) x)) y) = ((real_mul c) ((dot x) y)))))) c))
T c= c==> ! ! ! c= cdot c% b0 b1 b2 creal_mul b0 cdot b1 b2 * / ! ! c= cdot c% b0 b1 b2 creal_mul b0 cdot b1 b2 f0 * / ! ! c= cdot c% b0 b1 b2 creal_mul b0 cdot b1 b2 f0
+ |- ((!v. (!u. (!w. (!r. (!psi. (!h. (((~ (v = x)) /\ ((~ (u = x)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r) /\ (w = ((vector_add ((% ((real_mul r) (cos psi))) (((e1_fan x) v) u))) ((vector_add ((% ((real_mul r) (sin psi))) (((e2_fan x) v) u))) ((% h) ((vector_sub v) x))))))))) ==> ((sqrt ((real_add ((real_pow ((dot ((cross w) (((e3_fan x) v) u))) (((e1_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot ((cross w) (((e3_fan x) v) u))) (((e2_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0)))))) = r)))))))) = T)
T c= ! ! ! ! ! ! c==> c/\ c~ c= b0 f0 c/\ c~ c= b1 f0 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b0 f0 * * part cINSERT cvector_sub b1 f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c= b2 cvector_add c% creal_mul b3 ccos b4 ce1_fan f0 b0 b1 cvector_add c% creal_mul b3 csin b4 ce2_fan f0 b0 b1 c% b5 cvector_sub b0 f0 c= csqrt creal_add creal_pow cdot ccross b2 ce3_fan f0 b0 b1 ce1_fan f0 b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot ccross b2 ce3_fan f0 b0 b1 ce2_fan f0 b0 b1 cNUMERAL cBIT0 cBIT1 c_0 b3 cT
+ |- ((\v. (!u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u))))) v)
T * / ! c==> c/\ c~ c= b0 f0 c/\ c~ c= b1 f0 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b0 f0 * * part cINSERT cvector_sub b1 f0 part cEMPTY corthonormal ce1_fan f0 b0 b1 ce2_fan f0 b0 b1 ce3_fan f0 b0 b1 f1
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))), (~ (u = x)), (~ (v = x)), ((real_lt (real_of_num (NUMERAL _0))) r), (((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u)) |- (((((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (((e1_fan x) v) u)) /\ ((((cross (((e3_fan x) v) u)) (((e1_fan x) v) u)) = (((e2_fan x) v) u)) /\ (((cross (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (((e3_fan x) v) u)))) ==> ((sqrt ((real_add ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) ((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) ((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)))) ((% h) ((cross ((vector_sub v) x)) (((e3_fan x) v) u)))))) (((e1_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) ((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) ((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)))) ((% h) ((cross ((vector_sub v) x)) (((e3_fan x) v) u)))))) (((e2_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0)))))) = r))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c==> c~ c= f2 f1 c==> c~ c= f0 f1 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> corthonormal ce1_fan f1 f0 f2 ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 c==> c/\ c= ccross ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 c/\ c= ccross ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 ce2_fan f1 f0 f2 c= ccross ce1_fan f1 f0 f2 ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 c= csqrt creal_add creal_pow cdot cvector_add c% creal_mul f3 ccos f4 ccross ce1_fan f1 f0 f2 ce3_fan f1 f0 f2 cvector_add c% creal_mul f3 csin f4 ccross ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 c% f5 ccross cvector_sub f0 f1 ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot cvector_add c% creal_mul f3 ccos f4 ccross ce1_fan f1 f0 f2 ce3_fan f1 f0 f2 cvector_add c% creal_mul f3 csin f4 ccross ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 c% f5 ccross cvector_sub f0 f1 ce3_fan f1 f0 f2 ce2_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f3
+ ((~ (v = x)) /\ ((~ (u = x)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r) /\ (w = ((vector_add ((% ((real_mul r) (cos psi))) (((e1_fan x) v) u))) ((vector_add ((% ((real_mul r) (sin psi))) (((e2_fan x) v) u))) ((% h) ((vector_sub v) x))))))))) |- (((~ (v = x)) /\ ((~ (u = x)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r) /\ (w = ((vector_add ((% ((real_mul r) (cos psi))) (((e1_fan x) v) u))) ((vector_add ((% ((real_mul r) (sin psi))) (((e2_fan x) v) u))) ((% h) ((vector_sub v) x))))))))) /\ ((sqrt ((real_add ((real_pow ((dot ((cross w) (((e3_fan x) v) u))) (((e1_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot ((cross w) (((e3_fan x) v) u))) (((e2_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0)))))) = r))
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f2 f1 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 c= f4 cvector_add c% creal_mul f3 ccos f5 ce1_fan f1 f0 f2 cvector_add c% creal_mul f3 csin f5 ce2_fan f1 f0 f2 c% f6 cvector_sub f0 f1 c/\ c/\ c~ c= f0 f1 c/\ c~ c= f2 f1 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 c= f4 cvector_add c% creal_mul f3 ccos f5 ce1_fan f1 f0 f2 cvector_add c% creal_mul f3 csin f5 ce2_fan f1 f0 f2 c% f6 cvector_sub f0 f1 c= csqrt creal_add creal_pow cdot ccross f4 ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot ccross f4 ce3_fan f1 f0 f2 ce2_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f3
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))), (~ (u = x)), (~ (v = x)), ((((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (((e1_fan x) v) u)) /\ ((((cross (((e3_fan x) v) u)) (((e1_fan x) v) u)) = (((e2_fan x) v) u)) /\ (((cross (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (((e3_fan x) v) u)))), ((real_lt (real_of_num (NUMERAL _0))) r), (((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u)) |- ((sqrt ((real_add ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) ((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) ((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)))) ((% h) ((cross ((vector_sub v) x)) (((e3_fan x) v) u)))))) (((e1_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) ((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) ((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)))) ((% h) ((cross ((vector_sub v) x)) (((e3_fan x) v) u)))))) (((e2_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0)))))) = r)
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c==> c~ c= f2 f1 c==> c~ c= f0 f1 c==> c/\ c= ccross ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 c/\ c= ccross ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 ce2_fan f1 f0 f2 c= ccross ce1_fan f1 f0 f2 ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> corthonormal ce1_fan f1 f0 f2 ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 c= csqrt creal_add creal_pow cdot cvector_add c% creal_mul f3 ccos f4 ccross ce1_fan f1 f0 f2 ce3_fan f1 f0 f2 cvector_add c% creal_mul f3 csin f4 ccross ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 c% f5 ccross cvector_sub f0 f1 ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot cvector_add c% creal_mul f3 ccos f4 ccross ce1_fan f1 f0 f2 ce3_fan f1 f0 f2 cvector_add c% creal_mul f3 csin f4 ccross ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 c% f5 ccross cvector_sub f0 f1 ce3_fan f1 f0 f2 ce2_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f3
- (!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))), ((real_le (real_of_num (NUMERAL _0))) x) |- ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) /\ ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))
T c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> creal_le creal_of_num cNUMERAL c_0 f0 c/\ ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c= csqrt creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 f0
+ (((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)) = (vector_neg ((cross (((e3_fan x) v) u)) (((e1_fan x) v) u)))), ((((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (((e1_fan x) v) u)) /\ ((((cross (((e3_fan x) v) u)) (((e1_fan x) v) u)) = (((e2_fan x) v) u)) /\ (((cross (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (((e3_fan x) v) u)))), ((real_lt (real_of_num (NUMERAL _0))) r), (((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u)) |- ((((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)) = (vector_neg ((cross (((e3_fan x) v) u)) (((e1_fan x) v) u)))) /\ ((sqrt ((real_add ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) ((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) (((e1_fan x) v) u))) ((% h) (vec (NUMERAL _0)))))) (((e1_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) ((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) (((e1_fan x) v) u))) ((% h) (vec (NUMERAL _0)))))) (((e2_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0)))))) = r))
T c==> c= ccross ce1_fan f0 f1 f2 ce3_fan f0 f1 f2 cvector_neg ccross ce3_fan f0 f1 f2 ce1_fan f0 f1 f2 c==> c/\ c= ccross ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 ce1_fan f0 f1 f2 c/\ c= ccross ce3_fan f0 f1 f2 ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 c= ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> corthonormal ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 c/\ c= ccross ce1_fan f0 f1 f2 ce3_fan f0 f1 f2 cvector_neg ccross ce3_fan f0 f1 f2 ce1_fan f0 f1 f2 c= csqrt creal_add creal_pow cdot cvector_add c% creal_mul f3 ccos f4 ccross ce1_fan f0 f1 f2 ce3_fan f0 f1 f2 cvector_add c% creal_mul f3 csin f4 ce1_fan f0 f1 f2 c% f5 cvec cNUMERAL c_0 ce1_fan f0 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot cvector_add c% creal_mul f3 ccos f4 ccross ce1_fan f0 f1 f2 ce3_fan f0 f1 f2 cvector_add c% creal_mul f3 csin f4 ce1_fan f0 f1 f2 c% f5 cvec cNUMERAL c_0 ce2_fan f0 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3
+ |- (((real_lt x) y) ==> (((real_le x) y) = T))
T c==> creal_lt f0 f1 c= creal_le f0 f1 cT
+ |- ((\x. (!y. (((real_lt x) y) ==> ((real_le x) y)))) x)
T * / ! c==> creal_lt b0 b1 creal_le b0 b1 f0
- ((((dot (((e1_fan x) v) u)) (((e1_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e2_fan x) v) u)) (((e2_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e3_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((((dot (((e1_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((((dot (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross (((e1_fan x) v) u)) (((e2_fan x) v) u))) (((e3_fan x) v) u))))))))) |- ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross (((e1_fan x) v) u)) (((e2_fan x) v) u))) (((e3_fan x) v) u)))
T c==> c/\ c= cdot ce1_fan f0 f1 f2 ce1_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce2_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce3_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_of_num cNUMERAL c_0 c/\ c= cdot ce1_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0 c/\ c= cdot ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_lt creal_of_num cNUMERAL c_0 cdot ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2
+ |- ((\e1. (!e2. (!e3. ((((orthonormal e1) e2) e3) = ((((dot e1) e1) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e2) e2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e3) e3) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e1) e2) = (real_of_num (NUMERAL _0))) /\ ((((dot e1) e3) = (real_of_num (NUMERAL _0))) /\ ((((dot e2) e3) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross e1) e2)) e3)))))))))))) e1)
T * / ! ! c= corthonormal b0 b1 b2 c/\ c= cdot b0 b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b1 b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b2 b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b0 b1 creal_of_num cNUMERAL c_0 c/\ c= cdot b0 b2 creal_of_num cNUMERAL c_0 c/\ c= cdot b1 b2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross b0 b1 b2 f0
- (~ (((real_mul a) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))) |- ((~ (((real_mul a) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))) /\ F)
T c==> c~ c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ (~ (((real_add ((real_mul d) b)) ((real_mul d) c)) = ((real_mul d) ((real_add b) c)))) |- ((~ (((real_add ((real_mul d) b)) ((real_mul d) c)) = ((real_mul d) ((real_add b) c)))) /\ F)
T c==> c~ c= creal_add creal_mul f0 f1 creal_mul f0 f2 creal_mul f0 creal_add f1 f2 c/\ c~ c= creal_add creal_mul f0 f1 creal_mul f0 f2 creal_mul f0 creal_add f1 f2 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0))) = (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0)))
T c= c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0
+ |- (((sqrt ((real_add ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) ((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) ((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)))) ((% h) ((cross ((vector_sub v) x)) (((e3_fan x) v) u)))))) (((e1_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) ((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) ((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)))) ((% h) ((cross ((vector_sub v) x)) (((e3_fan x) v) u)))))) (((e2_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0)))))) = r) = ((sqrt ((real_add ((real_pow ((dot ((cross ((vector_add ((% ((real_mul r) (cos psi))) (((e1_fan x) v) u))) ((vector_add ((% ((real_mul r) (sin psi))) (((e2_fan x) v) u))) ((% h) ((vector_sub v) x))))) (((e3_fan x) v) u))) (((e1_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot ((cross ((vector_add ((% ((real_mul r) (cos psi))) (((e1_fan x) v) u))) ((vector_add ((% ((real_mul r) (sin psi))) (((e2_fan x) v) u))) ((% h) ((vector_sub v) x))))) (((e3_fan x) v) u))) (((e2_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0)))))) = r))
T c= c= csqrt creal_add creal_pow cdot cvector_add c% creal_mul f0 ccos f1 ccross ce1_fan f2 f3 f4 ce3_fan f2 f3 f4 cvector_add c% creal_mul f0 csin f1 ccross ce2_fan f2 f3 f4 ce3_fan f2 f3 f4 c% f5 ccross cvector_sub f3 f2 ce3_fan f2 f3 f4 ce1_fan f2 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot cvector_add c% creal_mul f0 ccos f1 ccross ce1_fan f2 f3 f4 ce3_fan f2 f3 f4 cvector_add c% creal_mul f0 csin f1 ccross ce2_fan f2 f3 f4 ce3_fan f2 f3 f4 c% f5 ccross cvector_sub f3 f2 ce3_fan f2 f3 f4 ce2_fan f2 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 f0 c= csqrt creal_add creal_pow cdot ccross cvector_add c% creal_mul f0 ccos f1 ce1_fan f2 f3 f4 cvector_add c% creal_mul f0 csin f1 ce2_fan f2 f3 f4 c% f5 cvector_sub f3 f2 ce3_fan f2 f3 f4 ce1_fan f2 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot ccross cvector_add c% creal_mul f0 ccos f1 ce1_fan f2 f3 f4 cvector_add c% creal_mul f0 csin f1 ce2_fan f2 f3 f4 c% f5 cvector_sub f3 f2 ce3_fan f2 f3 f4 ce2_fan f2 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 f0
+ ((((dot (((e1_fan x) v) u)) (((e1_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e2_fan x) v) u)) (((e2_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e3_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((((dot (((e1_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((((dot (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross (((e1_fan x) v) u)) (((e2_fan x) v) u))) (((e3_fan x) v) u))))))))) |- (((dot (((e2_fan x) v) u)) (((e2_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c= cdot ce1_fan f0 f1 f2 ce1_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce2_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce3_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_of_num cNUMERAL c_0 c/\ c= cdot ce1_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0 c/\ c= cdot ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 c= cdot ce2_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0
- (!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) |- ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) /\ (!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))))
T c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0
- ((real_lt (real_of_num (NUMERAL _0))) r) |- (T = ((real_lt (real_of_num (NUMERAL _0))) r))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c= cT creal_lt creal_of_num cNUMERAL c_0 f0
+ |- (((BIT1 _0) * (BIT1 _0)) = (BIT1 _0))
T c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((\n. (((real_pow ((real_mul x) y)) n) = ((real_mul ((real_pow x) n)) ((real_pow y) n)))) n)
T * / c= creal_pow creal_mul f0 f1 b0 creal_mul creal_pow f0 b0 creal_pow f1 b0 f2
- ((real_le (real_of_num (NUMERAL _0))) x) |- ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c= csqrt creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 f0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0)) ==> ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT0 (BIT1 _0))) = (BIT1 _0)))) = ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT0 (BIT1 _0))) = (BIT1 _0))))
T c= c==> c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT0 cBIT1 c_0 cBIT1 c_0
- |- (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
+ |- (((!e1. (!e2. (!e3. ((((orthonormal e1) e2) e3) = ((((dot e1) e1) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e2) e2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e3) e3) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e1) e2) = (real_of_num (NUMERAL _0))) /\ ((((dot e1) e3) = (real_of_num (NUMERAL _0))) /\ ((((dot e2) e3) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross e1) e2)) e3)))))))))))) ==> ((\e1. (!e2. (!e3. ((((orthonormal e1) e2) e3) = ((((dot e1) e1) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e2) e2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e3) e3) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e1) e2) = (real_of_num (NUMERAL _0))) /\ ((((dot e1) e3) = (real_of_num (NUMERAL _0))) /\ ((((dot e2) e3) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross e1) e2)) e3)))))))))))) e1)) = ((\e1. (!e2. (!e3. ((((orthonormal e1) e2) e3) = ((((dot e1) e1) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e2) e2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e3) e3) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e1) e2) = (real_of_num (NUMERAL _0))) /\ ((((dot e1) e3) = (real_of_num (NUMERAL _0))) /\ ((((dot e2) e3) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross e1) e2)) e3)))))))))))) e1))
T c= c==> ! ! ! c= corthonormal b0 b1 b2 c/\ c= cdot b0 b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b1 b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b2 b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b0 b1 creal_of_num cNUMERAL c_0 c/\ c= cdot b0 b2 creal_of_num cNUMERAL c_0 c/\ c= cdot b1 b2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross b0 b1 b2 * / ! ! c= corthonormal b0 b1 b2 c/\ c= cdot b0 b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b1 b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b2 b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b0 b1 creal_of_num cNUMERAL c_0 c/\ c= cdot b0 b2 creal_of_num cNUMERAL c_0 c/\ c= cdot b1 b2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross b0 b1 b2 f0 * / ! ! c= corthonormal b0 b1 b2 c/\ c= cdot b0 b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b1 b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b2 b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b0 b1 creal_of_num cNUMERAL c_0 c/\ c= cdot b0 b2 creal_of_num cNUMERAL c_0 c/\ c= cdot b1 b2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross b0 b1 b2 f0
+ ((((dot (((e1_fan x) v) u)) (((e1_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e2_fan x) v) u)) (((e2_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e3_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((((dot (((e1_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((((dot (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross (((e1_fan x) v) u)) (((e2_fan x) v) u))) (((e3_fan x) v) u))))))))), ((real_lt (real_of_num (NUMERAL _0))) r) |- (((((dot (((e1_fan x) v) u)) (((e1_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e2_fan x) v) u)) (((e2_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e3_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((((dot (((e1_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((((dot (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross (((e1_fan x) v) u)) (((e2_fan x) v) u))) (((e3_fan x) v) u))))))))) /\ ((sqrt ((real_add ((real_pow ((real_add ((real_mul ((real_mul r) (cos psi))) (real_neg ((dot (((e2_fan x) v) u)) (((e1_fan x) v) u))))) ((real_add ((real_mul ((real_mul r) (sin psi))) ((dot (((e1_fan x) v) u)) (((e1_fan x) v) u)))) ((real_mul h) (real_of_num (NUMERAL _0)))))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add ((real_mul ((real_mul r) (cos psi))) (real_neg ((dot (((e2_fan x) v) u)) (((e2_fan x) v) u))))) ((real_add ((real_mul ((real_mul r) (sin psi))) ((dot (((e1_fan x) v) u)) (((e2_fan x) v) u)))) ((real_mul h) (real_of_num (NUMERAL _0)))))) (NUMERAL (BIT0 (BIT1 _0)))))) = r))
T c==> c/\ c= cdot ce1_fan f0 f1 f2 ce1_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce2_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce3_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_of_num cNUMERAL c_0 c/\ c= cdot ce1_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0 c/\ c= cdot ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c/\ c/\ c= cdot ce1_fan f0 f1 f2 ce1_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce2_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce3_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_of_num cNUMERAL c_0 c/\ c= cdot ce1_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0 c/\ c= cdot ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 c= csqrt creal_add creal_pow creal_add creal_mul creal_mul f3 ccos f4 creal_neg cdot ce2_fan f0 f1 f2 ce1_fan f0 f1 f2 creal_add creal_mul creal_mul f3 csin f4 cdot ce1_fan f0 f1 f2 ce1_fan f0 f1 f2 creal_mul f5 creal_of_num cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add creal_mul creal_mul f3 ccos f4 creal_neg cdot ce2_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_add creal_mul creal_mul f3 csin f4 cdot ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_mul f5 creal_of_num cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 f3
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- (((!x. (!y. (((dot (vector_neg x)) y) = (real_neg ((dot x) y))))) ==> ((\x. (!y. (((dot (vector_neg x)) y) = (real_neg ((dot x) y))))) x)) = ((\x. (!y. (((dot (vector_neg x)) y) = (real_neg ((dot x) y))))) x))
T c= c==> ! ! c= cdot cvector_neg b0 b1 creal_neg cdot b0 b1 * / ! c= cdot cvector_neg b0 b1 creal_neg cdot b0 b1 f0 * / ! c= cdot cvector_neg b0 b1 creal_neg cdot b0 b1 f0
+ |- (((!y. (!z. (((dot ((vector_add x) y)) z) = ((real_add ((dot x) z)) ((dot y) z))))) ==> ((\y. (!z. (((dot ((vector_add x) y)) z) = ((real_add ((dot x) z)) ((dot y) z))))) y)) = ((\y. (!z. (((dot ((vector_add x) y)) z) = ((real_add ((dot x) z)) ((dot y) z))))) y))
T c= c==> ! ! c= cdot cvector_add f0 b0 b1 creal_add cdot f0 b1 cdot b0 b1 * / ! c= cdot cvector_add f0 b0 b1 creal_add cdot f0 b1 cdot b0 b1 f1 * / ! c= cdot cvector_add f0 b0 b1 creal_add cdot f0 b1 cdot b0 b1 f1
+ |- ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0)))
T c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0
+ |- ((\u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((cross ((vector_sub v) x)) (((e3_fan x) v) u)) = (vec (NUMERAL _0))))) u)
T * / c==> c/\ c~ c= f0 f1 c/\ c~ c= b0 f1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub b0 f1 part cEMPTY c= ccross cvector_sub f0 f1 ce3_fan f1 f0 b0 cvec cNUMERAL c_0 f2
- (~ (((real_mul a) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (!e3. ((((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) e3) ==> ((((cross (((e2_fan x) v) u)) e3) = (((e1_fan x) v) u)) /\ ((((cross e3) (((e1_fan x) v) u)) = (((e2_fan x) v) u)) /\ (((cross (((e1_fan x) v) u)) (((e2_fan x) v) u)) = e3)))))
T c==> corthonormal ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 f3 c/\ c= ccross ce2_fan f0 f1 f2 f3 ce1_fan f0 f1 f2 c/\ c= ccross f3 ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 c= ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 f3
- |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\y. (((dot ((% c) x)) y) = ((real_mul c) ((dot x) y)))) y)
T * / c= cdot c% f0 f1 b0 creal_mul f0 cdot f1 b0 f2
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))), (~ (u = x)), (~ (v = x)), ((((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (((e1_fan x) v) u)) /\ ((((cross (((e3_fan x) v) u)) (((e1_fan x) v) u)) = (((e2_fan x) v) u)) /\ (((cross (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (((e3_fan x) v) u)))), ((real_lt (real_of_num (NUMERAL _0))) r), (((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u)) |- (((((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (((e1_fan x) v) u)) /\ ((((cross (((e3_fan x) v) u)) (((e1_fan x) v) u)) = (((e2_fan x) v) u)) /\ (((cross (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (((e3_fan x) v) u)))) /\ ((sqrt ((real_add ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) ((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) ((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)))) ((% h) ((cross ((vector_sub v) x)) (((e3_fan x) v) u)))))) (((e1_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) ((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) ((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)))) ((% h) ((cross ((vector_sub v) x)) (((e3_fan x) v) u)))))) (((e2_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0)))))) = r))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c==> c~ c= f2 f1 c==> c~ c= f0 f1 c==> c/\ c= ccross ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 c/\ c= ccross ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 ce2_fan f1 f0 f2 c= ccross ce1_fan f1 f0 f2 ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> corthonormal ce1_fan f1 f0 f2 ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 c/\ c/\ c= ccross ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 c/\ c= ccross ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 ce2_fan f1 f0 f2 c= ccross ce1_fan f1 f0 f2 ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 c= csqrt creal_add creal_pow cdot cvector_add c% creal_mul f3 ccos f4 ccross ce1_fan f1 f0 f2 ce3_fan f1 f0 f2 cvector_add c% creal_mul f3 csin f4 ccross ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 c% f5 ccross cvector_sub f0 f1 ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot cvector_add c% creal_mul f3 ccos f4 ccross ce1_fan f1 f0 f2 ce3_fan f1 f0 f2 cvector_add c% creal_mul f3 csin f4 ccross ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 c% f5 ccross cvector_sub f0 f1 ce3_fan f1 f0 f2 ce2_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f3
+ |- (((sqrt ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) = r) = ((sqrt ((real_add ((real_pow ((real_add ((real_mul ((real_mul r) (cos psi))) (real_neg (real_of_num (NUMERAL _0))))) ((real_add ((real_mul ((real_mul r) (sin psi))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul h) (real_of_num (NUMERAL _0)))))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add ((real_mul ((real_mul r) (cos psi))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((real_add ((real_mul ((real_mul r) (sin psi))) (real_of_num (NUMERAL _0)))) ((real_mul h) (real_of_num (NUMERAL _0)))))) (NUMERAL (BIT0 (BIT1 _0)))))) = r))
T c= c= csqrt creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c= csqrt creal_add creal_pow creal_add creal_mul creal_mul f0 ccos f1 creal_neg creal_of_num cNUMERAL c_0 creal_add creal_mul creal_mul f0 csin f1 creal_of_num cNUMERAL cBIT1 c_0 creal_mul f2 creal_of_num cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add creal_mul creal_mul f0 ccos f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_mul f0 csin f1 creal_of_num cNUMERAL c_0 creal_mul f2 creal_of_num cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 f0
+ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- (((!z. (((cross ((vector_add x) y)) z) = ((vector_add ((cross x) z)) ((cross y) z)))) ==> ((\z. (((cross ((vector_add x) y)) z) = ((vector_add ((cross x) z)) ((cross y) z)))) z)) = ((\z. (((cross ((vector_add x) y)) z) = ((vector_add ((cross x) z)) ((cross y) z)))) z))
T c= c==> ! c= ccross cvector_add f0 f1 b0 cvector_add ccross f0 b0 ccross f1 b0 * / c= ccross cvector_add f0 f1 b0 cvector_add ccross f0 b0 ccross f1 b0 f2 * / c= ccross cvector_add f0 f1 b0 cvector_add ccross f0 b0 ccross f1 b0 f2
+ |- (((!e3. ((((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) e3) ==> ((((cross (((e2_fan x) v) u)) e3) = (((e1_fan x) v) u)) /\ ((((cross e3) (((e1_fan x) v) u)) = (((e2_fan x) v) u)) /\ (((cross (((e1_fan x) v) u)) (((e2_fan x) v) u)) = e3))))) ==> ((\e3. ((((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) e3) ==> ((((cross (((e2_fan x) v) u)) e3) = (((e1_fan x) v) u)) /\ ((((cross e3) (((e1_fan x) v) u)) = (((e2_fan x) v) u)) /\ (((cross (((e1_fan x) v) u)) (((e2_fan x) v) u)) = e3))))) (((e3_fan x) v) u))) = ((\e3. ((((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) e3) ==> ((((cross (((e2_fan x) v) u)) e3) = (((e1_fan x) v) u)) /\ ((((cross e3) (((e1_fan x) v) u)) = (((e2_fan x) v) u)) /\ (((cross (((e1_fan x) v) u)) (((e2_fan x) v) u)) = e3))))) (((e3_fan x) v) u)))
T c= c==> ! c==> corthonormal ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 b0 c/\ c= ccross ce2_fan f0 f1 f2 b0 ce1_fan f0 f1 f2 c/\ c= ccross b0 ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 c= ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 b0 * / c==> corthonormal ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 b0 c/\ c= ccross ce2_fan f0 f1 f2 b0 ce1_fan f0 f1 f2 c/\ c= ccross b0 ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 c= ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 b0 ce3_fan f0 f1 f2 * / c==> corthonormal ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 b0 c/\ c= ccross ce2_fan f0 f1 f2 b0 ce1_fan f0 f1 f2 c/\ c= ccross b0 ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 c= ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 b0 ce3_fan f0 f1 f2
+ |- ((!psi. (!h. (((~ (v = x)) /\ ((~ (u = x)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r) /\ (w = ((vector_add ((% ((real_mul r) (cos psi))) (((e1_fan x) v) u))) ((vector_add ((% ((real_mul r) (sin psi))) (((e2_fan x) v) u))) ((% h) ((vector_sub v) x))))))))) ==> ((sqrt ((real_add ((real_pow ((dot ((cross w) (((e3_fan x) v) u))) (((e1_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot ((cross w) (((e3_fan x) v) u))) (((e2_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0)))))) = r)))) = T)
T c= ! ! c==> c/\ c~ c= f0 f1 c/\ c~ c= f2 f1 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 c= f4 cvector_add c% creal_mul f3 ccos b0 ce1_fan f1 f0 f2 cvector_add c% creal_mul f3 csin b0 ce2_fan f1 f0 f2 c% b1 cvector_sub f0 f1 c= csqrt creal_add creal_pow cdot ccross f4 ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot ccross f4 ce3_fan f1 f0 f2 ce2_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 cT
+ ((((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (((e1_fan x) v) u)) /\ ((((cross (((e3_fan x) v) u)) (((e1_fan x) v) u)) = (((e2_fan x) v) u)) /\ (((cross (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (((e3_fan x) v) u)))) |- (((cross (((e3_fan x) v) u)) (((e1_fan x) v) u)) = (((e2_fan x) v) u))
T c==> c/\ c= ccross ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 ce1_fan f0 f1 f2 c/\ c= ccross ce3_fan f0 f1 f2 ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 c= ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 c= ccross ce3_fan f0 f1 f2 ce1_fan f0 f1 f2 ce2_fan f0 f1 f2
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))), (~ (u = x)), (~ (v = x)), ((real_lt (real_of_num (NUMERAL _0))) r), (((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u)) |- ((((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u)) /\ ((sqrt ((real_add ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) ((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) ((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)))) ((% h) ((cross ((vector_sub v) x)) (((e3_fan x) v) u)))))) (((e1_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) ((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) ((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)))) ((% h) ((cross ((vector_sub v) x)) (((e3_fan x) v) u)))))) (((e2_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0)))))) = r))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c==> c~ c= f2 f1 c==> c~ c= f0 f1 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> corthonormal ce1_fan f1 f0 f2 ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 c/\ corthonormal ce1_fan f1 f0 f2 ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 c= csqrt creal_add creal_pow cdot cvector_add c% creal_mul f3 ccos f4 ccross ce1_fan f1 f0 f2 ce3_fan f1 f0 f2 cvector_add c% creal_mul f3 csin f4 ccross ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 c% f5 ccross cvector_sub f0 f1 ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot cvector_add c% creal_mul f3 ccos f4 ccross ce1_fan f1 f0 f2 ce3_fan f1 f0 f2 cvector_add c% creal_mul f3 csin f4 ccross ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 c% f5 ccross cvector_sub f0 f1 ce3_fan f1 f0 f2 ce2_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f3
- |- ((~ (((real_add a) (real_of_num (NUMERAL _0))) = a)) ==> F)
T c==> c~ c= creal_add f0 creal_of_num cNUMERAL c_0 f0 cF
+ |- (((!y. (((real_lt x) y) ==> ((real_le x) y))) ==> ((\y. (((real_lt x) y) ==> ((real_le x) y))) y)) = ((\y. (((real_lt x) y) ==> ((real_le x) y))) y))
T c= c==> ! c==> creal_lt f0 b0 creal_le f0 b0 * / c==> creal_lt f0 b0 creal_le f0 b0 f1 * / c==> creal_lt f0 b0 creal_le f0 b0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((real_lt (real_of_num (NUMERAL _0))) r) |- (T = ((real_le (real_of_num (NUMERAL _0))) r))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c= cT creal_le creal_of_num cNUMERAL c_0 f0
+ |- ((\e2. (!e3. ((((orthonormal e1) e2) e3) = ((((dot e1) e1) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e2) e2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e3) e3) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e1) e2) = (real_of_num (NUMERAL _0))) /\ ((((dot e1) e3) = (real_of_num (NUMERAL _0))) /\ ((((dot e2) e3) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross e1) e2)) e3))))))))))) e2)
T * / ! c= corthonormal f0 b0 b1 c/\ c= cdot f0 f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b0 b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b1 b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot f0 b0 creal_of_num cNUMERAL c_0 c/\ c= cdot f0 b1 creal_of_num cNUMERAL c_0 c/\ c= cdot b0 b1 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross f0 b0 b1 f1
- |- ((((~ (((real_mul a) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))) ==> F) ==> (((real_mul a) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))) = (((real_mul a) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= c==> c==> c~ c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) |- ((((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x)) = T)
T c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> creal_le creal_of_num cNUMERAL c_0 f0 c= csqrt creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 f0 cT
- |- ((real_neg ((real_sub ((real_add a) (real_of_num (NUMERAL _0)))) a)) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_add f0 creal_of_num cNUMERAL c_0 f0 creal_of_num cNUMERAL c_0
+ |- (((!x. (!v. (!u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((cross ((vector_sub v) x)) (((e3_fan x) v) u)) = (vec (NUMERAL _0))))))) ==> ((\x. (!v. (!u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((cross ((vector_sub v) x)) (((e3_fan x) v) u)) = (vec (NUMERAL _0))))))) x)) = ((\x. (!v. (!u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((cross ((vector_sub v) x)) (((e3_fan x) v) u)) = (vec (NUMERAL _0))))))) x))
T c= c==> ! ! ! c==> c/\ c~ c= b1 b0 c/\ c~ c= b2 b0 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b1 b0 * * part cINSERT cvector_sub b2 b0 part cEMPTY c= ccross cvector_sub b1 b0 ce3_fan b0 b1 b2 cvec cNUMERAL c_0 * / ! ! c==> c/\ c~ c= b1 b0 c/\ c~ c= b2 b0 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b1 b0 * * part cINSERT cvector_sub b2 b0 part cEMPTY c= ccross cvector_sub b1 b0 ce3_fan b0 b1 b2 cvec cNUMERAL c_0 f0 * / ! ! c==> c/\ c~ c= b1 b0 c/\ c~ c= b2 b0 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b1 b0 * * part cINSERT cvector_sub b2 b0 part cEMPTY c= ccross cvector_sub b1 b0 ce3_fan b0 b1 b2 cvec cNUMERAL c_0 f0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- |- ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> (!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))))
T c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0
- |- ((~ (((real_pow (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> F)
T c==> c~ c= creal_pow creal_neg creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 cF
+ (~ (u = x)), (~ (v = x)), ((~ (u = x)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r) /\ (w = ((vector_add ((% ((real_mul r) (cos psi))) (((e1_fan x) v) u))) ((vector_add ((% ((real_mul r) (sin psi))) (((e2_fan x) v) u))) ((% h) ((vector_sub v) x)))))))) |- ((sqrt ((real_add ((real_pow ((dot ((cross w) (((e3_fan x) v) u))) (((e1_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot ((cross w) (((e3_fan x) v) u))) (((e2_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0)))))) = r)
T c==> c~ c= f0 f1 c==> c~ c= f2 f1 c==> c/\ c~ c= f0 f1 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f2 f1 * * part cINSERT cvector_sub f0 f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 c= f4 cvector_add c% creal_mul f3 ccos f5 ce1_fan f1 f2 f0 cvector_add c% creal_mul f3 csin f5 ce2_fan f1 f2 f0 c% f6 cvector_sub f2 f1 c= csqrt creal_add creal_pow cdot ccross f4 ce3_fan f1 f2 f0 ce1_fan f1 f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot ccross f4 ce3_fan f1 f2 f0 ce2_fan f1 f2 f0 cNUMERAL cBIT0 cBIT1 c_0 f3
+ |- ((\y. (!z. (((dot ((vector_add x) y)) z) = ((real_add ((dot x) z)) ((dot y) z))))) y)
T * / ! c= cdot cvector_add f0 b0 b1 creal_add cdot f0 b1 cdot b0 b1 f1
+ (((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u)) |- ((((((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (((e1_fan x) v) u)) /\ ((((cross (((e3_fan x) v) u)) (((e1_fan x) v) u)) = (((e2_fan x) v) u)) /\ (((cross (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (((e3_fan x) v) u)))) ==> ((sqrt ((real_add ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) ((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) ((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)))) ((% h) ((cross ((vector_sub v) x)) (((e3_fan x) v) u)))))) (((e1_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) ((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) ((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)))) ((% h) ((cross ((vector_sub v) x)) (((e3_fan x) v) u)))))) (((e2_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0)))))) = r)) = (((((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u)) ==> ((((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (((e1_fan x) v) u)) /\ ((((cross (((e3_fan x) v) u)) (((e1_fan x) v) u)) = (((e2_fan x) v) u)) /\ (((cross (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (((e3_fan x) v) u))))) ==> ((sqrt ((real_add ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) ((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) ((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)))) ((% h) ((cross ((vector_sub v) x)) (((e3_fan x) v) u)))))) (((e1_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) ((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) ((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)))) ((% h) ((cross ((vector_sub v) x)) (((e3_fan x) v) u)))))) (((e2_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0)))))) = r)))
T c==> corthonormal ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 c= c==> c/\ c= ccross ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 ce1_fan f0 f1 f2 c/\ c= ccross ce3_fan f0 f1 f2 ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 c= ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 c= csqrt creal_add creal_pow cdot cvector_add c% creal_mul f3 ccos f4 ccross ce1_fan f0 f1 f2 ce3_fan f0 f1 f2 cvector_add c% creal_mul f3 csin f4 ccross ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 c% f5 ccross cvector_sub f1 f0 ce3_fan f0 f1 f2 ce1_fan f0 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot cvector_add c% creal_mul f3 ccos f4 ccross ce1_fan f0 f1 f2 ce3_fan f0 f1 f2 cvector_add c% creal_mul f3 csin f4 ccross ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 c% f5 ccross cvector_sub f1 f0 ce3_fan f0 f1 f2 ce2_fan f0 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c==> corthonormal ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 c/\ c= ccross ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 ce1_fan f0 f1 f2 c/\ c= ccross ce3_fan f0 f1 f2 ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 c= ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 c= csqrt creal_add creal_pow cdot cvector_add c% creal_mul f3 ccos f4 ccross ce1_fan f0 f1 f2 ce3_fan f0 f1 f2 cvector_add c% creal_mul f3 csin f4 ccross ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 c% f5 ccross cvector_sub f1 f0 ce3_fan f0 f1 f2 ce1_fan f0 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot cvector_add c% creal_mul f3 ccos f4 ccross ce1_fan f0 f1 f2 ce3_fan f0 f1 f2 cvector_add c% creal_mul f3 csin f4 ccross ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 c% f5 ccross cvector_sub f1 f0 ce3_fan f0 f1 f2 ce2_fan f0 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3
+ |- ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT0 (BIT1 _0))) = (BIT1 _0)))
T c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT0 cBIT1 c_0 cBIT1 c_0
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ ((((dot (((e1_fan x) v) u)) (((e1_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e2_fan x) v) u)) (((e2_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e3_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((((dot (((e1_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((((dot (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross (((e1_fan x) v) u)) (((e2_fan x) v) u))) (((e3_fan x) v) u))))))))) |- (((sqrt ((real_add ((real_pow ((real_add ((real_mul ((real_mul r) (cos psi))) (real_neg (real_of_num (NUMERAL _0))))) ((real_add ((real_mul ((real_mul r) (sin psi))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul h) (real_of_num (NUMERAL _0)))))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add ((real_mul ((real_mul r) (cos psi))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((real_add ((real_mul ((real_mul r) (sin psi))) (real_of_num (NUMERAL _0)))) ((real_mul h) (real_of_num (NUMERAL _0)))))) (NUMERAL (BIT0 (BIT1 _0)))))) = r) = ((sqrt ((real_add ((real_pow ((real_add ((real_mul ((real_mul r) (cos psi))) (real_neg ((dot (((e2_fan x) v) u)) (((e1_fan x) v) u))))) ((real_add ((real_mul ((real_mul r) (sin psi))) ((dot (((e1_fan x) v) u)) (((e1_fan x) v) u)))) ((real_mul h) (real_of_num (NUMERAL _0)))))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add ((real_mul ((real_mul r) (cos psi))) (real_neg ((dot (((e2_fan x) v) u)) (((e2_fan x) v) u))))) ((real_add ((real_mul ((real_mul r) (sin psi))) ((dot (((e1_fan x) v) u)) (((e2_fan x) v) u)))) ((real_mul h) (real_of_num (NUMERAL _0)))))) (NUMERAL (BIT0 (BIT1 _0)))))) = r))
T c==> c/\ c= cdot ce1_fan f0 f1 f2 ce1_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce2_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce3_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_of_num cNUMERAL c_0 c/\ c= cdot ce1_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0 c/\ c= cdot ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 c= c= csqrt creal_add creal_pow creal_add creal_mul creal_mul f3 ccos f4 creal_neg creal_of_num cNUMERAL c_0 creal_add creal_mul creal_mul f3 csin f4 creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 creal_of_num cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add creal_mul creal_mul f3 ccos f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_mul f3 csin f4 creal_of_num cNUMERAL c_0 creal_mul f5 creal_of_num cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 f3 c= csqrt creal_add creal_pow creal_add creal_mul creal_mul f3 ccos f4 creal_neg cdot ce2_fan f0 f1 f2 ce1_fan f0 f1 f2 creal_add creal_mul creal_mul f3 csin f4 cdot ce1_fan f0 f1 f2 ce1_fan f0 f1 f2 creal_mul f5 creal_of_num cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add creal_mul creal_mul f3 ccos f4 creal_neg cdot ce2_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_add creal_mul creal_mul f3 csin f4 cdot ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_mul f5 creal_of_num cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 f3
+ |- (((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT0 (BIT1 _0))) = (BIT1 _0))) = (((BIT1 _0) EXP (BIT0 (BIT1 _0))) = (BIT1 _0)))
T c= c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT0 cBIT1 c_0 cBIT1 c_0
+ |- ((\x. (!v. (!u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((cross ((vector_sub v) x)) (((e3_fan x) v) u)) = (vec (NUMERAL _0))))))) x)
T * / ! ! c==> c/\ c~ c= b1 b0 c/\ c~ c= b2 b0 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b1 b0 * * part cINSERT cvector_sub b2 b0 part cEMPTY c= ccross cvector_sub b1 b0 ce3_fan b0 b1 b2 cvec cNUMERAL c_0 f0
+ |- ((\c. (!x. (!y. (((dot ((% c) x)) y) = ((real_mul c) ((dot x) y)))))) c)
T * / ! ! c= cdot c% b0 b1 b2 creal_mul b0 cdot b1 b2 f0
+ ((real_lt (real_of_num (NUMERAL _0))) r) |- ((((real_le (real_of_num (NUMERAL _0))) r) ==> ((sqrt ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) = r)) = ((sqrt ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) = r))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c= c==> creal_le creal_of_num cNUMERAL c_0 f0 c= csqrt creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c= csqrt creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 f0
- (~ (u = x)) |- (((~ (x = u)) ==> ((x = u) = F)) = ((x = u) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
+ |- ((\x. (!y. (((dot x) y) = ((dot y) x)))) x)
T * / ! c= cdot b0 b1 cdot b1 b0 f0
+ ((real_lt (real_of_num (NUMERAL _0))) r) |- (((real_le (real_of_num (NUMERAL _0))) r) = T)
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_le creal_of_num cNUMERAL c_0 f0 cT
+ (~ (u = x)) |- ((u = x) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
+ (~ (((real_add ((real_mul d) b)) ((real_mul d) c)) = ((real_mul d) ((real_add b) c)))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_add creal_mul f0 f1 creal_mul f0 f2 creal_mul f0 creal_add f1 f2 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((\y. (((dot (vector_neg x)) y) = (real_neg ((dot x) y)))) y)
T * / c= cdot cvector_neg f0 b0 creal_neg cdot f0 b0 f1
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((!v. (!u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((cross ((vector_sub v) x)) (((e3_fan x) v) u)) = (vec (NUMERAL _0)))))) ==> ((\v. (!u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((cross ((vector_sub v) x)) (((e3_fan x) v) u)) = (vec (NUMERAL _0)))))) v)) = ((\v. (!u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((cross ((vector_sub v) x)) (((e3_fan x) v) u)) = (vec (NUMERAL _0)))))) v))
T c= c==> ! ! c==> c/\ c~ c= b0 f0 c/\ c~ c= b1 f0 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b0 f0 * * part cINSERT cvector_sub b1 f0 part cEMPTY c= ccross cvector_sub b0 f0 ce3_fan f0 b0 b1 cvec cNUMERAL c_0 * / ! c==> c/\ c~ c= b0 f0 c/\ c~ c= b1 f0 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b0 f0 * * part cINSERT cvector_sub b1 f0 part cEMPTY c= ccross cvector_sub b0 f0 ce3_fan f0 b0 b1 cvec cNUMERAL c_0 f1 * / ! c==> c/\ c~ c= b0 f0 c/\ c~ c= b1 f0 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b0 f0 * * part cINSERT cvector_sub b1 f0 part cEMPTY c= ccross cvector_sub b0 f0 ce3_fan f0 b0 b1 cvec cNUMERAL c_0 f1
+ (~ (v = x)), ((~ (u = x)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r) /\ (w = ((vector_add ((% ((real_mul r) (cos psi))) (((e1_fan x) v) u))) ((vector_add ((% ((real_mul r) (sin psi))) (((e2_fan x) v) u))) ((% h) ((vector_sub v) x)))))))) |- ((sqrt ((real_add ((real_pow ((dot ((cross w) (((e3_fan x) v) u))) (((e1_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot ((cross w) (((e3_fan x) v) u))) (((e2_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0)))))) = r)
T c==> c~ c= f0 f1 c==> c/\ c~ c= f2 f1 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 c= f4 cvector_add c% creal_mul f3 ccos f5 ce1_fan f1 f0 f2 cvector_add c% creal_mul f3 csin f5 ce2_fan f1 f0 f2 c% f6 cvector_sub f0 f1 c= csqrt creal_add creal_pow cdot ccross f4 ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot ccross f4 ce3_fan f1 f0 f2 ce2_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f3
+ ((real_lt (real_of_num (NUMERAL _0))) r) |- (((((dot (((e1_fan x) v) u)) (((e1_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e2_fan x) v) u)) (((e2_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e3_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((((dot (((e1_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((((dot (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross (((e1_fan x) v) u)) (((e2_fan x) v) u))) (((e3_fan x) v) u))))))))) ==> ((sqrt ((real_add ((real_pow ((real_add ((real_mul ((real_mul r) (cos psi))) (real_neg ((dot (((e2_fan x) v) u)) (((e1_fan x) v) u))))) ((real_add ((real_mul ((real_mul r) (sin psi))) ((dot (((e1_fan x) v) u)) (((e1_fan x) v) u)))) ((real_mul h) (real_of_num (NUMERAL _0)))))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add ((real_mul ((real_mul r) (cos psi))) (real_neg ((dot (((e2_fan x) v) u)) (((e2_fan x) v) u))))) ((real_add ((real_mul ((real_mul r) (sin psi))) ((dot (((e1_fan x) v) u)) (((e2_fan x) v) u)))) ((real_mul h) (real_of_num (NUMERAL _0)))))) (NUMERAL (BIT0 (BIT1 _0)))))) = r))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c==> c/\ c= cdot ce1_fan f1 f2 f3 ce1_fan f1 f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce2_fan f1 f2 f3 ce2_fan f1 f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce3_fan f1 f2 f3 ce3_fan f1 f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce1_fan f1 f2 f3 ce2_fan f1 f2 f3 creal_of_num cNUMERAL c_0 c/\ c= cdot ce1_fan f1 f2 f3 ce3_fan f1 f2 f3 creal_of_num cNUMERAL c_0 c/\ c= cdot ce2_fan f1 f2 f3 ce3_fan f1 f2 f3 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross ce1_fan f1 f2 f3 ce2_fan f1 f2 f3 ce3_fan f1 f2 f3 c= csqrt creal_add creal_pow creal_add creal_mul creal_mul f0 ccos f4 creal_neg cdot ce2_fan f1 f2 f3 ce1_fan f1 f2 f3 creal_add creal_mul creal_mul f0 csin f4 cdot ce1_fan f1 f2 f3 ce1_fan f1 f2 f3 creal_mul f5 creal_of_num cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add creal_mul creal_mul f0 ccos f4 creal_neg cdot ce2_fan f1 f2 f3 ce2_fan f1 f2 f3 creal_add creal_mul creal_mul f0 csin f4 cdot ce1_fan f1 f2 f3 ce2_fan f1 f2 f3 creal_mul f5 creal_of_num cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 f0
+ |- (((real_add ((real_mul d) b)) ((real_mul d) c)) = ((real_mul d) ((real_add b) c)))
T c= creal_add creal_mul f0 f1 creal_mul f0 f2 creal_mul f0 creal_add f1 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((real_add (real_of_num (NUMERAL _0))) a) = a)) |- ((~ (((real_add (real_of_num (NUMERAL _0))) a) = a)) /\ F)
T c==> c~ c= creal_add creal_of_num cNUMERAL c_0 f0 f0 c/\ c~ c= creal_add creal_of_num cNUMERAL c_0 f0 f0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\x. (!y. (!n. (((real_pow ((real_mul x) y)) n) = ((real_mul ((real_pow x) n)) ((real_pow y) n)))))) x)
T * / ! ! c= creal_pow creal_mul b0 b1 b2 creal_mul creal_pow b0 b2 creal_pow b1 b2 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ (((real_add (real_of_num (NUMERAL _0))) a) = a)) ==> F)
T c==> c~ c= creal_add creal_of_num cNUMERAL c_0 f0 f0 cF
- (~ (((real_add a) (real_of_num (NUMERAL _0))) = a)) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_add f0 creal_of_num cNUMERAL c_0 f0 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (~ (((real_add (real_of_num (NUMERAL _0))) a) = a)) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_add creal_of_num cNUMERAL c_0 f0 f0 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u)) ==> ((((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (((e1_fan x) v) u)) /\ ((((cross (((e3_fan x) v) u)) (((e1_fan x) v) u)) = (((e2_fan x) v) u)) /\ (((cross (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (((e3_fan x) v) u)))))
T c==> corthonormal ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 c/\ c= ccross ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 ce1_fan f0 f1 f2 c/\ c= ccross ce3_fan f0 f1 f2 ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 c= ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2
+ |- (((!u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u)))) ==> ((\u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u)))) u)) = ((\u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u)))) u))
T c= c==> ! c==> c/\ c~ c= f0 f1 c/\ c~ c= b0 f1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub b0 f1 part cEMPTY corthonormal ce1_fan f1 f0 b0 ce2_fan f1 f0 b0 ce3_fan f1 f0 b0 * / c==> c/\ c~ c= f0 f1 c/\ c~ c= b0 f1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub b0 f1 part cEMPTY corthonormal ce1_fan f1 f0 b0 ce2_fan f1 f0 b0 ce3_fan f1 f0 b0 f2 * / c==> c/\ c~ c= f0 f1 c/\ c~ c= b0 f1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub b0 f1 part cEMPTY corthonormal ce1_fan f1 f0 b0 ce2_fan f1 f0 b0 ce3_fan f1 f0 b0 f2
+ ((real_lt (real_of_num (NUMERAL _0))) r), (((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u)) |- ((sqrt ((real_add ((real_pow ((real_add ((real_mul ((real_mul r) (cos psi))) (real_neg ((dot (((e2_fan x) v) u)) (((e1_fan x) v) u))))) ((real_add ((real_mul ((real_mul r) (sin psi))) ((dot (((e1_fan x) v) u)) (((e1_fan x) v) u)))) ((real_mul h) (real_of_num (NUMERAL _0)))))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add ((real_mul ((real_mul r) (cos psi))) (real_neg ((dot (((e2_fan x) v) u)) (((e2_fan x) v) u))))) ((real_add ((real_mul ((real_mul r) (sin psi))) ((dot (((e1_fan x) v) u)) (((e2_fan x) v) u)))) ((real_mul h) (real_of_num (NUMERAL _0)))))) (NUMERAL (BIT0 (BIT1 _0)))))) = r)
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c==> corthonormal ce1_fan f1 f2 f3 ce2_fan f1 f2 f3 ce3_fan f1 f2 f3 c= csqrt creal_add creal_pow creal_add creal_mul creal_mul f0 ccos f4 creal_neg cdot ce2_fan f1 f2 f3 ce1_fan f1 f2 f3 creal_add creal_mul creal_mul f0 csin f4 cdot ce1_fan f1 f2 f3 ce1_fan f1 f2 f3 creal_mul f5 creal_of_num cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add creal_mul creal_mul f0 ccos f4 creal_neg cdot ce2_fan f1 f2 f3 ce2_fan f1 f2 f3 creal_add creal_mul creal_mul f0 csin f4 cdot ce1_fan f1 f2 f3 ce2_fan f1 f2 f3 creal_mul f5 creal_of_num cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 f0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))), (~ (u = x)), (~ (v = x)), ((((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (((e1_fan x) v) u)) /\ ((((cross (((e3_fan x) v) u)) (((e1_fan x) v) u)) = (((e2_fan x) v) u)) /\ (((cross (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (((e3_fan x) v) u)))), ((real_lt (real_of_num (NUMERAL _0))) r), (((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u)) |- ((((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((cross ((vector_sub v) x)) (((e3_fan x) v) u)) = (vec (NUMERAL _0)))) ==> ((sqrt ((real_add ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) ((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) (((e1_fan x) v) u))) ((% h) ((cross ((vector_sub v) x)) (((e3_fan x) v) u)))))) (((e1_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) ((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) (((e1_fan x) v) u))) ((% h) ((cross ((vector_sub v) x)) (((e3_fan x) v) u)))))) (((e2_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0)))))) = r))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c==> c~ c= f2 f1 c==> c~ c= f0 f1 c==> c/\ c= ccross ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 c/\ c= ccross ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 ce2_fan f1 f0 f2 c= ccross ce1_fan f1 f0 f2 ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> corthonormal ce1_fan f1 f0 f2 ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 c==> c==> c/\ c~ c= f0 f1 c/\ c~ c= f2 f1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c= ccross cvector_sub f0 f1 ce3_fan f1 f0 f2 cvec cNUMERAL c_0 c= csqrt creal_add creal_pow cdot cvector_add c% creal_mul f3 ccos f4 ccross ce1_fan f1 f0 f2 ce3_fan f1 f0 f2 cvector_add c% creal_mul f3 csin f4 ce1_fan f1 f0 f2 c% f5 ccross cvector_sub f0 f1 ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot cvector_add c% creal_mul f3 ccos f4 ccross ce1_fan f1 f0 f2 ce3_fan f1 f0 f2 cvector_add c% creal_mul f3 csin f4 ce1_fan f1 f0 f2 c% f5 ccross cvector_sub f0 f1 ce3_fan f1 f0 f2 ce2_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f3
+ ((real_lt (real_of_num (NUMERAL _0))) r), (((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u)) |- ((sqrt ((real_add ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) (vector_neg (((e2_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) (((e1_fan x) v) u))) ((% h) (vec (NUMERAL _0)))))) (((e1_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) (vector_neg (((e2_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) (((e1_fan x) v) u))) ((% h) (vec (NUMERAL _0)))))) (((e2_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0)))))) = r)
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c==> corthonormal ce1_fan f1 f2 f3 ce2_fan f1 f2 f3 ce3_fan f1 f2 f3 c= csqrt creal_add creal_pow cdot cvector_add c% creal_mul f0 ccos f4 cvector_neg ce2_fan f1 f2 f3 cvector_add c% creal_mul f0 csin f4 ce1_fan f1 f2 f3 c% f5 cvec cNUMERAL c_0 ce1_fan f1 f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot cvector_add c% creal_mul f0 ccos f4 cvector_neg ce2_fan f1 f2 f3 cvector_add c% creal_mul f0 csin f4 ce1_fan f1 f2 f3 c% f5 cvec cNUMERAL c_0 ce2_fan f1 f2 f3 cNUMERAL cBIT0 cBIT1 c_0 f0
+ ((real_lt x) y) |- (((real_lt x) y) /\ (((real_le x) y) = T))
T c==> creal_lt f0 f1 c/\ creal_lt f0 f1 c= creal_le f0 f1 cT
+ |- ((\e1. (!e2. (!e3. ((((orthonormal e1) e2) e3) ==> ((((cross e2) e3) = e1) /\ ((((cross e3) e1) = e2) /\ (((cross e1) e2) = e3))))))) (((e1_fan x) v) u))
T * / ! ! c==> corthonormal b0 b1 b2 c/\ c= ccross b1 b2 b0 c/\ c= ccross b2 b0 b1 c= ccross b0 b1 b2 ce1_fan f0 f1 f2
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))), (~ (u = x)), (~ (v = x)), ((real_lt (real_of_num (NUMERAL _0))) r) |- ((sqrt ((real_add ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) ((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) ((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)))) ((% h) ((cross ((vector_sub v) x)) (((e3_fan x) v) u)))))) (((e1_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) ((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) ((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)))) ((% h) ((cross ((vector_sub v) x)) (((e3_fan x) v) u)))))) (((e2_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0)))))) = r)
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c==> c~ c= f2 f1 c==> c~ c= f0 f1 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c= csqrt creal_add creal_pow cdot cvector_add c% creal_mul f3 ccos f4 ccross ce1_fan f1 f0 f2 ce3_fan f1 f0 f2 cvector_add c% creal_mul f3 csin f4 ccross ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 c% f5 ccross cvector_sub f0 f1 ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot cvector_add c% creal_mul f3 ccos f4 ccross ce1_fan f1 f0 f2 ce3_fan f1 f0 f2 cvector_add c% creal_mul f3 csin f4 ccross ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 c% f5 ccross cvector_sub f0 f1 ce3_fan f1 f0 f2 ce2_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f3
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))), (~ (u = x)), (~ (v = x)), ((~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r) /\ (w = ((vector_add ((% ((real_mul r) (cos psi))) (((e1_fan x) v) u))) ((vector_add ((% ((real_mul r) (sin psi))) (((e2_fan x) v) u))) ((% h) ((vector_sub v) x))))))) |- ((sqrt ((real_add ((real_pow ((dot ((cross w) (((e3_fan x) v) u))) (((e1_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot ((cross w) (((e3_fan x) v) u))) (((e2_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0)))))) = r)
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c==> c~ c= f2 f1 c==> c~ c= f0 f1 c==> c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 c= f4 cvector_add c% creal_mul f3 ccos f5 ce1_fan f1 f0 f2 cvector_add c% creal_mul f3 csin f5 ce2_fan f1 f0 f2 c% f6 cvector_sub f0 f1 c= csqrt creal_add creal_pow cdot ccross f4 ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot ccross f4 ce3_fan f1 f0 f2 ce2_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f3
- ((((dot (((e1_fan x) v) u)) (((e1_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e2_fan x) v) u)) (((e2_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e3_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((((dot (((e1_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((((dot (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross (((e1_fan x) v) u)) (((e2_fan x) v) u))) (((e3_fan x) v) u))))))))) |- (((dot (((e3_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c= cdot ce1_fan f0 f1 f2 ce1_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce2_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce3_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_of_num cNUMERAL c_0 c/\ c= cdot ce1_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0 c/\ c= cdot ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 c= cdot ce3_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\x. (((dot (vec (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) x)
T * / c= cdot cvec cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 f0
+ (~ (v = x)), ((~ (v = x)) /\ ((~ (u = x)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r) /\ (w = ((vector_add ((% ((real_mul r) (cos psi))) (((e1_fan x) v) u))) ((vector_add ((% ((real_mul r) (sin psi))) (((e2_fan x) v) u))) ((% h) ((vector_sub v) x))))))))) |- ((sqrt ((real_add ((real_pow ((dot ((cross w) (((e3_fan x) v) u))) (((e1_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot ((cross w) (((e3_fan x) v) u))) (((e2_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0)))))) = r)
T c==> c~ c= f0 f1 c==> c/\ c~ c= f0 f1 c/\ c~ c= f2 f1 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 c= f4 cvector_add c% creal_mul f3 ccos f5 ce1_fan f1 f0 f2 cvector_add c% creal_mul f3 csin f5 ce2_fan f1 f0 f2 c% f6 cvector_sub f0 f1 c= csqrt creal_add creal_pow cdot ccross f4 ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot ccross f4 ce3_fan f1 f0 f2 ce2_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f3
+ |- ((((~ (v = x)) /\ ((~ (u = x)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r) /\ (w = ((vector_add ((% ((real_mul r) (cos psi))) (((e1_fan x) v) u))) ((vector_add ((% ((real_mul r) (sin psi))) (((e2_fan x) v) u))) ((% h) ((vector_sub v) x))))))))) ==> ((sqrt ((real_add ((real_pow ((dot ((cross w) (((e3_fan x) v) u))) (((e1_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot ((cross w) (((e3_fan x) v) u))) (((e2_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0)))))) = r)) = T)
T c= c==> c/\ c~ c= f0 f1 c/\ c~ c= f2 f1 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 c= f4 cvector_add c% creal_mul f3 ccos f5 ce1_fan f1 f0 f2 cvector_add c% creal_mul f3 csin f5 ce2_fan f1 f0 f2 c% f6 cvector_sub f0 f1 c= csqrt creal_add creal_pow cdot ccross f4 ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot ccross f4 ce3_fan f1 f0 f2 ce2_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 cT
- |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((\x. (!v. (!u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u)))))) x)
T * / ! ! c==> c/\ c~ c= b1 b0 c/\ c~ c= b2 b0 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b1 b0 * * part cINSERT cvector_sub b2 b0 part cEMPTY corthonormal ce1_fan b0 b1 b2 ce2_fan b0 b1 b2 ce3_fan b0 b1 b2 f0
+ |- (((!n. (((real_pow ((real_mul x) y)) n) = ((real_mul ((real_pow x) n)) ((real_pow y) n)))) ==> ((\n. (((real_pow ((real_mul x) y)) n) = ((real_mul ((real_pow x) n)) ((real_pow y) n)))) n)) = ((\n. (((real_pow ((real_mul x) y)) n) = ((real_mul ((real_pow x) n)) ((real_pow y) n)))) n))
T c= c==> ! c= creal_pow creal_mul f0 f1 b0 creal_mul creal_pow f0 b0 creal_pow f1 b0 * / c= creal_pow creal_mul f0 f1 b0 creal_mul creal_pow f0 b0 creal_pow f1 b0 f2 * / c= creal_pow creal_mul f0 f1 b0 creal_mul creal_pow f0 b0 creal_pow f1 b0 f2
+ (((cross ((vector_sub v) x)) (((e3_fan x) v) u)) = (vec (NUMERAL _0))), ((((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (((e1_fan x) v) u)) /\ ((((cross (((e3_fan x) v) u)) (((e1_fan x) v) u)) = (((e2_fan x) v) u)) /\ (((cross (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (((e3_fan x) v) u)))), ((real_lt (real_of_num (NUMERAL _0))) r), (((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u)) |- ((((cross ((vector_sub v) x)) (((e3_fan x) v) u)) = (vec (NUMERAL _0))) /\ ((sqrt ((real_add ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) ((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) (((e1_fan x) v) u))) ((% h) ((cross ((vector_sub v) x)) (((e3_fan x) v) u)))))) (((e1_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) ((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) (((e1_fan x) v) u))) ((% h) ((cross ((vector_sub v) x)) (((e3_fan x) v) u)))))) (((e2_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0)))))) = r))
T c==> c= ccross cvector_sub f0 f1 ce3_fan f1 f0 f2 cvec cNUMERAL c_0 c==> c/\ c= ccross ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 c/\ c= ccross ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 ce2_fan f1 f0 f2 c= ccross ce1_fan f1 f0 f2 ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> corthonormal ce1_fan f1 f0 f2 ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 c/\ c= ccross cvector_sub f0 f1 ce3_fan f1 f0 f2 cvec cNUMERAL c_0 c= csqrt creal_add creal_pow cdot cvector_add c% creal_mul f3 ccos f4 ccross ce1_fan f1 f0 f2 ce3_fan f1 f0 f2 cvector_add c% creal_mul f3 csin f4 ce1_fan f1 f0 f2 c% f5 ccross cvector_sub f0 f1 ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot cvector_add c% creal_mul f3 ccos f4 ccross ce1_fan f1 f0 f2 ce3_fan f1 f0 f2 cvector_add c% creal_mul f3 csin f4 ce1_fan f1 f0 f2 c% f5 ccross cvector_sub f0 f1 ce3_fan f1 f0 f2 ce2_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f3
+ |- ((\x. (!y. (!z. (((dot ((vector_add x) y)) z) = ((real_add ((dot x) z)) ((dot y) z)))))) x)
T * / ! ! c= cdot cvector_add b0 b1 b2 creal_add cdot b0 b2 cdot b1 b2 f0
+ |- ((!w. (!r. (!psi. (!h. (((~ (v = x)) /\ ((~ (u = x)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r) /\ (w = ((vector_add ((% ((real_mul r) (cos psi))) (((e1_fan x) v) u))) ((vector_add ((% ((real_mul r) (sin psi))) (((e2_fan x) v) u))) ((% h) ((vector_sub v) x))))))))) ==> ((sqrt ((real_add ((real_pow ((dot ((cross w) (((e3_fan x) v) u))) (((e1_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot ((cross w) (((e3_fan x) v) u))) (((e2_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0)))))) = r)))))) = T)
T c= ! ! ! ! c==> c/\ c~ c= f0 f1 c/\ c~ c= f2 f1 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c= b0 cvector_add c% creal_mul b1 ccos b2 ce1_fan f1 f0 f2 cvector_add c% creal_mul b1 csin b2 ce2_fan f1 f0 f2 c% b3 cvector_sub f0 f1 c= csqrt creal_add creal_pow cdot ccross b0 ce3_fan f1 f0 f2 ce1_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot ccross b0 ce3_fan f1 f0 f2 ce2_fan f1 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 b1 cT
- (x = u) |- (u = x)
T c==> c= f0 f1 c= f1 f0
- ((((dot (((e1_fan x) v) u)) (((e1_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e2_fan x) v) u)) (((e2_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e3_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((((dot (((e1_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((((dot (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross (((e1_fan x) v) u)) (((e2_fan x) v) u))) (((e3_fan x) v) u))))))))) |- (((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross (((e1_fan x) v) u)) (((e2_fan x) v) u))) (((e3_fan x) v) u))) = T)
T c==> c/\ c= cdot ce1_fan f0 f1 f2 ce1_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce2_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce3_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_of_num cNUMERAL c_0 c/\ c= cdot ce1_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0 c/\ c= cdot ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 c= creal_lt creal_of_num cNUMERAL c_0 cdot ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 cT
+ |- (((!v. (!u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u))))) ==> ((\v. (!u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u))))) v)) = ((\v. (!u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u))))) v))
T c= c==> ! ! c==> c/\ c~ c= b0 f0 c/\ c~ c= b1 f0 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b0 f0 * * part cINSERT cvector_sub b1 f0 part cEMPTY corthonormal ce1_fan f0 b0 b1 ce2_fan f0 b0 b1 ce3_fan f0 b0 b1 * / ! c==> c/\ c~ c= b0 f0 c/\ c~ c= b1 f0 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b0 f0 * * part cINSERT cvector_sub b1 f0 part cEMPTY corthonormal ce1_fan f0 b0 b1 ce2_fan f0 b0 b1 ce3_fan f0 b0 b1 f1 * / ! c==> c/\ c~ c= b0 f0 c/\ c~ c= b1 f0 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b0 f0 * * part cINSERT cvector_sub b1 f0 part cEMPTY corthonormal ce1_fan f0 b0 b1 ce2_fan f0 b0 b1 ce3_fan f0 b0 b1 f1
+ |- (((!e2. (!e3. ((((orthonormal (((e1_fan x) v) u)) e2) e3) ==> ((((cross e2) e3) = (((e1_fan x) v) u)) /\ ((((cross e3) (((e1_fan x) v) u)) = e2) /\ (((cross (((e1_fan x) v) u)) e2) = e3)))))) ==> ((\e2. (!e3. ((((orthonormal (((e1_fan x) v) u)) e2) e3) ==> ((((cross e2) e3) = (((e1_fan x) v) u)) /\ ((((cross e3) (((e1_fan x) v) u)) = e2) /\ (((cross (((e1_fan x) v) u)) e2) = e3)))))) (((e2_fan x) v) u))) = ((\e2. (!e3. ((((orthonormal (((e1_fan x) v) u)) e2) e3) ==> ((((cross e2) e3) = (((e1_fan x) v) u)) /\ ((((cross e3) (((e1_fan x) v) u)) = e2) /\ (((cross (((e1_fan x) v) u)) e2) = e3)))))) (((e2_fan x) v) u)))
T c= c==> ! ! c==> corthonormal ce1_fan f0 f1 f2 b0 b1 c/\ c= ccross b0 b1 ce1_fan f0 f1 f2 c/\ c= ccross b1 ce1_fan f0 f1 f2 b0 c= ccross ce1_fan f0 f1 f2 b0 b1 * / ! c==> corthonormal ce1_fan f0 f1 f2 b0 b1 c/\ c= ccross b0 b1 ce1_fan f0 f1 f2 c/\ c= ccross b1 ce1_fan f0 f1 f2 b0 c= ccross ce1_fan f0 f1 f2 b0 b1 ce2_fan f0 f1 f2 * / ! c==> corthonormal ce1_fan f0 f1 f2 b0 b1 c/\ c= ccross b0 b1 ce1_fan f0 f1 f2 c/\ c= ccross b1 ce1_fan f0 f1 f2 b0 c= ccross ce1_fan f0 f1 f2 b0 b1 ce2_fan f0 f1 f2
- |- ((((~ (((real_add a) (real_of_num (NUMERAL _0))) = a)) ==> F) ==> (((real_add a) (real_of_num (NUMERAL _0))) = a)) = (((real_add a) (real_of_num (NUMERAL _0))) = a))
T c= c==> c==> c~ c= creal_add f0 creal_of_num cNUMERAL c_0 f0 cF c= creal_add f0 creal_of_num cNUMERAL c_0 f0 c= creal_add f0 creal_of_num cNUMERAL c_0 f0
+ |- ((((~ (((real_add ((real_mul d) b)) ((real_mul d) c)) = ((real_mul d) ((real_add b) c)))) ==> F) ==> (((real_add ((real_mul d) b)) ((real_mul d) c)) = ((real_mul d) ((real_add b) c)))) = (((real_add ((real_mul d) b)) ((real_mul d) c)) = ((real_mul d) ((real_add b) c))))
T c= c==> c==> c~ c= creal_add creal_mul f0 f1 creal_mul f0 f2 creal_mul f0 creal_add f1 f2 cF c= creal_add creal_mul f0 f1 creal_mul f0 f2 creal_mul f0 creal_add f1 f2 c= creal_add creal_mul f0 f1 creal_mul f0 f2 creal_mul f0 creal_add f1 f2
- (~ ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (~ (((real_pow (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0))))) |- ((~ (((real_pow (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0))))) /\ F)
T c==> c~ c= creal_pow creal_neg creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c~ c= creal_pow creal_neg creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 cF
- ((((dot (((e1_fan x) v) u)) (((e1_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e2_fan x) v) u)) (((e2_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e3_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((((dot (((e1_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((((dot (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross (((e1_fan x) v) u)) (((e2_fan x) v) u))) (((e3_fan x) v) u))))))))) |- (((dot (((e1_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= cdot ce1_fan f0 f1 f2 ce1_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce2_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce3_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_of_num cNUMERAL c_0 c/\ c= cdot ce1_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0 c/\ c= cdot ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 c= cdot ce1_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0
+ |- (((!x. (!v. (!u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u)))))) ==> ((\x. (!v. (!u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u)))))) x)) = ((\x. (!v. (!u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u)))))) x))
T c= c==> ! ! ! c==> c/\ c~ c= b1 b0 c/\ c~ c= b2 b0 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b1 b0 * * part cINSERT cvector_sub b2 b0 part cEMPTY corthonormal ce1_fan b0 b1 b2 ce2_fan b0 b1 b2 ce3_fan b0 b1 b2 * / ! ! c==> c/\ c~ c= b1 b0 c/\ c~ c= b2 b0 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b1 b0 * * part cINSERT cvector_sub b2 b0 part cEMPTY corthonormal ce1_fan b0 b1 b2 ce2_fan b0 b1 b2 ce3_fan b0 b1 b2 f0 * / ! ! c==> c/\ c~ c= b1 b0 c/\ c~ c= b2 b0 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b1 b0 * * part cINSERT cvector_sub b2 b0 part cEMPTY corthonormal ce1_fan b0 b1 b2 ce2_fan b0 b1 b2 ce3_fan b0 b1 b2 f0
+ ((((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (((e1_fan x) v) u)) /\ ((((cross (((e3_fan x) v) u)) (((e1_fan x) v) u)) = (((e2_fan x) v) u)) /\ (((cross (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (((e3_fan x) v) u)))), ((real_lt (real_of_num (NUMERAL _0))) r), (((orthonormal (((e1_fan x) v) u)) (((e2_fan x) v) u)) (((e3_fan x) v) u)) |- ((((cross ((vector_sub v) x)) (((e3_fan x) v) u)) = (vec (NUMERAL _0))) ==> ((sqrt ((real_add ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) ((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) (((e1_fan x) v) u))) ((% h) ((cross ((vector_sub v) x)) (((e3_fan x) v) u)))))) (((e1_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot ((vector_add ((% ((real_mul r) (cos psi))) ((cross (((e1_fan x) v) u)) (((e3_fan x) v) u)))) ((vector_add ((% ((real_mul r) (sin psi))) (((e1_fan x) v) u))) ((% h) ((cross ((vector_sub v) x)) (((e3_fan x) v) u)))))) (((e2_fan x) v) u))) (NUMERAL (BIT0 (BIT1 _0)))))) = r))
T c==> c/\ c= ccross ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 ce1_fan f0 f1 f2 c/\ c= ccross ce3_fan f0 f1 f2 ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 c= ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> corthonormal ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 c==> c= ccross cvector_sub f1 f0 ce3_fan f0 f1 f2 cvec cNUMERAL c_0 c= csqrt creal_add creal_pow cdot cvector_add c% creal_mul f3 ccos f4 ccross ce1_fan f0 f1 f2 ce3_fan f0 f1 f2 cvector_add c% creal_mul f3 csin f4 ce1_fan f0 f1 f2 c% f5 ccross cvector_sub f1 f0 ce3_fan f0 f1 f2 ce1_fan f0 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot cvector_add c% creal_mul f3 ccos f4 ccross ce1_fan f0 f1 f2 ce3_fan f0 f1 f2 cvector_add c% creal_mul f3 csin f4 ce1_fan f0 f1 f2 c% f5 ccross cvector_sub f1 f0 ce3_fan f0 f1 f2 ce2_fan f0 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3
+ |- (((BIT1 _0) EXP (BIT0 (BIT1 _0))) = (BIT1 _0))
T c= cEXP cBIT1 c_0 cBIT0 cBIT1 c_0 cBIT1 c_0
+ |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) ==> F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> (!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x)))) = (!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))))
T c= c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0
- ((((dot (((e1_fan x) v) u)) (((e1_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e2_fan x) v) u)) (((e2_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e3_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((((dot (((e1_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((((dot (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross (((e1_fan x) v) u)) (((e2_fan x) v) u))) (((e3_fan x) v) u))))))))) |- (((dot (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= cdot ce1_fan f0 f1 f2 ce1_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce2_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce3_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_of_num cNUMERAL c_0 c/\ c= cdot ce1_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0 c/\ c= cdot ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 c= cdot ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0
- (~ ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))) |- ((~ ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))) /\ F)
T c==> c~ c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- (!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))), ((real_le (real_of_num (NUMERAL _0))) x) |- ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x)
T c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> creal_le creal_of_num cNUMERAL c_0 f0 c= csqrt creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 f0
- |- ((((~ (((real_add (real_of_num (NUMERAL _0))) a) = a)) ==> F) ==> (((real_add (real_of_num (NUMERAL _0))) a) = a)) = (((real_add (real_of_num (NUMERAL _0))) a) = a))
T c= c==> c==> c~ c= creal_add creal_of_num cNUMERAL c_0 f0 f0 cF c= creal_add creal_of_num cNUMERAL c_0 f0 f0 c= creal_add creal_of_num cNUMERAL c_0 f0 f0
- |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- (!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) |- ((\x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) x)
T c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 * / c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ (((real_pow (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> F) ==> (((real_pow (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0))))) = (((real_pow (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))))
T c= c==> c==> c~ c= creal_pow creal_neg creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 cF c= creal_pow creal_neg creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_pow creal_neg creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))) ==> F) ==> ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))) = ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= c==> c==> c~ c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))), ((real_le (real_of_num (NUMERAL _0))) x) |- (((real_le (real_of_num (NUMERAL _0))) x) /\ ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))
T c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f0 c= csqrt creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 f0
- |- ((real_neg ((real_sub ((real_add (real_of_num (NUMERAL _0))) a)) a)) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_add creal_of_num cNUMERAL c_0 f0 f0 creal_of_num cNUMERAL c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (~ (((real_pow (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0))))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_pow creal_neg creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (~ (u = x)) |- (~ (x = u))
T c==> c~ c= f0 f1 c~ c= f1 f0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (u = x)) |- ((x = u) = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
- ((((dot (((e1_fan x) v) u)) (((e1_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e2_fan x) v) u)) (((e2_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e3_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((((dot (((e1_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((((dot (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross (((e1_fan x) v) u)) (((e2_fan x) v) u))) (((e3_fan x) v) u))))))))) |- ((((dot (((e1_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((((dot (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross (((e1_fan x) v) u)) (((e2_fan x) v) u))) (((e3_fan x) v) u)))))
T c==> c/\ c= cdot ce1_fan f0 f1 f2 ce1_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce2_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce3_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_of_num cNUMERAL c_0 c/\ c= cdot ce1_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0 c/\ c= cdot ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 c/\ c= cdot ce1_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0 c/\ c= cdot ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((cross (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (((e1_fan x) v) u)) /\ ((((cross (((e3_fan x) v) u)) (((e1_fan x) v) u)) = (((e2_fan x) v) u)) /\ (((cross (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (((e3_fan x) v) u)))) |- (((cross (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (((e3_fan x) v) u))
T c==> c/\ c= ccross ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 ce1_fan f0 f1 f2 c/\ c= ccross ce3_fan f0 f1 f2 ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 c= ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 c= ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2
- ((real_lt (real_of_num (NUMERAL _0))) r) |- (((real_lt (real_of_num (NUMERAL _0))) r) = T)
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_lt creal_of_num cNUMERAL c_0 f0 cT
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_neg ((real_sub ((real_pow (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_pow creal_neg creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- ((~ ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))) ==> F)
T c==> c~ c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ (((real_mul a) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))) ==> F)
T c==> c~ c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- ((((~ (((real_mul a) (real_of_num (NUMERAL (BIT1 _0)))) = a)) ==> F) ==> (((real_mul a) (real_of_num (NUMERAL (BIT1 _0)))) = a)) = (((real_mul a) (real_of_num (NUMERAL (BIT1 _0)))) = a))
T c= c==> c==> c~ c= creal_mul f0 creal_of_num cNUMERAL cBIT1 c_0 f0 cF c= creal_mul f0 creal_of_num cNUMERAL cBIT1 c_0 f0 c= creal_mul f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- (~ (((real_mul a) (real_of_num (NUMERAL (BIT1 _0)))) = a)) |- ((~ (((real_mul a) (real_of_num (NUMERAL (BIT1 _0)))) = a)) /\ F)
T c==> c~ c= creal_mul f0 creal_of_num cNUMERAL cBIT1 c_0 f0 c/\ c~ c= creal_mul f0 creal_of_num cNUMERAL cBIT1 c_0 f0 cF
- ((((dot (((e1_fan x) v) u)) (((e1_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e2_fan x) v) u)) (((e2_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e3_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot (((e1_fan x) v) u)) (((e2_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((((dot (((e1_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((((dot (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross (((e1_fan x) v) u)) (((e2_fan x) v) u))) (((e3_fan x) v) u))))))))) |- ((((dot (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross (((e1_fan x) v) u)) (((e2_fan x) v) u))) (((e3_fan x) v) u))))
T c==> c/\ c= cdot ce1_fan f0 f1 f2 ce1_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce2_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce3_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 creal_of_num cNUMERAL c_0 c/\ c= cdot ce1_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0 c/\ c= cdot ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 c/\ c= cdot ce2_fan f0 f1 f2 ce3_fan f0 f1 f2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross ce1_fan f0 f1 f2 ce2_fan f0 f1 f2 ce3_fan f0 f1 f2
- (~ (((real_mul a) (real_of_num (NUMERAL (BIT1 _0)))) = a)) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_mul f0 creal_of_num cNUMERAL cBIT1 c_0 f0 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((real_add a) (real_of_num (NUMERAL _0))) = a)) |- ((~ (((real_add a) (real_of_num (NUMERAL _0))) = a)) /\ F)
T c==> c~ c= creal_add f0 creal_of_num cNUMERAL c_0 f0 c/\ c~ c= creal_add f0 creal_of_num cNUMERAL c_0 f0 cF
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ (((real_mul a) (real_of_num (NUMERAL (BIT1 _0)))) = a)) ==> F)
T c==> c~ c= creal_mul f0 creal_of_num cNUMERAL cBIT1 c_0 f0 cF
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_neg ((real_sub ((real_mul a) (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL _0)))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
