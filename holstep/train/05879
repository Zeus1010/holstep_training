N Hypermap.lemma_edge_degenerate
C |- (!H. (!x. ((((edge_map H) x) = x) = (((face_map H) x) = ((inverse (node_map H)) x)))))
T c= c= cedge_map f0 f1 f1 c= cface_map f0 f1 cinverse * part cnode_map f0 f1
D TRUTH
A |- T
T cT
D o_THM
A |- (!f. (!g. (!x. (((f o g) x) = (f (g x))))))
T c= co f0 f1 f2 * f0 * f1 f2
D PERMUTES_INJECTIVE
A |- (!p. (!s. (((permutes p) s) ==> (!x. (!y. (((p x) = (p y)) = (x = y)))))))
T c==> cpermutes f0 f1 ! ! c= c= * f0 b0 * f0 b1 c= b0 b1
D Hypermap.hypermap_lemma
A |- (!H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))))
T c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
D Hypermap.inverse_hypermap_maps
A |- (!H. (((inverse (edge_map H)) = ((node_map H) o (face_map H))) /\ (((inverse (node_map H)) = ((face_map H) o (edge_map H))) /\ ((inverse (face_map H)) = ((edge_map H) o (node_map H))))))
T c/\ c= * part cinverse * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 c/\ c= * part cinverse * part cnode_map f0 * * part co * part cface_map f0 * part cedge_map f0 c= * part cinverse * part cface_map f0 * * part co * part cedge_map f0 * part cnode_map f0
+ ((face_map H) = f), ((dart H) = D), ((permutes (face_map H)) (dart H)) |- ((permutes f) D)
T c==> c= * part cface_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cface_map f0 * part cdart f0 cpermutes f1 f2
- ((dart H) = D), ((permutes (node_map H)) (dart H)) |- ((permutes (node_map H)) D)
T c==> c= * part cdart f0 f1 c==> cpermutes * part cnode_map f0 * part cdart f0 cpermutes * part cnode_map f0 f1
+ ((face_map H) = f), ((dart H) = D), ((permutes (face_map H)) (dart H)) |- (!y. (((f (e x)) = (f y)) = ((e x) = y)))
T c==> c= * part cface_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cface_map f0 * part cdart f0 ! c= c= * f1 * f3 f4 * f1 b0 c= * f3 f4 b0
+ ((face_map H) = f), ((dart H) = D), ((permutes (face_map H)) (dart H)) |- ((((permutes f) D) ==> (!x. (!y. (((f x) = (f y)) = (x = y))))) = (!x. (!y. (((f x) = (f y)) = (x = y)))))
T c==> c= * part cface_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cface_map f0 * part cdart f0 c= c==> cpermutes f1 f2 ! ! c= c= * f1 b0 * f1 b1 c= b0 b1 ! ! c= c= * f1 b0 * f1 b1 c= b0 b1
- (FINITE (dart H)), ((dart H) = D) |- (FINITE D)
T c==> cFINITE * part cdart f0 c==> c= * part cdart f0 f1 cFINITE f1
+ |- (((!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) ==> ((\x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) x)) = ((\x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) x))
T c= c==> ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 * / ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 f0 * / ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 f0
+ ((dart H) = D), ((permutes (face_map H)) (dart H)) |- (((face_map H) = f) ==> (((((face_map H) o e) x) = ((inverse n) x)) ==> (((e x) = x) = (((face_map H) x) = ((inverse n) x)))))
T c==> c= * part cdart f0 f1 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * part cface_map f0 f2 c==> c= co * part cface_map f0 f3 f4 cinverse f5 f4 c= c= * f3 f4 f4 c= cface_map f0 f4 cinverse f5 f4
+ ((f (e x)) = (f x)), ((face_map H) = f), ((dart H) = D), ((permutes (face_map H)) (dart H)) |- ((e x) = x)
T c==> c= * f0 * f1 f2 * f0 f2 c==> c= * part cface_map f3 f0 c==> c= * part cdart f3 f4 c==> cpermutes * part cface_map f3 * part cdart f3 c= * f1 f2 f2
+ |- (((!z. (((x = y) /\ (y = z)) ==> (x = z))) ==> ((\z. (((x = y) /\ (y = z)) ==> (x = z))) z)) = ((\z. (((x = y) /\ (y = z)) ==> (x = z))) z))
T c= c==> ! c==> c/\ c= f0 f1 c= f1 b0 c= f0 b0 * / c==> c/\ c= f0 f1 c= f1 b0 c= f0 b0 f2 * / c==> c/\ c= f0 f1 c= f1 b0 c= f0 b0 f2
+ |- (((?n. ((node_map H) = n)) ==> (((((face_map H) o e) x) = ((inverse (node_map H)) x)) ==> (((e x) = x) = (((face_map H) x) = ((inverse (node_map H)) x))))) = (((((face_map H) o e) x) = ((inverse (node_map H)) x)) ==> (((e x) = x) = (((face_map H) x) = ((inverse (node_map H)) x)))))
T c= c==> c? / c= * part cnode_map f0 b0 c==> c= co * part cface_map f0 f1 f2 cinverse * part cnode_map f0 f2 c= c= * f1 f2 f2 c= cface_map f0 f2 cinverse * part cnode_map f0 f2 c==> c= co * part cface_map f0 f1 f2 cinverse * part cnode_map f0 f2 c= c= * f1 f2 f2 c= cface_map f0 f2 cinverse * part cnode_map f0 f2
+ ((dart H) = D), ((permutes (face_map H)) (dart H)) |- ((?e. ((edge_map H) = e)) ==> (((((face_map H) o (edge_map H)) x) = ((inverse (node_map H)) x)) ==> ((((edge_map H) x) = x) = (((face_map H) x) = ((inverse (node_map H)) x)))))
T c==> c= * part cdart f0 f1 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c? / c= * part cedge_map f0 b0 c==> c= co * part cface_map f0 * part cedge_map f0 f2 cinverse * part cnode_map f0 f2 c= c= cedge_map f0 f2 f2 c= cface_map f0 f2 cinverse * part cnode_map f0 f2
- |- ((((\e. ((edge_map H) = e)) e) ==> (?e. ((edge_map H) = e))) = T)
T c= c==> * / c= * part cedge_map f0 b0 f1 c? / c= * part cedge_map f0 b0 cT
+ ((f x) = ((inverse n) x)), ((f (e x)) = ((inverse n) x)), ((face_map H) = f), ((dart H) = D), ((permutes (face_map H)) (dart H)) |- (((f x) = ((inverse n) x)) /\ ((e x) = x))
T c==> c= * f0 f1 cinverse f2 f1 c==> c= * f0 * f3 f1 cinverse f2 f1 c==> c= * part cface_map f4 f0 c==> c= * part cdart f4 f5 c==> cpermutes * part cface_map f4 * part cdart f4 c/\ c= * f0 f1 cinverse f2 f1 c= * f3 f1 f1
+ ((dart H) = D), ((permutes (face_map H)) (dart H)) |- ((((\n. ((node_map H) = n)) n) ==> (((((face_map H) o e) x) = ((inverse (node_map H)) x)) ==> (((e x) = x) = (((face_map H) x) = ((inverse (node_map H)) x))))) = T)
T c==> c= * part cdart f0 f1 c==> cpermutes * part cface_map f0 * part cdart f0 c= c==> * / c= * part cnode_map f0 b0 f2 c==> c= co * part cface_map f0 f3 f4 cinverse * part cnode_map f0 f4 c= c= * f3 f4 f4 c= cface_map f0 f4 cinverse * part cnode_map f0 f4 cT
- ((\e. ((edge_map H) = e)) e) |- ((((edge_map H) = e) ==> (?e. ((edge_map H) = e))) = (?e. ((edge_map H) = e)))
T c==> * / c= * part cedge_map f0 b0 f1 c= c==> c= * part cedge_map f0 f1 c? / c= * part cedge_map f0 b0 c? / c= * part cedge_map f0 b0
- ((\n. ((node_map H) = n)) n) |- (((\n. ((node_map H) = n)) n) /\ (?n. ((node_map H) = n)))
T c==> * / c= * part cnode_map f0 b0 f1 c/\ * / c= * part cnode_map f0 b0 f1 c? / c= * part cnode_map f0 b0
- |- (((!x. (((\D. ((dart H) = D)) x) ==> (?D. ((dart H) = D)))) ==> ((?D. ((dart H) = D)) ==> (?D. ((dart H) = D)))) = ((?D. ((dart H) = D)) ==> (?D. ((dart H) = D))))
T c= c==> ! c==> * / c= * part cdart f0 b1 b0 c? / c= * part cdart f0 b1 c==> c? / c= * part cdart f0 b0 c? / c= * part cdart f0 b0 c==> c? / c= * part cdart f0 b0 c? / c= * part cdart f0 b0
+ |- (((x = y) /\ (y = z)) ==> (x = z))
T c==> c/\ c= f0 f1 c= f1 f2 c= f0 f2
- |- ((?f. ((face_map H) = f)) ==> (?f. ((face_map H) = f)))
T c==> c? / c= * part cface_map f0 b0 c? / c= * part cface_map f0 b0
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ ((dart H) = D), ((permutes (face_map H)) (dart H)), ((\e. ((edge_map H) = e)) e) |- (((\e. ((edge_map H) = e)) e) /\ (((((face_map H) o (edge_map H)) x) = ((inverse (node_map H)) x)) ==> ((((edge_map H) x) = x) = (((face_map H) x) = ((inverse (node_map H)) x)))))
T c==> c= * part cdart f0 f1 c==> cpermutes * part cface_map f0 * part cdart f0 c==> * / c= * part cedge_map f0 b0 f2 c/\ * / c= * part cedge_map f0 b0 f2 c==> c= co * part cface_map f0 * part cedge_map f0 f3 cinverse * part cnode_map f0 f3 c= c= cedge_map f0 f3 f3 c= cface_map f0 f3 cinverse * part cnode_map f0 f3
+ ((dart H) = D), ((permutes (face_map H)) (dart H)) |- (((\f. ((face_map H) = f)) f) ==> (((((face_map H) o e) x) = ((inverse n) x)) ==> (((e x) = x) = (((face_map H) x) = ((inverse n) x)))))
T c==> c= * part cdart f0 f1 c==> cpermutes * part cface_map f0 * part cdart f0 c==> * / c= * part cface_map f0 b0 f2 c==> c= co * part cface_map f0 f3 f4 cinverse f5 f4 c= c= * f3 f4 f4 c= cface_map f0 f4 cinverse f5 f4
- ((edge_map H) = e) |- (((edge_map H) = e) /\ (?e. ((edge_map H) = e)))
T c==> c= * part cedge_map f0 f1 c/\ c= * part cedge_map f0 f1 c? / c= * part cedge_map f0 b0
+ ((\D. ((dart H) = D)) D) |- ((((dart H) = D) ==> (((((face_map H) o (edge_map H)) x) = ((inverse (node_map H)) x)) ==> ((((edge_map H) x) = x) = (((face_map H) x) = ((inverse (node_map H)) x))))) = (((((face_map H) o (edge_map H)) x) = ((inverse (node_map H)) x)) ==> ((((edge_map H) x) = x) = (((face_map H) x) = ((inverse (node_map H)) x)))))
T c==> * / c= * part cdart f0 b0 f1 c= c==> c= * part cdart f0 f1 c==> c= co * part cface_map f0 * part cedge_map f0 f2 cinverse * part cnode_map f0 f2 c= c= cedge_map f0 f2 f2 c= cface_map f0 f2 cinverse * part cnode_map f0 f2 c==> c= co * part cface_map f0 * part cedge_map f0 f2 cinverse * part cnode_map f0 f2 c= c= cedge_map f0 f2 f2 c= cface_map f0 f2 cinverse * part cnode_map f0 f2
- ((\f. ((face_map H) = f)) f) |- ((((face_map H) = f) ==> (?f. ((face_map H) = f))) = (?f. ((face_map H) = f)))
T c==> * / c= * part cface_map f0 b0 f1 c= c==> c= * part cface_map f0 f1 c? / c= * part cface_map f0 b0 c? / c= * part cface_map f0 b0
+ |- (?D. ((dart H) = D))
T c? / c= * part cdart f0 b0
+ |- ((\f. ((face_map H) = f)) (face_map H))
T * / c= * part cface_map f0 b0 * part cface_map f0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ ((dart H) = D), ((permutes (face_map H)) (dart H)) |- (((!x. (((\n. ((node_map H) = n)) x) ==> (((((face_map H) o e) x) = ((inverse (node_map H)) x)) ==> (((e x) = x) = (((face_map H) x) = ((inverse (node_map H)) x)))))) ==> ((?n. ((node_map H) = n)) ==> (((((face_map H) o e) x) = ((inverse (node_map H)) x)) ==> (((e x) = x) = (((face_map H) x) = ((inverse (node_map H)) x)))))) = ((?n. ((node_map H) = n)) ==> (((((face_map H) o e) x) = ((inverse (node_map H)) x)) ==> (((e x) = x) = (((face_map H) x) = ((inverse (node_map H)) x))))))
T c==> c= * part cdart f0 f1 c==> cpermutes * part cface_map f0 * part cdart f0 c= c==> ! c==> * / c= * part cnode_map f0 b1 b0 c==> c= co * part cface_map f0 f2 f3 cinverse * part cnode_map f0 f3 c= c= * f2 f3 f3 c= cface_map f0 f3 cinverse * part cnode_map f0 f3 c==> c? / c= * part cnode_map f0 b0 c==> c= co * part cface_map f0 f2 f3 cinverse * part cnode_map f0 f3 c= c= * f2 f3 f3 c= cface_map f0 f3 cinverse * part cnode_map f0 f3 c==> c? / c= * part cnode_map f0 b0 c==> c= co * part cface_map f0 f2 f3 cinverse * part cnode_map f0 f3 c= c= * f2 f3 f3 c= cface_map f0 f3 cinverse * part cnode_map f0 f3
- |- (!n. (((\n. ((node_map H) = n)) n) ==> (?n. ((node_map H) = n))))
T c==> * / c= * part cnode_map f0 b0 f1 c? / c= * part cnode_map f0 b0
+ |- (((!H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) ==> ((\H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) H)) = ((\H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) H))
T c= c==> ! c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI * / c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI f0 * / c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI f0
+ ((f (e x)) = ((inverse n) x)), ((face_map H) = f), ((dart H) = D), ((permutes (face_map H)) (dart H)) |- (((e x) = x) = ((f x) = ((inverse n) x)))
T c==> c= * f0 * f1 f2 cinverse f3 f2 c==> c= * part cface_map f4 f0 c==> c= * part cdart f4 f5 c==> cpermutes * part cface_map f4 * part cdart f4 c= c= * f1 f2 f2 c= * f0 f2 cinverse f3 f2
- ((face_map H) = f) |- (((face_map H) = f) /\ (?f. ((face_map H) = f)))
T c==> c= * part cface_map f0 f1 c/\ c= * part cface_map f0 f1 c? / c= * part cface_map f0 b0
+ |- (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))
T c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
+ |- (((!g. (!x. (((f o g) x) = (f (g x))))) ==> ((\g. (!x. (((f o g) x) = (f (g x))))) g)) = ((\g. (!x. (((f o g) x) = (f (g x))))) g))
T c= c==> ! ! c= co f0 b0 b1 * f0 * b0 b1 * / ! c= co f0 b0 b1 * f0 * b0 b1 f1 * / ! c= co f0 b0 b1 * f0 * b0 b1 f1
+ |- (((dart H) = (dart H)) = ((\D. ((dart H) = D)) (dart H)))
T c= c= * part cdart f0 * part cdart f0 * / c= * part cdart f0 b0 * part cdart f0
+ ((dart H) = D), ((permutes (face_map H)) (dart H)) |- ((?f. ((face_map H) = f)) ==> (((((face_map H) o e) x) = ((inverse n) x)) ==> (((e x) = x) = (((face_map H) x) = ((inverse n) x)))))
T c==> c= * part cdart f0 f1 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c? / c= * part cface_map f0 b0 c==> c= co * part cface_map f0 f2 f3 cinverse f4 f3 c= c= * f2 f3 f3 c= cface_map f0 f3 cinverse f4 f3
+ |- (((!f. (!g. (!x. (((f o g) x) = (f (g x)))))) ==> ((\f. (!g. (!x. (((f o g) x) = (f (g x)))))) f)) = ((\f. (!g. (!x. (((f o g) x) = (f (g x)))))) f))
T c= c==> ! ! ! c= co b0 b1 b2 * b0 * b1 b2 * / ! ! c= co b0 b1 b2 * b0 * b1 b2 f0 * / ! ! c= co b0 b1 b2 * b0 * b1 b2 f0
+ |- (((?D. ((dart H) = D)) ==> (((((face_map H) o (edge_map H)) x) = ((inverse (node_map H)) x)) ==> ((((edge_map H) x) = x) = (((face_map H) x) = ((inverse (node_map H)) x))))) = (((((face_map H) o (edge_map H)) x) = ((inverse (node_map H)) x)) ==> ((((edge_map H) x) = x) = (((face_map H) x) = ((inverse (node_map H)) x)))))
T c= c==> c? / c= * part cdart f0 b0 c==> c= co * part cface_map f0 * part cedge_map f0 f1 cinverse * part cnode_map f0 f1 c= c= cedge_map f0 f1 f1 c= cface_map f0 f1 cinverse * part cnode_map f0 f1 c==> c= co * part cface_map f0 * part cedge_map f0 f1 cinverse * part cnode_map f0 f1 c= c= cedge_map f0 f1 f1 c= cface_map f0 f1 cinverse * part cnode_map f0 f1
+ |- (((!p. (!s. (((permutes p) s) ==> (!x. (!y. (((p x) = (p y)) = (x = y))))))) ==> ((\p. (!s. (((permutes p) s) ==> (!x. (!y. (((p x) = (p y)) = (x = y))))))) p)) = ((\p. (!s. (((permutes p) s) ==> (!x. (!y. (((p x) = (p y)) = (x = y))))))) p))
T c= c==> ! ! c==> cpermutes b0 b1 ! ! c= c= * b0 b2 * b0 b3 c= b2 b3 * / ! c==> cpermutes b0 b1 ! ! c= c= * b0 b2 * b0 b3 c= b2 b3 f0 * / ! c==> cpermutes b0 b1 ! ! c= c= * b0 b2 * b0 b3 c= b2 b3 f0
+ ((dart H) = D), ((permutes (face_map H)) (dart H)), ((\f. ((face_map H) = f)) f) |- (((\f. ((face_map H) = f)) f) /\ (((((face_map H) o e) x) = ((inverse n) x)) ==> (((e x) = x) = (((face_map H) x) = ((inverse n) x)))))
T c==> c= * part cdart f0 f1 c==> cpermutes * part cface_map f0 * part cdart f0 c==> * / c= * part cface_map f0 b0 f2 c/\ * / c= * part cface_map f0 b0 f2 c==> c= co * part cface_map f0 f3 f4 cinverse f5 f4 c= c= * f3 f4 f4 c= cface_map f0 f4 cinverse f5 f4
+ |- ((\s. (((permutes p) s) ==> (!x. (!y. (((p x) = (p y)) = (x = y)))))) s)
T * / c==> cpermutes f0 b0 ! ! c= c= * f0 b1 * f0 b2 c= b1 b2 f1
+ ((f (e x)) = (f x)) |- (T = ((((f (e x)) = (f x)) = ((e x) = x)) ==> ((e x) = x)))
T c==> c= * f0 * f1 f2 * f0 f2 c= cT c==> c= c= * f0 * f1 f2 * f0 f2 c= * f1 f2 f2 c= * f1 f2 f2
- ((node_map H) = n), ((dart H) = D), ((permutes (node_map H)) (dart H)) |- ((permutes n) D)
T c==> c= * part cnode_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cnode_map f0 * part cdart f0 cpermutes f1 f2
+ ((node_map H) = n) |- ((((((face_map H) o e) x) = ((inverse n) x)) ==> (((e x) = x) = (((face_map H) x) = ((inverse n) x)))) = (((((face_map H) o e) x) = ((inverse (node_map H)) x)) ==> (((e x) = x) = (((face_map H) x) = ((inverse (node_map H)) x)))))
T c==> c= * part cnode_map f0 f1 c= c==> c= co * part cface_map f0 f2 f3 cinverse f1 f3 c= c= * f2 f3 f3 c= cface_map f0 f3 cinverse f1 f3 c==> c= co * part cface_map f0 f2 f3 cinverse * part cnode_map f0 f3 c= c= * f2 f3 f3 c= cface_map f0 f3 cinverse * part cnode_map f0 f3
+ |- (((face_map H) = (face_map H)) = ((\f. ((face_map H) = f)) (face_map H)))
T c= c= * part cface_map f0 * part cface_map f0 * / c= * part cface_map f0 b0 * part cface_map f0
- |- (FINITE (dart H))
T cFINITE * part cdart f0
+ |- (((!y. (!z. (((x = y) /\ (y = z)) ==> (x = z)))) ==> ((\y. (!z. (((x = y) /\ (y = z)) ==> (x = z)))) y)) = ((\y. (!z. (((x = y) /\ (y = z)) ==> (x = z)))) y))
T c= c==> ! ! c==> c/\ c= f0 b0 c= b0 b1 c= f0 b1 * / ! c==> c/\ c= f0 b0 c= b0 b1 c= f0 b1 f1 * / ! c==> c/\ c= f0 b0 c= b0 b1 c= f0 b1 f1
+ |- (((!H. (((inverse (edge_map H)) = ((node_map H) o (face_map H))) /\ (((inverse (node_map H)) = ((face_map H) o (edge_map H))) /\ ((inverse (face_map H)) = ((edge_map H) o (node_map H)))))) ==> ((\H. (((inverse (edge_map H)) = ((node_map H) o (face_map H))) /\ (((inverse (node_map H)) = ((face_map H) o (edge_map H))) /\ ((inverse (face_map H)) = ((edge_map H) o (node_map H)))))) H)) = ((\H. (((inverse (edge_map H)) = ((node_map H) o (face_map H))) /\ (((inverse (node_map H)) = ((face_map H) o (edge_map H))) /\ ((inverse (face_map H)) = ((edge_map H) o (node_map H)))))) H))
T c= c==> ! c/\ c= * part cinverse * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 c/\ c= * part cinverse * part cnode_map b0 * * part co * part cface_map b0 * part cedge_map b0 c= * part cinverse * part cface_map b0 * * part co * part cedge_map b0 * part cnode_map b0 * / c/\ c= * part cinverse * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 c/\ c= * part cinverse * part cnode_map b0 * * part co * part cface_map b0 * part cedge_map b0 c= * part cinverse * part cface_map b0 * * part co * part cedge_map b0 * part cnode_map b0 f0 * / c/\ c= * part cinverse * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 c/\ c= * part cinverse * part cnode_map b0 * * part co * part cface_map b0 * part cedge_map b0 c= * part cinverse * part cface_map b0 * * part co * part cedge_map b0 * part cnode_map b0 f0
- |- (((face_map H) = f) = ((\f. ((face_map H) = f)) f))
T c= c= * part cface_map f0 f1 * / c= * part cface_map f0 b0 f1
- |- (((node_map H) = n) ==> (?n. ((node_map H) = n)))
T c==> c= * part cnode_map f0 f1 c? / c= * part cnode_map f0 b0
+ ((f (e x)) = (f x)) |- ((((f (e x)) = (f x)) = ((e x) = x)) ==> ((e x) = x))
T c==> c= * f0 * f1 f2 * f0 f2 c==> c= c= * f0 * f1 f2 * f0 f2 c= * f1 f2 f2 c= * f1 f2 f2
- ((edge_map H) = e), ((node_map H) = n), (((edge_map H) o ((node_map H) o (face_map H))) = I) |- ((e o (n o (face_map H))) = I)
T c==> c= * part cedge_map f0 f1 c==> c= * part cnode_map f0 f2 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= * * part co f1 * * part co f2 * part cface_map f0 part cI
+ ((permutes (face_map H)) (dart H)) |- (((!x. (((\D. ((dart H) = D)) x) ==> (((((face_map H) o (edge_map H)) x) = ((inverse (node_map H)) x)) ==> ((((edge_map H) x) = x) = (((face_map H) x) = ((inverse (node_map H)) x)))))) ==> ((?D. ((dart H) = D)) ==> (((((face_map H) o (edge_map H)) x) = ((inverse (node_map H)) x)) ==> ((((edge_map H) x) = x) = (((face_map H) x) = ((inverse (node_map H)) x)))))) = ((?D. ((dart H) = D)) ==> (((((face_map H) o (edge_map H)) x) = ((inverse (node_map H)) x)) ==> ((((edge_map H) x) = x) = (((face_map H) x) = ((inverse (node_map H)) x))))))
T c==> cpermutes * part cface_map f0 * part cdart f0 c= c==> ! c==> * / c= * part cdart f0 b1 b0 c==> c= co * part cface_map f0 * part cedge_map f0 f1 cinverse * part cnode_map f0 f1 c= c= cedge_map f0 f1 f1 c= cface_map f0 f1 cinverse * part cnode_map f0 f1 c==> c? / c= * part cdart f0 b0 c==> c= co * part cface_map f0 * part cedge_map f0 f1 cinverse * part cnode_map f0 f1 c= c= cedge_map f0 f1 f1 c= cface_map f0 f1 cinverse * part cnode_map f0 f1 c==> c? / c= * part cdart f0 b0 c==> c= co * part cface_map f0 * part cedge_map f0 f1 cinverse * part cnode_map f0 f1 c= c= cedge_map f0 f1 f1 c= cface_map f0 f1 cinverse * part cnode_map f0 f1
- |- (((dart H) = D) ==> (?D. ((dart H) = D)))
T c==> c= * part cdart f0 f1 c? / c= * part cdart f0 b0
+ |- (?f. ((face_map H) = f))
T c? / c= * part cface_map f0 b0
+ ((f x) = ((inverse n) x)) |- (((inverse n) x) = (f x))
T c==> c= * f0 f1 cinverse f2 f1 c= cinverse f2 f1 * f0 f1
- |- ((?D. ((dart H) = D)) ==> (?D. ((dart H) = D)))
T c==> c? / c= * part cdart f0 b0 c? / c= * part cdart f0 b0
+ |- (((?e. ((edge_map H) = e)) ==> (((((face_map H) o (edge_map H)) x) = ((inverse (node_map H)) x)) ==> ((((edge_map H) x) = x) = (((face_map H) x) = ((inverse (node_map H)) x))))) = (((((face_map H) o (edge_map H)) x) = ((inverse (node_map H)) x)) ==> ((((edge_map H) x) = x) = (((face_map H) x) = ((inverse (node_map H)) x)))))
T c= c==> c? / c= * part cedge_map f0 b0 c==> c= co * part cface_map f0 * part cedge_map f0 f1 cinverse * part cnode_map f0 f1 c= c= cedge_map f0 f1 f1 c= cface_map f0 f1 cinverse * part cnode_map f0 f1 c==> c= co * part cface_map f0 * part cedge_map f0 f1 cinverse * part cnode_map f0 f1 c= c= cedge_map f0 f1 f1 c= cface_map f0 f1 cinverse * part cnode_map f0 f1
+ ((dart H) = D), ((permutes (face_map H)) (dart H)) |- (((\e. ((edge_map H) = e)) e) ==> (((((face_map H) o (edge_map H)) x) = ((inverse (node_map H)) x)) ==> ((((edge_map H) x) = x) = (((face_map H) x) = ((inverse (node_map H)) x)))))
T c==> c= * part cdart f0 f1 c==> cpermutes * part cface_map f0 * part cdart f0 c==> * / c= * part cedge_map f0 b0 f2 c==> c= co * part cface_map f0 * part cedge_map f0 f3 cinverse * part cnode_map f0 f3 c= c= cedge_map f0 f3 f3 c= cface_map f0 f3 cinverse * part cnode_map f0 f3
+ ((node_map H) = n), ((dart H) = D), ((permutes (face_map H)) (dart H)) |- (((node_map H) = n) /\ (((((face_map H) o e) x) = ((inverse (node_map H)) x)) ==> (((e x) = x) = (((face_map H) x) = ((inverse (node_map H)) x)))))
T c==> c= * part cnode_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cface_map f0 * part cdart f0 c/\ c= * part cnode_map f0 f1 c==> c= co * part cface_map f0 f3 f4 cinverse * part cnode_map f0 f4 c= c= * f3 f4 f4 c= cface_map f0 f4 cinverse * part cnode_map f0 f4
+ ((dart H) = D), ((permutes (face_map H)) (dart H)) |- (((((face_map H) o (edge_map H)) x) = ((inverse (node_map H)) x)) ==> ((((edge_map H) x) = x) = (((face_map H) x) = ((inverse (node_map H)) x))))
T c==> c= * part cdart f0 f1 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= co * part cface_map f0 * part cedge_map f0 f2 cinverse * part cnode_map f0 f2 c= c= cedge_map f0 f2 f2 c= cface_map f0 f2 cinverse * part cnode_map f0 f2
+ |- ((((((face_map H) o (edge_map H)) x) = ((inverse (node_map H)) x)) ==> ((((edge_map H) x) = x) = (((face_map H) x) = ((inverse (node_map H)) x)))) = ((((edge_map H) x) = x) = (((face_map H) x) = ((inverse (node_map H)) x))))
T c= c==> c= co * part cface_map f0 * part cedge_map f0 f1 cinverse * part cnode_map f0 f1 c= c= cedge_map f0 f1 f1 c= cface_map f0 f1 cinverse * part cnode_map f0 f1 c= c= cedge_map f0 f1 f1 c= cface_map f0 f1 cinverse * part cnode_map f0 f1
+ ((dart H) = D), ((permutes (face_map H)) (dart H)) |- (((edge_map H) = e) ==> (((((face_map H) o (edge_map H)) x) = ((inverse (node_map H)) x)) ==> ((((edge_map H) x) = x) = (((face_map H) x) = ((inverse (node_map H)) x)))))
T c==> c= * part cdart f0 f1 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * part cedge_map f0 f2 c==> c= co * part cface_map f0 * part cedge_map f0 f3 cinverse * part cnode_map f0 f3 c= c= cedge_map f0 f3 f3 c= cface_map f0 f3 cinverse * part cnode_map f0 f3
+ |- (((?f. ((face_map H) = f)) ==> (((((face_map H) o e) x) = ((inverse n) x)) ==> (((e x) = x) = (((face_map H) x) = ((inverse n) x))))) = (((((face_map H) o e) x) = ((inverse n) x)) ==> (((e x) = x) = (((face_map H) x) = ((inverse n) x)))))
T c= c==> c? / c= * part cface_map f0 b0 c==> c= co * part cface_map f0 f1 f2 cinverse f3 f2 c= c= * f1 f2 f2 c= cface_map f0 f2 cinverse f3 f2 c==> c= co * part cface_map f0 f1 f2 cinverse f3 f2 c= c= * f1 f2 f2 c= cface_map f0 f2 cinverse f3 f2
- |- ((((\D. ((dart H) = D)) D) ==> (?D. ((dart H) = D))) = T)
T c= c==> * / c= * part cdart f0 b0 f1 c? / c= * part cdart f0 b0 cT
+ ((f x) = ((inverse n) x)), ((f (e x)) = ((inverse n) x)) |- ((((f (e x)) = (f x)) ==> ((e x) = x)) = ((e x) = x))
T c==> c= * f0 f1 cinverse f2 f1 c==> c= * f0 * f3 f1 cinverse f2 f1 c= c==> c= * f0 * f3 f1 * f0 f1 c= * f3 f1 f1 c= * f3 f1 f1
+ ((e x) = x), ((f (e x)) = ((inverse n) x)) |- (((e x) = x) /\ ((f x) = ((inverse n) x)))
T c==> c= * f0 f1 f1 c==> c= * f2 * f0 f1 cinverse f3 f1 c/\ c= * f0 f1 f1 c= * f2 f1 cinverse f3 f1
- ((node_map H) = n), ((dart H) = D), ((permutes (node_map H)) (dart H)) |- (((permutes n) D) = T)
T c==> c= * part cnode_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cnode_map f0 * part cdart f0 c= cpermutes f1 f2 cT
+ |- ((\x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) x)
T * / ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 f0
+ |- ((!x. ((((edge_map H) x) = x) = (((face_map H) x) = ((inverse (node_map H)) x)))) = T)
T c= ! c= c= cedge_map f0 b0 b0 c= cface_map f0 b0 cinverse * part cnode_map f0 b0 cT
- ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- ((permutes (edge_map H)) D)
T c==> c= * part cdart f0 f1 c==> cpermutes * part cedge_map f0 * part cdart f0 cpermutes * part cedge_map f0 f1
+ |- ((\D. ((dart H) = D)) (dart H))
T * / c= * part cdart f0 b0 * part cdart f0
+ ((dart H) = D), ((permutes (face_map H)) (dart H)) |- (!n. (((\n. ((node_map H) = n)) n) ==> (((((face_map H) o e) x) = ((inverse (node_map H)) x)) ==> (((e x) = x) = (((face_map H) x) = ((inverse (node_map H)) x))))))
T c==> c= * part cdart f0 f1 c==> cpermutes * part cface_map f0 * part cdart f0 ! c==> * / c= * part cnode_map f0 b1 b0 c==> c= co * part cface_map f0 f2 f3 cinverse * part cnode_map f0 f3 c= c= * f2 f3 f3 c= cface_map f0 f3 cinverse * part cnode_map f0 f3
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ ((face_map H) = f), ((dart H) = D), ((permutes (face_map H)) (dart H)) |- (((f (e x)) = (f x)) = ((e x) = x))
T c==> c= * part cface_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cface_map f0 * part cdart f0 c= c= * f1 * f3 f4 * f1 f4 c= * f3 f4 f4
- ((edge_map H) = e), (((edge_map H) o ((node_map H) o (face_map H))) = I) |- ((e o ((node_map H) o (face_map H))) = I)
T c==> c= * part cedge_map f0 f1 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= * * part co f1 * * part co * part cnode_map f0 * part cface_map f0 part cI
- |- ((?n. ((node_map H) = n)) ==> (?n. ((node_map H) = n)))
T c==> c? / c= * part cnode_map f0 b0 c? / c= * part cnode_map f0 b0
- |- (!e. (((\e. ((edge_map H) = e)) e) ==> (?e. ((edge_map H) = e))))
T c==> * / c= * part cedge_map f0 b0 f1 c? / c= * part cedge_map f0 b0
- |- (((dart H) = D) = ((\D. ((dart H) = D)) D))
T c= c= * part cdart f0 f1 * / c= * part cdart f0 b0 f1
- ((\n. ((node_map H) = n)) n) |- ((((node_map H) = n) ==> (?n. ((node_map H) = n))) = (?n. ((node_map H) = n)))
T c==> * / c= * part cnode_map f0 b0 f1 c= c==> c= * part cnode_map f0 f1 c? / c= * part cnode_map f0 b0 c? / c= * part cnode_map f0 b0
- ((edge_map H) = e), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- ((permutes e) D)
T c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cedge_map f0 * part cdart f0 cpermutes f1 f2
- |- (!f. (((\f. ((face_map H) = f)) f) ==> (?f. ((face_map H) = f))))
T c==> * / c= * part cface_map f0 b0 f1 c? / c= * part cface_map f0 b0
- ((\f. ((face_map H) = f)) f) |- (((\f. ((face_map H) = f)) f) /\ (?f. ((face_map H) = f)))
T c==> * / c= * part cface_map f0 b0 f1 c/\ * / c= * part cface_map f0 b0 f1 c? / c= * part cface_map f0 b0
- ((dart H) = D) |- (((dart H) = D) /\ (?D. ((dart H) = D)))
T c==> c= * part cdart f0 f1 c/\ c= * part cdart f0 f1 c? / c= * part cdart f0 b0
- |- ((?e. ((edge_map H) = e)) ==> (?e. ((edge_map H) = e)))
T c==> c? / c= * part cedge_map f0 b0 c? / c= * part cedge_map f0 b0
- |- (((!x. (((\f. ((face_map H) = f)) x) ==> (?f. ((face_map H) = f)))) ==> ((?f. ((face_map H) = f)) ==> (?f. ((face_map H) = f)))) = ((?f. ((face_map H) = f)) ==> (?f. ((face_map H) = f))))
T c= c==> ! c==> * / c= * part cface_map f0 b1 b0 c? / c= * part cface_map f0 b1 c==> c? / c= * part cface_map f0 b0 c? / c= * part cface_map f0 b0 c==> c? / c= * part cface_map f0 b0 c? / c= * part cface_map f0 b0
- |- (((!x. (((\e. ((edge_map H) = e)) x) ==> (?e. ((edge_map H) = e)))) ==> ((?e. ((edge_map H) = e)) ==> (?e. ((edge_map H) = e)))) = ((?e. ((edge_map H) = e)) ==> (?e. ((edge_map H) = e))))
T c= c==> ! c==> * / c= * part cedge_map f0 b1 b0 c? / c= * part cedge_map f0 b1 c==> c? / c= * part cedge_map f0 b0 c? / c= * part cedge_map f0 b0 c==> c? / c= * part cedge_map f0 b0 c? / c= * part cedge_map f0 b0
- |- (((edge_map H) = e) ==> (?e. ((edge_map H) = e)))
T c==> c= * part cedge_map f0 f1 c? / c= * part cedge_map f0 b0
- |- (((face_map H) = f) ==> (?f. ((face_map H) = f)))
T c==> c= * part cface_map f0 f1 c? / c= * part cface_map f0 b0
- ((node_map H) = n) |- (((node_map H) = n) /\ (?n. ((node_map H) = n)))
T c==> c= * part cnode_map f0 f1 c/\ c= * part cnode_map f0 f1 c? / c= * part cnode_map f0 b0
- |- (((edge_map H) = e) = ((\e. ((edge_map H) = e)) e))
T c= c= * part cedge_map f0 f1 * / c= * part cedge_map f0 b0 f1
- ((node_map H) = n) |- ((\n. ((node_map H) = n)) n)
T c==> c= * part cnode_map f0 f1 * / c= * part cnode_map f0 b0 f1
- ((face_map H) = f) |- ((\f. ((face_map H) = f)) f)
T c==> c= * part cface_map f0 f1 * / c= * part cface_map f0 b0 f1
- |- (((node_map H) = n) = ((\n. ((node_map H) = n)) n))
T c= c= * part cnode_map f0 f1 * / c= * part cnode_map f0 b0 f1
- ((edge_map H) = e), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (((permutes e) D) = T)
T c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cedge_map f0 * part cdart f0 c= cpermutes f1 f2 cT
- ((dart H) = D) |- ((\D. ((dart H) = D)) D)
T c==> c= * part cdart f0 f1 * / c= * part cdart f0 b0 f1
- |- (!D. (((\D. ((dart H) = D)) D) ==> (?D. ((dart H) = D))))
T c==> * / c= * part cdart f0 b0 f1 c? / c= * part cdart f0 b0
- ((\e. ((edge_map H) = e)) e) |- (((\e. ((edge_map H) = e)) e) /\ (?e. ((edge_map H) = e)))
T c==> * / c= * part cedge_map f0 b0 f1 c/\ * / c= * part cedge_map f0 b0 f1 c? / c= * part cedge_map f0 b0
- ((edge_map H) = e) |- ((\e. ((edge_map H) = e)) e)
T c==> c= * part cedge_map f0 f1 * / c= * part cedge_map f0 b0 f1
- ((\D. ((dart H) = D)) D) |- (((\D. ((dart H) = D)) D) /\ (?D. ((dart H) = D)))
T c==> * / c= * part cdart f0 b0 f1 c/\ * / c= * part cdart f0 b0 f1 c? / c= * part cdart f0 b0
- ((edge_map H) = e), ((node_map H) = n), ((face_map H) = f), (((edge_map H) o ((node_map H) o (face_map H))) = I) |- ((e o (n o f)) = I)
T c==> c= * part cedge_map f0 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cface_map f0 f3 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= * * part co f1 * * part co f2 f3 part cI
- |- ((((\n. ((node_map H) = n)) n) ==> (?n. ((node_map H) = n))) = T)
T c= c==> * / c= * part cnode_map f0 b0 f1 c? / c= * part cnode_map f0 b0 cT
- |- ((((\f. ((face_map H) = f)) f) ==> (?f. ((face_map H) = f))) = T)
T c= c==> * / c= * part cface_map f0 b0 f1 c? / c= * part cface_map f0 b0 cT
- ((face_map H) = f), ((dart H) = D), ((permutes (face_map H)) (dart H)) |- (((permutes f) D) = T)
T c==> c= * part cface_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cface_map f0 * part cdart f0 c= cpermutes f1 f2 cT
- |- (((!x. (((\n. ((node_map H) = n)) x) ==> (?n. ((node_map H) = n)))) ==> ((?n. ((node_map H) = n)) ==> (?n. ((node_map H) = n)))) = ((?n. ((node_map H) = n)) ==> (?n. ((node_map H) = n))))
T c= c==> ! c==> * / c= * part cnode_map f0 b1 b0 c? / c= * part cnode_map f0 b1 c==> c? / c= * part cnode_map f0 b0 c? / c= * part cnode_map f0 b0 c==> c? / c= * part cnode_map f0 b0 c? / c= * part cnode_map f0 b0
- ((\D. ((dart H) = D)) D) |- ((((dart H) = D) ==> (?D. ((dart H) = D))) = (?D. ((dart H) = D)))
T c==> * / c= * part cdart f0 b0 f1 c= c==> c= * part cdart f0 f1 c? / c= * part cdart f0 b0 c? / c= * part cdart f0 b0
- (FINITE (dart H)), ((dart H) = D) |- ((FINITE D) = T)
T c==> cFINITE * part cdart f0 c==> c= * part cdart f0 f1 c= cFINITE f1 cT
