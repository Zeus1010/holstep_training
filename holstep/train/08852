N HOMOTOPIC_WITH_IMP_CONTINUOUS
C |- (!P. (!X. (!Y. (!f. (!g. (((((homotopic_with P) (X , Y)) f) g) ==> (((continuous_on f) X) /\ ((continuous_on g) X))))))))
T c==> chomotopic_with f0 c, f1 f2 f3 f4 c/\ ccontinuous_on f3 f1 ccontinuous_on f4 f1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D REAL_LE_REFL
A |- (!x. ((real_le x) x))
T creal_le f0 f0
D REAL_POS
A |- (!n. ((real_le (real_of_num (NUMERAL _0))) (real_of_num n)))
T creal_le creal_of_num cNUMERAL c_0 creal_of_num f0
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D FORALL_IN_IMAGE
A |- (!f. (!s. ((!y. ((y IN ((IMAGE f) s)) ==> (P y))) = (!x. ((x IN s) ==> (P (f x)))))))
T c= ! c==> cIN b0 * * part cIMAGE f0 f1 * f2 b0 ! c==> cIN b0 f1 * f2 * f0 b0
D PASTECART_IN_PCROSS
A |- (!s. (!t. (!x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))))))
T c= cIN cpastecart f0 f1 * * part cPCROSS f2 f3 c/\ cIN f0 f2 cIN f1 f3
D DROP_VEC
A |- (!n. ((drop (vec n)) = (real_of_num n)))
T c= cdrop cvec f0 creal_of_num f0
D CONTINUOUS_ON_SUBSET
A |- (!f. (!s. (!t. ((((continuous_on f) s) /\ (t SUBSET s)) ==> ((continuous_on f) t)))))
T c==> c/\ ccontinuous_on f0 f1 cSUBSET f2 f1 ccontinuous_on f0 f2
D CONTINUOUS_ON_CONST
A |- (!s. (!c. ((continuous_on (\x. c)) s)))
T ccontinuous_on / f0 f1
D CONTINUOUS_ON_ID
A |- (!s. ((continuous_on (\x. x)) s))
T ccontinuous_on / b0 f0
D CONTINUOUS_ON_COMPOSE
A |- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 ccontinuous_on * * part co f2 f0 f1
D CONTINUOUS_ON_PASTECART
A |- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s)))))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 ccontinuous_on / cpastecart * f0 b0 * f2 b0 f1
D IN_INTERVAL_1
A |- (!a. (!b. (!x. (((x IN (closed_interval ((CONS (a , b)) NIL))) = (((real_le (drop a)) (drop x)) /\ ((real_le (drop x)) (drop b)))) /\ ((x IN (open_interval (a , b))) = (((real_lt (drop a)) (drop x)) /\ ((real_lt (drop x)) (drop b))))))))
T c/\ c= cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c/\ creal_le cdrop f1 cdrop f0 creal_le cdrop f0 cdrop f2 c= cIN f0 * part copen_interval c, f1 f2 c/\ creal_lt cdrop f1 cdrop f0 creal_lt cdrop f0 cdrop f2
D homotopic_with
A |- (!X. (!Y. (!p. (!q. (!P. (((((homotopic_with P) (X , Y)) p) q) = (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) SUBSET Y) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = (p x))) /\ ((!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (q x))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (P (\x. (h ((pastecart t) x)))))))))))))))))
T c= chomotopic_with f0 c, f1 f2 f3 f4 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c/\ ! c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f3 b1 c/\ ! c= * b0 cpastecart cvec cNUMERAL cBIT1 c_0 b1 * f4 b1 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * f0 / * b0 cpastecart b1 b2
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 ! ! c==> ccontinuous_on f0 b0 c==> cSUBSET b1 b0 ccontinuous_on f0 b1
+ |- (((continuous_on f) s) ==> (!t. ((t SUBSET s) ==> ((continuous_on f) t))))
T c==> ccontinuous_on f0 f1 ! c==> cSUBSET b0 f1 ccontinuous_on f0 b0
- |- ((((x IN X) ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0)))))) = (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0)))))))) ==> (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))))) = ((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))))))) = (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))))) = ((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0)))))))))
T c= c==> c==> cIN f0 f1 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0
- |- (((!x. (!y. ((sndcart ((pastecart x) y)) = y))) ==> ((\x. (!y. ((sndcart ((pastecart x) y)) = y))) x)) = ((\x. (!y. ((sndcart ((pastecart x) y)) = y))) x))
T c= c==> ! ! c= csndcart cpastecart b0 b1 b1 * / ! c= csndcart cpastecart b0 b1 b1 f0 * / ! c= csndcart cpastecart b0 b1 b1 f0
+ |- ((\p'. (!q'. (((x IN X) = p') ==> ((p' ==> (((x IN X) /\ ((vec (NUMERAL _0)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = q')) ==> (((x IN X) ==> ((x IN X) /\ ((vec (NUMERAL _0)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c/\ cIN f0 f1 cIN cvec cNUMERAL c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> cIN f0 f1 c/\ cIN f0 f1 cIN cvec cNUMERAL c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 f2
+ (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- ((\f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) f)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 * / ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 f0
- |- ((\y. ((sndcart ((pastecart x) y)) = y)) y)
T * / c= csndcart cpastecart f0 b0 b0 f1
- |- ((\a. ((?x. ((a = x) /\ (P x))) = (P a))) a)
T * / c= c? / c/\ c= b0 b1 * f0 b1 * f0 b0 f1
+ |- (((!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) ==> ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)) = ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s))
T c= c==> ! ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
+ |- (T = (!x. ((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0)))))))))
T c= cT ! c==> cIN b0 f0 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0
+ |- ((\y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))) y)
T * / c= cIN cpastecart f0 b0 * * part cPCROSS f1 f2 c/\ cIN f0 f1 cIN b0 f2 f3
- |- ((x IN X) ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0)))))) = (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0))))))))
T c==> cIN f0 f1 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0
+ (x IN X) |- ((x IN X) /\ (((x IN X) /\ ((vec (NUMERAL _0)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))))))
T c==> cIN f0 f1 c/\ cIN f0 f1 c= c/\ cIN f0 f1 cIN cvec cNUMERAL c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0
- ((t1 /\ (t2 /\ t3)) = ((t1 /\ t2) /\ t3)) |- (((t1 /\ t2) /\ t3) = (t1 /\ (t2 /\ t3)))
T c==> c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2
+ |- ((\f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) f)
T * / ! c==> c/\ ccontinuous_on b0 b1 ccontinuous_on f0 * * part cIMAGE b0 b1 ccontinuous_on * * part co f0 b0 b1 f1
- (x IN X) |- ((x IN X) /\ ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0)))))) = (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0))))))))
T c==> cIN f0 f1 c/\ cIN f0 f1 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0
+ |- (((!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))) ==> ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))) s)) = ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))) s))
T c= c==> ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cpastecart * f0 b1 * f1 b1 b0 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cpastecart * f0 b1 * f1 b1 b0 f2 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cpastecart * f0 b1 * f1 b1 b0 f2
- |- ((!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) ==> ((continuous_on h) t))) ==> (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) ==> ((continuous_on h) t))))
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0
- (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) SUBSET Y) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = (f x))) /\ ((!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (g x))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (P (\x. (h ((pastecart t) x))))))))))) |- ((?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) SUBSET Y) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = (f x))) /\ ((!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (g x))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (P (\x. (h ((pastecart t) x))))))))))) /\ (((continuous_on f) X) /\ ((continuous_on g) X)))
T c==> c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f1 c/\ ! c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f2 b1 c/\ ! c= * b0 cpastecart cvec cNUMERAL cBIT1 c_0 b1 * f3 b1 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * f4 / * b0 cpastecart b1 b2 c/\ c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f1 c/\ ! c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f2 b1 c/\ ! c= * b0 cpastecart cvec cNUMERAL cBIT1 c_0 b1 * f3 b1 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * f4 / * b0 cpastecart b1 b2 c/\ ccontinuous_on f2 f0 ccontinuous_on f3 f0
- |- (((!x. (!y. ((fstcart ((pastecart x) y)) = x))) ==> ((\x. (!y. ((fstcart ((pastecart x) y)) = x))) x)) = ((\x. (!y. ((fstcart ((pastecart x) y)) = x))) x))
T c= c==> ! ! c= cfstcart cpastecart b0 b1 b0 * / ! c= cfstcart cpastecart b0 b1 b0 f0 * / ! c= cfstcart cpastecart b0 b1 b0 f0
+ |- ((\t. ((\x. (t x)) = t)) t)
T * / c= / * b0 b1 b0 f0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))), (((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) |- ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) /\ ((continuous_on (g o f)) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 c/\ c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 ccontinuous_on * * part co f2 f0 f1
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- (((x IN X) ==> ((x IN X) /\ ((vec (NUMERAL (BIT1 _0))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = ((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0))))))))
T c= c==> cIN f0 f1 c/\ cIN f0 f1 cIN cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0
- ((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) |- (((!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) ==> ((continuous_on h) t))) ==> (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) ==> ((continuous_on h) t)))) = (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) ==> ((continuous_on h) t))))
T c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f0 b0 ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f0 b0 ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f0 b0
+ (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) SUBSET Y) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = (f x))) /\ ((!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (g x))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (P (\x. (h ((pastecart t) x)))))))))) |- ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) SUBSET Y) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = (f x))) /\ ((!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (g x))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (P (\x. (h ((pastecart t) x)))))))))) /\ (((continuous_on f) X) /\ ((continuous_on g) X)))
T c==> c/\ ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c/\ ! c= * f0 cpastecart cvec cNUMERAL c_0 b0 * f3 b0 c/\ ! c= * f0 cpastecart cvec cNUMERAL cBIT1 c_0 b0 * f4 b0 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * f5 / * f0 cpastecart b0 b1 c/\ c/\ ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c/\ ! c= * f0 cpastecart cvec cNUMERAL c_0 b0 * f3 b0 c/\ ! c= * f0 cpastecart cvec cNUMERAL cBIT1 c_0 b0 * f4 b0 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * f5 / * f0 cpastecart b0 b1 c/\ ccontinuous_on f3 f1 ccontinuous_on f4 f1
+ |- ((((x IN X) ==> (((x IN X) /\ ((vec (NUMERAL _0)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0)))))))) ==> (((x IN X) ==> ((x IN X) /\ ((vec (NUMERAL _0)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = ((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))))))) = (((x IN X) ==> ((x IN X) /\ ((vec (NUMERAL _0)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = ((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0)))))))))
T c= c==> c==> cIN f0 f1 c= c/\ cIN f0 f1 cIN cvec cNUMERAL c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 c= c==> cIN f0 f1 c/\ cIN f0 f1 cIN cvec cNUMERAL c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 c= c==> cIN f0 f1 c/\ cIN f0 f1 cIN cvec cNUMERAL c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0
+ (!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = (f x))), (!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (g x))) |- (T = ((((continuous_on (h o (\x. ((pastecart (vec (NUMERAL _0))) x)))) X) /\ ((continuous_on (h o (\x. ((pastecart (vec (NUMERAL (BIT1 _0)))) x)))) X)) ==> (((continuous_on f) X) /\ ((continuous_on g) X))))
T c==> ! c= * f0 cpastecart cvec cNUMERAL c_0 b0 * f1 b0 c==> ! c= * f0 cpastecart cvec cNUMERAL cBIT1 c_0 b0 * f2 b0 c= cT c==> c/\ ccontinuous_on * * part co f0 / cpastecart cvec cNUMERAL c_0 b0 f3 ccontinuous_on * * part co f0 / cpastecart cvec cNUMERAL cBIT1 c_0 b0 f3 c/\ ccontinuous_on f1 f3 ccontinuous_on f2 f3
- |- ((\y. ((fstcart ((pastecart x) y)) = x)) y)
T * / c= cfstcart cpastecart f0 b0 f0 f1
+ |- (!x. ((x IN X) ==> (((vec (NUMERAL (BIT1 _0))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (x IN X))))
T c==> cIN f0 f1 c/\ cIN cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f0 f1
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- (((x IN X) = p') ==> ((p' ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0)))))) = q')) ==> (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q'))))
T c==> c= cIN f0 f1 f2 c==> c==> f2 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 f3 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> f2 f3
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))), (((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) /\ ((continuous_on (g o f)) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 c/\ ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 ccontinuous_on * * part co f2 f0 f1
+ |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) ==> (!g. (!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 ! ! ! c==> c/\ ccontinuous_on b1 b2 ccontinuous_on b0 * * part cIMAGE b1 b2 ccontinuous_on * * part co b0 b1 b2
+ (!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = (f x))) |- ((h ((pastecart (vec (NUMERAL _0))) x)) = (f x))
T c==> ! c= * f0 cpastecart cvec cNUMERAL c_0 b0 * f1 b0 c= * f0 cpastecart cvec cNUMERAL c_0 f2 * f1 f2
+ ((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) |- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) ==> ((continuous_on h) t)))
T c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f0 b0
+ |- (((x IN X) ==> (((x IN X) /\ ((vec (NUMERAL (BIT1 _0))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = q')) ==> (((x IN X) ==> ((x IN X) /\ ((vec (NUMERAL (BIT1 _0))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = ((x IN X) ==> q')))
T c==> c==> cIN f0 f1 c= c/\ cIN f0 f1 cIN cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= c==> cIN f0 f1 c/\ cIN f0 f1 cIN cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN f0 f1 f2
+ |- (((!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) ==> ((\f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) f)) = ((\f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) f))
T c= c==> ! ! c==> c/\ ccontinuous_on b0 b1 ccontinuous_on f0 * * part cIMAGE b0 b1 ccontinuous_on * * part co f0 b0 b1 * / ! c==> c/\ ccontinuous_on b0 b1 ccontinuous_on f0 * * part cIMAGE b0 b1 ccontinuous_on * * part co f0 b0 b1 f1 * / ! c==> c/\ ccontinuous_on b0 b1 ccontinuous_on f0 * * part cIMAGE b0 b1 ccontinuous_on * * part co f0 b0 b1 f1
+ ((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) |- (((continuous_on (\x. ((pastecart (vec (NUMERAL _0))) x))) X) /\ ((continuous_on h) ((IMAGE (\x. ((pastecart (vec (NUMERAL _0))) x))) X)))
T c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ ccontinuous_on / cpastecart cvec cNUMERAL c_0 b0 f1 ccontinuous_on f0 * * part cIMAGE / cpastecart cvec cNUMERAL c_0 b0 f1
- (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (P (\x. (h ((pastecart t) x)))))) |- ((\t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (P (\x. (h ((pastecart t) x)))))) t)
T c==> ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * f0 / * f1 cpastecart b0 b1 * / c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * f0 / * f1 cpastecart b0 b1 f2
+ |- (((!p'. (!q'. (((x IN X) = p') ==> ((p' ==> (((x IN X) /\ ((vec (NUMERAL (BIT1 _0))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = q')) ==> (((x IN X) ==> ((x IN X) /\ ((vec (NUMERAL (BIT1 _0))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((x IN X) = p') ==> ((p' ==> (((x IN X) /\ ((vec (NUMERAL (BIT1 _0))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = q')) ==> (((x IN X) ==> ((x IN X) /\ ((vec (NUMERAL (BIT1 _0))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((x IN X) = p') ==> ((p' ==> (((x IN X) /\ ((vec (NUMERAL (BIT1 _0))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = q')) ==> (((x IN X) ==> ((x IN X) /\ ((vec (NUMERAL (BIT1 _0))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c/\ cIN f0 f1 cIN cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> cIN f0 f1 c/\ cIN f0 f1 cIN cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 * / ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c/\ cIN f0 f1 cIN cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> cIN f0 f1 c/\ cIN f0 f1 cIN cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 f2 * / ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c/\ cIN f0 f1 cIN cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> cIN f0 f1 c/\ cIN f0 f1 cIN cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 f2
- (x IN X) |- ((x IN X) /\ ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0)))))) = (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))))))
T c==> cIN f0 f1 c/\ cIN f0 f1 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0
+ |- (T = (((continuous_on (\x. (vec (NUMERAL (BIT1 _0))))) X) /\ ((continuous_on (\x. x)) X)))
T c= cT c/\ ccontinuous_on / cvec cNUMERAL cBIT1 c_0 f0 ccontinuous_on / b0 f0
+ ((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) |- (((((continuous_on (\x. ((pastecart (vec (NUMERAL (BIT1 _0)))) x))) X) /\ ((continuous_on h) ((IMAGE (\x. ((pastecart (vec (NUMERAL (BIT1 _0)))) x))) X))) ==> ((continuous_on (h o (\x. ((pastecart (vec (NUMERAL (BIT1 _0)))) x)))) X)) = ((continuous_on (h o (\x. ((pastecart (vec (NUMERAL (BIT1 _0)))) x)))) X))
T c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= c==> c/\ ccontinuous_on / cpastecart cvec cNUMERAL cBIT1 c_0 b0 f1 ccontinuous_on f0 * * part cIMAGE / cpastecart cvec cNUMERAL cBIT1 c_0 b0 f1 ccontinuous_on * * part co f0 / cpastecart cvec cNUMERAL cBIT1 c_0 b0 f1 ccontinuous_on * * part co f0 / cpastecart cvec cNUMERAL cBIT1 c_0 b0 f1
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- ((\s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))) s)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 * * part cIMAGE f0 b0 ccontinuous_on * * part co f1 f0 b0 f2
+ |- (((continuous_on h) ((IMAGE (\x. ((pastecart (vec (NUMERAL _0))) x))) X)) = (((continuous_on (\x. ((pastecart (vec (NUMERAL _0))) x))) X) /\ ((continuous_on h) ((IMAGE (\x. ((pastecart (vec (NUMERAL _0))) x))) X))))
T c= ccontinuous_on f0 * * part cIMAGE / cpastecart cvec cNUMERAL c_0 b0 f1 c/\ ccontinuous_on / cpastecart cvec cNUMERAL c_0 b0 f1 ccontinuous_on f0 * * part cIMAGE / cpastecart cvec cNUMERAL c_0 b0 f1
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- (((!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))) ==> ((\t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))) t)) = ((\t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))) t))
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 c= c==> ! c==> ccontinuous_on f0 f1 c==> cSUBSET b0 f1 ccontinuous_on f0 b0 * / c==> ccontinuous_on f0 f1 c==> cSUBSET b0 f1 ccontinuous_on f0 b0 f2 * / c==> ccontinuous_on f0 f1 c==> cSUBSET b0 f1 ccontinuous_on f0 b0 f2
- |- (((!t3. (((t1 /\ t2) /\ t3) = (t1 /\ (t2 /\ t3)))) ==> ((\t3. (((t1 /\ t2) /\ t3) = (t1 /\ (t2 /\ t3)))) t3)) = ((\t3. (((t1 /\ t2) /\ t3) = (t1 /\ (t2 /\ t3)))) t3))
T c= c==> ! c= c/\ c/\ f0 f1 b0 c/\ f0 c/\ f1 b0 * / c= c/\ c/\ f0 f1 b0 c/\ f0 c/\ f1 b0 f2 * / c= c/\ c/\ f0 f1 b0 c/\ f0 c/\ f1 b0 f2
+ |- ((((\h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) SUBSET Y) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = (f x))) /\ ((!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (g x))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (P (\x. (h ((pastecart t) x))))))))))) h) ==> (((continuous_on f) X) /\ ((continuous_on g) X))) = T)
T c= c==> * / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f1 c/\ ! c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f2 b1 c/\ ! c= * b0 cpastecart cvec cNUMERAL cBIT1 c_0 b1 * f3 b1 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * f4 / * b0 cpastecart b1 b2 f5 c/\ ccontinuous_on f2 f0 ccontinuous_on f3 f0 cT
+ |- (((!x. (((x IN (closed_interval ((CONS (a , b)) NIL))) = (((real_le (drop a)) (drop x)) /\ ((real_le (drop x)) (drop b)))) /\ ((x IN (open_interval (a , b))) = (((real_lt (drop a)) (drop x)) /\ ((real_lt (drop x)) (drop b)))))) ==> ((\x. (((x IN (closed_interval ((CONS (a , b)) NIL))) = (((real_le (drop a)) (drop x)) /\ ((real_le (drop x)) (drop b)))) /\ ((x IN (open_interval (a , b))) = (((real_lt (drop a)) (drop x)) /\ ((real_lt (drop x)) (drop b)))))) x)) = ((\x. (((x IN (closed_interval ((CONS (a , b)) NIL))) = (((real_le (drop a)) (drop x)) /\ ((real_le (drop x)) (drop b)))) /\ ((x IN (open_interval (a , b))) = (((real_lt (drop a)) (drop x)) /\ ((real_lt (drop x)) (drop b)))))) x))
T c= c==> ! c/\ c= cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL c/\ creal_le cdrop f0 cdrop b0 creal_le cdrop b0 cdrop f1 c= cIN b0 * part copen_interval c, f0 f1 c/\ creal_lt cdrop f0 cdrop b0 creal_lt cdrop b0 cdrop f1 * / c/\ c= cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL c/\ creal_le cdrop f0 cdrop b0 creal_le cdrop b0 cdrop f1 c= cIN b0 * part copen_interval c, f0 f1 c/\ creal_lt cdrop f0 cdrop b0 creal_lt cdrop b0 cdrop f1 f2 * / c/\ c= cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL c/\ creal_le cdrop f0 cdrop b0 creal_le cdrop b0 cdrop f1 c= cIN b0 * part copen_interval c, f0 f1 c/\ creal_lt cdrop f0 cdrop b0 creal_lt cdrop b0 cdrop f1 f2
+ |- (((!P. (((((homotopic_with P) (X , Y)) p) q) = (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) SUBSET Y) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = (p x))) /\ ((!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (q x))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (P (\x. (h ((pastecart t) x))))))))))))) ==> ((\P. (((((homotopic_with P) (X , Y)) p) q) = (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) SUBSET Y) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = (p x))) /\ ((!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (q x))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (P (\x. (h ((pastecart t) x))))))))))))) P)) = ((\P. (((((homotopic_with P) (X , Y)) p) q) = (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) SUBSET Y) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = (p x))) /\ ((!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (q x))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (P (\x. (h ((pastecart t) x))))))))))))) P))
T c= c==> ! c= chomotopic_with b0 c, f0 f1 f2 f3 c? / c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f1 c/\ ! c= * b1 cpastecart cvec cNUMERAL c_0 b2 * f2 b2 c/\ ! c= * b1 cpastecart cvec cNUMERAL cBIT1 c_0 b2 * f3 b2 ! c==> cIN b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * b0 / * b1 cpastecart b2 b3 * / c= chomotopic_with b0 c, f0 f1 f2 f3 c? / c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f1 c/\ ! c= * b1 cpastecart cvec cNUMERAL c_0 b2 * f2 b2 c/\ ! c= * b1 cpastecart cvec cNUMERAL cBIT1 c_0 b2 * f3 b2 ! c==> cIN b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * b0 / * b1 cpastecart b2 b3 f4 * / c= chomotopic_with b0 c, f0 f1 f2 f3 c? / c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f1 c/\ ! c= * b1 cpastecart cvec cNUMERAL c_0 b2 * f2 b2 c/\ ! c= * b1 cpastecart cvec cNUMERAL cBIT1 c_0 b2 * f3 b2 ! c==> cIN b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * b0 / * b1 cpastecart b2 b3 f4
- |- (((!P. (!Q. ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x)))))) ==> ((\P. (!Q. ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x)))))) P)) = ((\P. (!Q. ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x)))))) P))
T c= c==> ! ! c= c? / c/\ b0 * b1 b2 c/\ b0 c? / * b1 b2 * / ! c= c? / c/\ b0 * b1 b2 c/\ b0 c? / * b1 b2 f0 * / ! c= c? / c/\ b0 * b1 b2 c/\ b0 c? / * b1 b2 f0
- |- ((?h. t) = t)
T c= c? / f0 f0
+ (x IN X) |- ((x IN X) = T)
T c==> cIN f0 f1 c= cIN f0 f1 cT
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- ((\s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t))))) s)
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 * / ! c==> ccontinuous_on f0 b0 c==> cSUBSET b1 b0 ccontinuous_on f0 b1 f1
+ ((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) |- (((!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) ==> ((continuous_on h) t))) ==> ((\t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) ==> ((continuous_on h) t))) t)) = ((\t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) ==> ((continuous_on h) t))) t))
T c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f0 b0 * / c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f0 b0 f2 * / c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f0 b0 f2
- |- (((!t1. (!t2. (!t3. (((t1 /\ t2) /\ t3) = (t1 /\ (t2 /\ t3)))))) ==> ((\t1. (!t2. (!t3. (((t1 /\ t2) /\ t3) = (t1 /\ (t2 /\ t3)))))) t1)) = ((\t1. (!t2. (!t3. (((t1 /\ t2) /\ t3) = (t1 /\ (t2 /\ t3)))))) t1))
T c= c==> ! ! ! c= c/\ c/\ b0 b1 b2 c/\ b0 c/\ b1 b2 * / ! ! c= c/\ c/\ b0 b1 b2 c/\ b0 c/\ b1 b2 f0 * / ! ! c= c/\ c/\ b0 b1 b2 c/\ b0 c/\ b1 b2 f0
+ |- (((!t. (!x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))))) ==> ((\t. (!x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))))) t)) = ((\t. (!x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))))) t))
T c= c==> ! ! ! c= cIN cpastecart b1 b2 * * part cPCROSS f0 b0 c/\ cIN b1 f0 cIN b2 b0 * / ! ! c= cIN cpastecart b1 b2 * * part cPCROSS f0 b0 c/\ cIN b1 f0 cIN b2 b0 f1 * / ! ! c= cIN cpastecart b1 b2 * * part cPCROSS f0 b0 c/\ cIN b1 f0 cIN b2 b0 f1
- |- ((\x. (!y. ((fstcart ((pastecart x) y)) = x))) x)
T * / ! c= cfstcart cpastecart b0 b1 b0 f0
+ |- ((!x. ((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0)))))))) = (!x. ((x IN X) ==> ((x IN X) /\ ((vec (NUMERAL _0)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))))
T c= ! c==> cIN b0 f0 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 ! c==> cIN b0 f0 c/\ cIN b0 f0 cIN cvec cNUMERAL c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) ==> ((continuous_on h) t))), (t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) |- ((continuous_on h) t)
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 c==> cSUBSET f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 f2
+ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = (f x))) /\ ((!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (g x))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (P (\x. (h ((pastecart t) x)))))))), ((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) |- (((continuous_on f) X) /\ ((continuous_on g) X))
T c==> c/\ ! c= * f0 cpastecart cvec cNUMERAL c_0 b0 * f1 b0 c/\ ! c= * f0 cpastecart cvec cNUMERAL cBIT1 c_0 b0 * f2 b0 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * f3 / * f0 cpastecart b0 b1 c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c/\ ccontinuous_on f1 f4 ccontinuous_on f2 f4
+ |- ((\P. (((((homotopic_with P) (X , Y)) p) q) = (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) SUBSET Y) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = (p x))) /\ ((!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (q x))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (P (\x. (h ((pastecart t) x))))))))))))) P)
T * / c= chomotopic_with b0 c, f0 f1 f2 f3 c? / c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f1 c/\ ! c= * b1 cpastecart cvec cNUMERAL c_0 b2 * f2 b2 c/\ ! c= * b1 cpastecart cvec cNUMERAL cBIT1 c_0 b2 * f3 b2 ! c==> cIN b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * b0 / * b1 cpastecart b2 b3 f4
- (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (P (\x. (h ((pastecart t) x)))))) |- ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (P (\x. (h ((pastecart t) x)))))
T c==> ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * f0 / * f1 cpastecart b0 b1 c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * f0 / * f1 cpastecart f2 b0
+ |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- |- ((\q'. (((x IN X) = p') ==> ((p' ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0)))))) = q')) ==> (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q'))))) q')
T * / c==> c= cIN f0 f1 f2 c==> c==> f2 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 b0 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> f2 b0 f3
+ |- ((!x. ((x IN ((IMAGE (\x. ((pastecart (vec (NUMERAL (BIT1 _0)))) x))) X)) ==> (x IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)))) = (!x. ((x IN X) ==> (((\x. ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)))))
T c= ! c==> cIN b0 * * part cIMAGE / cpastecart cvec cNUMERAL cBIT1 c_0 b1 f0 cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ! c==> cIN b0 f0 cIN * / cpastecart cvec cNUMERAL cBIT1 c_0 b1 b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0
+ |- ((((continuous_on (\x. (vec (NUMERAL (BIT1 _0))))) X) /\ ((continuous_on (\x. x)) X)) ==> (((continuous_on (\x. ((pastecart (vec (NUMERAL (BIT1 _0)))) x))) X) = T))
T c==> c/\ ccontinuous_on / cvec cNUMERAL cBIT1 c_0 f0 ccontinuous_on / b0 f0 c= ccontinuous_on / cpastecart cvec cNUMERAL cBIT1 c_0 b0 f0 cT
+ |- ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)
T * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
+ |- ((\p'. (!q'. (((x IN X) = p') ==> ((p' ==> (((x IN X) /\ ((vec (NUMERAL (BIT1 _0))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = q')) ==> (((x IN X) ==> ((x IN X) /\ ((vec (NUMERAL (BIT1 _0))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c/\ cIN f0 f1 cIN cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> cIN f0 f1 c/\ cIN f0 f1 cIN cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 f2
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
- |- ((?x. ((a = x) /\ (P x))) = (P a))
T c= c? / c/\ c= f0 b0 * f1 b0 * f1 f0
+ (!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = (f x))), (!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (g x))), (((continuous_on (h o (\x. ((pastecart (vec (NUMERAL _0))) x)))) X) /\ ((continuous_on (h o (\x. ((pastecart (vec (NUMERAL (BIT1 _0)))) x)))) X)) |- (((continuous_on f) X) /\ ((continuous_on g) X))
T c==> ! c= * f0 cpastecart cvec cNUMERAL c_0 b0 * f1 b0 c==> ! c= * f0 cpastecart cvec cNUMERAL cBIT1 c_0 b0 * f2 b0 c==> c/\ ccontinuous_on * * part co f0 / cpastecart cvec cNUMERAL c_0 b0 f3 ccontinuous_on * * part co f0 / cpastecart cvec cNUMERAL cBIT1 c_0 b0 f3 c/\ ccontinuous_on f1 f3 ccontinuous_on f2 f3
+ |- (((continuous_on (\x. (vec (NUMERAL _0)))) X) /\ ((continuous_on (\x. x)) X))
T c/\ ccontinuous_on / cvec cNUMERAL c_0 f0 ccontinuous_on / b0 f0
- |- (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0))))))) = ((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0))))))))
T c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0
+ |- (!x. ((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))))))
T c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0
+ |- (((!n. ((real_le (real_of_num (NUMERAL _0))) (real_of_num n))) ==> ((\n. ((real_le (real_of_num (NUMERAL _0))) (real_of_num n))) n)) = ((\n. ((real_le (real_of_num (NUMERAL _0))) (real_of_num n))) n))
T c= c==> ! creal_le creal_of_num cNUMERAL c_0 creal_of_num b0 * / creal_le creal_of_num cNUMERAL c_0 creal_of_num b0 f0 * / creal_le creal_of_num cNUMERAL c_0 creal_of_num b0 f0
+ |- (((continuous_on (\x. x)) s) = T)
T c= ccontinuous_on / b0 f0 cT
+ |- ((\t. (!x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))))) t)
T * / ! ! c= cIN cpastecart b1 b2 * * part cPCROSS f0 b0 c/\ cIN b1 f0 cIN b2 b0 f1
- |- (((x IN X) ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0)))))) = q')) ==> (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))))) = ((x IN X) ==> q')))
T c==> c==> cIN f0 f1 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 f2 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> cIN f0 f1 f2
+ |- (((!X. (!Y. (!p. (!q. (!P. (((((homotopic_with P) (X , Y)) p) q) = (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) SUBSET Y) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = (p x))) /\ ((!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (q x))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (P (\x. (h ((pastecart t) x))))))))))))))))) ==> ((\X. (!Y. (!p. (!q. (!P. (((((homotopic_with P) (X , Y)) p) q) = (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) SUBSET Y) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = (p x))) /\ ((!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (q x))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (P (\x. (h ((pastecart t) x))))))))))))))))) X)) = ((\X. (!Y. (!p. (!q. (!P. (((((homotopic_with P) (X , Y)) p) q) = (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) SUBSET Y) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = (p x))) /\ ((!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (q x))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (P (\x. (h ((pastecart t) x))))))))))))))))) X))
T c= c==> ! ! ! ! ! c= chomotopic_with b4 c, b0 b1 b2 b3 c? / c/\ ccontinuous_on b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c/\ cSUBSET * * part cIMAGE b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 b1 c/\ ! c= * b5 cpastecart cvec cNUMERAL c_0 b6 * b2 b6 c/\ ! c= * b5 cpastecart cvec cNUMERAL cBIT1 c_0 b6 * b3 b6 ! c==> cIN b6 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * b4 / * b5 cpastecart b6 b7 * / ! ! ! ! c= chomotopic_with b4 c, b0 b1 b2 b3 c? / c/\ ccontinuous_on b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c/\ cSUBSET * * part cIMAGE b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 b1 c/\ ! c= * b5 cpastecart cvec cNUMERAL c_0 b6 * b2 b6 c/\ ! c= * b5 cpastecart cvec cNUMERAL cBIT1 c_0 b6 * b3 b6 ! c==> cIN b6 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * b4 / * b5 cpastecart b6 b7 f0 * / ! ! ! ! c= chomotopic_with b4 c, b0 b1 b2 b3 c? / c/\ ccontinuous_on b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c/\ cSUBSET * * part cIMAGE b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 b1 c/\ ! c= * b5 cpastecart cvec cNUMERAL c_0 b6 * b2 b6 c/\ ! c= * b5 cpastecart cvec cNUMERAL cBIT1 c_0 b6 * b3 b6 ! c==> cIN b6 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * b4 / * b5 cpastecart b6 b7 f0
+ |- (((!x. ((real_le x) x)) ==> ((\x. ((real_le x) x)) x)) = ((\x. ((real_le x) x)) x))
T c= c==> ! creal_le b0 b0 * / creal_le b0 b0 f0 * / creal_le b0 b0 f0
+ ((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) |- ((continuous_on (h o (\x. ((pastecart (vec (NUMERAL _0))) x)))) X)
T c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on * * part co f0 / cpastecart cvec cNUMERAL c_0 b0 f1
+ |- (((!s. (((continuous_on f) s) ==> (!t. ((t SUBSET s) ==> ((continuous_on f) t))))) ==> ((\s. (((continuous_on f) s) ==> (!t. ((t SUBSET s) ==> ((continuous_on f) t))))) s)) = ((\s. (((continuous_on f) s) ==> (!t. ((t SUBSET s) ==> ((continuous_on f) t))))) s))
T c= c==> ! c==> ccontinuous_on f0 b0 ! c==> cSUBSET b1 b0 ccontinuous_on f0 b1 * / c==> ccontinuous_on f0 b0 ! c==> cSUBSET b1 b0 ccontinuous_on f0 b1 f1 * / c==> ccontinuous_on f0 b0 ! c==> cSUBSET b1 b0 ccontinuous_on f0 b1 f1
- |- (((x IN X) ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0)))))) = q')) ==> (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0))))))) = ((x IN X) ==> q')))
T c==> c==> cIN f0 f1 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 f2 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> cIN f0 f1 f2
+ |- ((((((homotopic_with P) (X , Y)) f) g) ==> (((continuous_on f) X) /\ ((continuous_on g) X))) = T)
T c= c==> chomotopic_with f0 c, f1 f2 f3 f4 c/\ ccontinuous_on f3 f1 ccontinuous_on f4 f1 cT
+ |- ((\s. (!c. ((continuous_on (\x. c)) s))) s)
T * / ! ccontinuous_on / b1 b0 f0
+ |- (((!x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t))))) ==> ((\x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t))))) x)) = ((\x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t))))) x))
T c= c==> ! ! c= cIN cpastecart b0 b1 * * part cPCROSS f0 f1 c/\ cIN b0 f0 cIN b1 f1 * / ! c= cIN cpastecart b0 b1 * * part cPCROSS f0 f1 c/\ cIN b0 f0 cIN b1 f1 f2 * / ! c= cIN cpastecart b0 b1 * * part cPCROSS f0 f1 c/\ cIN b0 f0 cIN b1 f1 f2
+ |- ((x IN X) ==> (((x IN X) /\ ((vec (NUMERAL (BIT1 _0))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0))))))))
T c==> cIN f0 f1 c= c/\ cIN f0 f1 cIN cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0
+ ((\h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) SUBSET Y) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = (f x))) /\ ((!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (g x))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (P (\x. (h ((pastecart t) x))))))))))) h) |- (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) SUBSET Y) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = (f x))) /\ ((!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (g x))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (P (\x. (h ((pastecart t) x))))))))))
T c==> * / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f1 c/\ ! c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f2 b1 c/\ ! c= * b0 cpastecart cvec cNUMERAL cBIT1 c_0 b1 * f3 b1 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * f4 / * b0 cpastecart b1 b2 f5 c/\ ccontinuous_on f5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET * * part cIMAGE f5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f1 c/\ ! c= * f5 cpastecart cvec cNUMERAL c_0 b0 * f2 b0 c/\ ! c= * f5 cpastecart cvec cNUMERAL cBIT1 c_0 b0 * f3 b0 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * f4 / * f5 cpastecart b0 b1
+ (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- (!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 ! ! c==> c/\ ccontinuous_on b0 b1 ccontinuous_on f0 * * part cIMAGE b0 b1 ccontinuous_on * * part co f0 b0 b1
+ |- ((\n. ((real_le (real_of_num (NUMERAL _0))) (real_of_num n))) n)
T * / creal_le creal_of_num cNUMERAL c_0 creal_of_num b0 f0
+ |- ((x IN (closed_interval ((CONS (a , b)) NIL))) = (((real_le (drop a)) (drop x)) /\ ((real_le (drop x)) (drop b))))
T c= cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c/\ creal_le cdrop f1 cdrop f0 creal_le cdrop f0 cdrop f2
+ ((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) |- ((\t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) ==> ((continuous_on h) t))) t)
T c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 * / c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f0 b0 f2
+ |- (((!p'. (!q'. (((x IN X) = p') ==> ((p' ==> (((x IN X) /\ ((vec (NUMERAL _0)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = q')) ==> (((x IN X) ==> ((x IN X) /\ ((vec (NUMERAL _0)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((x IN X) = p') ==> ((p' ==> (((x IN X) /\ ((vec (NUMERAL _0)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = q')) ==> (((x IN X) ==> ((x IN X) /\ ((vec (NUMERAL _0)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((x IN X) = p') ==> ((p' ==> (((x IN X) /\ ((vec (NUMERAL _0)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = q')) ==> (((x IN X) ==> ((x IN X) /\ ((vec (NUMERAL _0)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c/\ cIN f0 f1 cIN cvec cNUMERAL c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> cIN f0 f1 c/\ cIN f0 f1 cIN cvec cNUMERAL c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 * / ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c/\ cIN f0 f1 cIN cvec cNUMERAL c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> cIN f0 f1 c/\ cIN f0 f1 cIN cvec cNUMERAL c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 f2 * / ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c/\ cIN f0 f1 cIN cvec cNUMERAL c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> cIN f0 f1 c/\ cIN f0 f1 cIN cvec cNUMERAL c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 f2
- |- (((!a. ((?x. ((a = x) /\ (P x))) = (P a))) ==> ((\a. ((?x. ((a = x) /\ (P x))) = (P a))) a)) = ((\a. ((?x. ((a = x) /\ (P x))) = (P a))) a))
T c= c==> ! c= c? / c/\ c= b0 b1 * f0 b1 * f0 b0 * / c= c? / c/\ c= b0 b1 * f0 b1 * f0 b0 f1 * / c= c? / c/\ c= b0 b1 * f0 b1 * f0 b0 f1
+ |- ((!x. ((x IN X) ==> (((vec (NUMERAL _0)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (x IN X)))) = (((IMAGE (\x. ((pastecart (vec (NUMERAL _0))) x))) X) SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)))
T c= ! c==> cIN b0 f0 c/\ cIN cvec cNUMERAL c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b0 f0 cSUBSET * * part cIMAGE / cpastecart cvec cNUMERAL c_0 b0 f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0
+ |- (((((IMAGE (\x. ((pastecart (vec (NUMERAL _0))) x))) X) SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) ==> ((continuous_on h) ((IMAGE (\x. ((pastecart (vec (NUMERAL _0))) x))) X))) = ((continuous_on h) ((IMAGE (\x. ((pastecart (vec (NUMERAL _0))) x))) X)))
T c= c==> cSUBSET * * part cIMAGE / cpastecart cvec cNUMERAL c_0 b0 f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 * * part cIMAGE / cpastecart cvec cNUMERAL c_0 b0 f0 ccontinuous_on f1 * * part cIMAGE / cpastecart cvec cNUMERAL c_0 b0 f0
+ |- ((!x. ((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0)))))))) = (!x. ((x IN X) ==> ((x IN X) /\ ((vec (NUMERAL (BIT1 _0))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))))
T c= ! c==> cIN b0 f0 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 ! c==> cIN b0 f0 c/\ cIN b0 f0 cIN cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- |- ((((x IN X) = (x IN X)) ==> (((x IN X) ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0)))))) = q')) ==> (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0))))))) = ((x IN X) ==> q')))) = (((x IN X) ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0)))))) = q')) ==> (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0))))))) = ((x IN X) ==> q'))))
T c= c==> c= cIN f0 f1 cIN f0 f1 c==> c==> cIN f0 f1 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 f2 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> cIN f0 f1 f2 c==> c==> cIN f0 f1 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 f2 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> cIN f0 f1 f2
- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) ==> ((continuous_on h) t))), (t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) |- ((!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) ==> ((continuous_on h) t))) /\ ((continuous_on h) t))
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 c==> cSUBSET f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 ccontinuous_on f1 f2
+ (((continuous_on f) s) /\ ((continuous_on g) s)) |- ((((continuous_on f) s) /\ ((continuous_on g) s)) /\ (((continuous_on (\x. ((pastecart (f x)) (g x)))) s) = T))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 c/\ c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 c= ccontinuous_on / cpastecart * f0 b0 * f2 b0 f1 cT
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- (((!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t))))) ==> ((\s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t))))) s)) = ((\s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t))))) s))
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 c= c==> ! ! c==> ccontinuous_on f0 b0 c==> cSUBSET b1 b0 ccontinuous_on f0 b1 * / ! c==> ccontinuous_on f0 b0 c==> cSUBSET b1 b0 ccontinuous_on f0 b1 f1 * / ! c==> ccontinuous_on f0 b0 c==> cSUBSET b1 b0 ccontinuous_on f0 b1 f1
- |- ((\p'. (!q'. (((x IN X) = p') ==> ((p' ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0)))))) = q')) ==> (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 b1 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> b0 b1 f2
- (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (P (\x. (h ((pastecart t) x)))))) |- (((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (P (\x. (h ((pastecart t) x))))) = T)
T c==> ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * f0 / * f1 cpastecart b0 b1 c= c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * f0 / * f1 cpastecart f2 b0 cT
+ |- (((continuous_on (\x. c)) s) = T)
T c= ccontinuous_on / f0 f1 cT
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- ((\t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))) t)
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 * / c==> ccontinuous_on f0 f1 c==> cSUBSET b0 f1 ccontinuous_on f0 b0 f2
+ |- ((\x. (((x IN (closed_interval ((CONS (a , b)) NIL))) = (((real_le (drop a)) (drop x)) /\ ((real_le (drop x)) (drop b)))) /\ ((x IN (open_interval (a , b))) = (((real_lt (drop a)) (drop x)) /\ ((real_lt (drop x)) (drop b)))))) x)
T * / c/\ c= cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL c/\ creal_le cdrop f0 cdrop b0 creal_le cdrop b0 cdrop f1 c= cIN b0 * part copen_interval c, f0 f1 c/\ creal_lt cdrop f0 cdrop b0 creal_lt cdrop b0 cdrop f1 f2
+ |- ((\q'. (((x IN X) = p') ==> ((p' ==> (((x IN X) /\ ((vec (NUMERAL (BIT1 _0))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = q')) ==> (((x IN X) ==> ((x IN X) /\ ((vec (NUMERAL (BIT1 _0))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = (p' ==> q'))))) q')
T * / c==> c= cIN f0 f1 f2 c==> c==> f2 c= c/\ cIN f0 f1 cIN cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= c==> cIN f0 f1 c/\ cIN f0 f1 cIN cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> f2 b0 f3
+ |- (((continuous_on (\x. ((pastecart (vec (NUMERAL (BIT1 _0)))) x))) X) = T)
T c= ccontinuous_on / cpastecart cvec cNUMERAL cBIT1 c_0 b0 f0 cT
+ |- ((((x IN X) = (x IN X)) ==> (((x IN X) ==> (((x IN X) /\ ((vec (NUMERAL (BIT1 _0))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = q')) ==> (((x IN X) ==> ((x IN X) /\ ((vec (NUMERAL (BIT1 _0))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = ((x IN X) ==> q')))) = (((x IN X) ==> (((x IN X) /\ ((vec (NUMERAL (BIT1 _0))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = q')) ==> (((x IN X) ==> ((x IN X) /\ ((vec (NUMERAL (BIT1 _0))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = ((x IN X) ==> q'))))
T c= c==> c= cIN f0 f1 cIN f0 f1 c==> c==> cIN f0 f1 c= c/\ cIN f0 f1 cIN cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= c==> cIN f0 f1 c/\ cIN f0 f1 cIN cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN f0 f1 f2 c==> c==> cIN f0 f1 c= c/\ cIN f0 f1 cIN cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= c==> cIN f0 f1 c/\ cIN f0 f1 cIN cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN f0 f1 f2
- |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((\t2. ((t1 /\ t2) = (t2 /\ t1))) t2)
T * / c= c/\ f0 b0 c/\ b0 f0 f1
- |- (((!P. (!a. ((?x. ((a = x) /\ (P x))) = (P a)))) ==> ((\P. (!a. ((?x. ((a = x) /\ (P x))) = (P a)))) P)) = ((\P. (!a. ((?x. ((a = x) /\ (P x))) = (P a)))) P))
T c= c==> ! ! c= c? / c/\ c= b1 b2 * b0 b2 * b0 b1 * / ! c= c? / c/\ c= b1 b2 * b0 b2 * b0 b1 f0 * / ! c= c? / c/\ c= b1 b2 * b0 b2 * b0 b1 f0
- |- ((\t3. (((t1 /\ t2) /\ t3) = (t1 /\ (t2 /\ t3)))) t3)
T * / c= c/\ c/\ f0 f1 b0 c/\ f0 c/\ f1 b0 f2
- |- (((!p'. (!q'. (((x IN X) = p') ==> ((p' ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0)))))) = q')) ==> (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((x IN X) = p') ==> ((p' ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0)))))) = q')) ==> (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((x IN X) = p') ==> ((p' ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0)))))) = q')) ==> (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 b1 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> b0 b1 * / ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 b1 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> b0 b1 f2 * / ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 b1 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> b0 b1 f2
- |- ((x IN (open_interval (a , b))) = (((real_lt (drop a)) (drop x)) /\ ((real_lt (drop x)) (drop b))))
T c= cIN f0 * part copen_interval c, f1 f2 c/\ creal_lt cdrop f1 cdrop f0 creal_lt cdrop f0 cdrop f2
- |- ((\Q. ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x))))) Q)
T * / c= c? / c/\ f0 * b0 b1 c/\ f0 c? / * b0 b1 f1
- (((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) ==> ((continuous_on (g o f)) s))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 ccontinuous_on * * part co f2 f0 f1
- ((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) |- (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) = T)
T c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cT
- |- ((fstcart ((pastecart x) y)) = x)
T c= cfstcart cpastecart f0 f1 f0
- |- (((!y. ((sndcart ((pastecart x) y)) = y)) ==> ((\y. ((sndcart ((pastecart x) y)) = y)) y)) = ((\y. ((sndcart ((pastecart x) y)) = y)) y))
T c= c==> ! c= csndcart cpastecart f0 b0 b0 * / c= csndcart cpastecart f0 b0 b0 f1 * / c= csndcart cpastecart f0 b0 b0 f1
- |- ((sndcart ((pastecart x) y)) = y)
T c= csndcart cpastecart f0 f1 f1
- |- (((!t2. (!t3. (((t1 /\ t2) /\ t3) = (t1 /\ (t2 /\ t3))))) ==> ((\t2. (!t3. (((t1 /\ t2) /\ t3) = (t1 /\ (t2 /\ t3))))) t2)) = ((\t2. (!t3. (((t1 /\ t2) /\ t3) = (t1 /\ (t2 /\ t3))))) t2))
T c= c==> ! ! c= c/\ c/\ f0 b0 b1 c/\ f0 c/\ b0 b1 * / ! c= c/\ c/\ f0 b0 b1 c/\ f0 c/\ b0 b1 f1 * / ! c= c/\ c/\ f0 b0 b1 c/\ f0 c/\ b0 b1 f1
- |- ((\p'. (!q'. (((x IN X) = p') ==> ((p' ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0)))))) = q')) ==> (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 b1 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> b0 b1 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((x IN X) ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0)))))) = (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))))))
T c==> cIN f0 f1 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0
- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) ==> ((continuous_on h) t))) |- ((!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) ==> ((continuous_on h) t))) /\ (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) ==> ((continuous_on h) t))))
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 c/\ ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0
- |- (((!Q. ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x))))) ==> ((\Q. ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x))))) Q)) = ((\Q. ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x))))) Q))
T c= c==> ! c= c? / c/\ f0 * b0 b1 c/\ f0 c? / * b0 b1 * / c= c? / c/\ f0 * b0 b1 c/\ f0 c? / * b0 b1 f1 * / c= c? / c/\ f0 * b0 b1 c/\ f0 c? / * b0 b1 f1
- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) ==> ((continuous_on h) t))) |- (((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) ==> ((continuous_on h) t)) = T)
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 c= c==> cSUBSET f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 f2 cT
- (((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) SUBSET Y) |- ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) SUBSET Y) = T)
T c==> cSUBSET * * part cIMAGE f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c= cSUBSET * * part cIMAGE f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 cT
- |- (((!q'. (((x IN X) = p') ==> ((p' ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0)))))) = q')) ==> (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q'))))) ==> ((\q'. (((x IN X) = p') ==> ((p' ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0)))))) = q')) ==> (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q'))))) q')) = ((\q'. (((x IN X) = p') ==> ((p' ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0)))))) = q')) ==> (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cIN f0 f1 f2 c==> c==> f2 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 b0 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> f2 b0 * / c==> c= cIN f0 f1 f2 c==> c==> f2 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 b0 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> f2 b0 f3 * / c==> c= cIN f0 f1 f2 c==> c==> f2 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 b0 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> f2 b0 f3
- |- ((((x IN X) = (x IN X)) ==> (((x IN X) ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0)))))) = q')) ==> (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))))) = ((x IN X) ==> q')))) = (((x IN X) ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0)))))) = q')) ==> (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))))) = ((x IN X) ==> q'))))
T c= c==> c= cIN f0 f1 cIN f0 f1 c==> c==> cIN f0 f1 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 f2 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> cIN f0 f1 f2 c==> c==> cIN f0 f1 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 f2 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> cIN f0 f1 f2
- |- (((t1 /\ t2) /\ t3) = (t1 /\ (t2 /\ t3)))
T c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2
- |- ((\x. (!y. ((sndcart ((pastecart x) y)) = y))) x)
T * / ! c= csndcart cpastecart b0 b1 b1 f0
- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) ==> ((continuous_on h) t))), (t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) |- ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) /\ ((continuous_on h) t))
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 c==> cSUBSET f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 f2
- |- ((\q'. (((x IN X) = p') ==> ((p' ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0)))))) = q')) ==> (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q'))))) q')
T * / c==> c= cIN f0 f1 f2 c==> c==> f2 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 b0 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> f2 b0 f3
- |- (((!y. ((fstcart ((pastecart x) y)) = x)) ==> ((\y. ((fstcart ((pastecart x) y)) = x)) y)) = ((\y. ((fstcart ((pastecart x) y)) = x)) y))
T c= c==> ! c= cfstcart cpastecart f0 b0 f0 * / c= cfstcart cpastecart f0 b0 f0 f1 * / c= cfstcart cpastecart f0 b0 f0 f1
- |- (((!p'. (!q'. (((x IN X) = p') ==> ((p' ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0)))))) = q')) ==> (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((x IN X) = p') ==> ((p' ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0)))))) = q')) ==> (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((x IN X) = p') ==> ((p' ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0)))))) = q')) ==> (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 b1 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> b0 b1 * / ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 b1 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> b0 b1 f2 * / ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 b1 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> b0 b1 f2
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))), (((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) |- ((continuous_on (g o f)) s)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 ccontinuous_on * * part co f2 f0 f1
- |- ((\P. (!Q. ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x)))))) P)
T * / ! c= c? / c/\ b0 * b1 b2 c/\ b0 c? / * b1 b2 f0
- (((t1 /\ t2) /\ t3) = (t1 /\ (t2 /\ t3))) |- ((t1 /\ (t2 /\ t3)) = ((t1 /\ t2) /\ t3))
T c==> c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- (((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)) = T)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c= c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 ccontinuous_on * * part co f2 f0 f1 cT
- |- ((\t1. (!t2. (!t3. (((t1 /\ t2) /\ t3) = (t1 /\ (t2 /\ t3)))))) t1)
T * / ! ! c= c/\ c/\ b0 b1 b2 c/\ b0 c/\ b1 b2 f0
- |- ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x))))
T c= c? / c/\ f0 * f1 b0 c/\ f0 c? / * f1 b0
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))))) = ((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))))))
T c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0
- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) ==> ((continuous_on h) t))) |- ((\t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) ==> ((continuous_on h) t))) t)
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 * / c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 f2
- |- (((!q'. (((x IN X) = p') ==> ((p' ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0)))))) = q')) ==> (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q'))))) ==> ((\q'. (((x IN X) = p') ==> ((p' ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0)))))) = q')) ==> (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q'))))) q')) = ((\q'. (((x IN X) = p') ==> ((p' ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0)))))) = q')) ==> (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL _0)))) /\ ((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cIN f0 f1 f2 c==> c==> f2 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 b0 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> f2 b0 * / c==> c= cIN f0 f1 f2 c==> c==> f2 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 b0 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> f2 b0 f3 * / c==> c= cIN f0 f1 f2 c==> c==> f2 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 b0 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL c_0 creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> f2 b0 f3
- |- (((x IN X) = p') ==> ((p' ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0)))))) = q')) ==> (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q'))))
T c==> c= cIN f0 f1 f2 c==> c==> f2 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 f3 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> f2 f3
- (t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) |- ((!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) ==> ((continuous_on h) t))) ==> ((continuous_on h) t))
T c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f2 b0 ccontinuous_on f2 f0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- (((!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))) ==> ((\s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))) s)) = ((\s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c= c==> ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 * * part cIMAGE f0 b0 ccontinuous_on * * part co f1 f0 b0 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 * * part cIMAGE f0 b0 ccontinuous_on * * part co f1 f0 b0 f2 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 * * part cIMAGE f0 b0 ccontinuous_on * * part co f1 f0 b0 f2
- |- ((((x IN X) ==> ((((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0)))))) = (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0)))))))) ==> (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0))))))) = ((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0))))))))) = (((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0))))))) = ((x IN X) ==> (((real_le (drop (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) /\ ((real_le (drop (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0)))))))))
T c= c==> c==> cIN f0 f1 c= c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 c= c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> cIN f0 f1 c/\ creal_le cdrop cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cdrop cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0
- |- ((\P. (!a. ((?x. ((a = x) /\ (P x))) = (P a)))) P)
T * / ! c= c? / c/\ c= b1 b2 * b0 b2 * b0 b1 f0
- |- ((\t2. (!t3. (((t1 /\ t2) /\ t3) = (t1 /\ (t2 /\ t3))))) t2)
T * / ! c= c/\ c/\ f0 b0 b1 c/\ f0 c/\ b0 b1 f1
