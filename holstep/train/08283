N REAL_FUNDAMENTAL_THEOREM_OF_CALCULUS
C |- (!f. (!f'. (!a. (!b. ((((real_le a) b) /\ (!x. ((x IN (closed_real_interval ((CONS (a , b)) NIL))) ==> (((has_real_derivative f) (f' x)) ((within (atreal x)) (closed_real_interval ((CONS (a , b)) NIL))))))) ==> (((has_real_integral f') ((real_sub (f b)) (f a))) (closed_real_interval ((CONS (a , b)) NIL))))))))
T c==> c/\ creal_le f0 f1 ! c==> cIN b0 * part cclosed_real_interval cCONS c, f0 f1 cNIL chas_real_derivative f2 * f3 b0 cwithin catreal b0 * part cclosed_real_interval cCONS c, f0 f1 cNIL chas_real_integral f3 creal_sub * f2 f1 * f2 f0 * part cclosed_real_interval cCONS c, f0 f1 cNIL
D TRUTH
A |- T
T cT
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D FORALL_IN_IMAGE
A |- (!f. (!s. ((!y. ((y IN ((IMAGE f) s)) ==> (P y))) = (!x. ((x IN s) ==> (P (f x)))))))
T c= ! c==> cIN b0 * * part cIMAGE f0 f1 * f2 b0 ! c==> cIN b0 f1 * f2 * f0 b0
D LIFT_DROP
A |- ((!x. ((lift (drop x)) = x)) /\ (!x. ((drop (lift x)) = x)))
T c/\ ! c= clift cdrop b0 b0 ! c= cdrop clift b0 b0
D LIFT_SUB
A |- (!x. (!y. ((lift ((real_sub x) y)) = ((vector_sub (lift x)) (lift y)))))
T c= clift creal_sub f0 f1 cvector_sub clift f0 clift f1
D FUNDAMENTAL_THEOREM_OF_CALCULUS
A |- (!f. (!f'. (!a. (!b. ((((real_le (drop a)) (drop b)) /\ (!x. ((x IN (closed_interval ((CONS (a , b)) NIL))) ==> (((has_vector_derivative f) (f' x)) ((within (at x)) (closed_interval ((CONS (a , b)) NIL))))))) ==> (((has_integral f') ((vector_sub (f b)) (f a))) (closed_interval ((CONS (a , b)) NIL))))))))
T c==> c/\ creal_le cdrop f0 cdrop f1 ! c==> cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL chas_vector_derivative f2 * f3 b0 cwithin cat b0 * part cclosed_interval cCONS c, f0 f1 cNIL chas_integral f3 cvector_sub * f2 f1 * f2 f0 * part cclosed_interval cCONS c, f0 f1 cNIL
D HAS_REAL_VECTOR_DERIVATIVE_WITHIN
A |- ((((has_real_derivative f) f') ((within (atreal x)) s)) = (((has_vector_derivative (lift o (f o drop))) (lift f')) ((within (at (lift x))) ((IMAGE lift) s))))
T c= chas_real_derivative f0 f1 cwithin catreal f2 f3 chas_vector_derivative * * part co part clift * * part co f0 part cdrop clift f1 cwithin cat clift f2 * * part cIMAGE part clift f3
D REAL_INTERVAL_INTERVAL
A |- (((closed_real_interval ((CONS (a , b)) NIL)) = ((IMAGE drop) (closed_interval ((CONS ((lift a) , (lift b))) NIL)))) /\ ((open_real_interval (a , b)) = ((IMAGE drop) (open_interval ((lift a) , (lift b))))))
T c/\ c= * part cclosed_real_interval cCONS c, f0 f1 cNIL * * part cIMAGE part cdrop * part cclosed_interval cCONS c, clift f0 clift f1 cNIL c= * part copen_real_interval c, f0 f1 * * part cIMAGE part cdrop * part copen_interval c, clift f0 clift f1
D IMAGE_LIFT_REAL_INTERVAL
A |- ((((IMAGE lift) (closed_real_interval ((CONS (a , b)) NIL))) = (closed_interval ((CONS ((lift a) , (lift b))) NIL))) /\ (((IMAGE lift) (open_real_interval (a , b))) = (open_interval ((lift a) , (lift b)))))
T c/\ c= * * part cIMAGE part clift * part cclosed_real_interval cCONS c, f0 f1 cNIL * part cclosed_interval cCONS c, clift f0 clift f1 cNIL c= * * part cIMAGE part clift * part copen_real_interval c, f0 f1 * part copen_interval c, clift f0 clift f1
D has_real_integral
A |- (!f. (!y. (!s. ((((has_real_integral f) y) s) = (((has_integral (lift o (f o drop))) (lift y)) ((IMAGE lift) s))))))
T c= chas_real_integral f0 f1 f2 chas_integral * * part co part clift * * part co f0 part cdrop clift f1 * * part cIMAGE part clift f2
- |- ((open_real_interval (a , b)) = ((IMAGE drop) (open_interval ((lift a) , (lift b)))))
T c= * part copen_real_interval c, f0 f1 * * part cIMAGE part cdrop * part copen_interval c, clift f0 clift f1
+ |- (((!x. ((lift (drop x)) = x)) ==> ((\x. ((lift (drop x)) = x)) x)) = ((\x. ((lift (drop x)) = x)) x))
T c= c==> ! c= clift cdrop b0 b0 * / c= clift cdrop b0 b0 f0 * / c= clift cdrop b0 b0 f0
- |- (((IMAGE lift) (open_real_interval (a , b))) = (open_interval ((lift a) , (lift b))))
T c= * * part cIMAGE part clift * part copen_real_interval c, f0 f1 * part copen_interval c, clift f0 clift f1
+ |- (((!x. ((drop (lift x)) = x)) ==> ((\x. ((drop (lift x)) = x)) x)) = ((\x. ((drop (lift x)) = x)) x))
T c= c==> ! c= cdrop clift b0 b0 * / c= cdrop clift b0 b0 f0 * / c= cdrop clift b0 b0 f0
+ (((real_le (drop (lift a))) (drop (lift b))) /\ (!x. ((x IN (closed_interval ((CONS ((lift a) , (lift b))) NIL))) ==> (((has_vector_derivative (lift o (f o drop))) (lift (f' (drop x)))) ((within (at x)) (closed_interval ((CONS ((lift a) , (lift b))) NIL))))))) |- (((((has_integral (\x. (lift (f' (drop x))))) ((vector_sub ((lift o (f o drop)) (lift b))) ((lift o (f o drop)) (lift a)))) (closed_interval ((CONS ((lift a) , (lift b))) NIL))) ==> (((has_integral (lift o (f' o drop))) ((vector_sub (lift (f b))) (lift (f a)))) (closed_interval ((CONS ((lift a) , (lift b))) NIL)))) = (((has_integral (lift o (f' o drop))) ((vector_sub (lift (f b))) (lift (f a)))) (closed_interval ((CONS ((lift a) , (lift b))) NIL))))
T c==> c/\ creal_le cdrop clift f0 cdrop clift f1 ! c==> cIN b0 * part cclosed_interval cCONS c, clift f0 clift f1 cNIL chas_vector_derivative * * part co part clift * * part co f2 part cdrop clift * f3 cdrop b0 cwithin cat b0 * part cclosed_interval cCONS c, clift f0 clift f1 cNIL c= c==> chas_integral / clift * f3 cdrop b0 cvector_sub co part clift * * part co f2 part cdrop clift f1 co part clift * * part co f2 part cdrop clift f0 * part cclosed_interval cCONS c, clift f0 clift f1 cNIL chas_integral * * part co part clift * * part co f3 part cdrop cvector_sub clift * f2 f1 clift * f2 f0 * part cclosed_interval cCONS c, clift f0 clift f1 cNIL chas_integral * * part co part clift * * part co f3 part cdrop cvector_sub clift * f2 f1 clift * f2 f0 * part cclosed_interval cCONS c, clift f0 clift f1 cNIL
+ |- ((!x. (x = (lift (drop x)))) /\ (!x. (x = (drop (lift x)))))
T c/\ ! c= b0 clift cdrop b0 ! c= b0 cdrop clift b0
+ |- (((!f. (!y. (!s. ((((has_real_integral f) y) s) = (((has_integral (lift o (f o drop))) (lift y)) ((IMAGE lift) s)))))) ==> ((\f. (!y. (!s. ((((has_real_integral f) y) s) = (((has_integral (lift o (f o drop))) (lift y)) ((IMAGE lift) s)))))) f)) = ((\f. (!y. (!s. ((((has_real_integral f) y) s) = (((has_integral (lift o (f o drop))) (lift y)) ((IMAGE lift) s)))))) f))
T c= c==> ! ! ! c= chas_real_integral b0 b1 b2 chas_integral * * part co part clift * * part co b0 part cdrop clift b1 * * part cIMAGE part clift b2 * / ! ! c= chas_real_integral b0 b1 b2 chas_integral * * part co part clift * * part co b0 part cdrop clift b1 * * part cIMAGE part clift b2 f0 * / ! ! c= chas_real_integral b0 b1 b2 chas_integral * * part co part clift * * part co b0 part cdrop clift b1 * * part cIMAGE part clift b2 f0
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- (T = ((((has_integral (\x. (lift (f' (drop x))))) ((vector_sub ((lift o (f o drop)) (lift b))) ((lift o (f o drop)) (lift a)))) (closed_interval ((CONS ((lift a) , (lift b))) NIL))) ==> (((has_integral (lift o (f' o drop))) ((vector_sub (lift (f b))) (lift (f a)))) (closed_interval ((CONS ((lift a) , (lift b))) NIL)))))
T c= cT c==> chas_integral / clift * f0 cdrop b0 cvector_sub co part clift * * part co f1 part cdrop clift f2 co part clift * * part co f1 part cdrop clift f3 * part cclosed_interval cCONS c, clift f3 clift f2 cNIL chas_integral * * part co part clift * * part co f0 part cdrop cvector_sub clift * f1 f2 clift * f1 f3 * part cclosed_interval cCONS c, clift f3 clift f2 cNIL
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- |- ((!x. t) = t)
T c= ! f0 f0
- |- (((!x. (x = (lift (drop x)))) ==> ((\x. (x = (lift (drop x)))) x)) = ((\x. (x = (lift (drop x)))) x))
T c= c==> ! c= b0 clift cdrop b0 * / c= b0 clift cdrop b0 f0 * / c= b0 clift cdrop b0 f0
- |- (x = (lift (drop x)))
T c= f0 clift cdrop f0
- |- ((\x. (x = (lift (drop x)))) x)
T * / c= b0 clift cdrop b0 f0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
