N SLICE_DROPOUT_3
C |- (!P. (!t. ((((slice (NUMERAL (BIT1 (BIT1 _0)))) t) (GSPEC (\GEN%PVAR%5074. (?x. (((SETSPEC GEN%PVAR%5074) (P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))) x))))) = (GSPEC (\GEN%PVAR%5075. (?x. (((SETSPEC GEN%PVAR%5075) (P x)) x)))))))
T c= * * * part cslice cNUMERAL cBIT1 cBIT1 c_0 f0 * part cGSPEC / c? / cSETSPEC b0 * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b1 b1 * part cGSPEC / c? / cSETSPEC b0 * f1 b1 b1
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_LE
A |- ((!m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) /\ (((_0 <= _0) = T) /\ ((!n. (((BIT0 n) <= _0) = (n <= _0))) /\ ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))))))))
T c/\ ! ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 c/\ c= c<= c_0 c_0 cT c/\ ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
D ARITH_LT
A |- ((!m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) /\ (((_0 < _0) = F) /\ ((!n. (((BIT0 n) < _0) = F)) /\ ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))))))))))
T c/\ ! ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 c/\ c= c< c_0 c_0 cF c/\ ! c= c< cBIT0 b0 c_0 cF c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
D ARITH_EQ
A |- ((!m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) /\ (((_0 = _0) = T) /\ ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))))))
T c/\ ! ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 c/\ c= c= c_0 c_0 cT c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D IN_IMAGE
A |- (!y. (!s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s)))))))
T c= cIN f0 * * part cIMAGE f1 f2 c? / c/\ c= f0 * f1 b0 cIN b0 f2
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D DIMINDEX_2
A |- ((dimindex UNIV) = (NUMERAL (BIT0 (BIT1 _0))))
T c= cdimindex part cUNIV cNUMERAL cBIT0 cBIT1 c_0
D DIMINDEX_3
A |- ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0))))
T c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0
D pushin
A |- (!k. (!t. (!x. ((((pushin k) t) x) = (lambdai. (((COND (i < k)) (x $ i)) (((COND (i = k)) t) (x $ (i - (NUMERAL (BIT1 _0)))))))))))
T c= cpushin f0 f1 f2 clambda / cCOND c< b0 f0 c$ f2 b0 cCOND c= b0 f0 f1 c$ f2 c- b0 cNUMERAL cBIT1 c_0
D DROPOUT_PUSHIN
A |- (!k. (!t. (!x. ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) ==> (((dropout k) (((pushin k) t) x)) = x)))))
T c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdropout f0 cpushin f0 f1 f2 f2
D slice
A |- (!s. (!k. (!t. ((((slice k) t) s) = ((IMAGE (dropout k)) (s INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ k) = t)) x))))))))))
T c= * * * part cslice f0 f1 f2 * * part cIMAGE * part cdropout f0 * * part cINTER f2 * part cGSPEC / c? / cSETSPEC b0 c= c$ b1 f0 f1 b1
- |- ((\m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) m)
T * / ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 f0
- |- (((!n. (((BIT0 n) + _0) = (BIT0 n))) ==> ((\n. (((BIT0 n) + _0) = (BIT0 n))) n)) = ((\n. (((BIT0 n) + _0) = (BIT0 n))) n))
T c= c==> ! c= c+ cBIT0 b0 c_0 cBIT0 b0 * / c= c+ cBIT0 b0 c_0 cBIT0 b0 f0 * / c= c+ cBIT0 b0 c_0 cBIT0 b0 f0
+ |- ((\x. ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) ==> (((dropout k) (((pushin k) t) x)) = x))) x)
T * / c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdropout f0 cpushin f0 f1 b0 b0 f2
- |- (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))
T c= cEXP cBIT0 f0 cBIT0 f1 c* cEXP cBIT0 f0 f1 cEXP cBIT0 f0 f1
- |- (((!m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) ==> ((\m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) m)) = ((\m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) m))
T c= c==> ! ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 * / ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 f0 * / ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 f0
+ |- (F ==> ((y $ (NUMERAL (BIT1 (BIT1 _0)))) = (y $ (NUMERAL (BIT1 (BIT1 _0))))))
T c==> cF c= c$ f0 cNUMERAL cBIT1 cBIT1 c_0 c$ f0 cNUMERAL cBIT1 cBIT1 c_0
+ |- ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))
T c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- |- (((!n. (((BIT1 n) * _0) = _0)) ==> ((\n. (((BIT1 n) * _0) = _0)) n)) = ((\n. (((BIT1 n) * _0) = _0)) n))
T c= c==> ! c= c* cBIT1 b0 c_0 c_0 * / c= c* cBIT1 b0 c_0 c_0 f0 * / c= c* cBIT1 b0 c_0 c_0 f0
- |- (((BIT0 m) = (BIT1 n)) = F)
T c= c= cBIT0 f0 cBIT1 f1 cF
- |- (((!n. (((BIT0 n) * _0) = _0)) ==> ((\n. (((BIT0 n) * _0) = _0)) n)) = ((\n. (((BIT0 n) * _0) = _0)) n))
T c= c==> ! c= c* cBIT0 b0 c_0 c_0 * / c= c* cBIT0 b0 c_0 c_0 f0 * / c= c* cBIT0 b0 c_0 c_0 f0
- |- (((!n. ((BIT1 n) > _0)) ==> ((\n. ((BIT1 n) > _0)) n)) = ((\n. ((BIT1 n) > _0)) n))
T c= c==> ! c> cBIT1 b0 c_0 * / c> cBIT1 b0 c_0 f0 * / c> cBIT1 b0 c_0 f0
+ |- (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))
T c= c+ cBIT0 f0 cBIT1 f1 cBIT1 c+ f0 f1
- |- ((SUC _0) = (BIT1 _0))
T c= cSUC c_0 cBIT1 c_0
- |- (((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) ==> ((\m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) m)) = ((\m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) m))
T c= c==> ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 * / ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 f0 * / ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 f0
- |- ((_0 <= (BIT0 n)) = T)
T c= c<= c_0 cBIT0 f0 cT
- |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- (((BIT1 m) = (BIT0 n)) = F)
T c= c= cBIT1 f0 cBIT0 f1 cF
- |- ((?x'. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x')) /\ ((x' $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) = ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ (?x. ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))))
T c= c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ * f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f3 c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 c? / c/\ * f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f3
+ |- (((!e'. ((((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((y $ (NUMERAL (BIT1 (BIT1 _0)))) = t')) ==> (((~ g') ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0))))) (y $ (NUMERAL (BIT1 (BIT1 _0))))) (((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))) ==> ((\e'. ((((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((y $ (NUMERAL (BIT1 (BIT1 _0)))) = t')) ==> (((~ g') ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0))))) (y $ (NUMERAL (BIT1 (BIT1 _0))))) (((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))) e')) = ((\e'. ((((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((y $ (NUMERAL (BIT1 (BIT1 _0)))) = t')) ==> (((~ g') ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0))))) (y $ (NUMERAL (BIT1 (BIT1 _0))))) (((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c==> f0 c= c$ f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> c==> c~ f0 c= cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f3 c$ f1 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 c= cCOND c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c$ f1 cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f3 c$ f1 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND f0 f2 b0 * / c==> c= c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c==> f0 c= c$ f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> c==> c~ f0 c= cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f3 c$ f1 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 c= cCOND c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c$ f1 cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f3 c$ f1 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND f0 f2 b0 f4 * / c==> c= c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c==> f0 c= c$ f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> c==> c~ f0 c= cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f3 c$ f1 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 c= cCOND c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c$ f1 cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f3 c$ f1 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND f0 f2 b0 f4
- |- ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))))))
T c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
- |- (((PRE _0) = _0) /\ ((!n. ((PRE (BIT0 n)) = (((COND (n = _0)) _0) (BIT1 (PRE n))))) /\ (!n. ((PRE (BIT1 n)) = (BIT0 n)))))
T c/\ c= cPRE c_0 c_0 c/\ ! c= cPRE cBIT0 b0 cCOND c= b0 c_0 c_0 cBIT1 cPRE b0 ! c= cPRE cBIT1 b0 cBIT0 b0
- |- (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n))))
T c= c* cBIT0 f0 cBIT0 f1 cBIT0 cBIT0 c* f0 f1
- (~ (i = (NUMERAL (BIT1 (BIT1 _0))))) |- ((~ (i = (NUMERAL (BIT1 (BIT1 _0))))) /\ ((y $ (i - (NUMERAL (BIT1 _0)))) = (y $ (i - (NUMERAL (BIT1 _0))))))
T c==> c~ c= f0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= f0 cNUMERAL cBIT1 cBIT1 c_0 c= c$ f1 c- f0 cNUMERAL cBIT1 c_0 c$ f1 c- f0 cNUMERAL cBIT1 c_0
+ |- ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))))
T c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- (((BIT1 m) < (BIT0 n)) = (m < n))
T c= c< cBIT1 f0 cBIT0 f1 c< f0 f1
- |- ((\m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) m)
T * / ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 f0
- |- ((!P. (!t. ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> (P y)))) = T)
T c= ! ! c==> c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b2 c/\ * b0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b2 c= c$ b2 cNUMERAL cBIT1 cBIT1 c_0 b1 * b0 f0 cT
- ((~ ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> (P y))) ==> F), (((~ ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> (P y))) ==> F) ==> ((~ ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> (P y))) ==> F)) |- ((((~ ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> (P y))) ==> F) ==> ((~ ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> (P y))) ==> F)) /\ ((~ ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> (P y))) ==> F))
T c==> c==> c~ c==> c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 * f1 f0 cF c==> c==> c==> c~ c==> c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 * f1 f0 cF c==> c~ c==> c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 * f1 f0 cF c/\ c==> c==> c~ c==> c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 * f1 f0 cF c==> c~ c==> c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 * f1 f0 cF c==> c~ c==> c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 * f1 f0 cF
+ (~ (P y)) |- ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> F)
T c==> c~ * f0 f1 c==> c? / c/\ c= f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 cF
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- (((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) ==> ((\m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) m)) = ((\m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) m))
T c= c==> ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 * / ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 f0 * / ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 f0
- |- (((!t. ((~ ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> (P y))) ==> F)) ==> ((\t. ((~ ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> (P y))) ==> F)) t)) = ((\t. ((~ ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> (P y))) ==> F)) t))
T c= c==> ! c==> c~ c==> c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b1 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b1 c= c$ b1 cNUMERAL cBIT1 cBIT1 c_0 b0 * f1 f0 cF * / c==> c~ c==> c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b1 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b1 c= c$ b1 cNUMERAL cBIT1 cBIT1 c_0 b0 * f1 f0 cF f2 * / c==> c~ c==> c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b1 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b1 c= c$ b1 cNUMERAL cBIT1 cBIT1 c_0 b0 * f1 f0 cF f2
- |- ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))
T c= cEXP c_0 cBIT0 f0 c* cEXP c_0 f0 cEXP c_0 f0
+ (P y) |- ((\x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) (((pushin (NUMERAL (BIT1 (BIT1 _0)))) t) y))
T c==> * f0 f1 * / c/\ c= f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 cpushin cNUMERAL cBIT1 cBIT1 c_0 f2 f1
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
+ |- ((\t. ((((slice k) t) s) = ((IMAGE (dropout k)) (s INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ k) = t)) x)))))))) t)
T * / c= * * * part cslice f0 b0 f1 * * part cIMAGE * part cdropout f0 * * part cINTER f1 * part cGSPEC / c? / cSETSPEC b1 c= c$ b2 f0 b0 b2 f2
- |- (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))
T c= cEXP cNUMERAL f0 cNUMERAL f1 cNUMERAL cEXP f0 f1
- ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t))) |- ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) = (y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))
T c==> c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ * f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 c= c$ f1 cNUMERAL cBIT1 cBIT1 c_0 f3 c= c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1
- |- (((!n. ((SUC (BIT0 n)) = (BIT1 n))) ==> ((\n. ((SUC (BIT0 n)) = (BIT1 n))) n)) = ((\n. ((SUC (BIT0 n)) = (BIT1 n))) n))
T c= c==> ! c= cSUC cBIT0 b0 cBIT1 b0 * / c= cSUC cBIT0 b0 cBIT1 b0 f0 * / c= cSUC cBIT0 b0 cBIT1 b0 f0
+ |- ((\t. (!x. ((((pushin k) t) x) = (lambdai. (((COND (i < k)) (x $ i)) (((COND (i = k)) t) (x $ (i - (NUMERAL (BIT1 _0)))))))))) t)
T * / ! c= cpushin f0 b0 b1 clambda / cCOND c< b2 f0 c$ b1 b2 cCOND c= b2 f0 b0 c$ b1 c- b2 cNUMERAL cBIT1 c_0 f1
- |- (~ (n < n))
T c~ c< f0 f0
- (~ (i = (NUMERAL (BIT1 (BIT1 _0))))) |- (((NUMERAL (BIT1 (BIT1 _0))) = i) = F)
T c==> c~ c= f0 cNUMERAL cBIT1 cBIT1 c_0 c= c= cNUMERAL cBIT1 cBIT1 c_0 f0 cF
- |- ((!n. ((EVEN (BIT0 n)) = T)) /\ (!n. ((EVEN (BIT1 n)) = F)))
T c/\ ! c= cEVEN cBIT0 b0 cT ! c= cEVEN cBIT1 b0 cF
- |- (((!n. ((ODD (BIT0 n)) = F)) ==> ((\n. ((ODD (BIT0 n)) = F)) n)) = ((\n. ((ODD (BIT0 n)) = F)) n))
T c= c==> ! c= cODD cBIT0 b0 cF * / c= cODD cBIT0 b0 cF f0 * / c= cODD cBIT0 b0 cF f0
+ |- ((F ==> ((y $ (NUMERAL (BIT1 (BIT1 _0)))) = t')) ==> (((~ F) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0))))) (y $ (NUMERAL (BIT1 (BIT1 _0))))) (((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) = (((COND F) t') e'))))
T c==> c==> cF c= c$ f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c==> c~ cF c= cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f2 c$ f0 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 f3 c= cCOND c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c$ f0 cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f2 c$ f0 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND cF f1 f3
- |- ((\m. (((BIT1 m) EXP _0) = (BIT1 _0))) m)
T * / c= cEXP cBIT1 b0 c_0 cBIT1 c_0 f0
- |- (((!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) ==> ((\n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) n)) = ((\n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) n))
T c= c==> ! c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 * / c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1 * / c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1
- (~ (i = (NUMERAL (BIT1 (BIT1 _0))))) |- (((~ ((NUMERAL (BIT1 (BIT1 _0))) = i)) ==> (((NUMERAL (BIT1 (BIT1 _0))) = i) = F)) = (((NUMERAL (BIT1 (BIT1 _0))) = i) = F))
T c==> c~ c= f0 cNUMERAL cBIT1 cBIT1 c_0 c= c==> c~ c= cNUMERAL cBIT1 cBIT1 c_0 f0 c= c= cNUMERAL cBIT1 cBIT1 c_0 f0 cF c= c= cNUMERAL cBIT1 cBIT1 c_0 f0 cF
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- |- (((!n. ((_0 * (BIT0 n)) = _0)) ==> ((\n. ((_0 * (BIT0 n)) = _0)) n)) = ((\n. ((_0 * (BIT0 n)) = _0)) n))
T c= c==> ! c= c* c_0 cBIT0 b0 c_0 * / c= c* c_0 cBIT0 b0 c_0 f0 * / c= c* c_0 cBIT0 b0 c_0 f0
- |- (((!n. ((EVEN (BIT1 n)) = F)) ==> ((\n. ((EVEN (BIT1 n)) = F)) n)) = ((\n. ((EVEN (BIT1 n)) = F)) n))
T c= c==> ! c= cEVEN cBIT1 b0 cF * / c= cEVEN cBIT1 b0 cF f0 * / c= cEVEN cBIT1 b0 cF f0
- |- (((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) ==> ((\m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) m)) = ((\m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) m))
T c= c==> ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 * / ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 f0 * / ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 f0
- |- (((!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) ==> ((\m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) m)) = ((\m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) m))
T c= c==> ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 * / ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0 * / ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0
- |- ((\n. (((BIT0 m) < (BIT0 n)) = (m < n))) n)
T * / c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 f1
- |- (((~ (i < (NUMERAL (BIT1 (BIT1 _0))))) ==> ((((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ (i - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (i < (NUMERAL (BIT1 (BIT1 _0))))) (y $ i)) (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ (i - (NUMERAL (BIT1 _0)))))) = (((COND (i < (NUMERAL (BIT1 (BIT1 _0))))) (y $ i)) e')))
T c==> c==> c~ c< f0 cNUMERAL cBIT1 cBIT1 c_0 c= cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f2 c- f0 cNUMERAL cBIT1 c_0 f3 c= cCOND c< f0 cNUMERAL cBIT1 cBIT1 c_0 c$ f2 f0 cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND c< f0 cNUMERAL cBIT1 cBIT1 c_0 c$ f2 f0 f3
- |- ((\n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))) n)
T * / c= c* cNUMERAL f0 cNUMERAL b0 cNUMERAL c* f0 b0 f1
- |- ((\n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) n)
T * / c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 f0
- |- ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))
T c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
+ |- (((dropout (NUMERAL (BIT1 (BIT1 _0)))) (((pushin (NUMERAL (BIT1 (BIT1 _0)))) t) y)) = y)
T c= cdropout cNUMERAL cBIT1 cBIT1 c_0 cpushin cNUMERAL cBIT1 cBIT1 c_0 f0 f1 f1
- |- ((!n. ((_0 >= (BIT0 n)) = (_0 >= n))) /\ ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))))))
T c/\ ! c= c>= c_0 cBIT0 b0 c>= c_0 b0 c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
+ |- ((_0 < _0) = F)
T c= c< c_0 c_0 cF
- |- (((!n. (((BIT1 n) < _0) = F)) ==> ((\n. (((BIT1 n) < _0) = F)) n)) = ((\n. (((BIT1 n) < _0) = F)) n))
T c= c==> ! c= c< cBIT1 b0 c_0 cF * / c= c< cBIT1 b0 c_0 cF f0 * / c= c< cBIT1 b0 c_0 cF f0
- |- ((_0 + (BIT0 n)) = (BIT0 n))
T c= c+ c_0 cBIT0 f0 cBIT0 f0
- |- (T = (((((pushin (NUMERAL (BIT1 (BIT1 _0)))) t) y) $ (NUMERAL (BIT1 (BIT1 _0)))) = t))
T c= cT c= c$ cpushin cNUMERAL cBIT1 cBIT1 c_0 f0 f1 cNUMERAL cBIT1 cBIT1 c_0 f0
+ |- ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))
T c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))
T c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- |- ((\n. ((BIT0 n) >= _0)) n)
T * / c>= cBIT0 b0 c_0 f0
+ |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
- |- (((BIT1 n) - _0) = (BIT1 n))
T c= c- cBIT1 f0 c_0 cBIT1 f0
+ (~ (P y)) |- ((((\x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) x) ==> F) = T)
T c==> c~ * f0 f1 c= c==> * / c/\ c= f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 f3 cF cT
- |- (((!n. ((_0 - (BIT0 n)) = _0)) ==> ((\n. ((_0 - (BIT0 n)) = _0)) n)) = ((\n. ((_0 - (BIT0 n)) = _0)) n))
T c= c==> ! c= c- c_0 cBIT0 b0 c_0 * / c= c- c_0 cBIT0 b0 c_0 f0 * / c= c- c_0 cBIT0 b0 c_0 f0
- |- (((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) ==> ((\n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) n)) = ((\n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) n))
T c= c==> ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 * / c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 f0 * / c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 f0
- |- ((\m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) m)
T * / ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- |- (((!g'. (!t'. (!e'. (((i = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((i = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((i = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= f1 b1 c==> c==> c~ b0 c= c$ f2 c- f0 cNUMERAL cBIT1 c_0 b2 c= cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 * / ! ! c==> c= c= f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= f1 b1 c==> c==> c~ b0 c= c$ f2 c- f0 cNUMERAL cBIT1 c_0 b2 c= cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f3 * / ! ! c==> c= c= f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= f1 b1 c==> c==> c~ b0 c= c$ f2 c- f0 cNUMERAL cBIT1 c_0 b2 c= cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f3
+ |- ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))))))
T c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- |- (((!n. (((BIT1 n) <= _0) = F)) ==> ((\n. (((BIT1 n) <= _0) = F)) n)) = ((\n. (((BIT1 n) <= _0) = F)) n))
T c= c==> ! c= c<= cBIT1 b0 c_0 cF * / c= c<= cBIT1 b0 c_0 cF f0 * / c= c<= cBIT1 b0 c_0 cF f0
- |- ((\n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) n)
T * / c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 f1
- |- ((?x. (P x)) = ((P T) \/ (P F)))
T c= c? / * f0 b0 c\/ * f0 cT * f0 cF
- |- ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))
T c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((\n. (~ (_0 >= (BIT1 n)))) n)
T * / c~ c>= c_0 cBIT1 b0 f0
+ (?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) |- ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) /\ (P y))
T c==> c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 c/\ c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 * f1 f0
+ (P y) |- ((((((pushin (NUMERAL (BIT1 (BIT1 _0)))) t) y) $ (NUMERAL (BIT1 (BIT1 _0)))) = t) = ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) (((pushin (NUMERAL (BIT1 (BIT1 _0)))) t) y))) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) (((pushin (NUMERAL (BIT1 (BIT1 _0)))) t) y))) /\ (((((pushin (NUMERAL (BIT1 (BIT1 _0)))) t) y) $ (NUMERAL (BIT1 (BIT1 _0)))) = t))))
T c==> * f0 f1 c= c= c$ cpushin cNUMERAL cBIT1 cBIT1 c_0 f2 f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c/\ c= f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 cpushin cNUMERAL cBIT1 cBIT1 c_0 f2 f1 c/\ * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cpushin cNUMERAL cBIT1 cBIT1 c_0 f2 f1 c= c$ cpushin cNUMERAL cBIT1 cBIT1 c_0 f2 f1 cNUMERAL cBIT1 cBIT1 c_0 f2
- |- (((!n. ((_0 + (BIT0 n)) = (BIT0 n))) ==> ((\n. ((_0 + (BIT0 n)) = (BIT0 n))) n)) = ((\n. ((_0 + (BIT0 n)) = (BIT0 n))) n))
T c= c==> ! c= c+ c_0 cBIT0 b0 cBIT0 b0 * / c= c+ c_0 cBIT0 b0 cBIT0 b0 f0 * / c= c+ c_0 cBIT0 b0 cBIT0 b0 f0
- |- (((!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) ==> ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n)) = ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n))
T c= c==> ! c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1 * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1
- |- (((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) ==> ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m)) = ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m))
T c= c==> ! ! c= c= cBIT1 b0 cBIT0 b1 cF * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0 * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0
- |- ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n)
T * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1
- |- ((SUC (BIT1 n)) = (BIT0 (SUC n)))
T c= cSUC cBIT1 f0 cBIT0 cSUC f0
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ |- (((BIT1 m) < (BIT1 n)) = (m < n))
T c= c< cBIT1 f0 cBIT1 f1 c< f0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((((IMAGE (dropout (NUMERAL (BIT1 (BIT1 _0))))) ((GSPEC (\GEN%PVAR%5074. (?x. (((SETSPEC GEN%PVAR%5074) (P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))) x)))) INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)) x)))))) = (GSPEC (\GEN%PVAR%5075. (?x. (((SETSPEC GEN%PVAR%5075) (P x)) x))))) = ((((slice (NUMERAL (BIT1 (BIT1 _0)))) t) (GSPEC (\GEN%PVAR%5074. (?x. (((SETSPEC GEN%PVAR%5074) (P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))) x))))) = (GSPEC (\GEN%PVAR%5075. (?x. (((SETSPEC GEN%PVAR%5075) (P x)) x))))))
T c= c= * * part cIMAGE * part cdropout cNUMERAL cBIT1 cBIT1 c_0 * * part cINTER * part cGSPEC / c? / cSETSPEC b0 * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b1 b1 * part cGSPEC / c? / cSETSPEC b0 c= c$ b1 cNUMERAL cBIT1 cBIT1 c_0 f1 b1 * part cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 c= * * * part cslice cNUMERAL cBIT1 cBIT1 c_0 f1 * part cGSPEC / c? / cSETSPEC b0 * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b1 b1 * part cGSPEC / c? / cSETSPEC b0 * f0 b1 b1
- |- ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m)
T * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0
- |- (((!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) ==> ((\m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) m)) = ((\m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) m))
T c= c==> ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- |- ((NUMERAL (NUMERAL _0)) = (NUMERAL _0))
T c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0
- |- (((!n. ((PRE (BIT1 n)) = (BIT0 n))) ==> ((\n. ((PRE (BIT1 n)) = (BIT0 n))) n)) = ((\n. ((PRE (BIT1 n)) = (BIT0 n))) n))
T c= c==> ! c= cPRE cBIT1 b0 cBIT0 b0 * / c= cPRE cBIT1 b0 cBIT0 b0 f0 * / c= cPRE cBIT1 b0 cBIT0 b0 f0
- (~ (i = (NUMERAL (BIT1 (BIT1 _0))))) |- (~ ((NUMERAL (BIT1 (BIT1 _0))) = i))
T c==> c~ c= f0 cNUMERAL cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT1 c_0 f0
+ |- (((!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) ==> ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n)) = ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n))
T c= c==> ! c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1 * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1
+ |- (((BIT1 m) <= (BIT1 n)) = (m <= n))
T c= c<= cBIT1 f0 cBIT1 f1 c<= f0 f1
- |- (((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) ==> ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m)) = ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m))
T c= c==> ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0 * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0
- |- (((EVEN _0) = T) /\ ((!n. ((EVEN (BIT0 n)) = T)) /\ (!n. ((EVEN (BIT1 n)) = F))))
T c/\ c= cEVEN c_0 cT c/\ ! c= cEVEN cBIT0 b0 cT ! c= cEVEN cBIT1 b0 cF
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- (((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) ==> ((\m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) m)) = ((\m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) m))
T c= c==> ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- |- ((\n. (((BIT0 m) <= (BIT0 n)) = (m <= n))) n)
T * / c= c<= cBIT0 f0 cBIT0 b0 c<= f0 b0 f1
- |- (((NUMERAL n) > (NUMERAL m)) = (n > m))
T c= c> cNUMERAL f0 cNUMERAL f1 c> f0 f1
- |- ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))
T c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
- |- ((\y. (!P. (!t. ((~ ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> (P y))) ==> F)))) y)
T * / ! ! c==> c~ c==> c? / c/\ c= b0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b3 c/\ * b1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b3 c= c$ b3 cNUMERAL cBIT1 cBIT1 c_0 b2 * b1 b0 cF f0
+ |- ((((COND ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0))))) (y $ (NUMERAL (BIT1 (BIT1 _0))))) (((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) = (((COND F) (y $ (NUMERAL (BIT1 (BIT1 _0))))) t))
T c= cCOND c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c$ f0 cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f0 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND cF c$ f0 cNUMERAL cBIT1 cBIT1 c_0 f1
- (((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) |- ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) /\ (((dropout k) (((pushin k) t) x)) = x))
T c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdropout f0 cpushin f0 f1 f2 f2
- |- (((BIT0 m) < (BIT0 n)) = (m < n))
T c= c< cBIT0 f0 cBIT0 f1 c< f0 f1
- |- ((!y. (!P. (!t. ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> (P y))))) = (!y. (!P. (!t. ((~ ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> (P y))) ==> F)))))
T c= ! ! ! c==> c? / c/\ c= b0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b3 c/\ * b1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b3 c= c$ b3 cNUMERAL cBIT1 cBIT1 c_0 b2 * b1 b0 ! ! ! c==> c~ c==> c? / c/\ c= b0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b3 c/\ * b1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b3 c= c$ b3 cNUMERAL cBIT1 cBIT1 c_0 b2 * b1 b0 cF
- |- ((PRE (NUMERAL n)) = (NUMERAL (PRE n)))
T c= cPRE cNUMERAL f0 cNUMERAL cPRE f0
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- |- (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))
T c= c+ cBIT1 f0 cBIT1 f1 cBIT0 cSUC c+ f0 f1
- |- (((!n. ((_0 EXP (BIT1 n)) = _0)) ==> ((\n. ((_0 EXP (BIT1 n)) = _0)) n)) = ((\n. ((_0 EXP (BIT1 n)) = _0)) n))
T c= c==> ! c= cEXP c_0 cBIT1 b0 c_0 * / c= cEXP c_0 cBIT1 b0 c_0 f0 * / c= cEXP c_0 cBIT1 b0 c_0 f0
- |- ((!t. t) = t)
T c= ! f0 f0
- |- ((_0 >= (BIT0 n)) = (_0 >= n))
T c= c>= c_0 cBIT0 f0 c>= c_0 f0
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- (i < (NUMERAL (BIT1 (BIT1 _0)))) |- ((i < (NUMERAL (BIT1 (BIT1 _0)))) /\ ((y $ i) = (y $ i)))
T c==> c< f0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c< f0 cNUMERAL cBIT1 cBIT1 c_0 c= c$ f1 f0 c$ f1 f0
+ |- ((\s. (!k. (!t. ((((slice k) t) s) = ((IMAGE (dropout k)) (s INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ k) = t)) x)))))))))) s)
T * / ! ! c= * * * part cslice b1 b2 b0 * * part cIMAGE * part cdropout b1 * * part cINTER b0 * part cGSPEC / c? / cSETSPEC b3 c= c$ b4 b1 b2 b4 f0
+ |- (((_0 = _0) = T) /\ ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))))))
T c/\ c= c= c_0 c_0 cT c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- (((BIT0 n) - _0) = (BIT0 n))
T c= c- cBIT0 f0 c_0 cBIT0 f0
- |- (((!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) ==> ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n)) = ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n))
T c= c==> ! c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1 * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1
- |- ((\m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) m)
T * / ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 f0
- |- (((BIT1 n) <= _0) = F)
T c= c<= cBIT1 f0 c_0 cF
- |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ |- ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))
T c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ |- ((\n. (((NUMERAL m) = (NUMERAL n)) = (m = n))) n)
T * / c= c= cNUMERAL f0 cNUMERAL b0 c= f0 b0 f1
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- ((\n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) n)
T * / c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 f1
- |- ((\n. ((EVEN (BIT0 n)) = T)) n)
T * / c= cEVEN cBIT0 b0 cT f0
- |- ((_0 + _0) = _0)
T c= c+ c_0 c_0 c_0
+ |- (((!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) ==> ((\n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) n)) = ((\n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) n))
T c= c==> ! c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 * / c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 f1 * / c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 f1
- |- ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))))
T c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((_0 * (BIT0 n)) = _0)
T c= c* c_0 cBIT0 f0 c_0
- |- (((!n. (((BIT0 n) > (BIT1 m)) = (n > m))) ==> ((\n. (((BIT0 n) > (BIT1 m)) = (n > m))) n)) = ((\n. (((BIT0 n) > (BIT1 m)) = (n > m))) n))
T c= c==> ! c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 * / c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 f1 * / c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 f1
- |- (((BIT0 n) >= (BIT0 m)) = (n >= m))
T c= c>= cBIT0 f0 cBIT0 f1 c>= f0 f1
- |- (((BIT0 m) <= (BIT1 n)) = (m <= n))
T c= c<= cBIT0 f0 cBIT1 f1 c<= f0 f1
- |- ((\m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) m)
T * / ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 f0
- (~ (i < (NUMERAL (BIT1 (BIT1 _0))))) |- ((~ (i < (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ (i - (NUMERAL (BIT1 _0)))))))
T c==> c~ c< f0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c< f0 cNUMERAL cBIT1 cBIT1 c_0 c= cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f2 c- f0 cNUMERAL cBIT1 c_0
- |- (((!n. ((_0 * (BIT1 n)) = _0)) ==> ((\n. ((_0 * (BIT1 n)) = _0)) n)) = ((\n. ((_0 * (BIT1 n)) = _0)) n))
T c= c==> ! c= c* c_0 cBIT1 b0 c_0 * / c= c* c_0 cBIT1 b0 c_0 f0 * / c= c* c_0 cBIT1 b0 c_0 f0
- |- ((\m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) m)
T * / ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 f0
+ |- ((\y. (!s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s))))))) y)
T * / ! ! c= cIN b0 * * part cIMAGE b2 b1 c? / c/\ c= b0 * b2 b3 cIN b3 b1 f0
- |- ((EVEN (BIT1 n)) = F)
T c= cEVEN cBIT1 f0 cF
- |- ((\m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) m)
T * / ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 f0
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((PRE _0) = _0)
T c= cPRE c_0 c_0
- |- ((?x. t) = t)
T c= c? / f0 f0
+ |- (((F ==> ((y $ (NUMERAL (BIT1 (BIT1 _0)))) = (y $ (NUMERAL (BIT1 (BIT1 _0)))))) ==> (((~ F) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0))))) (y $ (NUMERAL (BIT1 (BIT1 _0))))) (((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) = (((COND F) (y $ (NUMERAL (BIT1 (BIT1 _0))))) e')))) = (((~ F) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0))))) (y $ (NUMERAL (BIT1 (BIT1 _0))))) (((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) = (((COND F) (y $ (NUMERAL (BIT1 (BIT1 _0))))) e'))))
T c= c==> c==> cF c= c$ f0 cNUMERAL cBIT1 cBIT1 c_0 c$ f0 cNUMERAL cBIT1 cBIT1 c_0 c==> c==> c~ cF c= cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f0 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 f2 c= cCOND c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c$ f0 cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f0 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND cF c$ f0 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> c==> c~ cF c= cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f0 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 f2 c= cCOND c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c$ f0 cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f0 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND cF c$ f0 cNUMERAL cBIT1 cBIT1 c_0 f2
- |- ((\P. (!t. ((~ ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> (P y))) ==> F))) P)
T * / ! c==> c~ c==> c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b2 c/\ * b0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b2 c= c$ b2 cNUMERAL cBIT1 cBIT1 c_0 b1 * b0 f0 cF f1
- |- ((\n. (((BIT0 m) < (BIT1 n)) = (m <= n))) n)
T * / c= c< cBIT0 f0 cBIT1 b0 c<= f0 b0 f1
- |- ((\n. ((BIT1 n) > _0)) n)
T * / c> cBIT1 b0 c_0 f0
- |- (((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) ==> ((\m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) m)) = ((\m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) m))
T c= c==> ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 * / ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 f0 * / ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 f0
- |- ((\g'. (!t'. (!e'. (((i = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= f1 b1 c==> c==> c~ b0 c= c$ f2 c- f0 cNUMERAL cBIT1 c_0 b2 c= cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f3
- |- (((!n. ((BIT1 n) >= _0)) ==> ((\n. ((BIT1 n) >= _0)) n)) = ((\n. ((BIT1 n) >= _0)) n))
T c= c==> ! c>= cBIT1 b0 c_0 * / c>= cBIT1 b0 c_0 f0 * / c>= cBIT1 b0 c_0 f0
- |- (((!n. (((BIT1 n) > (BIT0 m)) = (n >= m))) ==> ((\n. (((BIT1 n) > (BIT0 m)) = (n >= m))) n)) = ((\n. (((BIT1 n) > (BIT0 m)) = (n >= m))) n))
T c= c==> ! c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 * / c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 f1 * / c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 f1
+ |- (((!g'. (!t'. (!e'. ((((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((y $ (NUMERAL (BIT1 (BIT1 _0)))) = t')) ==> (((~ g') ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0))))) (y $ (NUMERAL (BIT1 (BIT1 _0))))) (((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((y $ (NUMERAL (BIT1 (BIT1 _0)))) = t')) ==> (((~ g') ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0))))) (y $ (NUMERAL (BIT1 (BIT1 _0))))) (((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((y $ (NUMERAL (BIT1 (BIT1 _0)))) = t')) ==> (((~ g') ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0))))) (y $ (NUMERAL (BIT1 (BIT1 _0))))) (((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= c$ f0 cNUMERAL cBIT1 cBIT1 c_0 b1 c==> c==> c~ b0 c= cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f0 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 b2 c= cCOND c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c$ f0 cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f0 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 * / ! ! c==> c= c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= c$ f0 cNUMERAL cBIT1 cBIT1 c_0 b1 c==> c==> c~ b0 c= cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f0 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 b2 c= cCOND c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c$ f0 cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f0 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f2 * / ! ! c==> c= c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= c$ f0 cNUMERAL cBIT1 cBIT1 c_0 b1 c==> c==> c~ b0 c= cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f0 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 b2 c= cCOND c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c$ f0 cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f0 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f2
- |- ((_0 > (BIT0 n)) = F)
T c= c> c_0 cBIT0 f0 cF
- |- (((!n. (((BIT1 n) - _0) = (BIT1 n))) ==> ((\n. (((BIT1 n) - _0) = (BIT1 n))) n)) = ((\n. (((BIT1 n) - _0) = (BIT1 n))) n))
T c= c==> ! c= c- cBIT1 b0 c_0 cBIT1 b0 * / c= c- cBIT1 b0 c_0 cBIT1 b0 f0 * / c= c- cBIT1 b0 c_0 cBIT1 b0 f0
- (~ ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> (P y))) |- F
T c==> c~ c==> c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 * f1 f0 cF
- |- (((!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) ==> ((\n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) n)) = ((\n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) n))
T c= c==> ! c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 * / c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1 * / c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
- |- ((EVEN _0) = T)
T c= cEVEN c_0 cT
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambda g) $ i) = (g i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
+ |- (((!m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) ==> ((\m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) m)) = ((\m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) m))
T c= c==> ! ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 * / ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 f0 * / ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 f0
- |- ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))))))
T c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
+ |- ((\x. ((((pushin k) t) x) = (lambdai. (((COND (i < k)) (x $ i)) (((COND (i = k)) t) (x $ (i - (NUMERAL (BIT1 _0))))))))) x)
T * / c= cpushin f0 f1 b0 clambda / cCOND c< b1 f0 c$ b0 b1 cCOND c= b1 f0 f1 c$ b0 c- b1 cNUMERAL cBIT1 c_0 f2
- |- ((\n. (((BIT1 n) > (BIT1 m)) = (n > m))) n)
T * / c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 f1
- |- (((i = (NUMERAL (BIT1 (BIT1 _0)))) ==> (t = t')) ==> (((~ (i = (NUMERAL (BIT1 (BIT1 _0))))) ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) t') e'))))
T c==> c==> c= f0 cNUMERAL cBIT1 cBIT1 c_0 c= f1 f2 c==> c==> c~ c= f0 cNUMERAL cBIT1 cBIT1 c_0 c= c$ f3 c- f0 cNUMERAL cBIT1 c_0 f4 c= cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f3 c- f0 cNUMERAL cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 f2 f4
- |- (((!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))) ==> ((\m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))) m)) = ((\m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))) m))
T c= c==> ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1 * / ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1 f0 * / ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1 f0
+ |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
- |- ((~ (i = (NUMERAL (BIT1 (BIT1 _0))))) ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = (y $ (i - (NUMERAL (BIT1 _0))))))
T c==> c~ c= f0 cNUMERAL cBIT1 cBIT1 c_0 c= c$ f1 c- f0 cNUMERAL cBIT1 c_0 c$ f1 c- f0 cNUMERAL cBIT1 c_0
- |- (((!n. (((BIT0 n) > _0) = (n > _0))) ==> ((\n. (((BIT0 n) > _0) = (n > _0))) n)) = ((\n. (((BIT0 n) > _0) = (n > _0))) n))
T c= c==> ! c= c> cBIT0 b0 c_0 c> b0 c_0 * / c= c> cBIT0 b0 c_0 c> b0 c_0 f0 * / c= c> cBIT0 b0 c_0 c> b0 c_0 f0
- |- ((_0 = (BIT1 n)) = F)
T c= c= c_0 cBIT1 f0 cF
- |- (((!n. (~ (_0 > (BIT0 n)))) ==> ((\n. (~ (_0 > (BIT0 n)))) n)) = ((\n. (~ (_0 > (BIT0 n)))) n))
T c= c==> ! c~ c> c_0 cBIT0 b0 * / c~ c> c_0 cBIT0 b0 f0 * / c~ c> c_0 cBIT0 b0 f0
- ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t))) |- ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)
T c==> c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ * f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 c= c$ f1 cNUMERAL cBIT1 cBIT1 c_0 f3 c= c$ f1 cNUMERAL cBIT1 cBIT1 c_0 f3
- ((NUMERAL (BIT1 (BIT1 _0))) = i) |- (i = (NUMERAL (BIT1 (BIT1 _0))))
T c==> c= cNUMERAL cBIT1 cBIT1 c_0 f0 c= f0 cNUMERAL cBIT1 cBIT1 c_0
+ |- ((\x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) x)
T * / c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 f2
- |- ((SUC (BIT0 n)) = (BIT1 n))
T c= cSUC cBIT0 f0 cBIT1 f0
- |- ((\n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) n)
T * / c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 f1
- |- ((\n. ((_0 = (BIT1 n)) = F)) n)
T * / c= c= c_0 cBIT1 b0 cF f0
- |- ((\n. (((BIT1 n) - _0) = (BIT1 n))) n)
T * / c= c- cBIT1 b0 c_0 cBIT1 b0 f0
- |- (((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) ==> ((\m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) m)) = ((\m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) m))
T c= c==> ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
+ |- ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))))))
T c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
- |- ((\n. ((BIT1 n) >= _0)) n)
T * / c>= cBIT1 b0 c_0 f0
- |- ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m)
T * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0
- |- (((BIT0 n) > (BIT0 m)) = (n > m))
T c= c> cBIT0 f0 cBIT0 f1 c> f0 f1
+ |- ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))
T c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ |- (((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> (P y)) /\ ((P y) ==> (?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t))))))
T c/\ c==> c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 * f1 f0 c==> * f1 f0 c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- |- ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n)
T * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1
- |- (((!m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) /\ (((_0 < _0) = F) /\ ((!n. (((BIT0 n) < _0) = F)) /\ ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))))))))) /\ (((!m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) /\ ((_0 >= _0) /\ ((!n. ((_0 >= (BIT0 n)) = (_0 >= n))) /\ ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))))))) /\ (((!m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) /\ ((~ (_0 > _0)) /\ ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))))) /\ ((!m. (!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n))))) /\ (((_0 - _0) = _0) /\ ((!n. ((_0 - (BIT0 n)) = _0)) /\ ((!n. ((_0 - (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))))))))))))))))
T c/\ c/\ ! ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 c/\ c= c< c_0 c_0 cF c/\ ! c= c< cBIT0 b0 c_0 cF c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1 c/\ c/\ ! ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 c/\ c>= c_0 c_0 c/\ ! c= c>= c_0 cBIT0 b0 c>= c_0 b0 c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0 c/\ c/\ ! ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 c/\ c~ c> c_0 c_0 c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 c/\ ! ! c= c- cNUMERAL b0 cNUMERAL b1 cNUMERAL c- b0 b1 c/\ c= c- c_0 c_0 c_0 c/\ ! c= c- c_0 cBIT0 b0 c_0 c/\ ! c= c- c_0 cBIT1 b0 c_0 c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
- |- ((\n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))) n)
T * / c= cEXP cNUMERAL f0 cNUMERAL b0 cNUMERAL cEXP f0 b0 f1
+ |- (((!k. (!t. (!x. ((((pushin k) t) x) = (lambdai. (((COND (i < k)) (x $ i)) (((COND (i = k)) t) (x $ (i - (NUMERAL (BIT1 _0))))))))))) ==> ((\k. (!t. (!x. ((((pushin k) t) x) = (lambdai. (((COND (i < k)) (x $ i)) (((COND (i = k)) t) (x $ (i - (NUMERAL (BIT1 _0))))))))))) k)) = ((\k. (!t. (!x. ((((pushin k) t) x) = (lambdai. (((COND (i < k)) (x $ i)) (((COND (i = k)) t) (x $ (i - (NUMERAL (BIT1 _0))))))))))) k))
T c= c==> ! ! ! c= cpushin b0 b1 b2 clambda / cCOND c< b3 b0 c$ b2 b3 cCOND c= b3 b0 b1 c$ b2 c- b3 cNUMERAL cBIT1 c_0 * / ! ! c= cpushin b0 b1 b2 clambda / cCOND c< b3 b0 c$ b2 b3 cCOND c= b3 b0 b1 c$ b2 c- b3 cNUMERAL cBIT1 c_0 f0 * / ! ! c= cpushin b0 b1 b2 clambda / cCOND c< b3 b0 c$ b2 b3 cCOND c= b3 b0 b1 c$ b2 c- b3 cNUMERAL cBIT1 c_0 f0
+ (?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))), (~ (P y)) |- ((~ (P y)) /\ F)
T c==> c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> c~ * f1 f0 c/\ c~ * f1 f0 cF
- |- (((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) ==> ((\m. (!n. (((BIT0 m) = (BIT1 n)) = F))) m)) = ((\m. (!n. (((BIT0 m) = (BIT1 n)) = F))) m))
T c= c==> ! ! c= c= cBIT0 b0 cBIT1 b1 cF * / ! c= c= cBIT0 b0 cBIT1 b1 cF f0 * / ! c= c= cBIT0 b0 cBIT1 b1 cF f0
- |- (((ODD _0) = F) /\ ((!n. ((ODD (BIT0 n)) = F)) /\ (!n. ((ODD (BIT1 n)) = T))))
T c/\ c= cODD c_0 cF c/\ ! c= cODD cBIT0 b0 cF ! c= cODD cBIT1 b0 cT
- |- (((!n. (((BIT1 n) > (BIT1 m)) = (n > m))) ==> ((\n. (((BIT1 n) > (BIT1 m)) = (n > m))) n)) = ((\n. (((BIT1 n) > (BIT1 m)) = (n > m))) n))
T c= c==> ! c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 * / c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 f1 * / c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 f1
- |- ((~ (_0 > _0)) /\ ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))))
T c/\ c~ c> c_0 c_0 c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
- |- ((((~ (i = (NUMERAL (BIT1 (BIT1 _0))))) ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = (y $ (i - (NUMERAL (BIT1 _0)))))) ==> ((((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ (i - (NUMERAL (BIT1 _0))))))) = ((((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ (i - (NUMERAL (BIT1 _0)))))))
T c= c==> c==> c~ c= f0 cNUMERAL cBIT1 cBIT1 c_0 c= c$ f1 c- f0 cNUMERAL cBIT1 c_0 c$ f1 c- f0 cNUMERAL cBIT1 c_0 c= cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 f2 c$ f1 c- f0 cNUMERAL cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 f2 c$ f1 c- f0 cNUMERAL cBIT1 c_0 c= cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 f2 c$ f1 c- f0 cNUMERAL cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 f2 c$ f1 c- f0 cNUMERAL cBIT1 c_0
+ |- ((\k. (!t. (!x. ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) ==> (((dropout k) (((pushin k) t) x)) = x))))) k)
T * / ! ! c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdropout b0 cpushin b0 b1 b2 b2 f0
- |- (((~ (_0 >= (BIT1 n))) ==> ((_0 >= (BIT1 n)) = F)) = ((_0 >= (BIT1 n)) = F))
T c= c==> c~ c>= c_0 cBIT1 f0 c= c>= c_0 cBIT1 f0 cF c= c>= c_0 cBIT1 f0 cF
- |- ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))
T c= cSUC cNUMERAL f0 cNUMERAL cSUC f0
- |- (((BIT0 n) >= _0) = T)
T c= c>= cBIT0 f0 c_0 cT
- |- ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))))
T c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
- |- (((!n. (((BIT1 n) = _0) = F)) ==> ((\n. (((BIT1 n) = _0) = F)) n)) = ((\n. (((BIT1 n) = _0) = F)) n))
T c= c==> ! c= c= cBIT1 b0 c_0 cF * / c= c= cBIT1 b0 c_0 cF f0 * / c= c= cBIT1 b0 c_0 cF f0
- |- ((((COND (i < (NUMERAL (BIT1 (BIT1 _0))))) (y $ i)) (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ (i - (NUMERAL (BIT1 _0)))))) = (((COND (i < (NUMERAL (BIT1 (BIT1 _0))))) (y $ i)) (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ (i - (NUMERAL (BIT1 _0)))))))
T c= cCOND c< f0 cNUMERAL cBIT1 cBIT1 c_0 c$ f1 f0 cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 f2 c$ f1 c- f0 cNUMERAL cBIT1 c_0 cCOND c< f0 cNUMERAL cBIT1 cBIT1 c_0 c$ f1 f0 cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 f2 c$ f1 c- f0 cNUMERAL cBIT1 c_0
+ |- ((\m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) m)
T * / ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 f0
- |- (((!m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) /\ ((~ (_0 > _0)) /\ ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))))) /\ ((!m. (!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n))))) /\ (((_0 - _0) = _0) /\ ((!n. ((_0 - (BIT0 n)) = _0)) /\ ((!n. ((_0 - (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))))))))))))))
T c/\ c/\ ! ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 c/\ c~ c> c_0 c_0 c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 c/\ ! ! c= c- cNUMERAL b0 cNUMERAL b1 cNUMERAL c- b0 b1 c/\ c= c- c_0 c_0 c_0 c/\ ! c= c- c_0 cBIT0 b0 c_0 c/\ ! c= c- c_0 cBIT1 b0 c_0 c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
- |- (((!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) ==> ((\n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) n)) = ((\n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) n))
T c= c==> ! c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 * / c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 f1 * / c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 f1
- |- (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))))))))))))
T c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- |- (((!n. (((BIT0 n) = _0) = (n = _0))) ==> ((\n. (((BIT0 n) = _0) = (n = _0))) n)) = ((\n. (((BIT0 n) = _0) = (n = _0))) n))
T c= c==> ! c= c= cBIT0 b0 c_0 c= b0 c_0 * / c= c= cBIT0 b0 c_0 c= b0 c_0 f0 * / c= c= cBIT0 b0 c_0 c= b0 c_0 f0
- |- (((BIT0 n) > (BIT1 m)) = (n > m))
T c= c> cBIT0 f0 cBIT1 f1 c> f0 f1
- |- ((\n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) n)
T * / c= cSUC cBIT1 b0 cBIT0 cSUC b0 f0
+ |- (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))))))))
T c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
+ |- (T = (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) <= (dimindex UNIV))))
T c= cT c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c<= cNUMERAL cBIT1 cBIT1 c_0 cdimindex part cUNIV
+ ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t))) |- ((~ (P y)) = (~ (P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))
T c==> c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ * f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 c= c$ f1 cNUMERAL cBIT1 cBIT1 c_0 f3 c= c~ * f2 f0 c~ * f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1
- |- ((\n. (((BIT1 n) >= (BIT0 m)) = (n >= m))) n)
T * / c= c>= cBIT1 b0 cBIT0 f0 c>= b0 f0 f1
- |- (((!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) ==> ((\n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) n)) = ((\n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) n))
T c= c==> ! c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 * / c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 f1 * / c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 f1
- |- (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n)))
T c= c+ cBIT0 f0 cBIT0 f1 cBIT0 c+ f0 f1
- |- (((!n. ((_0 + (BIT1 n)) = (BIT1 n))) ==> ((\n. ((_0 + (BIT1 n)) = (BIT1 n))) n)) = ((\n. ((_0 + (BIT1 n)) = (BIT1 n))) n))
T c= c==> ! c= c+ c_0 cBIT1 b0 cBIT1 b0 * / c= c+ c_0 cBIT1 b0 cBIT1 b0 f0 * / c= c+ c_0 cBIT1 b0 cBIT1 b0 f0
- |- ((\n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) n)
T * / c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
- |- ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))))
T c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- (((~ ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> (P y))) ==> F) ==> ((~ ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> (P y))) ==> F)) |- ((((~ ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> (P y))) ==> F) ==> ((~ ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> (P y))) ==> F)) /\ (((~ ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> (P y))) ==> F) ==> ((~ ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> (P y))) ==> F)))
T c==> c==> c==> c~ c==> c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 * f1 f0 cF c==> c~ c==> c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 * f1 f0 cF c/\ c==> c==> c~ c==> c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 * f1 f0 cF c==> c~ c==> c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 * f1 f0 cF c==> c==> c~ c==> c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 * f1 f0 cF c==> c~ c==> c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 * f1 f0 cF
+ |- ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n)
T * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1
- |- (((!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) ==> ((\n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) n)) = ((\n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) n))
T c= c==> ! c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 * / c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1 * / c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- |- (((!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) ==> ((\n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) n)) = ((\n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) n))
T c= c==> ! c= cSUC cBIT1 b0 cBIT0 cSUC b0 * / c= cSUC cBIT1 b0 cBIT0 cSUC b0 f0 * / c= cSUC cBIT1 b0 cBIT0 cSUC b0 f0
- |- ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))))))))
T c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
+ |- ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))
T c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ |- (((!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) ==> ((\x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) x)) = ((\x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) x))
T c= c==> ! c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 * / c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 f2 * / c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 f2
- |- (((!n. (((BIT0 m) < (BIT0 n)) = (m < n))) ==> ((\n. (((BIT0 m) < (BIT0 n)) = (m < n))) n)) = ((\n. (((BIT0 m) < (BIT0 n)) = (m < n))) n))
T c= c==> ! c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 * / c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 f1 * / c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 f1
- |- ((((~ ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> (P y))) ==> F) ==> ((~ ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> (P y))) ==> F)) = ((~ ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> (P y))) ==> F))
T c= c==> c==> c~ c==> c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 * f1 f0 cF c==> c~ c==> c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 * f1 f0 cF c==> c~ c==> c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 * f1 f0 cF
- |- ((\n. (((BIT0 n) = _0) = (n = _0))) n)
T * / c= c= cBIT0 b0 c_0 c= b0 c_0 f0
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
- |- ((\m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) m)
T * / ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 f0
- |- (((NUMERAL n) >= (NUMERAL m)) = (n >= m))
T c= c>= cNUMERAL f0 cNUMERAL f1 c>= f0 f1
- |- (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n)))
T c= c- cBIT0 f0 cBIT0 f1 cBIT0 c- f0 f1
- |- (((!n. (((BIT1 m) = (BIT0 n)) = F)) ==> ((\n. (((BIT1 m) = (BIT0 n)) = F)) n)) = ((\n. (((BIT1 m) = (BIT0 n)) = F)) n))
T c= c==> ! c= c= cBIT1 f0 cBIT0 b0 cF * / c= c= cBIT1 f0 cBIT0 b0 cF f1 * / c= c= cBIT1 f0 cBIT0 b0 cF f1
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((\g'. (!t'. (!e'. (((i < (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((y $ i) = t')) ==> (((~ g') ==> ((((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ (i - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (i < (NUMERAL (BIT1 (BIT1 _0))))) (y $ i)) (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ (i - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c< f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= c$ f1 f0 b1 c==> c==> c~ b0 c= cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 f2 c$ f1 c- f0 cNUMERAL cBIT1 c_0 b2 c= cCOND c< f0 cNUMERAL cBIT1 cBIT1 c_0 c$ f1 f0 cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 f2 c$ f1 c- f0 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f3
+ |- (((~ (P y)) ==> F) = (P y))
T c= c==> c~ * f0 f1 cF * f0 f1
- |- ((\n. ((_0 EXP (BIT1 n)) = _0)) n)
T * / c= cEXP c_0 cBIT1 b0 c_0 f0
- |- (((!n. (((BIT0 n) >= (BIT0 m)) = (n >= m))) ==> ((\n. (((BIT0 n) >= (BIT0 m)) = (n >= m))) n)) = ((\n. (((BIT0 n) >= (BIT0 m)) = (n >= m))) n))
T c= c==> ! c= c>= cBIT0 b0 cBIT0 f0 c>= b0 f0 * / c= c>= cBIT0 b0 cBIT0 f0 c>= b0 f0 f1 * / c= c>= cBIT0 b0 cBIT0 f0 c>= b0 f0 f1
- |- ((_0 EXP (BIT1 n)) = _0)
T c= cEXP c_0 cBIT1 f0 c_0
+ |- (((!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))) ==> ((\t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))) t)) = ((\t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))) t))
T c= c==> ! ! c= cIN b1 * * part cINTER f0 b0 c/\ cIN b1 f0 cIN b1 b0 * / ! c= cIN b1 * * part cINTER f0 b0 c/\ cIN b1 f0 cIN b1 b0 f1 * / ! c= cIN b1 * * part cINTER f0 b0 c/\ cIN b1 f0 cIN b1 b0 f1
+ |- ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))))
T c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ |- (((!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s))))) ==> ((\f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s))))) f)) = ((\f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s))))) f))
T c= c==> ! c= cIN f0 * * part cIMAGE b0 f1 c? / c/\ c= f0 * b0 b1 cIN b1 f1 * / c= cIN f0 * * part cIMAGE b0 f1 c? / c/\ c= f0 * b0 b1 cIN b1 f1 f2 * / c= cIN f0 * * part cIMAGE b0 f1 c? / c/\ c= f0 * b0 b1 cIN b1 f1 f2
- |- ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))
T c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((\n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) n)
T * / c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
- |- (((!n. (~ (n < n))) ==> ((\n. (~ (n < n))) n)) = ((\n. (~ (n < n))) n))
T c= c==> ! c~ c< b0 b0 * / c~ c< b0 b0 f0 * / c~ c< b0 b0 f0
- |- ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))
T c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
+ |- (((!k. (!t. (!x. ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) ==> (((dropout k) (((pushin k) t) x)) = x))))) ==> ((\k. (!t. (!x. ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) ==> (((dropout k) (((pushin k) t) x)) = x))))) k)) = ((\k. (!t. (!x. ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) ==> (((dropout k) (((pushin k) t) x)) = x))))) k))
T c= c==> ! ! ! c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdropout b0 cpushin b0 b1 b2 b2 * / ! ! c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdropout b0 cpushin b0 b1 b2 b2 f0 * / ! ! c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdropout b0 cpushin b0 b1 b2 b2 f0
+ |- ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))))
T c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
+ |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) <= (dimindex UNIV)))
T c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c<= cNUMERAL cBIT1 cBIT1 c_0 cdimindex part cUNIV
+ |- ((\n. (((NUMERAL m) < (NUMERAL n)) = (m < n))) n)
T * / c= c< cNUMERAL f0 cNUMERAL b0 c< f0 b0 f1
+ |- ((\n. ((_0 <= (BIT1 n)) = T)) n)
T * / c= c<= c_0 cBIT1 b0 cT f0
+ |- (((!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) ==> ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m)) = ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m))
T c= c==> ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0 * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0
+ |- (((!n. (((BIT1 m) = (BIT1 n)) = (m = n))) ==> ((\n. (((BIT1 m) = (BIT1 n)) = (m = n))) n)) = ((\n. (((BIT1 m) = (BIT1 n)) = (m = n))) n))
T c= c==> ! c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 * / c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 f1 * / c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 f1
+ |- ((\s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t)))))) s)
T * / ! c= c= b0 b1 ! c= cIN b2 b0 cIN b2 b1 f0
+ |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
+ |- (((!t. (!x. ((((pushin k) t) x) = (lambdai. (((COND (i < k)) (x $ i)) (((COND (i = k)) t) (x $ (i - (NUMERAL (BIT1 _0)))))))))) ==> ((\t. (!x. ((((pushin k) t) x) = (lambdai. (((COND (i < k)) (x $ i)) (((COND (i = k)) t) (x $ (i - (NUMERAL (BIT1 _0)))))))))) t)) = ((\t. (!x. ((((pushin k) t) x) = (lambdai. (((COND (i < k)) (x $ i)) (((COND (i = k)) t) (x $ (i - (NUMERAL (BIT1 _0)))))))))) t))
T c= c==> ! ! c= cpushin f0 b0 b1 clambda / cCOND c< b2 f0 c$ b1 b2 cCOND c= b2 f0 b0 c$ b1 c- b2 cNUMERAL cBIT1 c_0 * / ! c= cpushin f0 b0 b1 clambda / cCOND c< b2 f0 c$ b1 b2 cCOND c= b2 f0 b0 c$ b1 c- b2 cNUMERAL cBIT1 c_0 f1 * / ! c= cpushin f0 b0 b1 clambda / cCOND c< b2 f0 c$ b1 b2 cCOND c= b2 f0 b0 c$ b1 c- b2 cNUMERAL cBIT1 c_0 f1
+ |- (((!t. ((((slice k) t) s) = ((IMAGE (dropout k)) (s INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ k) = t)) x)))))))) ==> ((\t. ((((slice k) t) s) = ((IMAGE (dropout k)) (s INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ k) = t)) x)))))))) t)) = ((\t. ((((slice k) t) s) = ((IMAGE (dropout k)) (s INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ k) = t)) x)))))))) t))
T c= c==> ! c= * * * part cslice f0 b0 f1 * * part cIMAGE * part cdropout f0 * * part cINTER f1 * part cGSPEC / c? / cSETSPEC b1 c= c$ b2 f0 b0 b2 * / c= * * * part cslice f0 b0 f1 * * part cIMAGE * part cdropout f0 * * part cINTER f1 * part cGSPEC / c? / cSETSPEC b1 c= c$ b2 f0 b0 b2 f2 * / c= * * * part cslice f0 b0 f1 * * part cIMAGE * part cdropout f0 * * part cINTER f1 * part cGSPEC / c? / cSETSPEC b1 c= c$ b2 f0 b0 b2 f2
+ |- (((((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0)))) = F) ==> ((F ==> ((y $ (NUMERAL (BIT1 (BIT1 _0)))) = t')) ==> (((~ F) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0))))) (y $ (NUMERAL (BIT1 (BIT1 _0))))) (((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) = (((COND F) t') e'))))) = ((F ==> ((y $ (NUMERAL (BIT1 (BIT1 _0)))) = t')) ==> (((~ F) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0))))) (y $ (NUMERAL (BIT1 (BIT1 _0))))) (((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) = (((COND F) t') e')))))
T c= c==> c= c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF c==> c==> cF c= c$ f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c==> c~ cF c= cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f2 c$ f0 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 f3 c= cCOND c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c$ f0 cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f2 c$ f0 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND cF f1 f3 c==> c==> cF c= c$ f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c==> c~ cF c= cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f2 c$ f0 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 f3 c= cCOND c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c$ f0 cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f2 c$ f0 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND cF f1 f3
+ |- ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m)
T * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0
+ ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t))) |- (P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))
T c==> c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ * f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 c= c$ f1 cNUMERAL cBIT1 cBIT1 c_0 f3 * f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1
+ |- (((!k. (!t. ((((slice k) t) s) = ((IMAGE (dropout k)) (s INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ k) = t)) x))))))))) ==> ((\k. (!t. ((((slice k) t) s) = ((IMAGE (dropout k)) (s INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ k) = t)) x))))))))) k)) = ((\k. (!t. ((((slice k) t) s) = ((IMAGE (dropout k)) (s INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ k) = t)) x))))))))) k))
T c= c==> ! ! c= * * * part cslice b0 b1 f0 * * part cIMAGE * part cdropout b0 * * part cINTER f0 * part cGSPEC / c? / cSETSPEC b2 c= c$ b3 b0 b1 b3 * / ! c= * * * part cslice b0 b1 f0 * * part cIMAGE * part cdropout b0 * * part cINTER f0 * part cGSPEC / c? / cSETSPEC b2 c= c$ b3 b0 b1 b3 f1 * / ! c= * * * part cslice b0 b1 f0 * * part cIMAGE * part cdropout b0 * * part cINTER f0 * part cGSPEC / c? / cSETSPEC b2 c= c$ b3 b0 b1 b3 f1
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((_0 <= _0) = T) /\ ((!n. (((BIT0 n) <= _0) = (n <= _0))) /\ ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))))))))
T c/\ c= c<= c_0 c_0 cT c/\ ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ |- ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))
T c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ |- ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))))))
T c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
+ |- ((\m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) m)
T * / ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 f0
+ |- (((!t. (!x. ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) ==> (((dropout k) (((pushin k) t) x)) = x)))) ==> ((\t. (!x. ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) ==> (((dropout k) (((pushin k) t) x)) = x)))) t)) = ((\t. (!x. ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) ==> (((dropout k) (((pushin k) t) x)) = x)))) t))
T c= c==> ! ! c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdropout f0 cpushin f0 b0 b1 b1 * / ! c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdropout f0 cpushin f0 b0 b1 b1 f1 * / ! c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdropout f0 cpushin f0 b0 b1 b1 f1
+ |- ((_0 = _0) = T)
T c= c= c_0 c_0 cT
+ F |- (F /\ ((y $ (NUMERAL (BIT1 (BIT1 _0)))) = (y $ (NUMERAL (BIT1 (BIT1 _0))))))
T c==> cF c/\ cF c= c$ f0 cNUMERAL cBIT1 cBIT1 c_0 c$ f0 cNUMERAL cBIT1 cBIT1 c_0
+ (~ (P y)), ((\x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) x) |- (((\x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) x) /\ F)
T c==> c~ * f0 f1 c==> * / c/\ c= f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 f3 c/\ * / c/\ c= f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 f3 cF
+ (~ (P y)), ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t))) |- (~ (P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))
T c==> c~ * f0 f1 c==> c/\ c= f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 c/\ * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 c= c$ f2 cNUMERAL cBIT1 cBIT1 c_0 f3 c~ * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f2
+ (P y) |- ((P y) /\ (?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))))
T c==> * f0 f1 c/\ * f0 f1 c? / c/\ c= f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2
+ |- (((!s. (!k. (!t. ((((slice k) t) s) = ((IMAGE (dropout k)) (s INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ k) = t)) x)))))))))) ==> ((\s. (!k. (!t. ((((slice k) t) s) = ((IMAGE (dropout k)) (s INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ k) = t)) x)))))))))) s)) = ((\s. (!k. (!t. ((((slice k) t) s) = ((IMAGE (dropout k)) (s INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ k) = t)) x)))))))))) s))
T c= c==> ! ! ! c= * * * part cslice b1 b2 b0 * * part cIMAGE * part cdropout b1 * * part cINTER b0 * part cGSPEC / c? / cSETSPEC b3 c= c$ b4 b1 b2 b4 * / ! ! c= * * * part cslice b1 b2 b0 * * part cIMAGE * part cdropout b1 * * part cINTER b0 * part cGSPEC / c? / cSETSPEC b3 c= c$ b4 b1 b2 b4 f0 * / ! ! c= * * * part cslice b1 b2 b0 * * part cIMAGE * part cdropout b1 * * part cINTER b0 * part cGSPEC / c? / cSETSPEC b3 c= c$ b4 b1 b2 b4 f0
+ ((\x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) x) |- ((((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t))) ==> F) = F)
T c==> * / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 f3 c= c==> c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f3 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f3 c= c$ f3 cNUMERAL cBIT1 cBIT1 c_0 f2 cF cF
+ |- ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))
T c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ (~ (P y)) |- (((\x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) x) ==> F)
T c==> c~ * f0 f1 c==> * / c/\ c= f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 f3 cF
+ |- ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))
T c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
+ |- (((_0 < _0) = F) /\ ((!n. (((BIT0 n) < _0) = F)) /\ ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))))))))
T c/\ c= c< c_0 c_0 cF c/\ ! c= c< cBIT0 b0 c_0 cF c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
+ |- (((!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t)))))) ==> ((\s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t)))))) s)) = ((\s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t)))))) s))
T c= c==> ! ! c= c= b0 b1 ! c= cIN b2 b0 cIN b2 b1 * / ! c= c= b0 b1 ! c= cIN b2 b0 cIN b2 b1 f0 * / ! c= c= b0 b1 ! c= cIN b2 b0 cIN b2 b1 f0
+ |- (((BIT1 m) = (BIT1 n)) = (m = n))
T c= c= cBIT1 f0 cBIT1 f1 c= f0 f1
+ |- (T = (((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)))
T c= cT c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV
+ |- ((((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((y $ (NUMERAL (BIT1 (BIT1 _0)))) = t')) ==> (((~ g') ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0))))) (y $ (NUMERAL (BIT1 (BIT1 _0))))) (((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))
T c==> c= c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c==> f0 c= c$ f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> c==> c~ f0 c= cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f3 c$ f1 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 f4 c= cCOND c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c$ f1 cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f3 c$ f1 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND f0 f2 f4
+ |- ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))
T c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
+ |- ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))
T c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
+ |- ((x IN (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)) x))))) = ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 c= c$ b1 cNUMERAL cBIT1 cBIT1 c_0 f1 b1 c= c$ f0 cNUMERAL cBIT1 cBIT1 c_0 f1
+ |- (((!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) ==> ((\n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) n)) = ((\n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) n))
T c= c==> ! c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 * / c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 f1 * / c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 f1
+ |- (!x. ((?x. ((x = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) = (P x)))
T c= c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 * f1 f0
+ |- (((!n. ((_0 <= (BIT1 n)) = T)) ==> ((\n. ((_0 <= (BIT1 n)) = T)) n)) = ((\n. ((_0 <= (BIT1 n)) = T)) n))
T c= c==> ! c= c<= c_0 cBIT1 b0 cT * / c= c<= c_0 cBIT1 b0 cT f0 * / c= c<= c_0 cBIT1 b0 cT f0
+ |- (((P y) ==> (?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t))))) = (((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> (P y)) /\ ((P y) ==> (?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))))))
T c= c==> * f0 f1 c? / c/\ c= f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 c/\ c==> c? / c/\ c= f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 * f0 f1 c==> * f0 f1 c? / c/\ c= f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2
+ |- ((!n. (((BIT0 n) <= _0) = (n <= _0))) /\ ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))))))
T c/\ ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
+ |- ((((~ F) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))))) = t)) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0))))) (y $ (NUMERAL (BIT1 (BIT1 _0))))) (((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) = (((COND F) (y $ (NUMERAL (BIT1 (BIT1 _0))))) t))) = ((((COND ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0))))) (y $ (NUMERAL (BIT1 (BIT1 _0))))) (((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) = (((COND F) (y $ (NUMERAL (BIT1 (BIT1 _0))))) t)))
T c= c==> c==> c~ cF c= cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c$ f1 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 c= cCOND c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c$ f1 cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c$ f1 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND cF c$ f1 cNUMERAL cBIT1 cBIT1 c_0 f0 c= cCOND c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c$ f1 cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c$ f1 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND cF c$ f1 cNUMERAL cBIT1 cBIT1 c_0 f0
+ |- (((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV))
T c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV
+ |- (((!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) ==> ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)) = ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ (~ (P y)), ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t))) |- (((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t))) /\ F)
T c==> c~ * f0 f1 c==> c/\ c= f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 c/\ * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 c= c$ f2 cNUMERAL cBIT1 cBIT1 c_0 f3 c/\ c/\ c= f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 c/\ * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 c= c$ f2 cNUMERAL cBIT1 cBIT1 c_0 f3 cF
+ |- (((NUMERAL m) < (NUMERAL n)) = (m < n))
T c= c< cNUMERAL f0 cNUMERAL f1 c< f0 f1
+ |- ((!x. ((?x. ((x = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) = (P x))) = (((IMAGE (dropout (NUMERAL (BIT1 (BIT1 _0))))) ((GSPEC (\GEN%PVAR%5074. (?x. (((SETSPEC GEN%PVAR%5074) (P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))) x)))) INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)) x)))))) = (GSPEC (\GEN%PVAR%5075. (?x. (((SETSPEC GEN%PVAR%5075) (P x)) x))))))
T c= ! c= c? / c/\ c= b0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b1 c/\ * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b1 c= c$ b1 cNUMERAL cBIT1 cBIT1 c_0 f1 * f0 b0 c= * * part cIMAGE * part cdropout cNUMERAL cBIT1 cBIT1 c_0 * * part cINTER * part cGSPEC / c? / cSETSPEC b0 * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b1 b1 * part cGSPEC / c? / cSETSPEC b0 c= c$ b1 cNUMERAL cBIT1 cBIT1 c_0 f1 b1 * part cGSPEC / c? / cSETSPEC b0 * f0 b1 b1
+ |- ((\t. (!x. ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) ==> (((dropout k) (((pushin k) t) x)) = x)))) t)
T * / ! c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdropout f0 cpushin f0 b0 b1 b1 f1
+ |- ((\m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))) m)
T * / ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1 f0
+ |- (((!m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) ==> ((\m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) m)) = ((\m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) m))
T c= c==> ! ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 * / ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 f0 * / ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 f0
+ |- ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))))
T c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ |- ((\n. (((BIT1 n) + _0) = (BIT1 n))) n)
T * / c= c+ cBIT1 b0 c_0 cBIT1 b0 f0
+ (P y) |- ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) (((pushin (NUMERAL (BIT1 (BIT1 _0)))) t) y))) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) (((pushin (NUMERAL (BIT1 (BIT1 _0)))) t) y))) /\ (((((pushin (NUMERAL (BIT1 (BIT1 _0)))) t) y) $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))
T c==> * f0 f1 c/\ c= f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 cpushin cNUMERAL cBIT1 cBIT1 c_0 f2 f1 c/\ * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cpushin cNUMERAL cBIT1 cBIT1 c_0 f2 f1 c= c$ cpushin cNUMERAL cBIT1 cBIT1 c_0 f2 f1 cNUMERAL cBIT1 cBIT1 c_0 f2
+ |- ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))
T c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
+ |- (((!x. ((((pushin k) t) x) = (lambdai. (((COND (i < k)) (x $ i)) (((COND (i = k)) t) (x $ (i - (NUMERAL (BIT1 _0))))))))) ==> ((\x. ((((pushin k) t) x) = (lambdai. (((COND (i < k)) (x $ i)) (((COND (i = k)) t) (x $ (i - (NUMERAL (BIT1 _0))))))))) x)) = ((\x. ((((pushin k) t) x) = (lambdai. (((COND (i < k)) (x $ i)) (((COND (i = k)) t) (x $ (i - (NUMERAL (BIT1 _0))))))))) x))
T c= c==> ! c= cpushin f0 f1 b0 clambda / cCOND c< b1 f0 c$ b0 b1 cCOND c= b1 f0 f1 c$ b0 c- b1 cNUMERAL cBIT1 c_0 * / c= cpushin f0 f1 b0 clambda / cCOND c< b1 f0 c$ b0 b1 cCOND c= b1 f0 f1 c$ b0 c- b1 cNUMERAL cBIT1 c_0 f2 * / c= cpushin f0 f1 b0 clambda / cCOND c< b1 f0 c$ b0 b1 cCOND c= b1 f0 f1 c$ b0 c- b1 cNUMERAL cBIT1 c_0 f2
+ |- ((\n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) n)
T * / c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 f1
+ |- (((((slice (NUMERAL (BIT1 (BIT1 _0)))) t) (GSPEC (\GEN%PVAR%5074. (?x. (((SETSPEC GEN%PVAR%5074) (P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))) x))))) = (GSPEC (\GEN%PVAR%5075. (?x. (((SETSPEC GEN%PVAR%5075) (P x)) x))))) = T)
T c= c= * * * part cslice cNUMERAL cBIT1 cBIT1 c_0 f0 * part cGSPEC / c? / cSETSPEC b0 * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b1 b1 * part cGSPEC / c? / cSETSPEC b0 * f1 b1 b1 cT
+ |- ((\m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) m)
T * / ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 f0
+ |- ((((COND F) t1) t2) = t2)
T c= cCOND cF f0 f1 f1
+ |- ((\t'. (!e'. ((((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((y $ (NUMERAL (BIT1 (BIT1 _0)))) = t')) ==> (((~ g') ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0))))) (y $ (NUMERAL (BIT1 (BIT1 _0))))) (((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c==> f0 c= c$ f1 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> c~ f0 c= cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f2 c$ f1 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 b1 c= cCOND c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c$ f1 cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f2 c$ f1 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND f0 b0 b1 f3
+ |- (((!t. ((s = t) = (!x. ((x IN s) = (x IN t))))) ==> ((\t. ((s = t) = (!x. ((x IN s) = (x IN t))))) t)) = ((\t. ((s = t) = (!x. ((x IN s) = (x IN t))))) t))
T c= c==> ! c= c= f0 b0 ! c= cIN b1 f0 cIN b1 b0 * / c= c= f0 b0 ! c= cIN b1 f0 cIN b1 b0 f1 * / c= c= f0 b0 ! c= cIN b1 f0 cIN b1 b0 f1
+ ((\x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) x) |- ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))
T c==> * / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 f3 c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f3 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f3 c= c$ f3 cNUMERAL cBIT1 cBIT1 c_0 f2
+ |- (((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) ==> ((\m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) m)) = ((\m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) m))
T c= c==> ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 * / ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 f0 * / ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 f0
+ |- (((!s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s)))))) ==> ((\s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s)))))) s)) = ((\s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s)))))) s))
T c= c==> ! ! c= cIN f0 * * part cIMAGE b1 b0 c? / c/\ c= f0 * b1 b2 cIN b2 b0 * / ! c= cIN f0 * * part cIMAGE b1 b0 c? / c/\ c= f0 * b1 b2 cIN b2 b0 f1 * / ! c= cIN f0 * * part cIMAGE b1 b0 c? / c/\ c= f0 * b1 b2 cIN b2 b0 f1
+ |- ((!t. ((((slice (NUMERAL (BIT1 (BIT1 _0)))) t) (GSPEC (\GEN%PVAR%5074. (?x. (((SETSPEC GEN%PVAR%5074) (P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))) x))))) = (GSPEC (\GEN%PVAR%5075. (?x. (((SETSPEC GEN%PVAR%5075) (P x)) x)))))) = T)
T c= ! c= * * * part cslice cNUMERAL cBIT1 cBIT1 c_0 b0 * part cGSPEC / c? / cSETSPEC b1 * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b2 b2 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 cT
+ |- (((!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))))) ==> ((\s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))))) s)) = ((\s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))))) s))
T c= c==> ! ! ! c= cIN b2 * * part cINTER b0 b1 c/\ cIN b2 b0 cIN b2 b1 * / ! ! c= cIN b2 * * part cINTER b0 b1 c/\ cIN b2 b0 cIN b2 b1 f0 * / ! ! c= cIN b2 * * part cINTER b0 b1 c/\ cIN b2 b0 cIN b2 b1 f0
+ ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t))) |- (((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) ==> F) = F)
T c==> c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ * f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 c= c$ f1 cNUMERAL cBIT1 cBIT1 c_0 f3 c= c==> * f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cF cF
+ |- (((!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) ==> ((\n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) n)) = ((\n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) n))
T c= c==> ! c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 * / c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 f1 * / c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 f1
+ |- (((!m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) ==> ((\m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) m)) = ((\m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) m))
T c= c==> ! ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 * / ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 f0 * / ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 f0
+ |- ((!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e')))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 cT
+ |- (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))
T c= c+ cNUMERAL f0 cNUMERAL f1 cNUMERAL c+ f0 f1
+ |- ((\g'. (!t'. (!e'. ((((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((y $ (NUMERAL (BIT1 (BIT1 _0)))) = t')) ==> (((~ g') ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0))))) (y $ (NUMERAL (BIT1 (BIT1 _0))))) (((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= c$ f0 cNUMERAL cBIT1 cBIT1 c_0 b1 c==> c==> c~ b0 c= cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f0 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 b2 c= cCOND c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c$ f0 cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f0 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f2
+ |- (((!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))) ==> ((\m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))) m)) = ((\m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))) m))
T c= c==> ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1 * / ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1 f0 * / ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1 f0
+ |- ((P y) ==> (?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))))
T c==> * f0 f1 c? / c/\ c= f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2
+ |- ((_0 <= _0) = T)
T c= c<= c_0 c_0 cT
+ |- ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))))
T c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
+ |- ((\t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))) t)
T * / ! c= cIN b1 * * part cINTER f0 b0 c/\ cIN b1 f0 cIN b1 b0 f1
+ |- ((\s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s)))))) s)
T * / ! c= cIN f0 * * part cIMAGE b1 b0 c? / c/\ c= f0 * b1 b2 cIN b2 b0 f1
+ |- ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))))
T c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
+ |- (((NUMERAL m) = (NUMERAL n)) = (m = n))
T c= c= cNUMERAL f0 cNUMERAL f1 c= f0 f1
+ |- (((!n. (((NUMERAL m) = (NUMERAL n)) = (m = n))) ==> ((\n. (((NUMERAL m) = (NUMERAL n)) = (m = n))) n)) = ((\n. (((NUMERAL m) = (NUMERAL n)) = (m = n))) n))
T c= c==> ! c= c= cNUMERAL f0 cNUMERAL b0 c= f0 b0 * / c= c= cNUMERAL f0 cNUMERAL b0 c= f0 b0 f1 * / c= c= cNUMERAL f0 cNUMERAL b0 c= f0 b0 f1
+ |- (((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) ==> (((dropout (NUMERAL (BIT1 (BIT1 _0)))) (((pushin (NUMERAL (BIT1 (BIT1 _0)))) t) y)) = y)) = (((dropout (NUMERAL (BIT1 (BIT1 _0)))) (((pushin (NUMERAL (BIT1 (BIT1 _0)))) t) y)) = y))
T c= c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdropout cNUMERAL cBIT1 cBIT1 c_0 cpushin cNUMERAL cBIT1 cBIT1 c_0 f0 f1 f1 c= cdropout cNUMERAL cBIT1 cBIT1 c_0 cpushin cNUMERAL cBIT1 cBIT1 c_0 f0 f1 f1
+ |- ((\t. ((s = t) = (!x. ((x IN s) = (x IN t))))) t)
T * / c= c= f0 b0 ! c= cIN b1 f0 cIN b1 b0 f1
+ |- (((lambdai. (((COND (i < (NUMERAL (BIT1 (BIT1 _0))))) (y $ i)) (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ (i - (NUMERAL (BIT1 _0))))))) $ (NUMERAL (BIT1 (BIT1 _0)))) = ((\i. (((COND (i < (NUMERAL (BIT1 (BIT1 _0))))) (y $ i)) (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ (i - (NUMERAL (BIT1 _0))))))) (NUMERAL (BIT1 (BIT1 _0)))))
T c= c$ clambda / cCOND c< b0 cNUMERAL cBIT1 cBIT1 c_0 c$ f0 b0 cCOND c= b0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f0 c- b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 * / cCOND c< b0 cNUMERAL cBIT1 cBIT1 c_0 c$ f0 b0 cCOND c= b0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f0 c- b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
+ (~ (P y)), ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t))) |- ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) ==> F)
T c==> c~ * f0 f1 c==> c/\ c= f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 c/\ * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 c= c$ f2 cNUMERAL cBIT1 cBIT1 c_0 f3 c==> * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 cF
+ |- (((!n. (((BIT1 n) + _0) = (BIT1 n))) ==> ((\n. (((BIT1 n) + _0) = (BIT1 n))) n)) = ((\n. (((BIT1 n) + _0) = (BIT1 n))) n))
T c= c==> ! c= c+ cBIT1 b0 c_0 cBIT1 b0 * / c= c+ cBIT1 b0 c_0 cBIT1 b0 f0 * / c= c+ cBIT1 b0 c_0 cBIT1 b0 f0
+ |- ((x IN (GSPEC (\GEN%PVAR%5074. (?x. (((SETSPEC GEN%PVAR%5074) (P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))) x))))) = (P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b1 b1 * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
+ |- ((\m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) m)
T * / ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 f0
+ |- ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))
T c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ (~ (P y)) |- (((!x. (((\x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) x) ==> F)) ==> ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> F)) = ((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) ==> F))
T c==> c~ * f0 f1 c= c==> ! c==> * / c/\ c= f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b1 c/\ * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b1 c= c$ b1 cNUMERAL cBIT1 cBIT1 c_0 f2 b0 cF c==> c? / c/\ c= f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 cF c==> c? / c/\ c= f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 cF
+ |- ((~ F) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))))) = t))
T c==> c~ cF c= cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c$ f1 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 f0
+ |- ((\n. (((BIT1 m) = (BIT1 n)) = (m = n))) n)
T * / c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 f1
+ |- (((NUMERAL m) <= (NUMERAL n)) = (m <= n))
T c= c<= cNUMERAL f0 cNUMERAL f1 c<= f0 f1
+ |- ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))
T c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ (~ (P y)) |- (!x. (((\x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) x) ==> F))
T c==> c~ * f0 f1 ! c==> * / c/\ c= f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b1 c/\ * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b1 c= c$ b1 cNUMERAL cBIT1 cBIT1 c_0 f2 b0 cF
+ (~ F) |- ((~ F) /\ ((((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))))) = t))
T c==> c~ cF c/\ c~ cF c= cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c$ f1 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 f0
+ (?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) |- ((~ (P y)) ==> F)
T c==> c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> c~ * f1 f0 cF
+ |- ((\n. (((BIT1 m) < (BIT1 n)) = (m < n))) n)
T * / c= c< cBIT1 f0 cBIT1 b0 c< f0 b0 f1
+ |- ((\m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) m)
T * / ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 f0
+ |- (((!n. (((NUMERAL m) < (NUMERAL n)) = (m < n))) ==> ((\n. (((NUMERAL m) < (NUMERAL n)) = (m < n))) n)) = ((\n. (((NUMERAL m) < (NUMERAL n)) = (m < n))) n))
T c= c==> ! c= c< cNUMERAL f0 cNUMERAL b0 c< f0 b0 * / c= c< cNUMERAL f0 cNUMERAL b0 c< f0 b0 f1 * / c= c< cNUMERAL f0 cNUMERAL b0 c< f0 b0 f1
+ |- ((\k. (!t. (!x. ((((pushin k) t) x) = (lambdai. (((COND (i < k)) (x $ i)) (((COND (i = k)) t) (x $ (i - (NUMERAL (BIT1 _0))))))))))) k)
T * / ! ! c= cpushin b0 b1 b2 clambda / cCOND c< b3 b0 c$ b2 b3 cCOND c= b3 b0 b1 c$ b2 c- b3 cNUMERAL cBIT1 c_0 f0
+ |- (((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) <= (dimindex UNIV))) ==> (((lambdai. (((COND (i < (NUMERAL (BIT1 (BIT1 _0))))) (y $ i)) (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ (i - (NUMERAL (BIT1 _0))))))) $ (NUMERAL (BIT1 (BIT1 _0)))) = ((\i. (((COND (i < (NUMERAL (BIT1 (BIT1 _0))))) (y $ i)) (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ (i - (NUMERAL (BIT1 _0))))))) (NUMERAL (BIT1 (BIT1 _0)))))) = (((lambdai. (((COND (i < (NUMERAL (BIT1 (BIT1 _0))))) (y $ i)) (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ (i - (NUMERAL (BIT1 _0))))))) $ (NUMERAL (BIT1 (BIT1 _0)))) = ((\i. (((COND (i < (NUMERAL (BIT1 (BIT1 _0))))) (y $ i)) (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ (i - (NUMERAL (BIT1 _0))))))) (NUMERAL (BIT1 (BIT1 _0))))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c<= cNUMERAL cBIT1 cBIT1 c_0 cdimindex part cUNIV c= c$ clambda / cCOND c< b0 cNUMERAL cBIT1 cBIT1 c_0 c$ f0 b0 cCOND c= b0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f0 c- b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 * / cCOND c< b0 cNUMERAL cBIT1 cBIT1 c_0 c$ f0 b0 cCOND c= b0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f0 c- b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c$ clambda / cCOND c< b0 cNUMERAL cBIT1 cBIT1 c_0 c$ f0 b0 cCOND c= b0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f0 c- b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 * / cCOND c< b0 cNUMERAL cBIT1 cBIT1 c_0 c$ f0 b0 cCOND c= b0 cNUMERAL cBIT1 cBIT1 c_0 f1 c$ f0 c- b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
+ |- (((!y. (!s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s))))))) ==> ((\y. (!s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s))))))) y)) = ((\y. (!s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s))))))) y))
T c= c==> ! ! ! c= cIN b0 * * part cIMAGE b2 b1 c? / c/\ c= b0 * b2 b3 cIN b3 b1 * / ! ! c= cIN b0 * * part cIMAGE b2 b1 c? / c/\ c= b0 * b2 b3 cIN b3 b1 f0 * / ! ! c= cIN b0 * * part cIMAGE b2 b1 c? / c/\ c= b0 * b2 b3 cIN b3 b1 f0
+ |- (((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) ==> ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)) = ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ |- ((\m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))) m)
T * / ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1 f0
+ |- (((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) ==> ((\m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) m)) = ((\m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) m))
T c= c==> ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 * / ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 f0 * / ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 f0
+ |- (((~ F) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0))))) (y $ (NUMERAL (BIT1 (BIT1 _0))))) (((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) = (((COND F) (y $ (NUMERAL (BIT1 (BIT1 _0))))) e')))
T c==> c==> c~ cF c= cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c$ f1 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 f2 c= cCOND c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c$ f1 cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c$ f1 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND cF c$ f1 cNUMERAL cBIT1 cBIT1 c_0 f2
+ |- ((_0 <= (BIT1 n)) = T)
T c= c<= c_0 cBIT1 f0 cT
+ |- ((T /\ t) = t)
T c= c/\ cT f0 f0
+ |- ((~ p) = (p ==> F))
T c= c~ f0 c==> f0 cF
+ |- (((BIT1 n) + _0) = (BIT1 n))
T c= c+ cBIT1 f0 c_0 cBIT1 f0
+ |- ((\e'. ((((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((y $ (NUMERAL (BIT1 (BIT1 _0)))) = t')) ==> (((~ g') ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0))))) (y $ (NUMERAL (BIT1 (BIT1 _0))))) (((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))) e')
T * / c==> c= c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c==> f0 c= c$ f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> c==> c~ f0 c= cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f3 c$ f1 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 c= cCOND c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c$ f1 cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f3 c$ f1 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND f0 f2 b0 f4
+ (~ (P y)) |- (((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t))) ==> F)
T c==> c~ * f0 f1 c==> c/\ c= f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 c/\ * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 c= c$ f2 cNUMERAL cBIT1 cBIT1 c_0 f3 cF
+ |- ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))
T c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
+ |- (((!x. ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) ==> (((dropout k) (((pushin k) t) x)) = x))) ==> ((\x. ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) ==> (((dropout k) (((pushin k) t) x)) = x))) x)) = ((\x. ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) ==> (((dropout k) (((pushin k) t) x)) = x))) x))
T c= c==> ! c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdropout f0 cpushin f0 f1 b0 b0 * / c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdropout f0 cpushin f0 f1 b0 b0 f2 * / c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdropout f0 cpushin f0 f1 b0 b0 f2
+ |- (((!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))) ==> ((\m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))) m)) = ((\m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))) m))
T c= c==> ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1 * / ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1 f0 * / ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1 f0
+ |- (((!t'. (!e'. ((((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((y $ (NUMERAL (BIT1 (BIT1 _0)))) = t')) ==> (((~ g') ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0))))) (y $ (NUMERAL (BIT1 (BIT1 _0))))) (((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((y $ (NUMERAL (BIT1 (BIT1 _0)))) = t')) ==> (((~ g') ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0))))) (y $ (NUMERAL (BIT1 (BIT1 _0))))) (((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((y $ (NUMERAL (BIT1 (BIT1 _0)))) = t')) ==> (((~ g') ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0))))) (y $ (NUMERAL (BIT1 (BIT1 _0))))) (((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) t) (y $ ((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c==> f0 c= c$ f1 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> c~ f0 c= cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f2 c$ f1 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 b1 c= cCOND c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c$ f1 cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f2 c$ f1 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND f0 b0 b1 * / ! c==> c= c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c==> f0 c= c$ f1 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> c~ f0 c= cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f2 c$ f1 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 b1 c= cCOND c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c$ f1 cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f2 c$ f1 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND f0 b0 b1 f3 * / ! c==> c= c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c==> f0 c= c$ f1 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> c~ f0 c= cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f2 c$ f1 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 b1 c= cCOND c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c$ f1 cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f2 c$ f1 c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND f0 b0 b1 f3
+ |- (((?x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) = (P y)) = T)
T c= c= c? / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f2 * f1 f0 cT
+ |- ((\f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s))))) f)
T * / c= cIN f0 * * part cIMAGE b0 f1 c? / c/\ c= f0 * b0 b1 cIN b1 f1 f2
+ |- (((IMAGE (dropout (NUMERAL (BIT1 (BIT1 _0))))) ((GSPEC (\GEN%PVAR%5074. (?x. (((SETSPEC GEN%PVAR%5074) (P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))) x)))) INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)) x)))))) = (GSPEC (\GEN%PVAR%5075. (?x. (((SETSPEC GEN%PVAR%5075) (P x)) x)))))
T c= * * part cIMAGE * part cdropout cNUMERAL cBIT1 cBIT1 c_0 * * part cINTER * part cGSPEC / c? / cSETSPEC b0 * f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b1 b1 * part cGSPEC / c? / cSETSPEC b0 c= c$ b1 cNUMERAL cBIT1 cBIT1 c_0 f1 b1 * part cGSPEC / c? / cSETSPEC b0 * f0 b1 b1
+ |- ((x IN (GSPEC (\GEN%PVAR%5075. (?x. (((SETSPEC GEN%PVAR%5075) (p x)) x))))) = (p x))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 * f1 b1 b1 * f1 f0
+ |- ((\n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) n)
T * / c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 f1
+ |- ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))))))
T c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
+ |- ((!n. (((BIT0 n) < _0) = F)) /\ ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))))))))
T c/\ ! c= c< cBIT0 b0 c_0 cF c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
+ |- (((!n. (((BIT1 m) < (BIT1 n)) = (m < n))) ==> ((\n. (((BIT1 m) < (BIT1 n)) = (m < n))) n)) = ((\n. (((BIT1 m) < (BIT1 n)) = (m < n))) n))
T c= c==> ! c= c< cBIT1 f0 cBIT1 b0 c< f0 b0 * / c= c< cBIT1 f0 cBIT1 b0 c< f0 b0 f1 * / c= c< cBIT1 f0 cBIT1 b0 c< f0 b0 f1
+ |- ((!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))) = T)
T c= ! ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c==> c==> c~ f1 c= f3 b1 c= cCOND f0 f2 f3 cCOND f1 b0 b1 cT
+ |- ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))))
T c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ |- ((\k. (!t. ((((slice k) t) s) = ((IMAGE (dropout k)) (s INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ k) = t)) x))))))))) k)
T * / ! c= * * * part cslice b0 b1 f0 * * part cIMAGE * part cdropout b0 * * part cINTER f0 * part cGSPEC / c? / cSETSPEC b2 c= c$ b3 b0 b1 b3 f1
+ |- (((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) (((pushin (NUMERAL (BIT1 (BIT1 _0)))) t) y))) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) (((pushin (NUMERAL (BIT1 (BIT1 _0)))) t) y))) /\ (((((pushin (NUMERAL (BIT1 (BIT1 _0)))) t) y) $ (NUMERAL (BIT1 (BIT1 _0)))) = t))) = ((\x. ((y = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((P ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) /\ ((x $ (NUMERAL (BIT1 (BIT1 _0)))) = t)))) (((pushin (NUMERAL (BIT1 (BIT1 _0)))) t) y)))
T c= c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cpushin cNUMERAL cBIT1 cBIT1 c_0 f1 f0 c/\ * f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 cpushin cNUMERAL cBIT1 cBIT1 c_0 f1 f0 c= c$ cpushin cNUMERAL cBIT1 cBIT1 c_0 f1 f0 cNUMERAL cBIT1 cBIT1 c_0 f1 * / c/\ c= f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ * f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 b0 c= c$ b0 cNUMERAL cBIT1 cBIT1 c_0 f1 cpushin cNUMERAL cBIT1 cBIT1 c_0 f1 f0
+ |- ((\s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))))) s)
T * / ! ! c= cIN b2 * * part cINTER b0 b1 c/\ cIN b2 b0 cIN b2 b1 f0
+ (P y) |- ((P y) = T)
T c==> * f0 f1 c= * f0 f1 cT
