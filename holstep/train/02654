N HAS_MEASURE_INTERVAL
C |- ((!a. (!b. ((has_measure (closed_interval ((CONS (a , b)) NIL))) (content (closed_interval ((CONS (a , b)) NIL)))))) /\ (!a. (!b. ((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL)))))))
T c/\ ! ! chas_measure * part cclosed_interval cCONS c, b0 b1 cNIL ccontent * part cclosed_interval cCONS c, b0 b1 cNIL ! ! chas_measure * part copen_interval c, b0 b1 ccontent * part cclosed_interval cCONS c, b0 b1 cNIL
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D IN_UNIV
A |- (!x. (x IN UNIV))
T cIN f0 part cUNIV
D IN_DIFF
A |- (!s. (!t. (!x. ((x IN (s DIFF t)) = ((x IN s) /\ (~ (x IN t)))))))
T c= cIN f0 * * part cDIFF f1 f2 c/\ cIN f0 f1 c~ cIN f0 f2
D LIFT_EQ_CMUL
A |- (!x. ((lift x) = ((% x) (vec (NUMERAL (BIT1 _0))))))
T c= clift f0 c% f0 cvec cNUMERAL cBIT1 c_0
D INTERVAL_OPEN_SUBSET_CLOSED
A |- (!a. (!b. ((open_interval (a , b)) SUBSET (closed_interval ((CONS (a , b)) NIL)))))
T cSUBSET * part copen_interval c, f0 f1 * part cclosed_interval cCONS c, f0 f1 cNIL
D HAS_INTEGRAL_CONST
A |- (!a. (!b. (!c. (((has_integral (\x. c)) ((% (content (closed_interval ((CONS (a , b)) NIL)))) c)) (closed_interval ((CONS (a , b)) NIL))))))
T chas_integral / f0 c% ccontent * part cclosed_interval cCONS c, f1 f2 cNIL f0 * part cclosed_interval cCONS c, f1 f2 cNIL
D HAS_INTEGRAL_SPIKE
A |- (!f. (!g. (!s. (!t. (((negligible s) /\ ((!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))) /\ (((has_integral f) y) t))) ==> (((has_integral g) y) t))))))
T c==> c/\ cnegligible f0 c/\ ! c==> cIN b0 * * part cDIFF f1 f0 c= * f2 b0 * f3 b0 chas_integral f3 f4 f1 chas_integral f2 f4 f1
D NEGLIGIBLE_FRONTIER_INTERVAL
A |- (!a. (!b. (negligible ((closed_interval ((CONS (a , b)) NIL)) DIFF (open_interval (a , b))))))
T cnegligible * * part cDIFF * part cclosed_interval cCONS c, f0 f1 cNIL * part copen_interval c, f0 f1
D has_measure
A |- (!m. (!s. (((has_measure s) m) = (((has_integral (\x. (vec (NUMERAL (BIT1 _0))))) (lift m)) s))))
T c= chas_measure f0 f1 chas_integral / cvec cNUMERAL cBIT1 c_0 clift f1 f0
D HAS_MEASURE
A |- (!s. (!m. (((has_measure s) m) = (((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV))))
T c= chas_measure f0 f1 chas_integral / cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift f1 part cUNIV
+ (!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) |- (((!x. ((~ ((open_interval (a , b)) x)) \/ ((closed_interval ((CONS (a , b)) NIL)) x))) ==> ((\x. ((~ ((open_interval (a , b)) x)) \/ ((closed_interval ((CONS (a , b)) NIL)) x))) _1765031)) = ((\x. ((~ ((open_interval (a , b)) x)) \/ ((closed_interval ((CONS (a , b)) NIL)) x))) _1765031))
T c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 c= c==> ! c\/ c~ copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 * / c\/ c~ copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 f2 * / c\/ c~ copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 f2
+ |- ((!b. ((P b) ==> (Q b))) ==> ((!b. (P b)) ==> (!b. (Q b))))
T c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0
+ |- ((\s. (!m. (((has_measure s) m) = (((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV)))) s)
T * / ! c= chas_measure b0 b1 chas_integral / cCOND cIN b2 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift b1 part cUNIV f0
+ ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) |- (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) /\ ((!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))
T c==> c/\ cnegligible f0 ! c==> cIN b0 * * part cDIFF f1 f0 c= * f2 b0 * f3 b0 c/\ c/\ cnegligible f0 ! c==> cIN b0 * * part cDIFF f1 f0 c= * f2 b0 * f3 b0 c==> ! ! ! ! c==> c/\ cnegligible b2 ! c==> cIN b4 * * part cDIFF b3 b2 c= * b1 b4 * b0 b4 c==> chas_integral b0 f4 b3 chas_integral b1 f4 b3 c==> chas_integral f3 f4 f1 chas_integral f2 f4 f1
+ |- ((!b. (!a. ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. (((closed_interval ((CONS (a , b)) NIL)) x) \/ ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0))))))))) = (!b. (!a. ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F))))
T c= ! ! c==> ! c==> copen_interval c, b1 b0 b2 cclosed_interval cCONS c, b1 b0 cNIL b2 ! c\/ cclosed_interval cCONS c, b1 b0 cNIL b2 c\/ c~ copen_interval c, b1 b0 b2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 ! ! c==> c~ c==> ! c==> copen_interval c, b1 b0 b2 cclosed_interval cCONS c, b1 b0 cNIL b2 ! c==> c~ c/\ cclosed_interval cCONS c, b1 b0 cNIL b2 c~ copen_interval c, b1 b0 b2 c= cCOND copen_interval c, b1 b0 b2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, b1 b0 cNIL b2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ (a = F) |- ((a = F) /\ (((a /\ (b /\ c)) ==> d) = ((a /\ b) ==> (c ==> d))))
T c==> c= f0 cF c/\ c= f0 cF c= c==> c/\ f0 c/\ f1 f2 f3 c==> c/\ f0 f1 c==> f2 f3
+ |- ((!a. (!b. ((has_measure (closed_interval ((CONS (a , b)) NIL))) (content (closed_interval ((CONS (a , b)) NIL)))))) /\ ((!a. (!b. ((has_measure (closed_interval ((CONS (a , b)) NIL))) (content (closed_interval ((CONS (a , b)) NIL)))))) ==> (!a. (!b. ((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL))))))))
T c/\ ! ! chas_measure * part cclosed_interval cCONS c, b0 b1 cNIL ccontent * part cclosed_interval cCONS c, b0 b1 cNIL c==> ! ! chas_measure * part cclosed_interval cCONS c, b0 b1 cNIL ccontent * part cclosed_interval cCONS c, b0 b1 cNIL ! ! chas_measure * part copen_interval c, b0 b1 ccontent * part cclosed_interval cCONS c, b0 b1 cNIL
+ (a = T) |- ((((T /\ (b /\ c)) ==> d) = ((T /\ b) ==> (c ==> d))) = (((a /\ (b /\ c)) ==> d) = ((a /\ b) ==> (c ==> d))))
T c==> c= f0 cT c= c= c==> c/\ cT c/\ f1 f2 f3 c==> c/\ cT f1 c==> f2 f3 c= c==> c/\ f0 c/\ f1 f2 f3 c==> c/\ f0 f1 c==> f2 f3
+ (!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) |- (((open_interval (a , b)) _1765031) ==> ((closed_interval ((CONS (a , b)) NIL)) _1765031))
T c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 c==> copen_interval c, f0 f1 f2 cclosed_interval cCONS c, f0 f1 cNIL f2
- |- ((((a /\ (a ==> b)) ==> (a /\ b)) ==> ((a /\ (a ==> b)) ==> (a /\ b))) = ((a /\ (a ==> b)) ==> (a /\ b)))
T c= c==> c==> c/\ f0 c==> f0 f1 c/\ f0 f1 c==> c/\ f0 c==> f0 f1 c/\ f0 f1 c==> c/\ f0 c==> f0 f1 c/\ f0 f1
- |- ((((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F) ==> ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F)) ==> (((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F) ==> ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F)))
T c==> c==> c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c==> c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF
+ (~ (((closed_interval ((CONS (a , b)) NIL)) x) \/ ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))))) |- (~ ((closed_interval ((CONS (a , b)) NIL)) x))
T c==> c~ c\/ cclosed_interval cCONS c, f0 f1 cNIL f2 c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c~ cclosed_interval cCONS c, f0 f1 cNIL f2
- (~ (x IN (open_interval (a , b)))) |- ((~ (x IN (open_interval (a , b)))) /\ ((vec (NUMERAL _0)) = (vec (NUMERAL _0))))
T c==> c~ cIN f0 * part copen_interval c, f1 f2 c/\ c~ cIN f0 * part copen_interval c, f1 f2 c= cvec cNUMERAL c_0 cvec cNUMERAL c_0
- |- ((~ (_1765033 = _1765035)) \/ ((~ (_1765032 = _1765034)) \/ (((open_interval _1765034) _1765035) \/ (~ ((open_interval _1765032) _1765033)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ copen_interval f3 f1 c~ copen_interval f2 f0
+ ((b = T) ==> (((b /\ c) ==> d) = (b ==> (c ==> d)))), ((b = F) ==> (((b /\ c) ==> d) = (b ==> (c ==> d)))) |- (((b /\ c) ==> d) = (b ==> (c ==> d)))
T c==> c==> c= f0 cT c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 c==> c==> c= f0 cF c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2
+ (!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))) |- (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t)))))
T c==> ! ! ! ! c==> c/\ cnegligible b2 ! c==> cIN b4 * * part cDIFF b3 b2 c= * b1 b4 * b0 b4 c==> chas_integral b0 f0 b3 chas_integral b1 f0 b3 ! ! c==> c/\ cnegligible b0 ! c==> cIN b2 * * part cDIFF b1 b0 c= * f1 b2 * f2 b2 c==> chas_integral f2 f0 b1 chas_integral f1 f0 b1
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ |- ((((open_interval (a , b)) x) = F) ==> (((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) = ((~ ((closed_interval ((CONS (a , b)) NIL)) x)) ==> ((vec (NUMERAL _0)) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))
T c==> c= copen_interval c, f0 f1 f2 cF c= c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL f2 c~ copen_interval c, f0 f1 f2 c= cCOND copen_interval c, f0 f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c==> c~ cclosed_interval cCONS c, f0 f1 cNIL f2 c= cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
- |- ((~ (_1765040 = _1765041)) \/ ((BIT1 _1765040) = (BIT1 _1765041)))
T c\/ c~ c= f0 f1 c= cBIT1 f0 cBIT1 f1
- |- ((_1765046 = _1765048) ==> ((~ (_1765047 = _1765049)) \/ ((_1765046 , _1765047) = (_1765048 , _1765049))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ (!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))) |- ((\t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t)))) t)
T c==> ! ! ! ! c==> c/\ cnegligible b2 ! c==> cIN b4 * * part cDIFF b3 b2 c= * b1 b4 * b0 b4 c==> chas_integral b0 f0 b3 chas_integral b1 f0 b3 * / c==> c/\ cnegligible f1 ! c==> cIN b1 * * part cDIFF b0 f1 c= * f2 b1 * f3 b1 c==> chas_integral f3 f0 b0 chas_integral f2 f0 b0 f4
- |- ((_1765051 = _1765053) ==> ((~ (_1765050 = _1765052)) \/ (((CONS _1765050) _1765051) = ((CONS _1765052) _1765053))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f2 f0 cCONS f3 f1
+ ((\s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) s) |- ((((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t)))) = ((!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))
T c==> * / c/\ cnegligible b0 ! c==> cIN b1 * * part cDIFF f0 b0 c= * f1 b1 * f2 b1 f3 c= c==> c/\ cnegligible f3 ! c==> cIN b0 * * part cDIFF f0 f3 c= * f1 b0 * f2 b0 c==> ! ! ! ! c==> c/\ cnegligible b2 ! c==> cIN b4 * * part cDIFF b3 b2 c= * b1 b4 * b0 b4 c==> chas_integral b0 f4 b3 chas_integral b1 f4 b3 c==> chas_integral f2 f4 f0 chas_integral f1 f4 f0 c==> ! ! ! ! c==> c/\ cnegligible b2 ! c==> cIN b4 * * part cDIFF b3 b2 c= * b1 b4 * b0 b4 c==> chas_integral b0 f4 b3 chas_integral b1 f4 b3 c==> chas_integral f2 f4 f0 chas_integral f1 f4 f0
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
- |- ((x IN (closed_interval ((CONS (a , b)) NIL))) ==> ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL (BIT1 _0)))))
T c==> cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0
- |- (((!t'. (!e'. (((x IN (open_interval (a , b))) = g') ==> ((g' ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((x IN (open_interval (a , b))) = g') ==> ((g' ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((x IN (open_interval (a , b))) = g') ==> ((g' ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cIN f0 * part copen_interval c, f1 f2 f3 c==> c==> f3 c= cvec cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f3 c= cvec cNUMERAL c_0 b1 c= cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f3 b0 b1 * / ! c==> c= cIN f0 * part copen_interval c, f1 f2 f3 c==> c==> f3 c= cvec cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f3 c= cvec cNUMERAL c_0 b1 c= cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f3 b0 b1 f4 * / ! c==> c= cIN f0 * part copen_interval c, f1 f2 f3 c==> c==> f3 c= cvec cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f3 c= cvec cNUMERAL c_0 b1 c= cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f3 b0 b1 f4
- |- (((!g'. (!t'. (!e'. (((x IN (open_interval (a , b))) = g') ==> ((g' ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((x IN (open_interval (a , b))) = g') ==> ((g' ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((x IN (open_interval (a , b))) = g') ==> ((g' ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= cIN f0 * part copen_interval c, f1 f2 b0 c==> c==> b0 c= cvec cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 * / ! ! c==> c= cIN f0 * part copen_interval c, f1 f2 b0 c==> c==> b0 c= cvec cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f3 * / ! ! c==> c= cIN f0 * part copen_interval c, f1 f2 b0 c==> c==> b0 c= cvec cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f3
+ |- ((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV))
T c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV
+ |- (!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t)))))))
T c==> c/\ cnegligible f0 ! c==> cIN b0 * * part cDIFF f1 f0 c= * f2 b0 * f3 b0 c==> chas_integral f3 f4 f1 chas_integral f2 f4 f1
+ |- ((t \/ T) = T)
T c= c\/ f0 cT cT
- |- (((x IN (open_interval (a , b))) = g') ==> ((g' ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND g') t') e')))))
T c==> c= cIN f0 * part copen_interval c, f1 f2 f3 c==> c==> f3 c= cvec cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f3 c= cvec cNUMERAL c_0 f5 c= cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f3 f4 f5
+ (~ (((closed_interval ((CONS (a , b)) NIL)) x) \/ ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))))) |- ((~ ((closed_interval ((CONS (a , b)) NIL)) x)) /\ (((open_interval (a , b)) x) /\ (~ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0))))))
T c==> c~ c\/ cclosed_interval cCONS c, f0 f1 cNIL f2 c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c/\ c~ cclosed_interval cCONS c, f0 f1 cNIL f2 c/\ copen_interval c, f0 f1 f2 c~ c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ (b = T) |- ((((T /\ c) ==> d) = (T ==> (c ==> d))) = (((b /\ c) ==> d) = (b ==> (c ==> d))))
T c==> c= f0 cT c= c= c==> c/\ cT f1 f2 c==> cT c==> f1 f2 c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2
+ |- ((((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) /\ (((open_interval (a , b)) x) \/ ((~ ((closed_interval ((CONS (a , b)) NIL)) x)) ==> ((vec (NUMERAL _0)) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))) = (((~ ((closed_interval ((CONS (a , b)) NIL)) x)) \/ T) /\ (((closed_interval ((CONS (a , b)) NIL)) x) \/ ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))))))
T c= c/\ c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c\/ copen_interval c, f0 f1 f2 c==> c~ cclosed_interval cCONS c, f0 f1 cNIL f2 c= cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c/\ c\/ c~ cclosed_interval cCONS c, f0 f1 cNIL f2 cT c\/ cclosed_interval cCONS c, f0 f1 cNIL f2 c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- (T = (((T /\ c) ==> d) = (T ==> (c ==> d))))
T c= cT c= c==> c/\ cT f0 f1 c==> cT c==> f0 f1
+ |- (((!b. (!a. ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F))) ==> ((\b. (!a. ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F))) b)) = ((\b. (!a. ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F))) b))
T c= c==> ! ! c==> c~ c==> ! c==> copen_interval c, b1 b0 b2 cclosed_interval cCONS c, b1 b0 cNIL b2 ! c==> c~ c/\ cclosed_interval cCONS c, b1 b0 cNIL b2 c~ copen_interval c, b1 b0 b2 c= cCOND copen_interval c, b1 b0 b2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, b1 b0 cNIL b2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF * / ! c==> c~ c==> ! c==> copen_interval c, b1 b0 b2 cclosed_interval cCONS c, b1 b0 cNIL b2 ! c==> c~ c/\ cclosed_interval cCONS c, b1 b0 cNIL b2 c~ copen_interval c, b1 b0 b2 c= cCOND copen_interval c, b1 b0 b2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, b1 b0 cNIL b2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF f0 * / ! c==> c~ c==> ! c==> copen_interval c, b1 b0 b2 cclosed_interval cCONS c, b1 b0 cNIL b2 ! c==> c~ c/\ cclosed_interval cCONS c, b1 b0 cNIL b2 c~ copen_interval c, b1 b0 b2 c= cCOND copen_interval c, b1 b0 b2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, b1 b0 cNIL b2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF f0
+ (((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) |- ((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) /\ (((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL)))) = (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV)))
T c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c/\ chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c= chas_measure * part copen_interval c, f0 f1 ccontent * part cclosed_interval cCONS c, f0 f1 cNIL chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV
+ |- (((!f. (!g. (!t. ((?s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t)))))) ==> ((\f. (!g. (!t. ((?s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t)))))) f)) = ((\f. (!g. (!t. ((?s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t)))))) f))
T c= c==> ! ! ! c==> c? / c/\ cnegligible b3 ! c==> cIN b4 * * part cDIFF b2 b3 c= * b1 b4 * b0 b4 c==> chas_integral b0 f0 b2 chas_integral b1 f0 b2 * / ! ! c==> c? / c/\ cnegligible b3 ! c==> cIN b4 * * part cDIFF b2 b3 c= * b1 b4 * b0 b4 c==> chas_integral b0 f0 b2 chas_integral b1 f0 b2 f1 * / ! ! c==> c? / c/\ cnegligible b3 ! c==> cIN b4 * * part cDIFF b2 b3 c= * b1 b4 * b0 b4 c==> chas_integral b0 f0 b2 chas_integral b1 f0 b2 f1
- (!x. ((P x) ==> (Q x))), ((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))) |- (((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))) /\ ((!x. (P x)) ==> (!x. (Q x))))
T c==> ! c==> * f0 b0 * f1 b0 c==> c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c/\ c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c==> ! * f0 b0 ! * f1 b0
+ (a = F) |- ((a = F) /\ ((a /\ (a ==> b)) ==> (a /\ b)))
T c==> c= f0 cF c/\ c= f0 cF c==> c/\ f0 c==> f0 f1 c/\ f0 f1
- (x IN (open_interval (a , b))) |- ((x IN (open_interval (a , b))) = T)
T c==> cIN f0 * part copen_interval c, f1 f2 c= cIN f0 * part copen_interval c, f1 f2 cT
+ (((closed_interval ((CONS (a , b)) NIL)) x) = T) |- ((((closed_interval ((CONS (a , b)) NIL)) x) = T) /\ ((((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) /\ (((open_interval (a , b)) x) \/ ((~ ((closed_interval ((CONS (a , b)) NIL)) x)) ==> ((vec (NUMERAL _0)) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))) = T))
T c==> c= cclosed_interval cCONS c, f0 f1 cNIL f2 cT c/\ c= cclosed_interval cCONS c, f0 f1 cNIL f2 cT c= c/\ c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c\/ copen_interval c, f0 f1 f2 c==> c~ cclosed_interval cCONS c, f0 f1 cNIL f2 c= cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cT
+ (~ (((closed_interval ((CONS (a , b)) NIL)) x) \/ ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))))) |- ((((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x)) = ((closed_interval ((CONS (a , b)) NIL)) x))
T c==> c~ c\/ cclosed_interval cCONS c, f0 f1 cNIL f2 c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= c==> copen_interval c, f0 f1 f2 cclosed_interval cCONS c, f0 f1 cNIL f2 cclosed_interval cCONS c, f0 f1 cNIL f2
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (~ (((closed_interval ((CONS (a , b)) NIL)) x) \/ ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))))), (~ ((open_interval (a , b)) x)) |- ((~ ((open_interval (a , b)) x)) /\ ((open_interval (a , b)) x))
T c==> c~ c\/ cclosed_interval cCONS c, f0 f1 cNIL f2 c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c==> c~ copen_interval c, f0 f1 f2 c/\ c~ copen_interval c, f0 f1 f2 copen_interval c, f0 f1 f2
- (~ (x IN (closed_interval ((CONS (a , b)) NIL)))) |- ((x IN (closed_interval ((CONS (a , b)) NIL))) = F)
T c==> c~ cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c= cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cF
+ |- ((\a. (!b. (negligible ((closed_interval ((CONS (a , b)) NIL)) DIFF (open_interval (a , b)))))) a)
T * / ! cnegligible * * part cDIFF * part cclosed_interval cCONS c, b0 b1 cNIL * part copen_interval c, b0 b1 f0
- (a /\ (a ==> b)), ((a /\ (a ==> b)) ==> (a /\ b)) |- ((a /\ (a ==> b)) /\ (a /\ b))
T c==> c/\ f0 c==> f0 f1 c==> c==> c/\ f0 c==> f0 f1 c/\ f0 f1 c/\ c/\ f0 c==> f0 f1 c/\ f0 f1
+ (!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))) |- (((!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))) ==> ((\s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))) s)) = ((\s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))) s))
T c==> ! ! ! ! c==> c/\ cnegligible b2 ! c==> cIN b4 * * part cDIFF b3 b2 c= * b1 b4 * b0 b4 c==> chas_integral b0 f0 b3 chas_integral b1 f0 b3 c= c==> ! ! c==> c/\ cnegligible b0 ! c==> cIN b2 * * part cDIFF b1 b0 c= * f1 b2 * f2 b2 c==> chas_integral f2 f0 b1 chas_integral f1 f0 b1 * / ! c==> c/\ cnegligible b0 ! c==> cIN b2 * * part cDIFF b1 b0 c= * f1 b2 * f2 b2 c==> chas_integral f2 f0 b1 chas_integral f1 f0 b1 f3 * / ! c==> c/\ cnegligible b0 ! c==> cIN b2 * * part cDIFF b1 b0 c= * f1 b2 * f2 b2 c==> chas_integral f2 f0 b1 chas_integral f1 f0 b1 f3
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
- (_1765046 = _1765048), (_1765047 = _1765049) |- ((_1765047 = _1765049) /\ ((_1765046 , _1765047) = (_1765048 , _1765049)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= c, f0 f2 c, f1 f3
+ |- (((b /\ c) ==> d) = (b ==> (c ==> d)))
T c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2
+ (!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))) |- ((\s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))) s)
T c==> ! ! ! ! c==> c/\ cnegligible b2 ! c==> cIN b4 * * part cDIFF b3 b2 c= * b1 b4 * b0 b4 c==> chas_integral b0 f0 b3 chas_integral b1 f0 b3 * / ! c==> c/\ cnegligible b0 ! c==> cIN b2 * * part cDIFF b1 b0 c= * f1 b2 * f2 b2 c==> chas_integral f2 f0 b1 chas_integral f1 f0 b1 f3
+ |- ((((open_interval (a , b)) SUBSET (closed_interval ((CONS (a , b)) NIL))) ==> (!x. ((x IN (UNIV DIFF ((closed_interval ((CONS (a , b)) NIL)) DIFF (open_interval (a , b))))) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))) = (!x. ((x IN (UNIV DIFF ((closed_interval ((CONS (a , b)) NIL)) DIFF (open_interval (a , b))))) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))
T c= c==> cSUBSET * part copen_interval c, f0 f1 * part cclosed_interval cCONS c, f0 f1 cNIL ! c==> cIN b0 * * part cDIFF part cUNIV * * part cDIFF * part cclosed_interval cCONS c, f0 f1 cNIL * part copen_interval c, f0 f1 c= cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 ! c==> cIN b0 * * part cDIFF part cUNIV * * part cDIFF * part cclosed_interval cCONS c, f0 f1 cNIL * part copen_interval c, f0 f1 c= cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- ((((\s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) s) ==> ((!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t)))) = T)
T c= c==> * / c/\ cnegligible b0 ! c==> cIN b1 * * part cDIFF f0 b0 c= * f1 b1 * f2 b1 f3 c==> ! ! ! ! c==> c/\ cnegligible b2 ! c==> cIN b4 * * part cDIFF b3 b2 c= * b1 b4 * b0 b4 c==> chas_integral b0 f4 b3 chas_integral b1 f4 b3 c==> chas_integral f2 f4 f0 chas_integral f1 f4 f0 cT
+ (!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))) |- (((!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t)))) ==> ((\t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t)))) t)) = ((\t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t)))) t))
T c==> ! ! ! ! c==> c/\ cnegligible b2 ! c==> cIN b4 * * part cDIFF b3 b2 c= * b1 b4 * b0 b4 c==> chas_integral b0 f0 b3 chas_integral b1 f0 b3 c= c==> ! c==> c/\ cnegligible f1 ! c==> cIN b1 * * part cDIFF b0 f1 c= * f2 b1 * f3 b1 c==> chas_integral f3 f0 b0 chas_integral f2 f0 b0 * / c==> c/\ cnegligible f1 ! c==> cIN b1 * * part cDIFF b0 f1 c= * f2 b1 * f3 b1 c==> chas_integral f3 f0 b0 chas_integral f2 f0 b0 f4 * / c==> c/\ cnegligible f1 ! c==> cIN b1 * * part cDIFF b0 f1 c= * f2 b1 * f3 b1 c==> chas_integral f3 f0 b0 chas_integral f2 f0 b0 f4
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))) |- (!t. ((?s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))
T c==> ! ! ! ! c==> c/\ cnegligible b2 ! c==> cIN b4 * * part cDIFF b3 b2 c= * b1 b4 * b0 b4 c==> chas_integral b0 f0 b3 chas_integral b1 f0 b3 ! c==> c? / c/\ cnegligible b1 ! c==> cIN b2 * * part cDIFF b0 b1 c= * f1 b2 * f2 b2 c==> chas_integral f2 f0 b0 chas_integral f1 f0 b0
+ (!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) |- ((\x. ((~ ((open_interval (a , b)) x)) \/ ((closed_interval ((CONS (a , b)) NIL)) x))) _1765031)
T c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 * / c\/ c~ copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 f2
- |- (((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))) ==> ((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))))
T c==> c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0
+ |- ((!a. (!b. (((has_integral (\x. (vec (NUMERAL (BIT1 _0))))) ((% (content (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0))))) (closed_interval ((CONS (a , b)) NIL))))) = (!a. (!b. (((has_integral (\x. (vec (NUMERAL (BIT1 _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) (closed_interval ((CONS (a , b)) NIL))))))
T c= ! ! chas_integral / cvec cNUMERAL cBIT1 c_0 c% ccontent * part cclosed_interval cCONS c, b0 b1 cNIL cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, b0 b1 cNIL ! ! chas_integral / cvec cNUMERAL cBIT1 c_0 clift ccontent * part cclosed_interval cCONS c, b0 b1 cNIL * part cclosed_interval cCONS c, b0 b1 cNIL
- (~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) |- ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) /\ F)
T c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c/\ c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ (a = T) |- ((a = T) /\ ((a /\ (a ==> b)) ==> (a /\ b)))
T c==> c= f0 cT c/\ c= f0 cT c==> c/\ f0 c==> f0 f1 c/\ f0 f1
- (((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) |- ((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) /\ ((((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) = (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV)))
T c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c/\ chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c= chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV
+ (?s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) |- ((!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t)))
T c==> c? / c/\ cnegligible b0 ! c==> cIN b1 * * part cDIFF f0 b0 c= * f1 b1 * f2 b1 c==> ! ! ! ! c==> c/\ cnegligible b2 ! c==> cIN b4 * * part cDIFF b3 b2 c= * b1 b4 * b0 b4 c==> chas_integral b0 f3 b3 chas_integral b1 f3 b3 c==> chas_integral f2 f3 f0 chas_integral f1 f3 f0
+ (~ (((closed_interval ((CONS (a , b)) NIL)) x) \/ ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))))) |- ((open_interval (a , b)) x)
T c==> c~ c\/ cclosed_interval cCONS c, f0 f1 cNIL f2 c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 copen_interval c, f0 f1 f2
+ |- (((!g. (!t. ((?s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))) ==> ((\g. (!t. ((?s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))) g)) = ((\g. (!t. ((?s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))) g))
T c= c==> ! ! c==> c? / c/\ cnegligible b2 ! c==> cIN b3 * * part cDIFF b1 b2 c= * b0 b3 * f0 b3 c==> chas_integral f0 f1 b1 chas_integral b0 f1 b1 * / ! c==> c? / c/\ cnegligible b2 ! c==> cIN b3 * * part cDIFF b1 b2 c= * b0 b3 * f0 b3 c==> chas_integral f0 f1 b1 chas_integral b0 f1 b1 f2 * / ! c==> c? / c/\ cnegligible b2 ! c==> cIN b3 * * part cDIFF b1 b2 c= * b0 b3 * f0 b3 c==> chas_integral f0 f1 b1 chas_integral b0 f1 b1 f2
+ |- ((((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> (((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL)))) = (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV))) ==> ((((has_measure (closed_interval ((CONS (a , b)) NIL))) (content (closed_interval ((CONS (a , b)) NIL)))) ==> ((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL))))) = ((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV)))) = ((((has_measure (closed_interval ((CONS (a , b)) NIL))) (content (closed_interval ((CONS (a , b)) NIL)))) ==> ((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL))))) = ((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV))))
T c= c==> c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c= chas_measure * part copen_interval c, f0 f1 ccontent * part cclosed_interval cCONS c, f0 f1 cNIL chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c= c==> chas_measure * part cclosed_interval cCONS c, f0 f1 cNIL ccontent * part cclosed_interval cCONS c, f0 f1 cNIL chas_measure * part copen_interval c, f0 f1 ccontent * part cclosed_interval cCONS c, f0 f1 cNIL c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c= c==> chas_measure * part cclosed_interval cCONS c, f0 f1 cNIL ccontent * part cclosed_interval cCONS c, f0 f1 cNIL chas_measure * part copen_interval c, f0 f1 ccontent * part cclosed_interval cCONS c, f0 f1 cNIL c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV
- |- ((~ (_1765037 = _1765039)) \/ ((~ (_1765036 = _1765038)) \/ (((closed_interval _1765038) _1765039) \/ (~ ((closed_interval _1765036) _1765037)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cclosed_interval f3 f1 c~ cclosed_interval f2 f0
+ |- ((((has_integral (\x. c)) ((% (content (closed_interval ((CONS (a , b)) NIL)))) c)) (closed_interval ((CONS (a , b)) NIL))) = T)
T c= chas_integral / f0 c% ccontent * part cclosed_interval cCONS c, f1 f2 cNIL f0 * part cclosed_interval cCONS c, f1 f2 cNIL cT
- (_1765037 = _1765039) |- ((_1765036 = _1765038) ==> (((closed_interval _1765038) _1765039) \/ (~ ((closed_interval _1765036) _1765037))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cclosed_interval f3 f1 c~ cclosed_interval f2 f0
- (~ (x IN (open_interval (a , b)))) |- ((x IN (open_interval (a , b))) = F)
T c==> c~ cIN f0 * part copen_interval c, f1 f2 c= cIN f0 * part copen_interval c, f1 f2 cF
+ (((closed_interval ((CONS (a , b)) NIL)) x) = F) |- ((((closed_interval ((CONS (a , b)) NIL)) x) = F) /\ ((((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) /\ (((open_interval (a , b)) x) \/ ((~ ((closed_interval ((CONS (a , b)) NIL)) x)) ==> ((vec (NUMERAL _0)) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))) = ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0))))))
T c==> c= cclosed_interval cCONS c, f0 f1 cNIL f2 cF c/\ c= cclosed_interval cCONS c, f0 f1 cNIL f2 cF c= c/\ c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c\/ copen_interval c, f0 f1 f2 c==> c~ cclosed_interval cCONS c, f0 f1 cNIL f2 c= cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- ((!b. (((has_measure (closed_interval ((CONS (a , b)) NIL))) (content (closed_interval ((CONS (a , b)) NIL)))) ==> ((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL)))))) ==> ((!b. ((has_measure (closed_interval ((CONS (a , b)) NIL))) (content (closed_interval ((CONS (a , b)) NIL))))) ==> (!b. ((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL)))))))
T c==> ! c==> chas_measure * part cclosed_interval cCONS c, f0 b0 cNIL ccontent * part cclosed_interval cCONS c, f0 b0 cNIL chas_measure * part copen_interval c, f0 b0 ccontent * part cclosed_interval cCONS c, f0 b0 cNIL c==> ! chas_measure * part cclosed_interval cCONS c, f0 b0 cNIL ccontent * part cclosed_interval cCONS c, f0 b0 cNIL ! chas_measure * part copen_interval c, f0 b0 ccontent * part cclosed_interval cCONS c, f0 b0 cNIL
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- |- ((\e'. (((x IN (open_interval (a , b))) = g') ==> ((g' ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e')
T * / c==> c= cIN f0 * part copen_interval c, f1 f2 f3 c==> c==> f3 c= cvec cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f3 c= cvec cNUMERAL c_0 b0 c= cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f3 f4 b0 f5
- (x IN (open_interval (a , b))) |- ((x IN (open_interval (a , b))) /\ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL (BIT1 _0)))))
T c==> cIN f0 * part copen_interval c, f1 f2 c/\ cIN f0 * part copen_interval c, f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0
- (_1765033 = _1765035) |- ((_1765032 = _1765034) ==> (((open_interval _1765034) _1765035) \/ (~ ((open_interval _1765032) _1765033))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ copen_interval f3 f1 c~ copen_interval f2 f0
- |- ((((~ (x IN (open_interval (a , b)))) ==> ((vec (NUMERAL _0)) = (vec (NUMERAL _0)))) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) = ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))
T c= c==> c==> c~ cIN f0 * part copen_interval c, f1 f2 c= cvec cNUMERAL c_0 cvec cNUMERAL c_0 c= cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- (T = (!a. (!b. (((has_integral (\x. (vec (NUMERAL (BIT1 _0))))) ((% (content (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0))))) (closed_interval ((CONS (a , b)) NIL))))))
T c= cT ! ! chas_integral / cvec cNUMERAL cBIT1 c_0 c% ccontent * part cclosed_interval cCONS c, b0 b1 cNIL cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, b0 b1 cNIL
+ |- ((a = F) ==> (((a /\ (b /\ c)) ==> d) = ((a /\ b) ==> (c ==> d))))
T c==> c= f0 cF c= c==> c/\ f0 c/\ f1 f2 f3 c==> c/\ f0 f1 c==> f2 f3
+ |- (((((closed_interval ((CONS (a , b)) NIL)) x) = F) ==> ((((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) /\ (((open_interval (a , b)) x) \/ ((~ ((closed_interval ((CONS (a , b)) NIL)) x)) ==> ((vec (NUMERAL _0)) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))) = ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))))) /\ ((((closed_interval ((CONS (a , b)) NIL)) x) = T) ==> ((((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) /\ (((open_interval (a , b)) x) \/ ((~ ((closed_interval ((CONS (a , b)) NIL)) x)) ==> ((vec (NUMERAL _0)) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))) = T)))
T c/\ c==> c= cclosed_interval cCONS c, f0 f1 cNIL f2 cF c= c/\ c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c\/ copen_interval c, f0 f1 f2 c==> c~ cclosed_interval cCONS c, f0 f1 cNIL f2 c= cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c==> c= cclosed_interval cCONS c, f0 f1 cNIL f2 cT c= c/\ c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c\/ copen_interval c, f0 f1 f2 c==> c~ cclosed_interval cCONS c, f0 f1 cNIL f2 c= cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cT
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ |- ((\b. (negligible ((closed_interval ((CONS (a , b)) NIL)) DIFF (open_interval (a , b))))) b)
T * / cnegligible * * part cDIFF * part cclosed_interval cCONS c, f0 b0 cNIL * part copen_interval c, f0 b0 f1
+ ((\s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) s) |- ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))
T c==> * / c/\ cnegligible b0 ! c==> cIN b1 * * part cDIFF f0 b0 c= * f1 b1 * f2 b1 f3 c/\ cnegligible f3 ! c==> cIN b0 * * part cDIFF f0 f3 c= * f1 b0 * f2 b0
+ ((b = F) ==> (((b /\ c) ==> d) = (b ==> (c ==> d)))) |- (((b /\ c) ==> d) = (b ==> (c ==> d)))
T c==> c==> c= f0 cF c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2
+ |- (((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))) = ((!x. ((x IN (open_interval (a , b))) ==> (x IN (closed_interval ((CONS (a , b)) NIL))))) ==> (!x. ((x IN (UNIV DIFF ((closed_interval ((CONS (a , b)) NIL)) DIFF (open_interval (a , b))))) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))))
T c= c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c==> ! c==> cIN b0 * part copen_interval c, f0 f1 cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL ! c==> cIN b0 * * part cDIFF part cUNIV * * part cDIFF * part cclosed_interval cCONS c, f0 f1 cNIL * part copen_interval c, f0 f1 c= cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ (!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) |- (!x. ((~ ((open_interval (a , b)) x)) \/ ((closed_interval ((CONS (a , b)) NIL)) x)))
T c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c\/ c~ copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0
- |- ((~ (_1765046 = _1765048)) \/ ((~ (_1765047 = _1765049)) \/ ((_1765046 , _1765047) = (_1765048 , _1765049))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- (_1765051 = _1765053) |- ((_1765050 = _1765052) ==> (((CONS _1765050) _1765051) = ((CONS _1765052) _1765053)))
T c==> c= f0 f1 c==> c= f2 f3 c= cCONS f2 f0 cCONS f3 f1
+ |- (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))
T c==> c/\ cnegligible f0 ! c==> cIN b0 * * part cDIFF f1 f0 c= * f2 b0 * f3 b0 c==> ! ! ! ! c==> c/\ cnegligible b2 ! c==> cIN b4 * * part cDIFF b3 b2 c= * b1 b4 * b0 b4 c==> chas_integral b0 f4 b3 chas_integral b1 f4 b3 c==> chas_integral f3 f4 f1 chas_integral f2 f4 f1
- (!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))), (~ (((closed_interval ((CONS (a , b)) NIL)) x) \/ ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))))) |- ((~ ((closed_interval ((CONS (a , b)) NIL)) x)) ==> ((closed_interval ((CONS (a , b)) NIL)) x))
T c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 c==> c~ c\/ cclosed_interval cCONS c, f0 f1 cNIL f2 c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c==> c~ cclosed_interval cCONS c, f0 f1 cNIL f2 cclosed_interval cCONS c, f0 f1 cNIL f2
+ |- (!s. (((\s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) s) ==> ((!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t)))))
T c==> * / c/\ cnegligible b0 ! c==> cIN b1 * * part cDIFF f0 b0 c= * f1 b1 * f2 b1 f3 c==> ! ! ! ! c==> c/\ cnegligible b2 ! c==> cIN b4 * * part cDIFF b3 b2 c= * b1 b4 * b0 b4 c==> chas_integral b0 f4 b3 chas_integral b1 f4 b3 c==> chas_integral f2 f4 f0 chas_integral f1 f4 f0
+ |- ((\c. (((has_integral (\x. c)) ((% (content (closed_interval ((CONS (a , b)) NIL)))) c)) (closed_interval ((CONS (a , b)) NIL)))) c)
T * / chas_integral / b0 c% ccontent * part cclosed_interval cCONS c, f0 f1 cNIL b0 * part cclosed_interval cCONS c, f0 f1 cNIL f2
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- |- (((!q'. (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) = p') ==> ((p' ==> ((((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) = q')) ==> (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV)) = (p' ==> q'))))) ==> ((\q'. (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) = p') ==> ((p' ==> ((((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) = q')) ==> (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV)) = (p' ==> q'))))) q')) = ((\q'. (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) = p') ==> ((p' ==> ((((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) = q')) ==> (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV)) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= chas_integral / cCOND cIN b1 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV f2 c==> c==> f2 c= chas_integral / cCOND cIN b1 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV b0 c= c==> chas_integral / cCOND cIN b1 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV chas_integral / cCOND cIN b1 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c==> f2 b0 * / c==> c= chas_integral / cCOND cIN b1 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV f2 c==> c==> f2 c= chas_integral / cCOND cIN b1 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV b0 c= c==> chas_integral / cCOND cIN b1 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV chas_integral / cCOND cIN b1 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c==> f2 b0 f3 * / c==> c= chas_integral / cCOND cIN b1 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV f2 c==> c==> f2 c= chas_integral / cCOND cIN b1 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV b0 c= c==> chas_integral / cCOND cIN b1 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV chas_integral / cCOND cIN b1 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c==> f2 b0 f3
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- ((a /\ (a ==> b)) ==> (a /\ b)) |- (((a /\ (a ==> b)) ==> (a /\ b)) /\ ((a /\ (a ==> b)) ==> (a /\ b)))
T c==> c==> c/\ f0 c==> f0 f1 c/\ f0 f1 c/\ c==> c/\ f0 c==> f0 f1 c/\ f0 f1 c==> c/\ f0 c==> f0 f1 c/\ f0 f1
- |- ((((~ (x IN (closed_interval ((CONS (a , b)) NIL)))) ==> ((vec (NUMERAL _0)) = (vec (NUMERAL _0)))) ==> ((((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) = ((((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))
T c= c==> c==> c~ cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c= cvec cNUMERAL c_0 cvec cNUMERAL c_0 c= cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ (!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))) |- ((!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))) /\ (!f. (!g. (!t. ((?s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t)))))))
T c==> ! ! ! ! c==> c/\ cnegligible b2 ! c==> cIN b4 * * part cDIFF b3 b2 c= * b1 b4 * b0 b4 c==> chas_integral b0 f0 b3 chas_integral b1 f0 b3 c/\ ! ! ! ! c==> c/\ cnegligible b2 ! c==> cIN b4 * * part cDIFF b3 b2 c= * b1 b4 * b0 b4 c==> chas_integral b0 f0 b3 chas_integral b1 f0 b3 ! ! ! c==> c? / c/\ cnegligible b3 ! c==> cIN b4 * * part cDIFF b2 b3 c= * b1 b4 * b0 b4 c==> chas_integral b0 f0 b2 chas_integral b1 f0 b2
+ |- (((F /\ c) ==> d) = (F ==> (c ==> d)))
T c= c==> c/\ cF f0 f1 c==> cF c==> f0 f1
+ |- (((((open_interval (a , b)) x) = T) ==> (((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) = ((vec (NUMERAL (BIT1 _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))) = (((((open_interval (a , b)) x) = F) ==> (((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) = ((~ ((closed_interval ((CONS (a , b)) NIL)) x)) ==> ((vec (NUMERAL _0)) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))) /\ ((((open_interval (a , b)) x) = T) ==> (((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) = ((vec (NUMERAL (BIT1 _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))))
T c= c==> c= copen_interval c, f0 f1 f2 cT c= c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL f2 c~ copen_interval c, f0 f1 f2 c= cCOND copen_interval c, f0 f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cvec cNUMERAL cBIT1 c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c= copen_interval c, f0 f1 f2 cF c= c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL f2 c~ copen_interval c, f0 f1 f2 c= cCOND copen_interval c, f0 f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c==> c~ cclosed_interval cCONS c, f0 f1 cNIL f2 c= cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c==> c= copen_interval c, f0 f1 f2 cT c= c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL f2 c~ copen_interval c, f0 f1 f2 c= cCOND copen_interval c, f0 f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cvec cNUMERAL cBIT1 c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- (((!a. (!b. (negligible ((closed_interval ((CONS (a , b)) NIL)) DIFF (open_interval (a , b)))))) ==> ((\a. (!b. (negligible ((closed_interval ((CONS (a , b)) NIL)) DIFF (open_interval (a , b)))))) a)) = ((\a. (!b. (negligible ((closed_interval ((CONS (a , b)) NIL)) DIFF (open_interval (a , b)))))) a))
T c= c==> ! ! cnegligible * * part cDIFF * part cclosed_interval cCONS c, b0 b1 cNIL * part copen_interval c, b0 b1 * / ! cnegligible * * part cDIFF * part cclosed_interval cCONS c, b0 b1 cNIL * part copen_interval c, b0 b1 f0 * / ! cnegligible * * part cDIFF * part cclosed_interval cCONS c, b0 b1 cNIL * part copen_interval c, b0 b1 f0
- |- ((\p'. (!q'. (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) = p') ==> ((p' ==> ((((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) = q')) ==> (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV)) = (p' ==> q')))))) p')
T * / ! c==> c= chas_integral / cCOND cIN b2 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV b0 c==> c==> b0 c= chas_integral / cCOND cIN b2 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV b1 c= c==> chas_integral / cCOND cIN b2 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV chas_integral / cCOND cIN b2 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c==> b0 b1 f2
- |- (((x IN (closed_interval ((CONS (a , b)) NIL))) = g') ==> ((g' ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND g') t') e')))))
T c==> c= cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL f3 c==> c==> f3 c= cvec cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f3 c= cvec cNUMERAL c_0 f5 c= cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f3 f4 f5
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
- (((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F) ==> ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F)) |- ((((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F) ==> ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F)) /\ (((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F) ==> ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F)))
T c==> c==> c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c/\ c==> c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c==> c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF
+ |- (((!b. ((has_measure (closed_interval ((CONS (a , b)) NIL))) (content (closed_interval ((CONS (a , b)) NIL))))) ==> (!b. ((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL)))))) = T)
T c= c==> ! chas_measure * part cclosed_interval cCONS c, f0 b0 cNIL ccontent * part cclosed_interval cCONS c, f0 b0 cNIL ! chas_measure * part copen_interval c, f0 b0 ccontent * part cclosed_interval cCONS c, f0 b0 cNIL cT
+ |- (((!b. ((open_interval (a , b)) SUBSET (closed_interval ((CONS (a , b)) NIL)))) ==> ((\b. ((open_interval (a , b)) SUBSET (closed_interval ((CONS (a , b)) NIL)))) b)) = ((\b. ((open_interval (a , b)) SUBSET (closed_interval ((CONS (a , b)) NIL)))) b))
T c= c==> ! cSUBSET * part copen_interval c, f0 b0 * part cclosed_interval cCONS c, f0 b0 cNIL * / cSUBSET * part copen_interval c, f0 b0 * part cclosed_interval cCONS c, f0 b0 cNIL f1 * / cSUBSET * part copen_interval c, f0 b0 * part cclosed_interval cCONS c, f0 b0 cNIL f1
+ |- (((!p'. (!q'. ((((has_measure (closed_interval ((CONS (a , b)) NIL))) (content (closed_interval ((CONS (a , b)) NIL)))) = p') ==> ((p' ==> (((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL)))) = q')) ==> ((((has_measure (closed_interval ((CONS (a , b)) NIL))) (content (closed_interval ((CONS (a , b)) NIL)))) ==> ((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((has_measure (closed_interval ((CONS (a , b)) NIL))) (content (closed_interval ((CONS (a , b)) NIL)))) = p') ==> ((p' ==> (((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL)))) = q')) ==> ((((has_measure (closed_interval ((CONS (a , b)) NIL))) (content (closed_interval ((CONS (a , b)) NIL)))) ==> ((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((has_measure (closed_interval ((CONS (a , b)) NIL))) (content (closed_interval ((CONS (a , b)) NIL)))) = p') ==> ((p' ==> (((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL)))) = q')) ==> ((((has_measure (closed_interval ((CONS (a , b)) NIL))) (content (closed_interval ((CONS (a , b)) NIL)))) ==> ((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= chas_measure * part cclosed_interval cCONS c, f0 f1 cNIL ccontent * part cclosed_interval cCONS c, f0 f1 cNIL b0 c==> c==> b0 c= chas_measure * part copen_interval c, f0 f1 ccontent * part cclosed_interval cCONS c, f0 f1 cNIL b1 c= c==> chas_measure * part cclosed_interval cCONS c, f0 f1 cNIL ccontent * part cclosed_interval cCONS c, f0 f1 cNIL chas_measure * part copen_interval c, f0 f1 ccontent * part cclosed_interval cCONS c, f0 f1 cNIL c==> b0 b1 * / ! c==> c= chas_measure * part cclosed_interval cCONS c, f0 f1 cNIL ccontent * part cclosed_interval cCONS c, f0 f1 cNIL b0 c==> c==> b0 c= chas_measure * part copen_interval c, f0 f1 ccontent * part cclosed_interval cCONS c, f0 f1 cNIL b1 c= c==> chas_measure * part cclosed_interval cCONS c, f0 f1 cNIL ccontent * part cclosed_interval cCONS c, f0 f1 cNIL chas_measure * part copen_interval c, f0 f1 ccontent * part cclosed_interval cCONS c, f0 f1 cNIL c==> b0 b1 f2 * / ! c==> c= chas_measure * part cclosed_interval cCONS c, f0 f1 cNIL ccontent * part cclosed_interval cCONS c, f0 f1 cNIL b0 c==> c==> b0 c= chas_measure * part copen_interval c, f0 f1 ccontent * part cclosed_interval cCONS c, f0 f1 cNIL b1 c= c==> chas_measure * part cclosed_interval cCONS c, f0 f1 cNIL ccontent * part cclosed_interval cCONS c, f0 f1 cNIL chas_measure * part copen_interval c, f0 f1 ccontent * part cclosed_interval cCONS c, f0 f1 cNIL c==> b0 b1 f2
+ |- ((\s. (((has_measure s) m) = (((has_integral (\x. (vec (NUMERAL (BIT1 _0))))) (lift m)) s))) s)
T * / c= chas_measure b0 f0 chas_integral / cvec cNUMERAL cBIT1 c_0 clift f0 b0 f1
- |- ((\g'. (!t'. (!e'. (((x IN (open_interval (a , b))) = g') ==> ((g' ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= cIN f0 * part copen_interval c, f1 f2 b0 c==> c==> b0 c= cvec cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f3
+ |- (((!b. (negligible ((closed_interval ((CONS (a , b)) NIL)) DIFF (open_interval (a , b))))) ==> ((\b. (negligible ((closed_interval ((CONS (a , b)) NIL)) DIFF (open_interval (a , b))))) b)) = ((\b. (negligible ((closed_interval ((CONS (a , b)) NIL)) DIFF (open_interval (a , b))))) b))
T c= c==> ! cnegligible * * part cDIFF * part cclosed_interval cCONS c, f0 b0 cNIL * part copen_interval c, f0 b0 * / cnegligible * * part cDIFF * part cclosed_interval cCONS c, f0 b0 cNIL * part copen_interval c, f0 b0 f1 * / cnegligible * * part cDIFF * part cclosed_interval cCONS c, f0 b0 cNIL * part copen_interval c, f0 b0 f1
+ (!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))), ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) |- ((((has_integral f) y) t) ==> (((has_integral g) y) t))
T c==> ! ! ! ! c==> c/\ cnegligible b2 ! c==> cIN b4 * * part cDIFF b3 b2 c= * b1 b4 * b0 b4 c==> chas_integral b0 f0 b3 chas_integral b1 f0 b3 c==> c/\ cnegligible f1 ! c==> cIN b0 * * part cDIFF f2 f1 c= * f3 b0 * f4 b0 c==> chas_integral f4 f0 f2 chas_integral f3 f0 f2
- |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!x. ((P x) \/ Q)) = ((!x. (P x)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ |- ((((has_measure (closed_interval ((CONS (a , b)) NIL))) (content (closed_interval ((CONS (a , b)) NIL)))) = p') ==> ((p' ==> (((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL)))) = q')) ==> ((((has_measure (closed_interval ((CONS (a , b)) NIL))) (content (closed_interval ((CONS (a , b)) NIL)))) ==> ((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL))))) = (p' ==> q'))))
T c==> c= chas_measure * part cclosed_interval cCONS c, f0 f1 cNIL ccontent * part cclosed_interval cCONS c, f0 f1 cNIL f2 c==> c==> f2 c= chas_measure * part copen_interval c, f0 f1 ccontent * part cclosed_interval cCONS c, f0 f1 cNIL f3 c= c==> chas_measure * part cclosed_interval cCONS c, f0 f1 cNIL ccontent * part cclosed_interval cCONS c, f0 f1 cNIL chas_measure * part copen_interval c, f0 f1 ccontent * part cclosed_interval cCONS c, f0 f1 cNIL c==> f2 f3
- |- ((_1765033 = _1765035) ==> ((~ (_1765032 = _1765034)) \/ (((open_interval _1765034) _1765035) \/ (~ ((open_interval _1765032) _1765033)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ copen_interval f3 f1 c~ copen_interval f2 f0
+ |- (((!x. ((x IN (open_interval (a , b))) ==> (x IN (closed_interval ((CONS (a , b)) NIL))))) ==> (!x. ((x IN (UNIV DIFF ((closed_interval ((CONS (a , b)) NIL)) DIFF (open_interval (a , b))))) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))) = (((open_interval (a , b)) SUBSET (closed_interval ((CONS (a , b)) NIL))) ==> (!x. ((x IN (UNIV DIFF ((closed_interval ((CONS (a , b)) NIL)) DIFF (open_interval (a , b))))) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))))
T c= c==> ! c==> cIN b0 * part copen_interval c, f0 f1 cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL ! c==> cIN b0 * * part cDIFF part cUNIV * * part cDIFF * part cclosed_interval cCONS c, f0 f1 cNIL * part copen_interval c, f0 f1 c= cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c==> cSUBSET * part copen_interval c, f0 f1 * part cclosed_interval cCONS c, f0 f1 cNIL ! c==> cIN b0 * * part cDIFF part cUNIV * * part cDIFF * part cclosed_interval cCONS c, f0 f1 cNIL * part copen_interval c, f0 f1 c= cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
- ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F), (((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F) ==> ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F)) |- (((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F) /\ ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F))
T c==> c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c==> c==> c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c/\ c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF
+ |- ((\g. (!t. ((?s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))) g)
T * / ! c==> c? / c/\ cnegligible b2 ! c==> cIN b3 * * part cDIFF b1 b2 c= * b0 b3 * f0 b3 c==> chas_integral f0 f1 b1 chas_integral b0 f1 b1 f2
+ (!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))) |- (!g. (!t. ((?s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t)))))
T c==> ! ! ! ! c==> c/\ cnegligible b2 ! c==> cIN b4 * * part cDIFF b3 b2 c= * b1 b4 * b0 b4 c==> chas_integral b0 f0 b3 chas_integral b1 f0 b3 ! ! c==> c? / c/\ cnegligible b2 ! c==> cIN b3 * * part cDIFF b1 b2 c= * b0 b3 * f1 b3 c==> chas_integral f1 f0 b1 chas_integral b0 f0 b1
- (~ (((closed_interval ((CONS (a , b)) NIL)) x) \/ ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))))) |- ((~ ((open_interval (a , b)) x)) ==> ((open_interval (a , b)) x))
T c==> c~ c\/ cclosed_interval cCONS c, f0 f1 cNIL f2 c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c==> c~ copen_interval c, f0 f1 f2 copen_interval c, f0 f1 f2
+ |- ((\f. (!g. (!t. ((?s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t)))))) f)
T * / ! ! c==> c? / c/\ cnegligible b3 ! c==> cIN b4 * * part cDIFF b2 b3 c= * b1 b4 * b0 b4 c==> chas_integral b0 f0 b2 chas_integral b1 f0 b2 f1
+ (~ (((closed_interval ((CONS (a , b)) NIL)) x) \/ ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))))) |- (((closed_interval ((CONS (a , b)) NIL)) x) ==> F)
T c==> c~ c\/ cclosed_interval cCONS c, f0 f1 cNIL f2 c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c==> cclosed_interval cCONS c, f0 f1 cNIL f2 cF
- (_1765033 = _1765035) |- ((_1765033 = _1765035) /\ ((~ (_1765032 = _1765034)) \/ (((open_interval _1765034) _1765035) \/ (~ ((open_interval _1765032) _1765033)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ copen_interval f3 f1 c~ copen_interval f2 f0
- |- ((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> ((((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) = (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV)))
T c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c= chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV
+ |- ((((b /\ c) ==> d) = (b ==> (c ==> d))) = (((T /\ (b /\ c)) ==> d) = ((T /\ b) ==> (c ==> d))))
T c= c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 c= c==> c/\ cT c/\ f0 f1 f2 c==> c/\ cT f0 c==> f1 f2
+ |- (T = ((F /\ (F ==> b)) ==> (F /\ b)))
T c= cT c==> c/\ cF c==> cF f0 c/\ cF f0
+ |- ((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> (((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL)))) = (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV)))
T c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c= chas_measure * part copen_interval c, f0 f1 ccontent * part cclosed_interval cCONS c, f0 f1 cNIL chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- ((\m. (((has_measure s) m) = (((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV))) m)
T * / c= chas_measure f0 b0 chas_integral / cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift b0 part cUNIV f1
+ |- ((a = T) ==> (((a /\ (b /\ c)) ==> d) = ((a /\ b) ==> (c ==> d))))
T c==> c= f0 cT c= c==> c/\ f0 c/\ f1 f2 f3 c==> c/\ f0 f1 c==> f2 f3
+ |- (T = ((T /\ (T ==> b)) ==> (T /\ b)))
T c= cT c==> c/\ cT c==> cT f0 c/\ cT f0
- (_1765032 = _1765034), (_1765033 = _1765035) |- (((((open_interval _1765032) _1765033) = ((open_interval _1765034) _1765035)) ==> (((open_interval _1765034) _1765035) \/ (~ ((open_interval _1765032) _1765033)))) = (((open_interval _1765034) _1765035) \/ (~ ((open_interval _1765032) _1765033))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= copen_interval f0 f2 copen_interval f1 f3 c\/ copen_interval f1 f3 c~ copen_interval f0 f2 c\/ copen_interval f1 f3 c~ copen_interval f0 f2
- |- ((((x IN (closed_interval ((CONS (a , b)) NIL))) = (x IN (closed_interval ((CONS (a , b)) NIL)))) ==> (((x IN (closed_interval ((CONS (a , b)) NIL))) ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ (x IN (closed_interval ((CONS (a , b)) NIL)))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) t') e'))))) = (((x IN (closed_interval ((CONS (a , b)) NIL))) ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ (x IN (closed_interval ((CONS (a , b)) NIL)))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) t') e')))))
T c= c==> c= cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c==> c==> cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c= cvec cNUMERAL cBIT1 c_0 f3 c==> c==> c~ cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c= cvec cNUMERAL c_0 f4 c= cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL f3 f4 c==> c==> cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c= cvec cNUMERAL cBIT1 c_0 f3 c==> c==> c~ cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c= cvec cNUMERAL c_0 f4 c= cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL f3 f4
+ |- (((!m. (((has_measure s) m) = (((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV))) ==> ((\m. (((has_measure s) m) = (((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV))) m)) = ((\m. (((has_measure s) m) = (((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV))) m))
T c= c==> ! c= chas_measure f0 b0 chas_integral / cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift b0 part cUNIV * / c= chas_measure f0 b0 chas_integral / cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift b0 part cUNIV f1 * / c= chas_measure f0 b0 chas_integral / cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift b0 part cUNIV f1
- (_1765042 = _1765043) |- ((_1765042 = _1765043) /\ ((NUMERAL _1765042) = (NUMERAL _1765043)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ (!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))) |- ((!t. ((?s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t)))) = T)
T c==> ! ! ! ! c==> c/\ cnegligible b2 ! c==> cIN b4 * * part cDIFF b3 b2 c= * b1 b4 * b0 b4 c==> chas_integral b0 f0 b3 chas_integral b1 f0 b3 c= ! c==> c? / c/\ cnegligible b1 ! c==> cIN b2 * * part cDIFF b0 b1 c= * f1 b2 * f2 b2 c==> chas_integral f2 f0 b0 chas_integral f1 f0 b0 cT
- |- (((x IN (open_interval (a , b))) ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ (x IN (open_interval (a , b)))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (open_interval (a , b)))) t') e'))))
T c==> c==> cIN f0 * part copen_interval c, f1 f2 c= cvec cNUMERAL cBIT1 c_0 f3 c==> c==> c~ cIN f0 * part copen_interval c, f1 f2 c= cvec cNUMERAL c_0 f4 c= cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN f0 * part copen_interval c, f1 f2 f3 f4
- |- ((\t'. (!e'. (((x IN (open_interval (a , b))) = g') ==> ((g' ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cIN f0 * part copen_interval c, f1 f2 f3 c==> c==> f3 c= cvec cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f3 c= cvec cNUMERAL c_0 b1 c= cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f3 b0 b1 f4
+ |- (!a. ((!b. ((has_measure (closed_interval ((CONS (a , b)) NIL))) (content (closed_interval ((CONS (a , b)) NIL))))) ==> (!b. ((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL)))))))
T c==> ! chas_measure * part cclosed_interval cCONS c, f0 b0 cNIL ccontent * part cclosed_interval cCONS c, f0 b0 cNIL ! chas_measure * part copen_interval c, f0 b0 ccontent * part cclosed_interval cCONS c, f0 b0 cNIL
- |- (((!t'. (!e'. (((x IN (closed_interval ((CONS (a , b)) NIL))) = g') ==> ((g' ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((x IN (closed_interval ((CONS (a , b)) NIL))) = g') ==> ((g' ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((x IN (closed_interval ((CONS (a , b)) NIL))) = g') ==> ((g' ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL f3 c==> c==> f3 c= cvec cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f3 c= cvec cNUMERAL c_0 b1 c= cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f3 b0 b1 * / ! c==> c= cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL f3 c==> c==> f3 c= cvec cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f3 c= cvec cNUMERAL c_0 b1 c= cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f3 b0 b1 f4 * / ! c==> c= cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL f3 c==> c==> f3 c= cvec cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f3 c= cvec cNUMERAL c_0 b1 c= cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f3 b0 b1 f4
- (_1765040 = _1765041) |- ((_1765040 = _1765041) /\ ((BIT1 _1765040) = (BIT1 _1765041)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ |- ((!a. (!b. (((has_integral (\x. (vec (NUMERAL (BIT1 _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) (closed_interval ((CONS (a , b)) NIL))))) = (!a. (!b. ((has_measure (closed_interval ((CONS (a , b)) NIL))) (content (closed_interval ((CONS (a , b)) NIL)))))))
T c= ! ! chas_integral / cvec cNUMERAL cBIT1 c_0 clift ccontent * part cclosed_interval cCONS c, b0 b1 cNIL * part cclosed_interval cCONS c, b0 b1 cNIL ! ! chas_measure * part cclosed_interval cCONS c, b0 b1 cNIL ccontent * part cclosed_interval cCONS c, b0 b1 cNIL
- |- ((~ (_1765042 = _1765043)) \/ ((NUMERAL _1765042) = (NUMERAL _1765043)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ |- ((\a. (!b. (!c. (((has_integral (\x. c)) ((% (content (closed_interval ((CONS (a , b)) NIL)))) c)) (closed_interval ((CONS (a , b)) NIL)))))) a)
T * / ! ! chas_integral / b2 c% ccontent * part cclosed_interval cCONS c, b0 b1 cNIL b2 * part cclosed_interval cCONS c, b0 b1 cNIL f0
- |- ((\q'. (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) = p') ==> ((p' ==> ((((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) = q')) ==> (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV)) = (p' ==> q'))))) q')
T * / c==> c= chas_integral / cCOND cIN b1 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV f2 c==> c==> f2 c= chas_integral / cCOND cIN b1 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV b0 c= c==> chas_integral / cCOND cIN b1 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV chas_integral / cCOND cIN b1 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c==> f2 b0 f3
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ ((a = T) ==> (((a /\ (b /\ c)) ==> d) = ((a /\ b) ==> (c ==> d)))), ((a = F) ==> (((a /\ (b /\ c)) ==> d) = ((a /\ b) ==> (c ==> d)))) |- (((a /\ (b /\ c)) ==> d) = ((a /\ b) ==> (c ==> d)))
T c==> c==> c= f0 cT c= c==> c/\ f0 c/\ f1 f2 f3 c==> c/\ f0 f1 c==> f2 f3 c==> c==> c= f0 cF c= c==> c/\ f0 c/\ f1 f2 f3 c==> c/\ f0 f1 c==> f2 f3 c= c==> c/\ f0 c/\ f1 f2 f3 c==> c/\ f0 f1 c==> f2 f3
+ (!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))) |- ((!g. (!t. ((?s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))) = T)
T c==> ! ! ! ! c==> c/\ cnegligible b2 ! c==> cIN b4 * * part cDIFF b3 b2 c= * b1 b4 * b0 b4 c==> chas_integral b0 f0 b3 chas_integral b1 f0 b3 c= ! ! c==> c? / c/\ cnegligible b2 ! c==> cIN b3 * * part cDIFF b1 b2 c= * b0 b3 * f1 b3 c==> chas_integral f1 f0 b1 chas_integral b0 f0 b1 cT
- (a /\ (a ==> b)) |- (((a /\ (a ==> b)) ==> (a /\ b)) ==> (a /\ b))
T c==> c/\ f0 c==> f0 f1 c==> c==> c/\ f0 c==> f0 f1 c/\ f0 f1 c/\ f0 f1
+ |- ((!a. ((!b. ((has_measure (closed_interval ((CONS (a , b)) NIL))) (content (closed_interval ((CONS (a , b)) NIL))))) ==> (!b. ((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL))))))) ==> ((!a. (!b. ((has_measure (closed_interval ((CONS (a , b)) NIL))) (content (closed_interval ((CONS (a , b)) NIL)))))) ==> (!a. (!b. ((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL))))))))
T c==> ! c==> ! chas_measure * part cclosed_interval cCONS c, b0 b1 cNIL ccontent * part cclosed_interval cCONS c, b0 b1 cNIL ! chas_measure * part copen_interval c, b0 b1 ccontent * part cclosed_interval cCONS c, b0 b1 cNIL c==> ! ! chas_measure * part cclosed_interval cCONS c, b0 b1 cNIL ccontent * part cclosed_interval cCONS c, b0 b1 cNIL ! ! chas_measure * part copen_interval c, b0 b1 ccontent * part cclosed_interval cCONS c, b0 b1 cNIL
+ (a = F) |- ((((a /\ (b /\ c)) ==> d) = ((a /\ b) ==> (c ==> d))) = (((F /\ (b /\ c)) ==> d) = ((F /\ b) ==> (c ==> d))))
T c==> c= f0 cF c= c= c==> c/\ f0 c/\ f1 f2 f3 c==> c/\ f0 f1 c==> f2 f3 c= c==> c/\ cF c/\ f1 f2 f3 c==> c/\ cF f1 c==> f2 f3
+ |- ((a = T) ==> ((a /\ (a ==> b)) ==> (a /\ b)))
T c==> c= f0 cT c==> c/\ f0 c==> f0 f1 c/\ f0 f1
- |- ((((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> ((((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) = (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV))) ==> (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV)) = ((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV)))) = (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV)) = ((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV))))
T c= c==> c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c= chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c= c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c= c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV
- |- (((~ (x IN (closed_interval ((CONS (a , b)) NIL)))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) e')))
T c==> c==> c~ cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c= cvec cNUMERAL c_0 f3 c= cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 f3
+ (!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) |- ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) /\ (!x. (((closed_interval ((CONS (a , b)) NIL)) x) \/ ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))))))
T c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 c/\ ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c\/ cclosed_interval cCONS c, f0 f1 cNIL b0 c\/ c~ copen_interval c, f0 f1 b0 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- (((negligible ((closed_interval ((CONS (a , b)) NIL)) DIFF (open_interval (a , b)))) /\ (!x. ((x IN (UNIV DIFF ((closed_interval ((CONS (a , b)) NIL)) DIFF (open_interval (a , b))))) ==> (((\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) = ((\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x))))) = ((\s. ((negligible s) /\ (!x. ((x IN (UNIV DIFF s)) ==> (((\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) = ((\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x)))))) ((closed_interval ((CONS (a , b)) NIL)) DIFF (open_interval (a , b)))))
T c= c/\ cnegligible * * part cDIFF * part cclosed_interval cCONS c, f0 f1 cNIL * part copen_interval c, f0 f1 ! c==> cIN b0 * * part cDIFF part cUNIV * * part cDIFF * part cclosed_interval cCONS c, f0 f1 cNIL * part copen_interval c, f0 f1 c= * / cCOND cIN b1 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 * / cCOND cIN b1 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 * / c/\ cnegligible b0 ! c==> cIN b1 * * part cDIFF part cUNIV b0 c= * / cCOND cIN b2 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 * / cCOND cIN b2 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 * * part cDIFF * part cclosed_interval cCONS c, f0 f1 cNIL * part copen_interval c, f0 f1
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
+ (a = F) |- (((a /\ (a ==> b)) ==> (a /\ b)) = ((F /\ (F ==> b)) ==> (F /\ b)))
T c==> c= f0 cF c= c==> c/\ f0 c==> f0 f1 c/\ f0 f1 c==> c/\ cF c==> cF f1 c/\ cF f1
+ |- ((\s. ((negligible s) /\ (!x. ((x IN (UNIV DIFF s)) ==> (((\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) = ((\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x)))))) ((closed_interval ((CONS (a , b)) NIL)) DIFF (open_interval (a , b))))
T * / c/\ cnegligible b0 ! c==> cIN b1 * * part cDIFF part cUNIV b0 c= * / cCOND cIN b2 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 * / cCOND cIN b2 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 * * part cDIFF * part cclosed_interval cCONS c, f0 f1 cNIL * part copen_interval c, f0 f1
+ ((a = T) ==> ((a /\ (a ==> b)) ==> (a /\ b))), ((a = F) ==> ((a /\ (a ==> b)) ==> (a /\ b))) |- ((a /\ (a ==> b)) ==> (a /\ b))
T c==> c==> c= f0 cT c==> c/\ f0 c==> f0 f1 c/\ f0 f1 c==> c==> c= f0 cF c==> c/\ f0 c==> f0 f1 c/\ f0 f1 c==> c/\ f0 c==> f0 f1 c/\ f0 f1
+ (!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))) |- (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))
T c==> ! ! ! ! c==> c/\ cnegligible b2 ! c==> cIN b4 * * part cDIFF b3 b2 c= * b1 b4 * b0 b4 c==> chas_integral b0 f0 b3 chas_integral b1 f0 b3 ! ! ! c==> c/\ cnegligible b1 ! c==> cIN b3 * * part cDIFF b2 b1 c= * b0 b3 * f1 b3 c==> chas_integral f1 f0 b2 chas_integral b0 f0 b2
+ |- (!a. (!b. (((has_integral (\x. (vec (NUMERAL (BIT1 _0))))) ((% (content (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0))))) (closed_interval ((CONS (a , b)) NIL)))))
T chas_integral / cvec cNUMERAL cBIT1 c_0 c% ccontent * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, f0 f1 cNIL
- |- ((_1765042 = _1765043) ==> ((NUMERAL _1765042) = (NUMERAL _1765043)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ ((a = F) ==> (((a /\ (b /\ c)) ==> d) = ((a /\ b) ==> (c ==> d)))) |- (((a /\ (b /\ c)) ==> d) = ((a /\ b) ==> (c ==> d)))
T c==> c==> c= f0 cF c= c==> c/\ f0 c/\ f1 f2 f3 c==> c/\ f0 f1 c==> f2 f3 c= c==> c/\ f0 c/\ f1 f2 f3 c==> c/\ f0 f1 c==> f2 f3
+ |- (((!m. (!s. (((has_measure s) m) = (((has_integral (\x. (vec (NUMERAL (BIT1 _0))))) (lift m)) s)))) ==> ((\m. (!s. (((has_measure s) m) = (((has_integral (\x. (vec (NUMERAL (BIT1 _0))))) (lift m)) s)))) m)) = ((\m. (!s. (((has_measure s) m) = (((has_integral (\x. (vec (NUMERAL (BIT1 _0))))) (lift m)) s)))) m))
T c= c==> ! ! c= chas_measure b1 b0 chas_integral / cvec cNUMERAL cBIT1 c_0 clift b0 b1 * / ! c= chas_measure b1 b0 chas_integral / cvec cNUMERAL cBIT1 c_0 clift b0 b1 f0 * / ! c= chas_measure b1 b0 chas_integral / cvec cNUMERAL cBIT1 c_0 clift b0 b1 f0
+ |- ((\b. (!a. ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F))) b)
T * / ! c==> c~ c==> ! c==> copen_interval c, b1 b0 b2 cclosed_interval cCONS c, b1 b0 cNIL b2 ! c==> c~ c/\ cclosed_interval cCONS c, b1 b0 cNIL b2 c~ copen_interval c, b1 b0 b2 c= cCOND copen_interval c, b1 b0 b2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, b1 b0 cNIL b2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF f0
+ |- ((x IN UNIV) = T)
T c= cIN f0 part cUNIV cT
- (~ (x IN (closed_interval ((CONS (a , b)) NIL)))) |- ((~ (x IN (closed_interval ((CONS (a , b)) NIL)))) /\ ((vec (NUMERAL _0)) = (vec (NUMERAL _0))))
T c==> c~ cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c/\ c~ cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c= cvec cNUMERAL c_0 cvec cNUMERAL c_0
+ |- ((a = F) ==> ((a /\ (a ==> b)) ==> (a /\ b)))
T c==> c= f0 cF c==> c/\ f0 c==> f0 f1 c/\ f0 f1
- (_1765037 = _1765039) |- ((_1765037 = _1765039) /\ ((~ (_1765036 = _1765038)) \/ (((closed_interval _1765038) _1765039) \/ (~ ((closed_interval _1765036) _1765037)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cclosed_interval f3 f1 c~ cclosed_interval f2 f0
+ (!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))) |- (((?s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))) = T)
T c==> ! ! ! ! c==> c/\ cnegligible b2 ! c==> cIN b4 * * part cDIFF b3 b2 c= * b1 b4 * b0 b4 c==> chas_integral b0 f0 b3 chas_integral b1 f0 b3 c= c==> c? / c/\ cnegligible b0 ! c==> cIN b1 * * part cDIFF f1 b0 c= * f2 b1 * f3 b1 c==> chas_integral f3 f0 f1 chas_integral f2 f0 f1 cT
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
- |- (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> ((((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) = q')) ==> (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV)) = ((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> q')))
T c==> c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c= chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV f2 c= c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV f2
+ |- (((!t. ((?s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t)))) ==> ((\t. ((?s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t)))) t)) = ((\t. ((?s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t)))) t))
T c= c==> ! c==> c? / c/\ cnegligible b1 ! c==> cIN b2 * * part cDIFF b0 b1 c= * f0 b2 * f1 b2 c==> chas_integral f1 f2 b0 chas_integral f0 f2 b0 * / c==> c? / c/\ cnegligible b1 ! c==> cIN b2 * * part cDIFF b0 b1 c= * f0 b2 * f1 b2 c==> chas_integral f1 f2 b0 chas_integral f0 f2 b0 f3 * / c==> c? / c/\ cnegligible b1 ! c==> cIN b2 * * part cDIFF b0 b1 c= * f0 b2 * f1 b2 c==> chas_integral f1 f2 b0 chas_integral f0 f2 b0 f3
+ (b = F) |- ((b = F) /\ (((b /\ c) ==> d) = (b ==> (c ==> d))))
T c==> c= f0 cF c/\ c= f0 cF c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2
+ ((a = F) ==> ((a /\ (a ==> b)) ==> (a /\ b))) |- ((a /\ (a ==> b)) ==> (a /\ b))
T c==> c==> c= f0 cF c==> c/\ f0 c==> f0 f1 c/\ f0 f1 c==> c/\ f0 c==> f0 f1 c/\ f0 f1
- ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F), (((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F) ==> ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F)) |- ((((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F) ==> ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F)) /\ ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F))
T c==> c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c==> c==> c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c/\ c==> c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF
+ (~ (((closed_interval ((CONS (a , b)) NIL)) x) \/ ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))))) |- (((open_interval (a , b)) x) /\ (~ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))))
T c==> c~ c\/ cclosed_interval cCONS c, f0 f1 cNIL f2 c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c/\ copen_interval c, f0 f1 f2 c~ c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ (b = F) |- ((((b /\ c) ==> d) = (b ==> (c ==> d))) = (((F /\ c) ==> d) = (F ==> (c ==> d))))
T c==> c= f0 cF c= c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 c= c==> c/\ cF f1 f2 c==> cF c==> f1 f2
+ |- (((!x. (((\s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) x) ==> ((!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))) ==> ((?s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) ==> ((!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))) = ((?s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) ==> ((!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t)))))
T c= c==> ! c==> * / c/\ cnegligible b1 ! c==> cIN b2 * * part cDIFF f0 b1 c= * f1 b2 * f2 b2 b0 c==> ! ! ! ! c==> c/\ cnegligible b3 ! c==> cIN b5 * * part cDIFF b4 b3 c= * b2 b5 * b1 b5 c==> chas_integral b1 f3 b4 chas_integral b2 f3 b4 c==> chas_integral f2 f3 f0 chas_integral f1 f3 f0 c==> c? / c/\ cnegligible b0 ! c==> cIN b1 * * part cDIFF f0 b0 c= * f1 b1 * f2 b1 c==> ! ! ! ! c==> c/\ cnegligible b2 ! c==> cIN b4 * * part cDIFF b3 b2 c= * b1 b4 * b0 b4 c==> chas_integral b0 f3 b3 chas_integral b1 f3 b3 c==> chas_integral f2 f3 f0 chas_integral f1 f3 f0 c==> c? / c/\ cnegligible b0 ! c==> cIN b1 * * part cDIFF f0 b0 c= * f1 b1 * f2 b1 c==> ! ! ! ! c==> c/\ cnegligible b2 ! c==> cIN b4 * * part cDIFF b3 b2 c= * b1 b4 * b0 b4 c==> chas_integral b0 f3 b3 chas_integral b1 f3 b3 c==> chas_integral f2 f3 f0 chas_integral f1 f3 f0
+ |- (((((closed_interval ((CONS (a , b)) NIL)) x) = T) ==> ((((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) /\ (((open_interval (a , b)) x) \/ ((~ ((closed_interval ((CONS (a , b)) NIL)) x)) ==> ((vec (NUMERAL _0)) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))) = T)) = (((((closed_interval ((CONS (a , b)) NIL)) x) = F) ==> ((((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) /\ (((open_interval (a , b)) x) \/ ((~ ((closed_interval ((CONS (a , b)) NIL)) x)) ==> ((vec (NUMERAL _0)) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))) = ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))))) /\ ((((closed_interval ((CONS (a , b)) NIL)) x) = T) ==> ((((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) /\ (((open_interval (a , b)) x) \/ ((~ ((closed_interval ((CONS (a , b)) NIL)) x)) ==> ((vec (NUMERAL _0)) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))) = T))))
T c= c==> c= cclosed_interval cCONS c, f0 f1 cNIL f2 cT c= c/\ c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c\/ copen_interval c, f0 f1 f2 c==> c~ cclosed_interval cCONS c, f0 f1 cNIL f2 c= cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cT c/\ c==> c= cclosed_interval cCONS c, f0 f1 cNIL f2 cF c= c/\ c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c\/ copen_interval c, f0 f1 f2 c==> c~ cclosed_interval cCONS c, f0 f1 cNIL f2 c= cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c==> c= cclosed_interval cCONS c, f0 f1 cNIL f2 cT c= c/\ c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c\/ copen_interval c, f0 f1 f2 c==> c~ cclosed_interval cCONS c, f0 f1 cNIL f2 c= cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cT
- |- (((!p'. (!q'. (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) = p') ==> ((p' ==> ((((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) = q')) ==> (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV)) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) = p') ==> ((p' ==> ((((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) = q')) ==> (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV)) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) = p') ==> ((p' ==> ((((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) = q')) ==> (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV)) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= chas_integral / cCOND cIN b2 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV b0 c==> c==> b0 c= chas_integral / cCOND cIN b2 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV b1 c= c==> chas_integral / cCOND cIN b2 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV chas_integral / cCOND cIN b2 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c==> b0 b1 * / ! c==> c= chas_integral / cCOND cIN b2 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV b0 c==> c==> b0 c= chas_integral / cCOND cIN b2 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV b1 c= c==> chas_integral / cCOND cIN b2 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV chas_integral / cCOND cIN b2 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c==> b0 b1 f2 * / ! c==> c= chas_integral / cCOND cIN b2 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV b0 c==> c==> b0 c= chas_integral / cCOND cIN b2 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV b1 c= c==> chas_integral / cCOND cIN b2 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV chas_integral / cCOND cIN b2 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c==> b0 b1 f2
- (!x. ((P x) ==> (Q x))) |- (((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))) ==> ((!x. (P x)) ==> (!x. (Q x))))
T c==> ! c==> * f0 b0 * f1 b0 c==> c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c==> ! * f0 b0 ! * f1 b0
- (_1765050 = _1765052), (_1765051 = _1765053) |- ((_1765050 = _1765052) /\ (((CONS _1765050) _1765051) = ((CONS _1765052) _1765053)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= cCONS f0 f2 cCONS f1 f3
+ |- (((!b. (!c. (((has_integral (\x. c)) ((% (content (closed_interval ((CONS (a , b)) NIL)))) c)) (closed_interval ((CONS (a , b)) NIL))))) ==> ((\b. (!c. (((has_integral (\x. c)) ((% (content (closed_interval ((CONS (a , b)) NIL)))) c)) (closed_interval ((CONS (a , b)) NIL))))) b)) = ((\b. (!c. (((has_integral (\x. c)) ((% (content (closed_interval ((CONS (a , b)) NIL)))) c)) (closed_interval ((CONS (a , b)) NIL))))) b))
T c= c==> ! ! chas_integral / b1 c% ccontent * part cclosed_interval cCONS c, f0 b0 cNIL b1 * part cclosed_interval cCONS c, f0 b0 cNIL * / ! chas_integral / b1 c% ccontent * part cclosed_interval cCONS c, f0 b0 cNIL b1 * part cclosed_interval cCONS c, f0 b0 cNIL f1 * / ! chas_integral / b1 c% ccontent * part cclosed_interval cCONS c, f0 b0 cNIL b1 * part cclosed_interval cCONS c, f0 b0 cNIL f1
- |- (((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F) ==> ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F))
T c==> c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF
- |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
- |- ((!x'. ((~ ((open_interval (a , b)) x')) \/ ((closed_interval ((CONS (a , b)) NIL)) x))) = ((!x. (~ ((open_interval (a , b)) x))) \/ ((closed_interval ((CONS (a , b)) NIL)) x)))
T c= ! c\/ c~ copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL f2 c\/ ! c~ copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL f2
- |- (((~ (x IN (open_interval (a , b)))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) e')))
T c==> c==> c~ cIN f0 * part copen_interval c, f1 f2 c= cvec cNUMERAL c_0 f3 c= cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 f3
+ |- ((((closed_interval ((CONS (a , b)) NIL)) x) = T) ==> ((((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) /\ (((open_interval (a , b)) x) \/ ((~ ((closed_interval ((CONS (a , b)) NIL)) x)) ==> ((vec (NUMERAL _0)) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))) = T))
T c==> c= cclosed_interval cCONS c, f0 f1 cNIL f2 cT c= c/\ c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c\/ copen_interval c, f0 f1 f2 c==> c~ cclosed_interval cCONS c, f0 f1 cNIL f2 c= cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cT
+ |- (((T /\ (b /\ c)) ==> d) = ((T /\ b) ==> (c ==> d)))
T c= c==> c/\ cT c/\ f0 f1 f2 c==> c/\ cT f0 c==> f1 f2
- |- (((x IN (closed_interval ((CONS (a , b)) NIL))) ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ (x IN (closed_interval ((CONS (a , b)) NIL)))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) t') e'))))
T c==> c==> cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c= cvec cNUMERAL cBIT1 c_0 f3 c==> c==> c~ cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c= cvec cNUMERAL c_0 f4 c= cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL f3 f4
+ |- (!x. ((x IN (UNIV DIFF ((closed_interval ((CONS (a , b)) NIL)) DIFF (open_interval (a , b))))) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))
T c==> cIN f0 * * part cDIFF part cUNIV * * part cDIFF * part cclosed_interval cCONS c, f1 f2 cNIL * part copen_interval c, f1 f2 c= cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
- (~ (((closed_interval ((CONS (a , b)) NIL)) x) \/ ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))))) |- (~ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0))))
T c==> c~ c\/ cclosed_interval cCONS c, f0 f1 cNIL f2 c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
- |- ((_1765040 = _1765041) ==> ((BIT1 _1765040) = (BIT1 _1765041)))
T c==> c= f0 f1 c= cBIT1 f0 cBIT1 f1
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- |- (((!e'. (((x IN (open_interval (a , b))) = g') ==> ((g' ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) ==> ((\e'. (((x IN (open_interval (a , b))) = g') ==> ((g' ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e')) = ((\e'. (((x IN (open_interval (a , b))) = g') ==> ((g' ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= cIN f0 * part copen_interval c, f1 f2 f3 c==> c==> f3 c= cvec cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f3 c= cvec cNUMERAL c_0 b0 c= cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f3 f4 b0 * / c==> c= cIN f0 * part copen_interval c, f1 f2 f3 c==> c==> f3 c= cvec cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f3 c= cvec cNUMERAL c_0 b0 c= cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f3 f4 b0 f5 * / c==> c= cIN f0 * part copen_interval c, f1 f2 f3 c==> c==> f3 c= cvec cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f3 c= cvec cNUMERAL c_0 b0 c= cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f3 f4 b0 f5
+ |- ((!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))) ==> (!f. (!g. (!t. ((?s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t)))))))
T c==> ! ! ! ! c==> c/\ cnegligible b2 ! c==> cIN b4 * * part cDIFF b3 b2 c= * b1 b4 * b0 b4 c==> chas_integral b0 f0 b3 chas_integral b1 f0 b3 ! ! ! c==> c? / c/\ cnegligible b3 ! c==> cIN b4 * * part cDIFF b2 b3 c= * b1 b4 * b0 b4 c==> chas_integral b0 f0 b2 chas_integral b1 f0 b2
+ |- ((!x. ((x IN (UNIV DIFF ((closed_interval ((CONS (a , b)) NIL)) DIFF (open_interval (a , b))))) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))) = ((negligible ((closed_interval ((CONS (a , b)) NIL)) DIFF (open_interval (a , b)))) /\ (!x. ((x IN (UNIV DIFF ((closed_interval ((CONS (a , b)) NIL)) DIFF (open_interval (a , b))))) ==> (((\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) = ((\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x))))))
T c= ! c==> cIN b0 * * part cDIFF part cUNIV * * part cDIFF * part cclosed_interval cCONS c, f0 f1 cNIL * part copen_interval c, f0 f1 c= cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c/\ cnegligible * * part cDIFF * part cclosed_interval cCONS c, f0 f1 cNIL * part copen_interval c, f0 f1 ! c==> cIN b0 * * part cDIFF part cUNIV * * part cDIFF * part cclosed_interval cCONS c, f0 f1 cNIL * part copen_interval c, f0 f1 c= * / cCOND cIN b1 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 * / cCOND cIN b1 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0
- |- ((((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F) ==> ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F)) = ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F))
T c= c==> c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF
+ ((\s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) s) |- (((\s. ((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x)))))) s) /\ ((!f. (!g. (!s. (!t. (((negligible s) /\ (!x. ((x IN (t DIFF s)) ==> ((g x) = (f x))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))))) ==> ((((has_integral f) y) t) ==> (((has_integral g) y) t))))
T c==> * / c/\ cnegligible b0 ! c==> cIN b1 * * part cDIFF f0 b0 c= * f1 b1 * f2 b1 f3 c/\ * / c/\ cnegligible b0 ! c==> cIN b1 * * part cDIFF f0 b0 c= * f1 b1 * f2 b1 f3 c==> ! ! ! ! c==> c/\ cnegligible b2 ! c==> cIN b4 * * part cDIFF b3 b2 c= * b1 b4 * b0 b4 c==> chas_integral b0 f4 b3 chas_integral b1 f4 b3 c==> chas_integral f2 f4 f0 chas_integral f1 f4 f0
- |- ((!x'. ((~ ((open_interval (a , b)) x)) \/ ((closed_interval ((CONS (a , b)) NIL)) x'))) = ((~ ((open_interval (a , b)) x)) \/ (!x. ((closed_interval ((CONS (a , b)) NIL)) x))))
T c= ! c\/ c~ copen_interval c, f0 f1 f2 cclosed_interval cCONS c, f0 f1 cNIL b0 c\/ c~ copen_interval c, f0 f1 f2 ! cclosed_interval cCONS c, f0 f1 cNIL b0
- (((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) |- ((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) = T)
T c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c= chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV cT
+ |- (((((((closed_interval ((CONS (a , b)) NIL)) x) = F) ==> ((((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) /\ (((open_interval (a , b)) x) \/ ((~ ((closed_interval ((CONS (a , b)) NIL)) x)) ==> ((vec (NUMERAL _0)) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))) = ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))))) /\ ((((closed_interval ((CONS (a , b)) NIL)) x) = T) ==> ((((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) /\ (((open_interval (a , b)) x) \/ ((~ ((closed_interval ((CONS (a , b)) NIL)) x)) ==> ((vec (NUMERAL _0)) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))) = T))) ==> ((((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) /\ (((open_interval (a , b)) x) \/ ((~ ((closed_interval ((CONS (a , b)) NIL)) x)) ==> ((vec (NUMERAL _0)) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))) = (((~ ((closed_interval ((CONS (a , b)) NIL)) x)) \/ T) /\ (((closed_interval ((CONS (a , b)) NIL)) x) \/ ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))))))) = ((((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) /\ (((open_interval (a , b)) x) \/ ((~ ((closed_interval ((CONS (a , b)) NIL)) x)) ==> ((vec (NUMERAL _0)) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))) = (((~ ((closed_interval ((CONS (a , b)) NIL)) x)) \/ T) /\ (((closed_interval ((CONS (a , b)) NIL)) x) \/ ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0))))))))
T c= c==> c/\ c==> c= cclosed_interval cCONS c, f0 f1 cNIL f2 cF c= c/\ c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c\/ copen_interval c, f0 f1 f2 c==> c~ cclosed_interval cCONS c, f0 f1 cNIL f2 c= cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c==> c= cclosed_interval cCONS c, f0 f1 cNIL f2 cT c= c/\ c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c\/ copen_interval c, f0 f1 f2 c==> c~ cclosed_interval cCONS c, f0 f1 cNIL f2 c= cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cT c= c/\ c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c\/ copen_interval c, f0 f1 f2 c==> c~ cclosed_interval cCONS c, f0 f1 cNIL f2 c= cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c/\ c\/ c~ cclosed_interval cCONS c, f0 f1 cNIL f2 cT c\/ cclosed_interval cCONS c, f0 f1 cNIL f2 c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= c/\ c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c\/ copen_interval c, f0 f1 f2 c==> c~ cclosed_interval cCONS c, f0 f1 cNIL f2 c= cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c/\ c\/ c~ cclosed_interval cCONS c, f0 f1 cNIL f2 cT c\/ cclosed_interval cCONS c, f0 f1 cNIL f2 c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ (a = T) |- ((a = T) /\ (((a /\ (b /\ c)) ==> d) = ((a /\ b) ==> (c ==> d))))
T c==> c= f0 cT c/\ c= f0 cT c= c==> c/\ f0 c/\ f1 f2 f3 c==> c/\ f0 f1 c==> f2 f3
+ |- ((\p'. (!q'. ((((has_measure (closed_interval ((CONS (a , b)) NIL))) (content (closed_interval ((CONS (a , b)) NIL)))) = p') ==> ((p' ==> (((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL)))) = q')) ==> ((((has_measure (closed_interval ((CONS (a , b)) NIL))) (content (closed_interval ((CONS (a , b)) NIL)))) ==> ((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL))))) = (p' ==> q')))))) p')
T * / ! c==> c= chas_measure * part cclosed_interval cCONS c, f0 f1 cNIL ccontent * part cclosed_interval cCONS c, f0 f1 cNIL b0 c==> c==> b0 c= chas_measure * part copen_interval c, f0 f1 ccontent * part cclosed_interval cCONS c, f0 f1 cNIL b1 c= c==> chas_measure * part cclosed_interval cCONS c, f0 f1 cNIL ccontent * part cclosed_interval cCONS c, f0 f1 cNIL chas_measure * part copen_interval c, f0 f1 ccontent * part cclosed_interval cCONS c, f0 f1 cNIL c==> b0 b1 f2
- |- ((x IN (open_interval (a , b))) ==> ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL (BIT1 _0)))))
T c==> cIN f0 * part copen_interval c, f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0
+ |- ((\a. (!b. ((open_interval (a , b)) SUBSET (closed_interval ((CONS (a , b)) NIL))))) a)
T * / ! cSUBSET * part copen_interval c, b0 b1 * part cclosed_interval cCONS c, b0 b1 cNIL f0
- (_1765051 = _1765053) |- ((_1765051 = _1765053) /\ ((~ (_1765050 = _1765052)) \/ (((CONS _1765050) _1765051) = ((CONS _1765052) _1765053))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f2 f0 cCONS f3 f1
- |- (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) = p') ==> ((p' ==> ((((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) = q')) ==> (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV)) = (p' ==> q'))))
T c==> c= chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV f2 c==> c==> f2 c= chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV f3 c= c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c==> f2 f3
+ |- ((((has_measure (closed_interval ((CONS (a , b)) NIL))) (content (closed_interval ((CONS (a , b)) NIL)))) ==> ((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL))))) = ((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV)))
T c= c==> chas_measure * part cclosed_interval cCONS c, f0 f1 cNIL ccontent * part cclosed_interval cCONS c, f0 f1 cNIL chas_measure * part copen_interval c, f0 f1 ccontent * part cclosed_interval cCONS c, f0 f1 cNIL c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV
- (!x. ((P x) ==> (Q x))), ((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))) |- ((!x. ((P x) ==> (Q x))) /\ ((!x. (P x)) ==> (!x. (Q x))))
T c==> ! c==> * f0 b0 * f1 b0 c==> c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c/\ ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0
+ |- (((!c. (((has_integral (\x. c)) ((% (content (closed_interval ((CONS (a , b)) NIL)))) c)) (closed_interval ((CONS (a , b)) NIL)))) ==> ((\c. (((has_integral (\x. c)) ((% (content (closed_interval ((CONS (a , b)) NIL)))) c)) (closed_interval ((CONS (a , b)) NIL)))) c)) = ((\c. (((has_integral (\x. c)) ((% (content (closed_interval ((CONS (a , b)) NIL)))) c)) (closed_interval ((CONS (a , b)) NIL)))) c))
T c= c==> ! chas_integral / b0 c% ccontent * part cclosed_interval cCONS c, f0 f1 cNIL b0 * part cclosed_interval cCONS c, f0 f1 cNIL * / chas_integral / b0 c% ccontent * part cclosed_interval cCONS c, f0 f1 cNIL b0 * part cclosed_interval cCONS c, f0 f1 cNIL f2 * / chas_integral / b0 c% ccontent * part cclosed_interval cCONS c, f0 f1 cNIL b0 * part cclosed_interval cCONS c, f0 f1 cNIL f2
+ |- ((\q'. ((((has_measure (closed_interval ((CONS (a , b)) NIL))) (content (closed_interval ((CONS (a , b)) NIL)))) = p') ==> ((p' ==> (((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL)))) = q')) ==> ((((has_measure (closed_interval ((CONS (a , b)) NIL))) (content (closed_interval ((CONS (a , b)) NIL)))) ==> ((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL))))) = (p' ==> q'))))) q')
T * / c==> c= chas_measure * part cclosed_interval cCONS c, f0 f1 cNIL ccontent * part cclosed_interval cCONS c, f0 f1 cNIL f2 c==> c==> f2 c= chas_measure * part copen_interval c, f0 f1 ccontent * part cclosed_interval cCONS c, f0 f1 cNIL b0 c= c==> chas_measure * part cclosed_interval cCONS c, f0 f1 cNIL ccontent * part cclosed_interval cCONS c, f0 f1 cNIL chas_measure * part copen_interval c, f0 f1 ccontent * part cclosed_interval cCONS c, f0 f1 cNIL c==> f2 b0 f3
+ |- ((((COND F) t1) t2) = t2)
T c= cCOND cF f0 f1 f1
- |- ((_1765044 = _1765045) ==> ((vec _1765044) = (vec _1765045)))
T c==> c= f0 f1 c= cvec f0 cvec f1
+ (!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) |- (((closed_interval ((CONS (a , b)) NIL)) x) \/ ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))))
T c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 c\/ cclosed_interval cCONS c, f0 f1 cNIL f2 c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- ((!a. (!b. ((has_measure (closed_interval ((CONS (a , b)) NIL))) (content (closed_interval ((CONS (a , b)) NIL)))))) ==> (!a. (!b. ((has_measure (open_interval (a , b))) (content (closed_interval ((CONS (a , b)) NIL)))))))
T c==> ! ! chas_measure * part cclosed_interval cCONS c, b0 b1 cNIL ccontent * part cclosed_interval cCONS c, b0 b1 cNIL ! ! chas_measure * part copen_interval c, b0 b1 ccontent * part cclosed_interval cCONS c, b0 b1 cNIL
- |- ((_1765037 = _1765039) ==> ((~ (_1765036 = _1765038)) \/ (((closed_interval _1765038) _1765039) \/ (~ ((closed_interval _1765036) _1765037)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cclosed_interval f3 f1 c~ cclosed_interval f2 f0
- |- ((\e'. (((x IN (closed_interval ((CONS (a , b)) NIL))) = g') ==> ((g' ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e')
T * / c==> c= cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL f3 c==> c==> f3 c= cvec cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f3 c= cvec cNUMERAL c_0 b0 c= cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f3 f4 b0 f5
- (!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))), (~ (((closed_interval ((CONS (a , b)) NIL)) x) \/ ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))))), (~ ((closed_interval ((CONS (a , b)) NIL)) x)) |- ((~ ((closed_interval ((CONS (a , b)) NIL)) x)) /\ ((closed_interval ((CONS (a , b)) NIL)) x))
T c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 c==> c~ c\/ cclosed_interval cCONS c, f0 f1 cNIL f2 c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c==> c~ cclosed_interval cCONS c, f0 f1 cNIL f2 c/\ c~ cclosed_interval cCONS c, f0 f1 cNIL f2 cclosed_interval cCONS c, f0 f1 cNIL f2
+ |- ((b = T) ==> (((b /\ c) ==> d) = (b ==> (c ==> d))))
T c==> c= f0 cT c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2
+ (!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))), (~ (((closed_interval ((CONS (a , b)) NIL)) x) \/ ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))))) |- ((~ (((closed_interval ((CONS (a , b)) NIL)) x) \/ ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))))) /\ F)
T c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 c==> c~ c\/ cclosed_interval cCONS c, f0 f1 cNIL f2 c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c/\ c~ c\/ cclosed_interval cCONS c, f0 f1 cNIL f2 c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF
+ (b = T) |- ((b = T) /\ (((b /\ c) ==> d) = (b ==> (c ==> d))))
T c==> c= f0 cT c/\ c= f0 cT c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2
+ |- (((~ (((closed_interval ((CONS (a , b)) NIL)) x) \/ ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))))) ==> F) = (((closed_interval ((CONS (a , b)) NIL)) x) \/ ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0))))))
T c= c==> c~ c\/ cclosed_interval cCONS c, f0 f1 cNIL f2 c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c\/ cclosed_interval cCONS c, f0 f1 cNIL f2 c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
- (a /\ (a ==> b)), ((a /\ (a ==> b)) ==> (a /\ b)) |- (((a /\ (a ==> b)) ==> (a /\ b)) /\ (a /\ b))
T c==> c/\ f0 c==> f0 f1 c==> c==> c/\ f0 c==> f0 f1 c/\ f0 f1 c/\ c==> c/\ f0 c==> f0 f1 c/\ f0 f1 c/\ f0 f1
- (_1765032 = _1765034), (_1765033 = _1765035) |- (((open_interval _1765034) _1765035) \/ (~ ((open_interval _1765032) _1765033)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ copen_interval f1 f3 c~ copen_interval f0 f2
- |- ((!x. (P \/ (Q x))) = (P \/ (!x. (Q x))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((~ (_1765051 = _1765053)) \/ ((~ (_1765050 = _1765052)) \/ (((CONS _1765050) _1765051) = ((CONS _1765052) _1765053))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f2 f0 cCONS f3 f1
- |- ((((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))
T c= cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- |- ((!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e')))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 cT
- |- ((((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))) ==> ((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x))))) = ((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))))
T c= c==> c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0
- ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F) |- ((((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F) ==> ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F)) ==> ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F))
T c==> c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c==> c==> c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF
- (_1765036 = _1765038), (_1765037 = _1765039) |- (((closed_interval _1765038) _1765039) \/ (~ ((closed_interval _1765036) _1765037)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cclosed_interval f1 f3 c~ cclosed_interval f0 f2
- |- (((!g'. (!t'. (!e'. (((x IN (closed_interval ((CONS (a , b)) NIL))) = g') ==> ((g' ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((x IN (closed_interval ((CONS (a , b)) NIL))) = g') ==> ((g' ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((x IN (closed_interval ((CONS (a , b)) NIL))) = g') ==> ((g' ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL b0 c==> c==> b0 c= cvec cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 * / ! ! c==> c= cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL b0 c==> c==> b0 c= cvec cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f3 * / ! ! c==> c= cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL b0 c==> c==> b0 c= cvec cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f3
- |- ((((x IN (open_interval (a , b))) ==> ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL (BIT1 _0))))) ==> (((~ (x IN (open_interval (a , b)))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) e')))) = (((~ (x IN (open_interval (a , b)))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) e'))))
T c= c==> c==> cIN f0 * part copen_interval c, f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> c==> c~ cIN f0 * part copen_interval c, f1 f2 c= cvec cNUMERAL c_0 f3 c= cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 f3 c==> c==> c~ cIN f0 * part copen_interval c, f1 f2 c= cvec cNUMERAL c_0 f3 c= cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 f3
- (_1765046 = _1765048) |- ((_1765046 = _1765048) /\ ((~ (_1765047 = _1765049)) \/ ((_1765046 , _1765047) = (_1765048 , _1765049))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- |- ((s = t) = (!x. ((x IN s) = (x IN t))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
- (_1765044 = _1765045) |- ((_1765044 = _1765045) /\ ((vec _1765044) = (vec _1765045)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cvec f0 cvec f1
- ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F) |- (((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F) /\ ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F))
T c==> c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c/\ c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF
- |- ((\g'. (!t'. (!e'. (((x IN (closed_interval ((CONS (a , b)) NIL))) = g') ==> ((g' ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL b0 c==> c==> b0 c= cvec cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f3
- |- ((((x IN (closed_interval ((CONS (a , b)) NIL))) ==> ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL (BIT1 _0))))) ==> (((~ (x IN (closed_interval ((CONS (a , b)) NIL)))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) e')))) = (((~ (x IN (closed_interval ((CONS (a , b)) NIL)))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) e'))))
T c= c==> c==> cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> c==> c~ cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c= cvec cNUMERAL c_0 f3 c= cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 f3 c==> c==> c~ cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c= cvec cNUMERAL c_0 f3 c= cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 f3
- (!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))), (~ (((closed_interval ((CONS (a , b)) NIL)) x) \/ ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))))) |- ((~ F) ==> F)
T c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 c==> c~ c\/ cclosed_interval cCONS c, f0 f1 cNIL f2 c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c==> c~ cF cF
- |- (((!e'. (((x IN (closed_interval ((CONS (a , b)) NIL))) = g') ==> ((g' ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) ==> ((\e'. (((x IN (closed_interval ((CONS (a , b)) NIL))) = g') ==> ((g' ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e')) = ((\e'. (((x IN (closed_interval ((CONS (a , b)) NIL))) = g') ==> ((g' ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL f3 c==> c==> f3 c= cvec cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f3 c= cvec cNUMERAL c_0 b0 c= cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f3 f4 b0 * / c==> c= cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL f3 c==> c==> f3 c= cvec cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f3 c= cvec cNUMERAL c_0 b0 c= cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f3 f4 b0 f5 * / c==> c= cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL f3 c==> c==> f3 c= cvec cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f3 c= cvec cNUMERAL c_0 b0 c= cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f3 f4 b0 f5
- |- ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))
T c= cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
- |- (((a /\ (a ==> b)) ==> (a /\ b)) ==> ((a /\ (a ==> b)) ==> (a /\ b)))
T c==> c==> c/\ f0 c==> f0 f1 c/\ f0 f1 c==> c/\ f0 c==> f0 f1 c/\ f0 f1
- |- (T = (((~ ((open_interval (a , b)) _1765031)) \/ ((closed_interval ((CONS (a , b)) NIL)) _1765031)) = (((closed_interval ((CONS (a , b)) NIL)) _1765031) \/ (~ ((open_interval (a , b)) _1765031)))))
T c= cT c= c\/ c~ copen_interval c, f0 f1 f2 cclosed_interval cCONS c, f0 f1 cNIL f2 c\/ cclosed_interval cCONS c, f0 f1 cNIL f2 c~ copen_interval c, f0 f1 f2
- ((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))) |- (((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))) /\ ((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))))
T c==> c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c/\ c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0
- (!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))), (~ F), (~ (((closed_interval ((CONS (a , b)) NIL)) x) \/ ((~ ((open_interval (a , b)) x)) \/ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))))) |- ((~ F) /\ F)
T c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 c==> c~ cF c==> c~ c\/ cclosed_interval cCONS c, f0 f1 cNIL f2 c\/ c~ copen_interval c, f0 f1 f2 c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c/\ c~ cF cF
- |- ((!x. (P x)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- ((((x IN (open_interval (a , b))) = (x IN (open_interval (a , b)))) ==> (((x IN (open_interval (a , b))) ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ (x IN (open_interval (a , b)))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (open_interval (a , b)))) t') e'))))) = (((x IN (open_interval (a , b))) ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ (x IN (open_interval (a , b)))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (open_interval (a , b)))) t') e')))))
T c= c==> c= cIN f0 * part copen_interval c, f1 f2 cIN f0 * part copen_interval c, f1 f2 c==> c==> cIN f0 * part copen_interval c, f1 f2 c= cvec cNUMERAL cBIT1 c_0 f3 c==> c==> c~ cIN f0 * part copen_interval c, f1 f2 c= cvec cNUMERAL c_0 f4 c= cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN f0 * part copen_interval c, f1 f2 f3 f4 c==> c==> cIN f0 * part copen_interval c, f1 f2 c= cvec cNUMERAL cBIT1 c_0 f3 c==> c==> c~ cIN f0 * part copen_interval c, f1 f2 c= cvec cNUMERAL c_0 f4 c= cCOND cIN f0 * part copen_interval c, f1 f2 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN f0 * part copen_interval c, f1 f2 f3 f4
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (x IN (closed_interval ((CONS (a , b)) NIL))) |- ((x IN (closed_interval ((CONS (a , b)) NIL))) /\ ((vec (NUMERAL (BIT1 _0))) = (vec (NUMERAL (BIT1 _0)))))
T c==> cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c/\ cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c= cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((~ (x IN (closed_interval ((CONS (a , b)) NIL)))) ==> ((vec (NUMERAL _0)) = (vec (NUMERAL _0))))
T c==> c~ cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c= cvec cNUMERAL c_0 cvec cNUMERAL c_0
- |- ((~ (_1765044 = _1765045)) \/ ((vec _1765044) = (vec _1765045)))
T c\/ c~ c= f0 f1 c= cvec f0 cvec f1
- |- ((\t'. (!e'. (((x IN (closed_interval ((CONS (a , b)) NIL))) = g') ==> ((g' ==> ((vec (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL f3 c==> c==> f3 c= cvec cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f3 c= cvec cNUMERAL c_0 b1 c= cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f3 b0 b1 f4
- |- ((((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) = (((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV)) ==> (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> ((((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) = q')) ==> (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV)) = ((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> q')))) = (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> ((((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) = q')) ==> (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV)) = ((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> q'))))
T c= c==> c= chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c==> c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c= chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV f2 c= c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV f2 c==> c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c= chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV f2 c= c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV f2
- |- (((((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F) ==> ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F)) ==> (((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F) ==> ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F))) = (((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F) ==> ((~ ((!x. (((open_interval (a , b)) x) ==> ((closed_interval ((CONS (a , b)) NIL)) x))) ==> (!x. ((~ (((closed_interval ((CONS (a , b)) NIL)) x) /\ (~ ((open_interval (a , b)) x)))) ==> ((((COND ((open_interval (a , b)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) x)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))) ==> F)))
T c= c==> c==> c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c==> c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c==> c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c==> c~ c==> ! c==> copen_interval c, f0 f1 b0 cclosed_interval cCONS c, f0 f1 cNIL b0 ! c==> c~ c/\ cclosed_interval cCONS c, f0 f1 cNIL b0 c~ copen_interval c, f0 f1 b0 c= cCOND copen_interval c, f0 f1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cclosed_interval cCONS c, f0 f1 cNIL b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF
- |- (((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV)) = ((((has_integral (\x. (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV) ==> (((has_integral (\x. (((COND (x IN (open_interval (a , b)))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift (content (closed_interval ((CONS (a , b)) NIL))))) UNIV)))
T c= c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV c==> chas_integral / cCOND cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV chas_integral / cCOND cIN b0 * part copen_interval c, f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift ccontent * part cclosed_interval cCONS c, f0 f1 cNIL part cUNIV
- |- ((~ (x IN (open_interval (a , b)))) ==> ((vec (NUMERAL _0)) = (vec (NUMERAL _0))))
T c==> c~ cIN f0 * part copen_interval c, f1 f2 c= cvec cNUMERAL c_0 cvec cNUMERAL c_0
- (_1765046 = _1765048) |- ((_1765047 = _1765049) ==> ((_1765046 , _1765047) = (_1765048 , _1765049)))
T c==> c= f0 f1 c==> c= f2 f3 c= c, f0 f2 c, f1 f3
- (x IN (closed_interval ((CONS (a , b)) NIL))) |- ((x IN (closed_interval ((CONS (a , b)) NIL))) = T)
T c==> cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c= cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cT
- (_1765036 = _1765038), (_1765037 = _1765039) |- ((_1765036 = _1765038) /\ (((closed_interval _1765038) _1765039) \/ (~ ((closed_interval _1765036) _1765037))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ cclosed_interval f1 f3 c~ cclosed_interval f0 f2
- |- ((!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))) = T)
T c= ! ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c==> c==> c~ f1 c= f3 b1 c= cCOND f0 f2 f3 cCOND f1 b0 b1 cT
- (_1765032 = _1765034), (_1765033 = _1765035) |- ((_1765032 = _1765034) /\ (((open_interval _1765034) _1765035) \/ (~ ((open_interval _1765032) _1765033))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ copen_interval f1 f3 c~ copen_interval f0 f2
- (_1765036 = _1765038), (_1765037 = _1765039) |- (((((closed_interval _1765036) _1765037) = ((closed_interval _1765038) _1765039)) ==> (((closed_interval _1765038) _1765039) \/ (~ ((closed_interval _1765036) _1765037)))) = (((closed_interval _1765038) _1765039) \/ (~ ((closed_interval _1765036) _1765037))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cclosed_interval f0 f2 cclosed_interval f1 f3 c\/ cclosed_interval f1 f3 c~ cclosed_interval f0 f2 c\/ cclosed_interval f1 f3 c~ cclosed_interval f0 f2
