N SERIES_NEG
C |- (!x. (!x0. (!s. ((((sums x) x0) s) ==> (((sums (\n. (vector_neg (x n)))) (vector_neg x0)) s)))))
T c==> csums f0 f1 f2 csums / cvector_neg * f0 b0 cvector_neg f1 f2
D TRUTH
A |- T
T cT
D VSUM_NEG
A |- (!f. (!s. (((vsum s) (\x. (vector_neg (f x)))) = (vector_neg ((vsum s) f)))))
T c= cvsum f0 / cvector_neg * f1 b0 cvector_neg cvsum f0 f1
D LIM_NEG
A |- (!net. (!f. (!l. ((((--> f) l) net) ==> (((--> (\x. (vector_neg (f x)))) (vector_neg l)) net)))))
T c==> c--> f0 f1 f2 c--> / cvector_neg * f0 b0 cvector_neg f1 f2
D sums
A |- (!s. (!f. (!l. ((((sums f) l) s) = (((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) f))) l) sequentially)))))
T c= csums f0 f1 f2 c--> / cvsum * * part cINTER f2 * * part c.. cNUMERAL c_0 b0 f0 f1 csequentially
+ |- (((((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially) ==> ((((sums (\n. (vector_neg (x n)))) (vector_neg x0)) s) = q')) ==> (((((sums x) x0) s) ==> (((sums (\n. (vector_neg (x n)))) (vector_neg x0)) s)) = ((((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially) ==> q')))
T c==> c==> c--> / cvsum * * part cINTER f0 * * part c.. cNUMERAL c_0 b0 f1 f2 csequentially c= csums / cvector_neg * f1 b0 cvector_neg f2 f0 f3 c= c==> csums f1 f2 f0 csums / cvector_neg * f1 b0 cvector_neg f2 f0 c==> c--> / cvsum * * part cINTER f0 * * part c.. cNUMERAL c_0 b0 f1 f2 csequentially f3
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((\s. (!m. (!n. (FINITE (s INTER (m .. n)))))) s)
T * / ! ! cFINITE * * part cINTER b0 * * part c.. b1 b2 f0
+ |- (((!s. (((vsum s) (\x. (vector_neg (f x)))) = (vector_neg ((vsum s) f)))) ==> ((\s. (((vsum s) (\x. (vector_neg (f x)))) = (vector_neg ((vsum s) f)))) s)) = ((\s. (((vsum s) (\x. (vector_neg (f x)))) = (vector_neg ((vsum s) f)))) s))
T c= c==> ! c= cvsum b0 / cvector_neg * f0 b1 cvector_neg cvsum b0 f0 * / c= cvsum b0 / cvector_neg * f0 b1 cvector_neg cvsum b0 f0 f1 * / c= cvsum b0 / cvector_neg * f0 b1 cvector_neg cvsum b0 f0 f1
+ |- ((!s. t) = t)
T c= ! f0 f0
+ |- ((\net. (!f. (!l. ((((--> f) l) net) ==> (((--> (\x. (vector_neg (f x)))) (vector_neg l)) net))))) net)
T * / ! ! c==> c--> b1 b2 b0 c--> / cvector_neg * b1 b3 cvector_neg b2 b0 f0
+ |- (((!q'. (((((sums x) x0) s) = p') ==> ((p' ==> ((((sums (\n. (vector_neg (x n)))) (vector_neg x0)) s) = q')) ==> (((((sums x) x0) s) ==> (((sums (\n. (vector_neg (x n)))) (vector_neg x0)) s)) = (p' ==> q'))))) ==> ((\q'. (((((sums x) x0) s) = p') ==> ((p' ==> ((((sums (\n. (vector_neg (x n)))) (vector_neg x0)) s) = q')) ==> (((((sums x) x0) s) ==> (((sums (\n. (vector_neg (x n)))) (vector_neg x0)) s)) = (p' ==> q'))))) q')) = ((\q'. (((((sums x) x0) s) = p') ==> ((p' ==> ((((sums (\n. (vector_neg (x n)))) (vector_neg x0)) s) = q')) ==> (((((sums x) x0) s) ==> (((sums (\n. (vector_neg (x n)))) (vector_neg x0)) s)) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= csums f0 f1 f2 f3 c==> c==> f3 c= csums / cvector_neg * f0 b1 cvector_neg f1 f2 b0 c= c==> csums f0 f1 f2 csums / cvector_neg * f0 b1 cvector_neg f1 f2 c==> f3 b0 * / c==> c= csums f0 f1 f2 f3 c==> c==> f3 c= csums / cvector_neg * f0 b1 cvector_neg f1 f2 b0 c= c==> csums f0 f1 f2 csums / cvector_neg * f0 b1 cvector_neg f1 f2 c==> f3 b0 f4 * / c==> c= csums f0 f1 f2 f3 c==> c==> f3 c= csums / cvector_neg * f0 b1 cvector_neg f1 f2 b0 c= c==> csums f0 f1 f2 csums / cvector_neg * f0 b1 cvector_neg f1 f2 c==> f3 b0 f4
+ |- (((((sums x) x0) s) ==> (((sums (\n. (vector_neg (x n)))) (vector_neg x0)) s)) = ((((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially) ==> T))
T c= c==> csums f0 f1 f2 csums / cvector_neg * f0 b0 cvector_neg f1 f2 c==> c--> / cvsum * * part cINTER f2 * * part c.. cNUMERAL c_0 b0 f0 f1 csequentially cT
+ |- ((((((sums x) x0) s) = (((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially)) ==> (((((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially) ==> ((((sums (\n. (vector_neg (x n)))) (vector_neg x0)) s) = q')) ==> (((((sums x) x0) s) ==> (((sums (\n. (vector_neg (x n)))) (vector_neg x0)) s)) = ((((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially) ==> q')))) = (((((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially) ==> ((((sums (\n. (vector_neg (x n)))) (vector_neg x0)) s) = q')) ==> (((((sums x) x0) s) ==> (((sums (\n. (vector_neg (x n)))) (vector_neg x0)) s)) = ((((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially) ==> q'))))
T c= c==> c= csums f0 f1 f2 c--> / cvsum * * part cINTER f2 * * part c.. cNUMERAL c_0 b0 f0 f1 csequentially c==> c==> c--> / cvsum * * part cINTER f2 * * part c.. cNUMERAL c_0 b0 f0 f1 csequentially c= csums / cvector_neg * f0 b0 cvector_neg f1 f2 f3 c= c==> csums f0 f1 f2 csums / cvector_neg * f0 b0 cvector_neg f1 f2 c==> c--> / cvsum * * part cINTER f2 * * part c.. cNUMERAL c_0 b0 f0 f1 csequentially f3 c==> c==> c--> / cvsum * * part cINTER f2 * * part c.. cNUMERAL c_0 b0 f0 f1 csequentially c= csums / cvector_neg * f0 b0 cvector_neg f1 f2 f3 c= c==> csums f0 f1 f2 csums / cvector_neg * f0 b0 cvector_neg f1 f2 c==> c--> / cvsum * * part cINTER f2 * * part c.. cNUMERAL c_0 b0 f0 f1 csequentially f3
+ (((--> f) l) net) |- ((((--> f) l) net) /\ ((((--> (\x. (vector_neg (f x)))) (vector_neg l)) net) = T))
T c==> c--> f0 f1 f2 c/\ c--> f0 f1 f2 c= c--> / cvector_neg * f0 b0 cvector_neg f1 f2 cT
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
- |- ((FINITE (s INTER (m .. n))) = T)
T c= cFINITE * * part cINTER f0 * * part c.. f1 f2 cT
+ |- ((((((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially) ==> ((((sums (\n. (vector_neg (x n)))) (vector_neg x0)) s) = T)) ==> (((((sums x) x0) s) ==> (((sums (\n. (vector_neg (x n)))) (vector_neg x0)) s)) = ((((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially) ==> T))) = (((((sums x) x0) s) ==> (((sums (\n. (vector_neg (x n)))) (vector_neg x0)) s)) = ((((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially) ==> T)))
T c= c==> c==> c--> / cvsum * * part cINTER f0 * * part c.. cNUMERAL c_0 b0 f1 f2 csequentially c= csums / cvector_neg * f1 b0 cvector_neg f2 f0 cT c= c==> csums f1 f2 f0 csums / cvector_neg * f1 b0 cvector_neg f2 f0 c==> c--> / cvsum * * part cINTER f0 * * part c.. cNUMERAL c_0 b0 f1 f2 csequentially cT c= c==> csums f1 f2 f0 csums / cvector_neg * f1 b0 cvector_neg f2 f0 c==> c--> / cvsum * * part cINTER f0 * * part c.. cNUMERAL c_0 b0 f1 f2 csequentially cT
- |- ((\n. (FINITE (s INTER (m .. n)))) n)
T * / cFINITE * * part cINTER f0 * * part c.. f1 b0 f2
- |- (((!m. (!n. (FINITE (s INTER (m .. n))))) ==> ((\m. (!n. (FINITE (s INTER (m .. n))))) m)) = ((\m. (!n. (FINITE (s INTER (m .. n))))) m))
T c= c==> ! ! cFINITE * * part cINTER f0 * * part c.. b0 b1 * / ! cFINITE * * part cINTER f0 * * part c.. b0 b1 f1 * / ! cFINITE * * part cINTER f0 * * part c.. b0 b1 f1
- |- ((\m. (!n. (FINITE (s INTER (m .. n))))) m)
T * / ! cFINITE * * part cINTER f0 * * part c.. b0 b1 f1
- |- (((!s. (!m. (!n. (FINITE (s INTER (m .. n)))))) ==> ((\s. (!m. (!n. (FINITE (s INTER (m .. n)))))) s)) = ((\s. (!m. (!n. (FINITE (s INTER (m .. n)))))) s))
T c= c==> ! ! ! cFINITE * * part cINTER b0 * * part c.. b1 b2 * / ! ! cFINITE * * part cINTER b0 * * part c.. b1 b2 f0 * / ! ! cFINITE * * part cINTER b0 * * part c.. b1 b2 f0
- (((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially) |- ((((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially) = T)
T c==> c--> / cvsum * * part cINTER f0 * * part c.. cNUMERAL c_0 b0 f1 f2 csequentially c= c--> / cvsum * * part cINTER f0 * * part c.. cNUMERAL c_0 b0 f1 f2 csequentially cT
- |- (FINITE (s INTER (m .. n)))
T cFINITE * * part cINTER f0 * * part c.. f1 f2
- |- (((!n. (FINITE (s INTER (m .. n)))) ==> ((\n. (FINITE (s INTER (m .. n)))) n)) = ((\n. (FINITE (s INTER (m .. n)))) n))
T c= c==> ! cFINITE * * part cINTER f0 * * part c.. f1 b0 * / cFINITE * * part cINTER f0 * * part c.. f1 b0 f2 * / cFINITE * * part cINTER f0 * * part c.. f1 b0 f2
- (((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially) |- (T = (((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially))
T c==> c--> / cvsum * * part cINTER f0 * * part c.. cNUMERAL c_0 b0 f1 f2 csequentially c= cT c--> / cvsum * * part cINTER f0 * * part c.. cNUMERAL c_0 b0 f1 f2 csequentially
