N Hojodcm.mem_ztrans_rtrans_v0
C |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2
D I_DEF
A |- (I = (\x. x))
T c= part cI / b0
D FST
A |- (!x. (!y. ((FST (x , y)) = x)))
T c= cFST c, f0 f1 f0
D SND
A |- (!x. (!y. ((SND (x , y)) = y)))
T c= cSND c, f0 f1 f1
D Fan.POWER_0
A |- (!f. (((POWER f) (NUMERAL _0)) = I))
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
D Tame_defs2.ntrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))))))
T c= cntrans f0 f1 f2 f3 f4 cFST cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2
D Tame_defs2.rtrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))))
T c= crtrans f0 f1 f2 f3 f4 cSND cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2
D Tame_defs2.ztrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))
T c= cztrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3
D Tame_list.HQYMRTX1_list
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x)))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c/\ cMEM cl'z f0 f1 f2 f3 f2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f2 f3 c~ c= cl'z f0 f1 f2 f3 cPOWER * part cf_list f0 b0 f3
- |- ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)
T * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
+ (good_list L), (good_list_nodes L), (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))) |- ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2
+ |- (((!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) ==> ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i)) = ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i))
T c= c==> ! c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4 * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((f_list L) x) = ((next_el ((rotate_to r) x)) x))))))) |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((f_list L) x) = ((next_el ((rotate_to r) x)) x))))))) L)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 c= cf_list b0 b3 cnext_el crotate_to b2 b3 b3 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 c= cf_list b0 b3 cnext_el crotate_to b2 b3 b3 f0
- |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
- |- ((?y. ((((l'y L) r) x) = y)) ==> (?y. ((((l'y L) r) x) = y)))
T c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
- |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L))
T c= c==> ! ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((f_list L) x) = ((next_el ((rotate_to r) x)) x))))))) |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((f_list L) x) = ((next_el ((rotate_to r) x)) x))))) r)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 c= cf_list b0 b3 cnext_el crotate_to b2 b3 b3 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 b0 b1 c= cf_list f0 b1 cnext_el crotate_to b0 b1 b1 f2
- (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) = T)
T c==> cis_restricted chypermap_of_list f0 c= cis_restricted chypermap_of_list f0 cT
- |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
- ((\y. ((((l'y L) r) x) = y)) y) |- ((((((l'y L) r) x) = y) ==> ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r)) = ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c= c==> c= cl'y f0 f1 f2 f3 cMEM cl'z f0 cntrans f0 f4 f1 f2 cNUMERAL c_0 crtrans f0 f4 f1 f2 cNUMERAL c_0 f2 f1 cMEM cl'z f0 cntrans f0 f4 f1 f2 cNUMERAL c_0 crtrans f0 f4 f1 f2 cNUMERAL c_0 f2 f1
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((f_list L) x) = ((next_el ((rotate_to r) x)) x))))))) |- (((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((f_list L) x) = ((next_el ((rotate_to r) x)) x)))))) ==> ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((f_list L) x) = ((next_el ((rotate_to r) x)) x)))))) N)) = ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((f_list L) x) = ((next_el ((rotate_to r) x)) x)))))) N))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 c= cf_list b0 b3 cnext_el crotate_to b2 b3 b3 c= c==> ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 b0 b1 b2 c= cf_list f0 b2 cnext_el crotate_to b1 b2 b2 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 b0 b1 b2 c= cf_list f0 b2 cnext_el crotate_to b1 b2 b2 f1 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 b0 b1 b2 c= cf_list f0 b2 cnext_el crotate_to b1 b2 b2 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))) ==> ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c/\ c==> cfinal_list f0 f1 cflag_list f0 f2 c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 cMEM cl'z f0 cntrans f0 f2 f1 f3 cNUMERAL c_0 crtrans f0 f2 f1 f3 cNUMERAL c_0 f3 f1
+ |- ((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r))) = T)
T c= ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 b0 cNUMERAL c_0 f2 cT
+ |- (((!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) ==> ((\r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) r)) = ((\r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) r))
T c= c==> ! ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 * / ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2 * / ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2
+ |- ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x)
T * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3
+ |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x)))))))) x)
T * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 c/\ cMEM cl'z f0 f1 f2 b0 f2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cSUC cl'm f0 f2 b0 c~ c= cl'z f0 f1 f2 b0 cPOWER * part cf_list f0 b1 b0 f3
+ |- ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N)
T * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- |- (((!x'. (((\y. ((((l'y L) r) x) = y)) x') ==> (?y. ((((l'y L) r) x) = y)))) ==> ((?y. ((((l'y L) r) x) = y)) ==> (?y. ((((l'y L) r) x) = y)))) = ((?y. ((((l'y L) r) x) = y)) ==> (?y. ((((l'y L) r) x) = y))))
T c= c==> ! c==> * / c= cl'y f0 f1 f2 b1 b0 c? / c= cl'y f0 f1 f2 b1 c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0 c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) /\ ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cmarked_list f0 f4 f1 f2 c/\ c= cl'y f0 f1 f2 f3 cMEM cl'z f0 cntrans f0 f4 f1 f2 cNUMERAL c_0 crtrans f0 f4 f1 f2 cNUMERAL c_0 f2 f1
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((f_list L) x) = ((next_el ((rotate_to r) x)) x))))))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((f_list L) x) = ((next_el ((rotate_to r) x)) x))))))) /\ ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 c= cf_list b0 b3 cnext_el crotate_to b2 b3 b3 c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c/\ ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 c= cf_list b0 b3 cnext_el crotate_to b2 b3 b3 cMEM cl'z f0 cntrans f0 f2 f1 f3 cNUMERAL c_0 crtrans f0 f2 f1 f3 cNUMERAL c_0 f3 f1
- |- (((!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) ==> ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)) = ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f))
T c= c==> ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
- |- (((LET f) x) = (f x))
T c= cLET f0 f1 * f0 f1
- |- ((((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))) ==> ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r)) = (((((marked_list L) N) r) x) ==> ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r)))
T c= c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3 cMEM cl'z f0 cntrans f0 f1 f2 f3 cNUMERAL c_0 crtrans f0 f1 f2 f3 cNUMERAL c_0 f3 f2 c==> cmarked_list f0 f1 f2 f3 cMEM cl'z f0 cntrans f0 f1 f2 f3 cNUMERAL c_0 crtrans f0 f1 f2 f3 cNUMERAL c_0 f3 f2
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- |- (?y. ((((l'y L) r) x) = y))
T c? / c= cl'y f0 f1 f2 b0
- |- ((!i. t) = t)
T c= ! f0 f0
+ |- ((\x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))) x)
T * / ! c= crtrans f0 f1 f2 b0 b1 cSND cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
- |- ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)
T * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
- |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
+ |- (((!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) ==> ((\N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) N)) = ((\N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) N))
T c= c==> ! ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 * / ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1 * / ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1
- |- ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)
T * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ |- ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L)
T * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
- |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 cMEM cztrans f0 f2 f1 f3 cNUMERAL c_0 f1
+ |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)) = T)
T c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 cT
+ |- (((!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) ==> ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x)) = ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x))
T c= c==> ! ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3 * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
+ |- ((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r))))) = T)
T c= ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b1 cT
- |- (((!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) ==> ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)) = ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x))
T c= c==> ! c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
- ((normal_list L) N) |- (((normal_list L) N) = T)
T c==> cnormal_list f0 f1 c= cnormal_list f0 f1 cT
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- |- (((((l'y L) r) x) = y) = ((\y. ((((l'y L) r) x) = y)) y))
T c= c= cl'y f0 f1 f2 f3 * / c= cl'y f0 f1 f2 b0 f3
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((f_list L) x) = ((next_el ((rotate_to r) x)) x))))))) |- (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((f_list L) x) = ((next_el ((rotate_to r) x)) x))))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 c= cf_list b0 b3 cnext_el crotate_to b2 b3 b3 ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 b0 b1 b2 c= cf_list f0 b2 cnext_el crotate_to b1 b2 b2
- |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- |- ((\j. ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))) j)
T * / c= cPOWER * * part ctransform_list f0 f1 b0 c, f2 f3 c, cntrans f0 f2 f3 f1 b0 crtrans f0 f2 f3 f1 b0 f4
- (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((((f_list L) x) = ((next_el ((rotate_to r) x)) x)) ==> ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r)) = ((((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((f_list L) x) = ((next_el ((rotate_to r) x)) x))) ==> ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r)))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c= c==> c= cf_list f0 f3 cnext_el crotate_to f2 f3 f3 cMEM cl'z f0 cntrans f0 f1 f2 f3 cNUMERAL c_0 crtrans f0 f1 f2 f3 cNUMERAL c_0 f3 f2 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 c= cf_list f0 f3 cnext_el crotate_to f2 f3 f3 cMEM cl'z f0 cntrans f0 f1 f2 f3 cNUMERAL c_0 crtrans f0 f1 f2 f3 cNUMERAL c_0 f3 f2
- |- (!y. (((\y. ((((l'y L) r) x) = y)) y) ==> (?y. ((((l'y L) r) x) = y))))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0
- |- ((LET_END t) = t)
T c= cLET_END f0 f0
+ |- (((!f. (((POWER f) (NUMERAL _0)) = I)) ==> ((\f. (((POWER f) (NUMERAL _0)) = I)) f)) = ((\f. (((POWER f) (NUMERAL _0)) = I)) f))
T c= c==> ! c= * * part cPOWER b0 cNUMERAL c_0 part cI * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0 * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0
+ |- ((\i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))) i)
T * / c= crtrans f0 f1 f2 f3 b0 cSND cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4
- ((((l'y L) r) x) = y) |- ((\y. ((((l'y L) r) x) = y)) y)
T c==> c= cl'y f0 f1 f2 f3 * / c= cl'y f0 f1 f2 b0 f3
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x))))))) ==> ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c~ cfinal_list f0 f1 c/\ cMEM cl'z f0 f2 f1 f3 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f3 c~ c= cl'z f0 f2 f1 f3 cPOWER * part cf_list f0 b0 f3 cMEM cl'z f0 cntrans f0 f2 f1 f3 cNUMERAL c_0 crtrans f0 f2 f1 f3 cNUMERAL c_0 f3 f1
+ |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x))))))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c/\ cMEM cl'z b0 b1 b2 b3 b2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cSUC cl'm b0 b2 b3 c~ c= cl'z b0 b1 b2 b3 cPOWER * part cf_list b0 b4 b3 f0
+ |- (((!L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))))) ==> ((\L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))))) L)) = ((\L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))))) L))
T c= c==> ! ! ! ! ! c= crtrans b0 b1 b2 b3 b4 cSND cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 * / ! ! ! ! c= crtrans b0 b1 b2 b3 b4 cSND cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0 * / ! ! ! ! c= crtrans b0 b1 b2 b3 b4 cSND cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((f_list L) x) = ((next_el ((rotate_to r) x)) x))))))) |- (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((f_list L) x) = ((next_el ((rotate_to r) x)) x)))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 c= cf_list b0 b3 cnext_el crotate_to b2 b3 b3 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 c= cf_list f0 f3 cnext_el crotate_to f2 f3 f3
- |- (((((l'y L) r) x) = y) ==> (?y. ((((l'y L) r) x) = y)))
T c==> c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0
- |- (((((l'y L) r) x) = (((l'y L) r) x)) = ((\y. ((((l'y L) r) x) = y)) (((l'y L) r) x)))
T c= c= cl'y f0 f1 f2 cl'y f0 f1 f2 * / c= cl'y f0 f1 f2 b0 cl'y f0 f1 f2
+ |- (((!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) ==> ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x)) = ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x))
T c= c==> ! ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3 * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3
- |- (((!f. (!x. (((LET f) x) = (f x)))) ==> ((\f. (!x. (((LET f) x) = (f x)))) f)) = ((\f. (!x. (((LET f) x) = (f x)))) f))
T c= c==> ! ! c= cLET b0 b1 * b0 b1 * / ! c= cLET b0 b1 * b0 b1 f0 * / ! c= cLET b0 b1 * b0 b1 f0
+ |- (((!L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) ==> ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L)) = ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L))
T c= c==> ! ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0 * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
+ (good_list_nodes L) |- ((good_list_nodes L) = T)
T c==> cgood_list_nodes f0 c= cgood_list_nodes f0 cT
+ |- ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x)))))))))) N)
T * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 c/\ cMEM cl'z f0 b0 b1 b2 b1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cSUC cl'm f0 b1 b2 c~ c= cl'z f0 b0 b1 b2 cPOWER * part cf_list f0 b3 b2 f1
- |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x)
T * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
- (good_list L), (good_list_nodes L) |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((f_list L) x) = ((next_el ((rotate_to r) x)) x)))) = (\x. (((((marked_list L) N) r) x) ==> (((f_list L) x) = ((next_el ((rotate_to r) x)) x)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c= / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 b0 c= cf_list f0 b0 cnext_el crotate_to f2 b0 b0 / c==> cmarked_list f0 f1 f2 b0 c= cf_list f0 b0 cnext_el crotate_to f2 b0 b0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (!y. (((\y. ((((l'y L) r) x) = y)) y) ==> ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 ! c==> * / c= cl'y f0 f1 f3 b1 b0 cMEM cl'z f0 cntrans f0 f2 f1 f3 cNUMERAL c_0 crtrans f0 f2 f1 f3 cNUMERAL c_0 f3 f1
- |- (((?y. ((((l'y L) r) x) = y)) ==> ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r)) = ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r))
T c= c==> c? / c= cl'y f0 f1 f2 b0 cMEM cl'z f0 cntrans f0 f3 f1 f2 cNUMERAL c_0 crtrans f0 f3 f1 f2 cNUMERAL c_0 f2 f1 cMEM cl'z f0 cntrans f0 f3 f1 f2 cNUMERAL c_0 crtrans f0 f3 f1 f2 cNUMERAL c_0 f2 f1
+ |- (((!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x))))))))) ==> ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x))))))))) r)) = ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x))))))))) r))
T c= c==> ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 c/\ cMEM cl'z f0 f1 b0 b1 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cSUC cl'm f0 b0 b1 c~ c= cl'z f0 f1 b0 b1 cPOWER * part cf_list f0 b2 b1 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 c/\ cMEM cl'z f0 f1 b0 b1 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cSUC cl'm f0 b0 b1 c~ c= cl'z f0 f1 b0 b1 cPOWER * part cf_list f0 b2 b1 f2 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 c/\ cMEM cl'z f0 f1 b0 b1 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cSUC cl'm f0 b0 b1 c~ c= cl'z f0 f1 b0 b1 cPOWER * part cf_list f0 b2 b1 f2
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r)
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 cMEM cl'z f0 cntrans f0 f2 f1 f3 cNUMERAL c_0 crtrans f0 f2 f1 f3 cNUMERAL c_0 f3 f1
- |- (((POWER f) (SUC n)) = (((POWER f) n) o f))
T c= * * part cPOWER f0 cSUC f1 * * part co * * part cPOWER f0 f1 f0
+ |- (((!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))) ==> ((\r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))) r)) = ((\r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))) r))
T c= c==> ! ! ! c= cztrans f0 f1 b0 b1 b2 cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 * / ! ! c= cztrans f0 f1 b0 b1 b2 cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 f2 * / ! ! c= cztrans f0 f1 b0 b1 b2 cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 f2
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x))))))) ==> ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r)) = ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r))
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c/\ cMEM cl'z f0 f1 f2 f3 f2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f2 f3 c~ c= cl'z f0 f1 f2 f3 cPOWER * part cf_list f0 b0 f3 cMEM cl'z f0 cntrans f0 f1 f2 f3 cNUMERAL c_0 crtrans f0 f1 f2 f3 cNUMERAL c_0 f3 f2 cMEM cl'z f0 cntrans f0 f1 f2 f3 cNUMERAL c_0 crtrans f0 f1 f2 f3 cNUMERAL c_0 f3 f2
- |- (((!n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) ==> ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n)) = ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n))
T c= c==> ! c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1 * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1
+ |- (((!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) ==> ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N)) = ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N))
T c= c==> ! ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1 * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1
+ |- (((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x)))))))))) ==> ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x)))))))))) N)) = ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x)))))))))) N))
T c= c==> ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 c/\ cMEM cl'z f0 b0 b1 b2 b1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cSUC cl'm f0 b1 b2 c~ c= cl'z f0 b0 b1 b2 cPOWER * part cf_list f0 b3 b2 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 c/\ cMEM cl'z f0 b0 b1 b2 b1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cSUC cl'm f0 b1 b2 c~ c= cl'z f0 b0 b1 b2 cPOWER * part cf_list f0 b3 b2 f1 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 c/\ cMEM cl'z f0 b0 b1 b2 b1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cSUC cl'm f0 b1 b2 c~ c= cl'z f0 b0 b1 b2 cPOWER * part cf_list f0 b3 b2 f1
+ |- (((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r) = ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r))
T c= cMEM cl'z f0 cntrans f0 f1 f2 f3 cNUMERAL c_0 crtrans f0 f1 f2 f3 cNUMERAL c_0 f3 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2
+ (good_list L), (good_list_nodes L), ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))) |- ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x), ((\y. ((((l'y L) r) x) = y)) y) |- (((\y. ((((l'y L) r) x) = y)) y) /\ ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> * / c= cl'y f0 f1 f3 b0 f4 c/\ * / c= cl'y f0 f1 f3 b0 f4 cMEM cl'z f0 cntrans f0 f2 f1 f3 cNUMERAL c_0 crtrans f0 f2 f1 f3 cNUMERAL c_0 f3 f1
+ |- ((\i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))) i)
T * / c= cztrans f0 f1 f2 f3 b0 cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 f4
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((f_list L) x) = ((next_el ((rotate_to r) x)) x))) ==> ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f2 f1 f3 c= cf_list f0 f3 cnext_el crotate_to f1 f3 f3 cMEM cl'z f0 cntrans f0 f2 f1 f3 cNUMERAL c_0 crtrans f0 f2 f1 f3 cNUMERAL c_0 f3 f1
+ |- (((!L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))))) ==> ((\L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))))) L)) = ((\L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))))) L))
T c= c==> ! ! ! ! ! c= cztrans b0 b1 b2 b3 b4 cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 * / ! ! ! ! c= cztrans b0 b1 b2 b3 b4 cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 f0 * / ! ! ! ! c= cztrans b0 b1 b2 b3 b4 cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((((\y. ((((l'y L) r) x) = y)) y) ==> ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r)) = T)
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c= c==> * / c= cl'y f0 f1 f3 b0 f4 cMEM cl'z f0 cntrans f0 f2 f1 f3 cNUMERAL c_0 crtrans f0 f2 f1 f3 cNUMERAL c_0 f3 f1 cT
+ |- ((!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))) = T)
T c= ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cztrans f0 f1 b0 b1 cNUMERAL c_0 b0 cT
+ |- ((\L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))))) L)
T * / ! ! ! ! c= cztrans b0 b1 b2 b3 b4 cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 f0
- |- (((!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) ==> ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)) = ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r))
T c= c==> ! ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2 * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
+ (~ ((final_list L) r)) |- (((final_list L) r) = F)
T c==> c~ cfinal_list f0 f1 c= cfinal_list f0 f1 cF
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((f_list L) x) = ((next_el ((rotate_to r) x)) x))))))) |- (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((f_list L) x) = ((next_el ((rotate_to r) x)) x))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 c= cf_list b0 b3 cnext_el crotate_to b2 b3 b3 ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 b0 c= cf_list f0 b0 cnext_el crotate_to f2 b0 b0
- |- (((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((f_list L) x) = ((next_el ((rotate_to r) x)) x))))))) ==> ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r)) = ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r))
T c= c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 c= cf_list b0 b3 cnext_el crotate_to b2 b3 b3 cMEM cl'z f0 cntrans f0 f1 f2 f3 cNUMERAL c_0 crtrans f0 f1 f2 f3 cNUMERAL c_0 f3 f2 cMEM cl'z f0 cntrans f0 f1 f2 f3 cNUMERAL c_0 crtrans f0 f1 f2 f3 cNUMERAL c_0 f3 f2
+ |- (((!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))) ==> ((\r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))) r)) = ((\r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))) r))
T c= c==> ! ! ! c= cntrans f0 f1 b0 b1 b2 cFST cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 * / ! ! c= cntrans f0 f1 b0 b1 b2 cFST cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2 * / ! ! c= cntrans f0 f1 b0 b1 b2 cFST cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2
- ((((s_flag_list L) N) r) x) |- (((((s_flag_list L) N) r) x) = T)
T c==> cs_flag_list f0 f1 f2 f3 c= cs_flag_list f0 f1 f2 f3 cT
+ |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x))))))))) r)
T * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 c/\ cMEM cl'z f0 f1 b0 b1 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cSUC cl'm f0 b0 b1 c~ c= cl'z f0 f1 b0 b1 cPOWER * part cf_list f0 b2 b1 f2
- ((\y. ((((l'y L) r) x) = y)) y) |- ((((((l'y L) r) x) = y) ==> (?y. ((((l'y L) r) x) = y))) = (?y. ((((l'y L) r) x) = y)))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c= c==> c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
- |- ((((\y. ((((l'y L) r) x) = y)) y) ==> (?y. ((((l'y L) r) x) = y))) = T)
T c= c==> * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0 cT
+ |- (((!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))) ==> ((\x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))) x)) = ((\x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))) x))
T c= c==> ! ! c= crtrans f0 f1 f2 b0 b1 cSND cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 * / ! c= crtrans f0 f1 f2 b0 b1 cSND cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3 * / ! c= crtrans f0 f1 f2 b0 b1 cSND cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
+ |- (((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x))))))))))) ==> ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x))))))))))) L)) = ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x))))))))))) L))
T c= c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c/\ cMEM cl'z b0 b1 b2 b3 b2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cSUC cl'm b0 b2 b3 c~ c= cl'z b0 b1 b2 b3 cPOWER * part cf_list b0 b4 b3 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c/\ cMEM cl'z b0 b1 b2 b3 b2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cSUC cl'm b0 b2 b3 c~ c= cl'z b0 b1 b2 b3 cPOWER * part cf_list b0 b4 b3 f0 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c/\ cMEM cl'z b0 b1 b2 b3 b2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cSUC cl'm b0 b2 b3 c~ c= cl'z b0 b1 b2 b3 cPOWER * part cf_list b0 b4 b3 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((\y. ((((l'y L) r) x) = y)) y) ==> ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> * / c= cl'y f0 f1 f3 b0 f4 cMEM cl'z f0 cntrans f0 f2 f1 f3 cNUMERAL c_0 crtrans f0 f2 f1 f3 cNUMERAL c_0 f3 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((f_list L) x) = ((next_el ((rotate_to r) x)) x)), ((((marked_list L) N) r) x) |- ((((f_list L) x) = ((next_el ((rotate_to r) x)) x)) /\ ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cf_list f0 f2 cnext_el crotate_to f1 f2 f2 c==> cmarked_list f0 f3 f1 f2 c/\ c= cf_list f0 f2 cnext_el crotate_to f1 f2 f2 cMEM cl'z f0 cntrans f0 f3 f1 f2 cNUMERAL c_0 crtrans f0 f3 f1 f2 cNUMERAL c_0 f2 f1
- |- ((F ==> t) = T)
T c= c==> cF f0 cT
+ |- ((\N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))))) N)
T * / ! ! ! c= cntrans f0 b0 b1 b2 b3 cFST cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((f_list L) x) = ((next_el ((rotate_to r) x)) x))))))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 c= cf_list b0 b3 cnext_el crotate_to b2 b3 b3 c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 cMEM cl'z f0 cntrans f0 f2 f1 f3 cNUMERAL c_0 crtrans f0 f2 f1 f3 cNUMERAL c_0 f3 f1
+ |- ((\r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))) r)
T * / ! ! c= cntrans f0 f1 b0 b1 b2 cFST cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- ((\y. ((((l'y L) r) x) = y)) y) |- ((((l'y L) r) x) = y)
T c==> * / c= cl'y f0 f1 f2 b0 f3 c= cl'y f0 f1 f2 f3
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) ==> ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 cMEM cl'z f0 cntrans f0 f2 f1 f3 cNUMERAL c_0 crtrans f0 f2 f1 f3 cNUMERAL c_0 f3 f1
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((f_list L) x) = ((next_el ((rotate_to r) x)) x))))))) |- (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((f_list L) x) = ((next_el ((rotate_to r) x)) x)))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 c= cf_list b0 b3 cnext_el crotate_to b2 b3 b3 ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 b0 b1 c= cf_list f0 b1 cnext_el crotate_to b0 b1 b1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((!x'. (((\y. ((((l'y L) r) x) = y)) x') ==> ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r))) ==> ((?y. ((((l'y L) r) x) = y)) ==> ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r))) = ((?y. ((((l'y L) r) x) = y)) ==> ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c= c==> ! c==> * / c= cl'y f0 f1 f3 b1 b0 cMEM cl'z f0 cntrans f0 f2 f1 f3 cNUMERAL c_0 crtrans f0 f2 f1 f3 cNUMERAL c_0 f3 f1 c==> c? / c= cl'y f0 f1 f3 b0 cMEM cl'z f0 cntrans f0 f2 f1 f3 cNUMERAL c_0 crtrans f0 f2 f1 f3 cNUMERAL c_0 f3 f1 c==> c? / c= cl'y f0 f1 f3 b0 cMEM cl'z f0 cntrans f0 f2 f1 f3 cNUMERAL c_0 crtrans f0 f2 f1 f3 cNUMERAL c_0 f3 f1
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((f_list L) x) = ((next_el ((rotate_to r) x)) x))))))) |- ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((f_list L) x) = ((next_el ((rotate_to r) x)) x)))))) N)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 c= cf_list b0 b3 cnext_el crotate_to b2 b3 b3 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 b0 b1 b2 c= cf_list f0 b2 cnext_el crotate_to b1 b2 b2 f1
+ (good_list L), ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) |- ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)
T c==> cgood_list f0 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2
+ (good_list L) |- ((good_list L) = T)
T c==> cgood_list f0 c= cgood_list f0 cT
+ |- ((\r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) r)
T * / ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2
+ |- ((((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x)))))) ==> ((MEM ((((l'z L) N) r) x)) r))
T c==> c/\ cMEM cl'z f0 f1 f2 f3 f2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f2 f3 c~ c= cl'z f0 f1 f2 f3 cPOWER * part cf_list f0 b0 f3 cMEM cl'z f0 f1 f2 f3 f2
+ |- ((~ F) = T)
T c= c~ cF cT
+ (good_list L), ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))) |- ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)
T c==> cgood_list f0 c==> c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x)))))) ==> ((MEM ((((l'z L) N) r) x)) r)) = ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x))))))) ==> ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) r)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c= c==> c/\ cMEM cl'z f0 f2 f1 f3 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f3 c~ c= cl'z f0 f2 f1 f3 cPOWER * part cf_list f0 b0 f3 cMEM cl'z f0 f2 f1 f3 f1 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c~ cfinal_list f0 f1 c/\ cMEM cl'z f0 f2 f1 f3 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f3 c~ c= cl'z f0 f2 f1 f3 cPOWER * part cf_list f0 b0 f3 cMEM cl'z f0 cntrans f0 f2 f1 f3 cNUMERAL c_0 crtrans f0 f2 f1 f3 cNUMERAL c_0 f3 f1
+ |- ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i)
T * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4
+ |- (((!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))))) ==> ((\N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))))) N)) = ((\N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))))) N))
T c= c==> ! ! ! ! c= cntrans f0 b0 b1 b2 b3 cFST cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 * / ! ! ! c= cntrans f0 b0 b1 b2 b3 cFST cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1 * / ! ! ! c= cntrans f0 b0 b1 b2 b3 cFST cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1
+ |- (((!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))) ==> ((\i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))) i)) = ((\i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))) i))
T c= c==> ! c= crtrans f0 f1 f2 f3 b0 cSND cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 * / c= crtrans f0 f1 f2 f3 b0 cSND cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4 * / c= crtrans f0 f1 f2 f3 b0 cSND cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4
+ |- (((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x)))))))) ==> ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x)))))))) x)) = ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x)))))))) x))
T c= c==> ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 c/\ cMEM cl'z f0 f1 f2 b0 f2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cSUC cl'm f0 f2 b0 c~ c= cl'z f0 f1 f2 b0 cPOWER * part cf_list f0 b1 b0 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 c/\ cMEM cl'z f0 f1 f2 b0 f2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cSUC cl'm f0 f2 b0 c~ c= cl'z f0 f1 f2 b0 cPOWER * part cf_list f0 b1 b0 f3 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 c/\ cMEM cl'z f0 f1 f2 b0 f2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cSUC cl'm f0 f2 b0 c~ c= cl'z f0 f1 f2 b0 cPOWER * part cf_list f0 b1 b0 f3
+ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) |- (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) /\ ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c/\ c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2
+ |- ((\L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))))) L)
T * / ! ! ! ! c= crtrans b0 b1 b2 b3 b4 cSND cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
+ |- (((!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))) ==> ((\i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))) i)) = ((\i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))) i))
T c= c==> ! c= cztrans f0 f1 f2 f3 b0 cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 * / c= cztrans f0 f1 f2 f3 b0 cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 f4 * / c= cztrans f0 f1 f2 f3 b0 cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 f4
+ (good_list L), (good_list_nodes L), (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))), ((((marked_list L) N) r) x) |- ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c==> cmarked_list f0 f1 f2 f3 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2
+ |- ((\f. (((POWER f) (NUMERAL _0)) = I)) f)
T * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0
+ |- ((T /\ t) = t)
T c= c/\ cT f0 f0
+ (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x)))))) |- ((((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x)))))) /\ ((MEM ((((l'z L) N) r) x)) r))
T c==> c/\ cMEM cl'z f0 f1 f2 f3 f2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f2 f3 c~ c= cl'z f0 f1 f2 f3 cPOWER * part cf_list f0 b0 f3 c/\ c/\ cMEM cl'z f0 f1 f2 f3 f2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f2 f3 c~ c= cl'z f0 f1 f2 f3 cPOWER * part cf_list f0 b0 f3 cMEM cl'z f0 f1 f2 f3 f2
+ |- ((\r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))) r)
T * / ! ! c= cztrans f0 f1 b0 b1 b2 cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 f2
+ |- ((\N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) N)
T * / ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1
