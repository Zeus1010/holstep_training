N HOMOTOPIC_POINTS_EQ_PATH_COMPONENT
C |- (!s. (!a. (!b. ((((homotopic_loops s) (linepath (a , a))) (linepath (b , b))) = (((path_component s) a) b)))))
T c= chomotopic_loops f0 * part clinepath c, f1 f1 * part clinepath c, f2 f2 cpath_component f0 f1 f2
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_POS
A |- (!n. ((real_le (real_of_num (NUMERAL _0))) (real_of_num n)))
T creal_le creal_of_num cNUMERAL c_0 creal_of_num f0
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D vector_add
A |- (!x. (!y. (((vector_add x) y) = (lambdai. ((real_add (x $ i)) (y $ i))))))
T c= cvector_add f0 f1 clambda / creal_add c$ f0 b0 c$ f1 b0
D vector_mul
A |- (!c. (!x. (((% c) x) = (lambdai. ((real_mul c) (x $ i))))))
T c= c% f0 f1 clambda / creal_mul f0 c$ f1 b0
D DROP_VEC
A |- (!n. ((drop (vec n)) = (real_of_num n)))
T c= cdrop cvec f0 creal_of_num f0
D IN_INTERVAL_1
A |- (!a. (!b. (!x. (((x IN (closed_interval ((CONS (a , b)) NIL))) = (((real_le (drop a)) (drop x)) /\ ((real_le (drop x)) (drop b)))) /\ ((x IN (open_interval (a , b))) = (((real_lt (drop a)) (drop x)) /\ ((real_lt (drop x)) (drop b))))))))
T c/\ c= cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c/\ creal_le cdrop f1 cdrop f0 creal_le cdrop f0 cdrop f2 c= cIN f0 * part copen_interval c, f1 f2 c/\ creal_lt cdrop f1 cdrop f0 creal_lt cdrop f0 cdrop f2
D linepath
A |- (!a. (!b. ((linepath (a , b)) = (\x. ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (drop x))) a)) ((% (drop x)) b))))))
T c= * part clinepath c, f0 f1 / cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 cdrop b0 f0 c% cdrop b0 f1
D PATH_COMPONENT_IMP_HOMOTOPIC_POINTS
A |- (!s. (!a. (!b. ((((path_component s) a) b) ==> (((homotopic_loops s) (linepath (a , a))) (linepath (b , b)))))))
T c==> cpath_component f0 f1 f2 chomotopic_loops f0 * part clinepath c, f1 f1 * part clinepath c, f2 f2
D HOMOTOPIC_LOOPS_IMP_PATH_COMPONENT_VALUE
A |- (!s. (!p. (!q. (!t. (((((homotopic_loops s) p) q) /\ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((path_component s) (p t)) (q t)))))))
T c==> c/\ chomotopic_loops f0 f1 f2 cIN f3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component f0 * f1 f3 * f2 f3
- |- (T = ((((path_component s) a) b) ==> (((homotopic_loops s) (linepath (a , a))) (linepath (b , b)))))
T c= cT c==> cpath_component f0 f1 f2 chomotopic_loops f0 * part clinepath c, f1 f1 * part clinepath c, f2 f2
+ (!s. (!p. (!q. (!t. ((((homotopic_loops s) p) q) ==> ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t)))))))), (((homotopic_loops s) p) q) |- (((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t))) = T)
T c==> ! ! ! ! c==> chomotopic_loops b0 b1 b2 c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component b0 * b1 b3 * b2 b3 c==> chomotopic_loops f0 f1 f2 c= c==> cIN f3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component f0 * f1 f3 * f2 f3 cT
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (a $ i))) $ i)) ((lambdai. ((real_mul (real_of_num (NUMERAL _0))) (b $ i))) $ i))) $ i) = (a $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) a)) ((% (real_of_num (NUMERAL _0))) b)) $ i) = (a $ i))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 b1 b0 c$ clambda / creal_mul creal_of_num cNUMERAL c_0 c$ f2 b1 b0 f0 c$ f1 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 c% creal_of_num cNUMERAL c_0 f2 f0 c$ f1 f0
- |- (((((path_component s) a) b) ==> (((homotopic_loops s) (linepath (a , a))) (linepath (b , b)))) = T)
T c= c==> cpath_component f0 f1 f2 chomotopic_loops f0 * part clinepath c, f1 f1 * part clinepath c, f2 f2 cT
+ |- (((((path_component s) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) a)) ((% (real_of_num (NUMERAL _0))) a))) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) b)) ((% (real_of_num (NUMERAL _0))) b))) ==> (((path_component s) a) b)) = ((((vec (NUMERAL _0)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) ((linepath (a , a)) (vec (NUMERAL _0)))) ((linepath (b , b)) (vec (NUMERAL _0))))) ==> (((path_component s) a) b)))
T c= c==> cpath_component f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 c% creal_of_num cNUMERAL c_0 f1 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f2 c% creal_of_num cNUMERAL c_0 f2 cpath_component f0 f1 f2 c==> c==> cIN cvec cNUMERAL c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component f0 clinepath c, f1 f1 cvec cNUMERAL c_0 clinepath c, f2 f2 cvec cNUMERAL c_0 cpath_component f0 f1 f2
+ (!s. (!p. (!q. (!t. ((((homotopic_loops s) p) q) ==> ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t)))))))) |- (((!p. (!q. (!t. ((((homotopic_loops s) p) q) ==> ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t))))))) ==> ((\p. (!q. (!t. ((((homotopic_loops s) p) q) ==> ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t))))))) p)) = ((\p. (!q. (!t. ((((homotopic_loops s) p) q) ==> ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t))))))) p))
T c==> ! ! ! ! c==> chomotopic_loops b0 b1 b2 c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component b0 * b1 b3 * b2 b3 c= c==> ! ! ! c==> chomotopic_loops f0 b0 b1 c==> cIN b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component f0 * b0 b2 * b1 b2 * / ! ! c==> chomotopic_loops f0 b0 b1 c==> cIN b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component f0 * b0 b2 * b1 b2 f1 * / ! ! c==> chomotopic_loops f0 b0 b1 c==> cIN b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component f0 * b0 b2 * b1 b2 f1
+ |- (((!s. (!p. (!q. ((((homotopic_loops s) p) q) ==> (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t)))))))) ==> ((\s. (!p. (!q. ((((homotopic_loops s) p) q) ==> (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t)))))))) s)) = ((\s. (!p. (!q. ((((homotopic_loops s) p) q) ==> (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t)))))))) s))
T c= c==> ! ! ! c==> chomotopic_loops b0 b1 b2 ! c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component b0 * b1 b3 * b2 b3 * / ! ! c==> chomotopic_loops b0 b1 b2 ! c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component b0 * b1 b3 * b2 b3 f0 * / ! ! c==> chomotopic_loops b0 b1 b2 ! c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component b0 * b1 b3 * b2 b3 f0
+ |- (((((homotopic_loops s) (linepath (a , a))) (linepath (b , b))) = (((path_component s) a) b)) = T)
T c= c= chomotopic_loops f0 * part clinepath c, f1 f1 * part clinepath c, f2 f2 cpath_component f0 f1 f2 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((homotopic_loops s) (linepath (a , a))) (linepath (b , b))) ==> (((path_component s) a) b))
T c==> chomotopic_loops f0 * part clinepath c, f1 f1 * part clinepath c, f2 f2 cpath_component f0 f1 f2
+ |- ((!b. ((((homotopic_loops s) (linepath (a , a))) (linepath (b , b))) = (((path_component s) a) b))) = T)
T c= ! c= chomotopic_loops f0 * part clinepath c, f1 f1 * part clinepath c, b0 b0 cpath_component f0 f1 b0 cT
+ |- ((\s. (!p. (!q. ((((homotopic_loops s) p) q) ==> (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t)))))))) s)
T * / ! ! c==> chomotopic_loops b0 b1 b2 ! c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component b0 * b1 b3 * b2 b3 f0
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (!s. (!p. (!q. (!t. ((((homotopic_loops s) p) q) ==> ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t)))))))) |- (!q. (!t. ((((homotopic_loops s) p) q) ==> ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t))))))
T c==> ! ! ! ! c==> chomotopic_loops b0 b1 b2 c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component b0 * b1 b3 * b2 b3 ! ! c==> chomotopic_loops f0 f1 b0 c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component f0 * f1 b1 * b0 b1
- |- ((a ==> (b ==> c)) ==> ((a ==> b) ==> (a ==> c)))
T c==> c==> f0 c==> f1 f2 c==> c==> f0 f1 c==> f0 f2
+ (!s. (!p. (!q. (!t. ((((homotopic_loops s) p) q) ==> ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t)))))))) |- ((\s. (!p. (!q. (!t. ((((homotopic_loops s) p) q) ==> ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t)))))))) s)
T c==> ! ! ! ! c==> chomotopic_loops b0 b1 b2 c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component b0 * b1 b3 * b2 b3 * / ! ! ! c==> chomotopic_loops b0 b1 b2 c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component b0 * b1 b3 * b2 b3 f0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
+ (!s. (!p. (!q. (!t. ((((homotopic_loops s) p) q) ==> ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t)))))))) |- ((!s. (!p. (!q. (!t. ((((homotopic_loops s) p) q) ==> ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t)))))))) /\ (!s. (!p. (!q. ((((homotopic_loops s) p) q) ==> (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t)))))))))
T c==> ! ! ! ! c==> chomotopic_loops b0 b1 b2 c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component b0 * b1 b3 * b2 b3 c/\ ! ! ! ! c==> chomotopic_loops b0 b1 b2 c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component b0 * b1 b3 * b2 b3 ! ! ! c==> chomotopic_loops b0 b1 b2 ! c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component b0 * b1 b3 * b2 b3
- |- ((!t. t) = t)
T c= ! f0 f0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!s. (!p. (!q. (!t. ((((homotopic_loops s) p) q) ==> ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t)))))))) ==> (!s. (!p. (!q. ((((homotopic_loops s) p) q) ==> (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t)))))))))
T c==> ! ! ! ! c==> chomotopic_loops b0 b1 b2 c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component b0 * b1 b3 * b2 b3 ! ! ! c==> chomotopic_loops b0 b1 b2 ! c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component b0 * b1 b3 * b2 b3
+ |- (((!x. (((x IN (closed_interval ((CONS (a , b)) NIL))) = (((real_le (drop a)) (drop x)) /\ ((real_le (drop x)) (drop b)))) /\ ((x IN (open_interval (a , b))) = (((real_lt (drop a)) (drop x)) /\ ((real_lt (drop x)) (drop b)))))) ==> ((\x. (((x IN (closed_interval ((CONS (a , b)) NIL))) = (((real_le (drop a)) (drop x)) /\ ((real_le (drop x)) (drop b)))) /\ ((x IN (open_interval (a , b))) = (((real_lt (drop a)) (drop x)) /\ ((real_lt (drop x)) (drop b)))))) x)) = ((\x. (((x IN (closed_interval ((CONS (a , b)) NIL))) = (((real_le (drop a)) (drop x)) /\ ((real_le (drop x)) (drop b)))) /\ ((x IN (open_interval (a , b))) = (((real_lt (drop a)) (drop x)) /\ ((real_lt (drop x)) (drop b)))))) x))
T c= c==> ! c/\ c= cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL c/\ creal_le cdrop f0 cdrop b0 creal_le cdrop b0 cdrop f1 c= cIN b0 * part copen_interval c, f0 f1 c/\ creal_lt cdrop f0 cdrop b0 creal_lt cdrop b0 cdrop f1 * / c/\ c= cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL c/\ creal_le cdrop f0 cdrop b0 creal_le cdrop b0 cdrop f1 c= cIN b0 * part copen_interval c, f0 f1 c/\ creal_lt cdrop f0 cdrop b0 creal_lt cdrop b0 cdrop f1 f2 * / c/\ c= cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL c/\ creal_le cdrop f0 cdrop b0 creal_le cdrop b0 cdrop f1 c= cIN b0 * part copen_interval c, f0 f1 c/\ creal_lt cdrop f0 cdrop b0 creal_lt cdrop b0 cdrop f1 f2
- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ (!s. (!p. (!q. (!t. ((((homotopic_loops s) p) q) ==> ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t)))))))) |- (!p. (!q. ((((homotopic_loops s) p) q) ==> (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t)))))))
T c==> ! ! ! ! c==> chomotopic_loops b0 b1 b2 c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component b0 * b1 b3 * b2 b3 ! ! c==> chomotopic_loops f0 b0 b1 ! c==> cIN b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component f0 * b0 b2 * b1 b2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) a)) ((% (real_of_num (NUMERAL _0))) b)) $ i) = (a $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 c% creal_of_num cNUMERAL c_0 f2 f0 c$ f1 f0
+ |- ((\b. ((linepath (a , b)) = (\x. ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (drop x))) a)) ((% (drop x)) b))))) b)
T * / c= * part clinepath c, f0 b0 / cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 cdrop b1 f0 c% cdrop b1 b0 f1
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (a $ i))) ((real_mul (real_of_num (NUMERAL _0))) (b $ i))) = (a $ i)) = (((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (a $ i))) $ i)) ((lambdai. ((real_mul (real_of_num (NUMERAL _0))) (b $ i))) $ i))) $ i) = (a $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 f0 creal_mul creal_of_num cNUMERAL c_0 c$ f2 f0 c$ f1 f0 c= c$ clambda / creal_add c$ clambda / creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 b1 b0 c$ clambda / creal_mul creal_of_num cNUMERAL c_0 c$ f2 b1 b0 f0 c$ f1 f0
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (((!b. ((linepath (a , b)) = (\x. ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (drop x))) a)) ((% (drop x)) b))))) ==> ((\b. ((linepath (a , b)) = (\x. ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (drop x))) a)) ((% (drop x)) b))))) b)) = ((\b. ((linepath (a , b)) = (\x. ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (drop x))) a)) ((% (drop x)) b))))) b))
T c= c==> ! c= * part clinepath c, f0 b0 / cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 cdrop b1 f0 c% cdrop b1 b0 * / c= * part clinepath c, f0 b0 / cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 cdrop b1 f0 c% cdrop b1 b0 f1 * / c= * part clinepath c, f0 b0 / cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 cdrop b1 f0 c% cdrop b1 b0 f1
+ |- ((\p. (!q. ((((homotopic_loops s) p) q) ==> (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t))))))) p)
T * / ! c==> chomotopic_loops f0 b0 b1 ! c==> cIN b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component f0 * b0 b2 * b1 b2 f1
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ |- (((!n. ((real_le (real_of_num (NUMERAL _0))) (real_of_num n))) ==> ((\n. ((real_le (real_of_num (NUMERAL _0))) (real_of_num n))) n)) = ((\n. ((real_le (real_of_num (NUMERAL _0))) (real_of_num n))) n))
T c= c==> ! creal_le creal_of_num cNUMERAL c_0 creal_of_num b0 * / creal_le creal_of_num cNUMERAL c_0 creal_of_num b0 f0 * / creal_le creal_of_num cNUMERAL c_0 creal_of_num b0 f0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (a $ i))) $ i)) ((lambdai. ((real_mul (real_of_num (NUMERAL _0))) (b $ i))) $ i))) $ i) = (a $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 b1 b0 c$ clambda / creal_mul creal_of_num cNUMERAL c_0 c$ f2 b1 b0 f0 c$ f1 f0
+ |- (((!a. (!b. ((((path_component s) a) b) ==> (((homotopic_loops s) (linepath (a , a))) (linepath (b , b)))))) ==> ((\a. (!b. ((((path_component s) a) b) ==> (((homotopic_loops s) (linepath (a , a))) (linepath (b , b)))))) a)) = ((\a. (!b. ((((path_component s) a) b) ==> (((homotopic_loops s) (linepath (a , a))) (linepath (b , b)))))) a))
T c= c==> ! ! c==> cpath_component f0 b0 b1 chomotopic_loops f0 * part clinepath c, b0 b0 * part clinepath c, b1 b1 * / ! c==> cpath_component f0 b0 b1 chomotopic_loops f0 * part clinepath c, b0 b0 * part clinepath c, b1 b1 f1 * / ! c==> cpath_component f0 b0 b1 chomotopic_loops f0 * part clinepath c, b0 b0 * part clinepath c, b1 b1 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) a)) ((% (real_of_num (NUMERAL _0))) b)) = a)
T c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f0 c% creal_of_num cNUMERAL c_0 f1 f0
+ |- ((\n. ((real_le (real_of_num (NUMERAL _0))) (real_of_num n))) n)
T * / creal_le creal_of_num cNUMERAL c_0 creal_of_num b0 f0
+ |- ((x IN (closed_interval ((CONS (a , b)) NIL))) = (((real_le (drop a)) (drop x)) /\ ((real_le (drop x)) (drop b))))
T c= cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c/\ creal_le cdrop f1 cdrop f0 creal_le cdrop f0 cdrop f2
- |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((\a. (!b. ((linepath (a , b)) = (\x. ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (drop x))) a)) ((% (drop x)) b)))))) a)
T * / ! c= * part clinepath c, b0 b1 / cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 cdrop b2 b0 c% cdrop b2 b1 f0
+ (!s. (!p. (!q. (!t. ((((homotopic_loops s) p) q) ==> ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t)))))))) |- (!t. ((((homotopic_loops s) p) q) ==> ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t)))))
T c==> ! ! ! ! c==> chomotopic_loops b0 b1 b2 c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component b0 * b1 b3 * b2 b3 ! c==> chomotopic_loops f0 f1 f2 c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component f0 * f1 b0 * f2 b0
+ |- (((!q. ((((homotopic_loops s) p) q) ==> (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t)))))) ==> ((\q. ((((homotopic_loops s) p) q) ==> (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t)))))) q)) = ((\q. ((((homotopic_loops s) p) q) ==> (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t)))))) q))
T c= c==> ! c==> chomotopic_loops f0 f1 b0 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component f0 * f1 b1 * b0 b1 * / c==> chomotopic_loops f0 f1 b0 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component f0 * f1 b1 * b0 b1 f2 * / c==> chomotopic_loops f0 f1 b0 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component f0 * f1 b1 * b0 b1 f2
+ (!s. (!p. (!q. (!t. ((((homotopic_loops s) p) q) ==> ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t)))))))) |- ((\q. (!t. ((((homotopic_loops s) p) q) ==> ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t)))))) q)
T c==> ! ! ! ! c==> chomotopic_loops b0 b1 b2 c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component b0 * b1 b3 * b2 b3 * / ! c==> chomotopic_loops f0 f1 b0 c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component f0 * f1 b1 * b0 b1 f2
+ (!s. (!p. (!q. (!t. ((((homotopic_loops s) p) q) ==> ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t)))))))) |- (((((homotopic_loops s) p) q) ==> (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t))))) = T)
T c==> ! ! ! ! c==> chomotopic_loops b0 b1 b2 c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component b0 * b1 b3 * b2 b3 c= c==> chomotopic_loops f0 f1 f2 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component f0 * f1 b0 * f2 b0 cT
+ |- ((\x. (((x IN (closed_interval ((CONS (a , b)) NIL))) = (((real_le (drop a)) (drop x)) /\ ((real_le (drop x)) (drop b)))) /\ ((x IN (open_interval (a , b))) = (((real_lt (drop a)) (drop x)) /\ ((real_lt (drop x)) (drop b)))))) x)
T * / c/\ c= cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL c/\ creal_le cdrop f0 cdrop b0 creal_le cdrop b0 cdrop f1 c= cIN b0 * part copen_interval c, f0 f1 c/\ creal_lt cdrop f0 cdrop b0 creal_lt cdrop b0 cdrop f1 f2
- |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((((homotopic_loops s) p) q) ==> (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((path_component s) (p t)) (q t)))))
T c==> chomotopic_loops f0 f1 f2 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath_component f0 * f1 b0 * f2 b0
+ |- (((!n. ((drop (vec n)) = (real_of_num n))) ==> ((\n. ((drop (vec n)) = (real_of_num n))) n)) = ((\n. ((drop (vec n)) = (real_of_num n))) n))
T c= c==> ! c= cdrop cvec b0 creal_of_num b0 * / c= cdrop cvec b0 creal_of_num b0 f0 * / c= cdrop cvec b0 creal_of_num b0 f0
+ |- ((\n. ((drop (vec n)) = (real_of_num n))) n)
T * / c= cdrop cvec b0 creal_of_num b0 f0
- |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) ==> F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (a $ i))) $ i)) ((lambdai. ((real_mul (real_of_num (NUMERAL _0))) (b $ i))) $ i))) $ i) = (a $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 b1 b0 c$ clambda / creal_mul creal_of_num cNUMERAL c_0 c$ f2 b1 b0 f0 c$ f1 f0
+ |- ((\a. (!b. (!x. (((x IN (closed_interval ((CONS (a , b)) NIL))) = (((real_le (drop a)) (drop x)) /\ ((real_le (drop x)) (drop b)))) /\ ((x IN (open_interval (a , b))) = (((real_lt (drop a)) (drop x)) /\ ((real_lt (drop x)) (drop b)))))))) a)
T * / ! ! c/\ c= cIN b2 * part cclosed_interval cCONS c, b0 b1 cNIL c/\ creal_le cdrop b0 cdrop b2 creal_le cdrop b2 cdrop b1 c= cIN b2 * part copen_interval c, b0 b1 c/\ creal_lt cdrop b0 cdrop b2 creal_lt cdrop b2 cdrop b1 f0
- |- ((x IN (open_interval (a , b))) = (((real_lt (drop a)) (drop x)) /\ ((real_lt (drop x)) (drop b))))
T c= cIN f0 * part copen_interval c, f1 f2 c/\ creal_lt cdrop f1 cdrop f0 creal_lt cdrop f0 cdrop f2
- |- ((~ (((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (a $ i))) ((real_mul (real_of_num (NUMERAL _0))) (b $ i))) = (a $ i))) ==> F)
T c==> c~ c= creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f0 f1 creal_mul creal_of_num cNUMERAL c_0 c$ f2 f1 c$ f0 f1 cF
- |- (((real_gt x) y) = ((real_lt y) x))
T c= creal_gt f0 f1 creal_lt f1 f0
+ (((homotopic_loops s) (linepath (a , a))) (linepath (b , b))) |- ((((homotopic_loops s) (linepath (a , a))) (linepath (b , b))) /\ (((path_component s) a) b))
T c==> chomotopic_loops f0 * part clinepath c, f1 f1 * part clinepath c, f2 f2 c/\ chomotopic_loops f0 * part clinepath c, f1 f1 * part clinepath c, f2 f2 cpath_component f0 f1 f2
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (g i)))) ==> (((sum (m .. n)) f) = ((sum (m .. n)) g)))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 f2 csum * * part c.. f0 f1 f3
- |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((real_neg ((real_sub ((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (a $ i))) ((real_mul (real_of_num (NUMERAL _0))) (b $ i)))) (a $ i))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f0 f1 creal_mul creal_of_num cNUMERAL c_0 c$ f2 f1 c$ f0 f1 creal_of_num cNUMERAL c_0
- |- ((((~ (((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (a $ i))) ((real_mul (real_of_num (NUMERAL _0))) (b $ i))) = (a $ i))) ==> F) ==> (((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (a $ i))) ((real_mul (real_of_num (NUMERAL _0))) (b $ i))) = (a $ i))) = (((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (a $ i))) ((real_mul (real_of_num (NUMERAL _0))) (b $ i))) = (a $ i)))
T c= c==> c==> c~ c= creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f0 f1 creal_mul creal_of_num cNUMERAL c_0 c$ f2 f1 c$ f0 f1 cF c= creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f0 f1 creal_mul creal_of_num cNUMERAL c_0 c$ f2 f1 c$ f0 f1 c= creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f0 f1 creal_mul creal_of_num cNUMERAL c_0 c$ f2 f1 c$ f0 f1
- (~ (((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (a $ i))) ((real_mul (real_of_num (NUMERAL _0))) (b $ i))) = (a $ i))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f0 f1 creal_mul creal_of_num cNUMERAL c_0 c$ f2 f1 c$ f0 f1 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) |- F
T c==> c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- (~ (((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (a $ i))) ((real_mul (real_of_num (NUMERAL _0))) (b $ i))) = (a $ i))) |- ((~ (((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (a $ i))) ((real_mul (real_of_num (NUMERAL _0))) (b $ i))) = (a $ i))) /\ F)
T c==> c~ c= creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f0 f1 creal_mul creal_of_num cNUMERAL c_0 c$ f2 f1 c$ f0 f1 c/\ c~ c= creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f0 f1 creal_mul creal_of_num cNUMERAL c_0 c$ f2 f1 c$ f0 f1 cF
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 f2 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
