N Hypermap_and_fan.TRIANGULAR_FACE
C |- (!V. (!E. (!v. (!w. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (((v , w) IN (dart1_of_fan (V , E))) /\ ((CARD ((face (hypermap_of_fan (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))))) ==> ((LET (\w'. (LET_END ((((face (hypermap_of_fan (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)))))))
T c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 c/\ cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c= cCARD * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 cLET / cLET_END c/\ c= * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 b0 * * part cINSERT c, b0 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 b0 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 b0 f2 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D FUN_EQ_THM
A |- (!f. (!g. ((f = g) = (!x. ((f x) = (g x))))))
T c= c= f0 f1 ! c= * f0 b0 * f1 b0
D SELECT_AX
A |- (!P. (!x. ((P x) ==> (P (@ P)))))
T c==> * f0 f1 * f0 c@ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D o_THM
A |- (!f. (!g. (!x. (((f o g) x) = (f (g x))))))
T c= co f0 f1 f2 * f0 * f1 f2
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D GABS_DEF
A |- (!P. ((GABS P) = (@ P)))
T c= cGABS f0 c@ f0
D GEQ_DEF
A |- (!a. (!b. (((GEQ a) b) = (a = b))))
T c= cGEQ f0 f1 c= f0 f1
D PAIR_EQ
A |- (!x. (!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))))
T c= c= c, f0 f1 c, f2 f3 c/\ c= f0 f2 c= f1 f3
D SND
A |- (!x. (!y. ((SND (x , y)) = y)))
T c= cSND c, f0 f1 f1
D pair_RECURSION
A |- (!PAIR'. (?fn. (!a0. (!a1. ((fn (a0 , a1)) = ((PAIR' a0) a1))))))
T c? / ! ! c= * b0 c, b1 b2 * * f0 b1 b2
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D Hypermap.res
A |- (!f. (!s. (!x. ((((res f) s) x) = (((COND (x IN s)) (f x)) x)))))
T c= cres f0 f1 f2 cCOND cIN f2 f1 * f0 f2 f2
D Hypermap.face_map
A |- (!H. ((face_map H) = (SND (SND (SND (tuple_hypermap H))))))
T c= * part cface_map f0 * part cSND cSND cSND ctuple_hypermap f0
D Hypermap.face
A |- (!H. (!x. (((face H) x) = ((orbit_map (face_map H)) x))))
T c= * * part cface f0 f1 * * part corbit_map * part cface_map f0 f1
D Fan.extension_sigma_fan
A |- (!x. (!V. (!E. (!v. (!u. ((((((extension_sigma_fan x) V) E) v) u) = (((COND (~ (u IN (((set_of_edge v) V) E)))) u) (((((sigma_fan x) V) E) v) u))))))))
T c= cextension_sigma_fan f0 f1 f2 f3 f4 cCOND c~ cIN f4 * * * part cset_of_edge f3 f1 f2 f4 csigma_fan f0 f1 f2 f3 f4
D Fan_defs.f_fan_pair
A |- (!V. (!E. (!w. (!v. (((f_fan_pair (V , E)) (v , w)) = (w , (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) v)))))))
T c= cf_fan_pair c, f0 f1 c, f2 f3 c, f3 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f3 f2
D Fan_defs.f_fan_pair_ext
A |- (!V. (!E. (!x. (((f_fan_pair_ext (V , E)) x) = (((COND (x IN (dart1_of_fan (V , E)))) ((f_fan_pair (V , E)) x)) x)))))
T c= cf_fan_pair_ext c, f0 f1 f2 cCOND cIN f2 * part cdart1_of_fan c, f0 f1 cf_fan_pair c, f0 f1 f2 f2
D Fan_misc.INVERSE_SIGMA_FAN
A |- (!x. (!V. (!E. (!v. ((FAN (x , (V , E))) ==> (((((((extension_sigma_fan x) V) E) v) o ((((inverse_sigma_fan x) V) E) v)) = I) /\ ((((((inverse_sigma_fan x) V) E) v) o ((((extension_sigma_fan x) V) E) v)) = I)))))))
T c==> cFAN c, f0 c, f1 f2 c/\ c= * * part co * * * * part cextension_sigma_fan f0 f1 f2 f3 * * * * part cinverse_sigma_fan f0 f1 f2 f3 part cI c= * * part co * * * * part cinverse_sigma_fan f0 f1 f2 f3 * * * * part cextension_sigma_fan f0 f1 f2 f3 part cI
D Hypermap_and_fan.FINITE_DART_OF_FAN
A |- (!x. (!V. (!E. ((FAN (x , (V , E))) ==> (FINITE (dart_of_fan (V , E)))))))
T c==> cFAN c, f0 c, f1 f2 cFINITE * part cdart_of_fan c, f1 f2
D Hypermap_and_fan.F_FAN_PAIR_EXT_PERMUTES_DART_OF_FAN
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (f_fan_pair_ext (V , E))) (dart_of_fan (V , E))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 cpermutes * part cf_fan_pair_ext c, f0 f1 * part cdart_of_fan c, f0 f1
D Hypermap_and_fan.HYPERMAP_OF_FAN
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((tuple_hypermap (hypermap_of_fan (V , E))) = ((dart_of_fan (V , E)) , ((e_fan_pair_ext (V , E)) , ((n_fan_pair_ext (V , E)) , (f_fan_pair_ext (V , E)))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c= ctuple_hypermap chypermap_of_fan c, f0 f1 c, * part cdart_of_fan c, f0 f1 c, * part ce_fan_pair_ext c, f0 f1 c, * part cn_fan_pair_ext c, f0 f1 * part cf_fan_pair_ext c, f0 f1
D Hypermap_and_fan.INVERSE_F_FAN_PAIR_EXT_EXPLICIT
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((inverse (f_fan_pair_ext (V , E))) = ((res (GABS (\f. (!v. (!w. ((GEQ (f (v , w))) ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) , v))))))) (dart1_of_fan (V , E)))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c= * part cinverse * part cf_fan_pair_ext c, f0 f1 * * part cres * part cGABS / ! ! cGEQ * b0 c, b1 b2 c, csigma_fan cvec cNUMERAL c_0 f0 f1 b1 b2 b1 * part cdart1_of_fan c, f0 f1
D Hypermap_and_fan.FACE_SUBSET_DART1_OF_FAN
A |- (!V. (!E. (!x. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (x IN (dart1_of_fan (V , E)))) ==> (((face (hypermap_of_fan (V , E))) x) SUBSET (dart1_of_fan (V , E)))))))
T c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN f2 * part cdart1_of_fan c, f0 f1 cSUBSET * * part cface chypermap_of_fan c, f0 f1 f2 * part cdart1_of_fan c, f0 f1
D Hypermap_and_fan.PAIR_IN_DART1_OF_FAN
A |- (!V. (!E. (!v. (!w. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((v , w) IN (dart1_of_fan (V , E)))) ==> ((v IN V) /\ ((w IN V) /\ ((w IN (((set_of_edge v) V) E)) /\ (v IN (((set_of_edge w) V) E))))))))))
T c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c/\ cIN f2 f0 c/\ cIN f3 f0 c/\ cIN f3 * * * part cset_of_edge f2 f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1
D Hypermap_and_fan.ORBIT_MAP_3
A |- (!s. (!f. (!x. (((FINITE s) /\ (((permutes f) s) /\ ((CARD ((orbit_map f) x)) = (NUMERAL (BIT1 (BIT1 _0)))))) ==> ((((orbit_map f) x) = (x INSERT ((f x) INSERT ((f (f x)) INSERT EMPTY)))) /\ ((f (f (f x))) = x))))))
T c==> c/\ cFINITE f0 c/\ cpermutes f1 f0 c= cCARD * * part corbit_map f1 f2 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part corbit_map f1 f2 * * part cINSERT f2 * * part cINSERT * f1 f2 * * part cINSERT * f1 * f1 f2 part cEMPTY c= * f1 * f1 * f1 f2 f2
D Hypermap_and_fan.ORBIT_MAP_INV_3
A |- (!s. (!f. (!x. (((FINITE s) /\ (((permutes f) s) /\ ((CARD ((orbit_map f) x)) = (NUMERAL (BIT1 (BIT1 _0)))))) ==> (((f x) = ((inverse f) ((inverse f) x))) /\ (((f (f x)) = ((inverse f) x)) /\ (((inverse f) ((inverse f) ((inverse f) x))) = x)))))))
T c==> c/\ cFINITE f0 c/\ cpermutes f1 f0 c= cCARD * * part corbit_map f1 f2 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * f1 f2 cinverse f1 cinverse f1 f2 c/\ c= * f1 * f1 f2 cinverse f1 f2 c= cinverse f1 cinverse f1 cinverse f1 f2 f2
+ ((f_fan_pair_ext (V , E)) = f) |- ((((inverse f) (v , w)) = (w' , v)) = (((inverse (f_fan_pair_ext (V , E))) (v , w)) = (w' , v)))
T c==> c= * part cf_fan_pair_ext c, f0 f1 f2 c= c= cinverse f2 c, f3 f4 c, f5 f3 c= cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c, f5 f3
+ |- ((\e'. ((((v , w) IN (dart1_of_fan (V , E))) = g') ==> ((g' ==> (((f_fan_pair (V , E)) (v , w)) = t')) ==> (((~ g') ==> ((v , w) = e')) ==> ((((COND ((v , w) IN (dart1_of_fan (V , E)))) ((f_fan_pair (V , E)) (v , w))) (v , w)) = (((COND g') t') e')))))) e')
T * / c==> c= cIN c, f0 f1 * part cdart1_of_fan c, f2 f3 f4 c==> c==> f4 c= cf_fan_pair c, f2 f3 c, f0 f1 f5 c==> c==> c~ f4 c= c, f0 f1 b0 c= cCOND cIN c, f0 f1 * part cdart1_of_fan c, f2 f3 cf_fan_pair c, f2 f3 c, f0 f1 c, f0 f1 cCOND f4 f5 b0 f6
+ |- (((!x. ((I x) = x)) ==> ((\x. ((I x) = x)) x)) = ((\x. ((I x) = x)) x))
T c= c==> ! c= cI b0 b0 * / c= cI b0 b0 f0 * / c= cI b0 b0 f0
+ (FAN ((vec (NUMERAL _0)) , (V , E))), ((f_fan_pair_ext (V , E)) = f), ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) ==> ((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = ((((FINITE (dart_of_fan (V , E))) /\ (((permutes (f_fan_pair_ext (V , E))) (dart_of_fan (V , E))) /\ ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))))) ==> ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT (((f_fan_pair_ext (V , E)) (v , w)) INSERT (((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w))) INSERT EMPTY)))) /\ (((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w)))) = (v , w)))) ==> ((((orbit_map f) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> c= * part cf_fan_pair_ext c, f0 f1 f2 c==> c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f3 f4 cNUMERAL cBIT1 cBIT1 c_0 c= c==> c/\ c= * * part corbit_map f2 c, f3 f4 * * part cINSERT c, f3 f4 * * part cINSERT * f2 c, f3 f4 * * part cINSERT * f2 * f2 c, f3 f4 part cEMPTY c= * f2 * f2 * f2 c, f3 f4 c, f3 f4 c/\ c= * * part cINSERT c, f3 f4 * * part cINSERT * f2 c, f3 f4 * * part cINSERT * f2 * f2 c, f3 f4 part cEMPTY * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f5 * * part cINSERT c, f5 f3 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f5 f3 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f5 f3 f4 c==> c==> c/\ cFINITE * part cdart_of_fan c, f0 f1 c/\ cpermutes * part cf_fan_pair_ext c, f0 f1 * part cdart_of_fan c, f0 f1 c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f3 f4 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f3 f4 * * part cINSERT c, f3 f4 * * part cINSERT cf_fan_pair_ext c, f0 f1 c, f3 f4 * * part cINSERT cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f3 f4 part cEMPTY c= cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f3 f4 c, f3 f4 c/\ c= * * part corbit_map f2 c, f3 f4 * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f5 * * part cINSERT c, f5 f3 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f5 f3 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f5 f3 f4
+ |- ((\q'. ((((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))) = p') ==> ((p' ==> (((LET (\w'. (LET_END ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)) = q')) ==> ((((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((LET (\w'. (LET_END ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w))) = (p' ==> q'))))) q')
T * / c==> c= c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 f4 c==> c==> f4 c= cLET / cLET_END c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 b1 * * part cINSERT c, b1 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 b1 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 b1 f2 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b0 c= c==> c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 cLET / cLET_END c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 b1 * * part cINSERT c, b1 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 b1 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 b1 f2 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 c==> f4 b0 f5
+ |- ((((w' , v) IN (dart1_of_fan (V , E))) = g') ==> ((g' ==> (((GABS (\f. (!v. (!w. ((GEQ (f (v , w))) ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) , v)))))) (w' , v)) = t')) ==> (((~ g') ==> ((w' , v) = e')) ==> ((((COND ((w' , v) IN (dart1_of_fan (V , E)))) ((GABS (\f. (!v. (!w. ((GEQ (f (v , w))) ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) , v)))))) (w' , v))) (w' , v)) = (((COND g') t') e')))))
T c==> c= cIN c, f0 f1 * part cdart1_of_fan c, f2 f3 f4 c==> c==> f4 c= cGABS / ! ! cGEQ * b0 c, b1 b2 c, csigma_fan cvec cNUMERAL c_0 f2 f3 b1 b2 b1 c, f0 f1 f5 c==> c==> c~ f4 c= c, f0 f1 f6 c= cCOND cIN c, f0 f1 * part cdart1_of_fan c, f2 f3 cGABS / ! ! cGEQ * b0 c, b1 b2 c, csigma_fan cvec cNUMERAL c_0 f2 f3 b1 b2 b1 c, f0 f1 c, f0 f1 cCOND f4 f5 f6
+ |- (((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) SUBSET (dart1_of_fan (V , E))) ==> (((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((LET (\w'. (LET_END ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)))) = ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) SUBSET (dart1_of_fan (V , E))) ==> (((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((LET (\w'. (LET_END ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)))))
T c= c==> cSUBSET * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 c==> c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 cLET / cLET_END c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 b0 * * part cINSERT c, b0 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 b0 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 b0 f2 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 c==> cSUBSET * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 c==> c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 cLET / cLET_END c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 b0 * * part cINSERT c, b0 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 b0 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 b0 f2 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3
- |- (((f_fan_pair_ext (V , E)) = f) ==> (?f. ((f_fan_pair_ext (V , E)) = f)))
T c==> c= * part cf_fan_pair_ext c, f0 f1 f2 c? / c= * part cf_fan_pair_ext c, f0 f1 b0
+ (FAN ((vec (NUMERAL _0)) , (V , E))) |- ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) SUBSET (dart1_of_fan (V , E))) ==> ((((CARD ((face (hypermap_of_fan (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((LET (\w'. (LET_END ((((face (hypermap_of_fan (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w))) = (((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((LET (\w'. (LET_END ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cSUBSET * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 c= c==> c= cCARD * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 cLET / cLET_END c/\ c= * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 b0 * * part cINSERT c, b0 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 b0 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 b0 f2 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 c==> c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 cLET / cLET_END c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 b0 * * part cINSERT c, b0 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 b0 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 b0 f2 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3
+ (FAN ((vec (NUMERAL _0)) , (V , E))), ((f_fan_pair_ext (V , E)) = f), ((CARD ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) = (NUMERAL (BIT1 (BIT1 _0)))), ((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) |- ((((FINITE (dart_of_fan (V , E))) /\ (((permutes (f_fan_pair_ext (V , E))) (dart_of_fan (V , E))) /\ ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))))) ==> ((((f_fan_pair_ext (V , E)) (v , w)) = ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) /\ ((((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w))) = ((inverse (f_fan_pair_ext (V , E))) (v , w))) /\ (((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) = (v , w))))) = (T ==> (((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> c= * part cf_fan_pair_ext c, f0 f1 f2 c==> c= cCARD * * part cINSERT c, f3 f4 * * part cINSERT * f2 c, f3 f4 * * part cINSERT * f2 * f2 c, f3 f4 part cEMPTY cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ c= * * part corbit_map f2 c, f3 f4 * * part cINSERT c, f3 f4 * * part cINSERT * f2 c, f3 f4 * * part cINSERT * f2 * f2 c, f3 f4 part cEMPTY c= * f2 * f2 * f2 c, f3 f4 c, f3 f4 c= c==> c/\ cFINITE * part cdart_of_fan c, f0 f1 c/\ cpermutes * part cf_fan_pair_ext c, f0 f1 * part cdart_of_fan c, f0 f1 c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f3 f4 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cf_fan_pair_ext c, f0 f1 c, f3 f4 cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c/\ c= cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f3 f4 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c= cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c, f3 f4 c==> cT c/\ c= * f2 c, f3 f4 cinverse f2 cinverse f2 c, f3 f4 c/\ c= * f2 * f2 c, f3 f4 cinverse f2 c, f3 f4 c= cinverse f2 cinverse f2 cinverse f2 c, f3 f4 c, f3 f4
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ ((f_fan_pair_ext (V , E)) = f), ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((((CARD ((orbit_map f) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((FINITE (dart_of_fan (V , E))) /\ (((permutes (f_fan_pair_ext (V , E))) (dart_of_fan (V , E))) /\ ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))))) ==> ((((f_fan_pair_ext (V , E)) (v , w)) = ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) /\ ((((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w))) = ((inverse (f_fan_pair_ext (V , E))) (v , w))) /\ (((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) = (v , w))))) ==> ((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))))) = ((((FINITE (dart_of_fan (V , E))) /\ (((permutes (f_fan_pair_ext (V , E))) (dart_of_fan (V , E))) /\ ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))))) ==> ((((f_fan_pair_ext (V , E)) (v , w)) = ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) /\ ((((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w))) = ((inverse (f_fan_pair_ext (V , E))) (v , w))) /\ (((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) = (v , w))))) ==> ((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))
T c==> c= * part cf_fan_pair_ext c, f0 f1 f2 c==> c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f3 f4 cNUMERAL cBIT1 cBIT1 c_0 c= c==> c= cCARD * * part corbit_map f2 c, f3 f4 cNUMERAL cBIT1 cBIT1 c_0 c==> c==> c/\ cFINITE * part cdart_of_fan c, f0 f1 c/\ cpermutes * part cf_fan_pair_ext c, f0 f1 * part cdart_of_fan c, f0 f1 c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f3 f4 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cf_fan_pair_ext c, f0 f1 c, f3 f4 cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c/\ c= cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f3 f4 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c= cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c, f3 f4 c/\ c= * * part cINSERT c, f3 f4 * * part cINSERT * f2 c, f3 f4 * * part cINSERT * f2 * f2 c, f3 f4 part cEMPTY * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f5 * * part cINSERT c, f5 f3 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f5 f3 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f5 f3 f4 c==> c==> c/\ cFINITE * part cdart_of_fan c, f0 f1 c/\ cpermutes * part cf_fan_pair_ext c, f0 f1 * part cdart_of_fan c, f0 f1 c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f3 f4 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cf_fan_pair_ext c, f0 f1 c, f3 f4 cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c/\ c= cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f3 f4 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c= cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c, f3 f4 c/\ c= * * part cINSERT c, f3 f4 * * part cINSERT * f2 c, f3 f4 * * part cINSERT * f2 * f2 c, f3 f4 part cEMPTY * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f5 * * part cINSERT c, f5 f3 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f5 f3 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f5 f3 f4
+ |- (((FINITE (dart_of_fan (V , E))) /\ (((permutes (f_fan_pair_ext (V , E))) (dart_of_fan (V , E))) /\ ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))))) ==> ((((f_fan_pair_ext (V , E)) (v , w)) = ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) /\ ((((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w))) = ((inverse (f_fan_pair_ext (V , E))) (v , w))) /\ (((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) = (v , w)))))
T c==> c/\ cFINITE * part cdart_of_fan c, f0 f1 c/\ cpermutes * part cf_fan_pair_ext c, f0 f1 * part cdart_of_fan c, f0 f1 c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cf_fan_pair_ext c, f0 f1 c, f2 f3 cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 c, f2 f3 c/\ c= cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f2 f3 cinverse * part cf_fan_pair_ext c, f0 f1 c, f2 f3 c= cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 c, f2 f3 c, f2 f3
+ |- (((!s. (!x. ((((res f) s) x) = (((COND (x IN s)) (f x)) x)))) ==> ((\s. (!x. ((((res f) s) x) = (((COND (x IN s)) (f x)) x)))) s)) = ((\s. (!x. ((((res f) s) x) = (((COND (x IN s)) (f x)) x)))) s))
T c= c==> ! ! c= cres f0 b0 b1 cCOND cIN b1 b0 * f0 b1 b1 * / ! c= cres f0 b0 b1 cCOND cIN b1 b0 * f0 b1 b1 f1 * / ! c= cres f0 b0 b1 cCOND cIN b1 b0 * f0 b1 b1 f1
+ |- (((!V. (!E. (!v. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((((((extension_sigma_fan (vec (NUMERAL _0))) V) E) v) o ((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) v)) = I) /\ ((((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) v) o ((((extension_sigma_fan (vec (NUMERAL _0))) V) E) v)) = I)))))) ==> ((\V. (!E. (!v. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((((((extension_sigma_fan (vec (NUMERAL _0))) V) E) v) o ((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) v)) = I) /\ ((((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) v) o ((((extension_sigma_fan (vec (NUMERAL _0))) V) E) v)) = I)))))) V)) = ((\V. (!E. (!v. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((((((extension_sigma_fan (vec (NUMERAL _0))) V) E) v) o ((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) v)) = I) /\ ((((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) v) o ((((extension_sigma_fan (vec (NUMERAL _0))) V) E) v)) = I)))))) V))
T c= c==> ! ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 c/\ c= * * part co * * * * part cextension_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 * * * * part cinverse_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 part cI c= * * part co * * * * part cinverse_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 * * * * part cextension_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 part cI * / ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 c/\ c= * * part co * * * * part cextension_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 * * * * part cinverse_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 part cI c= * * part co * * * * part cinverse_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 * * * * part cextension_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 part cI f0 * / ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 c/\ c= * * part co * * * * part cextension_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 * * * * part cinverse_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 part cI c= * * part co * * * * part cinverse_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 * * * * part cextension_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 part cI f0
- |- (((((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) = ((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w)))) ==> ((((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) ==> (((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))) = q')) ==> ((((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) ==> ((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = (((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) ==> q')))) = ((((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) ==> (((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))) = q')) ==> ((((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) ==> ((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = (((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) ==> q'))))
T c= c==> c= c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 c==> c==> c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 c= c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2 f6 c= c==> c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2 c==> c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 f6 c==> c==> c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 c= c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2 f6 c= c==> c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2 c==> c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 f6
+ |- ((\p'. (!q'. ((((((f_fan_pair (V , E)) (v , w)) = ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) , w')) /\ (((f_fan_pair (V , E)) (v , w)) IN (dart1_of_fan (V , E)))) = p') ==> ((p' ==> (((((v , w) INSERT (((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) , w') INSERT ((w' , v) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))) = q')) ==> ((((((f_fan_pair (V , E)) (v , w)) = ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) , w')) /\ (((f_fan_pair (V , E)) (v , w)) IN (dart1_of_fan (V , E)))) ==> ((((v , w) INSERT (((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) , w') INSERT ((w' , v) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c= cf_fan_pair c, f0 f1 c, f2 f3 c, csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f4 cIN cf_fan_pair c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 b0 c==> c==> b0 c= c/\ c= * * part cINSERT c, f2 f3 * * part cINSERT c, csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f4 * * part cINSERT c, f4 f2 part cEMPTY * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f4 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f3 b1 c= c==> c/\ c= cf_fan_pair c, f0 f1 c, f2 f3 c, csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f4 cIN cf_fan_pair c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 c/\ c= * * part cINSERT c, f2 f3 * * part cINSERT c, csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f4 * * part cINSERT c, f4 f2 part cEMPTY * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f4 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f3 c==> b0 b1 f5
+ |- (((!q'. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((v , w) IN (dart1_of_fan (V , E)))) = p') ==> ((p' ==> ((((face (hypermap_of_fan (V , E))) (v , w)) SUBSET (dart1_of_fan (V , E))) = q')) ==> ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((v , w) IN (dart1_of_fan (V , E)))) ==> (((face (hypermap_of_fan (V , E))) (v , w)) SUBSET (dart1_of_fan (V , E)))) = (p' ==> q'))))) ==> ((\q'. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((v , w) IN (dart1_of_fan (V , E)))) = p') ==> ((p' ==> ((((face (hypermap_of_fan (V , E))) (v , w)) SUBSET (dart1_of_fan (V , E))) = q')) ==> ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((v , w) IN (dart1_of_fan (V , E)))) ==> (((face (hypermap_of_fan (V , E))) (v , w)) SUBSET (dart1_of_fan (V , E)))) = (p' ==> q'))))) q')) = ((\q'. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((v , w) IN (dart1_of_fan (V , E)))) = p') ==> ((p' ==> ((((face (hypermap_of_fan (V , E))) (v , w)) SUBSET (dart1_of_fan (V , E))) = q')) ==> ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((v , w) IN (dart1_of_fan (V , E)))) ==> (((face (hypermap_of_fan (V , E))) (v , w)) SUBSET (dart1_of_fan (V , E)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 f4 c==> c==> f4 c= cSUBSET * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 b0 c= c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 cSUBSET * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 c==> f4 b0 * / c==> c= c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 f4 c==> c==> f4 c= cSUBSET * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 b0 c= c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 cSUBSET * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 c==> f4 b0 f5 * / c==> c= c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 f4 c==> c==> f4 c= cSUBSET * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 b0 c= c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 cSUBSET * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 c==> f4 b0 f5
+ |- ((((((f_fan_pair (V , E)) (v , w)) = ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) , w')) /\ (((f_fan_pair (V , E)) (v , w)) IN (dart1_of_fan (V , E)))) = p') ==> ((p' ==> (((((v , w) INSERT (((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) , w') INSERT ((w' , v) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))) = q')) ==> ((((((f_fan_pair (V , E)) (v , w)) = ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) , w')) /\ (((f_fan_pair (V , E)) (v , w)) IN (dart1_of_fan (V , E)))) ==> ((((v , w) INSERT (((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) , w') INSERT ((w' , v) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = (p' ==> q'))))
T c==> c= c/\ c= cf_fan_pair c, f0 f1 c, f2 f3 c, csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f4 cIN cf_fan_pair c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 f5 c==> c==> f5 c= c/\ c= * * part cINSERT c, f2 f3 * * part cINSERT c, csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f4 * * part cINSERT c, f4 f2 part cEMPTY * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f4 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f3 f6 c= c==> c/\ c= cf_fan_pair c, f0 f1 c, f2 f3 c, csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f4 cIN cf_fan_pair c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 c/\ c= * * part cINSERT c, f2 f3 * * part cINSERT c, csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f4 * * part cINSERT c, f4 f2 part cEMPTY * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f4 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f3 c==> f5 f6
+ |- (((!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) ==> ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)) = ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s))
T c= c==> ! ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
- |- ((\q'. ((((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) = p') ==> ((p' ==> (((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))) = q')) ==> ((((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) ==> ((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 f3 c==> c==> f3 c= c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f4 * * part cINSERT c, f4 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f5 f6 f2 f4 f1 c= csigma_fan cvec cNUMERAL c_0 f5 f6 f4 f1 f2 b0 c= c==> c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f4 * * part cINSERT c, f4 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f5 f6 f2 f4 f1 c= csigma_fan cvec cNUMERAL c_0 f5 f6 f4 f1 f2 c==> f3 b0 f7
+ (FAN ((vec (NUMERAL _0)) , (V , E))), ((v = (((COND (~ (w' IN (((set_of_edge w) V) E)))) w') (((((sigma_fan (vec (NUMERAL _0))) V) E) w) w'))) /\ ((w , w') IN (dart1_of_fan (V , E)))) |- (((v = (((COND (~ (w' IN (((set_of_edge w) V) E)))) w') (((((sigma_fan (vec (NUMERAL _0))) V) E) w) w'))) /\ ((w , w') IN (dart1_of_fan (V , E)))) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> c/\ c= f2 cCOND c~ cIN f3 * * * part cset_of_edge f4 f0 f1 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f3 cIN c, f4 f3 * part cdart1_of_fan c, f0 f1 c/\ c/\ c= f2 cCOND c~ cIN f3 * * * part cset_of_edge f4 f0 f1 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f3 cIN c, f4 f3 * part cdart1_of_fan c, f0 f1 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f3 f2
+ (FAN ((vec (NUMERAL _0)) , (V , E))), ((v , w) IN (dart1_of_fan (V , E))) |- (((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((v , w) IN (dart1_of_fan (V , E)))) ==> (((face (hypermap_of_fan (V , E))) (v , w)) SUBSET (dart1_of_fan (V , E)))) ==> (((CARD ((face (hypermap_of_fan (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((LET (\w'. (LET_END ((((face (hypermap_of_fan (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)))) = ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) SUBSET (dart1_of_fan (V , E))) ==> (((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((LET (\w'. (LET_END ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c= c==> c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 cSUBSET * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 c==> c= cCARD * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 cLET / cLET_END c/\ c= * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 b0 * * part cINSERT c, b0 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 b0 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 b0 f2 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 c==> cSUBSET * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 c==> c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 cLET / cLET_END c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 b0 * * part cINSERT c, b0 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 b0 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 b0 f2 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3
+ |- (((?w'. ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w')) ==> ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT ((w , (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)) INSERT (((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)) = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)) v) = w)))) = ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT ((w , (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)) INSERT (((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)) = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)) v) = w))))
T c= c==> c? / c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b0 c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 * * part cINSERT c, csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f2 f3 c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 * * part cINSERT c, csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f2 f3
- ((w IN V) /\ ((w' IN V) /\ ((w' IN (((set_of_edge w) V) E)) /\ (w IN (((set_of_edge w') V) E))))) |- (w' IN V)
T c==> c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f2 * * * part cset_of_edge f0 f1 f3 cIN f0 * * * part cset_of_edge f2 f1 f3 cIN f2 f1
+ |- ((((~ T) ==> ((v , w) = (v , w))) ==> ((((COND ((v , w) IN (dart1_of_fan (V , E)))) ((f_fan_pair (V , E)) (v , w))) (v , w)) = (((COND T) ((f_fan_pair (V , E)) (v , w))) (v , w)))) = ((((COND ((v , w) IN (dart1_of_fan (V , E)))) ((f_fan_pair (V , E)) (v , w))) (v , w)) = (((COND T) ((f_fan_pair (V , E)) (v , w))) (v , w))))
T c= c==> c==> c~ cT c= c, f0 f1 c, f0 f1 c= cCOND cIN c, f0 f1 * part cdart1_of_fan c, f2 f3 cf_fan_pair c, f2 f3 c, f0 f1 c, f0 f1 cCOND cT cf_fan_pair c, f2 f3 c, f0 f1 c, f0 f1 c= cCOND cIN c, f0 f1 * part cdart1_of_fan c, f2 f3 cf_fan_pair c, f2 f3 c, f0 f1 c, f0 f1 cCOND cT cf_fan_pair c, f2 f3 c, f0 f1 c, f0 f1
+ |- ((\g'. (!t'. (!e'. ((((v , w) IN (dart1_of_fan (V , E))) = g') ==> ((g' ==> (((f_fan_pair (V , E)) (v , w)) = t')) ==> (((~ g') ==> ((v , w) = e')) ==> ((((COND ((v , w) IN (dart1_of_fan (V , E)))) ((f_fan_pair (V , E)) (v , w))) (v , w)) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= cIN c, f0 f1 * part cdart1_of_fan c, f2 f3 b0 c==> c==> b0 c= cf_fan_pair c, f2 f3 c, f0 f1 b1 c==> c==> c~ b0 c= c, f0 f1 b2 c= cCOND cIN c, f0 f1 * part cdart1_of_fan c, f2 f3 cf_fan_pair c, f2 f3 c, f0 f1 c, f0 f1 cCOND b0 b1 b2 f4
+ |- ((\w'. ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w')) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w))
T * / c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b0 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3
+ |- ((\p'. (!q'. (((v = (((COND (~ (w' IN (((set_of_edge w) V) E)))) w') (((((sigma_fan (vec (NUMERAL _0))) V) E) w) w'))) = p') ==> ((p' ==> (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) = q')) ==> (((v = (((COND (~ (w' IN (((set_of_edge w) V) E)))) w') (((((sigma_fan (vec (NUMERAL _0))) V) E) w) w'))) ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v)) = (p' ==> q')))))) p')
T * / ! c==> c= c= f0 cCOND c~ cIN f1 * * * part cset_of_edge f2 f3 f4 f1 csigma_fan cvec cNUMERAL c_0 f3 f4 f2 f1 b0 c==> c==> b0 c= c= csigma_fan cvec cNUMERAL c_0 f3 f4 f2 f1 f0 b1 c= c==> c= f0 cCOND c~ cIN f1 * * * part cset_of_edge f2 f3 f4 f1 csigma_fan cvec cNUMERAL c_0 f3 f4 f2 f1 c= csigma_fan cvec cNUMERAL c_0 f3 f4 f2 f1 f0 c==> b0 b1 f5
+ (FAN ((vec (NUMERAL _0)) , (V , E))), ((f_fan_pair_ext (V , E)) = f), ((f (v , w)) = ((inverse f) ((inverse f) (v , w)))), ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w'), (((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))), (((f (v , w)) IN (dart1_of_fan (V , E))) /\ ((f (f (v , w))) IN (dart1_of_fan (V , E)))), ((v , w) IN (dart1_of_fan (V , E))) |- ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> c= * part cf_fan_pair_ext c, f0 f1 f2 c==> c= * f2 c, f3 f4 cinverse f2 cinverse f2 c, f3 f4 c==> c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f4 f5 c==> c/\ c= * f2 c, f3 f4 cinverse f2 cinverse f2 c, f3 f4 c/\ c= * f2 * f2 c, f3 f4 cinverse f2 c, f3 f4 c= cinverse f2 cinverse f2 cinverse f2 c, f3 f4 c, f3 f4 c==> c/\ cIN * f2 c, f3 f4 * part cdart1_of_fan c, f0 f1 cIN * f2 * f2 c, f3 f4 * part cdart1_of_fan c, f0 f1 c==> cIN c, f3 f4 * part cdart1_of_fan c, f0 f1 c/\ c= * * part cINSERT c, f3 f4 * * part cINSERT cinverse f2 cinverse f2 c, f3 f4 * * part cINSERT cinverse f2 c, f3 f4 part cEMPTY * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f5 * * part cINSERT c, f5 f3 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f5 f3 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f5 f3 f4
+ |- ((\q'. (((((FINITE (dart_of_fan (V , E))) /\ (((permutes (f_fan_pair_ext (V , E))) (dart_of_fan (V , E))) /\ ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))))) ==> ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT (((f_fan_pair_ext (V , E)) (v , w)) INSERT (((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w))) INSERT EMPTY)))) /\ (((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w)))) = (v , w)))) = p') ==> ((p' ==> (((((orbit_map f) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))) = q')) ==> (((((FINITE (dart_of_fan (V , E))) /\ (((permutes (f_fan_pair_ext (V , E))) (dart_of_fan (V , E))) /\ ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))))) ==> ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT (((f_fan_pair_ext (V , E)) (v , w)) INSERT (((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w))) INSERT EMPTY)))) /\ (((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w)))) = (v , w)))) ==> ((((orbit_map f) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = (p' ==> q'))))) q')
T * / c==> c= c==> c/\ cFINITE * part cdart_of_fan c, f0 f1 c/\ cpermutes * part cf_fan_pair_ext c, f0 f1 * part cdart_of_fan c, f0 f1 c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT cf_fan_pair_ext c, f0 f1 c, f2 f3 * * part cINSERT cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f2 f3 part cEMPTY c= cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f2 f3 c, f2 f3 f4 c==> c==> f4 c= c/\ c= * * part corbit_map f5 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f6 * * part cINSERT c, f6 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f6 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f6 f2 f3 b0 c= c==> c==> c/\ cFINITE * part cdart_of_fan c, f0 f1 c/\ cpermutes * part cf_fan_pair_ext c, f0 f1 * part cdart_of_fan c, f0 f1 c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT cf_fan_pair_ext c, f0 f1 c, f2 f3 * * part cINSERT cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f2 f3 part cEMPTY c= cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f2 f3 c, f2 f3 c/\ c= * * part corbit_map f5 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f6 * * part cINSERT c, f6 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f6 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f6 f2 f3 c==> f4 b0 f7
+ (FAN ((vec (NUMERAL _0)) , (V , E))), ((f_fan_pair_ext (V , E)) = f), ((CARD ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) = (NUMERAL (BIT1 (BIT1 _0)))), ((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) |- (((((FINITE (dart_of_fan (V , E))) /\ (((permutes (f_fan_pair_ext (V , E))) (dart_of_fan (V , E))) /\ ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))))) = T) ==> ((T ==> (((((f_fan_pair_ext (V , E)) (v , w)) = ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) /\ ((((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w))) = ((inverse (f_fan_pair_ext (V , E))) (v , w))) /\ (((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) = (v , w)))) = q')) ==> ((((FINITE (dart_of_fan (V , E))) /\ (((permutes (f_fan_pair_ext (V , E))) (dart_of_fan (V , E))) /\ ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))))) ==> ((((f_fan_pair_ext (V , E)) (v , w)) = ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) /\ ((((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w))) = ((inverse (f_fan_pair_ext (V , E))) (v , w))) /\ (((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) = (v , w))))) = (T ==> q')))) = ((T ==> (((((f_fan_pair_ext (V , E)) (v , w)) = ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) /\ ((((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w))) = ((inverse (f_fan_pair_ext (V , E))) (v , w))) /\ (((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) = (v , w)))) = q')) ==> ((((FINITE (dart_of_fan (V , E))) /\ (((permutes (f_fan_pair_ext (V , E))) (dart_of_fan (V , E))) /\ ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))))) ==> ((((f_fan_pair_ext (V , E)) (v , w)) = ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) /\ ((((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w))) = ((inverse (f_fan_pair_ext (V , E))) (v , w))) /\ (((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) = (v , w))))) = (T ==> q'))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> c= * part cf_fan_pair_ext c, f0 f1 f2 c==> c= cCARD * * part cINSERT c, f3 f4 * * part cINSERT * f2 c, f3 f4 * * part cINSERT * f2 * f2 c, f3 f4 part cEMPTY cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ c= * * part corbit_map f2 c, f3 f4 * * part cINSERT c, f3 f4 * * part cINSERT * f2 c, f3 f4 * * part cINSERT * f2 * f2 c, f3 f4 part cEMPTY c= * f2 * f2 * f2 c, f3 f4 c, f3 f4 c= c==> c= c/\ cFINITE * part cdart_of_fan c, f0 f1 c/\ cpermutes * part cf_fan_pair_ext c, f0 f1 * part cdart_of_fan c, f0 f1 c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f3 f4 cNUMERAL cBIT1 cBIT1 c_0 cT c==> c==> cT c= c/\ c= cf_fan_pair_ext c, f0 f1 c, f3 f4 cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c/\ c= cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f3 f4 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c= cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c, f3 f4 f5 c= c==> c/\ cFINITE * part cdart_of_fan c, f0 f1 c/\ cpermutes * part cf_fan_pair_ext c, f0 f1 * part cdart_of_fan c, f0 f1 c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f3 f4 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cf_fan_pair_ext c, f0 f1 c, f3 f4 cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c/\ c= cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f3 f4 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c= cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c, f3 f4 c==> cT f5 c==> c==> cT c= c/\ c= cf_fan_pair_ext c, f0 f1 c, f3 f4 cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c/\ c= cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f3 f4 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c= cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c, f3 f4 f5 c= c==> c/\ cFINITE * part cdart_of_fan c, f0 f1 c/\ cpermutes * part cf_fan_pair_ext c, f0 f1 * part cdart_of_fan c, f0 f1 c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f3 f4 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cf_fan_pair_ext c, f0 f1 c, f3 f4 cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c/\ c= cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f3 f4 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c= cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c, f3 f4 c==> cT f5
- |- ((\p'. (!q'. (((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) = p') ==> ((p' ==> (((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))) = q')) ==> (((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) ==> ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c= * f0 c, f1 f2 cinverse f0 cinverse f0 c, f1 f2 c/\ c= * f0 * f0 c, f1 f2 cinverse f0 c, f1 f2 c= cinverse f0 cinverse f0 cinverse f0 c, f1 f2 c, f1 f2 b0 c==> c==> b0 c= c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT cinverse f0 cinverse f0 c, f1 f2 * * part cINSERT cinverse f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2 b1 c= c==> c/\ c= * f0 c, f1 f2 cinverse f0 cinverse f0 c, f1 f2 c/\ c= * f0 * f0 c, f1 f2 cinverse f0 c, f1 f2 c= cinverse f0 cinverse f0 cinverse f0 c, f1 f2 c, f1 f2 c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT cinverse f0 cinverse f0 c, f1 f2 * * part cINSERT cinverse f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2 c==> b0 b1 f6
- (!x. ((x IN ((orbit_map f) (v , w))) ==> (x IN (dart1_of_fan (V , E))))) |- (((x IN ((orbit_map f) (v , w))) ==> (x IN (dart1_of_fan (V , E)))) = T)
T c==> ! c==> cIN b0 * * part corbit_map f0 c, f1 f2 cIN b0 * part cdart1_of_fan c, f3 f4 c= c==> cIN f5 * * part corbit_map f0 c, f1 f2 cIN f5 * part cdart1_of_fan c, f3 f4 cT
+ |- ((\E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (f_fan_pair_ext (V , E))) (dart_of_fan (V , E))))) E)
T * / c==> cFAN c, cvec cNUMERAL c_0 c, f0 b0 cpermutes * part cf_fan_pair_ext c, f0 b0 * part cdart_of_fan c, f0 b0 f1
+ (FAN ((vec (NUMERAL _0)) , (V , E))), ((f_fan_pair_ext (V , E)) = f), ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((((FINITE (dart_of_fan (V , E))) /\ (((permutes (f_fan_pair_ext (V , E))) (dart_of_fan (V , E))) /\ ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))))) = T) ==> ((T ==> (((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT (((f_fan_pair_ext (V , E)) (v , w)) INSERT (((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w))) INSERT EMPTY)))) /\ (((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w)))) = (v , w))) = q')) ==> ((((FINITE (dart_of_fan (V , E))) /\ (((permutes (f_fan_pair_ext (V , E))) (dart_of_fan (V , E))) /\ ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))))) ==> ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT (((f_fan_pair_ext (V , E)) (v , w)) INSERT (((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w))) INSERT EMPTY)))) /\ (((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w)))) = (v , w)))) = (T ==> q')))) = ((T ==> (((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT (((f_fan_pair_ext (V , E)) (v , w)) INSERT (((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w))) INSERT EMPTY)))) /\ (((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w)))) = (v , w))) = q')) ==> ((((FINITE (dart_of_fan (V , E))) /\ (((permutes (f_fan_pair_ext (V , E))) (dart_of_fan (V , E))) /\ ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))))) ==> ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT (((f_fan_pair_ext (V , E)) (v , w)) INSERT (((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w))) INSERT EMPTY)))) /\ (((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w)))) = (v , w)))) = (T ==> q'))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> c= * part cf_fan_pair_ext c, f0 f1 f2 c==> c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f3 f4 cNUMERAL cBIT1 cBIT1 c_0 c= c==> c= c/\ cFINITE * part cdart_of_fan c, f0 f1 c/\ cpermutes * part cf_fan_pair_ext c, f0 f1 * part cdart_of_fan c, f0 f1 c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f3 f4 cNUMERAL cBIT1 cBIT1 c_0 cT c==> c==> cT c= c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f3 f4 * * part cINSERT c, f3 f4 * * part cINSERT cf_fan_pair_ext c, f0 f1 c, f3 f4 * * part cINSERT cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f3 f4 part cEMPTY c= cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f3 f4 c, f3 f4 f5 c= c==> c/\ cFINITE * part cdart_of_fan c, f0 f1 c/\ cpermutes * part cf_fan_pair_ext c, f0 f1 * part cdart_of_fan c, f0 f1 c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f3 f4 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f3 f4 * * part cINSERT c, f3 f4 * * part cINSERT cf_fan_pair_ext c, f0 f1 c, f3 f4 * * part cINSERT cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f3 f4 part cEMPTY c= cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f3 f4 c, f3 f4 c==> cT f5 c==> c==> cT c= c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f3 f4 * * part cINSERT c, f3 f4 * * part cINSERT cf_fan_pair_ext c, f0 f1 c, f3 f4 * * part cINSERT cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f3 f4 part cEMPTY c= cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f3 f4 c, f3 f4 f5 c= c==> c/\ cFINITE * part cdart_of_fan c, f0 f1 c/\ cpermutes * part cf_fan_pair_ext c, f0 f1 * part cdart_of_fan c, f0 f1 c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f3 f4 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f3 f4 * * part cINSERT c, f3 f4 * * part cINSERT cf_fan_pair_ext c, f0 f1 c, f3 f4 * * part cINSERT cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f3 f4 part cEMPTY c= cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f3 f4 c, f3 f4 c==> cT f5
+ (FAN ((vec (NUMERAL _0)) , (V , E))), ((f_fan_pair_ext (V , E)) = f), ((CARD ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) = (NUMERAL (BIT1 (BIT1 _0)))), ((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) |- (((CARD ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((((FINITE (dart_of_fan (V , E))) /\ (((permutes (f_fan_pair_ext (V , E))) (dart_of_fan (V , E))) /\ ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))))) ==> ((((f_fan_pair_ext (V , E)) (v , w)) = ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) /\ ((((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w))) = ((inverse (f_fan_pair_ext (V , E))) (v , w))) /\ (((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) = (v , w))))) ==> ((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = ((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) ==> ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> c= * part cf_fan_pair_ext c, f0 f1 f2 c==> c= cCARD * * part cINSERT c, f3 f4 * * part cINSERT * f2 c, f3 f4 * * part cINSERT * f2 * f2 c, f3 f4 part cEMPTY cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ c= * * part corbit_map f2 c, f3 f4 * * part cINSERT c, f3 f4 * * part cINSERT * f2 c, f3 f4 * * part cINSERT * f2 * f2 c, f3 f4 part cEMPTY c= * f2 * f2 * f2 c, f3 f4 c, f3 f4 c/\ c= cCARD * * part cINSERT c, f3 f4 * * part cINSERT * f2 c, f3 f4 * * part cINSERT * f2 * f2 c, f3 f4 part cEMPTY cNUMERAL cBIT1 cBIT1 c_0 c= c==> c==> c/\ cFINITE * part cdart_of_fan c, f0 f1 c/\ cpermutes * part cf_fan_pair_ext c, f0 f1 * part cdart_of_fan c, f0 f1 c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f3 f4 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cf_fan_pair_ext c, f0 f1 c, f3 f4 cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c/\ c= cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f3 f4 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c= cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c, f3 f4 c/\ c= * * part cINSERT c, f3 f4 * * part cINSERT * f2 c, f3 f4 * * part cINSERT * f2 * f2 c, f3 f4 part cEMPTY * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f5 * * part cINSERT c, f5 f3 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f5 f3 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f5 f3 f4 c==> c/\ c= * f2 c, f3 f4 cinverse f2 cinverse f2 c, f3 f4 c/\ c= * f2 * f2 c, f3 f4 cinverse f2 c, f3 f4 c= cinverse f2 cinverse f2 cinverse f2 c, f3 f4 c, f3 f4 c/\ c= * * part cINSERT c, f3 f4 * * part cINSERT cinverse f2 cinverse f2 c, f3 f4 * * part cINSERT cinverse f2 c, f3 f4 part cEMPTY * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f5 * * part cINSERT c, f5 f3 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f5 f3 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f5 f3 f4
+ (FAN ((vec (NUMERAL _0)) , (V , E))), ((f_fan_pair_ext (V , E)) = f), ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((T ==> (((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT (((f_fan_pair_ext (V , E)) (v , w)) INSERT (((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w))) INSERT EMPTY)))) /\ (((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w)))) = (v , w))) = q')) ==> ((((FINITE (dart_of_fan (V , E))) /\ (((permutes (f_fan_pair_ext (V , E))) (dart_of_fan (V , E))) /\ ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))))) ==> ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT (((f_fan_pair_ext (V , E)) (v , w)) INSERT (((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w))) INSERT EMPTY)))) /\ (((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w)))) = (v , w)))) = (T ==> q')))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> c= * part cf_fan_pair_ext c, f0 f1 f2 c==> c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f3 f4 cNUMERAL cBIT1 cBIT1 c_0 c==> c==> cT c= c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f3 f4 * * part cINSERT c, f3 f4 * * part cINSERT cf_fan_pair_ext c, f0 f1 c, f3 f4 * * part cINSERT cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f3 f4 part cEMPTY c= cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f3 f4 c, f3 f4 f5 c= c==> c/\ cFINITE * part cdart_of_fan c, f0 f1 c/\ cpermutes * part cf_fan_pair_ext c, f0 f1 * part cdart_of_fan c, f0 f1 c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f3 f4 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f3 f4 * * part cINSERT c, f3 f4 * * part cINSERT cf_fan_pair_ext c, f0 f1 c, f3 f4 * * part cINSERT cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f3 f4 part cEMPTY c= cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f3 f4 c, f3 f4 c==> cT f5
- ((f (f (v , w))) = ((inverse f) (v , w))), (((inverse f) (v , w)) = (w' , v)), ((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) |- ((((f_fan_pair (V , E)) (v , w)) IN ((v , w) INSERT ((f (v , w)) INSERT ((w' , v) INSERT EMPTY)))) = (((f_fan_pair (V , E)) (v , w)) IN ((orbit_map f) (v , w))))
T c==> c= * f0 * f0 c, f1 f2 cinverse f0 c, f1 f2 c==> c= cinverse f0 c, f1 f2 c, f3 f1 c==> c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 c= cIN cf_fan_pair c, f4 f5 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT c, f3 f1 part cEMPTY cIN cf_fan_pair c, f4 f5 c, f1 f2 * * part corbit_map f0 c, f1 f2
- |- (((!x. (((\f. ((f_fan_pair_ext (V , E)) = f)) x) ==> (?f. ((f_fan_pair_ext (V , E)) = f)))) ==> ((?f. ((f_fan_pair_ext (V , E)) = f)) ==> (?f. ((f_fan_pair_ext (V , E)) = f)))) = ((?f. ((f_fan_pair_ext (V , E)) = f)) ==> (?f. ((f_fan_pair_ext (V , E)) = f))))
T c= c==> ! c==> * / c= * part cf_fan_pair_ext c, f0 f1 b1 b0 c? / c= * part cf_fan_pair_ext c, f0 f1 b1 c==> c? / c= * part cf_fan_pair_ext c, f0 f1 b0 c? / c= * part cf_fan_pair_ext c, f0 f1 b0 c==> c? / c= * part cf_fan_pair_ext c, f0 f1 b0 c? / c= * part cf_fan_pair_ext c, f0 f1 b0
- |- ((\q'. (((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) = p') ==> ((p' ==> (((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))) = q')) ==> (((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) ==> ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c= * f0 c, f1 f2 cinverse f0 cinverse f0 c, f1 f2 c/\ c= * f0 * f0 c, f1 f2 cinverse f0 c, f1 f2 c= cinverse f0 cinverse f0 cinverse f0 c, f1 f2 c, f1 f2 f3 c==> c==> f3 c= c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT cinverse f0 cinverse f0 c, f1 f2 * * part cINSERT cinverse f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f4 * * part cINSERT c, f4 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f5 f6 f2 f4 f1 c= csigma_fan cvec cNUMERAL c_0 f5 f6 f4 f1 f2 b0 c= c==> c/\ c= * f0 c, f1 f2 cinverse f0 cinverse f0 c, f1 f2 c/\ c= * f0 * f0 c, f1 f2 cinverse f0 c, f1 f2 c= cinverse f0 cinverse f0 cinverse f0 c, f1 f2 c, f1 f2 c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT cinverse f0 cinverse f0 c, f1 f2 * * part cINSERT cinverse f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f4 * * part cINSERT c, f4 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f5 f6 f2 f4 f1 c= csigma_fan cvec cNUMERAL c_0 f5 f6 f4 f1 f2 c==> f3 b0 f7
+ ((w IN V) /\ ((w' IN V) /\ ((w' IN (((set_of_edge w) V) E)) /\ (w IN (((set_of_edge w') V) E))))) |- (w' IN (((set_of_edge w) V) E))
T c==> c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f2 * * * part cset_of_edge f0 f1 f3 cIN f0 * * * part cset_of_edge f2 f1 f3 cIN f2 * * * part cset_of_edge f0 f1 f3
+ |- (((!x. ((x IN ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) ==> (x IN (dart1_of_fan (V , E))))) ==> (((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((LET (\w'. (LET_END ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)))) = ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) SUBSET (dart1_of_fan (V , E))) ==> (((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((LET (\w'. (LET_END ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)))))
T c= c==> ! c==> cIN b0 * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cIN b0 * part cdart1_of_fan c, f0 f1 c==> c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 cLET / cLET_END c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 b0 * * part cINSERT c, b0 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 b0 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 b0 f2 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 c==> cSUBSET * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 c==> c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 cLET / cLET_END c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 b0 * * part cINSERT c, b0 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 b0 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 b0 f2 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3
+ (!x. ((x IN ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) ==> (x IN (dart1_of_fan (V , E))))), ((f_fan_pair_ext (V , E)) = f), ((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) |- ((f (f (v , w))) IN (dart1_of_fan (V , E)))
T c==> ! c==> cIN b0 * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cIN b0 * part cdart1_of_fan c, f0 f1 c==> c= * part cf_fan_pair_ext c, f0 f1 f4 c==> c/\ c= * * part corbit_map f4 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT * f4 c, f2 f3 * * part cINSERT * f4 * f4 c, f2 f3 part cEMPTY c= * f4 * f4 * f4 c, f2 f3 c, f2 f3 cIN * f4 * f4 c, f2 f3 * part cdart1_of_fan c, f0 f1
+ |- (((!x. (((face H) x) = ((orbit_map (face_map H)) x))) ==> ((\x. (((face H) x) = ((orbit_map (face_map H)) x))) x)) = ((\x. (((face H) x) = ((orbit_map (face_map H)) x))) x))
T c= c==> ! c= * * part cface f0 b0 * * part corbit_map * part cface_map f0 b0 * / c= * * part cface f0 b0 * * part corbit_map * part cface_map f0 b0 f1 * / c= * * part cface f0 b0 * * part corbit_map * part cface_map f0 b0 f1
+ |- ((!E. (!v. (!w. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (((v , w) IN (dart1_of_fan (V , E))) /\ ((CARD ((face (hypermap_of_fan (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))))) ==> ((LET (\w'. (LET_END ((((face (hypermap_of_fan (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)))))) = T)
T c= ! ! ! c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 b0 c/\ cIN c, b1 b2 * part cdart1_of_fan c, f0 b0 c= cCARD * * part cface chypermap_of_fan c, f0 b0 c, b1 b2 cNUMERAL cBIT1 cBIT1 c_0 cLET / cLET_END c/\ c= * * part cface chypermap_of_fan c, f0 b0 c, b1 b2 * * part cINSERT c, b1 b2 * * part cINSERT c, b2 b3 * * part cINSERT c, b3 b1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 b0 b2 b3 b1 c= csigma_fan cvec cNUMERAL c_0 f0 b0 b3 b1 b2 csigma_fan cvec cNUMERAL c_0 f0 b0 b1 b2 cT
+ |- ((((FINITE (dart_of_fan (V , E))) /\ (((permutes (f_fan_pair_ext (V , E))) (dart_of_fan (V , E))) /\ ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))))) = p') ==> ((p' ==> (((((f_fan_pair_ext (V , E)) (v , w)) = ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) /\ ((((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w))) = ((inverse (f_fan_pair_ext (V , E))) (v , w))) /\ (((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) = (v , w)))) = q')) ==> ((((FINITE (dart_of_fan (V , E))) /\ (((permutes (f_fan_pair_ext (V , E))) (dart_of_fan (V , E))) /\ ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))))) ==> ((((f_fan_pair_ext (V , E)) (v , w)) = ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) /\ ((((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w))) = ((inverse (f_fan_pair_ext (V , E))) (v , w))) /\ (((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) = (v , w))))) = (p' ==> q'))))
T c==> c= c/\ cFINITE * part cdart_of_fan c, f0 f1 c/\ cpermutes * part cf_fan_pair_ext c, f0 f1 * part cdart_of_fan c, f0 f1 c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 f4 c==> c==> f4 c= c/\ c= cf_fan_pair_ext c, f0 f1 c, f2 f3 cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 c, f2 f3 c/\ c= cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f2 f3 cinverse * part cf_fan_pair_ext c, f0 f1 c, f2 f3 c= cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 c, f2 f3 c, f2 f3 f5 c= c==> c/\ cFINITE * part cdart_of_fan c, f0 f1 c/\ cpermutes * part cf_fan_pair_ext c, f0 f1 * part cdart_of_fan c, f0 f1 c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cf_fan_pair_ext c, f0 f1 c, f2 f3 cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 c, f2 f3 c/\ c= cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f2 f3 cinverse * part cf_fan_pair_ext c, f0 f1 c, f2 f3 c= cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 c, f2 f3 c, f2 f3 c==> f4 f5
+ (!x. ((x IN ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) ==> (x IN (dart1_of_fan (V , E))))), (FAN ((vec (NUMERAL _0)) , (V , E))), ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))), ((v , w) IN (dart1_of_fan (V , E))) |- ((((\w'. ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w')) w') ==> ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT ((w , (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)) INSERT (((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)) = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)) v) = w)))) = T)
T c==> ! c==> cIN b0 * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cIN b0 * part cdart1_of_fan c, f0 f1 c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c= c==> * / c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b0 f4 c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 * * part cINSERT c, csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f2 f3 cT
+ |- ((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) ==> (((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))) = ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))
T c==> c/\ c= * f0 c, f1 f2 cinverse f0 cinverse f0 c, f1 f2 c/\ c= * f0 * f0 c, f1 f2 cinverse f0 c, f1 f2 c= cinverse f0 cinverse f0 cinverse f0 c, f1 f2 c, f1 f2 c= c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2 c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT cinverse f0 cinverse f0 c, f1 f2 * * part cINSERT cinverse f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2
- ((\w'. ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w')) w') |- ((((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w') ==> (?w'. ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w'))) = (?w'. ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w')))
T c==> * / c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b0 f4 c= c==> c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f4 c? / c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b0 c? / c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b0
+ (FAN ((vec (NUMERAL _0)) , (V , E))), ((f_fan_pair_ext (V , E)) = f), ((v , w) IN (dart1_of_fan (V , E))) |- (((f (v , w)) = ((inverse f) (w' , v))) ==> (((f (v , w)) IN (dart1_of_fan (V , E))) ==> (((w' , v) IN (dart1_of_fan (V , E))) ==> ((((v , w) INSERT (((inverse f) (w' , v)) INSERT ((w' , v) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> c= * part cf_fan_pair_ext c, f0 f1 f2 c==> cIN c, f3 f4 * part cdart1_of_fan c, f0 f1 c==> c= * f2 c, f3 f4 cinverse f2 c, f5 f3 c==> cIN * f2 c, f3 f4 * part cdart1_of_fan c, f0 f1 c==> cIN c, f5 f3 * part cdart1_of_fan c, f0 f1 c/\ c= * * part cINSERT c, f3 f4 * * part cINSERT cinverse f2 c, f5 f3 * * part cINSERT c, f5 f3 part cEMPTY * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f5 * * part cINSERT c, f5 f3 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f5 f3 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f5 f3 f4
- (!x. ((x IN ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) ==> (x IN (dart1_of_fan (V , E))))), ((f_fan_pair_ext (V , E)) = f) |- (((x IN ((orbit_map f) (v , w))) ==> (x IN (dart1_of_fan (V , E)))) = T)
T c==> ! c==> cIN b0 * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cIN b0 * part cdart1_of_fan c, f0 f1 c==> c= * part cf_fan_pair_ext c, f0 f1 f4 c= c==> cIN f5 * * part corbit_map f4 c, f2 f3 cIN f5 * part cdart1_of_fan c, f0 f1 cT
+ |- (((!e'. (((~ (w' IN (((set_of_edge w) V) E))) = g') ==> ((g' ==> (w' = t')) ==> (((~ g') ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = e')) ==> ((((COND (~ (w' IN (((set_of_edge w) V) E)))) w') (((((sigma_fan (vec (NUMERAL _0))) V) E) w) w')) = (((COND g') t') e')))))) ==> ((\e'. (((~ (w' IN (((set_of_edge w) V) E))) = g') ==> ((g' ==> (w' = t')) ==> (((~ g') ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = e')) ==> ((((COND (~ (w' IN (((set_of_edge w) V) E)))) w') (((((sigma_fan (vec (NUMERAL _0))) V) E) w) w')) = (((COND g') t') e')))))) e')) = ((\e'. (((~ (w' IN (((set_of_edge w) V) E))) = g') ==> ((g' ==> (w' = t')) ==> (((~ g') ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = e')) ==> ((((COND (~ (w' IN (((set_of_edge w) V) E)))) w') (((((sigma_fan (vec (NUMERAL _0))) V) E) w) w')) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c~ cIN f0 * * * part cset_of_edge f1 f2 f3 f4 c==> c==> f4 c= f0 f5 c==> c==> c~ f4 c= csigma_fan cvec cNUMERAL c_0 f2 f3 f1 f0 b0 c= cCOND c~ cIN f0 * * * part cset_of_edge f1 f2 f3 f0 csigma_fan cvec cNUMERAL c_0 f2 f3 f1 f0 cCOND f4 f5 b0 * / c==> c= c~ cIN f0 * * * part cset_of_edge f1 f2 f3 f4 c==> c==> f4 c= f0 f5 c==> c==> c~ f4 c= csigma_fan cvec cNUMERAL c_0 f2 f3 f1 f0 b0 c= cCOND c~ cIN f0 * * * part cset_of_edge f1 f2 f3 f0 csigma_fan cvec cNUMERAL c_0 f2 f3 f1 f0 cCOND f4 f5 b0 f6 * / c==> c= c~ cIN f0 * * * part cset_of_edge f1 f2 f3 f4 c==> c==> f4 c= f0 f5 c==> c==> c~ f4 c= csigma_fan cvec cNUMERAL c_0 f2 f3 f1 f0 b0 c= cCOND c~ cIN f0 * * * part cset_of_edge f1 f2 f3 f0 csigma_fan cvec cNUMERAL c_0 f2 f3 f1 f0 cCOND f4 f5 b0 f6
+ |- (((!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))) ==> ((\y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))) y)) = ((\y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))) y))
T c= c==> ! ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 * / ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 f1 * / ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 f1
+ |- ((\s. (!x. ((((res f) s) x) = (((COND (x IN s)) (f x)) x)))) s)
T * / ! c= cres f0 b0 b1 cCOND cIN b1 b0 * f0 b1 b1 f1
+ ((!x. ((((((extension_sigma_fan (vec (NUMERAL _0))) V) E) w) (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) x)) = x)) /\ (!x. ((((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) (((((extension_sigma_fan (vec (NUMERAL _0))) V) E) w) x)) = x))) |- ((\x. ((((((extension_sigma_fan (vec (NUMERAL _0))) V) E) w) (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) x)) = x)) x)
T c==> c/\ ! c= cextension_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 b0 ! c= cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 cextension_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 b0 * / c= cextension_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 b0 f3
+ |- ((\q'. (((v = (((COND (~ (w' IN (((set_of_edge w) V) E)))) w') (((((sigma_fan (vec (NUMERAL _0))) V) E) w) w'))) = p') ==> ((p' ==> (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) = q')) ==> (((v = (((COND (~ (w' IN (((set_of_edge w) V) E)))) w') (((((sigma_fan (vec (NUMERAL _0))) V) E) w) w'))) ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v)) = (p' ==> q'))))) q')
T * / c==> c= c= f0 cCOND c~ cIN f1 * * * part cset_of_edge f2 f3 f4 f1 csigma_fan cvec cNUMERAL c_0 f3 f4 f2 f1 f5 c==> c==> f5 c= c= csigma_fan cvec cNUMERAL c_0 f3 f4 f2 f1 f0 b0 c= c==> c= f0 cCOND c~ cIN f1 * * * part cset_of_edge f2 f3 f4 f1 csigma_fan cvec cNUMERAL c_0 f3 f4 f2 f1 c= csigma_fan cvec cNUMERAL c_0 f3 f4 f2 f1 f0 c==> f5 b0 f6
- ((\f. ((f_fan_pair_ext (V , E)) = f)) f) |- (((\f. ((f_fan_pair_ext (V , E)) = f)) f) /\ (?f. ((f_fan_pair_ext (V , E)) = f)))
T c==> * / c= * part cf_fan_pair_ext c, f0 f1 b0 f2 c/\ * / c= * part cf_fan_pair_ext c, f0 f1 b0 f2 c? / c= * part cf_fan_pair_ext c, f0 f1 b0
+ (!x. ((x IN ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) ==> (x IN (dart1_of_fan (V , E))))), ((f_fan_pair_ext (V , E)) = f) |- (!x. ((x IN ((orbit_map f) (v , w))) ==> (x IN (dart1_of_fan (V , E)))))
T c==> ! c==> cIN b0 * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cIN b0 * part cdart1_of_fan c, f0 f1 c==> c= * part cf_fan_pair_ext c, f0 f1 f4 ! c==> cIN b0 * * part corbit_map f4 c, f2 f3 cIN b0 * part cdart1_of_fan c, f0 f1
+ (FAN ((vec (NUMERAL _0)) , (V , E))), ((v , w) IN (dart1_of_fan (V , E))) |- (((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) SUBSET (dart1_of_fan (V , E))) ==> ((((CARD ((face (hypermap_of_fan (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((LET (\w'. (LET_END ((((face (hypermap_of_fan (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w))) = q')) ==> (((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((v , w) IN (dart1_of_fan (V , E)))) ==> (((face (hypermap_of_fan (V , E))) (v , w)) SUBSET (dart1_of_fan (V , E)))) ==> (((CARD ((face (hypermap_of_fan (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((LET (\w'. (LET_END ((((face (hypermap_of_fan (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)))) = ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) SUBSET (dart1_of_fan (V , E))) ==> q')))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c==> c==> cSUBSET * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 c= c==> c= cCARD * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 cLET / cLET_END c/\ c= * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 b0 * * part cINSERT c, b0 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 b0 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 b0 f2 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f4 c= c==> c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 cSUBSET * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 c==> c= cCARD * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 cLET / cLET_END c/\ c= * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 b0 * * part cINSERT c, b0 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 b0 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 b0 f2 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 c==> cSUBSET * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 f4
+ (!x. ((x IN ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) ==> (x IN (dart1_of_fan (V , E))))), ((f_fan_pair_ext (V , E)) = f), ((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) |- ((f (v , w)) IN (dart1_of_fan (V , E)))
T c==> ! c==> cIN b0 * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cIN b0 * part cdart1_of_fan c, f0 f1 c==> c= * part cf_fan_pair_ext c, f0 f1 f4 c==> c/\ c= * * part corbit_map f4 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT * f4 c, f2 f3 * * part cINSERT * f4 * f4 c, f2 f3 part cEMPTY c= * f4 * f4 * f4 c, f2 f3 c, f2 f3 cIN * f4 c, f2 f3 * part cdart1_of_fan c, f0 f1
- (!x. ((x IN ((orbit_map f) (v , w))) ==> (x IN (dart1_of_fan (V , E))))) |- ((!x. ((x IN ((orbit_map f) (v , w))) ==> (x IN (dart1_of_fan (V , E))))) /\ (!x. ((x IN ((orbit_map f) (v , w))) ==> (x IN (dart1_of_fan (V , E))))))
T c==> ! c==> cIN b0 * * part corbit_map f0 c, f1 f2 cIN b0 * part cdart1_of_fan c, f3 f4 c/\ ! c==> cIN b0 * * part corbit_map f0 c, f1 f2 cIN b0 * part cdart1_of_fan c, f3 f4 ! c==> cIN b0 * * part corbit_map f0 c, f1 f2 cIN b0 * part cdart1_of_fan c, f3 f4
+ |- (((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((w , w') IN (dart1_of_fan (V , E)))) ==> ((w IN V) /\ ((w' IN V) /\ ((w' IN (((set_of_edge w) V) E)) /\ (w IN (((set_of_edge w') V) E)))))) = p') ==> ((p' ==> (((v = (((COND (~ (w' IN (((set_of_edge w) V) E)))) w') (((((sigma_fan (vec (NUMERAL _0))) V) E) w) w'))) ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v)) = q')) ==> (((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((w , w') IN (dart1_of_fan (V , E)))) ==> ((w IN V) /\ ((w' IN V) /\ ((w' IN (((set_of_edge w) V) E)) /\ (w IN (((set_of_edge w') V) E)))))) ==> ((v = (((COND (~ (w' IN (((set_of_edge w) V) E)))) w') (((((sigma_fan (vec (NUMERAL _0))) V) E) w) w'))) ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v))) = (p' ==> q'))))
T c==> c= c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c/\ cIN f2 f0 c/\ cIN f3 f0 c/\ cIN f3 * * * part cset_of_edge f2 f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 f4 c==> c==> f4 c= c==> c= f5 cCOND c~ cIN f3 * * * part cset_of_edge f2 f0 f1 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f5 f6 c= c==> c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c/\ cIN f2 f0 c/\ cIN f3 f0 c/\ cIN f3 * * * part cset_of_edge f2 f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 c==> c= f5 cCOND c~ cIN f3 * * * part cset_of_edge f2 f0 f1 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f5 c==> f4 f6
+ ((\w'. ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w')) w') |- ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w')
T c==> * / c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b0 f4 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f4
+ |- (((!t'. (!e'. ((((v , w) IN (dart1_of_fan (V , E))) = g') ==> ((g' ==> (((f_fan_pair (V , E)) (v , w)) = t')) ==> (((~ g') ==> ((v , w) = e')) ==> ((((COND ((v , w) IN (dart1_of_fan (V , E)))) ((f_fan_pair (V , E)) (v , w))) (v , w)) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((v , w) IN (dart1_of_fan (V , E))) = g') ==> ((g' ==> (((f_fan_pair (V , E)) (v , w)) = t')) ==> (((~ g') ==> ((v , w) = e')) ==> ((((COND ((v , w) IN (dart1_of_fan (V , E)))) ((f_fan_pair (V , E)) (v , w))) (v , w)) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((v , w) IN (dart1_of_fan (V , E))) = g') ==> ((g' ==> (((f_fan_pair (V , E)) (v , w)) = t')) ==> (((~ g') ==> ((v , w) = e')) ==> ((((COND ((v , w) IN (dart1_of_fan (V , E)))) ((f_fan_pair (V , E)) (v , w))) (v , w)) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cIN c, f0 f1 * part cdart1_of_fan c, f2 f3 f4 c==> c==> f4 c= cf_fan_pair c, f2 f3 c, f0 f1 b0 c==> c==> c~ f4 c= c, f0 f1 b1 c= cCOND cIN c, f0 f1 * part cdart1_of_fan c, f2 f3 cf_fan_pair c, f2 f3 c, f0 f1 c, f0 f1 cCOND f4 b0 b1 * / ! c==> c= cIN c, f0 f1 * part cdart1_of_fan c, f2 f3 f4 c==> c==> f4 c= cf_fan_pair c, f2 f3 c, f0 f1 b0 c==> c==> c~ f4 c= c, f0 f1 b1 c= cCOND cIN c, f0 f1 * part cdart1_of_fan c, f2 f3 cf_fan_pair c, f2 f3 c, f0 f1 c, f0 f1 cCOND f4 b0 b1 f5 * / ! c==> c= cIN c, f0 f1 * part cdart1_of_fan c, f2 f3 f4 c==> c==> f4 c= cf_fan_pair c, f2 f3 c, f0 f1 b0 c==> c==> c~ f4 c= c, f0 f1 b1 c= cCOND cIN c, f0 f1 * part cdart1_of_fan c, f2 f3 cf_fan_pair c, f2 f3 c, f0 f1 c, f0 f1 cCOND f4 b0 b1 f5
+ |- ((t \/ T) = T)
T c= c\/ f0 cT cT
+ |- ((\p'. (!q'. (((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) SUBSET (dart1_of_fan (V , E))) = p') ==> ((p' ==> ((((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((LET (\w'. (LET_END ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w))) = q')) ==> (((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) SUBSET (dart1_of_fan (V , E))) ==> (((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((LET (\w'. (LET_END ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)))) = (p' ==> q')))))) p')
T * / ! c==> c= cSUBSET * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 b0 c==> c==> b0 c= c==> c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 cLET / cLET_END c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 b2 * * part cINSERT c, b2 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 b2 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 b2 f2 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b1 c= c==> cSUBSET * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 c==> c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 cLET / cLET_END c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 b2 * * part cINSERT c, b2 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 b2 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 b2 f2 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 c==> b0 b1 f4
+ |- ((\V. (!E. (!v. (!u. ((((((extension_sigma_fan x) V) E) v) u) = (((COND (~ (u IN (((set_of_edge v) V) E)))) u) (((((sigma_fan x) V) E) v) u))))))) V)
T * / ! ! ! c= cextension_sigma_fan f0 b0 b1 b2 b3 cCOND c~ cIN b3 * * * part cset_of_edge b2 b0 b1 b3 csigma_fan f0 b0 b1 b2 b3 f1
+ |- (((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (FINITE (dart_of_fan (V , E)))))) ==> ((\V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (FINITE (dart_of_fan (V , E)))))) V)) = ((\V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (FINITE (dart_of_fan (V , E)))))) V))
T c= c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cFINITE * part cdart_of_fan c, b0 b1 * / ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cFINITE * part cdart_of_fan c, b0 b1 f0 * / ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cFINITE * part cdart_of_fan c, b0 b1 f0
+ (!x. ((x IN ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) ==> (x IN (dart1_of_fan (V , E))))), (FAN ((vec (NUMERAL _0)) , (V , E))), ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))), ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w'), ((v , w) IN (dart1_of_fan (V , E))) |- ((((\f. ((f_fan_pair_ext (V , E)) = f)) f) ==> ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = T)
T c==> ! c==> cIN b0 * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cIN b0 * part cdart1_of_fan c, f0 f1 c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f4 c==> cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c= c==> * / c= * part cf_fan_pair_ext c, f0 f1 b0 f5 c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f4 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f3 cT
+ |- ((\V. (!E. (!v. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((((((extension_sigma_fan (vec (NUMERAL _0))) V) E) v) o ((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) v)) = I) /\ ((((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) v) o ((((extension_sigma_fan (vec (NUMERAL _0))) V) E) v)) = I)))))) V)
T * / ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 c/\ c= * * part co * * * * part cextension_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 * * * * part cinverse_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 part cI c= * * part co * * * * part cinverse_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 * * * * part cextension_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 part cI f0
+ (FAN ((vec (NUMERAL _0)) , (V , E))), ((f_fan_pair_ext (V , E)) = f), ((f (f (v , w))) = ((inverse f) (v , w))), ((f (v , w)) = ((inverse f) ((inverse f) (v , w)))), (((inverse f) (v , w)) = (w' , v)), (((f (v , w)) IN (dart1_of_fan (V , E))) /\ ((f (f (v , w))) IN (dart1_of_fan (V , E)))), ((v , w) IN (dart1_of_fan (V , E))) |- ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> c= * part cf_fan_pair_ext c, f0 f1 f2 c==> c= * f2 * f2 c, f3 f4 cinverse f2 c, f3 f4 c==> c= * f2 c, f3 f4 cinverse f2 cinverse f2 c, f3 f4 c==> c= cinverse f2 c, f3 f4 c, f5 f3 c==> c/\ cIN * f2 c, f3 f4 * part cdart1_of_fan c, f0 f1 cIN * f2 * f2 c, f3 f4 * part cdart1_of_fan c, f0 f1 c==> cIN c, f3 f4 * part cdart1_of_fan c, f0 f1 c/\ c= * * part cINSERT c, f3 f4 * * part cINSERT cinverse f2 cinverse f2 c, f3 f4 * * part cINSERT cinverse f2 c, f3 f4 part cEMPTY * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f5 * * part cINSERT c, f5 f3 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f5 f3 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f5 f3 f4
+ |- ((((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))) = p') ==> ((p' ==> (((LET (\w'. (LET_END ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)) = q')) ==> ((((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((LET (\w'. (LET_END ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w))) = (p' ==> q'))))
T c==> c= c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 f4 c==> c==> f4 c= cLET / cLET_END c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 b0 * * part cINSERT c, b0 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 b0 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 b0 f2 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f5 c= c==> c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 cLET / cLET_END c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 b0 * * part cINSERT c, b0 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 b0 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 b0 f2 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 c==> f4 f5
+ |- ((((CARD ((orbit_map f) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))) = p') ==> ((p' ==> (((((FINITE (dart_of_fan (V , E))) /\ (((permutes (f_fan_pair_ext (V , E))) (dart_of_fan (V , E))) /\ ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))))) ==> ((((f_fan_pair_ext (V , E)) (v , w)) = ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) /\ ((((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w))) = ((inverse (f_fan_pair_ext (V , E))) (v , w))) /\ (((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) = (v , w))))) ==> ((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = q')) ==> ((((CARD ((orbit_map f) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((FINITE (dart_of_fan (V , E))) /\ (((permutes (f_fan_pair_ext (V , E))) (dart_of_fan (V , E))) /\ ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))))) ==> ((((f_fan_pair_ext (V , E)) (v , w)) = ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) /\ ((((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w))) = ((inverse (f_fan_pair_ext (V , E))) (v , w))) /\ (((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) = (v , w))))) ==> ((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))))) = (p' ==> q'))))
T c==> c= c= cCARD * * part corbit_map f0 c, f1 f2 cNUMERAL cBIT1 cBIT1 c_0 f3 c==> c==> f3 c= c==> c==> c/\ cFINITE * part cdart_of_fan c, f4 f5 c/\ cpermutes * part cf_fan_pair_ext c, f4 f5 * part cdart_of_fan c, f4 f5 c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f4 f5 c, f1 f2 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cf_fan_pair_ext c, f4 f5 c, f1 f2 cinverse * part cf_fan_pair_ext c, f4 f5 cinverse * part cf_fan_pair_ext c, f4 f5 c, f1 f2 c/\ c= cf_fan_pair_ext c, f4 f5 cf_fan_pair_ext c, f4 f5 c, f1 f2 cinverse * part cf_fan_pair_ext c, f4 f5 c, f1 f2 c= cinverse * part cf_fan_pair_ext c, f4 f5 cinverse * part cf_fan_pair_ext c, f4 f5 cinverse * part cf_fan_pair_ext c, f4 f5 c, f1 f2 c, f1 f2 c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f6 * * part cINSERT c, f6 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f6 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f6 f1 f2 f7 c= c==> c= cCARD * * part corbit_map f0 c, f1 f2 cNUMERAL cBIT1 cBIT1 c_0 c==> c==> c/\ cFINITE * part cdart_of_fan c, f4 f5 c/\ cpermutes * part cf_fan_pair_ext c, f4 f5 * part cdart_of_fan c, f4 f5 c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f4 f5 c, f1 f2 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cf_fan_pair_ext c, f4 f5 c, f1 f2 cinverse * part cf_fan_pair_ext c, f4 f5 cinverse * part cf_fan_pair_ext c, f4 f5 c, f1 f2 c/\ c= cf_fan_pair_ext c, f4 f5 cf_fan_pair_ext c, f4 f5 c, f1 f2 cinverse * part cf_fan_pair_ext c, f4 f5 c, f1 f2 c= cinverse * part cf_fan_pair_ext c, f4 f5 cinverse * part cf_fan_pair_ext c, f4 f5 cinverse * part cf_fan_pair_ext c, f4 f5 c, f1 f2 c, f1 f2 c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f6 * * part cINSERT c, f6 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f6 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f6 f1 f2 c==> f3 f7
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- (((~ (w' IN (((set_of_edge w) V) E))) = g') ==> ((g' ==> (w' = t')) ==> (((~ g') ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = e')) ==> ((((COND (~ (w' IN (((set_of_edge w) V) E)))) w') (((((sigma_fan (vec (NUMERAL _0))) V) E) w) w')) = (((COND g') t') e')))))
T c==> c= c~ cIN f0 * * * part cset_of_edge f1 f2 f3 f4 c==> c==> f4 c= f0 f5 c==> c==> c~ f4 c= csigma_fan cvec cNUMERAL c_0 f2 f3 f1 f0 f6 c= cCOND c~ cIN f0 * * * part cset_of_edge f1 f2 f3 f0 csigma_fan cvec cNUMERAL c_0 f2 f3 f1 f0 cCOND f4 f5 f6
+ (FAN ((vec (NUMERAL _0)) , (V , E))), (((v , w) IN (dart1_of_fan (V , E))) /\ ((CARD ((face (hypermap_of_fan (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0))))), ((v , w) IN (dart1_of_fan (V , E))) |- ((LET (\w'. (LET_END ((((face (hypermap_of_fan (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> c/\ cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c= cCARD * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 cLET / cLET_END c/\ c= * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 b0 * * part cINSERT c, b0 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 b0 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 b0 f2 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3
- ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w') |- (((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w') /\ (?w'. ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w')))
T c==> c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f4 c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f4 c? / c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b0
+ (FAN ((vec (NUMERAL _0)) , (V , E))), ((f_fan_pair_ext (V , E)) = f), ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w'), ((v , w) IN (dart1_of_fan (V , E))) |- (((inverse f) (v , w)) = (w' , v))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> c= * part cf_fan_pair_ext c, f0 f1 f2 c==> c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f4 f5 c==> cIN c, f3 f4 * part cdart1_of_fan c, f0 f1 c= cinverse f2 c, f3 f4 c, f5 f3
+ |- (((!w. (!v. (((f_fan_pair (V , E)) (v , w)) = (w , (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) v))))) ==> ((\w. (!v. (((f_fan_pair (V , E)) (v , w)) = (w , (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) v))))) w)) = ((\w. (!v. (((f_fan_pair (V , E)) (v , w)) = (w , (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) v))))) w))
T c= c==> ! ! c= cf_fan_pair c, f0 f1 c, b1 b0 c, b0 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 * / ! c= cf_fan_pair c, f0 f1 c, b1 b0 c, b0 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 f2 * / ! c= cf_fan_pair c, f0 f1 c, b1 b0 c, b0 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 f2
- (FAN ((vec (NUMERAL _0)) , (V , E))) |- ((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((tuple_hypermap (hypermap_of_fan (V , E))) = ((dart_of_fan (V , E)) , ((e_fan_pair_ext (V , E)) , ((n_fan_pair_ext (V , E)) , (f_fan_pair_ext (V , E)))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 c= ctuple_hypermap chypermap_of_fan c, f0 f1 c, * part cdart_of_fan c, f0 f1 c, * part ce_fan_pair_ext c, f0 f1 c, * part cn_fan_pair_ext c, f0 f1 * part cf_fan_pair_ext c, f0 f1
+ |- (((!E. (!v. (!w. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((v , w) IN (dart1_of_fan (V , E)))) ==> ((v IN V) /\ ((w IN V) /\ ((w IN (((set_of_edge v) V) E)) /\ (v IN (((set_of_edge w) V) E))))))))) ==> ((\E. (!v. (!w. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((v , w) IN (dart1_of_fan (V , E)))) ==> ((v IN V) /\ ((w IN V) /\ ((w IN (((set_of_edge v) V) E)) /\ (v IN (((set_of_edge w) V) E))))))))) E)) = ((\E. (!v. (!w. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((v , w) IN (dart1_of_fan (V , E)))) ==> ((v IN V) /\ ((w IN V) /\ ((w IN (((set_of_edge v) V) E)) /\ (v IN (((set_of_edge w) V) E))))))))) E))
T c= c==> ! ! ! c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 b0 cIN c, b1 b2 * part cdart1_of_fan c, f0 b0 c/\ cIN b1 f0 c/\ cIN b2 f0 c/\ cIN b2 * * * part cset_of_edge b1 f0 b0 cIN b1 * * * part cset_of_edge b2 f0 b0 * / ! ! c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 b0 cIN c, b1 b2 * part cdart1_of_fan c, f0 b0 c/\ cIN b1 f0 c/\ cIN b2 f0 c/\ cIN b2 * * * part cset_of_edge b1 f0 b0 cIN b1 * * * part cset_of_edge b2 f0 b0 f1 * / ! ! c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 b0 cIN c, b1 b2 * part cdart1_of_fan c, f0 b0 c/\ cIN b1 f0 c/\ cIN b2 f0 c/\ cIN b2 * * * part cset_of_edge b1 f0 b0 cIN b1 * * * part cset_of_edge b2 f0 b0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((\f. (!s. (!x. ((((res f) s) x) = (((COND (x IN s)) (f x)) x))))) f)
T * / ! ! c= cres b0 b1 b2 cCOND cIN b2 b1 * b0 b2 b2 f0
+ (FAN ((vec (NUMERAL _0)) , (V , E))), ((f_fan_pair_ext (V , E)) = f), ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w'), (((f (v , w)) IN (dart1_of_fan (V , E))) /\ ((f (f (v , w))) IN (dart1_of_fan (V , E)))), ((v , w) IN (dart1_of_fan (V , E))) |- ((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) ==> ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> c= * part cf_fan_pair_ext c, f0 f1 f2 c==> c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f4 f5 c==> c/\ cIN * f2 c, f3 f4 * part cdart1_of_fan c, f0 f1 cIN * f2 * f2 c, f3 f4 * part cdart1_of_fan c, f0 f1 c==> cIN c, f3 f4 * part cdart1_of_fan c, f0 f1 c==> c/\ c= * f2 c, f3 f4 cinverse f2 cinverse f2 c, f3 f4 c/\ c= * f2 * f2 c, f3 f4 cinverse f2 c, f3 f4 c= cinverse f2 cinverse f2 cinverse f2 c, f3 f4 c, f3 f4 c/\ c= * * part cINSERT c, f3 f4 * * part cINSERT cinverse f2 cinverse f2 c, f3 f4 * * part cINSERT cinverse f2 c, f3 f4 part cEMPTY * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f5 * * part cINSERT c, f5 f3 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f5 f3 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f5 f3 f4
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ ((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) |- ((((f (v , w)) IN ((orbit_map f) (v , w))) ==> ((f (v , w)) IN (dart1_of_fan (V , E)))) = ((f (v , w)) IN (dart1_of_fan (V , E))))
T c==> c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 c= c==> cIN * f0 c, f1 f2 * * part corbit_map f0 c, f1 f2 cIN * f0 c, f1 f2 * part cdart1_of_fan c, f3 f4 cIN * f0 c, f1 f2 * part cdart1_of_fan c, f3 f4
- (!x. ((x IN ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) ==> (x IN (dart1_of_fan (V , E))))), ((f_fan_pair_ext (V , E)) = f), (x IN ((orbit_map f) (v , w))) |- ((x IN ((orbit_map f) (v , w))) /\ ((x IN (dart1_of_fan (V , E))) = T))
T c==> ! c==> cIN b0 * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cIN b0 * part cdart1_of_fan c, f0 f1 c==> c= * part cf_fan_pair_ext c, f0 f1 f4 c==> cIN f5 * * part corbit_map f4 c, f2 f3 c/\ cIN f5 * * part corbit_map f4 c, f2 f3 c= cIN f5 * part cdart1_of_fan c, f0 f1 cT
- |- ((((\f. ((f_fan_pair_ext (V , E)) = f)) f) ==> (?f. ((f_fan_pair_ext (V , E)) = f))) = T)
T c= c==> * / c= * part cf_fan_pair_ext c, f0 f1 b0 f2 c? / c= * part cf_fan_pair_ext c, f0 f1 b0 cT
- |- ((\p'. (!q'. ((((CARD ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) = (NUMERAL (BIT1 (BIT1 _0)))) = p') ==> ((p' ==> (((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) ==> ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = q')) ==> ((((CARD ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) ==> ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))))) = (p' ==> q')))))) p')
T * / ! c==> c= c= cCARD * * part cINSERT c, f0 f1 * * part cINSERT * f2 c, f0 f1 * * part cINSERT * f2 * f2 c, f0 f1 part cEMPTY cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= c==> c/\ c= * f2 c, f0 f1 cinverse f2 cinverse f2 c, f0 f1 c/\ c= * f2 * f2 c, f0 f1 cinverse f2 c, f0 f1 c= cinverse f2 cinverse f2 cinverse f2 c, f0 f1 c, f0 f1 c/\ c= * * part cINSERT c, f0 f1 * * part cINSERT cinverse f2 cinverse f2 c, f0 f1 * * part cINSERT cinverse f2 c, f0 f1 part cEMPTY * * part cINSERT c, f0 f1 * * part cINSERT c, f1 f3 * * part cINSERT c, f3 f0 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f1 f3 f0 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f0 f1 b1 c= c==> c= cCARD * * part cINSERT c, f0 f1 * * part cINSERT * f2 c, f0 f1 * * part cINSERT * f2 * f2 c, f0 f1 part cEMPTY cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ c= * f2 c, f0 f1 cinverse f2 cinverse f2 c, f0 f1 c/\ c= * f2 * f2 c, f0 f1 cinverse f2 c, f0 f1 c= cinverse f2 cinverse f2 cinverse f2 c, f0 f1 c, f0 f1 c/\ c= * * part cINSERT c, f0 f1 * * part cINSERT cinverse f2 cinverse f2 c, f0 f1 * * part cINSERT cinverse f2 c, f0 f1 part cEMPTY * * part cINSERT c, f0 f1 * * part cINSERT c, f1 f3 * * part cINSERT c, f3 f0 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f1 f3 f0 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f0 f1 c==> b0 b1 f6
+ (FAN ((vec (NUMERAL _0)) , (V , E))), ((v , w) IN (dart1_of_fan (V , E))) |- (((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((v , w) IN (dart1_of_fan (V , E)))) = T) ==> ((T ==> ((((face (hypermap_of_fan (V , E))) (v , w)) SUBSET (dart1_of_fan (V , E))) = q')) ==> ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((v , w) IN (dart1_of_fan (V , E)))) ==> (((face (hypermap_of_fan (V , E))) (v , w)) SUBSET (dart1_of_fan (V , E)))) = (T ==> q')))) = ((T ==> ((((face (hypermap_of_fan (V , E))) (v , w)) SUBSET (dart1_of_fan (V , E))) = q')) ==> ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((v , w) IN (dart1_of_fan (V , E)))) ==> (((face (hypermap_of_fan (V , E))) (v , w)) SUBSET (dart1_of_fan (V , E)))) = (T ==> q'))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c= c==> c= c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 cT c==> c==> cT c= cSUBSET * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 f4 c= c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 cSUBSET * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 c==> cT f4 c==> c==> cT c= cSUBSET * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 f4 c= c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 cSUBSET * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 c==> cT f4
+ ((w IN V) /\ ((w' IN V) /\ ((w' IN (((set_of_edge w) V) E)) /\ (w IN (((set_of_edge w') V) E))))) |- ((w' IN (((set_of_edge w) V) E)) /\ (w IN (((set_of_edge w') V) E)))
T c==> c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f2 * * * part cset_of_edge f0 f1 f3 cIN f0 * * * part cset_of_edge f2 f1 f3 c/\ cIN f2 * * * part cset_of_edge f0 f1 f3 cIN f0 * * * part cset_of_edge f2 f1 f3
+ ((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) |- (T = ((f (f (v , w))) IN ((orbit_map f) (v , w))))
T c==> c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 c= cT cIN * f0 * f0 c, f1 f2 * * part corbit_map f0 c, f1 f2
+ |- (((?f. ((f_fan_pair_ext (V , E)) = f)) ==> ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))))
T c= c==> c? / c= * part cf_fan_pair_ext c, f0 f1 b0 c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f4 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f3 c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f4 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f3
+ |- (((!v. (((f_fan_pair (V , E)) (v , w)) = (w , (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) v)))) ==> ((\v. (((f_fan_pair (V , E)) (v , w)) = (w , (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) v)))) v)) = ((\v. (((f_fan_pair (V , E)) (v , w)) = (w , (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) v)))) v))
T c= c==> ! c= cf_fan_pair c, f0 f1 c, b0 f2 c, f2 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 * / c= cf_fan_pair c, f0 f1 c, b0 f2 c, f2 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 f3 * / c= cf_fan_pair c, f0 f1 c, b0 f2 c, f2 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 f3
+ |- (((!p'. (!q'. (((v = (((COND (~ (w' IN (((set_of_edge w) V) E)))) w') (((((sigma_fan (vec (NUMERAL _0))) V) E) w) w'))) = p') ==> ((p' ==> (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) = q')) ==> (((v = (((COND (~ (w' IN (((set_of_edge w) V) E)))) w') (((((sigma_fan (vec (NUMERAL _0))) V) E) w) w'))) ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v)) = (p' ==> q')))))) ==> ((\p'. (!q'. (((v = (((COND (~ (w' IN (((set_of_edge w) V) E)))) w') (((((sigma_fan (vec (NUMERAL _0))) V) E) w) w'))) = p') ==> ((p' ==> (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) = q')) ==> (((v = (((COND (~ (w' IN (((set_of_edge w) V) E)))) w') (((((sigma_fan (vec (NUMERAL _0))) V) E) w) w'))) ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v)) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((v = (((COND (~ (w' IN (((set_of_edge w) V) E)))) w') (((((sigma_fan (vec (NUMERAL _0))) V) E) w) w'))) = p') ==> ((p' ==> (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) = q')) ==> (((v = (((COND (~ (w' IN (((set_of_edge w) V) E)))) w') (((((sigma_fan (vec (NUMERAL _0))) V) E) w) w'))) ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v)) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c= f0 cCOND c~ cIN f1 * * * part cset_of_edge f2 f3 f4 f1 csigma_fan cvec cNUMERAL c_0 f3 f4 f2 f1 b0 c==> c==> b0 c= c= csigma_fan cvec cNUMERAL c_0 f3 f4 f2 f1 f0 b1 c= c==> c= f0 cCOND c~ cIN f1 * * * part cset_of_edge f2 f3 f4 f1 csigma_fan cvec cNUMERAL c_0 f3 f4 f2 f1 c= csigma_fan cvec cNUMERAL c_0 f3 f4 f2 f1 f0 c==> b0 b1 * / ! c==> c= c= f0 cCOND c~ cIN f1 * * * part cset_of_edge f2 f3 f4 f1 csigma_fan cvec cNUMERAL c_0 f3 f4 f2 f1 b0 c==> c==> b0 c= c= csigma_fan cvec cNUMERAL c_0 f3 f4 f2 f1 f0 b1 c= c==> c= f0 cCOND c~ cIN f1 * * * part cset_of_edge f2 f3 f4 f1 csigma_fan cvec cNUMERAL c_0 f3 f4 f2 f1 c= csigma_fan cvec cNUMERAL c_0 f3 f4 f2 f1 f0 c==> b0 b1 f5 * / ! c==> c= c= f0 cCOND c~ cIN f1 * * * part cset_of_edge f2 f3 f4 f1 csigma_fan cvec cNUMERAL c_0 f3 f4 f2 f1 b0 c==> c==> b0 c= c= csigma_fan cvec cNUMERAL c_0 f3 f4 f2 f1 f0 b1 c= c==> c= f0 cCOND c~ cIN f1 * * * part cset_of_edge f2 f3 f4 f1 csigma_fan cvec cNUMERAL c_0 f3 f4 f2 f1 c= csigma_fan cvec cNUMERAL c_0 f3 f4 f2 f1 f0 c==> b0 b1 f5
+ |- (((!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((tuple_hypermap (hypermap_of_fan (V , E))) = ((dart_of_fan (V , E)) , ((e_fan_pair_ext (V , E)) , ((n_fan_pair_ext (V , E)) , (f_fan_pair_ext (V , E)))))))) ==> ((\E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((tuple_hypermap (hypermap_of_fan (V , E))) = ((dart_of_fan (V , E)) , ((e_fan_pair_ext (V , E)) , ((n_fan_pair_ext (V , E)) , (f_fan_pair_ext (V , E)))))))) E)) = ((\E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((tuple_hypermap (hypermap_of_fan (V , E))) = ((dart_of_fan (V , E)) , ((e_fan_pair_ext (V , E)) , ((n_fan_pair_ext (V , E)) , (f_fan_pair_ext (V , E)))))))) E))
T c= c==> ! c==> cFAN c, cvec cNUMERAL c_0 c, f0 b0 c= ctuple_hypermap chypermap_of_fan c, f0 b0 c, * part cdart_of_fan c, f0 b0 c, * part ce_fan_pair_ext c, f0 b0 c, * part cn_fan_pair_ext c, f0 b0 * part cf_fan_pair_ext c, f0 b0 * / c==> cFAN c, cvec cNUMERAL c_0 c, f0 b0 c= ctuple_hypermap chypermap_of_fan c, f0 b0 c, * part cdart_of_fan c, f0 b0 c, * part ce_fan_pair_ext c, f0 b0 c, * part cn_fan_pair_ext c, f0 b0 * part cf_fan_pair_ext c, f0 b0 f1 * / c==> cFAN c, cvec cNUMERAL c_0 c, f0 b0 c= ctuple_hypermap chypermap_of_fan c, f0 b0 c, * part cdart_of_fan c, f0 b0 c, * part ce_fan_pair_ext c, f0 b0 c, * part cn_fan_pair_ext c, f0 b0 * part cf_fan_pair_ext c, f0 b0 f1
+ (!x. ((x IN ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) ==> (x IN (dart1_of_fan (V , E))))), (FAN ((vec (NUMERAL _0)) , (V , E))), ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))), ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w'), ((v , w) IN (dart1_of_fan (V , E))) |- (((!x. (((\f. ((f_fan_pair_ext (V , E)) = f)) x) ==> ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))))) ==> ((?f. ((f_fan_pair_ext (V , E)) = f)) ==> ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))))) = ((?f. ((f_fan_pair_ext (V , E)) = f)) ==> ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))
T c==> ! c==> cIN b0 * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cIN b0 * part cdart1_of_fan c, f0 f1 c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f4 c==> cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c= c==> ! c==> * / c= * part cf_fan_pair_ext c, f0 f1 b1 b0 c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f4 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f3 c==> c? / c= * part cf_fan_pair_ext c, f0 f1 b0 c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f4 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f3 c==> c? / c= * part cf_fan_pair_ext c, f0 f1 b0 c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f4 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f3
+ (!x. ((x IN ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) ==> (x IN (dart1_of_fan (V , E))))), (FAN ((vec (NUMERAL _0)) , (V , E))), ((CARD ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))), ((v , w) IN (dart1_of_fan (V , E))) |- ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) = ((v , w) INSERT ((w , (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)) INSERT (((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)) = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)) v) = w)))
T c==> ! c==> cIN b0 * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cIN b0 * part cdart1_of_fan c, f0 f1 c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> c= cCARD * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c/\ c= * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 * * part cINSERT c, csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f2 f3
- |- (((CARD ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) = (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) ==> ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = ((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) ==> ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))))))
T c==> c= cCARD * * part cINSERT c, f0 f1 * * part cINSERT * f2 c, f0 f1 * * part cINSERT * f2 * f2 c, f0 f1 part cEMPTY cNUMERAL cBIT1 cBIT1 c_0 c= c==> c/\ c= * f2 c, f0 f1 cinverse f2 cinverse f2 c, f0 f1 c/\ c= * f2 * f2 c, f0 f1 cinverse f2 c, f0 f1 c= cinverse f2 cinverse f2 cinverse f2 c, f0 f1 c, f0 f1 c/\ c= * * part cINSERT c, f0 f1 * * part cINSERT cinverse f2 cinverse f2 c, f0 f1 * * part cINSERT cinverse f2 c, f0 f1 part cEMPTY * * part cINSERT c, f0 f1 * * part cINSERT c, f1 f3 * * part cINSERT c, f3 f0 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f1 f3 f0 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f0 f1 c==> c/\ c= * f2 c, f0 f1 cinverse f2 cinverse f2 c, f0 f1 c/\ c= * f2 * f2 c, f0 f1 cinverse f2 c, f0 f1 c= cinverse f2 cinverse f2 cinverse f2 c, f0 f1 c, f0 f1 c/\ c= * * part cINSERT c, f0 f1 * * part cINSERT cinverse f2 cinverse f2 c, f0 f1 * * part cINSERT cinverse f2 c, f0 f1 part cEMPTY * * part cINSERT c, f0 f1 * * part cINSERT c, f1 f3 * * part cINSERT c, f3 f0 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f1 f3 f0 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f0 f1
+ (((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) |- ((f (f (v , w))) = ((inverse f) (v , w)))
T c==> c/\ c= * f0 c, f1 f2 cinverse f0 cinverse f0 c, f1 f2 c/\ c= * f0 * f0 c, f1 f2 cinverse f0 c, f1 f2 c= cinverse f0 cinverse f0 cinverse f0 c, f1 f2 c, f1 f2 c= * f0 * f0 c, f1 f2 cinverse f0 c, f1 f2
+ |- (((((((f_fan_pair (V , E)) (v , w)) = ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) , w')) /\ (((f_fan_pair (V , E)) (v , w)) IN (dart1_of_fan (V , E)))) = ((((f_fan_pair (V , E)) (v , w)) = ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) , w')) /\ (((f_fan_pair (V , E)) (v , w)) IN (dart1_of_fan (V , E))))) ==> ((((((f_fan_pair (V , E)) (v , w)) = ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) , w')) /\ (((f_fan_pair (V , E)) (v , w)) IN (dart1_of_fan (V , E)))) ==> (((((v , w) INSERT (((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) , w') INSERT ((w' , v) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))) = q')) ==> ((((((f_fan_pair (V , E)) (v , w)) = ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) , w')) /\ (((f_fan_pair (V , E)) (v , w)) IN (dart1_of_fan (V , E)))) ==> ((((v , w) INSERT (((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) , w') INSERT ((w' , v) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = (((((f_fan_pair (V , E)) (v , w)) = ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) , w')) /\ (((f_fan_pair (V , E)) (v , w)) IN (dart1_of_fan (V , E)))) ==> q')))) = ((((((f_fan_pair (V , E)) (v , w)) = ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) , w')) /\ (((f_fan_pair (V , E)) (v , w)) IN (dart1_of_fan (V , E)))) ==> (((((v , w) INSERT (((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) , w') INSERT ((w' , v) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))) = q')) ==> ((((((f_fan_pair (V , E)) (v , w)) = ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) , w')) /\ (((f_fan_pair (V , E)) (v , w)) IN (dart1_of_fan (V , E)))) ==> ((((v , w) INSERT (((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) , w') INSERT ((w' , v) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = (((((f_fan_pair (V , E)) (v , w)) = ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) , w')) /\ (((f_fan_pair (V , E)) (v , w)) IN (dart1_of_fan (V , E)))) ==> q'))))
T c= c==> c= c/\ c= cf_fan_pair c, f0 f1 c, f2 f3 c, csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f4 cIN cf_fan_pair c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 c/\ c= cf_fan_pair c, f0 f1 c, f2 f3 c, csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f4 cIN cf_fan_pair c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 c==> c==> c/\ c= cf_fan_pair c, f0 f1 c, f2 f3 c, csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f4 cIN cf_fan_pair c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 c= c/\ c= * * part cINSERT c, f2 f3 * * part cINSERT c, csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f4 * * part cINSERT c, f4 f2 part cEMPTY * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f4 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f3 f5 c= c==> c/\ c= cf_fan_pair c, f0 f1 c, f2 f3 c, csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f4 cIN cf_fan_pair c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 c/\ c= * * part cINSERT c, f2 f3 * * part cINSERT c, csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f4 * * part cINSERT c, f4 f2 part cEMPTY * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f4 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f3 c==> c/\ c= cf_fan_pair c, f0 f1 c, f2 f3 c, csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f4 cIN cf_fan_pair c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 f5 c==> c==> c/\ c= cf_fan_pair c, f0 f1 c, f2 f3 c, csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f4 cIN cf_fan_pair c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 c= c/\ c= * * part cINSERT c, f2 f3 * * part cINSERT c, csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f4 * * part cINSERT c, f4 f2 part cEMPTY * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f4 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f3 f5 c= c==> c/\ c= cf_fan_pair c, f0 f1 c, f2 f3 c, csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f4 cIN cf_fan_pair c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 c/\ c= * * part cINSERT c, f2 f3 * * part cINSERT c, csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f4 * * part cINSERT c, f4 f2 part cEMPTY * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f4 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f3 c==> c/\ c= cf_fan_pair c, f0 f1 c, f2 f3 c, csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f4 cIN cf_fan_pair c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 f5
+ |- (((!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))) ==> ((\a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))) a)) = ((\a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))) a))
T c= c==> ! ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 * / ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 f2 * / ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 f2
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (FAN ((vec (NUMERAL _0)) , (V , E))), ((f_fan_pair_ext (V , E)) = f), (((f (v , w)) = ((inverse f) (w' , v))) /\ ((f (v , w)) IN (dart1_of_fan (V , E)))), ((((f (v , w)) = ((inverse f) (w' , v))) /\ ((f (v , w)) IN (dart1_of_fan (V , E)))) /\ ((w' , v) IN (dart1_of_fan (V , E)))), ((v , w) IN (dart1_of_fan (V , E))) |- ((((v , w) INSERT (((inverse f) (w' , v)) INSERT ((w' , v) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> c= * part cf_fan_pair_ext c, f0 f1 f2 c==> c/\ c= * f2 c, f3 f4 cinverse f2 c, f5 f3 cIN * f2 c, f3 f4 * part cdart1_of_fan c, f0 f1 c==> c/\ c/\ c= * f2 c, f3 f4 cinverse f2 c, f5 f3 cIN * f2 c, f3 f4 * part cdart1_of_fan c, f0 f1 cIN c, f5 f3 * part cdart1_of_fan c, f0 f1 c==> cIN c, f3 f4 * part cdart1_of_fan c, f0 f1 c/\ c= * * part cINSERT c, f3 f4 * * part cINSERT cinverse f2 c, f5 f3 * * part cINSERT c, f5 f3 part cEMPTY * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f5 * * part cINSERT c, f5 f3 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f5 f3 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f5 f3 f4
+ |- ((\q'. ((((((f_fan_pair (V , E)) (v , w)) = ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) , w')) /\ (((f_fan_pair (V , E)) (v , w)) IN (dart1_of_fan (V , E)))) = p') ==> ((p' ==> (((((v , w) INSERT (((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) , w') INSERT ((w' , v) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))) = q')) ==> ((((((f_fan_pair (V , E)) (v , w)) = ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) , w')) /\ (((f_fan_pair (V , E)) (v , w)) IN (dart1_of_fan (V , E)))) ==> ((((v , w) INSERT (((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) , w') INSERT ((w' , v) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c= cf_fan_pair c, f0 f1 c, f2 f3 c, csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f4 cIN cf_fan_pair c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 f5 c==> c==> f5 c= c/\ c= * * part cINSERT c, f2 f3 * * part cINSERT c, csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f4 * * part cINSERT c, f4 f2 part cEMPTY * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f4 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f3 b0 c= c==> c/\ c= cf_fan_pair c, f0 f1 c, f2 f3 c, csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f4 cIN cf_fan_pair c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 c/\ c= * * part cINSERT c, f2 f3 * * part cINSERT c, csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f4 * * part cINSERT c, f4 f2 part cEMPTY * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f4 * * part cINSERT c, f4 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f4 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f3 c==> f5 b0 f6
+ (FAN ((vec (NUMERAL _0)) , (V , E))), ((w , w') IN (dart1_of_fan (V , E))) |- ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((w , w') IN (dart1_of_fan (V , E)))) ==> ((w IN V) /\ ((w' IN V) /\ ((w' IN (((set_of_edge w) V) E)) /\ (w IN (((set_of_edge w') V) E)))))) = (T ==> ((w IN V) /\ ((w' IN V) /\ ((w' IN (((set_of_edge w) V) E)) /\ (w IN (((set_of_edge w') V) E)))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c= c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c/\ cIN f2 f0 c/\ cIN f3 f0 c/\ cIN f3 * * * part cset_of_edge f2 f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 c==> cT c/\ cIN f2 f0 c/\ cIN f3 f0 c/\ cIN f3 * * * part cset_of_edge f2 f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1
- |- ((!w. t) = t)
T c= ! f0 f0
+ (FAN ((vec (NUMERAL _0)) , (V , E))), ((w , w') IN (dart1_of_fan (V , E))) |- (((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((w , w') IN (dart1_of_fan (V , E)))) = T) ==> ((T ==> (((w IN V) /\ ((w' IN V) /\ ((w' IN (((set_of_edge w) V) E)) /\ (w IN (((set_of_edge w') V) E))))) = q')) ==> ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((w , w') IN (dart1_of_fan (V , E)))) ==> ((w IN V) /\ ((w' IN V) /\ ((w' IN (((set_of_edge w) V) E)) /\ (w IN (((set_of_edge w') V) E)))))) = (T ==> q')))) = ((T ==> (((w IN V) /\ ((w' IN V) /\ ((w' IN (((set_of_edge w) V) E)) /\ (w IN (((set_of_edge w') V) E))))) = q')) ==> ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((w , w') IN (dart1_of_fan (V , E)))) ==> ((w IN V) /\ ((w' IN V) /\ ((w' IN (((set_of_edge w) V) E)) /\ (w IN (((set_of_edge w') V) E)))))) = (T ==> q'))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c= c==> c= c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 cT c==> c==> cT c= c/\ cIN f2 f0 c/\ cIN f3 f0 c/\ cIN f3 * * * part cset_of_edge f2 f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 f4 c= c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c/\ cIN f2 f0 c/\ cIN f3 f0 c/\ cIN f3 * * * part cset_of_edge f2 f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 c==> cT f4 c==> c==> cT c= c/\ cIN f2 f0 c/\ cIN f3 f0 c/\ cIN f3 * * * part cset_of_edge f2 f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 f4 c= c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c/\ cIN f2 f0 c/\ cIN f3 f0 c/\ cIN f3 * * * part cset_of_edge f2 f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 c==> cT f4
+ ((!x. ((((((extension_sigma_fan (vec (NUMERAL _0))) V) E) w) (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) x)) = x)) /\ (!x. ((((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) (((((extension_sigma_fan (vec (NUMERAL _0))) V) E) w) x)) = x))) |- (((!x. ((((((extension_sigma_fan (vec (NUMERAL _0))) V) E) w) (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) x)) = x)) ==> ((\x. ((((((extension_sigma_fan (vec (NUMERAL _0))) V) E) w) (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) x)) = x)) x)) = ((\x. ((((((extension_sigma_fan (vec (NUMERAL _0))) V) E) w) (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) x)) = x)) x))
T c==> c/\ ! c= cextension_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 b0 ! c= cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 cextension_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 b0 c= c==> ! c= cextension_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 b0 * / c= cextension_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 b0 f3 * / c= cextension_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 b0 f3
- (FAN ((vec (NUMERAL _0)) , (V , E))) |- (T = (FAN ((vec (NUMERAL _0)) , (V , E))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c= cT cFAN c, cvec cNUMERAL c_0 c, f0 f1
+ ((f_fan_pair_ext (V , E)) = f) |- (T ==> (((((f_fan_pair_ext (V , E)) (v , w)) = ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) /\ ((((f_fan_pair_ext (V , E)) ((f_fan_pair_ext (V , E)) (v , w))) = ((inverse (f_fan_pair_ext (V , E))) (v , w))) /\ (((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) ((inverse (f_fan_pair_ext (V , E))) (v , w)))) = (v , w)))) = (((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w))))))
T c==> c= * part cf_fan_pair_ext c, f0 f1 f2 c==> cT c= c/\ c= cf_fan_pair_ext c, f0 f1 c, f3 f4 cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c/\ c= cf_fan_pair_ext c, f0 f1 cf_fan_pair_ext c, f0 f1 c, f3 f4 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c= cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 c, f3 f4 c, f3 f4 c/\ c= * f2 c, f3 f4 cinverse f2 cinverse f2 c, f3 f4 c/\ c= * f2 * f2 c, f3 f4 cinverse f2 c, f3 f4 c= cinverse f2 cinverse f2 cinverse f2 c, f3 f4 c, f3 f4
- |- ((((\w'. ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w')) w') ==> (?w'. ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w'))) = T)
T c= c==> * / c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b0 f4 c? / c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b0 cT
+ |- (((!q'. (((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((w , w') IN (dart1_of_fan (V , E)))) ==> ((w IN V) /\ ((w' IN V) /\ ((w' IN (((set_of_edge w) V) E)) /\ (w IN (((set_of_edge w') V) E)))))) = p') ==> ((p' ==> (((v = (((COND (~ (w' IN (((set_of_edge w) V) E)))) w') (((((sigma_fan (vec (NUMERAL _0))) V) E) w) w'))) ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v)) = q')) ==> (((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((w , w') IN (dart1_of_fan (V , E)))) ==> ((w IN V) /\ ((w' IN V) /\ ((w' IN (((set_of_edge w) V) E)) /\ (w IN (((set_of_edge w') V) E)))))) ==> ((v = (((COND (~ (w' IN (((set_of_edge w) V) E)))) w') (((((sigma_fan (vec (NUMERAL _0))) V) E) w) w'))) ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v))) = (p' ==> q'))))) ==> ((\q'. (((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((w , w') IN (dart1_of_fan (V , E)))) ==> ((w IN V) /\ ((w' IN V) /\ ((w' IN (((set_of_edge w) V) E)) /\ (w IN (((set_of_edge w') V) E)))))) = p') ==> ((p' ==> (((v = (((COND (~ (w' IN (((set_of_edge w) V) E)))) w') (((((sigma_fan (vec (NUMERAL _0))) V) E) w) w'))) ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v)) = q')) ==> (((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((w , w') IN (dart1_of_fan (V , E)))) ==> ((w IN V) /\ ((w' IN V) /\ ((w' IN (((set_of_edge w) V) E)) /\ (w IN (((set_of_edge w') V) E)))))) ==> ((v = (((COND (~ (w' IN (((set_of_edge w) V) E)))) w') (((((sigma_fan (vec (NUMERAL _0))) V) E) w) w'))) ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v))) = (p' ==> q'))))) q')) = ((\q'. (((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((w , w') IN (dart1_of_fan (V , E)))) ==> ((w IN V) /\ ((w' IN V) /\ ((w' IN (((set_of_edge w) V) E)) /\ (w IN (((set_of_edge w') V) E)))))) = p') ==> ((p' ==> (((v = (((COND (~ (w' IN (((set_of_edge w) V) E)))) w') (((((sigma_fan (vec (NUMERAL _0))) V) E) w) w'))) ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v)) = q')) ==> (((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((w , w') IN (dart1_of_fan (V , E)))) ==> ((w IN V) /\ ((w' IN V) /\ ((w' IN (((set_of_edge w) V) E)) /\ (w IN (((set_of_edge w') V) E)))))) ==> ((v = (((COND (~ (w' IN (((set_of_edge w) V) E)))) w') (((((sigma_fan (vec (NUMERAL _0))) V) E) w) w'))) ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c/\ cIN f2 f0 c/\ cIN f3 f0 c/\ cIN f3 * * * part cset_of_edge f2 f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 f4 c==> c==> f4 c= c==> c= f5 cCOND c~ cIN f3 * * * part cset_of_edge f2 f0 f1 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f5 b0 c= c==> c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c/\ cIN f2 f0 c/\ cIN f3 f0 c/\ cIN f3 * * * part cset_of_edge f2 f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 c==> c= f5 cCOND c~ cIN f3 * * * part cset_of_edge f2 f0 f1 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f5 c==> f4 b0 * / c==> c= c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c/\ cIN f2 f0 c/\ cIN f3 f0 c/\ cIN f3 * * * part cset_of_edge f2 f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 f4 c==> c==> f4 c= c==> c= f5 cCOND c~ cIN f3 * * * part cset_of_edge f2 f0 f1 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f5 b0 c= c==> c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c/\ cIN f2 f0 c/\ cIN f3 f0 c/\ cIN f3 * * * part cset_of_edge f2 f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 c==> c= f5 cCOND c~ cIN f3 * * * part cset_of_edge f2 f0 f1 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f5 c==> f4 b0 f6 * / c==> c= c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c/\ cIN f2 f0 c/\ cIN f3 f0 c/\ cIN f3 * * * part cset_of_edge f2 f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 f4 c==> c==> f4 c= c==> c= f5 cCOND c~ cIN f3 * * * part cset_of_edge f2 f0 f1 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f5 b0 c= c==> c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c/\ cIN f2 f0 c/\ cIN f3 f0 c/\ cIN f3 * * * part cset_of_edge f2 f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 c==> c= f5 cCOND c~ cIN f3 * * * part cset_of_edge f2 f0 f1 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f5 c==> f4 b0 f6
- (!x. ((x IN ((orbit_map f) (v , w))) ==> (x IN (dart1_of_fan (V , E))))) |- ((\x. ((x IN ((orbit_map f) (v , w))) ==> (x IN (dart1_of_fan (V , E))))) x)
T c==> ! c==> cIN b0 * * part corbit_map f0 c, f1 f2 cIN b0 * part cdart1_of_fan c, f3 f4 * / c==> cIN b0 * * part corbit_map f0 c, f1 f2 cIN b0 * part cdart1_of_fan c, f3 f4 f5
- ((w IN V) /\ ((w' IN V) /\ ((w' IN (((set_of_edge w) V) E)) /\ (w IN (((set_of_edge w') V) E))))) |- ((w IN V) = T)
T c==> c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f2 * * * part cset_of_edge f0 f1 f3 cIN f0 * * * part cset_of_edge f2 f1 f3 c= cIN f0 f1 cT
- |- ((((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) ==> (((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))) = q')) ==> ((((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) ==> ((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = (((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) ==> q')))
T c==> c==> c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 c= c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2 f6 c= c==> c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2 c==> c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 f6
- |- ((((CARD ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) ==> ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))))) = (((CARD ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) ==> ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))))))
T c= c==> c= cCARD * * part cINSERT c, f0 f1 * * part cINSERT * f2 c, f0 f1 * * part cINSERT * f2 * f2 c, f0 f1 part cEMPTY cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ c= * f2 c, f0 f1 cinverse f2 cinverse f2 c, f0 f1 c/\ c= * f2 * f2 c, f0 f1 cinverse f2 c, f0 f1 c= cinverse f2 cinverse f2 cinverse f2 c, f0 f1 c, f0 f1 c/\ c= * * part cINSERT c, f0 f1 * * part cINSERT cinverse f2 cinverse f2 c, f0 f1 * * part cINSERT cinverse f2 c, f0 f1 part cEMPTY * * part cINSERT c, f0 f1 * * part cINSERT c, f1 f3 * * part cINSERT c, f3 f0 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f1 f3 f0 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f0 f1 c==> c= cCARD * * part cINSERT c, f0 f1 * * part cINSERT * f2 c, f0 f1 * * part cINSERT * f2 * f2 c, f0 f1 part cEMPTY cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ c= * f2 c, f0 f1 cinverse f2 cinverse f2 c, f0 f1 c/\ c= * f2 * f2 c, f0 f1 cinverse f2 c, f0 f1 c= cinverse f2 cinverse f2 cinverse f2 c, f0 f1 c, f0 f1 c/\ c= * * part cINSERT c, f0 f1 * * part cINSERT cinverse f2 cinverse f2 c, f0 f1 * * part cINSERT cinverse f2 c, f0 f1 part cEMPTY * * part cINSERT c, f0 f1 * * part cINSERT c, f1 f3 * * part cINSERT c, f3 f0 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f1 f3 f0 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f0 f1
- |- (!w'. (((\w'. ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w')) w') ==> (?w'. ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w'))))
T c==> * / c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b0 f4 c? / c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b0
- |- (((!x. (((\w'. ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w')) x) ==> (?w'. ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w')))) ==> ((?w'. ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w')) ==> (?w'. ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w')))) = ((?w'. ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w')) ==> (?w'. ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w'))))
T c= c==> ! c==> * / c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b1 b0 c? / c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b1 c==> c? / c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b0 c? / c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b0 c==> c? / c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b0 c? / c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b0
- |- (((((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) ==> (((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))) = ((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))))) ==> ((((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) ==> ((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = (((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) ==> ((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))) = ((((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) ==> ((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = (((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) ==> ((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))))))
T c= c==> c==> c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 c= c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2 c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2 c= c==> c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2 c==> c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2 c= c==> c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2 c==> c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2
- T |- (T = T)
T c==> cT c= cT cT
- |- (((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) = p') ==> ((p' ==> (((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))) = q')) ==> (((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) ==> ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = (p' ==> q'))))
T c==> c= c/\ c= * f0 c, f1 f2 cinverse f0 cinverse f0 c, f1 f2 c/\ c= * f0 * f0 c, f1 f2 cinverse f0 c, f1 f2 c= cinverse f0 cinverse f0 cinverse f0 c, f1 f2 c, f1 f2 f3 c==> c==> f3 c= c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT cinverse f0 cinverse f0 c, f1 f2 * * part cINSERT cinverse f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f4 * * part cINSERT c, f4 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f5 f6 f2 f4 f1 c= csigma_fan cvec cNUMERAL c_0 f5 f6 f4 f1 f2 f7 c= c==> c/\ c= * f0 c, f1 f2 cinverse f0 cinverse f0 c, f1 f2 c/\ c= * f0 * f0 c, f1 f2 cinverse f0 c, f1 f2 c= cinverse f0 cinverse f0 cinverse f0 c, f1 f2 c, f1 f2 c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT cinverse f0 cinverse f0 c, f1 f2 * * part cINSERT cinverse f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f4 * * part cINSERT c, f4 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f5 f6 f2 f4 f1 c= csigma_fan cvec cNUMERAL c_0 f5 f6 f4 f1 f2 c==> f3 f7
- ((((f_fan_pair (V , E)) (v , w)) = ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) , w')) /\ (((f_fan_pair (V , E)) (v , w)) IN (dart1_of_fan (V , E)))) |- ((((f_fan_pair (V , E)) (v , w)) IN (dart1_of_fan (V , E))) = T)
T c==> c/\ c= cf_fan_pair c, f0 f1 c, f2 f3 c, csigma_fan cvec cNUMERAL c_0 f0 f1 f4 f2 f4 cIN cf_fan_pair c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 c= cIN cf_fan_pair c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 cT
- |- ((\q'. ((((CARD ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) = (NUMERAL (BIT1 (BIT1 _0)))) = p') ==> ((p' ==> (((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) ==> ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = q')) ==> ((((CARD ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) ==> ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))))) = (p' ==> q'))))) q')
T * / c==> c= c= cCARD * * part cINSERT c, f0 f1 * * part cINSERT * f2 c, f0 f1 * * part cINSERT * f2 * f2 c, f0 f1 part cEMPTY cNUMERAL cBIT1 cBIT1 c_0 f3 c==> c==> f3 c= c==> c/\ c= * f2 c, f0 f1 cinverse f2 cinverse f2 c, f0 f1 c/\ c= * f2 * f2 c, f0 f1 cinverse f2 c, f0 f1 c= cinverse f2 cinverse f2 cinverse f2 c, f0 f1 c, f0 f1 c/\ c= * * part cINSERT c, f0 f1 * * part cINSERT cinverse f2 cinverse f2 c, f0 f1 * * part cINSERT cinverse f2 c, f0 f1 part cEMPTY * * part cINSERT c, f0 f1 * * part cINSERT c, f1 f4 * * part cINSERT c, f4 f0 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f5 f6 f1 f4 f0 c= csigma_fan cvec cNUMERAL c_0 f5 f6 f4 f0 f1 b0 c= c==> c= cCARD * * part cINSERT c, f0 f1 * * part cINSERT * f2 c, f0 f1 * * part cINSERT * f2 * f2 c, f0 f1 part cEMPTY cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ c= * f2 c, f0 f1 cinverse f2 cinverse f2 c, f0 f1 c/\ c= * f2 * f2 c, f0 f1 cinverse f2 c, f0 f1 c= cinverse f2 cinverse f2 cinverse f2 c, f0 f1 c, f0 f1 c/\ c= * * part cINSERT c, f0 f1 * * part cINSERT cinverse f2 cinverse f2 c, f0 f1 * * part cINSERT cinverse f2 c, f0 f1 part cEMPTY * * part cINSERT c, f0 f1 * * part cINSERT c, f1 f4 * * part cINSERT c, f4 f0 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f5 f6 f1 f4 f0 c= csigma_fan cvec cNUMERAL c_0 f5 f6 f4 f0 f1 c==> f3 b0 f7
- |- ((!x. ((x IN ((orbit_map f) (v , w))) ==> (x IN (dart1_of_fan (V , E))))) ==> (!x. ((x IN ((orbit_map f) (v , w))) ==> (x IN (dart1_of_fan (V , E))))))
T c==> ! c==> cIN b0 * * part corbit_map f0 c, f1 f2 cIN b0 * part cdart1_of_fan c, f3 f4 ! c==> cIN b0 * * part corbit_map f0 c, f1 f2 cIN b0 * part cdart1_of_fan c, f3 f4
- ((CARD ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((CARD ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) ==> ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = ((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) ==> ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))))))
T c==> c= cCARD * * part cINSERT c, f0 f1 * * part cINSERT * f2 c, f0 f1 * * part cINSERT * f2 * f2 c, f0 f1 part cEMPTY cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cCARD * * part cINSERT c, f0 f1 * * part cINSERT * f2 c, f0 f1 * * part cINSERT * f2 * f2 c, f0 f1 part cEMPTY cNUMERAL cBIT1 cBIT1 c_0 c= c==> c/\ c= * f2 c, f0 f1 cinverse f2 cinverse f2 c, f0 f1 c/\ c= * f2 * f2 c, f0 f1 cinverse f2 c, f0 f1 c= cinverse f2 cinverse f2 cinverse f2 c, f0 f1 c, f0 f1 c/\ c= * * part cINSERT c, f0 f1 * * part cINSERT cinverse f2 cinverse f2 c, f0 f1 * * part cINSERT cinverse f2 c, f0 f1 part cEMPTY * * part cINSERT c, f0 f1 * * part cINSERT c, f1 f3 * * part cINSERT c, f3 f0 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f1 f3 f0 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f0 f1 c==> c/\ c= * f2 c, f0 f1 cinverse f2 cinverse f2 c, f0 f1 c/\ c= * f2 * f2 c, f0 f1 cinverse f2 c, f0 f1 c= cinverse f2 cinverse f2 cinverse f2 c, f0 f1 c, f0 f1 c/\ c= * * part cINSERT c, f0 f1 * * part cINSERT cinverse f2 cinverse f2 c, f0 f1 * * part cINSERT cinverse f2 c, f0 f1 part cEMPTY * * part cINSERT c, f0 f1 * * part cINSERT c, f1 f3 * * part cINSERT c, f3 f0 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f1 f3 f0 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f0 f1
- (((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) |- (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w))
T c==> c/\ c= * f0 c, f1 f2 cinverse f0 cinverse f0 c, f1 f2 c/\ c= * f0 * f0 c, f1 f2 cinverse f0 c, f1 f2 c= cinverse f0 cinverse f0 cinverse f0 c, f1 f2 c, f1 f2 c= cinverse f0 cinverse f0 cinverse f0 c, f1 f2 c, f1 f2
- ((w IN V) /\ ((w' IN V) /\ ((w' IN (((set_of_edge w) V) E)) /\ (w IN (((set_of_edge w') V) E))))) |- ((w' IN V) = T)
T c==> c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f2 * * * part cset_of_edge f0 f1 f3 cIN f0 * * * part cset_of_edge f2 f1 f3 c= cIN f2 f1 cT
- (FAN ((vec (NUMERAL _0)) , (V , E))) |- ((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((FINITE (dart_of_fan (V , E))) = T))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 c= cFINITE * part cdart_of_fan c, f0 f1 cT
- |- (((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) ==> (((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))) = q')) ==> (((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) ==> ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = ((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) ==> q')))
T c==> c==> c/\ c= * f0 c, f1 f2 cinverse f0 cinverse f0 c, f1 f2 c/\ c= * f0 * f0 c, f1 f2 cinverse f0 c, f1 f2 c= cinverse f0 cinverse f0 cinverse f0 c, f1 f2 c, f1 f2 c= c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT cinverse f0 cinverse f0 c, f1 f2 * * part cINSERT cinverse f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2 f6 c= c==> c/\ c= * f0 c, f1 f2 cinverse f0 cinverse f0 c, f1 f2 c/\ c= * f0 * f0 c, f1 f2 cinverse f0 c, f1 f2 c= cinverse f0 cinverse f0 cinverse f0 c, f1 f2 c, f1 f2 c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT cinverse f0 cinverse f0 c, f1 f2 * * part cINSERT cinverse f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2 c==> c/\ c= * f0 c, f1 f2 cinverse f0 cinverse f0 c, f1 f2 c/\ c= * f0 * f0 c, f1 f2 cinverse f0 c, f1 f2 c= cinverse f0 cinverse f0 cinverse f0 c, f1 f2 c, f1 f2 f6
- (~ F) |- ((F = F) = T)
T c==> c~ cF c= c= cF cF cT
- |- ((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) ==> (((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))) = ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))
T c==> c/\ c= * f0 c, f1 f2 cinverse f0 cinverse f0 c, f1 f2 c/\ c= * f0 * f0 c, f1 f2 cinverse f0 c, f1 f2 c= cinverse f0 cinverse f0 cinverse f0 c, f1 f2 c, f1 f2 c= c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT cinverse f0 cinverse f0 c, f1 f2 * * part cINSERT cinverse f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2 c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT cinverse f0 cinverse f0 c, f1 f2 * * part cINSERT cinverse f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2
- ((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) |- (((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) /\ (((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))) = ((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))
T c==> c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 c/\ c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 c= c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2 c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2
- (!x. ((x IN ((orbit_map f) (v , w))) ==> (x IN (dart1_of_fan (V , E))))), (x IN ((orbit_map f) (v , w))) |- (x IN (dart1_of_fan (V , E)))
T c==> ! c==> cIN b0 * * part corbit_map f0 c, f1 f2 cIN b0 * part cdart1_of_fan c, f3 f4 c==> cIN f5 * * part corbit_map f0 c, f1 f2 cIN f5 * part cdart1_of_fan c, f3 f4
- F |- (F = T)
T c==> cF c= cF cT
- |- ((((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) = p') ==> ((p' ==> (((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))) = q')) ==> ((((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) ==> ((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = (p' ==> q'))))
T c==> c= c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 f3 c==> c==> f3 c= c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f4 * * part cINSERT c, f4 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f5 f6 f2 f4 f1 c= csigma_fan cvec cNUMERAL c_0 f5 f6 f4 f1 f2 f7 c= c==> c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f4 * * part cINSERT c, f4 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f5 f6 f2 f4 f1 c= csigma_fan cvec cNUMERAL c_0 f5 f6 f4 f1 f2 c==> f3 f7
- (FAN ((vec (NUMERAL _0)) , (V , E))), (((v , w) IN (dart1_of_fan (V , E))) /\ ((CARD ((face (hypermap_of_fan (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0))))) |- ((((v , w) IN (dart1_of_fan (V , E))) /\ ((CARD ((face (hypermap_of_fan (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ ((LET (\w'. (LET_END ((((face (hypermap_of_fan (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> c/\ cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c= cCARD * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ c/\ cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c= cCARD * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 cLET / cLET_END c/\ c= * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 b0 * * part cINSERT c, b0 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 b0 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 b0 f2 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3
- ((f_fan_pair_ext (V , E)) = f) |- ((\f. ((f_fan_pair_ext (V , E)) = f)) f)
T c==> c= * part cf_fan_pair_ext c, f0 f1 f2 * / c= * part cf_fan_pair_ext c, f0 f1 b0 f2
- ((f_fan_pair_ext (V , E)) = f) |- (((f_fan_pair_ext (V , E)) = f) /\ (?f. ((f_fan_pair_ext (V , E)) = f)))
T c==> c= * part cf_fan_pair_ext c, f0 f1 f2 c/\ c= * part cf_fan_pair_ext c, f0 f1 f2 c? / c= * part cf_fan_pair_ext c, f0 f1 b0
- |- ((((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) ==> ((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = (((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) ==> ((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))
T c= c==> c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2 c==> c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2
- (FAN ((vec (NUMERAL _0)) , (V , E))) |- ((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((inverse (f_fan_pair_ext (V , E))) = ((res (GABS (\f. (!v. (!w. ((GEQ (f (v , w))) ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) , v))))))) (dart1_of_fan (V , E)))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 c= * part cinverse * part cf_fan_pair_ext c, f0 f1 * * part cres * part cGABS / ! ! cGEQ * b0 c, b1 b2 c, csigma_fan cvec cNUMERAL c_0 f0 f1 b1 b2 b1 * part cdart1_of_fan c, f0 f1
- ((w IN V) /\ ((w' IN V) /\ ((w' IN (((set_of_edge w) V) E)) /\ (w IN (((set_of_edge w') V) E))))) |- (w IN (((set_of_edge w') V) E))
T c==> c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f2 * * * part cset_of_edge f0 f1 f3 cIN f0 * * * part cset_of_edge f2 f1 f3 cIN f0 * * * part cset_of_edge f2 f1 f3
- (!x. ((x IN ((orbit_map f) (v , w))) ==> (x IN (dart1_of_fan (V , E))))), (x IN ((orbit_map f) (v , w))) |- ((x IN ((orbit_map f) (v , w))) /\ (x IN (dart1_of_fan (V , E))))
T c==> ! c==> cIN b0 * * part corbit_map f0 c, f1 f2 cIN b0 * part cdart1_of_fan c, f3 f4 c==> cIN f5 * * part corbit_map f0 c, f1 f2 c/\ cIN f5 * * part corbit_map f0 c, f1 f2 cIN f5 * part cdart1_of_fan c, f3 f4
- (((f (v , w)) IN (dart1_of_fan (V , E))) /\ ((f (f (v , w))) IN (dart1_of_fan (V , E)))) |- (((f (f (v , w))) IN (dart1_of_fan (V , E))) = T)
T c==> c/\ cIN * f0 c, f1 f2 * part cdart1_of_fan c, f3 f4 cIN * f0 * f0 c, f1 f2 * part cdart1_of_fan c, f3 f4 c= cIN * f0 * f0 c, f1 f2 * part cdart1_of_fan c, f3 f4 cT
- |- (((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) ==> (((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))) = ((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))
T c==> c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 c= c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2 c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2
- (FAN ((vec (NUMERAL _0)) , (V , E))) |- ((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (((permutes (f_fan_pair_ext (V , E))) (dart_of_fan (V , E))) = T))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 c= cpermutes * part cf_fan_pair_ext c, f0 f1 * part cdart_of_fan c, f0 f1 cT
- (!x. ((x IN ((orbit_map f) (v , w))) ==> (x IN (dart1_of_fan (V , E))))), (x IN ((orbit_map f) (v , w))) |- ((!x. ((x IN ((orbit_map f) (v , w))) ==> (x IN (dart1_of_fan (V , E))))) /\ (x IN (dart1_of_fan (V , E))))
T c==> ! c==> cIN b0 * * part corbit_map f0 c, f1 f2 cIN b0 * part cdart1_of_fan c, f3 f4 c==> cIN f5 * * part corbit_map f0 c, f1 f2 c/\ ! c==> cIN b0 * * part corbit_map f0 c, f1 f2 cIN b0 * part cdart1_of_fan c, f3 f4 cIN f5 * part cdart1_of_fan c, f3 f4
- ((f (f (v , w))) = ((inverse f) (v , w))), (((inverse f) (v , w)) = (w' , v)), ((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))), ((v , w) IN (dart1_of_fan (V , E))) |- ((((f_fan_pair (V , E)) (v , w)) IN ((v , w) INSERT ((f (v , w)) INSERT ((w' , v) INSERT EMPTY)))) = (((f_fan_pair_ext (V , E)) (v , w)) IN ((orbit_map f) (v , w))))
T c==> c= * f0 * f0 c, f1 f2 cinverse f0 c, f1 f2 c==> c= cinverse f0 c, f1 f2 c, f3 f1 c==> c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 c==> cIN c, f1 f2 * part cdart1_of_fan c, f4 f5 c= cIN cf_fan_pair c, f4 f5 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT c, f3 f1 part cEMPTY cIN cf_fan_pair_ext c, f4 f5 c, f1 f2 * * part corbit_map f0 c, f1 f2
- |- ((?f. ((f_fan_pair_ext (V , E)) = f)) ==> (?f. ((f_fan_pair_ext (V , E)) = f)))
T c==> c? / c= * part cf_fan_pair_ext c, f0 f1 b0 c? / c= * part cf_fan_pair_ext c, f0 f1 b0
- ((\f. ((f_fan_pair_ext (V , E)) = f)) f) |- ((((f_fan_pair_ext (V , E)) = f) ==> (?f. ((f_fan_pair_ext (V , E)) = f))) = (?f. ((f_fan_pair_ext (V , E)) = f)))
T c==> * / c= * part cf_fan_pair_ext c, f0 f1 b0 f2 c= c==> c= * part cf_fan_pair_ext c, f0 f1 f2 c? / c= * part cf_fan_pair_ext c, f0 f1 b0 c? / c= * part cf_fan_pair_ext c, f0 f1 b0
- (((orbit_map (f_fan_pair_ext (V , E))) (v , w)) SUBSET (dart1_of_fan (V , E))) |- ((((orbit_map (f_fan_pair_ext (V , E))) (v , w)) SUBSET (dart1_of_fan (V , E))) = T)
T c==> cSUBSET * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 c= cSUBSET * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 * part cdart1_of_fan c, f0 f1 cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((CARD ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) = (NUMERAL (BIT1 (BIT1 _0)))) = p') ==> ((p' ==> (((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) ==> ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = q')) ==> ((((CARD ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) ==> ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))))) = (p' ==> q'))))
T c==> c= c= cCARD * * part cINSERT c, f0 f1 * * part cINSERT * f2 c, f0 f1 * * part cINSERT * f2 * f2 c, f0 f1 part cEMPTY cNUMERAL cBIT1 cBIT1 c_0 f3 c==> c==> f3 c= c==> c/\ c= * f2 c, f0 f1 cinverse f2 cinverse f2 c, f0 f1 c/\ c= * f2 * f2 c, f0 f1 cinverse f2 c, f0 f1 c= cinverse f2 cinverse f2 cinverse f2 c, f0 f1 c, f0 f1 c/\ c= * * part cINSERT c, f0 f1 * * part cINSERT cinverse f2 cinverse f2 c, f0 f1 * * part cINSERT cinverse f2 c, f0 f1 part cEMPTY * * part cINSERT c, f0 f1 * * part cINSERT c, f1 f4 * * part cINSERT c, f4 f0 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f5 f6 f1 f4 f0 c= csigma_fan cvec cNUMERAL c_0 f5 f6 f4 f0 f1 f7 c= c==> c= cCARD * * part cINSERT c, f0 f1 * * part cINSERT * f2 c, f0 f1 * * part cINSERT * f2 * f2 c, f0 f1 part cEMPTY cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ c= * f2 c, f0 f1 cinverse f2 cinverse f2 c, f0 f1 c/\ c= * f2 * f2 c, f0 f1 cinverse f2 c, f0 f1 c= cinverse f2 cinverse f2 cinverse f2 c, f0 f1 c, f0 f1 c/\ c= * * part cINSERT c, f0 f1 * * part cINSERT cinverse f2 cinverse f2 c, f0 f1 * * part cINSERT cinverse f2 c, f0 f1 part cEMPTY * * part cINSERT c, f0 f1 * * part cINSERT c, f1 f4 * * part cINSERT c, f4 f0 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f5 f6 f1 f4 f0 c= csigma_fan cvec cNUMERAL c_0 f5 f6 f4 f0 f1 c==> f3 f7
- (~ F) |- (F = F)
T c==> c~ cF c= cF cF
- ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w') |- ((\w'. ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w')) w')
T c==> c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f4 * / c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b0 f4
- ((!x. ((((((extension_sigma_fan (vec (NUMERAL _0))) V) E) w) (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) x)) = x)) /\ (!x. ((((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) (((((extension_sigma_fan (vec (NUMERAL _0))) V) E) w) x)) = x))) |- ((\x. ((((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) (((((extension_sigma_fan (vec (NUMERAL _0))) V) E) w) x)) = x)) x)
T c==> c/\ ! c= cextension_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 b0 ! c= cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 cextension_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 b0 * / c= cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 cextension_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 b0 f3
- (x IN ((orbit_map f) (v , w))) |- ((!x. ((x IN ((orbit_map f) (v , w))) ==> (x IN (dart1_of_fan (V , E))))) ==> (x IN (dart1_of_fan (V , E))))
T c==> cIN f0 * * part corbit_map f1 c, f2 f3 c==> ! c==> cIN b0 * * part corbit_map f1 c, f2 f3 cIN b0 * part cdart1_of_fan c, f4 f5 cIN f0 * part cdart1_of_fan c, f4 f5
- |- (((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w') ==> (?w'. ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w')))
T c==> c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f4 c? / c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b0
- (((f (v , w)) IN (dart1_of_fan (V , E))) /\ ((f (f (v , w))) IN (dart1_of_fan (V , E)))) |- (T = ((f (f (v , w))) IN (dart1_of_fan (V , E))))
T c==> c/\ cIN * f0 c, f1 f2 * part cdart1_of_fan c, f3 f4 cIN * f0 * f0 c, f1 f2 * part cdart1_of_fan c, f3 f4 c= cT cIN * f0 * f0 c, f1 f2 * part cdart1_of_fan c, f3 f4
- |- ((\p'. (!q'. ((((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) = p') ==> ((p' ==> (((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))) = q')) ==> ((((((orbit_map f) (v , w)) = ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) /\ ((f (f (f (v , w)))) = (v , w))) ==> ((((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 b0 c==> c==> b0 c= c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2 b1 c= c==> c/\ c= * * part corbit_map f0 c, f1 f2 * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY c= * f0 * f0 * f0 c, f1 f2 c, f1 f2 c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT * f0 c, f1 f2 * * part cINSERT * f0 * f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2 c==> b0 b1 f6
- |- (((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w') = ((\w'. ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w')) w'))
T c= c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f4 * / c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b0 f4
- ((!x. ((((((extension_sigma_fan (vec (NUMERAL _0))) V) E) w) (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) x)) = x)) /\ (!x. ((((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) (((((extension_sigma_fan (vec (NUMERAL _0))) V) E) w) x)) = x))) |- (((!x. ((((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) (((((extension_sigma_fan (vec (NUMERAL _0))) V) E) w) x)) = x)) ==> ((\x. ((((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) (((((extension_sigma_fan (vec (NUMERAL _0))) V) E) w) x)) = x)) x)) = ((\x. ((((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) (((((extension_sigma_fan (vec (NUMERAL _0))) V) E) w) x)) = x)) x))
T c==> c/\ ! c= cextension_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 b0 ! c= cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 cextension_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 b0 c= c==> ! c= cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 cextension_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 b0 * / c= cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 cextension_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 b0 f3 * / c= cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 cextension_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 b0 f3
- |- ((((CARD ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) = (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) ==> ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = q')) ==> ((((CARD ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) ==> ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))))) = (((CARD ((v , w) INSERT ((f (v , w)) INSERT ((f (f (v , w))) INSERT EMPTY)))) = (NUMERAL (BIT1 (BIT1 _0)))) ==> q')))
T c==> c==> c= cCARD * * part cINSERT c, f0 f1 * * part cINSERT * f2 c, f0 f1 * * part cINSERT * f2 * f2 c, f0 f1 part cEMPTY cNUMERAL cBIT1 cBIT1 c_0 c= c==> c/\ c= * f2 c, f0 f1 cinverse f2 cinverse f2 c, f0 f1 c/\ c= * f2 * f2 c, f0 f1 cinverse f2 c, f0 f1 c= cinverse f2 cinverse f2 cinverse f2 c, f0 f1 c, f0 f1 c/\ c= * * part cINSERT c, f0 f1 * * part cINSERT cinverse f2 cinverse f2 c, f0 f1 * * part cINSERT cinverse f2 c, f0 f1 part cEMPTY * * part cINSERT c, f0 f1 * * part cINSERT c, f1 f3 * * part cINSERT c, f3 f0 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f1 f3 f0 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f0 f1 f6 c= c==> c= cCARD * * part cINSERT c, f0 f1 * * part cINSERT * f2 c, f0 f1 * * part cINSERT * f2 * f2 c, f0 f1 part cEMPTY cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ c= * f2 c, f0 f1 cinverse f2 cinverse f2 c, f0 f1 c/\ c= * f2 * f2 c, f0 f1 cinverse f2 c, f0 f1 c= cinverse f2 cinverse f2 cinverse f2 c, f0 f1 c, f0 f1 c/\ c= * * part cINSERT c, f0 f1 * * part cINSERT cinverse f2 cinverse f2 c, f0 f1 * * part cINSERT cinverse f2 c, f0 f1 part cEMPTY * * part cINSERT c, f0 f1 * * part cINSERT c, f1 f3 * * part cINSERT c, f3 f0 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f1 f3 f0 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f0 f1 c==> c= cCARD * * part cINSERT c, f0 f1 * * part cINSERT * f2 c, f0 f1 * * part cINSERT * f2 * f2 c, f0 f1 part cEMPTY cNUMERAL cBIT1 cBIT1 c_0 f6
- (~ T) |- (T = F)
T c==> c~ cT c= cT cF
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- ((\w'. ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w')) w') |- (((\w'. ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w')) w') /\ (?w'. ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w')))
T c==> * / c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b0 f4 c/\ * / c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b0 f4 c? / c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b0
- (((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) |- ((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) /\ (((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w))) = ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))
T c==> c/\ c= * f0 c, f1 f2 cinverse f0 cinverse f0 c, f1 f2 c/\ c= * f0 * f0 c, f1 f2 cinverse f0 c, f1 f2 c= cinverse f0 cinverse f0 cinverse f0 c, f1 f2 c, f1 f2 c/\ c/\ c= * f0 c, f1 f2 cinverse f0 cinverse f0 c, f1 f2 c/\ c= * f0 * f0 c, f1 f2 cinverse f0 c, f1 f2 c= cinverse f0 cinverse f0 cinverse f0 c, f1 f2 c, f1 f2 c= c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT cinverse f0 cinverse f0 c, f1 f2 * * part cINSERT cinverse f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2 c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT cinverse f0 cinverse f0 c, f1 f2 * * part cINSERT cinverse f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2
- ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w'), ((v , w) IN (dart1_of_fan (V , E))) |- (T = ((((res (GABS (\f. (!v. (!w. ((GEQ (f (v , w))) ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) , v))))))) (dart1_of_fan (V , E))) (v , w)) = (w' , v)))
T c==> c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f4 c==> cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c= cT c= cres * part cGABS / ! ! cGEQ * b0 c, b1 b2 c, csigma_fan cvec cNUMERAL c_0 f0 f1 b1 b2 b1 * part cdart1_of_fan c, f0 f1 c, f2 f3 c, f4 f2
- (!x. ((x IN ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) ==> (x IN (dart1_of_fan (V , E))))), ((f_fan_pair_ext (V , E)) = f) |- (((!x. ((x IN ((orbit_map f) (v , w))) ==> (x IN (dart1_of_fan (V , E))))) ==> (!x. ((x IN ((orbit_map f) (v , w))) ==> (x IN (dart1_of_fan (V , E)))))) = (!x. ((x IN ((orbit_map f) (v , w))) ==> (x IN (dart1_of_fan (V , E))))))
T c==> ! c==> cIN b0 * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cIN b0 * part cdart1_of_fan c, f0 f1 c==> c= * part cf_fan_pair_ext c, f0 f1 f4 c= c==> ! c==> cIN b0 * * part corbit_map f4 c, f2 f3 cIN b0 * part cdart1_of_fan c, f0 f1 ! c==> cIN b0 * * part corbit_map f4 c, f2 f3 cIN b0 * part cdart1_of_fan c, f0 f1 ! c==> cIN b0 * * part corbit_map f4 c, f2 f3 cIN b0 * part cdart1_of_fan c, f0 f1
- |- (((f_fan_pair_ext (V , E)) = f) = ((\f. ((f_fan_pair_ext (V , E)) = f)) f))
T c= c= * part cf_fan_pair_ext c, f0 f1 f2 * / c= * part cf_fan_pair_ext c, f0 f1 b0 f2
- ((w IN V) /\ ((w' IN V) /\ ((w' IN (((set_of_edge w) V) E)) /\ (w IN (((set_of_edge w') V) E))))) |- ((w IN (((set_of_edge w') V) E)) = T)
T c==> c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f2 * * * part cset_of_edge f0 f1 f3 cIN f0 * * * part cset_of_edge f2 f1 f3 c= cIN f0 * * * part cset_of_edge f2 f1 f3 cT
- |- (((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) ==> ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))) = ((((f (v , w)) = ((inverse f) ((inverse f) (v , w)))) /\ (((f (f (v , w))) = ((inverse f) (v , w))) /\ (((inverse f) ((inverse f) ((inverse f) (v , w)))) = (v , w)))) ==> ((((v , w) INSERT (((inverse f) ((inverse f) (v , w))) INSERT (((inverse f) (v , w)) INSERT EMPTY))) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))
T c= c==> c/\ c= * f0 c, f1 f2 cinverse f0 cinverse f0 c, f1 f2 c/\ c= * f0 * f0 c, f1 f2 cinverse f0 c, f1 f2 c= cinverse f0 cinverse f0 cinverse f0 c, f1 f2 c, f1 f2 c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT cinverse f0 cinverse f0 c, f1 f2 * * part cINSERT cinverse f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2 c==> c/\ c= * f0 c, f1 f2 cinverse f0 cinverse f0 c, f1 f2 c/\ c= * f0 * f0 c, f1 f2 cinverse f0 c, f1 f2 c= cinverse f0 cinverse f0 cinverse f0 c, f1 f2 c, f1 f2 c/\ c= * * part cINSERT c, f1 f2 * * part cINSERT cinverse f0 cinverse f0 c, f1 f2 * * part cINSERT cinverse f0 c, f1 f2 part cEMPTY * * part cINSERT c, f1 f2 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 f1 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f4 f5 f2 f3 f1 c= csigma_fan cvec cNUMERAL c_0 f4 f5 f3 f1 f2
- (((f (v , w)) IN (dart1_of_fan (V , E))) /\ ((f (f (v , w))) IN (dart1_of_fan (V , E)))) |- (((f (v , w)) IN (dart1_of_fan (V , E))) = T)
T c==> c/\ cIN * f0 c, f1 f2 * part cdart1_of_fan c, f3 f4 cIN * f0 * f0 c, f1 f2 * part cdart1_of_fan c, f3 f4 c= cIN * f0 c, f1 f2 * part cdart1_of_fan c, f3 f4 cT
- (!x. ((x IN ((orbit_map (f_fan_pair_ext (V , E))) (v , w))) ==> (x IN (dart1_of_fan (V , E))))), ((f_fan_pair_ext (V , E)) = f) |- ((x IN ((orbit_map f) (v , w))) ==> ((x IN (dart1_of_fan (V , E))) = T))
T c==> ! c==> cIN b0 * * part corbit_map * part cf_fan_pair_ext c, f0 f1 c, f2 f3 cIN b0 * part cdart1_of_fan c, f0 f1 c==> c= * part cf_fan_pair_ext c, f0 f1 f4 c==> cIN f5 * * part corbit_map f4 c, f2 f3 c= cIN f5 * part cdart1_of_fan c, f0 f1 cT
- |- ((?w'. ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w')) ==> (?w'. ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w')))
T c==> c? / c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b0 c? / c= csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 b0
- |- (!f. (((\f. ((f_fan_pair_ext (V , E)) = f)) f) ==> (?f. ((f_fan_pair_ext (V , E)) = f))))
T c==> * / c= * part cf_fan_pair_ext c, f0 f1 b0 f2 c? / c= * part cf_fan_pair_ext c, f0 f1 b0
- ((!x. ((((((extension_sigma_fan (vec (NUMERAL _0))) V) E) w) (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) x)) = x)) /\ (!x. ((((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) (((((extension_sigma_fan (vec (NUMERAL _0))) V) E) w) x)) = x))) |- ((((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) (((((extension_sigma_fan (vec (NUMERAL _0))) V) E) w) x)) = x)
T c==> c/\ ! c= cextension_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 b0 ! c= cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 cextension_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 b0 c= cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 cextension_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f3
