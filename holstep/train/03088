N DIFFERENTIABLE_NORM_AT
C |- (!a. ((~ (a = (vec (NUMERAL _0)))) ==> ((differentiable (\x. (lift (vector_norm x)))) (at a))))
T c==> c~ c= f0 cvec cNUMERAL c_0 cdifferentiable / clift cvector_norm b0 cat f0
D TRUTH
A |- T
T cT
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D REAL_POW_LT
A |- (!x. (!n. (((real_lt (real_of_num (NUMERAL _0))) x) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_pow x) n)))))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 creal_pow f0 f1
D Trigonometry.XHVXJVB
A |- (!x. ((vector_norm x) = (sqrt ((dot x) x))))
T c= cvector_norm f0 csqrt cdot f0 f0
D NORM_POS_LT
A |- (!x. (((real_lt (real_of_num (NUMERAL _0))) (vector_norm x)) = (~ (x = (vec (NUMERAL _0))))))
T c= creal_lt creal_of_num cNUMERAL c_0 cvector_norm f0 c~ c= f0 cvec cNUMERAL c_0
D NORM_POW_2
A |- (!x. (((real_pow (vector_norm x)) (NUMERAL (BIT0 (BIT1 _0)))) = ((dot x) x)))
T c= creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 cdot f0 f0
D LIFT_DROP
A |- ((!x. ((lift (drop x)) = x)) /\ (!x. ((drop (lift x)) = x)))
T c/\ ! c= clift cdrop b0 b0 ! c= cdrop clift b0 b0
D DIFFERENTIABLE_CHAIN_AT
A |- (!f. (!g. (!x. ((((differentiable f) (at x)) /\ ((differentiable g) (at (f x)))) ==> ((differentiable (g o f)) (at x))))))
T c==> c/\ cdifferentiable f0 cat f1 cdifferentiable f2 cat * f0 f1 cdifferentiable * * part co f2 f0 cat f1
D DIFFERENTIABLE_SQNORM_AT
A |- (!a. ((differentiable (\x. (lift ((real_pow (vector_norm x)) (NUMERAL (BIT0 (BIT1 _0))))))) (at a)))
T cdifferentiable / clift creal_pow cvector_norm b0 cNUMERAL cBIT0 cBIT1 c_0 cat f0
D REAL_DIFFERENTIABLE_AT
A |- (!f. (!a. (((real_differentiable f) (atreal x)) = ((differentiable (lift o (f o drop))) (at (lift x))))))
T c= creal_differentiable f0 catreal f1 cdifferentiable * * part co part clift * * part co f0 part cdrop cat clift f1
D REAL_DIFFERENTIABLE_AT_SQRT
A |- (!x. (((real_lt (real_of_num (NUMERAL _0))) x) ==> ((real_differentiable sqrt) (atreal x))))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 creal_differentiable part csqrt catreal f0
+ (~ (a = (vec (NUMERAL _0)))), ((\x. (lift (sqrt ((dot x) x)))) = ((lift o (sqrt o drop)) o (\x. (lift ((dot x) x))))) |- ((differentiable (\x. (lift (sqrt ((dot x) x))))) (at a))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c= / clift csqrt cdot b0 b0 * * part co * * part co part clift * * part co part csqrt part cdrop / clift cdot b0 b0 cdifferentiable / clift csqrt cdot b0 b0 cat f0
+ |- (((differentiable (\x. (lift ((real_pow (vector_norm x)) (NUMERAL (BIT0 (BIT1 _0))))))) (at a)) = T)
T c= cdifferentiable / clift creal_pow cvector_norm b0 cNUMERAL cBIT0 cBIT1 c_0 cat f0 cT
+ ((real_lt (real_of_num (NUMERAL _0))) x) |- (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) ((real_pow x) n)) = T))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_lt creal_of_num cNUMERAL c_0 creal_pow f0 f1 cT
+ |- (((!f. (!g. (!x. ((((differentiable f) (at x)) /\ ((differentiable g) (at (f x)))) ==> ((differentiable (g o f)) (at x)))))) ==> (!g. (!f. (!x. ((((differentiable f) (at x)) /\ ((differentiable g) (at (f x)))) ==> ((differentiable (g o f)) (at x))))))) = (!g. (!f. (!x. ((((differentiable f) (at x)) /\ ((differentiable g) (at (f x)))) ==> ((differentiable (g o f)) (at x)))))))
T c= c==> ! ! ! c==> c/\ cdifferentiable b0 cat b2 cdifferentiable b1 cat * b0 b2 cdifferentiable * * part co b1 b0 cat b2 ! ! ! c==> c/\ cdifferentiable b1 cat b2 cdifferentiable b0 cat * b1 b2 cdifferentiable * * part co b0 b1 cat b2 ! ! ! c==> c/\ cdifferentiable b1 cat b2 cdifferentiable b0 cat * b1 b2 cdifferentiable * * part co b0 b1 cat b2
+ (~ (a = (vec (NUMERAL _0)))) |- ((differentiable (lift o (sqrt o drop))) (at (lift ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c~ c= f0 cvec cNUMERAL c_0 cdifferentiable * * part co part clift * * part co part csqrt part cdrop cat clift creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0
- (!f. (!g. (!x. ((((differentiable f) (at x)) /\ ((differentiable g) (at (f x)))) ==> ((differentiable (g o f)) (at x)))))) |- ((\x. ((((differentiable f) (at x)) /\ ((differentiable g) (at (f x)))) ==> ((differentiable (g o f)) (at x)))) x)
T c==> ! ! ! c==> c/\ cdifferentiable b0 cat b2 cdifferentiable b1 cat * b0 b2 cdifferentiable * * part co b1 b0 cat b2 * / c==> c/\ cdifferentiable f0 cat b0 cdifferentiable f1 cat * f0 b0 cdifferentiable * * part co f1 f0 cat b0 f2
+ (~ (a = (vec (NUMERAL _0)))) |- (((((real_lt (real_of_num (NUMERAL _0))) ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_differentiable sqrt) (atreal ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((differentiable (lift o (sqrt o drop))) (at (lift ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0)))))))) = (((differentiable (lift o (sqrt o drop))) (at (lift ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0))))))) ==> T))
T c==> c~ c= f0 cvec cNUMERAL c_0 c= c==> c==> creal_lt creal_of_num cNUMERAL c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_differentiable part csqrt catreal creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 cdifferentiable * * part co part clift * * part co part csqrt part cdrop cat clift creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 c==> cdifferentiable * * part co part clift * * part co part csqrt part cdrop cat clift creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 cT
+ |- (((!a. ((differentiable (\x. (lift ((real_pow (vector_norm x)) (NUMERAL (BIT0 (BIT1 _0))))))) (at a))) ==> ((\a. ((differentiable (\x. (lift ((real_pow (vector_norm x)) (NUMERAL (BIT0 (BIT1 _0))))))) (at a))) a)) = ((\a. ((differentiable (\x. (lift ((real_pow (vector_norm x)) (NUMERAL (BIT0 (BIT1 _0))))))) (at a))) a))
T c= c==> ! cdifferentiable / clift creal_pow cvector_norm b1 cNUMERAL cBIT0 cBIT1 c_0 cat b0 * / cdifferentiable / clift creal_pow cvector_norm b1 cNUMERAL cBIT0 cBIT1 c_0 cat b0 f0 * / cdifferentiable / clift creal_pow cvector_norm b1 cNUMERAL cBIT0 cBIT1 c_0 cat b0 f0
- |- (((!x. ((lift (drop x)) = x)) ==> ((\x. ((lift (drop x)) = x)) x)) = ((\x. ((lift (drop x)) = x)) x))
T c= c==> ! c= clift cdrop b0 b0 * / c= clift cdrop b0 b0 f0 * / c= clift cdrop b0 b0 f0
+ ((differentiable (lift o (sqrt o drop))) (at (lift ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0))))))) |- (((differentiable (lift o (sqrt o drop))) (at (lift ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((differentiable (lift o (sqrt o drop))) (at (lift ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0))))))) = T))
T c==> cdifferentiable * * part co part clift * * part co part csqrt part cdrop cat clift creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ cdifferentiable * * part co part clift * * part co part csqrt part cdrop cat clift creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 c= cdifferentiable * * part co part clift * * part co part csqrt part cdrop cat clift creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 cT
+ |- (((!x. ((drop (lift x)) = x)) ==> ((\x. ((drop (lift x)) = x)) x)) = ((\x. ((drop (lift x)) = x)) x))
T c= c==> ! c= cdrop clift b0 b0 * / c= cdrop clift b0 b0 f0 * / c= cdrop clift b0 b0 f0
+ (~ (a = (vec (NUMERAL _0)))) |- ((((real_lt (real_of_num (NUMERAL _0))) ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_differentiable sqrt) (atreal ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((differentiable (lift o (sqrt o drop))) (at (lift ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c==> creal_lt creal_of_num cNUMERAL c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_differentiable part csqrt catreal creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 cdifferentiable * * part co part clift * * part co part csqrt part cdrop cat clift creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\x. (lift (sqrt ((dot x) x)))) = ((lift o (sqrt o drop)) o (\x. (lift ((dot x) x)))))
T c= / clift csqrt cdot b0 b0 * * part co * * part co part clift * * part co part csqrt part cdrop / clift cdot b0 b0
- ((vec (NUMERAL _0)) = a) |- (a = (vec (NUMERAL _0)))
T c==> c= cvec cNUMERAL c_0 f0 c= f0 cvec cNUMERAL c_0
+ (~ (a = (vec (NUMERAL _0)))) |- ((((real_lt (real_of_num (NUMERAL _0))) ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_differentiable sqrt) (atreal ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0))))))) = (T ==> ((differentiable (lift o (sqrt o drop))) (at (lift ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_differentiable part csqrt catreal creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 c==> cT cdifferentiable * * part co part clift * * part co part csqrt part cdrop cat clift creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- ((\p'. (!q'. ((((real_lt (real_of_num (NUMERAL _0))) ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> (((real_differentiable sqrt) (atreal ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_differentiable sqrt) (atreal ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p')
T * / ! c==> c= creal_lt creal_of_num cNUMERAL c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_differentiable part csqrt catreal creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_differentiable part csqrt catreal creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- (((~ (a = (vec (NUMERAL _0)))) ==> ((differentiable (\x. (lift (vector_norm x)))) (at a))) = T)
T c= c==> c~ c= f0 cvec cNUMERAL c_0 cdifferentiable / clift cvector_norm b0 cat f0 cT
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ |- (((((real_lt (real_of_num (NUMERAL _0))) ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_differentiable sqrt) (atreal ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0))))))) = p') ==> ((p' ==> (((differentiable (lift o (sqrt o drop))) (at (lift ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0))))))) = q')) ==> (((((real_lt (real_of_num (NUMERAL _0))) ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_differentiable sqrt) (atreal ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((differentiable (lift o (sqrt o drop))) (at (lift ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0)))))))) = (p' ==> q'))))
T c==> c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_differentiable part csqrt catreal creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= cdifferentiable * * part co part clift * * part co part csqrt part cdrop cat clift creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 f2 c= c==> c==> creal_lt creal_of_num cNUMERAL c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_differentiable part csqrt catreal creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 cdifferentiable * * part co part clift * * part co part csqrt part cdrop cat clift creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 c==> f1 f2
+ |- ((\x. (((real_lt (real_of_num (NUMERAL _0))) x) ==> ((real_differentiable sqrt) (atreal x)))) ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0)))))
T * / c==> creal_lt creal_of_num cNUMERAL c_0 b0 creal_differentiable part csqrt catreal b0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((differentiable (lift o (sqrt o drop))) (at (lift ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((differentiable (lift o (sqrt o drop))) (at (lift ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0))))))) = T))
T c==> cdifferentiable * * part co part clift * * part co part csqrt part cdrop cat clift creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 c= cdifferentiable * * part co part clift * * part co part csqrt part cdrop cat clift creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 cT
- (~ (a = (vec (NUMERAL _0)))) |- (((~ ((vec (NUMERAL _0)) = a)) ==> (((vec (NUMERAL _0)) = a) = F)) = (((vec (NUMERAL _0)) = a) = F))
T c==> c~ c= f0 cvec cNUMERAL c_0 c= c==> c~ c= cvec cNUMERAL c_0 f0 c= c= cvec cNUMERAL c_0 f0 cF c= c= cvec cNUMERAL c_0 f0 cF
+ (~ (a = (vec (NUMERAL _0)))) |- ((T ==> (((real_differentiable sqrt) (atreal ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_differentiable sqrt) (atreal ((real_pow (vector_norm a)) (NUMERAL (BIT0 (BIT1 _0))))))) = (T ==> q')))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c==> cT c= creal_differentiable part csqrt catreal creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_differentiable part csqrt catreal creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 c==> cT f1
- (~ (a = (vec (NUMERAL _0)))) |- (((vec (NUMERAL _0)) = a) = F)
T c==> c~ c= f0 cvec cNUMERAL c_0 c= c= cvec cNUMERAL c_0 f0 cF
- T |- (T = T)
T c==> cT c= cT cT
- (((differentiable f) (at x)) /\ ((differentiable g) (at (f x)))) |- ((!f. (!g. (!x. ((((differentiable f) (at x)) /\ ((differentiable g) (at (f x)))) ==> ((differentiable (g o f)) (at x)))))) ==> ((differentiable (g o f)) (at x)))
T c==> c/\ cdifferentiable f0 cat f1 cdifferentiable f2 cat * f0 f1 c==> ! ! ! c==> c/\ cdifferentiable b0 cat b2 cdifferentiable b1 cat * b0 b2 cdifferentiable * * part co b1 b0 cat b2 cdifferentiable * * part co f2 f0 cat f1
- (!f. (!g. (!x. ((((differentiable f) (at x)) /\ ((differentiable g) (at (f x)))) ==> ((differentiable (g o f)) (at x)))))), (((differentiable f) (at x)) /\ ((differentiable g) (at (f x)))) |- ((!f. (!g. (!x. ((((differentiable f) (at x)) /\ ((differentiable g) (at (f x)))) ==> ((differentiable (g o f)) (at x)))))) /\ ((differentiable (g o f)) (at x)))
T c==> ! ! ! c==> c/\ cdifferentiable b0 cat b2 cdifferentiable b1 cat * b0 b2 cdifferentiable * * part co b1 b0 cat b2 c==> c/\ cdifferentiable f0 cat f1 cdifferentiable f2 cat * f0 f1 c/\ ! ! ! c==> c/\ cdifferentiable b0 cat b2 cdifferentiable b1 cat * b0 b2 cdifferentiable * * part co b1 b0 cat b2 cdifferentiable * * part co f2 f0 cat f1
- |- ((\x. ((lift (drop x)) = x)) x)
T * / c= clift cdrop b0 b0 f0
- (a = (vec (NUMERAL _0))) |- ((vec (NUMERAL _0)) = a)
T c==> c= f0 cvec cNUMERAL c_0 c= cvec cNUMERAL c_0 f0
- (!f. (!g. (!x. ((((differentiable f) (at x)) /\ ((differentiable g) (at (f x)))) ==> ((differentiable (g o f)) (at x)))))) |- (((!x. ((((differentiable f) (at x)) /\ ((differentiable g) (at (f x)))) ==> ((differentiable (g o f)) (at x)))) ==> ((\x. ((((differentiable f) (at x)) /\ ((differentiable g) (at (f x)))) ==> ((differentiable (g o f)) (at x)))) x)) = ((\x. ((((differentiable f) (at x)) /\ ((differentiable g) (at (f x)))) ==> ((differentiable (g o f)) (at x)))) x))
T c==> ! ! ! c==> c/\ cdifferentiable b0 cat b2 cdifferentiable b1 cat * b0 b2 cdifferentiable * * part co b1 b0 cat b2 c= c==> ! c==> c/\ cdifferentiable f0 cat b0 cdifferentiable f1 cat * f0 b0 cdifferentiable * * part co f1 f0 cat b0 * / c==> c/\ cdifferentiable f0 cat b0 cdifferentiable f1 cat * f0 b0 cdifferentiable * * part co f1 f0 cat b0 f2 * / c==> c/\ cdifferentiable f0 cat b0 cdifferentiable f1 cat * f0 b0 cdifferentiable * * part co f1 f0 cat b0 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (~ (a = (vec (NUMERAL _0)))) |- (~ ((vec (NUMERAL _0)) = a))
T c==> c~ c= f0 cvec cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 f0
- (!f. (!g. (!x. ((((differentiable f) (at x)) /\ ((differentiable g) (at (f x)))) ==> ((differentiable (g o f)) (at x)))))), (((differentiable f) (at x)) /\ ((differentiable g) (at (f x)))) |- ((differentiable (g o f)) (at x))
T c==> ! ! ! c==> c/\ cdifferentiable b0 cat b2 cdifferentiable b1 cat * b0 b2 cdifferentiable * * part co b1 b0 cat b2 c==> c/\ cdifferentiable f0 cat f1 cdifferentiable f2 cat * f0 f1 cdifferentiable * * part co f2 f0 cat f1
- (!f. (!g. (!x. ((((differentiable f) (at x)) /\ ((differentiable g) (at (f x)))) ==> ((differentiable (g o f)) (at x)))))) |- (((((differentiable f) (at x)) /\ ((differentiable g) (at (f x)))) ==> ((differentiable (g o f)) (at x))) = T)
T c==> ! ! ! c==> c/\ cdifferentiable b0 cat b2 cdifferentiable b1 cat * b0 b2 cdifferentiable * * part co b1 b0 cat b2 c= c==> c/\ cdifferentiable f0 cat f1 cdifferentiable f2 cat * f0 f1 cdifferentiable * * part co f2 f0 cat f1 cT
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- (!f. (!g. (!x. ((((differentiable f) (at x)) /\ ((differentiable g) (at (f x)))) ==> ((differentiable (g o f)) (at x)))))), (((differentiable f) (at x)) /\ ((differentiable g) (at (f x)))) |- ((((differentiable f) (at x)) /\ ((differentiable g) (at (f x)))) /\ ((differentiable (g o f)) (at x)))
T c==> ! ! ! c==> c/\ cdifferentiable b0 cat b2 cdifferentiable b1 cat * b0 b2 cdifferentiable * * part co b1 b0 cat b2 c==> c/\ cdifferentiable f0 cat f1 cdifferentiable f2 cat * f0 f1 c/\ c/\ cdifferentiable f0 cat f1 cdifferentiable f2 cat * f0 f1 cdifferentiable * * part co f2 f0 cat f1
- |- ((lift (drop x)) = x)
T c= clift cdrop f0 f0
