N Hypermap.lemma_bound_hyp_m
C |- (!H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> ((SUC ((((hyp'm H) NF) L) x)) < (CARD ((face H) x))))))))
T c==> cis_split_condition f0 f1 f2 f3 c< cSUC chyp'm f0 f1 f2 f3 cCARD * * part cface f0 f3
D TRUTH
A |- T
T cT
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D CONTRAPOS_THM
A |- (!t1. (!t2. (((~ t1) ==> (~ t2)) = (t2 ==> t1))))
T c= c==> c~ f0 c~ f1 c==> f1 f0
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D LE_TRANS
A |- (!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p)))))
T c==> c/\ c<= f0 f1 c<= f1 f2 c<= f0 f2
D NOT_LT
A |- (!m. (!n. ((~ (m < n)) = (n <= m))))
T c= c~ c< f0 f1 c<= f1 f0
D LT_IMP_LE
A |- (!m. (!n. ((m < n) ==> (m <= n))))
T c==> c< f0 f1 c<= f0 f1
D LT_NZ
A |- (!n. (((NUMERAL _0) < n) = (~ (n = (NUMERAL _0)))))
T c= c< cNUMERAL c_0 f0 c~ c= f0 cNUMERAL c_0
D DIVMOD_EXIST
A |- (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (?q. (?r. ((m = ((q * n) + r)) /\ (r < n)))))))
T c==> c~ c= f0 cNUMERAL c_0 c? / c? / c/\ c= f1 c+ c* b0 f0 b1 c< b1 f0
D Hypermap.power_map_fix_point
A |- (!n. (!f. (!x. (((((POWER f) n) x) = x) ==> (!m. ((((POWER f) (m * n)) x) = x))))))
T c==> c= cPOWER f0 f1 f2 f2 ! c= cPOWER f0 c* b0 f1 f2 f2
D Hypermap.lemma_add_exponent_function
A |- (!p. (!m. (!n. (!x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x)))))))
T c= cPOWER f0 c+ f1 f2 f3 cPOWER f0 f1 cPOWER f0 f2 f3
D Hypermap.LT1_NZ
A |- (!n. (((NUMERAL (BIT1 _0)) <= n) = ((NUMERAL _0) < n)))
T c= c<= cNUMERAL cBIT1 c_0 f0 c< cNUMERAL c_0 f0
D Hypermap.FACE_NOT_EMPTY
A |- (!H. (!x. ((NUMERAL (BIT1 _0)) <= (CARD ((face H) x)))))
T c<= cNUMERAL cBIT1 c_0 cCARD * * part cface f0 f1
D Hypermap.lemma_face_cycle
A |- (!H. (!x. ((((POWER (face_map H)) (CARD ((face H) x))) x) = x)))
T c= cPOWER * part cface_map f0 cCARD * * part cface f0 f1 f1 f1
D Hypermap.lemma_true_loop1
A |- (!H. (!NF. (!L. (((is_restricted H) /\ (((is_normal H) NF) /\ (L IN NF))) ==> ((L IN ((final_loops H) NF)) = (?x. (((in_dart_of_loop x) L) /\ (!n. ((((POWER (face_map H)) n) x) = (((POWER (loop_map L)) n) x))))))))))
T c==> c/\ cis_restricted f0 c/\ cis_normal f0 f1 cIN f2 f1 c= cIN f2 * * part cfinal_loops f0 f1 c? / c/\ cin_dart_of_loop b0 f2 ! c= cPOWER * part cface_map f0 b1 b0 cPOWER * part cloop_map f2 b1 b0
D Hypermap.is_split_condition
A |- (!H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) = ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))))))))))
T c= cis_split_condition f0 f1 f2 f3 c/\ cis_restricted f0 c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop f3 f2 c= chead_of_atom f0 f1 f3 f3
D Hypermap.lemma_hyp_m
A |- (!H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))))))))
T c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3
+ |- (((!L. (((is_restricted H) /\ (((is_normal H) NF) /\ (L IN NF))) ==> ((L IN ((final_loops H) NF)) = (?x. (((in_dart_of_loop x) L) /\ (!n. ((((POWER (face_map H)) n) x) = (((POWER (loop_map L)) n) x)))))))) ==> ((\L. (((is_restricted H) /\ (((is_normal H) NF) /\ (L IN NF))) ==> ((L IN ((final_loops H) NF)) = (?x. (((in_dart_of_loop x) L) /\ (!n. ((((POWER (face_map H)) n) x) = (((POWER (loop_map L)) n) x)))))))) L)) = ((\L. (((is_restricted H) /\ (((is_normal H) NF) /\ (L IN NF))) ==> ((L IN ((final_loops H) NF)) = (?x. (((in_dart_of_loop x) L) /\ (!n. ((((POWER (face_map H)) n) x) = (((POWER (loop_map L)) n) x)))))))) L))
T c= c==> ! c==> c/\ cis_restricted f0 c/\ cis_normal f0 f1 cIN b0 f1 c= cIN b0 * * part cfinal_loops f0 f1 c? / c/\ cin_dart_of_loop b1 b0 ! c= cPOWER * part cface_map f0 b2 b1 cPOWER * part cloop_map b0 b2 b1 * / c==> c/\ cis_restricted f0 c/\ cis_normal f0 f1 cIN b0 f1 c= cIN b0 * * part cfinal_loops f0 f1 c? / c/\ cin_dart_of_loop b1 b0 ! c= cPOWER * part cface_map f0 b2 b1 cPOWER * part cloop_map b0 b2 b1 f2 * / c==> c/\ cis_restricted f0 c/\ cis_normal f0 f1 cIN b0 f1 c= cIN b0 * * part cfinal_loops f0 f1 c? / c/\ cin_dart_of_loop b1 b0 ! c= cPOWER * part cface_map f0 b2 b1 cPOWER * part cloop_map b0 b2 b1 f2
+ ((CARD ((face H) x)) <= (SUC ((((hyp'm H) NF) L) x))), ((((is_split_condition H) NF) L) x) |- (!q. (((\q. (?r. ((n = ((q * (CARD ((face H) x))) + r)) /\ (r < (CARD ((face H) x)))))) q) ==> ((((POWER (face_map H)) n) x) = (((POWER (loop_map L)) n) x))))
T c==> c<= cCARD * * part cface f0 f1 cSUC chyp'm f0 f2 f3 f1 c==> cis_split_condition f0 f2 f3 f1 ! c==> * / c? / c/\ c= f4 c+ c* b1 cCARD * * part cface f0 f1 b1 c< b1 cCARD * * part cface f0 f1 b0 c= cPOWER * part cface_map f0 f4 f1 cPOWER * part cloop_map f3 f4 f1
+ |- (((!H. (!x. ((NUMERAL (BIT1 _0)) <= (CARD ((face H) x))))) ==> ((\H. (!x. ((NUMERAL (BIT1 _0)) <= (CARD ((face H) x))))) H)) = ((\H. (!x. ((NUMERAL (BIT1 _0)) <= (CARD ((face H) x))))) H))
T c= c==> ! ! c<= cNUMERAL cBIT1 c_0 cCARD * * part cface b0 b1 * / ! c<= cNUMERAL cBIT1 c_0 cCARD * * part cface b0 b1 f0 * / ! c<= cNUMERAL cBIT1 c_0 cCARD * * part cface b0 b1 f0
+ ((CARD ((face H) x)) <= (SUC ((((hyp'm H) NF) L) x))), ((((is_split_condition H) NF) L) x) |- ((~ ((CARD ((face H) x)) = (NUMERAL _0))) ==> ((((POWER (face_map H)) n) x) = (((POWER (loop_map L)) n) x)))
T c==> c<= cCARD * * part cface f0 f1 cSUC chyp'm f0 f2 f3 f1 c==> cis_split_condition f0 f2 f3 f1 c==> c~ c= cCARD * * part cface f0 f1 cNUMERAL c_0 c= cPOWER * part cface_map f0 f4 f1 cPOWER * part cloop_map f3 f4 f1
+ ((((is_split_condition H) NF) L) x) |- ((((r <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) r) x) = (((POWER (face_map H)) r) x))) ==> ((((POWER (face_map H)) r) x) = (((POWER (loop_map L)) r) x))) = ((((POWER (face_map H)) r) x) = (((POWER (loop_map L)) r) x)))
T c==> cis_split_condition f0 f1 f2 f3 c= c==> c==> c<= f4 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 f4 f3 cPOWER * part cface_map f0 f4 f3 c= cPOWER * part cface_map f0 f4 f3 cPOWER * part cloop_map f2 f4 f3 c= cPOWER * part cface_map f0 f4 f3 cPOWER * part cloop_map f2 f4 f3
+ |- (((!x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x)))) ==> ((\x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x)))) x)) = ((\x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x)))) x))
T c= c==> ! c= cPOWER f0 c+ f1 f2 b0 cPOWER f0 f1 cPOWER f0 f2 b0 * / c= cPOWER f0 c+ f1 f2 b0 cPOWER f0 f1 cPOWER f0 f2 b0 f3 * / c= cPOWER f0 c+ f1 f2 b0 cPOWER f0 f1 cPOWER f0 f2 b0 f3
- (?q. (?r. ((n = ((q * (CARD ((face H) x))) + r)) /\ (r < (CARD ((face H) x)))))), ((CARD ((face H) x)) <= (SUC ((((hyp'm H) NF) L) x))), ((((is_split_condition H) NF) L) x) |- ((((POWER (face_map H)) n) x) = (((POWER (loop_map L)) n) x))
T c==> c? / c? / c/\ c= f0 c+ c* b0 cCARD * * part cface f1 f2 b1 c< b1 cCARD * * part cface f1 f2 c==> c<= cCARD * * part cface f1 f2 cSUC chyp'm f1 f3 f4 f2 c==> cis_split_condition f1 f3 f4 f2 c= cPOWER * part cface_map f1 f0 f2 cPOWER * part cloop_map f4 f0 f2
+ |- ((\p. (((m <= n) /\ (n <= p)) ==> (m <= p))) p)
T * / c==> c/\ c<= f0 f1 c<= f1 b0 c<= f0 b0 f2
+ |- (((!n. ((m + n) = (n + m))) ==> ((\n. ((m + n) = (n + m))) n)) = ((\n. ((m + n) = (n + m))) n))
T c= c==> ! c= c+ f0 b0 c+ b0 f0 * / c= c+ f0 b0 c+ b0 f0 f1 * / c= c+ f0 b0 c+ b0 f0 f1
+ |- ((\m. ((((POWER (face_map H)) (m * (CARD ((face H) x)))) x) = x)) m)
T * / c= cPOWER * part cface_map f0 c* b0 cCARD * * part cface f0 f1 f1 f1 f2
+ (is_restricted H), ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((is_normal H) NF), ((((is_split_condition H) NF) L) x) |- ((SUC ((((hyp'm H) NF) L) x)) < (CARD ((face H) x)))
T c==> cis_restricted f0 c==> c/\ cIN f1 f2 c/\ c~ cIN f1 * * part cfinal_loops f0 f2 c/\ cin_dart_of_loop f3 f1 c= chead_of_atom f0 f2 f3 f3 c==> cis_normal f0 f2 c==> cis_split_condition f0 f2 f1 f3 c< cSUC chyp'm f0 f2 f1 f3 cCARD * * part cface f0 f3
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- |- ((!n. t) = t)
T c= ! f0 f0
- |- ((?x. t) = t)
T c= c? / f0 f0
- |- ((x = x) = T)
T c= c= f0 f0 cT
- (?r. ((n = ((q * (CARD ((face H) x))) + r)) /\ (r < (CARD ((face H) x))))), ((CARD ((face H) x)) <= (SUC ((((hyp'm H) NF) L) x))), ((((is_split_condition H) NF) L) x) |- ((((POWER (face_map H)) n) x) = (((POWER (loop_map L)) n) x))
T c==> c? / c/\ c= f0 c+ c* f1 cCARD * * part cface f2 f3 b0 c< b0 cCARD * * part cface f2 f3 c==> c<= cCARD * * part cface f2 f3 cSUC chyp'm f2 f4 f5 f3 c==> cis_split_condition f2 f4 f5 f3 c= cPOWER * part cface_map f2 f0 f3 cPOWER * part cloop_map f5 f0 f3
- (?q. (?r. ((n = ((q * (CARD ((face H) x))) + r)) /\ (r < (CARD ((face H) x)))))), ((CARD ((face H) x)) <= (SUC ((((hyp'm H) NF) L) x))), ((((is_split_condition H) NF) L) x) |- ((?q. (?r. ((n = ((q * (CARD ((face H) x))) + r)) /\ (r < (CARD ((face H) x)))))) /\ ((((POWER (face_map H)) n) x) = (((POWER (loop_map L)) n) x)))
T c==> c? / c? / c/\ c= f0 c+ c* b0 cCARD * * part cface f1 f2 b1 c< b1 cCARD * * part cface f1 f2 c==> c<= cCARD * * part cface f1 f2 cSUC chyp'm f1 f3 f4 f2 c==> cis_split_condition f1 f3 f4 f2 c/\ c? / c? / c/\ c= f0 c+ c* b0 cCARD * * part cface f1 f2 b1 c< b1 cCARD * * part cface f1 f2 c= cPOWER * part cface_map f1 f0 f2 cPOWER * part cloop_map f4 f0 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (?r. ((n = ((q * (CARD ((face H) x))) + r)) /\ (r < (CARD ((face H) x))))), ((CARD ((face H) x)) <= (SUC ((((hyp'm H) NF) L) x))), ((((is_split_condition H) NF) L) x) |- ((?r. ((n = ((q * (CARD ((face H) x))) + r)) /\ (r < (CARD ((face H) x))))) /\ ((((POWER (face_map H)) n) x) = (((POWER (loop_map L)) n) x)))
T c==> c? / c/\ c= f0 c+ c* f1 cCARD * * part cface f2 f3 b0 c< b0 cCARD * * part cface f2 f3 c==> c<= cCARD * * part cface f2 f3 cSUC chyp'm f2 f4 f5 f3 c==> cis_split_condition f2 f4 f5 f3 c/\ c? / c/\ c= f0 c+ c* f1 cCARD * * part cface f2 f3 b0 c< b0 cCARD * * part cface f2 f3 c= cPOWER * part cface_map f2 f0 f3 cPOWER * part cloop_map f5 f0 f3
