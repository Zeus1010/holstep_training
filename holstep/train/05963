N Hypermap.lemma_congruence_on_orbit
C |- (!s. (!p. (!x. (!n. (!m. (((FINITE s) /\ (((permutes p) s) /\ ((n < (CARD ((orbit_map p) x))) /\ ((((POWER p) n) x) = (((POWER p) m) x))))) ==> (?q. (m = ((q * (CARD ((orbit_map p) x))) + n)))))))))
T c==> c/\ cFINITE f0 c/\ cpermutes f1 f0 c/\ c< f2 cCARD * * part corbit_map f1 f3 c= cPOWER f1 f2 f3 cPOWER f1 f4 f3 c? / c= f4 c+ c* b0 cCARD * * part corbit_map f1 f3 f2
D TRUTH
A |- T
T cT
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D EQ_ADD_LCANCEL
A |- (!m. (!n. (!p. (((m + n) = (m + p)) = (n = p)))))
T c= c= c+ f0 f1 c+ f0 f2 c= f1 f2
D LE_SUC_LT
A |- (!m. (!n. (((SUC m) <= n) = (m < n))))
T c= c<= cSUC f0 f1 c< f0 f1
D LT_SUC_LE
A |- (!m. (!n. ((m < (SUC n)) = (m <= n))))
T c= c< f0 cSUC f1 c<= f0 f1
D LE_REFL
A |- (!n. (n <= n))
T c<= f0 f0
D LT_NZ
A |- (!n. (((NUMERAL _0) < n) = (~ (n = (NUMERAL _0)))))
T c= c< cNUMERAL c_0 f0 c~ c= f0 cNUMERAL c_0
D DIVMOD_EXIST
A |- (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (?q. (?r. ((m = ((q * n) + r)) /\ (r < n)))))))
T c==> c~ c= f0 cNUMERAL c_0 c? / c? / c/\ c= f1 c+ c* b0 f0 b1 c< b1 f0
D Hypermap.power_map_fix_point
A |- (!n. (!f. (!x. (((((POWER f) n) x) = x) ==> (!m. ((((POWER f) (m * n)) x) = x))))))
T c==> c= cPOWER f0 f1 f2 f2 ! c= cPOWER f0 c* b0 f1 f2 f2
D Hypermap.lemma_add_exponent_function
A |- (!p. (!m. (!n. (!x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x)))))))
T c= cPOWER f0 c+ f1 f2 f3 cPOWER f0 f1 cPOWER f0 f2 f3
D Hypermap.lemma_orbit_finite
A |- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x))))))
T c==> c/\ cFINITE f0 cpermutes f1 f0 cFINITE * * part corbit_map f1 f2
D Hypermap.LT1_NZ
A |- (!n. (((NUMERAL (BIT1 _0)) <= n) = ((NUMERAL _0) < n)))
T c= c<= cNUMERAL cBIT1 c_0 f0 c< cNUMERAL c_0 f0
D Hypermap.LE_SUC_PRE
A |- (!n. (((NUMERAL (BIT1 _0)) <= n) ==> ((SUC (PRE n)) = n)))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= cSUC cPRE f0 f0
D Hypermap.orbit_reflect
A |- (!f. (!x. (x IN ((orbit_map f) x))))
T cIN f0 * * part corbit_map f1 f0
D Hypermap.CARD_ATLEAST_1
A |- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((NUMERAL (BIT1 _0)) <= (CARD s)))))
T c==> c/\ cFINITE f0 cIN f1 f0 c<= cNUMERAL cBIT1 c_0 cCARD f0
D Hypermap.lemma_inj_orbit
A |- (!p. (!x. (!n. ((((inj_orbit p) x) n) = (!i. (!j. (((i <= n) /\ ((j <= n) /\ ((((POWER p) i) x) = (((POWER p) j) x)))) ==> (i = j))))))))
T c= cinj_orbit f0 f1 f2 ! ! c==> c/\ c<= b0 f2 c/\ c<= b1 f2 c= cPOWER f0 b0 f1 cPOWER f0 b1 f1 c= b0 b1
D Hypermap.lemma_segment_orbit
A |- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (!m. ((m < (CARD ((orbit_map p) x))) ==> (((inj_orbit p) x) m)))))))
T c==> c/\ cFINITE f0 cpermutes f1 f0 ! c==> c< b0 cCARD * * part corbit_map f1 f2 cinj_orbit f1 f2 b0
D Hypermap.lemma_cycle_orbit
A |- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> ((((POWER p) (CARD ((orbit_map p) x))) x) = x)))))
T c==> c/\ cFINITE f0 cpermutes f1 f0 c= cPOWER f1 cCARD * * part corbit_map f1 f2 f2 f2
+ |- ((\s. (!p. (((FINITE s) /\ ((permutes p) s)) ==> (!x. (!m. ((m < (CARD ((orbit_map p) x))) ==> (((inj_orbit p) x) m))))))) s)
T * / ! c==> c/\ cFINITE b0 cpermutes b1 b0 ! ! c==> c< b3 cCARD * * part corbit_map b1 b2 cinj_orbit b1 b2 b3 f0
+ ((((POWER p) n) x) = (((POWER p) r) x)), ((FINITE ((orbit_map p) x)) /\ (x IN ((orbit_map p) x))), (n < (CARD ((orbit_map p) x))), (r < (CARD ((orbit_map p) x))) |- ((((r < (SUC (PRE (CARD ((orbit_map p) x))))) /\ ((n < (SUC (PRE (CARD ((orbit_map p) x))))) /\ ((((POWER p) r) x) = (((POWER p) n) x)))) ==> (r = n)) ==> (r = n))
T c==> c= cPOWER f0 f1 f2 cPOWER f0 f3 f2 c==> c/\ cFINITE * * part corbit_map f0 f2 cIN f2 * * part corbit_map f0 f2 c==> c< f1 cCARD * * part corbit_map f0 f2 c==> c< f3 cCARD * * part corbit_map f0 f2 c==> c==> c/\ c< f3 cSUC cPRE cCARD * * part corbit_map f0 f2 c/\ c< f1 cSUC cPRE cCARD * * part corbit_map f0 f2 c= cPOWER f0 f3 f2 cPOWER f0 f1 f2 c= f3 f1 c= f3 f1
+ (((inj_orbit p) x) (PRE (CARD ((orbit_map p) x)))) |- (((((r < (SUC (PRE (CARD ((orbit_map p) x))))) /\ ((n < (SUC (PRE (CARD ((orbit_map p) x))))) /\ ((((POWER p) r) x) = (((POWER p) n) x)))) ==> (r = n)) ==> (r = n)) = (r = n))
T c==> cinj_orbit f0 f1 cPRE cCARD * * part corbit_map f0 f1 c= c==> c==> c/\ c< f2 cSUC cPRE cCARD * * part corbit_map f0 f1 c/\ c< f3 cSUC cPRE cCARD * * part corbit_map f0 f1 c= cPOWER f0 f2 f1 cPOWER f0 f3 f1 c= f2 f3 c= f2 f3 c= f2 f3
+ (FINITE s), ((((POWER p) n) x) = (((POWER p) m) x)), ((FINITE ((orbit_map p) x)) /\ (x IN ((orbit_map p) x))), (n < (CARD ((orbit_map p) x))), ((permutes p) s) |- (((!x. (((\r. ((m = ((q * (CARD ((orbit_map p) x))) + r)) /\ (r < (CARD ((orbit_map p) x))))) x) ==> (?q. (m = ((q * (CARD ((orbit_map p) x))) + n))))) ==> ((?r. ((m = ((q * (CARD ((orbit_map p) x))) + r)) /\ (r < (CARD ((orbit_map p) x))))) ==> (?q. (m = ((q * (CARD ((orbit_map p) x))) + n))))) = ((?r. ((m = ((q * (CARD ((orbit_map p) x))) + r)) /\ (r < (CARD ((orbit_map p) x))))) ==> (?q. (m = ((q * (CARD ((orbit_map p) x))) + n)))))
T c==> cFINITE f0 c==> c= cPOWER f1 f2 f3 cPOWER f1 f4 f3 c==> c/\ cFINITE * * part corbit_map f1 f3 cIN f3 * * part corbit_map f1 f3 c==> c< f2 cCARD * * part corbit_map f1 f3 c==> cpermutes f1 f0 c= c==> ! c==> * / c/\ c= f4 c+ c* f5 cCARD * * part corbit_map f1 f3 b1 c< b1 cCARD * * part corbit_map f1 f3 b0 c? / c= f4 c+ c* b1 cCARD * * part corbit_map f1 f3 f2 c==> c? / c/\ c= f4 c+ c* f5 cCARD * * part corbit_map f1 f3 b0 c< b0 cCARD * * part corbit_map f1 f3 c? / c= f4 c+ c* b0 cCARD * * part corbit_map f1 f3 f2 c==> c? / c/\ c= f4 c+ c* f5 cCARD * * part corbit_map f1 f3 b0 c< b0 cCARD * * part corbit_map f1 f3 c? / c= f4 c+ c* b0 cCARD * * part corbit_map f1 f3 f2
+ (m = ((q * (CARD ((orbit_map p) x))) + r)) |- ((?q. (m = ((q * (CARD ((orbit_map p) x))) + n))) = (?q'. (((q * (CARD ((orbit_map p) x))) + r) = ((q' * (CARD ((orbit_map p) x))) + n))))
T c==> c= f0 c+ c* f1 cCARD * * part corbit_map f2 f3 f4 c= c? / c= f0 c+ c* b0 cCARD * * part corbit_map f2 f3 f5 c? / c= c+ c* f1 cCARD * * part corbit_map f2 f3 f4 c+ c* b0 cCARD * * part corbit_map f2 f3 f5
+ ((\q. (?r. ((m = ((q * (CARD ((orbit_map p) x))) + r)) /\ (r < (CARD ((orbit_map p) x)))))) q) |- (?r. ((m = ((q * (CARD ((orbit_map p) x))) + r)) /\ (r < (CARD ((orbit_map p) x)))))
T c==> * / c? / c/\ c= f0 c+ c* b0 cCARD * * part corbit_map f1 f2 b1 c< b1 cCARD * * part corbit_map f1 f2 f3 c? / c/\ c= f0 c+ c* f3 cCARD * * part corbit_map f1 f2 b0 c< b0 cCARD * * part corbit_map f1 f2
+ (~ ((CARD ((orbit_map p) x)) = (NUMERAL _0))), (FINITE s), ((((POWER p) n) x) = (((POWER p) m) x)), ((FINITE ((orbit_map p) x)) /\ (x IN ((orbit_map p) x))), (n < (CARD ((orbit_map p) x))), ((permutes p) s) |- ((~ ((CARD ((orbit_map p) x)) = (NUMERAL _0))) /\ (?q. (m = ((q * (CARD ((orbit_map p) x))) + n))))
T c==> c~ c= cCARD * * part corbit_map f0 f1 cNUMERAL c_0 c==> cFINITE f2 c==> c= cPOWER f0 f3 f1 cPOWER f0 f4 f1 c==> c/\ cFINITE * * part corbit_map f0 f1 cIN f1 * * part corbit_map f0 f1 c==> c< f3 cCARD * * part corbit_map f0 f1 c==> cpermutes f0 f2 c/\ c~ c= cCARD * * part corbit_map f0 f1 cNUMERAL c_0 c? / c= f4 c+ c* b0 cCARD * * part corbit_map f0 f1 f3
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x)))))) |- (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x)))))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cFINITE * * part corbit_map b1 b2 ! ! c==> c/\ cFINITE f0 cpermutes b0 f0 cFINITE * * part corbit_map b0 b1
+ |- (((!x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x)))) ==> ((\x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x)))) x)) = ((\x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x)))) x))
T c= c==> ! c= cPOWER f0 c+ f1 f2 b0 cPOWER f0 f1 cPOWER f0 f2 b0 * / c= cPOWER f0 c+ f1 f2 b0 cPOWER f0 f1 cPOWER f0 f2 b0 f3 * / c= cPOWER f0 c+ f1 f2 b0 cPOWER f0 f1 cPOWER f0 f2 b0 f3
+ ((((POWER p) n) x) = (((POWER p) r) x)), ((FINITE ((orbit_map p) x)) /\ (x IN ((orbit_map p) x))), (n < (CARD ((orbit_map p) x))), (r < (CARD ((orbit_map p) x))) |- ((((SUC (PRE (CARD ((orbit_map p) x)))) <= (CARD ((orbit_map p) x))) ==> (((inj_orbit p) x) (PRE (CARD ((orbit_map p) x))))) ==> (r = n))
T c==> c= cPOWER f0 f1 f2 cPOWER f0 f3 f2 c==> c/\ cFINITE * * part corbit_map f0 f2 cIN f2 * * part corbit_map f0 f2 c==> c< f1 cCARD * * part corbit_map f0 f2 c==> c< f3 cCARD * * part corbit_map f0 f2 c==> c==> c<= cSUC cPRE cCARD * * part corbit_map f0 f2 cCARD * * part corbit_map f0 f2 cinj_orbit f0 f2 cPRE cCARD * * part corbit_map f0 f2 c= f3 f1
+ (FINITE s), ((((POWER p) n) x) = (((POWER p) m) x)), ((FINITE ((orbit_map p) x)) /\ (x IN ((orbit_map p) x))), (n < (CARD ((orbit_map p) x))), ((permutes p) s) |- ((((\r. ((m = ((q * (CARD ((orbit_map p) x))) + r)) /\ (r < (CARD ((orbit_map p) x))))) r) ==> (?q. (m = ((q * (CARD ((orbit_map p) x))) + n)))) = T)
T c==> cFINITE f0 c==> c= cPOWER f1 f2 f3 cPOWER f1 f4 f3 c==> c/\ cFINITE * * part corbit_map f1 f3 cIN f3 * * part corbit_map f1 f3 c==> c< f2 cCARD * * part corbit_map f1 f3 c==> cpermutes f1 f0 c= c==> * / c/\ c= f4 c+ c* f5 cCARD * * part corbit_map f1 f3 b0 c< b0 cCARD * * part corbit_map f1 f3 f6 c? / c= f4 c+ c* b0 cCARD * * part corbit_map f1 f3 f2 cT
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> ((((POWER p) (CARD ((orbit_map p) x))) x) = x))))) |- (((!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> ((((POWER p) (CARD ((orbit_map p) x))) x) = x)))) ==> ((\p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> ((((POWER p) (CARD ((orbit_map p) x))) x) = x)))) p)) = ((\p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> ((((POWER p) (CARD ((orbit_map p) x))) x) = x)))) p))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c= cPOWER b1 cCARD * * part corbit_map b1 b2 b2 b2 c= c==> ! ! c==> c/\ cFINITE f0 cpermutes b0 f0 c= cPOWER b0 cCARD * * part corbit_map b0 b1 b1 b1 * / ! c==> c/\ cFINITE f0 cpermutes b0 f0 c= cPOWER b0 cCARD * * part corbit_map b0 b1 b1 b1 f1 * / ! c==> c/\ cFINITE f0 cpermutes b0 f0 c= cPOWER b0 cCARD * * part corbit_map b0 b1 b1 b1 f1
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (!m. ((m < (CARD ((orbit_map p) x))) ==> (((inj_orbit p) x) m))))))) |- ((\p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (!m. ((m < (CARD ((orbit_map p) x))) ==> (((inj_orbit p) x) m)))))) p)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 ! c==> c< b3 cCARD * * part corbit_map b1 b2 cinj_orbit b1 b2 b3 * / ! c==> c/\ cFINITE f0 cpermutes b0 f0 ! c==> c< b2 cCARD * * part corbit_map b0 b1 cinj_orbit b0 b1 b2 f1
+ |- ((\n. ((m <= n) = (m < (SUC n)))) n)
T * / c= c<= f0 b0 c< f0 cSUC b0 f1
+ |- (((!s. (!p. (((FINITE s) /\ ((permutes p) s)) ==> (!x. (FINITE ((orbit_map p) x)))))) ==> ((\s. (!p. (((FINITE s) /\ ((permutes p) s)) ==> (!x. (FINITE ((orbit_map p) x)))))) s)) = ((\s. (!p. (((FINITE s) /\ ((permutes p) s)) ==> (!x. (FINITE ((orbit_map p) x)))))) s))
T c= c==> ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 ! cFINITE * * part corbit_map b1 b2 * / ! c==> c/\ cFINITE b0 cpermutes b1 b0 ! cFINITE * * part corbit_map b1 b2 f0 * / ! c==> c/\ cFINITE b0 cpermutes b1 b0 ! cFINITE * * part corbit_map b1 b2 f0
+ |- (((!x. (x IN ((orbit_map p) x))) ==> ((\x. (x IN ((orbit_map p) x))) x)) = ((\x. (x IN ((orbit_map p) x))) x))
T c= c==> ! cIN b0 * * part corbit_map f0 b0 * / cIN b0 * * part corbit_map f0 b0 f1 * / cIN b0 * * part corbit_map f0 b0 f1
+ (FINITE s), ((permutes p) s) |- ((FINITE s) /\ ((permutes p) s))
T c==> cFINITE f0 c==> cpermutes f1 f0 c/\ cFINITE f0 cpermutes f1 f0
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x)))))), ((FINITE s) /\ ((permutes p) s)) |- (((FINITE s) /\ ((permutes p) s)) /\ (!x. (FINITE ((orbit_map p) x))))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cFINITE * * part corbit_map b1 b2 c==> c/\ cFINITE f0 cpermutes f1 f0 c/\ c/\ cFINITE f0 cpermutes f1 f0 ! cFINITE * * part corbit_map f1 b0
+ |- (((!n. ((m + n) = (n + m))) ==> ((\n. ((m + n) = (n + m))) n)) = ((\n. ((m + n) = (n + m))) n))
T c= c==> ! c= c+ f0 b0 c+ b0 f0 * / c= c+ f0 b0 c+ b0 f0 f1 * / c= c+ f0 b0 c+ b0 f0 f1
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- |- ((!j. t) = t)
T c= ! f0 f0
- |- (((!x. (!y. ((x = y) ==> (y = x)))) ==> ((\x. (!y. ((x = y) ==> (y = x)))) x)) = ((\x. (!y. ((x = y) ==> (y = x)))) x))
T c= c==> ! ! c==> c= b0 b1 c= b1 b0 * / ! c==> c= b0 b1 c= b1 b0 f0 * / ! c==> c= b0 b1 c= b1 b0 f0
- |- ((?q. t) = t)
T c= c? / f0 f0
- |- (((!y. ((x = y) ==> (y = x))) ==> ((\y. ((x = y) ==> (y = x))) y)) = ((\y. ((x = y) ==> (y = x))) y))
T c= c==> ! c==> c= f0 b0 c= b0 f0 * / c==> c= f0 b0 c= b0 f0 f1 * / c==> c= f0 b0 c= b0 f0 f1
- (m = ((q * (CARD ((orbit_map p) x))) + r)) |- (((permutes p) s) = ((permutes p) s))
T c==> c= f0 c+ c* f1 cCARD * * part corbit_map f2 f3 f4 c= cpermutes f2 f5 cpermutes f2 f5
- |- ((x = y) ==> (y = x))
T c==> c= f0 f1 c= f1 f0
- (m = ((q * (CARD ((orbit_map p) x))) + r)) |- ((FINITE s) = (FINITE s))
T c==> c= f0 c+ c* f1 cCARD * * part corbit_map f2 f3 f4 c= cFINITE f5 cFINITE f5
- (?q. (?r. ((m = ((q * (CARD ((orbit_map p) x))) + r)) /\ (r < (CARD ((orbit_map p) x)))))), (FINITE s), ((((POWER p) n) x) = (((POWER p) m) x)), ((FINITE ((orbit_map p) x)) /\ (x IN ((orbit_map p) x))), (n < (CARD ((orbit_map p) x))), ((permutes p) s) |- ((?q. (?r. ((m = ((q * (CARD ((orbit_map p) x))) + r)) /\ (r < (CARD ((orbit_map p) x)))))) /\ (?q. (m = ((q * (CARD ((orbit_map p) x))) + n))))
T c==> c? / c? / c/\ c= f0 c+ c* b0 cCARD * * part corbit_map f1 f2 b1 c< b1 cCARD * * part corbit_map f1 f2 c==> cFINITE f3 c==> c= cPOWER f1 f4 f2 cPOWER f1 f0 f2 c==> c/\ cFINITE * * part corbit_map f1 f2 cIN f2 * * part corbit_map f1 f2 c==> c< f4 cCARD * * part corbit_map f1 f2 c==> cpermutes f1 f3 c/\ c? / c? / c/\ c= f0 c+ c* b0 cCARD * * part corbit_map f1 f2 b1 c< b1 cCARD * * part corbit_map f1 f2 c? / c= f0 c+ c* b0 cCARD * * part corbit_map f1 f2 f4
- |- ((\x. (!y. ((x = y) ==> (y = x)))) x)
T * / ! c==> c= b0 b1 c= b1 b0 f0
- (?q. (?r. ((m = ((q * (CARD ((orbit_map p) x))) + r)) /\ (r < (CARD ((orbit_map p) x)))))), (FINITE s), ((((POWER p) n) x) = (((POWER p) m) x)), ((FINITE ((orbit_map p) x)) /\ (x IN ((orbit_map p) x))), (n < (CARD ((orbit_map p) x))), ((permutes p) s) |- (?q. (m = ((q * (CARD ((orbit_map p) x))) + n)))
T c==> c? / c? / c/\ c= f0 c+ c* b0 cCARD * * part corbit_map f1 f2 b1 c< b1 cCARD * * part corbit_map f1 f2 c==> cFINITE f3 c==> c= cPOWER f1 f4 f2 cPOWER f1 f0 f2 c==> c/\ cFINITE * * part corbit_map f1 f2 cIN f2 * * part corbit_map f1 f2 c==> c< f4 cCARD * * part corbit_map f1 f2 c==> cpermutes f1 f3 c? / c= f0 c+ c* b0 cCARD * * part corbit_map f1 f2 f4
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((\y. ((x = y) ==> (y = x))) y)
T * / c==> c= f0 b0 c= b0 f0 f1
- (m = ((q * (CARD ((orbit_map p) x))) + r)) |- (((NUMERAL (BIT1 _0)) <= (CARD ((orbit_map p) x))) = ((NUMERAL (BIT1 _0)) <= (CARD ((orbit_map p) x))))
T c==> c= f0 c+ c* f1 cCARD * * part corbit_map f2 f3 f4 c= c<= cNUMERAL cBIT1 c_0 cCARD * * part corbit_map f2 f3 c<= cNUMERAL cBIT1 c_0 cCARD * * part corbit_map f2 f3
- (?r. ((m = ((q * (CARD ((orbit_map p) x))) + r)) /\ (r < (CARD ((orbit_map p) x))))), (FINITE s), ((((POWER p) n) x) = (((POWER p) m) x)), ((FINITE ((orbit_map p) x)) /\ (x IN ((orbit_map p) x))), (n < (CARD ((orbit_map p) x))), ((permutes p) s) |- (?q. (m = ((q * (CARD ((orbit_map p) x))) + n)))
T c==> c? / c/\ c= f0 c+ c* f1 cCARD * * part corbit_map f2 f3 b0 c< b0 cCARD * * part corbit_map f2 f3 c==> cFINITE f4 c==> c= cPOWER f2 f5 f3 cPOWER f2 f0 f3 c==> c/\ cFINITE * * part corbit_map f2 f3 cIN f3 * * part corbit_map f2 f3 c==> c< f5 cCARD * * part corbit_map f2 f3 c==> cpermutes f2 f4 c? / c= f0 c+ c* b0 cCARD * * part corbit_map f2 f3 f5
- (m = ((q * (CARD ((orbit_map p) x))) + r)) |- ((n < (CARD ((orbit_map p) x))) = (n < (CARD ((orbit_map p) x))))
T c==> c= f0 c+ c* f1 cCARD * * part corbit_map f2 f3 f4 c= c< f5 cCARD * * part corbit_map f2 f3 c< f5 cCARD * * part corbit_map f2 f3
- |- (((x = y) ==> (y = x)) = T)
T c= c==> c= f0 f1 c= f1 f0 cT
- (?r. ((m = ((q * (CARD ((orbit_map p) x))) + r)) /\ (r < (CARD ((orbit_map p) x))))), (FINITE s), ((((POWER p) n) x) = (((POWER p) m) x)), ((FINITE ((orbit_map p) x)) /\ (x IN ((orbit_map p) x))), (n < (CARD ((orbit_map p) x))), ((permutes p) s) |- ((?r. ((m = ((q * (CARD ((orbit_map p) x))) + r)) /\ (r < (CARD ((orbit_map p) x))))) /\ (?q. (m = ((q * (CARD ((orbit_map p) x))) + n))))
T c==> c? / c/\ c= f0 c+ c* f1 cCARD * * part corbit_map f2 f3 b0 c< b0 cCARD * * part corbit_map f2 f3 c==> cFINITE f4 c==> c= cPOWER f2 f5 f3 cPOWER f2 f0 f3 c==> c/\ cFINITE * * part corbit_map f2 f3 cIN f3 * * part corbit_map f2 f3 c==> c< f5 cCARD * * part corbit_map f2 f3 c==> cpermutes f2 f4 c/\ c? / c/\ c= f0 c+ c* f1 cCARD * * part corbit_map f2 f3 b0 c< b0 cCARD * * part corbit_map f2 f3 c? / c= f0 c+ c* b0 cCARD * * part corbit_map f2 f3 f5
- (m = ((q * (CARD ((orbit_map p) x))) + r)) |- (((FINITE s) /\ ((permutes p) s)) = ((FINITE s) /\ ((permutes p) s)))
T c==> c= f0 c+ c* f1 cCARD * * part corbit_map f2 f3 f4 c= c/\ cFINITE f5 cpermutes f2 f5 c/\ cFINITE f5 cpermutes f2 f5
