N Aq1.node_betwn_not_in_rtrans
C |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ ((MEM d) (flatten ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) y) z))))))))))) ==> (~ ((MEM d) r)))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'y f0 f2 f3 f4 c/\ c= cl'z f0 f1 f2 f3 f5 c/\ c= cfind_face f0 f3 f6 cMEM f7 cflatten cmap / cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0 cbetwn f6 f4 f5 c~ cMEM f7 f2
D TRUTH
A |- T
T cT
D I_DEF
A |- (I = (\x. x))
T c= part cI / b0
D FST
A |- (!x. (!y. ((FST (x , y)) = x)))
T c= cFST c, f0 f1 f0
D SND
A |- (!x. (!y. ((SND (x , y)) = y)))
T c= cSND c, f0 f1 f1
D Fan.POWER_0
A |- (!f. (((POWER f) (NUMERAL _0)) = I))
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
D Seq.mapP
A |- (!f. (!s. (!y. (((MEM y) ((map f) s)) = (?x. (((MEM x) s) /\ (y = (f x))))))))
T c= cMEM f0 cmap f1 f2 c? / c/\ cMEM b0 f2 c= f0 * f1 b0
D Seq2.mem_flatten
A |- (!x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))))
T c= cMEM f0 cflatten f1 c? / c/\ cMEM b0 f1 cMEM f0 b0
D Tame_defs2.ntrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))))))
T c= cntrans f0 f1 f2 f3 f4 cFST cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2
D Tame_defs2.rtrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))))
T c= crtrans f0 f1 f2 f3 f4 cSND cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2
D Tame_defs2.ytrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))))))
T c= cytrans f0 f1 f2 f3 f4 cl'y f0 crtrans f0 f1 f2 f3 f4 f3
D Tame_defs2.ztrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))
T c= cztrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3
D Aq1.FST_EQ_UPT_FLATTEN
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) (((betwn f) y) z)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ ((MEM d1) ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))))))))))) ==> ((FST d) = (FST d1)))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ cMEM f4 cbetwn f5 f6 f7 c/\ c= cl'y f0 f2 f3 f6 c/\ c= cl'z f0 f1 f2 f3 f7 c/\ c= cfind_face f0 f3 f5 cMEM f8 cmap / cPOWER * part cn_list f0 b0 f4 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f4 cflatten f0 c= cFST f4 cFST f8
D Aq1.betwn_not_in_fst_rtrans
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) (((betwn f) (((((ytrans L) N) r) x) (NUMERAL _0))) (((((ztrans L) N) r) x) (NUMERAL _0)))) /\ (((find_face L) x) = f)))))) ==> (~ ((MEM (FST d)) ((map FST) r))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ cMEM f4 cbetwn f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 cztrans f0 f1 f2 f3 cNUMERAL c_0 c= cfind_face f0 f3 f5 c~ cMEM cFST f4 cmap part cFST f2
+ ((FST d1) = (FST d)), ((MEM d) r) |- (((MEM d) r) /\ ((FST d1) = (FST d)))
T c==> c= cFST f0 cFST f1 c==> cMEM f1 f2 c/\ cMEM f1 f2 c= cFST f0 cFST f1
+ (~ ((MEM (FST d1)) ((map FST) r))), ((MEM d) r) |- (((FST d1) = (FST d)) ==> F)
T c==> c~ cMEM cFST f0 cmap part cFST f1 c==> cMEM f2 f1 c==> c= cFST f0 cFST f2 cF
- |- ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)
T * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
+ |- (((!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) ==> ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i)) = ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i))
T c= c==> ! c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4 * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4
- |- ((\f. (!d. (!d1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) (((betwn f) y) z)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ ((MEM d1) ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))))))))))) ==> ((FST d) = (FST d1)))))))))) f)
T * / ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c~ cfinal_list b3 b5 c/\ cMEM b1 cbetwn b0 f0 f1 c/\ c= cl'y b3 b5 b6 f0 c/\ c= cl'z b3 b4 b5 b6 f1 c/\ c= cfind_face b3 b6 b0 cMEM b2 cmap / cPOWER * part cn_list b3 b7 b1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b7 cFST b1 cflatten b3 c= cFST b1 cFST b2 f2
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (x' = d1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (l = ((map (\i. (((POWER (n_list L)) i) x'))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x')))) (flatten L)))))), (((find_face L) x) = f), ((MEM d) l), ((MEM d) r), ((MEM x') (((betwn f) y) z)), ((((marked_list L) N) r) x) |- (((MEM d) r) /\ F)
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f7 c==> c= f8 cmap / cPOWER * part cn_list f0 b0 f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f2 cflatten f0 c==> c= cfind_face f0 f4 f9 c==> cMEM f10 f8 c==> cMEM f10 f1 c==> cMEM f2 cbetwn f9 f5 f7 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f10 f1 cF
+ |- ((\d. (!d1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) (((betwn f) y) z)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ ((MEM d1) ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))))))))))) ==> ((FST d) = (FST d1))))))))) d1)
T * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ cMEM b0 cbetwn f0 f1 f2 c/\ c= cl'y b2 b4 b5 f1 c/\ c= cl'z b2 b3 b4 b5 f2 c/\ c= cfind_face b2 b5 f0 cMEM b1 cmap / cPOWER * part cn_list b2 b6 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b6 cFST b0 cflatten b2 c= cFST b0 cFST b1 f3
+ |- ((\L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))) L)
T * / c= cMEM f0 cflatten b0 c? / c/\ cMEM b1 b0 cMEM f0 b1 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x), ((\l. ((?x. (((MEM x) (((betwn f) y) z)) /\ (l = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))) /\ ((MEM d) l))) l) |- (((\l. ((?x. (((MEM x) (((betwn f) y) z)) /\ (l = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))) /\ ((MEM d) l))) l) /\ (~ ((MEM d) r)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cfind_face f0 f2 f6 c==> cmarked_list f0 f4 f1 f2 c==> * / c/\ c? / c/\ cMEM b1 cbetwn f6 f3 f5 c= b0 cmap / cPOWER * part cn_list f0 b2 b1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b2 cFST b1 cflatten f0 cMEM f7 b0 f8 c/\ * / c/\ c? / c/\ cMEM b1 cbetwn f6 f3 f5 c= b0 cmap / cPOWER * part cn_list f0 b2 b1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b2 cFST b1 cflatten f0 cMEM f7 b0 f8 c~ cMEM f7 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((\l. ((?x. (((MEM x) (((betwn f) y) z)) /\ (l = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))) /\ ((MEM d) l))) l) ==> (~ ((MEM d) r))) = T)
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cfind_face f0 f2 f6 c==> cmarked_list f0 f4 f1 f2 c= c==> * / c/\ c? / c/\ cMEM b1 cbetwn f6 f3 f5 c= b0 cmap / cPOWER * part cn_list f0 b2 b1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b2 cFST b1 cflatten f0 cMEM f7 b0 f8 c~ cMEM f7 f1 cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((\l. ((?x. (((MEM x) (((betwn f) y) z)) /\ (l = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))) /\ ((MEM d) l))) l) ==> (~ ((MEM d) r)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cfind_face f0 f2 f6 c==> cmarked_list f0 f4 f1 f2 c==> * / c/\ c? / c/\ cMEM b1 cbetwn f6 f3 f5 c= b0 cmap / cPOWER * part cn_list f0 b2 b1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b2 cFST b1 cflatten f0 cMEM f7 b0 f8 c~ cMEM f7 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (x' = d1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (l = ((map (\i. (((POWER (n_list L)) i) x'))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x')))) (flatten L)))))), (((find_face L) x) = f), ((MEM d) l), ((MEM d) r), ((MEM x') (((betwn f) y) z)), ((((marked_list L) N) r) x) |- ((x' = d1) /\ F)
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f7 c==> c= f8 cmap / cPOWER * part cn_list f0 b0 f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f2 cflatten f0 c==> c= cfind_face f0 f4 f9 c==> cMEM f10 f8 c==> cMEM f10 f1 c==> cMEM f2 cbetwn f9 f5 f7 c==> cmarked_list f0 f6 f1 f4 c/\ c= f2 f3 cF
+ |- ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d1) (((betwn f) (((((ytrans L) N) r) x) (NUMERAL _0))) (((((ztrans L) N) r) x) (NUMERAL _0)))) /\ (((find_face L) x) = f)))))) ==> (~ ((MEM (FST d1)) ((map FST) r))))))) N)
T * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ cMEM f1 cbetwn f2 cytrans f0 b0 b1 b2 cNUMERAL c_0 cztrans f0 b0 b1 b2 cNUMERAL c_0 c= cfind_face f0 b2 f2 c~ cMEM cFST f1 cmap part cFST b1 f3
+ (good_list L), (good_list_nodes L), (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ (?l. ((?x. (((MEM x) (((betwn f) y) z)) /\ (l = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))) /\ ((MEM d) l)))))))), ((((marked_list L) N) r) x) |- (~ ((MEM d) r))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'y f0 f2 f3 f4 c/\ c= cl'z f0 f1 f2 f3 f5 c/\ c= cfind_face f0 f3 f6 c? / c/\ c? / c/\ cMEM b1 cbetwn f6 f4 f5 c= b0 cmap / cPOWER * part cn_list f0 b2 b1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b2 cFST b1 cflatten f0 cMEM f7 b0 c==> cmarked_list f0 f1 f2 f3 c~ cMEM f7 f2
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
- |- (((!y. (!z. (!f. (!d. (!d1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) (((betwn f) y) z)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ ((MEM d1) ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))))))))))) ==> ((FST d) = (FST d1)))))))))))) ==> ((\y. (!z. (!f. (!d. (!d1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) (((betwn f) y) z)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ ((MEM d1) ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))))))))))) ==> ((FST d) = (FST d1)))))))))))) y)) = ((\y. (!z. (!f. (!d. (!d1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) (((betwn f) y) z)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ ((MEM d1) ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))))))))))) ==> ((FST d) = (FST d1)))))))))))) y))
T c= c==> ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ cMEM b3 cbetwn b2 b0 b1 c/\ c= cl'y b5 b7 b8 b0 c/\ c= cl'z b5 b6 b7 b8 b1 c/\ c= cfind_face b5 b8 b2 cMEM b4 cmap / cPOWER * part cn_list b5 b9 b3 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b9 cFST b3 cflatten b5 c= cFST b3 cFST b4 * / ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ cMEM b3 cbetwn b2 b0 b1 c/\ c= cl'y b5 b7 b8 b0 c/\ c= cl'z b5 b6 b7 b8 b1 c/\ c= cfind_face b5 b8 b2 cMEM b4 cmap / cPOWER * part cn_list b5 b9 b3 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b9 cFST b3 cflatten b5 c= cFST b3 cFST b4 f0 * / ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ cMEM b3 cbetwn b2 b0 b1 c/\ c= cl'y b5 b7 b8 b0 c/\ c= cl'z b5 b6 b7 b8 b1 c/\ c= cfind_face b5 b8 b2 cMEM b4 cmap / cPOWER * part cn_list b5 b9 b3 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b9 cFST b3 cflatten b5 c= cFST b3 cFST b4 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ (?l. ((?x. (((MEM x) (((betwn f) y) z)) /\ (l = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))) /\ ((MEM d) l))))), ((((marked_list L) N) r) x) |- (~ ((MEM d) r))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c/\ c= cl'z f0 f4 f1 f2 f5 c/\ c= cfind_face f0 f2 f6 c? / c/\ c? / c/\ cMEM b1 cbetwn f6 f3 f5 c= b0 cmap / cPOWER * part cn_list f0 b2 b1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b2 cFST b1 cflatten f0 cMEM f7 b0 c==> cmarked_list f0 f4 f1 f2 c~ cMEM f7 f1
+ |- (((!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) ==> ((\r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) r)) = ((\r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) r))
T c= c==> ! ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 * / ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2 * / ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2
+ |- ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x)
T * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3
+ |- ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N)
T * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM d) l), ((((marked_list L) N) r) x), ((\x. (((MEM x) (((betwn f) y) z)) /\ (l = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))) x') |- (((\x. (((MEM x) (((betwn f) y) z)) /\ (l = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))) x') /\ (~ ((MEM d) r)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cfind_face f0 f2 f6 c==> cMEM f7 f8 c==> cmarked_list f0 f4 f1 f2 c==> * / c/\ cMEM b0 cbetwn f6 f3 f5 c= f8 cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0 f9 c/\ * / c/\ cMEM b0 cbetwn f6 f3 f5 c= f8 cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0 f9 c~ cMEM f7 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((FST d1) = (FST d)), (x' = d1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM d) r), ((MEM x') (((betwn f) y) z)), ((((marked_list L) N) r) x) |- F
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cFST f2 cFST f3 c==> c= f4 f2 c==> c= cl'y f0 f1 f5 f6 c==> c= cl'z f0 f7 f1 f5 f8 c==> c= cfind_face f0 f5 f9 c==> cMEM f3 f1 c==> cMEM f4 cbetwn f9 f6 f8 c==> cmarked_list f0 f7 f1 f5 cF
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ (?l. ((?x. (((MEM x) (((betwn f) y) z)) /\ (l = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))) /\ ((MEM d) l))))), ((((marked_list L) N) r) x) |- (~ ((MEM d) r))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c/\ c= cl'z f0 f4 f1 f2 f5 c/\ c= cfind_face f0 f2 f6 c? / c/\ c? / c/\ cMEM b1 cbetwn f6 f3 f5 c= b0 cmap / cPOWER * part cn_list f0 b2 b1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b2 cFST b1 cflatten f0 cMEM f7 b0 c==> cmarked_list f0 f4 f1 f2 c~ cMEM f7 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (x' = d1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM d) r), ((MEM d) ((map (\i. (((POWER (n_list L)) i) d1))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d1)))) (flatten L)))))), ((MEM x') (((betwn f) y) z)), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d1) (((betwn f) y) z)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ ((MEM d) ((map (\i. (((POWER (n_list L)) i) d1))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d1)))) (flatten L)))))))))))))) ==> ((FST d1) = (FST d))) ==> F)
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f7 c==> c= cfind_face f0 f4 f8 c==> cMEM f9 f1 c==> cMEM f9 cmap / cPOWER * part cn_list f0 b0 f3 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f3 cflatten f0 c==> cMEM f2 cbetwn f8 f5 f7 c==> cmarked_list f0 f6 f1 f4 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f6 f1 f4 c/\ c~ cfinal_list f0 f1 c/\ cMEM f3 cbetwn f8 f5 f7 c/\ c= cl'y f0 f1 f4 f5 c/\ c= cl'z f0 f6 f1 f4 f7 c/\ c= cfind_face f0 f4 f8 cMEM f9 cmap / cPOWER * part cn_list f0 b0 f3 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f3 cflatten f0 c= cFST f3 cFST f9 cF
- |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ (?l. ((?x. (((MEM x) (((betwn f) y) z)) /\ (l = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))) /\ ((MEM d) l)))))))))) ==> (~ ((MEM d) r))) = T)
T c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'y f0 f2 f3 f4 c/\ c= cl'z f0 f1 f2 f3 f5 c/\ c= cfind_face f0 f3 f6 c? / c/\ c? / c/\ cMEM b1 cbetwn f6 f4 f5 c= b0 cmap / cPOWER * part cn_list f0 b2 b1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b2 cFST b1 cflatten f0 cMEM f7 b0 c~ cMEM f7 f2 cT
- |- (((!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) ==> ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)) = ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f))
T c= c==> ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
- |- (((!f. (!d. (!d1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) (((betwn f) y) z)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ ((MEM d1) ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))))))))))) ==> ((FST d) = (FST d1)))))))))) ==> ((\f. (!d. (!d1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) (((betwn f) y) z)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ ((MEM d1) ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))))))))))) ==> ((FST d) = (FST d1)))))))))) f)) = ((\f. (!d. (!d1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) (((betwn f) y) z)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ ((MEM d1) ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))))))))))) ==> ((FST d) = (FST d1)))))))))) f))
T c= c==> ! ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c~ cfinal_list b3 b5 c/\ cMEM b1 cbetwn b0 f0 f1 c/\ c= cl'y b3 b5 b6 f0 c/\ c= cl'z b3 b4 b5 b6 f1 c/\ c= cfind_face b3 b6 b0 cMEM b2 cmap / cPOWER * part cn_list b3 b7 b1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b7 cFST b1 cflatten b3 c= cFST b1 cFST b2 * / ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c~ cfinal_list b3 b5 c/\ cMEM b1 cbetwn b0 f0 f1 c/\ c= cl'y b3 b5 b6 f0 c/\ c= cl'z b3 b4 b5 b6 f1 c/\ c= cfind_face b3 b6 b0 cMEM b2 cmap / cPOWER * part cn_list b3 b7 b1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b7 cFST b1 cflatten b3 c= cFST b1 cFST b2 f2 * / ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c~ cfinal_list b3 b5 c/\ cMEM b1 cbetwn b0 f0 f1 c/\ c= cl'y b3 b5 b6 f0 c/\ c= cl'z b3 b4 b5 b6 f1 c/\ c= cfind_face b3 b6 b0 cMEM b2 cmap / cPOWER * part cn_list b3 b7 b1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b7 cFST b1 cflatten b3 c= cFST b1 cFST b2 f2
+ ((\d1. (x' = d1)) d1) |- (((x' = d1) ==> F) = F)
T c==> * / c= f0 b0 f1 c= c==> c= f0 f1 cF cF
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (l = ((map (\i. (((POWER (n_list L)) i) x'))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x')))) (flatten L)))))), (((find_face L) x) = f), ((MEM d) l), ((MEM d) r), ((MEM x') (((betwn f) y) z)), ((((marked_list L) N) r) x) |- ((x' = d1) ==> F)
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= f6 cmap / cPOWER * part cn_list f0 b0 f7 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f7 cflatten f0 c==> c= cfind_face f0 f2 f8 c==> cMEM f9 f6 c==> cMEM f9 f1 c==> cMEM f7 cbetwn f8 f3 f5 c==> cmarked_list f0 f4 f1 f2 c==> c= f7 f10 cF
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (l = ((map (\i. (((POWER (n_list L)) i) x'))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x')))) (flatten L)))))), (((find_face L) x) = f), ((MEM d) l), ((MEM x') (((betwn f) y) z)), ((((marked_list L) N) r) x) |- (~ ((MEM d) r))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= f6 cmap / cPOWER * part cn_list f0 b0 f7 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f7 cflatten f0 c==> c= cfind_face f0 f2 f8 c==> cMEM f9 f6 c==> cMEM f7 cbetwn f8 f3 f5 c==> cmarked_list f0 f4 f1 f2 c~ cMEM f9 f1
- |- ((!x. t) = t)
T c= ! f0 f0
+ |- ((\x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))) x)
T * / ! c= crtrans f0 f1 f2 b0 b1 cSND cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
- |- ((!z. (!f. (!d. (!d1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) (((betwn f) y) z)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ ((MEM d1) ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))))))))))) ==> ((FST d) = (FST d1))))))))))) = T)
T c= ! ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ cMEM b2 cbetwn b1 f0 b0 c/\ c= cl'y b4 b6 b7 f0 c/\ c= cl'z b4 b5 b6 b7 b0 c/\ c= cfind_face b4 b7 b1 cMEM b3 cmap / cPOWER * part cn_list b4 b8 b2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b8 cFST b2 cflatten b4 c= cFST b2 cFST b3 cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (x' = d1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (l = ((map (\i. (((POWER (n_list L)) i) x'))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x')))) (flatten L)))))), (((find_face L) x) = f), ((MEM d) r), ((MEM x') (((betwn f) y) z)), ((((marked_list L) N) r) x) |- (((MEM d) l) ==> F)
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f7 c==> c= f8 cmap / cPOWER * part cn_list f0 b0 f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f2 cflatten f0 c==> c= cfind_face f0 f4 f9 c==> cMEM f10 f1 c==> cMEM f2 cbetwn f9 f5 f7 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f10 f8 cF
+ |- (((!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) ==> ((\N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) N)) = ((\N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) N))
T c= c==> ! ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 * / ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1 * / ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1
- |- (!d1. (((\d1. (x' = d1)) d1) ==> (?d1. (x' = d1))))
T c==> * / c= f0 b0 f1 c? / c= f0 b0
+ |- ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L)
T * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (x' = d1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM d) r), ((MEM x') (((betwn f) y) z)), ((((marked_list L) N) r) x) |- (~ ((MEM d) ((map (\i. (((POWER (n_list L)) i) d1))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d1)))) (flatten L)))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f7 c==> c= cfind_face f0 f4 f8 c==> cMEM f9 f1 c==> cMEM f2 cbetwn f8 f5 f7 c==> cmarked_list f0 f6 f1 f4 c~ cMEM f9 cmap / cPOWER * part cn_list f0 b0 f3 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f3 cflatten f0
+ |- ((\d1. (x' = d1)) x')
T * / c= f0 b0 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (x' = d1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM d) r), ((MEM x') (((betwn f) y) z)), ((((marked_list L) N) r) x) |- (((FST d1) = (FST d)) ==> F)
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f7 c==> c= cfind_face f0 f4 f8 c==> cMEM f9 f1 c==> cMEM f2 cbetwn f8 f5 f7 c==> cmarked_list f0 f6 f1 f4 c==> c= cFST f3 cFST f9 cF
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- (((!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) ==> ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i)) = ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i))
T c= c==> ! c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((!x. (((\l. ((?x. (((MEM x) (((betwn f) y) z)) /\ (l = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))) /\ ((MEM d) l))) x) ==> (~ ((MEM d) r)))) ==> ((?l. ((?x. (((MEM x) (((betwn f) y) z)) /\ (l = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))) /\ ((MEM d) l))) ==> (~ ((MEM d) r)))) = ((?l. ((?x. (((MEM x) (((betwn f) y) z)) /\ (l = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))) /\ ((MEM d) l))) ==> (~ ((MEM d) r))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cfind_face f0 f2 f6 c==> cmarked_list f0 f4 f1 f2 c= c==> ! c==> * / c/\ c? / c/\ cMEM b2 cbetwn f6 f3 f5 c= b1 cmap / cPOWER * part cn_list f0 b3 b2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b3 cFST b2 cflatten f0 cMEM f7 b1 b0 c~ cMEM f7 f1 c==> c? / c/\ c? / c/\ cMEM b1 cbetwn f6 f3 f5 c= b0 cmap / cPOWER * part cn_list f0 b2 b1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b2 cFST b1 cflatten f0 cMEM f7 b0 c~ cMEM f7 f1 c==> c? / c/\ c? / c/\ cMEM b1 cbetwn f6 f3 f5 c= b0 cmap / cPOWER * part cn_list f0 b2 b1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b2 cFST b1 cflatten f0 cMEM f7 b0 c~ cMEM f7 f1
+ (?x. (((MEM x) (((betwn f) y) z)) /\ (l = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM d) l), ((((marked_list L) N) r) x) |- (~ ((MEM d) r))
T c==> c? / c/\ cMEM b0 cbetwn f0 f1 f2 c= f3 cmap / cPOWER * part cn_list f4 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f4 c==> c~ cfinal_list f4 f5 c==> cgood_list f4 c==> cgood_list_nodes f4 c==> c= cl'y f4 f5 f6 f1 c==> c= cl'z f4 f7 f5 f6 f2 c==> c= cfind_face f4 f6 f0 c==> cMEM f8 f3 c==> cmarked_list f4 f7 f5 f6 c~ cMEM f8 f5
+ (good_list L), ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ (?l. ((?x. (((MEM x) (((betwn f) y) z)) /\ (l = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))) /\ ((MEM d) l))))))))) |- (~ ((MEM d) r))
T c==> cgood_list f0 c==> c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'y f0 f2 f3 f4 c/\ c= cl'z f0 f1 f2 f3 f5 c/\ c= cfind_face f0 f3 f6 c? / c/\ c? / c/\ cMEM b1 cbetwn f6 f4 f5 c= b0 cmap / cPOWER * part cn_list f0 b2 b1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b2 cFST b1 cflatten f0 cMEM f7 b0 c~ cMEM f7 f2
+ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ (?l. ((?x. (((MEM x) (((betwn f) y) z)) /\ (l = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))) /\ ((MEM d) l)))))))))) |- (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ (?l. ((?x. (((MEM x) (((betwn f) y) z)) /\ (l = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))) /\ ((MEM d) l)))))))))) /\ (~ ((MEM d) r)))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'y f0 f2 f3 f4 c/\ c= cl'z f0 f1 f2 f3 f5 c/\ c= cfind_face f0 f3 f6 c? / c/\ c? / c/\ cMEM b1 cbetwn f6 f4 f5 c= b0 cmap / cPOWER * part cn_list f0 b2 b1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b2 cFST b1 cflatten f0 cMEM f7 b0 c/\ c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'y f0 f2 f3 f4 c/\ c= cl'z f0 f1 f2 f3 f5 c/\ c= cfind_face f0 f3 f6 c? / c/\ c? / c/\ cMEM b1 cbetwn f6 f4 f5 c= b0 cmap / cPOWER * part cn_list f0 b2 b1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b2 cFST b1 cflatten f0 cMEM f7 b0 c~ cMEM f7 f2
+ (~ ((MEM (FST d1)) ((map FST) r))), ((MEM d) r) |- ((~ ((MEM (FST d1)) ((map FST) r))) /\ (~ ((FST d1) = (FST d))))
T c==> c~ cMEM cFST f0 cmap part cFST f1 c==> cMEM f2 f1 c/\ c~ cMEM cFST f0 cmap part cFST f1 c~ c= cFST f0 cFST f2
+ |- ((\r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))))) r)
T * / ! ! c= cytrans f0 f1 b0 b1 b2 cl'y f0 crtrans f0 f1 b0 b1 b2 b1 f2
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM d) l), ((((marked_list L) N) r) x) |- (((\x. (((MEM x) (((betwn f) y) z)) /\ (l = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))) x') ==> (~ ((MEM d) r)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cfind_face f0 f2 f6 c==> cMEM f7 f8 c==> cmarked_list f0 f4 f1 f2 c==> * / c/\ cMEM b0 cbetwn f6 f3 f5 c= f8 cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0 f9 c~ cMEM f7 f1
- |- ((\f. (!d. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) (((betwn f) (((((ytrans L) N) r) x) (NUMERAL _0))) (((((ztrans L) N) r) x) (NUMERAL _0)))) /\ (((find_face L) x) = f)))))) ==> (~ ((MEM (FST d)) ((map FST) r)))))))))) f)
T * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ cMEM b1 cbetwn b0 cytrans b2 b3 b4 b5 cNUMERAL c_0 cztrans b2 b3 b4 b5 cNUMERAL c_0 c= cfind_face b2 b5 b0 c~ cMEM cFST b1 cmap part cFST b4 f0
- |- ((?x. t) = t)
T c= c? / f0 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (l = ((map (\i. (((POWER (n_list L)) i) x'))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x')))) (flatten L)))))), (((find_face L) x) = f), ((MEM d) l), ((MEM d) r), ((MEM x') (((betwn f) y) z)), ((((marked_list L) N) r) x) |- (((!x. (((\d1. (x' = d1)) x) ==> F)) ==> ((?d1. (x' = d1)) ==> F)) = ((?d1. (x' = d1)) ==> F))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= f6 cmap / cPOWER * part cn_list f0 b0 f7 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f7 cflatten f0 c==> c= cfind_face f0 f2 f8 c==> cMEM f9 f6 c==> cMEM f9 f1 c==> cMEM f7 cbetwn f8 f3 f5 c==> cmarked_list f0 f4 f1 f2 c= c==> ! c==> * / c= f7 b1 b0 cF c==> c? / c= f7 b0 cF c==> c? / c= f7 b0 cF
- |- ((\z. (!f. (!d. (!d1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) (((betwn f) y) z)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ ((MEM d1) ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))))))))))) ==> ((FST d) = (FST d1))))))))))) z)
T * / ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ cMEM b2 cbetwn b1 f0 b0 c/\ c= cl'y b4 b6 b7 f0 c/\ c= cl'z b4 b5 b6 b7 b0 c/\ c= cfind_face b4 b7 b1 cMEM b3 cmap / cPOWER * part cn_list b4 b8 b2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b8 cFST b2 cflatten b4 c= cFST b2 cFST b3 f1
+ |- (((!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) ==> ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x)) = ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x))
T c= c==> ! ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3 * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
+ (good_list L), (good_list_nodes L), (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ (?l. ((?x. (((MEM x) (((betwn f) y) z)) /\ (l = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))) /\ ((MEM d) l)))))))) |- (~ ((MEM d) r))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'y f0 f2 f3 f4 c/\ c= cl'z f0 f1 f2 f3 f5 c/\ c= cfind_face f0 f3 f6 c? / c/\ c? / c/\ cMEM b1 cbetwn f6 f4 f5 c= b0 cmap / cPOWER * part cn_list f0 b2 b1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b2 cFST b1 cflatten f0 cMEM f7 b0 c~ cMEM f7 f2
+ ((\l. ((?x. (((MEM x) (((betwn f) y) z)) /\ (l = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))) /\ ((MEM d) l))) l) |- ((((?x. (((MEM x) (((betwn f) y) z)) /\ (l = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))) /\ ((MEM d) l)) ==> (~ ((MEM d) r))) = (~ ((MEM d) r)))
T c==> * / c/\ c? / c/\ cMEM b1 cbetwn f0 f1 f2 c= b0 cmap / cPOWER * part cn_list f3 b2 b1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b2 cFST b1 cflatten f3 cMEM f4 b0 f5 c= c==> c/\ c? / c/\ cMEM b0 cbetwn f0 f1 f2 c= f5 cmap / cPOWER * part cn_list f3 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f3 cMEM f4 f5 c~ cMEM f4 f6 c~ cMEM f4 f6
- ((MEM x') (((betwn f) y) z)) |- (((MEM x') (((betwn f) y) z)) = T)
T c==> cMEM f0 cbetwn f1 f2 f3 c= cMEM f0 cbetwn f1 f2 f3 cT
- |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- |- ((x' = d1) = ((\d1. (x' = d1)) d1))
T c= c= f0 f1 * / c= f0 b0 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (x' = d1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (l = ((map (\i. (((POWER (n_list L)) i) x'))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x')))) (flatten L)))))), (((find_face L) x) = f), ((MEM d) l), ((MEM x') (((betwn f) y) z)), ((((marked_list L) N) r) x) |- (((MEM d) r) ==> F)
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f7 c==> c= f8 cmap / cPOWER * part cn_list f0 b0 f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f2 cflatten f0 c==> c= cfind_face f0 f4 f9 c==> cMEM f10 f8 c==> cMEM f2 cbetwn f9 f5 f7 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f10 f1 cF
- |- ((?d1. (x' = d1)) ==> (?d1. (x' = d1)))
T c==> c? / c= f0 b0 c? / c= f0 b0
- ((\d1. (x' = d1)) d1) |- (((x' = d1) ==> (?d1. (x' = d1))) = (?d1. (x' = d1)))
T c==> * / c= f0 b0 f1 c= c==> c= f0 f1 c? / c= f0 b0 c? / c= f0 b0
- |- (((!z. (!f. (!d. (!d1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) (((betwn f) y) z)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ ((MEM d1) ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))))))))))) ==> ((FST d) = (FST d1))))))))))) ==> ((\z. (!f. (!d. (!d1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) (((betwn f) y) z)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ ((MEM d1) ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))))))))))) ==> ((FST d) = (FST d1))))))))))) z)) = ((\z. (!f. (!d. (!d1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) (((betwn f) y) z)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ ((MEM d1) ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))))))))))) ==> ((FST d) = (FST d1))))))))))) z))
T c= c==> ! ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ cMEM b2 cbetwn b1 f0 b0 c/\ c= cl'y b4 b6 b7 f0 c/\ c= cl'z b4 b5 b6 b7 b0 c/\ c= cfind_face b4 b7 b1 cMEM b3 cmap / cPOWER * part cn_list b4 b8 b2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b8 cFST b2 cflatten b4 c= cFST b2 cFST b3 * / ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ cMEM b2 cbetwn b1 f0 b0 c/\ c= cl'y b4 b6 b7 f0 c/\ c= cl'z b4 b5 b6 b7 b0 c/\ c= cfind_face b4 b7 b1 cMEM b3 cmap / cPOWER * part cn_list b4 b8 b2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b8 cFST b2 cflatten b4 c= cFST b2 cFST b3 f1 * / ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ cMEM b2 cbetwn b1 f0 b0 c/\ c= cl'y b4 b6 b7 f0 c/\ c= cl'z b4 b5 b6 b7 b0 c/\ c= cfind_face b4 b7 b1 cMEM b3 cmap / cPOWER * part cn_list b4 b8 b2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b8 cFST b2 cflatten b4 c= cFST b2 cFST b3 f1
- |- (((POWER f) (SUC n)) = (((POWER f) n) o f))
T c= * * part cPOWER f0 cSUC f1 * * part co * * part cPOWER f0 f1 f0
- |- (((!n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) ==> ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n)) = ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n))
T c= c==> ! c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1 * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1
- |- ((\y. (!z. (!f. (!d. (!d1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) (((betwn f) y) z)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ ((MEM d1) ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))))))))))) ==> ((FST d) = (FST d1)))))))))))) y)
T * / ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ cMEM b3 cbetwn b2 b0 b1 c/\ c= cl'y b5 b7 b8 b0 c/\ c= cl'z b5 b6 b7 b8 b1 c/\ c= cfind_face b5 b8 b2 cMEM b4 cmap / cPOWER * part cn_list b5 b9 b3 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b9 cFST b3 cflatten b5 c= cFST b3 cFST b4 f0
- (x' = d1) |- ((x' = d1) /\ (?d1. (x' = d1)))
T c==> c= f0 f1 c/\ c= f0 f1 c? / c= f0 b0
- ((\d1. (x' = d1)) d1) |- (((\d1. (x' = d1)) d1) /\ (?d1. (x' = d1)))
T c==> * / c= f0 b0 f1 c/\ * / c= f0 b0 f1 c? / c= f0 b0
- |- (((!f. (!d. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) (((betwn f) (((((ytrans L) N) r) x) (NUMERAL _0))) (((((ztrans L) N) r) x) (NUMERAL _0)))) /\ (((find_face L) x) = f)))))) ==> (~ ((MEM (FST d)) ((map FST) r)))))))))) ==> ((\f. (!d. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) (((betwn f) (((((ytrans L) N) r) x) (NUMERAL _0))) (((((ztrans L) N) r) x) (NUMERAL _0)))) /\ (((find_face L) x) = f)))))) ==> (~ ((MEM (FST d)) ((map FST) r)))))))))) f)) = ((\f. (!d. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) (((betwn f) (((((ytrans L) N) r) x) (NUMERAL _0))) (((((ztrans L) N) r) x) (NUMERAL _0)))) /\ (((find_face L) x) = f)))))) ==> (~ ((MEM (FST d)) ((map FST) r)))))))))) f))
T c= c==> ! ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ cMEM b1 cbetwn b0 cytrans b2 b3 b4 b5 cNUMERAL c_0 cztrans b2 b3 b4 b5 cNUMERAL c_0 c= cfind_face b2 b5 b0 c~ cMEM cFST b1 cmap part cFST b4 * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ cMEM b1 cbetwn b0 cytrans b2 b3 b4 b5 cNUMERAL c_0 cztrans b2 b3 b4 b5 cNUMERAL c_0 c= cfind_face b2 b5 b0 c~ cMEM cFST b1 cmap part cFST b4 f0 * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ cMEM b1 cbetwn b0 cytrans b2 b3 b4 b5 cNUMERAL c_0 cztrans b2 b3 b4 b5 cNUMERAL c_0 c= cfind_face b2 b5 b0 c~ cMEM cFST b1 cmap part cFST b4 f0
- |- ((!d. (!d1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) (((betwn f) y) z)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ ((MEM d1) ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))))))))))) ==> ((FST d) = (FST d1))))))))) = T)
T c= ! ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ cMEM b0 cbetwn f0 f1 f2 c/\ c= cl'y b2 b4 b5 f1 c/\ c= cl'z b2 b3 b4 b5 f2 c/\ c= cfind_face b2 b5 f0 cMEM b1 cmap / cPOWER * part cn_list b2 b6 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b6 cFST b0 cflatten b2 c= cFST b0 cFST b1 cT
- |- (((!x. (((\d1. (x' = d1)) x) ==> (?d1. (x' = d1)))) ==> ((?d1. (x' = d1)) ==> (?d1. (x' = d1)))) = ((?d1. (x' = d1)) ==> (?d1. (x' = d1))))
T c= c==> ! c==> * / c= f0 b1 b0 c? / c= f0 b1 c==> c? / c= f0 b0 c? / c= f0 b0 c==> c? / c= f0 b0 c? / c= f0 b0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((!f. (!d. (!d1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) (((betwn f) y) z)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((find_face L) x) = f) /\ ((MEM d1) ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))))))))))) ==> ((FST d) = (FST d1)))))))))) = T)
T c= ! ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c~ cfinal_list b3 b5 c/\ cMEM b1 cbetwn b0 f0 f1 c/\ c= cl'y b3 b5 b6 f0 c/\ c= cl'z b3 b4 b5 b6 f1 c/\ c= cfind_face b3 b6 b0 cMEM b2 cmap / cPOWER * part cn_list b3 b7 b1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b7 cFST b1 cflatten b3 c= cFST b1 cFST b2 cT
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((FST d1) = (FST d)), (x' = d1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM d) r), ((MEM x') (((betwn f) y) z)), ((((marked_list L) N) r) x) |- (((FST d1) = (FST d)) /\ F)
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cFST f2 cFST f3 c==> c= f4 f2 c==> c= cl'y f0 f1 f5 f6 c==> c= cl'z f0 f7 f1 f5 f8 c==> c= cfind_face f0 f5 f9 c==> cMEM f3 f1 c==> cMEM f4 cbetwn f9 f6 f8 c==> cmarked_list f0 f7 f1 f5 c/\ c= cFST f2 cFST f3 cF
- |- ((x' = d1) ==> (?d1. (x' = d1)))
T c==> c= f0 f1 c? / c= f0 b0
- |- ((!d. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) (((betwn f) (((((ytrans L) N) r) x) (NUMERAL _0))) (((((ztrans L) N) r) x) (NUMERAL _0)))) /\ (((find_face L) x) = f)))))) ==> (~ ((MEM (FST d)) ((map FST) r))))))))) = T)
T c= ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ cMEM b0 cbetwn f0 cytrans b1 b2 b3 b4 cNUMERAL c_0 cztrans b1 b2 b3 b4 cNUMERAL c_0 c= cfind_face b1 b4 f0 c~ cMEM cFST b0 cmap part cFST b3 cT
- (x' = d1) |- ((\d1. (x' = d1)) d1)
T c==> c= f0 f1 * / c= f0 b0 f1
- |- ((\g. ((f o g) = (\x. (f (g x))))) g)
T * / c= * * part co f0 b0 / * f0 * b0 b1 f1
- |- (((!g. ((f o g) = (\x. (f (g x))))) ==> ((\g. ((f o g) = (\x. (f (g x))))) g)) = ((\g. ((f o g) = (\x. (f (g x))))) g))
T c= c==> ! c= * * part co f0 b0 / * f0 * b0 b1 * / c= * * part co f0 b0 / * f0 * b0 b1 f1 * / c= * * part co f0 b0 / * f0 * b0 b1 f1
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((((\d1. (x' = d1)) d1) ==> (?d1. (x' = d1))) = T)
T c= c==> * / c= f0 b0 f1 c? / c= f0 b0 cT
- |- ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n)
T * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1
- |- ((f o g) = (\x. (f (g x))))
T c= * * part co f0 f1 / * f0 * f1 b0
