N INTERIOR_CONVEX_HULL_3_MINIMAL
C |- (!a. (!b. (!c. ((~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) ==> ((interior ((hull convex) (a INSERT (b INSERT (c INSERT EMPTY))))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part cinterior * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D ARITH_LE
A |- ((!m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) /\ (((_0 <= _0) = T) /\ ((!n. (((BIT0 n) <= _0) = (n <= _0))) /\ ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))))))))
T c/\ ! ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 c/\ c= c<= c_0 c_0 cT c/\ ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
D ARITH_LT
A |- ((!m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) /\ (((_0 < _0) = F) /\ ((!n. (((BIT0 n) < _0) = F)) /\ ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))))))))))
T c/\ ! ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 c/\ c= c< c_0 c_0 cF c/\ ! c= c< cBIT0 b0 c_0 cF c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_NEG_MINUS1
A |- (!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)))
T c= creal_neg f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D FINITE_EMPTY
A |- (FINITE EMPTY)
T cFINITE part cEMPTY
D FINITE_INSERT
A |- (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s))))
T c= cFINITE * * part cINSERT f0 f1 cFINITE f1
D Oxl_2012.CARD_INSERT
A |- (!x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))))
T c==> cFINITE f0 c= cCARD * * part cINSERT f1 f0 cCOND cIN f1 f0 cCARD f0 cSUC cCARD f0
D Oxl_2012.CARD_EMPTY
A |- ((CARD EMPTY) = (NUMERAL _0))
T c= cCARD part cEMPTY cNUMERAL c_0
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D DIMINDEX_2
A |- ((dimindex UNIV) = (NUMERAL (BIT0 (BIT1 _0))))
T c= cdimindex part cUNIV cNUMERAL cBIT0 cBIT1 c_0
D REAL_HALF
A |- ((!e. (((real_lt (real_of_num (NUMERAL _0))) ((real_div e) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_lt (real_of_num (NUMERAL _0))) e))) /\ ((!e. (((real_add ((real_div e) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div e) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = e)) /\ (!e. (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div e) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = e))))
T c/\ ! c= creal_lt creal_of_num cNUMERAL c_0 creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c= creal_add creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 ! c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0
D vector_add
A |- (!x. (!y. (((vector_add x) y) = (lambdai. ((real_add (x $ i)) (y $ i))))))
T c= cvector_add f0 f1 clambda / creal_add c$ f0 b0 c$ f1 b0
D vector_sub
A |- (!x. (!y. (((vector_sub x) y) = (lambdai. ((real_sub (x $ i)) (y $ i))))))
T c= cvector_sub f0 f1 clambda / creal_sub c$ f0 b0 c$ f1 b0
D vec
A |- (!n. ((vec n) = (lambdai. (real_of_num n))))
T c= cvec f0 clambda / creal_of_num f0
D AFFINE_HULL_FINITE_STEP_GEN
A |- (!P. (((?u. ((!x. ((x IN EMPTY) ==> ((P x) (u x)))) /\ ((((sum EMPTY) u) = w) /\ (((vsum EMPTY) (\x. ((% (u x)) x))) = y)))) = ((w = (real_of_num (NUMERAL _0))) /\ (y = (vec (NUMERAL _0))))) /\ (((FINITE s) /\ ((!y. (((a IN s) /\ ((P a) y)) ==> ((P a) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) /\ (!x. (!y. (((a IN s) /\ (((P a) x) /\ ((P a) y))) ==> ((P a) ((real_add x) y))))))) ==> ((?u. ((!x. ((x IN (a INSERT s)) ==> ((P x) (u x)))) /\ ((((sum (a INSERT s)) u) = w) /\ (((vsum (a INSERT s)) (\x. ((% (u x)) x))) = y)))) = (?v. (?u. (((P a) v) /\ ((!x. ((x IN s) ==> ((P x) (u x)))) /\ ((((sum s) u) = ((real_sub w) v)) /\ (((vsum s) (\x. ((% (u x)) x))) = ((vector_sub y) ((% v) a))))))))))))
T c/\ c= c? / c/\ ! c==> cIN b1 part cEMPTY * * f0 b1 * b0 b1 c/\ c= csum part cEMPTY b0 f1 c= cvsum part cEMPTY / c% * b0 b1 b1 f2 c/\ c= f1 creal_of_num cNUMERAL c_0 c= f2 cvec cNUMERAL c_0 c==> c/\ cFINITE f3 c/\ ! c==> c/\ cIN f4 f3 * * f0 f4 b0 * * f0 f4 creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN f4 f3 c/\ * * f0 f4 b0 * * f0 f4 b1 * * f0 f4 creal_add b0 b1 c= c? / c/\ ! c==> cIN b1 * * part cINSERT f4 f3 * * f0 b1 * b0 b1 c/\ c= csum * * part cINSERT f4 f3 b0 f1 c= cvsum * * part cINSERT f4 f3 / c% * b0 b1 b1 f2 c? / c? / c/\ * * f0 f4 b0 c/\ ! c==> cIN b2 f3 * * f0 b2 * b1 b2 c/\ c= csum f3 b1 creal_sub f1 b0 c= cvsum f3 / c% * b1 b2 b2 cvector_sub f2 c% b0 f4
D COLLINEAR_3_EQ_AFFINE_DEPENDENT
A |- (!a. (!b. (!c. ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = ((a = b) \/ ((a = c) \/ ((b = c) \/ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY)))))))))))
T c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f1 f2 caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
D INTERIOR_CONVEX_HULL_EXPLICIT_MINIMAL
A |- (!s. ((~ (affine_dependent s)) ==> ((interior ((hull convex) s)) = (((COND ((CARD s) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN s) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum s) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum s) (\x. ((% (u x)) x))) = y))))) y))))))))
T c==> c~ caffine_dependent f0 c= * part cinterior * * part chull part cconvex f0 * * * part cCOND c<= cCARD f0 cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 f0 creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum f0 b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum f0 / c% * b2 b3 b3 b1 b1
+ |- ((FINITE EMPTY) /\ ((!y. (((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) /\ (!x. (!y. (((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))))
T c/\ cFINITE part cEMPTY c/\ ! c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 creal_add b0 b1
- |- ((\m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) m)
T * / ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 f0
- |- (((!n. (((BIT0 n) + _0) = (BIT0 n))) ==> ((\n. (((BIT0 n) + _0) = (BIT0 n))) n)) = ((\n. (((BIT0 n) + _0) = (BIT0 n))) n))
T c= c==> ! c= c+ cBIT0 b0 c_0 cBIT0 b0 * / c= c+ cBIT0 b0 c_0 cBIT0 b0 f0 * / c= c+ cBIT0 b0 c_0 cBIT0 b0 f0
+ ((((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) \/ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) \/ ((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))))) |- F
T c==> c\/ c\/ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((!i. ((P i) ==> (Q i))) ==> ((!i. (P i)) ==> (!i. (Q i))))
T c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0
+ |- ((a IN (b INSERT (c INSERT EMPTY))) ==> ((CARD (b INSERT (c INSERT EMPTY))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))))
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0
- |- (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (((% (u x)) x) = ((% (u x)) x))) = T)
T c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c% * f4 f0 f0 c% * f4 f0 f0 cT
- |- (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))
T c= cEXP cBIT0 f0 cBIT0 f1 c* cEXP cBIT0 f0 f1 cEXP cBIT0 f0 f1
- |- (((!m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) ==> ((\m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) m)) = ((\m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) m))
T c= c==> ! ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 * / ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 f0 * / ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 f0
- |- ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))
T c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- |- (((!n. (((BIT1 n) * _0) = _0)) ==> ((\n. (((BIT1 n) * _0) = _0)) n)) = ((\n. (((BIT1 n) * _0) = _0)) n))
T c= c==> ! c= c* cBIT1 b0 c_0 c_0 * / c= c* cBIT1 b0 c_0 c_0 f0 * / c= c* cBIT1 b0 c_0 c_0 f0
- |- (((BIT0 m) = (BIT1 n)) = F)
T c= c= cBIT0 f0 cBIT1 f1 cF
- |- (((!n. (((BIT0 n) * _0) = _0)) ==> ((\n. (((BIT0 n) * _0) = _0)) n)) = ((\n. (((BIT0 n) * _0) = _0)) n))
T c= c==> ! c= c* cBIT0 b0 c_0 c_0 * / c= c* cBIT0 b0 c_0 c_0 f0 * / c= c* cBIT0 b0 c_0 c_0 f0
+ (~ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY))))), (~ (a = b)), (~ (a = c)), (~ (b = c)) |- ((interior ((hull convex) (a INSERT (b INSERT (c INSERT EMPTY))))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v)))))
T c==> c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f1 f2 c= * part cinterior * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1
- |- (((!n. ((BIT1 n) > _0)) ==> ((\n. ((BIT1 n) > _0)) n)) = ((\n. ((BIT1 n) > _0)) n))
T c= c==> ! c> cBIT1 b0 c_0 * / c> cBIT1 b0 c_0 f0 * / c> cBIT1 b0 c_0 f0
- |- (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))
T c= c+ cBIT0 f0 cBIT1 f1 cBIT1 c+ f0 f1
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ (((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) |- (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((SUC _0) = (BIT1 _0))
T c= cSUC c_0 cBIT1 c_0
- |- (((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) ==> ((\m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) m)) = ((\m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) m))
T c= c==> ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 * / ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 f0 * / ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 f0
- |- ((_0 <= (BIT0 n)) = T)
T c= c<= c_0 cBIT0 f0 cT
- |- (((BIT1 m) = (BIT0 n)) = F)
T c= c= cBIT1 f0 cBIT0 f1 cF
- |- ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))))))
T c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
+ |- (((!x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) ==> ((\x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) x)) = ((\x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) x))
T c= c==> ! ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 * / ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 f0 * / ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 f0
- |- (((PRE _0) = _0) /\ ((!n. ((PRE (BIT0 n)) = (((COND (n = _0)) _0) (BIT1 (PRE n))))) /\ (!n. ((PRE (BIT1 n)) = (BIT0 n)))))
T c/\ c= cPRE c_0 c_0 c/\ ! c= cPRE cBIT0 b0 cCOND c= b0 c_0 c_0 cBIT1 cPRE b0 ! c= cPRE cBIT1 b0 cBIT0 b0
- |- (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n))))
T c= c* cBIT0 f0 cBIT0 f1 cBIT0 cBIT0 c* f0 f1
- |- ((a IN (b INSERT (c INSERT EMPTY))) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))))
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0
- |- ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))))
T c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- (((BIT1 m) < (BIT0 n)) = (m < n))
T c= c< cBIT1 f0 cBIT0 f1 c< f0 f1
+ |- (((!q'. ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q'))))) ==> ((\q'. ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q'))))) q')) = ((\q'. ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 f4 c==> c==> f4 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 b0 c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 c==> f4 b0 * / c==> c= c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 f4 c==> c==> f4 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 b0 c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 c==> f4 b0 f5 * / c==> c= c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 f4 c==> c==> f4 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 b0 c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 c==> f4 b0 f5
+ |- ((?u. ((!x. ((x IN (b INSERT (c INSERT EMPTY))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (b INSERT (c INSERT EMPTY))) u) = ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\x. ((% (u x)) x))) = ((vector_sub y) ((% v) a)))))) = (?v'. (?u. (((real_lt (real_of_num (NUMERAL _0))) v') /\ ((!x. ((x IN (c INSERT EMPTY)) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (c INSERT EMPTY)) u) = ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) v')) /\ (((vsum (c INSERT EMPTY)) (\x. ((% (u x)) x))) = ((vector_sub ((vector_sub y) ((% v) a))) ((% v') b)))))))))
T c= c? / c/\ ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b0 b1 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 c= cvsum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / c% * b0 b1 b1 cvector_sub f3 c% f2 f4 c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> cIN b2 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b1 b2 c/\ c= csum * * part cINSERT f1 part cEMPTY b1 creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 b0 c= cvsum * * part cINSERT f1 part cEMPTY / c% * b1 b2 b2 cvector_sub cvector_sub f3 c% f2 f4 c% b0 f0
+ ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) |- (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0
- |- ((\m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) m)
T * / ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 f0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0))))) ==> F)
T c==> c\/ c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- ((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) |- ((b IN (c INSERT EMPTY)) = T)
T c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 c= cIN f0 * * part cINSERT f1 part cEMPTY cT
- |- (((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) ==> ((\m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) m)) = ((\m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) m))
T c= c==> ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 * / ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 f0 * / ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 f0
- (~ ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) |- (((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV)) = F)
T c==> c~ c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV c= c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV cF
+ |- ((~ (b IN (c INSERT EMPTY))) ==> ((SUC (CARD (c INSERT EMPTY))) = (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))
T c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cSUC cCARD * * part cINSERT f1 part cEMPTY cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0
- |- ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))
T c= cEXP c_0 cBIT0 f0 c* cEXP c_0 f0 cEXP c_0 f0
- |- (((!t'. (!e'. (((a IN (b INSERT (c INSERT EMPTY))) = g') ==> ((g' ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = t')) ==> (((~ g') ==> ((SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((a IN (b INSERT (c INSERT EMPTY))) = g') ==> ((g' ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = t')) ==> (((~ g') ==> ((SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((a IN (b INSERT (c INSERT EMPTY))) = g') ==> ((g' ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = t')) ==> (((~ g') ==> ((SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b0 c==> c==> c~ f3 c= cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b1 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND f3 b0 b1 * / ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b0 c==> c==> c~ f3 c= cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b1 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND f3 b0 b1 f4 * / ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b0 c==> c==> c~ f3 c= cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b1 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND f3 b0 b1 f4
+ |- ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = T))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1 cT
+ (((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) \/ ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0))))) |- F
T c==> c\/ c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 cF
- |- ((\e. (((real_add ((real_div e) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div e) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = e)) e)
T * / c= creal_add creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 f0
+ |- ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) = (vec (NUMERAL _0))) = (((vector_add a) ((vector_add b) c)) = y))
T c= c= cvector_sub cvector_sub cvector_sub f0 f1 f2 f3 cvec cNUMERAL c_0 c= cvector_add f1 cvector_add f2 f3 f0
+ (((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))
T c= cEXP cNUMERAL f0 cNUMERAL f1 cNUMERAL cEXP f0 f1
+ |- (((!n. ((SUC (BIT0 n)) = (BIT1 n))) ==> ((\n. ((SUC (BIT0 n)) = (BIT1 n))) n)) = ((\n. ((SUC (BIT0 n)) = (BIT1 n))) n))
T c= c==> ! c= cSUC cBIT0 b0 cBIT1 b0 * / c= cSUC cBIT0 b0 cBIT1 b0 f0 * / c= cSUC cBIT0 b0 cBIT1 b0 f0
+ |- ((real_neg ((real_sub ((real_add (a $ i)) ((real_add (b $ i)) (c $ i)))) (y $ i))) = ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))))
T c= creal_neg creal_sub creal_add c$ f0 f1 creal_add c$ f2 f1 c$ f3 f1 c$ f4 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1
+ |- (((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = T))
T c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 cT
- |- ((!n. ((EVEN (BIT0 n)) = T)) /\ (!n. ((EVEN (BIT1 n)) = F)))
T c/\ ! c= cEVEN cBIT0 b0 cT ! c= cEVEN cBIT1 b0 cF
- |- (((!n. ((ODD (BIT0 n)) = F)) ==> ((\n. ((ODD (BIT0 n)) = F)) n)) = ((\n. ((ODD (BIT0 n)) = F)) n))
T c= c==> ! c= cODD cBIT0 b0 cF * / c= cODD cBIT0 b0 cF f0 * / c= cODD cBIT0 b0 cF f0
- |- ((\m. (((BIT1 m) EXP _0) = (BIT1 _0))) m)
T * / c= cEXP cBIT1 b0 c_0 cBIT1 c_0 f0
- |- (((!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) ==> ((\n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) n)) = ((\n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) n))
T c= c==> ! c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 * / c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1 * / c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1
+ |- ((((real_add (a $ i)) ((real_add (b $ i)) (c $ i))) = (y $ i)) ==> (((real_sub ((real_sub ((real_sub (y $ i)) (a $ i))) (b $ i))) (c $ i)) = (real_of_num (NUMERAL _0))))
T c==> c= creal_add c$ f0 f1 creal_add c$ f2 f1 c$ f3 f1 c$ f4 f1 c= creal_sub creal_sub creal_sub c$ f4 f1 c$ f0 f1 c$ f2 f1 c$ f3 f1 creal_of_num cNUMERAL c_0
- ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0
+ |- ((\t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((CARD EMPTY) = t')) ==> (((~ g') ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (c IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cCARD part cEMPTY b0 c==> c==> c~ f1 c= cSUC cCARD part cEMPTY b1 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND f1 b0 b1 f2
- |- (((!n. ((_0 * (BIT0 n)) = _0)) ==> ((\n. ((_0 * (BIT0 n)) = _0)) n)) = ((\n. ((_0 * (BIT0 n)) = _0)) n))
T c= c==> ! c= c* c_0 cBIT0 b0 c_0 * / c= c* c_0 cBIT0 b0 c_0 f0 * / c= c* c_0 cBIT0 b0 c_0 f0
+ ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0
- ((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) |- ((real_lt (real_of_num (NUMERAL _0))) y)
T c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f2
- |- (((!n. ((EVEN (BIT1 n)) = F)) ==> ((\n. ((EVEN (BIT1 n)) = F)) n)) = ((\n. ((EVEN (BIT1 n)) = F)) n))
T c= c==> ! c= cEVEN cBIT1 b0 cF * / c= cEVEN cBIT1 b0 cF f0 * / c= cEVEN cBIT1 b0 cF f0
- |- (((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) ==> ((\m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) m)) = ((\m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) m))
T c= c==> ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 * / ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 f0 * / ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 f0
- |- (((!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) ==> ((\m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) m)) = ((\m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) m))
T c= c==> ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 * / ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0 * / ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0
- |- ((\n. (((BIT0 m) < (BIT0 n)) = (m < n))) n)
T * / c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 f1
+ |- ((\p'. (!q'. ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f2
+ ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0))) = ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 c= creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0
- |- ((\n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))) n)
T * / c= c* cNUMERAL f0 cNUMERAL b0 cNUMERAL c* f0 b0 f1
- |- (((!g'. (!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = t')) ==> (((~ g') ==> ((SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = t')) ==> (((~ g') ==> ((SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = t')) ==> (((~ g') ==> ((SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND b0 b1 b2 * / ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND b0 b1 b2 f2 * / ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND b0 b1 b2 f2
+ (((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0))))) ==> F), ((((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) \/ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) \/ ((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))))) |- F
T c==> c==> c\/ c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF c==> c\/ c\/ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- |- ((\n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) n)
T * / c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 f0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\p'. (!q'. ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 b1 c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 c==> b0 b1 f4
- |- ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))
T c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
+ |- ((\e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((CARD (c INSERT EMPTY)) = t')) ==> (((~ g') ==> ((SUC (CARD (c INSERT EMPTY))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (CARD (c INSERT EMPTY))) (SUC (CARD (c INSERT EMPTY)))) = (((COND g') t') e')))))) e')
T * / c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCARD * * part cINSERT f1 part cEMPTY f3 c==> c==> c~ f2 c= cSUC cCARD * * part cINSERT f1 part cEMPTY b0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND f2 f3 b0 f4
- |- ((((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV)) ==> (EMPTY = t')) ==> (((~ ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) ==> ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = e')) ==> ((((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) t') e'))))
T c==> c==> c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV c= part cEMPTY f3 c==> c==> c~ c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 f4 c= * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV f3 f4
+ (~ ((((real_sub ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) c) = (real_of_num (NUMERAL _0))) = (((real_add a) ((real_add b) c)) = (real_of_num (NUMERAL (BIT1 _0)))))) |- ((((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) \/ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) \/ ((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0))))))
T c==> c~ c= c= creal_sub creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c\/ c\/ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))
T c= cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0
- |- ((!n. ((_0 >= (BIT0 n)) = (_0 >= n))) /\ ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))))))
T c/\ ! c= c>= c_0 cBIT0 b0 c>= c_0 b0 c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
+ |- (((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = T))
T c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 cT
+ |- ((_0 < _0) = F)
T c= c< c_0 c_0 cF
- |- (((!n. (((BIT1 n) < _0) = F)) ==> ((\n. (((BIT1 n) < _0) = F)) n)) = ((\n. (((BIT1 n) < _0) = F)) n))
T c= c==> ! c= c< cBIT1 b0 c_0 cF * / c= c< cBIT1 b0 c_0 cF f0 * / c= c< cBIT1 b0 c_0 cF f0
- |- ((_0 + (BIT0 n)) = (BIT0 n))
T c= c+ c_0 cBIT0 f0 cBIT0 f0
- |- ((\t. ((FINITE (s UNION t)) = ((FINITE s) /\ (FINITE t)))) t)
T * / c= cFINITE * * part cUNION f0 b0 c/\ cFINITE f0 cFINITE b0 f1
+ |- ((((real_sub ((real_sub ((real_sub (y $ i)) (a $ i))) (b $ i))) (c $ i)) = (real_of_num (NUMERAL _0))) ==> (((real_add (a $ i)) ((real_add (b $ i)) (c $ i))) = (y $ i)))
T c==> c= creal_sub creal_sub creal_sub c$ f0 f1 c$ f2 f1 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c= creal_add c$ f2 f1 creal_add c$ f3 f1 c$ f4 f1 c$ f0 f1
+ |- ((?u. ((!x. ((x IN EMPTY) ==> ((P x) (u x)))) /\ ((((sum EMPTY) u) = w) /\ (((vsum EMPTY) (\x. ((% (u x)) x))) = y)))) = ((w = (real_of_num (NUMERAL _0))) /\ (y = (vec (NUMERAL _0)))))
T c= c? / c/\ ! c==> cIN b1 part cEMPTY * * f0 b1 * b0 b1 c/\ c= csum part cEMPTY b0 f1 c= cvsum part cEMPTY / c% * b0 b1 b1 f2 c/\ c= f1 creal_of_num cNUMERAL c_0 c= f2 cvec cNUMERAL c_0
+ |- ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> q')))
T c==> c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f2 c= c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 f2
- |- ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))
T c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))
T c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- |- ((\n. ((BIT0 n) >= _0)) n)
T * / c>= cBIT0 b0 c_0 f0
- |- (((BIT1 n) - _0) = (BIT1 n))
T c= c- cBIT1 f0 c_0 cBIT1 f0
- |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?v. (((real_lt (real_of_num (NUMERAL _0))) v) /\ (?v'. (((real_lt (real_of_num (NUMERAL _0))) v') /\ (?v''. (((real_lt (real_of_num (NUMERAL _0))) v'') /\ ((((real_add v) ((real_add v') v'')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% v) a)) ((vector_add ((% v') b)) ((% v'') c))) = y))))))))) y)))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (?y. (((real_lt (real_of_num (NUMERAL _0))) y) /\ (?z. (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v))))) = T)
T c= c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1 cT
+ (((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) |- ((((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v)))))) = (((real_lt (real_of_num (NUMERAL _0))) x) /\ (?z. (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v)))))))
T c= c? / c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f0 creal_add f1 b0 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f0 f2 cvector_add c% f1 f3 c% b0 f4 f5 c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 f1 c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f0 creal_add f1 b0 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f0 f2 cvector_add c% f1 f3 c% b0 f4 f5
- |- (((!n. ((_0 - (BIT0 n)) = _0)) ==> ((\n. ((_0 - (BIT0 n)) = _0)) n)) = ((\n. ((_0 - (BIT0 n)) = _0)) n))
T c= c==> ! c= c- c_0 cBIT0 b0 c_0 * / c= c- c_0 cBIT0 b0 c_0 f0 * / c= c- c_0 cBIT0 b0 c_0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (c IN EMPTY)) |- ((c IN EMPTY) = F)
T c==> c~ cIN f0 part cEMPTY c= cIN f0 part cEMPTY cF
+ (~ (a = b)), ((~ (a = c)) /\ ((~ (b = c)) /\ (~ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY))))))) |- ((interior ((hull convex) (a INSERT (b INSERT (c INSERT EMPTY))))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v)))))
T c==> c~ c= f0 f1 c==> c/\ c~ c= f0 f2 c/\ c~ c= f1 f2 c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part cinterior * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1
+ |- (((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) ==> ((\n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) n)) = ((\n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) n))
T c= c==> ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 * / c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 f0 * / c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 f0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
- |- ((\m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) m)
T * / ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) |- ((((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0
- |- ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))))))
T c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
+ |- ((\x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) x)
T * / ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 f0
- |- (((!n. (((BIT1 n) <= _0) = F)) ==> ((\n. (((BIT1 n) <= _0) = F)) n)) = ((\n. (((BIT1 n) <= _0) = F)) n))
T c= c==> ! c= c<= cBIT1 b0 c_0 cF * / c= c<= cBIT1 b0 c_0 cF f0 * / c= c<= cBIT1 b0 c_0 cF f0
- |- ((\n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) n)
T * / c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 f1
+ |- ((y = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) y) = (real_of_num (NUMERAL _0)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
+ |- ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) = (((COND (a IN (b INSERT (c INSERT EMPTY)))) (CARD (b INSERT (c INSERT EMPTY)))) (SUC (CARD (b INSERT (c INSERT EMPTY))))))
T c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))
T c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- (((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) = (vec (NUMERAL _0))) |- ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) = (vec (NUMERAL _0))) /\ (((vector_add a) ((vector_add b) c)) = y))
T c==> c= cvector_sub cvector_sub cvector_sub f0 f1 f2 f3 cvec cNUMERAL c_0 c/\ c= cvector_sub cvector_sub cvector_sub f0 f1 f2 f3 cvec cNUMERAL c_0 c= cvector_add f1 cvector_add f2 f3 f0
- |- ((\n. (~ (_0 >= (BIT1 n)))) n)
T * / c~ c>= c_0 cBIT1 b0 f0
- |- (((!n. ((_0 + (BIT0 n)) = (BIT0 n))) ==> ((\n. ((_0 + (BIT0 n)) = (BIT0 n))) n)) = ((\n. ((_0 + (BIT0 n)) = (BIT0 n))) n))
T c= c==> ! c= c+ c_0 cBIT0 b0 cBIT0 b0 * / c= c+ c_0 cBIT0 b0 cBIT0 b0 f0 * / c= c+ c_0 cBIT0 b0 cBIT0 b0 f0
- |- (((!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) ==> ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n)) = ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n))
T c= c==> ! c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1 * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1
- |- ((((b IN (c INSERT EMPTY)) ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) ==> (((~ (b IN (c INSERT EMPTY))) ==> ((SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) e')))) = (((~ (b IN (c INSERT EMPTY))) ==> ((SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) e'))))
T c= c==> c==> cIN f0 * * part cINSERT f1 part cEMPTY c= cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f2 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f2
- ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV)) |- (((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV)) = T)
T c==> c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV c= c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV cT
- |- (((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) ==> ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m)) = ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m))
T c= c==> ! ! c= c= cBIT1 b0 cBIT0 b1 cF * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0 * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0
+ |- (((!s. ((~ (affine_dependent s)) ==> ((interior ((hull convex) s)) = (((COND ((CARD s) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN s) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum s) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum s) (\x. ((% (u x)) x))) = y))))) y)))))))) ==> ((\s. ((~ (affine_dependent s)) ==> ((interior ((hull convex) s)) = (((COND ((CARD s) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN s) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum s) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum s) (\x. ((% (u x)) x))) = y))))) y)))))))) s)) = ((\s. ((~ (affine_dependent s)) ==> ((interior ((hull convex) s)) = (((COND ((CARD s) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN s) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum s) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum s) (\x. ((% (u x)) x))) = y))))) y)))))))) s))
T c= c==> ! c==> c~ caffine_dependent b0 c= * part cinterior * * part chull part cconvex b0 * * * part cCOND c<= cCARD b0 cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c? / c/\ ! c==> cIN b4 b0 creal_lt creal_of_num cNUMERAL c_0 * b3 b4 c/\ c= csum b0 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum b0 / c% * b3 b4 b4 b2 b2 * / c==> c~ caffine_dependent b0 c= * part cinterior * * part chull part cconvex b0 * * * part cCOND c<= cCARD b0 cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c? / c/\ ! c==> cIN b4 b0 creal_lt creal_of_num cNUMERAL c_0 * b3 b4 c/\ c= csum b0 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum b0 / c% * b3 b4 b4 b2 b2 f0 * / c==> c~ caffine_dependent b0 c= * part cinterior * * part chull part cconvex b0 * * * part cCOND c<= cCARD b0 cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c? / c/\ ! c==> cIN b4 b0 creal_lt creal_of_num cNUMERAL c_0 * b3 b4 c/\ c= csum b0 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum b0 / c% * b3 b4 b4 b2 b2 f0
- |- ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n)
T * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1
+ |- ((SUC (BIT1 n)) = (BIT0 (SUC n)))
T c= cSUC cBIT1 f0 cBIT0 cSUC f0
+ |- (((BIT1 m) < (BIT1 n)) = (m < n))
T c= c< cBIT1 f0 cBIT1 f1 c< f0 f1
+ (~ ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV))) |- ((~ ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV))) /\ ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))))
T c==> c~ c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV c/\ c~ c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- |- (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) (u x)) = q')) ==> (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x))) = (p' ==> q'))))
T c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c==> f4 c= creal_lt creal_of_num cNUMERAL c_0 * f5 f0 f6 c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * f5 f0 c==> f4 f6
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\x. (((real_mul x) ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m)
T * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0
+ |- (((!e'. (((a IN (b INSERT (c INSERT EMPTY))) = g') ==> ((g' ==> ((CARD (b INSERT (c INSERT EMPTY))) = t')) ==> (((~ g') ==> ((SUC (CARD (b INSERT (c INSERT EMPTY)))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (CARD (b INSERT (c INSERT EMPTY)))) (SUC (CARD (b INSERT (c INSERT EMPTY))))) = (((COND g') t') e')))))) ==> ((\e'. (((a IN (b INSERT (c INSERT EMPTY))) = g') ==> ((g' ==> ((CARD (b INSERT (c INSERT EMPTY))) = t')) ==> (((~ g') ==> ((SUC (CARD (b INSERT (c INSERT EMPTY)))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (CARD (b INSERT (c INSERT EMPTY)))) (SUC (CARD (b INSERT (c INSERT EMPTY))))) = (((COND g') t') e')))))) e')) = ((\e'. (((a IN (b INSERT (c INSERT EMPTY))) = g') ==> ((g' ==> ((CARD (b INSERT (c INSERT EMPTY))) = t')) ==> (((~ g') ==> ((SUC (CARD (b INSERT (c INSERT EMPTY)))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (CARD (b INSERT (c INSERT EMPTY)))) (SUC (CARD (b INSERT (c INSERT EMPTY))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> c==> c~ f3 c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND f3 f4 b0 * / c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> c==> c~ f3 c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND f3 f4 b0 f5 * / c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> c==> c~ f3 c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND f3 f4 b0 f5
- |- (((!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) ==> ((\m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) m)) = ((\m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) m))
T c= c==> ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- |- (((!g'. (!t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC (NUMERAL _0)) = e')) ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC (NUMERAL _0)) = e')) ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC (NUMERAL _0)) = e')) ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= cIN f0 part cEMPTY b0 c==> c==> b0 c= cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cNUMERAL c_0 b2 c= cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND b0 b1 b2 * / ! ! c==> c= cIN f0 part cEMPTY b0 c==> c==> b0 c= cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cNUMERAL c_0 b2 c= cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND b0 b1 b2 f1 * / ! ! c==> c= cIN f0 part cEMPTY b0 c==> c==> b0 c= cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cNUMERAL c_0 b2 c= cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND b0 b1 b2 f1
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- |- ((NUMERAL (NUMERAL _0)) = (NUMERAL _0))
T c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0
- (c IN EMPTY) |- ((c IN EMPTY) /\ ((NUMERAL _0) = (NUMERAL _0)))
T c==> cIN f0 part cEMPTY c/\ cIN f0 part cEMPTY c= cNUMERAL c_0 cNUMERAL c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!n. ((PRE (BIT1 n)) = (BIT0 n))) ==> ((\n. ((PRE (BIT1 n)) = (BIT0 n))) n)) = ((\n. ((PRE (BIT1 n)) = (BIT0 n))) n))
T c= c==> ! c= cPRE cBIT1 b0 cBIT0 b0 * / c= cPRE cBIT1 b0 cBIT0 b0 f0 * / c= cPRE cBIT1 b0 cBIT0 b0 f0
+ |- ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> T))
T c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 cT
+ |- ((a ==> (b ==> c)) ==> ((a ==> b) ==> (a ==> c)))
T c==> c==> f0 c==> f1 f2 c==> c==> f0 f1 c==> f0 f2
- |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0
- |- (((!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) ==> ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n)) = ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n))
T c= c==> ! c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1 * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1
- |- (((BIT1 m) <= (BIT1 n)) = (m <= n))
T c= c<= cBIT1 f0 cBIT1 f1 c<= f0 f1
+ |- (((((COND ((((COND ((a = b) \/ (a = c))) (((COND (b = c)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (b = c)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v))))) = ((((COND ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v))))))
T c= c= * * * part cCOND c<= cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1 c= * * * part cCOND c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1
+ |- ((((FINITE (b INSERT (c INSERT EMPTY))) /\ ((!y. (((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) /\ (!x. (!y. (((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))))))) ==> ((?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y)))) = (?v. (?u. (((real_lt (real_of_num (NUMERAL _0))) v) /\ ((!x. ((x IN (b INSERT (c INSERT EMPTY))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (b INSERT (c INSERT EMPTY))) u) = ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\x. ((% (u x)) x))) = ((vector_sub y) ((% v) a)))))))))) = ((?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y)))) = (?v. (?u. (((real_lt (real_of_num (NUMERAL _0))) v) /\ ((!x. ((x IN (b INSERT (c INSERT EMPTY))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (b INSERT (c INSERT EMPTY))) u) = ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\x. ((% (u x)) x))) = ((vector_sub y) ((% v) a))))))))))
T c= c==> c/\ cFINITE * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ ! c==> c/\ cIN f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 creal_add b0 b1 c= c? / c/\ ! c==> cIN b1 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b0 b1 c/\ c= csum * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / c% * b0 b1 b1 f3 c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b1 b2 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / c% * b1 b2 b2 cvector_sub f3 c% b0 f2 c= c? / c/\ ! c==> cIN b1 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b0 b1 c/\ c= csum * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / c% * b0 b1 b1 f3 c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b1 b2 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / c% * b1 b2 b2 cvector_sub f3 c% b0 f2
- |- (((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) ==> ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m)) = ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m))
T c= c==> ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0 * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0
+ |- (((FINITE EMPTY) ==> ((CARD (c INSERT EMPTY)) = (((COND (c IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))))) = ((CARD (c INSERT EMPTY)) = (((COND (c IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY)))))
T c= c==> cFINITE part cEMPTY c= cCARD * * part cINSERT f0 part cEMPTY cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY c= cCARD * * part cINSERT f0 part cEMPTY cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((EVEN _0) = T) /\ ((!n. ((EVEN (BIT0 n)) = T)) /\ (!n. ((EVEN (BIT1 n)) = F))))
T c/\ c= cEVEN c_0 cT c/\ ! c= cEVEN cBIT0 b0 cT ! c= cEVEN cBIT1 b0 cF
- |- (((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) ==> ((\m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) m)) = ((\m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) m))
T c= c==> ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- |- ((\n. (((BIT0 m) <= (BIT0 n)) = (m <= n))) n)
T * / c= c<= cBIT0 f0 cBIT0 b0 c<= f0 b0 f1
+ ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) |- ((((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0
+ |- (((!p'. (!q'. ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 b1 c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 c==> b0 b1 * / ! c==> c= c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 b1 c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 c==> b0 b1 f4 * / ! c==> c= c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 b1 c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 c==> b0 b1 f4
+ |- ((FINITE EMPTY) = T)
T c= cFINITE part cEMPTY cT
+ (~ ((((real_add (a $ i)) ((real_add (b $ i)) (c $ i))) = (y $ i)) ==> (((real_sub ((real_sub ((real_sub (y $ i)) (a $ i))) (b $ i))) (c $ i)) = (real_of_num (NUMERAL _0))))) |- ((~ ((((real_add (a $ i)) ((real_add (b $ i)) (c $ i))) = (y $ i)) ==> (((real_sub ((real_sub ((real_sub (y $ i)) (a $ i))) (b $ i))) (c $ i)) = (real_of_num (NUMERAL _0))))) /\ F)
T c==> c~ c==> c= creal_add c$ f0 f1 creal_add c$ f2 f1 c$ f3 f1 c$ f4 f1 c= creal_sub creal_sub creal_sub c$ f4 f1 c$ f0 f1 c$ f2 f1 c$ f3 f1 creal_of_num cNUMERAL c_0 c/\ c~ c==> c= creal_add c$ f0 f1 creal_add c$ f2 f1 c$ f3 f1 c$ f4 f1 c= creal_sub creal_sub creal_sub c$ f4 f1 c$ f0 f1 c$ f2 f1 c$ f3 f1 creal_of_num cNUMERAL c_0 cF
- |- (((NUMERAL n) > (NUMERAL m)) = (n > m))
T c= c> cNUMERAL f0 cNUMERAL f1 c> f0 f1
+ |- (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((CARD (c INSERT EMPTY)) = t')) ==> (((~ g') ==> ((SUC (CARD (c INSERT EMPTY))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (CARD (c INSERT EMPTY))) (SUC (CARD (c INSERT EMPTY)))) = (((COND g') t') e')))))
T c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCARD * * part cINSERT f1 part cEMPTY f3 c==> c==> c~ f2 c= cSUC cCARD * * part cINSERT f1 part cEMPTY f4 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND f2 f3 f4
- |- ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))
T c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
- |- (((BIT0 m) < (BIT0 n)) = (m < n))
T c= c< cBIT0 f0 cBIT0 f1 c< f0 f1
+ (b IN (c INSERT EMPTY)) |- ((b IN (c INSERT EMPTY)) /\ ((CARD (c INSERT EMPTY)) = (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))
T c==> cIN f0 * * part cINSERT f1 part cEMPTY c/\ cIN f0 * * part cINSERT f1 part cEMPTY c= cCARD * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0
- |- ((PRE (NUMERAL n)) = (NUMERAL (PRE n)))
T c= cPRE cNUMERAL f0 cNUMERAL cPRE f0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((FINITE (b INSERT (c INSERT EMPTY))) /\ ((!y. (((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) /\ (!x. (!y. (((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))))))) ==> ((?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y)))) = (?v. (?u. (((real_lt (real_of_num (NUMERAL _0))) v) /\ ((!x. ((x IN (b INSERT (c INSERT EMPTY))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (b INSERT (c INSERT EMPTY))) u) = ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\x. ((% (u x)) x))) = ((vector_sub y) ((% v) a))))))))))
T c==> c/\ cFINITE * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ ! c==> c/\ cIN f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 creal_add b0 b1 c= c? / c/\ ! c==> cIN b1 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b0 b1 c/\ c= csum * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / c% * b0 b1 b1 f3 c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b1 b2 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / c% * b1 b2 b2 cvector_sub f3 c% b0 f2
- ((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) |- ((b IN (c INSERT EMPTY)) = T)
T c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 c= cIN f0 * * part cINSERT f1 part cEMPTY cT
+ |- ((~ ((((real_sub ((real_sub ((real_sub (y $ i)) (a $ i))) (b $ i))) (c $ i)) = (real_of_num (NUMERAL _0))) ==> (((real_add (a $ i)) ((real_add (b $ i)) (c $ i))) = (y $ i)))) ==> F)
T c==> c~ c==> c= creal_sub creal_sub creal_sub c$ f0 f1 c$ f2 f1 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c= creal_add c$ f2 f1 creal_add c$ f3 f1 c$ f4 f1 c$ f0 f1 cF
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- (((!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((CARD (c INSERT EMPTY)) = t')) ==> (((~ g') ==> ((SUC (CARD (c INSERT EMPTY))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (CARD (c INSERT EMPTY))) (SUC (CARD (c INSERT EMPTY)))) = (((COND g') t') e')))))) ==> ((\e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((CARD (c INSERT EMPTY)) = t')) ==> (((~ g') ==> ((SUC (CARD (c INSERT EMPTY))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (CARD (c INSERT EMPTY))) (SUC (CARD (c INSERT EMPTY)))) = (((COND g') t') e')))))) e')) = ((\e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((CARD (c INSERT EMPTY)) = t')) ==> (((~ g') ==> ((SUC (CARD (c INSERT EMPTY))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (CARD (c INSERT EMPTY))) (SUC (CARD (c INSERT EMPTY)))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCARD * * part cINSERT f1 part cEMPTY f3 c==> c==> c~ f2 c= cSUC cCARD * * part cINSERT f1 part cEMPTY b0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND f2 f3 b0 * / c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCARD * * part cINSERT f1 part cEMPTY f3 c==> c==> c~ f2 c= cSUC cCARD * * part cINSERT f1 part cEMPTY b0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND f2 f3 b0 f4 * / c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCARD * * part cINSERT f1 part cEMPTY f3 c==> c==> c~ f2 c= cSUC cCARD * * part cINSERT f1 part cEMPTY b0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND f2 f3 b0 f4
+ |- (((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) = (vec (NUMERAL _0))) ==> (((vector_add a) ((vector_add b) c)) = y)) /\ ((((vector_add a) ((vector_add b) c)) = y) ==> (((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) = (vec (NUMERAL _0)))))
T c/\ c==> c= cvector_sub cvector_sub cvector_sub f0 f1 f2 f3 cvec cNUMERAL c_0 c= cvector_add f1 cvector_add f2 f3 f0 c==> c= cvector_add f1 cvector_add f2 f3 f0 c= cvector_sub cvector_sub cvector_sub f0 f1 f2 f3 cvec cNUMERAL c_0
+ ((((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) ==> F), ((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c/\ creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- |- (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))
T c= c+ cBIT1 f0 cBIT1 f1 cBIT0 cSUC c+ f0 f1
- |- (((!n. ((_0 EXP (BIT1 n)) = _0)) ==> ((\n. ((_0 EXP (BIT1 n)) = _0)) n)) = ((\n. ((_0 EXP (BIT1 n)) = _0)) n))
T c= c==> ! c= cEXP c_0 cBIT1 b0 c_0 * / c= cEXP c_0 cBIT1 b0 c_0 f0 * / c= cEXP c_0 cBIT1 b0 c_0 f0
+ |- ((((~ ((((real_sub ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) c) = (real_of_num (NUMERAL _0))) = (((real_add a) ((real_add b) c)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F) ==> ((((real_sub ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) c) = (real_of_num (NUMERAL _0))) = (((real_add a) ((real_add b) c)) = (real_of_num (NUMERAL (BIT1 _0)))))) = ((((real_sub ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) c) = (real_of_num (NUMERAL _0))) = (((real_add a) ((real_add b) c)) = (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c==> c~ c= c= creal_sub creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 f2 creal_of_num cNUMERAL cBIT1 c_0 cF c= c= creal_sub creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_sub creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 f2 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = T)) ==> ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> T))) = ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> T)))
T c= c==> c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 cT c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 cT
- |- ((_0 >= (BIT0 n)) = (_0 >= n))
T c= c>= c_0 cBIT0 f0 c>= c_0 f0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ |- ((\p'. (!q'. ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f4
+ (~ ((((real_add (a $ i)) ((real_add (b $ i)) (c $ i))) = (y $ i)) ==> (((real_sub ((real_sub ((real_sub (y $ i)) (a $ i))) (b $ i))) (c $ i)) = (real_of_num (NUMERAL _0))))) |- (((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) \/ ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))))
T c==> c~ c==> c= creal_add c$ f0 f1 creal_add c$ f2 f1 c$ f3 f1 c$ f4 f1 c= creal_sub creal_sub creal_sub c$ f4 f1 c$ f0 f1 c$ f2 f1 c$ f3 f1 creal_of_num cNUMERAL c_0 c\/ c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0
- |- ((?v''. (((real_lt (real_of_num (NUMERAL _0))) v') /\ (?v'''. (((real_lt (real_of_num (NUMERAL _0))) v''') /\ ((((real_sub ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) v'')) v''') = (real_of_num (NUMERAL _0))) /\ (((vector_sub ((vector_sub ((vector_sub y) ((% v) a))) ((% v'') b))) ((% v''') c)) = (vec (NUMERAL _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) v') /\ (?v'. (?v''. (((real_lt (real_of_num (NUMERAL _0))) v'') /\ ((((real_sub ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) v')) v'') = (real_of_num (NUMERAL _0))) /\ (((vector_sub ((vector_sub ((vector_sub y) ((% v) a))) ((% v') b))) ((% v'') c)) = (vec (NUMERAL _0)))))))))
T c= c? / c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= creal_sub creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b0 b1 creal_of_num cNUMERAL c_0 c= cvector_sub cvector_sub cvector_sub f2 c% f1 f3 c% b0 f4 c% b1 f5 cvec cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= creal_sub creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b0 b1 creal_of_num cNUMERAL c_0 c= cvector_sub cvector_sub cvector_sub f2 c% f1 f3 c% b0 f4 c% b1 f5 cvec cNUMERAL c_0
+ |- (((FINITE EMPTY) /\ ((!y. (((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) /\ (!x. (!y. (((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))))))) ==> ((?u. ((!x. ((x IN (c INSERT EMPTY)) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (c INSERT EMPTY)) u) = ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) v')) /\ (((vsum (c INSERT EMPTY)) (\x. ((% (u x)) x))) = ((vector_sub ((vector_sub y) ((% v) a))) ((% v') b)))))) = (?v''. (?u. (((real_lt (real_of_num (NUMERAL _0))) v'') /\ ((!x. ((x IN EMPTY) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum EMPTY) u) = ((real_sub ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) v')) v'')) /\ (((vsum EMPTY) (\x. ((% (u x)) x))) = ((vector_sub ((vector_sub ((vector_sub y) ((% v) a))) ((% v') b))) ((% v'') c))))))))))
T c==> c/\ cFINITE part cEMPTY c/\ ! c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 creal_add b0 b1 c= c? / c/\ ! c==> cIN b1 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b0 b1 c/\ c= csum * * part cINSERT f0 part cEMPTY b0 creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c= cvsum * * part cINSERT f0 part cEMPTY / c% * b0 b1 b1 cvector_sub cvector_sub f3 c% f1 f4 c% f2 f5 c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> cIN b2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b1 b2 c/\ c= csum part cEMPTY b1 creal_sub creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 b0 c= cvsum part cEMPTY / c% * b1 b2 b2 cvector_sub cvector_sub cvector_sub f3 c% f1 f4 c% f2 f5 c% b0 f0
+ |- (((!c. ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = ((a = b) \/ ((a = c) \/ ((b = c) \/ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY))))))))) ==> ((\c. ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = ((a = b) \/ ((a = c) \/ ((b = c) \/ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY))))))))) c)) = ((\c. ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = ((a = b) \/ ((a = c) \/ ((b = c) \/ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY))))))))) c))
T c= c==> ! c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c\/ c= f0 f1 c\/ c= f0 b0 c\/ c= f1 b0 caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * / c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c\/ c= f0 f1 c\/ c= f0 b0 c\/ c= f1 b0 caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2 * / c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c\/ c= f0 f1 c\/ c= f0 b0 c\/ c= f1 b0 caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2
+ |- (((!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))) ==> ((\y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))) y)) = ((\y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))) y))
T c= c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 b0 * / c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 b0 f1 * / c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 b0 f1
+ |- (T = (FINITE EMPTY))
T c= cT cFINITE part cEMPTY
- |- (((_0 = _0) = T) /\ ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))))))
T c/\ c= c= c_0 c_0 cT c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- (((BIT0 n) - _0) = (BIT0 n))
T c= c- cBIT0 f0 c_0 cBIT0 f0
- ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) |- (((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c= c==> c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0
- |- (((!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) ==> ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n)) = ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n))
T c= c==> ! c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1 * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((\m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) m)
T * / ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 f0
- |- (((BIT1 n) <= _0) = F)
T c= c<= cBIT1 f0 c_0 cF
+ |- (FINITE (b INSERT (c INSERT EMPTY)))
T cFINITE * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))
T c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- ((\n. (((NUMERAL m) = (NUMERAL n)) = (m = n))) n)
T * / c= c= cNUMERAL f0 cNUMERAL b0 c= f0 b0 f1
- |- ((b IN (c INSERT EMPTY)) ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))
T c==> cIN f0 * * part cINSERT f1 part cEMPTY c= cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0
+ |- ((\n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) n)
T * / c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 f1
- |- (((!g'. (!t'. (!e'. (((a IN (b INSERT (c INSERT EMPTY))) = g') ==> ((g' ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = t')) ==> (((~ g') ==> ((SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((a IN (b INSERT (c INSERT EMPTY))) = g') ==> ((g' ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = t')) ==> (((~ g') ==> ((SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((a IN (b INSERT (c INSERT EMPTY))) = g') ==> ((g' ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = t')) ==> (((~ g') ==> ((SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b2 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND b0 b1 b2 * / ! ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b2 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND b0 b1 b2 f3 * / ! ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b2 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND b0 b1 b2 f3
- |- ((\n. ((EVEN (BIT0 n)) = T)) n)
T * / c= cEVEN cBIT0 b0 cT f0
- |- ((_0 + _0) = _0)
T c= c+ c_0 c_0 c_0
- |- (((!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) ==> ((\n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) n)) = ((\n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) n))
T c= c==> ! c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 * / c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 f1 * / c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 f1
- |- ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))))
T c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((_0 * (BIT0 n)) = _0)
T c= c* c_0 cBIT0 f0 c_0
- |- (((!n. (((BIT0 n) > (BIT1 m)) = (n > m))) ==> ((\n. (((BIT0 n) > (BIT1 m)) = (n > m))) n)) = ((\n. (((BIT0 n) > (BIT1 m)) = (n > m))) n))
T c= c==> ! c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 * / c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 f1 * / c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 f1
- |- (((BIT0 n) >= (BIT0 m)) = (n >= m))
T c= c>= cBIT0 f0 cBIT0 f1 c>= f0 f1
- |- (((BIT0 m) <= (BIT1 n)) = (m <= n))
T c= c<= cBIT0 f0 cBIT1 f1 c<= f0 f1
- |- (((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((vsum s) (\x. (f x))) = ((vsum s) g))) = T)
T c= c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= cvsum f0 / * f1 b0 cvsum f0 f2 cT
- |- ((\m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) m)
T * / ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 f0
- ((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) |- ((a IN (b INSERT (c INSERT EMPTY))) = T)
T c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
- |- (((!n. ((_0 * (BIT1 n)) = _0)) ==> ((\n. ((_0 * (BIT1 n)) = _0)) n)) = ((\n. ((_0 * (BIT1 n)) = _0)) n))
T c= c==> ! c= c* c_0 cBIT1 b0 c_0 * / c= c* c_0 cBIT1 b0 c_0 f0 * / c= c* c_0 cBIT1 b0 c_0 f0
+ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) |- ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) /\ (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = T))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1 cT
- |- ((\m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) m)
T * / ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 f0
+ |- (((!P. (!Q. ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x)))))) ==> ((\P. (!Q. ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x)))))) P)) = ((\P. (!Q. ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x)))))) P))
T c= c==> ! ! c= c? / c/\ b0 * b1 b2 c/\ b0 c? / * b1 b2 * / ! c= c? / c/\ b0 * b1 b2 c/\ b0 c? / * b1 b2 f0 * / ! c= c? / c/\ b0 * b1 b2 c/\ b0 c? / * b1 b2 f0
- |- ((EVEN (BIT1 n)) = F)
T c= cEVEN cBIT1 f0 cF
- |- ((\m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) m)
T * / ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 f0
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((lambdai. ((real_add (a $ i)) ((lambdai. ((real_add (b $ i)) (c $ i))) $ i))) $ i) = (y $ i)) ==> (((lambdai. ((real_sub ((lambdai. ((real_sub ((lambdai. ((real_sub (y $ i)) (a $ i))) $ i)) (b $ i))) $ i)) (c $ i))) $ i) = ((lambdai. (real_of_num (NUMERAL _0))) $ i)))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((vector_add a) ((vector_add b) c)) $ i) = (y $ i)) ==> ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i)))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ clambda / creal_add c$ f1 b0 c$ clambda / creal_add c$ f2 b1 c$ f3 b1 b0 f0 c$ f4 f0 c= c$ clambda / creal_sub c$ clambda / creal_sub c$ clambda / creal_sub c$ f4 b1 c$ f1 b1 b1 c$ f2 b1 b0 c$ f3 b0 f0 c$ clambda / creal_of_num cNUMERAL c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ cvector_add f1 cvector_add f2 f3 f0 c$ f4 f0 c= c$ cvector_sub cvector_sub cvector_sub f4 f1 f2 f3 f0 c$ cvec cNUMERAL c_0 f0
- |- ((PRE _0) = _0)
T c= cPRE c_0 c_0
- |- ((?v''. t) = t)
T c= c? / f0 f0
- |- (((!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC (NUMERAL _0)) = e')) ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = (((COND g') t') e')))))) ==> ((\e'. (((c IN EMPTY) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC (NUMERAL _0)) = e')) ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = (((COND g') t') e')))))) e')) = ((\e'. (((c IN EMPTY) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC (NUMERAL _0)) = e')) ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cNUMERAL c_0 f2 c==> c==> c~ f1 c= cSUC cNUMERAL c_0 b0 c= cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND f1 f2 b0 * / c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cNUMERAL c_0 f2 c==> c==> c~ f1 c= cSUC cNUMERAL c_0 b0 c= cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND f1 f2 b0 f3 * / c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cNUMERAL c_0 f2 c==> c==> c~ f1 c= cSUC cNUMERAL c_0 b0 c= cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND f1 f2 b0 f3
- |- ((\n. (((BIT0 m) < (BIT1 n)) = (m <= n))) n)
T * / c= c< cBIT0 f0 cBIT1 b0 c<= f0 b0 f1
- |- ((?y'. (((real_lt (real_of_num (NUMERAL _0))) y) /\ (?z. (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y') z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y') b)) ((% z) c))) = v)))))) = (((real_lt (real_of_num (NUMERAL _0))) y) /\ (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v)))))))
T c= c? / c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add f1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f1 f2 cvector_add c% b0 f3 c% b1 f4 f5 c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add f1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f1 f2 cvector_add c% b0 f3 c% b1 f4 f5
- |- ((\n. ((BIT1 n) > _0)) n)
T * / c> cBIT1 b0 c_0 f0
- |- (((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) ==> ((\m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) m)) = ((\m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) m))
T c= c==> ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 * / ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 f0 * / ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 f0
- (~ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY))))) |- ((affine_dependent (a INSERT (b INSERT (c INSERT EMPTY)))) = F)
T c==> c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- |- (((!n. ((BIT1 n) >= _0)) ==> ((\n. ((BIT1 n) >= _0)) n)) = ((\n. ((BIT1 n) >= _0)) n))
T c= c==> ! c>= cBIT1 b0 c_0 * / c>= cBIT1 b0 c_0 f0 * / c>= cBIT1 b0 c_0 f0
- |- (((!n. (((BIT1 n) > (BIT0 m)) = (n >= m))) ==> ((\n. (((BIT1 n) > (BIT0 m)) = (n >= m))) n)) = ((\n. (((BIT1 n) > (BIT0 m)) = (n >= m))) n))
T c= c==> ! c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 * / c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 f1 * / c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 f1
- |- (((~ (c IN EMPTY)) ==> ((SUC (NUMERAL _0)) = e')) ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = (((COND (c IN EMPTY)) (NUMERAL _0)) e')))
T c==> c==> c~ cIN f0 part cEMPTY c= cSUC cNUMERAL c_0 f1 c= cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND cIN f0 part cEMPTY cNUMERAL c_0 f1
+ |- (((!t'. (!e'. (((a IN (b INSERT (c INSERT EMPTY))) = g') ==> ((g' ==> ((CARD (b INSERT (c INSERT EMPTY))) = t')) ==> (((~ g') ==> ((SUC (CARD (b INSERT (c INSERT EMPTY)))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (CARD (b INSERT (c INSERT EMPTY)))) (SUC (CARD (b INSERT (c INSERT EMPTY))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((a IN (b INSERT (c INSERT EMPTY))) = g') ==> ((g' ==> ((CARD (b INSERT (c INSERT EMPTY))) = t')) ==> (((~ g') ==> ((SUC (CARD (b INSERT (c INSERT EMPTY)))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (CARD (b INSERT (c INSERT EMPTY)))) (SUC (CARD (b INSERT (c INSERT EMPTY))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((a IN (b INSERT (c INSERT EMPTY))) = g') ==> ((g' ==> ((CARD (b INSERT (c INSERT EMPTY))) = t')) ==> (((~ g') ==> ((SUC (CARD (b INSERT (c INSERT EMPTY)))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (CARD (b INSERT (c INSERT EMPTY)))) (SUC (CARD (b INSERT (c INSERT EMPTY))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> c~ f3 c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND f3 b0 b1 * / ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> c~ f3 c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND f3 b0 b1 f4 * / ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> c~ f3 c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND f3 b0 b1 f4
- |- ((_0 > (BIT0 n)) = F)
T c= c> c_0 cBIT0 f0 cF
- |- (((!n. (((BIT1 n) - _0) = (BIT1 n))) ==> ((\n. (((BIT1 n) - _0) = (BIT1 n))) n)) = ((\n. (((BIT1 n) - _0) = (BIT1 n))) n))
T c= c==> ! c= c- cBIT1 b0 c_0 cBIT1 b0 * / c= c- cBIT1 b0 c_0 cBIT1 b0 f0 * / c= c- cBIT1 b0 c_0 cBIT1 b0 f0
- |- (((!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) ==> ((\n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) n)) = ((\n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) n))
T c= c==> ! c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 * / c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1 * / c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
- |- ((\e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = t')) ==> (((~ g') ==> ((SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = (((COND g') t') e')))))) e')
T * / c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f3 c==> c==> c~ f2 c= cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND f2 f3 b0 f4
- |- ((EVEN _0) = T)
T c= cEVEN c_0 cT
+ |- (((!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) ((vector_add b) c)) $ i) = (y $ i))))) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) ((vector_add b) c)) $ i) = (y $ i)))))) = ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) ((vector_add b) c)) $ i) = (y $ i))))))
T c= c==> ! c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub cvector_sub cvector_sub f0 f1 f2 f3 b0 c$ cvec cNUMERAL c_0 b0 c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add f1 cvector_add f2 f3 b0 c$ f0 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub cvector_sub cvector_sub f0 f1 f2 f3 b0 c$ cvec cNUMERAL c_0 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add f1 cvector_add f2 f3 b0 c$ f0 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub cvector_sub cvector_sub f0 f1 f2 f3 b0 c$ cvec cNUMERAL c_0 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add f1 cvector_add f2 f3 b0 c$ f0 b0
- |- (((!m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) ==> ((\m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) m)) = ((\m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) m))
T c= c==> ! ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 * / ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 f0 * / ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 f0
- |- ((((a IN (b INSERT (c INSERT EMPTY))) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) ==> (((~ (a IN (b INSERT (c INSERT EMPTY)))) ==> ((SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) = (((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) e')))) = (((~ (a IN (b INSERT (c INSERT EMPTY)))) ==> ((SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) = (((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) e'))))
T c= c==> c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 c==> c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f3 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f3 c==> c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f3 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f3
- |- ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))))))
T c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- |- ((\n. (((BIT1 n) > (BIT1 m)) = (n > m))) n)
T * / c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 f1
- |- (((!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))) ==> ((\m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))) m)) = ((\m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))) m))
T c= c==> ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1 * / ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1 f0 * / ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1 f0
+ ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((a IN (b INSERT (c INSERT EMPTY))) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = t')) ==> (((~ (a IN (b INSERT (c INSERT EMPTY)))) ==> ((SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) = (((COND (a IN (b INSERT (c INSERT EMPTY)))) t') e'))))
T c==> c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f3 c==> c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f4 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 f4
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!n. (((BIT0 n) > _0) = (n > _0))) ==> ((\n. (((BIT0 n) > _0) = (n > _0))) n)) = ((\n. (((BIT0 n) > _0) = (n > _0))) n))
T c= c==> ! c= c> cBIT0 b0 c_0 c> b0 c_0 * / c= c> cBIT0 b0 c_0 c> b0 c_0 f0 * / c= c> cBIT0 b0 c_0 c> b0 c_0 f0
- |- ((_0 = (BIT1 n)) = F)
T c= c= c_0 cBIT1 f0 cF
- |- (((!n. (~ (_0 > (BIT0 n)))) ==> ((\n. (~ (_0 > (BIT0 n)))) n)) = ((\n. (~ (_0 > (BIT0 n)))) n))
T c= c==> ! c~ c> c_0 cBIT0 b0 * / c~ c> c_0 cBIT0 b0 f0 * / c~ c> c_0 cBIT0 b0 f0
+ |- (((!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))) ==> ((\t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))) t2)) = ((\t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))) t2))
T c= c==> ! c/\ c= c~ c/\ f0 b0 c\/ c~ f0 c~ b0 c= c~ c\/ f0 b0 c/\ c~ f0 c~ b0 * / c/\ c= c~ c/\ f0 b0 c\/ c~ f0 c~ b0 c= c~ c\/ f0 b0 c/\ c~ f0 c~ b0 f1 * / c/\ c= c~ c/\ f0 b0 c\/ c~ f0 c~ b0 c= c~ c\/ f0 b0 c/\ c~ f0 c~ b0 f1
+ |- (((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = T)) ==> ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> T))) = ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> T)))
T c= c==> c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 cT c= c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 cT c= c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV))) |- (((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV)) = F)
T c==> c~ c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV c= c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV cF
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0
+ |- ((SUC (BIT0 n)) = (BIT1 n))
T c= cSUC cBIT0 f0 cBIT1 f0
+ |- (((!p'. (!q'. ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 * / ! c==> c= c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f2 * / ! c==> c= c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f2
+ |- (((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = ((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> q')))) = ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> q'))))
T c= c==> c= c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 c==> c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f4 c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 f4 c==> c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f4 c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 f4
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 c/\ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 cF
- |- ((\n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) n)
T * / c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 f1
- |- ((\n. ((_0 = (BIT1 n)) = F)) n)
T * / c= c= c_0 cBIT1 b0 cF f0
+ |- (((~ ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV))) ==> ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = e')) ==> ((((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV))) EMPTY) e')))
T c==> c==> c~ c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 f3 c= * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * * * part cCOND c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV part cEMPTY f3
- |- ((\n. (((BIT1 n) - _0) = (BIT1 n))) n)
T * / c= c- cBIT1 b0 c_0 cBIT1 b0 f0
- |- (((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) ==> ((\m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) m)) = ((\m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) m))
T c= c==> ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
+ |- ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))))))
T c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0
- |- ((\n. ((BIT1 n) >= _0)) n)
T * / c>= cBIT1 b0 c_0 f0
+ |- (((!t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((CARD EMPTY) = t')) ==> (((~ g') ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (c IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((CARD EMPTY) = t')) ==> (((~ g') ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (c IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((CARD EMPTY) = t')) ==> (((~ g') ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (c IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cCARD part cEMPTY b0 c==> c==> c~ f1 c= cSUC cCARD part cEMPTY b1 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND f1 b0 b1 * / ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cCARD part cEMPTY b0 c==> c==> c~ f1 c= cSUC cCARD part cEMPTY b1 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND f1 b0 b1 f2 * / ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cCARD part cEMPTY b0 c==> c==> c~ f1 c= cSUC cCARD part cEMPTY b1 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND f1 b0 b1 f2
- |- ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m)
T * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0
+ |- (((!p'. (!q'. ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 * / ! c==> c= c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f4 * / ! c==> c= c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f4
- |- (((BIT0 n) > (BIT0 m)) = (n > m))
T c= c> cBIT0 f0 cBIT0 f1 c> f0 f1
+ |- ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))
T c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ |- ((\q'. ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 f2 c==> c==> f2 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f2 b0 f3
- |- ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n)
T * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1
+ |- ((((c IN EMPTY) ==> ((CARD EMPTY) = (NUMERAL _0))) ==> (((~ (c IN EMPTY)) ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (c IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND (c IN EMPTY)) (NUMERAL _0)) e')))) = (((~ (c IN EMPTY)) ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (c IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND (c IN EMPTY)) (NUMERAL _0)) e'))))
T c= c==> c==> cIN f0 part cEMPTY c= cCARD part cEMPTY cNUMERAL c_0 c==> c==> c~ cIN f0 part cEMPTY c= cSUC cCARD part cEMPTY f1 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND cIN f0 part cEMPTY cNUMERAL c_0 f1 c==> c==> c~ cIN f0 part cEMPTY c= cSUC cCARD part cEMPTY f1 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND cIN f0 part cEMPTY cNUMERAL c_0 f1
- |- (((!m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) /\ (((_0 < _0) = F) /\ ((!n. (((BIT0 n) < _0) = F)) /\ ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))))))))) /\ (((!m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) /\ ((_0 >= _0) /\ ((!n. ((_0 >= (BIT0 n)) = (_0 >= n))) /\ ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))))))) /\ (((!m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) /\ ((~ (_0 > _0)) /\ ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))))) /\ ((!m. (!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n))))) /\ (((_0 - _0) = _0) /\ ((!n. ((_0 - (BIT0 n)) = _0)) /\ ((!n. ((_0 - (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))))))))))))))))
T c/\ c/\ ! ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 c/\ c= c< c_0 c_0 cF c/\ ! c= c< cBIT0 b0 c_0 cF c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1 c/\ c/\ ! ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 c/\ c>= c_0 c_0 c/\ ! c= c>= c_0 cBIT0 b0 c>= c_0 b0 c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0 c/\ c/\ ! ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 c/\ c~ c> c_0 c_0 c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 c/\ ! ! c= c- cNUMERAL b0 cNUMERAL b1 cNUMERAL c- b0 b1 c/\ c= c- c_0 c_0 c_0 c/\ ! c= c- c_0 cBIT0 b0 c_0 c/\ ! c= c- c_0 cBIT1 b0 c_0 c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
- |- ((\n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))) n)
T * / c= cEXP cNUMERAL f0 cNUMERAL b0 cNUMERAL cEXP f0 b0 f1
- |- ((\g'. (!t'. (!e'. ((((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV)) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = e')) ==> ((((COND ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV b0 c==> c==> b0 c= part cEMPTY b1 c==> c==> c~ b0 c= * part cGSPEC / c? / cSETSPEC b3 c? / c/\ ! c==> cIN b6 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b5 b6 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b5 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b5 b6 b6 b4 b4 b2 c= * * * part cCOND c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b3 c? / c/\ ! c==> cIN b6 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b5 b6 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b5 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b5 b6 b6 b4 b4 * * * part cCOND b0 b1 b2 f3
+ |- ((\s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))) s)
T * / c==> cFINITE b0 c= cCARD * * part cINSERT f0 b0 cCOND cIN f0 b0 cCARD b0 cSUC cCARD b0 f1
+ |- ((\t'. (!e'. (((a IN (b INSERT (c INSERT EMPTY))) = g') ==> ((g' ==> ((CARD (b INSERT (c INSERT EMPTY))) = t')) ==> (((~ g') ==> ((SUC (CARD (b INSERT (c INSERT EMPTY)))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (CARD (b INSERT (c INSERT EMPTY)))) (SUC (CARD (b INSERT (c INSERT EMPTY))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> c~ f3 c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND f3 b0 b1 f4
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) ==> ((\m. (!n. (((BIT0 m) = (BIT1 n)) = F))) m)) = ((\m. (!n. (((BIT0 m) = (BIT1 n)) = F))) m))
T c= c==> ! ! c= c= cBIT0 b0 cBIT1 b1 cF * / ! c= c= cBIT0 b0 cBIT1 b1 cF f0 * / ! c= c= cBIT0 b0 cBIT1 b1 cF f0
+ |- ((FINITE (b INSERT (c INSERT EMPTY))) /\ ((!y. (((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) /\ (!x. (!y. (((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))))
T c/\ cFINITE * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ ! c==> c/\ cIN f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 creal_add b0 b1
+ |- ((((~ ((((real_sub ((real_sub ((real_sub (y $ i)) (a $ i))) (b $ i))) (c $ i)) = (real_of_num (NUMERAL _0))) ==> (((real_add (a $ i)) ((real_add (b $ i)) (c $ i))) = (y $ i)))) ==> F) ==> ((((real_sub ((real_sub ((real_sub (y $ i)) (a $ i))) (b $ i))) (c $ i)) = (real_of_num (NUMERAL _0))) ==> (((real_add (a $ i)) ((real_add (b $ i)) (c $ i))) = (y $ i)))) = ((((real_sub ((real_sub ((real_sub (y $ i)) (a $ i))) (b $ i))) (c $ i)) = (real_of_num (NUMERAL _0))) ==> (((real_add (a $ i)) ((real_add (b $ i)) (c $ i))) = (y $ i))))
T c= c==> c==> c~ c==> c= creal_sub creal_sub creal_sub c$ f0 f1 c$ f2 f1 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c= creal_add c$ f2 f1 creal_add c$ f3 f1 c$ f4 f1 c$ f0 f1 cF c==> c= creal_sub creal_sub creal_sub c$ f0 f1 c$ f2 f1 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c= creal_add c$ f2 f1 creal_add c$ f3 f1 c$ f4 f1 c$ f0 f1 c==> c= creal_sub creal_sub creal_sub c$ f0 f1 c$ f2 f1 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c= creal_add c$ f2 f1 creal_add c$ f3 f1 c$ f4 f1 c$ f0 f1
- |- (((ODD _0) = F) /\ ((!n. ((ODD (BIT0 n)) = F)) /\ (!n. ((ODD (BIT1 n)) = T))))
T c/\ c= cODD c_0 cF c/\ ! c= cODD cBIT0 b0 cF ! c= cODD cBIT1 b0 cT
- |- (((!n. (((BIT1 n) > (BIT1 m)) = (n > m))) ==> ((\n. (((BIT1 n) > (BIT1 m)) = (n > m))) n)) = ((\n. (((BIT1 n) > (BIT1 m)) = (n > m))) n))
T c= c==> ! c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 * / c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 f1 * / c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 f1
- ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV)) |- (((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV)) /\ (EMPTY = EMPTY))
T c==> c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV c/\ c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV c= part cEMPTY part cEMPTY
+ |- ((((COND (c IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))
T c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0
+ |- (!a. (!b. (!c. (((~ (a = b)) /\ ((~ (a = c)) /\ ((~ (b = c)) /\ (~ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY)))))))) ==> ((interior ((hull convex) (a INSERT (b INSERT (c INSERT EMPTY))))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v)))))))))
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f1 f2 c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part cinterior * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1
- |- ((~ (_0 > _0)) /\ ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))))
T c/\ c~ c> c_0 c_0 c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
- |- (((~ (_0 >= (BIT1 n))) ==> ((_0 >= (BIT1 n)) = F)) = ((_0 >= (BIT1 n)) = F))
T c= c==> c~ c>= c_0 cBIT1 f0 c= c>= c_0 cBIT1 f0 cF c= c>= c_0 cBIT1 f0 cF
+ (~ (a = b)), (~ (a = c)), ((~ (a = c)) /\ ((~ (b = c)) /\ (~ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY))))))) |- ((interior ((hull convex) (a INSERT (b INSERT (c INSERT EMPTY))))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v)))))
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c/\ c~ c= f0 f2 c/\ c~ c= f1 f2 c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part cinterior * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1
+ |- ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))
T c= cSUC cNUMERAL f0 cNUMERAL cSUC f0
- |- (((BIT0 n) >= _0) = T)
T c= c>= cBIT0 f0 c_0 cT
+ |- (((a IN (b INSERT (c INSERT EMPTY))) = g') ==> ((g' ==> ((CARD (b INSERT (c INSERT EMPTY))) = t')) ==> (((~ g') ==> ((SUC (CARD (b INSERT (c INSERT EMPTY)))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (CARD (b INSERT (c INSERT EMPTY)))) (SUC (CARD (b INSERT (c INSERT EMPTY))))) = (((COND g') t') e')))))
T c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> c==> c~ f3 c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND f3 f4 f5
- |- ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))))
T c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
+ |- ((\e'. (((a IN (b INSERT (c INSERT EMPTY))) = g') ==> ((g' ==> ((CARD (b INSERT (c INSERT EMPTY))) = t')) ==> (((~ g') ==> ((SUC (CARD (b INSERT (c INSERT EMPTY)))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (CARD (b INSERT (c INSERT EMPTY)))) (SUC (CARD (b INSERT (c INSERT EMPTY))))) = (((COND g') t') e')))))) e')
T * / c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> c==> c~ f3 c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND f3 f4 b0 f5
- |- (((!n. (((BIT1 n) = _0) = F)) ==> ((\n. (((BIT1 n) = _0) = F)) n)) = ((\n. (((BIT1 n) = _0) = F)) n))
T c= c==> ! c= c= cBIT1 b0 c_0 cF * / c= c= cBIT1 b0 c_0 cF f0 * / c= c= cBIT1 b0 c_0 cF f0
- ((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) |- (T = (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)))
T c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 c= cT c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4
+ |- (((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = ((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)))) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> q')))) = ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> q'))))
T c= c==> c= c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 c==> c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 f5 c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 f5 c==> c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 f5 c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 f5
- |- ((((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) = (x IN (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (u x)) = q')) ==> (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x))) = ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> q')))) = (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (u x)) = q')) ==> (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x))) = ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> q'))))
T c= c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= creal_lt creal_of_num cNUMERAL c_0 * f4 f0 f5 c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * f4 f0 c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= creal_lt creal_of_num cNUMERAL c_0 * f4 f0 f5 c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * f4 f0 c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5
- |- ((\m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) m)
T * / ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 f0
- |- (((!m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) /\ ((~ (_0 > _0)) /\ ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))))) /\ ((!m. (!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n))))) /\ (((_0 - _0) = _0) /\ ((!n. ((_0 - (BIT0 n)) = _0)) /\ ((!n. ((_0 - (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))))))))))))))
T c/\ c/\ ! ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 c/\ c~ c> c_0 c_0 c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 c/\ ! ! c= c- cNUMERAL b0 cNUMERAL b1 cNUMERAL c- b0 b1 c/\ c= c- c_0 c_0 c_0 c/\ ! c= c- c_0 cBIT0 b0 c_0 c/\ ! c= c- c_0 cBIT1 b0 c_0 c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (((!x. (~ (x IN EMPTY))) ==> ((\x. (~ (x IN EMPTY))) x)) = ((\x. (~ (x IN EMPTY))) x))
T c= c==> ! c~ cIN b0 part cEMPTY * / c~ cIN b0 part cEMPTY f0 * / c~ cIN b0 part cEMPTY f0
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((\t'. (!e'. ((((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV)) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = e')) ==> ((((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV f3 c==> c==> f3 c= part cEMPTY b0 c==> c==> c~ f3 c= * part cGSPEC / c? / cSETSPEC b2 c? / c/\ ! c==> cIN b5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b4 b5 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b4 b5 b5 b3 b3 b1 c= * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c? / c/\ ! c==> cIN b5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b4 b5 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b4 b5 b5 b3 b3 * * * part cCOND f3 b0 b1 f4
+ |- ((FINITE (c INSERT EMPTY)) /\ ((!y. (((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) /\ (!x. (!y. (((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))))
T c/\ cFINITE * * part cINSERT f0 part cEMPTY c/\ ! c==> c/\ cIN f1 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN f1 * * part cINSERT f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 creal_add b0 b1
- |- (((!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) ==> ((\n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) n)) = ((\n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) n))
T c= c==> ! c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 * / c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 f1 * / c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 f1
+ |- ((\s. ((~ (affine_dependent s)) ==> ((interior ((hull convex) s)) = (((COND ((CARD s) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN s) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum s) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum s) (\x. ((% (u x)) x))) = y))))) y)))))))) s)
T * / c==> c~ caffine_dependent b0 c= * part cinterior * * part chull part cconvex b0 * * * part cCOND c<= cCARD b0 cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c? / c/\ ! c==> cIN b4 b0 creal_lt creal_of_num cNUMERAL c_0 * b3 b4 c/\ c= csum b0 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum b0 / c% * b3 b4 b4 b2 b2 f0
- |- (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))))))))))))
T c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- |- (((((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV)) = ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) ==> ((((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV)) ==> (EMPTY = t')) ==> (((~ ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) ==> ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = e')) ==> ((((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) t') e'))))) = ((((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV)) ==> (EMPTY = t')) ==> (((~ ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) ==> ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = e')) ==> ((((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) t') e')))))
T c= c==> c= c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV c==> c==> c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV c= part cEMPTY f3 c==> c==> c~ c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 f4 c= * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV f3 f4 c==> c==> c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV c= part cEMPTY f3 c==> c==> c~ c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 f4 c= * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV f3 f4
+ |- (((!q'. ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))) ==> ((\q'. ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))) q')) = ((\q'. ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 f4 c==> c==> f4 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f4 b0 * / c==> c= c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 f4 c==> c==> f4 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f4 b0 f5 * / c==> c= c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 f4 c==> c==> f4 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f4 b0 f5
+ |- ((((a IN (b INSERT (c INSERT EMPTY))) ==> ((CARD (b INSERT (c INSERT EMPTY))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) ==> (((~ (a IN (b INSERT (c INSERT EMPTY)))) ==> ((SUC (CARD (b INSERT (c INSERT EMPTY)))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (CARD (b INSERT (c INSERT EMPTY)))) (SUC (CARD (b INSERT (c INSERT EMPTY))))) = (((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) e')))) = (((~ (a IN (b INSERT (c INSERT EMPTY)))) ==> ((SUC (CARD (b INSERT (c INSERT EMPTY)))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (CARD (b INSERT (c INSERT EMPTY)))) (SUC (CARD (b INSERT (c INSERT EMPTY))))) = (((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) e'))))
T c= c==> c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 c==> c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f3 c==> c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f3
- |- (((!n. (((BIT0 n) = _0) = (n = _0))) ==> ((\n. (((BIT0 n) = _0) = (n = _0))) n)) = ((\n. (((BIT0 n) = _0) = (n = _0))) n))
T c= c==> ! c= c= cBIT0 b0 c_0 c= b0 c_0 * / c= c= cBIT0 b0 c_0 c= b0 c_0 f0 * / c= c= cBIT0 b0 c_0 c= b0 c_0 f0
+ |- (((!e. (((real_lt (real_of_num (NUMERAL _0))) ((real_div e) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_lt (real_of_num (NUMERAL _0))) e))) ==> ((\e. (((real_lt (real_of_num (NUMERAL _0))) ((real_div e) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_lt (real_of_num (NUMERAL _0))) e))) e)) = ((\e. (((real_lt (real_of_num (NUMERAL _0))) ((real_div e) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_lt (real_of_num (NUMERAL _0))) e))) e))
T c= c==> ! c= creal_lt creal_of_num cNUMERAL c_0 creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_lt creal_of_num cNUMERAL c_0 b0 * / c= creal_lt creal_of_num cNUMERAL c_0 creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_lt creal_of_num cNUMERAL c_0 b0 f0 * / c= creal_lt creal_of_num cNUMERAL c_0 creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_lt creal_of_num cNUMERAL c_0 b0 f0
- |- (((BIT0 n) > (BIT1 m)) = (n > m))
T c= c> cBIT0 f0 cBIT1 f1 c> f0 f1
+ |- (((!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) ((vector_add b) c)) $ i) = (y $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i))))) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) ((vector_add b) c)) $ i) = (y $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i)))))) = ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) ((vector_add b) c)) $ i) = (y $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i))))))
T c= c==> ! c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add f0 cvector_add f1 f2 b0 c$ f3 b0 c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub cvector_sub cvector_sub f3 f0 f1 f2 b0 c$ cvec cNUMERAL c_0 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add f0 cvector_add f1 f2 b0 c$ f3 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub cvector_sub cvector_sub f3 f0 f1 f2 b0 c$ cvec cNUMERAL c_0 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add f0 cvector_add f1 f2 b0 c$ f3 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub cvector_sub cvector_sub f3 f0 f1 f2 b0 c$ cvec cNUMERAL c_0 b0
+ |- ((\n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) n)
T * / c= cSUC cBIT1 b0 cBIT0 cSUC b0 f0
- |- (((!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = t')) ==> (((~ g') ==> ((SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = t')) ==> (((~ g') ==> ((SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = t')) ==> (((~ g') ==> ((SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b0 c==> c==> c~ f2 c= cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b1 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND f2 b0 b1 * / ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b0 c==> c==> c~ f2 c= cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b1 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND f2 b0 b1 f3 * / ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b0 c==> c==> c~ f2 c= cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b1 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND f2 b0 b1 f3
- |- (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))))))))
T c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\n. (((BIT1 n) >= (BIT0 m)) = (n >= m))) n)
T * / c= c>= cBIT1 b0 cBIT0 f0 c>= b0 f0 f1
- |- (((!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) ==> ((\n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) n)) = ((\n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) n))
T c= c==> ! c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 * / c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 f1 * / c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 f1
- |- (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n)))
T c= c+ cBIT0 f0 cBIT0 f1 cBIT0 c+ f0 f1
- |- (((!n. ((_0 + (BIT1 n)) = (BIT1 n))) ==> ((\n. ((_0 + (BIT1 n)) = (BIT1 n))) n)) = ((\n. ((_0 + (BIT1 n)) = (BIT1 n))) n))
T c= c==> ! c= c+ c_0 cBIT1 b0 cBIT1 b0 * / c= c+ c_0 cBIT1 b0 cBIT1 b0 f0 * / c= c+ c_0 cBIT1 b0 cBIT1 b0 f0
+ |- ((~ ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV))) ==> ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))))
T c==> c~ c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1
- |- ((\n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) n)
T * / c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
- |- ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))))
T c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- ((\q'. ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 f4 c==> c==> f4 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f4 b0 f5
- |- ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n)
T * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0
- |- (((!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) ==> ((\n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) n)) = ((\n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) n))
T c= c==> ! c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 * / c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1 * / c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
- ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0))) = ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0
+ |- ((((~ (b IN (c INSERT EMPTY))) ==> ((SUC (CARD (c INSERT EMPTY))) = (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) ==> ((((COND (b IN (c INSERT EMPTY))) (CARD (c INSERT EMPTY))) (SUC (CARD (c INSERT EMPTY)))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) = ((((COND (b IN (c INSERT EMPTY))) (CARD (c INSERT EMPTY))) (SUC (CARD (c INSERT EMPTY)))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))))
T c= c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cSUC cCARD * * part cINSERT f1 part cEMPTY cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0
+ |- ((\t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2)))))) t1)
T * / ! c/\ c= c~ c/\ b0 b1 c\/ c~ b0 c~ b1 c= c~ c\/ b0 b1 c/\ c~ b0 c~ b1 f0
- ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- (~ (b = c)) |- (((~ (c = b)) ==> ((c = b) = F)) = ((c = b) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i)) ==> ((((vector_add a) ((vector_add b) c)) $ i) = (y $ i)))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) ((vector_add b) c)) $ i) = (y $ i))))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) ((vector_add b) c)) $ i) = (y $ i)))))
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ cvector_sub cvector_sub cvector_sub f1 f2 f3 f4 f0 c$ cvec cNUMERAL c_0 f0 c= c$ cvector_add f2 cvector_add f3 f4 f0 c$ f1 f0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_sub cvector_sub cvector_sub f1 f2 f3 f4 f0 c$ cvec cNUMERAL c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add f2 cvector_add f3 f4 f0 c$ f1 f0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_sub cvector_sub cvector_sub f1 f2 f3 f4 f0 c$ cvec cNUMERAL c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add f2 cvector_add f3 f4 f0 c$ f1 f0
+ |- (((!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) ==> ((\n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) n)) = ((\n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) n))
T c= c==> ! c= cSUC cBIT1 b0 cBIT0 cSUC b0 * / c= cSUC cBIT1 b0 cBIT0 cSUC b0 f0 * / c= cSUC cBIT1 b0 cBIT0 cSUC b0 f0
- |- ((((COND ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))))
T c= * * * part cCOND c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * * * part cCOND c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1
- |- ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (u x)) = ((real_lt (real_of_num (NUMERAL _0))) (u x))))
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= creal_lt creal_of_num cNUMERAL c_0 * f4 f0 creal_lt creal_of_num cNUMERAL c_0 * f4 f0
- |- ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))))))))
T c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
+ |- ((!c. (((~ (a = b)) /\ ((~ (a = c)) /\ ((~ (b = c)) /\ (~ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY)))))))) ==> ((interior ((hull convex) (a INSERT (b INSERT (c INSERT EMPTY))))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v))))))) = T)
T c= ! c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 b0 c/\ c~ c= f1 b0 c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= * part cinterior * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b3 f0 cvector_add c% b4 f1 c% b5 b0 b2 b2 cT
- |- ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))
T c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ (~ (b = c)) |- ((b = c) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
+ |- ((((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))))
T c= * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * * * part cCOND c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1
- |- (((!n. (((BIT0 m) < (BIT0 n)) = (m < n))) ==> ((\n. (((BIT0 m) < (BIT0 n)) = (m < n))) n)) = ((\n. (((BIT0 m) < (BIT0 n)) = (m < n))) n))
T c= c==> ! c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 * / c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 f1 * / c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 f1
+ |- ((\g'. (!t'. (!e'. (((a IN (b INSERT (c INSERT EMPTY))) = g') ==> ((g' ==> ((CARD (b INSERT (c INSERT EMPTY))) = t')) ==> (((~ g') ==> ((SUC (CARD (b INSERT (c INSERT EMPTY)))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (CARD (b INSERT (c INSERT EMPTY)))) (SUC (CARD (b INSERT (c INSERT EMPTY))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c==> c==> c~ b0 c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND b0 b1 b2 f3
- ((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) |- ((real_lt (real_of_num (NUMERAL _0))) y)
T c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 creal_lt creal_of_num cNUMERAL c_0 f4
- ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0
- |- ((\n. (((BIT0 n) = _0) = (n = _0))) n)
T * / c= c= cBIT0 b0 c_0 c= b0 c_0 f0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
- ((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) |- (((real_lt (real_of_num (NUMERAL _0))) y) = T)
T c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 c= creal_lt creal_of_num cNUMERAL c_0 f4 cT
- |- ((((~ ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) ==> ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))))) ==> ((((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))))) = ((((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))))))
T c= c==> c==> c~ c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 c= * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 c= * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c= c==> c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0
- |- ((\m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) m)
T * / ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 f0
+ |- ((\q'. ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 f3 c==> c==> f3 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 b0 f4
- |- (((NUMERAL n) >= (NUMERAL m)) = (n >= m))
T c= c>= cNUMERAL f0 cNUMERAL f1 c>= f0 f1
- |- (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n)))
T c= c- cBIT0 f0 cBIT0 f1 cBIT0 c- f0 f1
- |- (((!n. (((BIT1 m) = (BIT0 n)) = F)) ==> ((\n. (((BIT1 m) = (BIT0 n)) = F)) n)) = ((\n. (((BIT1 m) = (BIT0 n)) = F)) n))
T c= c==> ! c= c= cBIT1 f0 cBIT0 b0 cF * / c= c= cBIT1 f0 cBIT0 b0 cF f1 * / c= c= cBIT1 f0 cBIT0 b0 cF f1
- |- ((\n. ((_0 EXP (BIT1 n)) = _0)) n)
T * / c= cEXP c_0 cBIT1 b0 c_0 f0
+ ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) |- (((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 c/\ c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 cF
- |- (((!n. (((BIT0 n) >= (BIT0 m)) = (n >= m))) ==> ((\n. (((BIT0 n) >= (BIT0 m)) = (n >= m))) n)) = ((\n. (((BIT0 n) >= (BIT0 m)) = (n >= m))) n))
T c= c==> ! c= c>= cBIT0 b0 cBIT0 f0 c>= b0 f0 * / c= c>= cBIT0 b0 cBIT0 f0 c>= b0 f0 f1 * / c= c>= cBIT0 b0 cBIT0 f0 c>= b0 f0 f1
- |- ((_0 EXP (BIT1 n)) = _0)
T c= cEXP c_0 cBIT1 f0 c_0
- |- ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (((% (u x)) x) = (g x)))) ==> (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = ((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) g)))
T c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c% * f3 b0 b0 * f4 b0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * f3 b0 b0 cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4
- |- (((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))))
T c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ |- ((((real_sub ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) c) = (real_of_num (NUMERAL _0))) = (((real_add a) ((real_add b) c)) = (real_of_num (NUMERAL (BIT1 _0)))))
T c= c= creal_sub creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 f2 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))
T c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
+ |- (((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 cF
- |- ((\n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) n)
T * / c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) |- (((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = T)) = (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = T))
T c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 c= c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 cT c= creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 cT
- |- (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = ((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))))
T c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * f3 b0 b0 cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * f3 b0 b0
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC (NUMERAL _0)) = e')) ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC (NUMERAL _0)) = e')) ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC (NUMERAL _0)) = e')) ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cNUMERAL c_0 b0 c==> c==> c~ f1 c= cSUC cNUMERAL c_0 b1 c= cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND f1 b0 b1 * / ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cNUMERAL c_0 b0 c==> c==> c~ f1 c= cSUC cNUMERAL c_0 b1 c= cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND f1 b0 b1 f2 * / ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cNUMERAL c_0 b0 c==> c==> c~ f1 c= cSUC cNUMERAL c_0 b1 c= cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND f1 b0 b1 f2
- ((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) |- ((c IN EMPTY) = T)
T c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 c= cIN f0 part cEMPTY cT
- |- ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))
T c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((~ (a IN (b INSERT (c INSERT EMPTY)))) ==> ((SUC (CARD (b INSERT (c INSERT EMPTY)))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (CARD (b INSERT (c INSERT EMPTY)))) (SUC (CARD (b INSERT (c INSERT EMPTY))))) = (((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) e')))
T c==> c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f3
+ |- ((((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- (a IN (b INSERT (c INSERT EMPTY))) |- ((a IN (b INSERT (c INSERT EMPTY))) = T)
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
- |- (((!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))) ==> ((\m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))) m)) = ((\m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))) m))
T c= c==> ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1 * / ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1 f0 * / ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1 f0
- |- ((\n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n)))) n)
T * / c= c- cNUMERAL f0 cNUMERAL b0 cNUMERAL c- f0 b0 f1
+ |- ((?u. (((real_lt (real_of_num (NUMERAL _0))) v') /\ ((!x. ((x IN (c INSERT EMPTY)) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (c INSERT EMPTY)) u) = ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) v')) /\ (((vsum (c INSERT EMPTY)) (\x. ((% (u x)) x))) = ((vector_sub ((vector_sub y) ((% v) a))) ((% v') b))))))) = (((real_lt (real_of_num (NUMERAL _0))) v') /\ (?u. ((!x. ((x IN (c INSERT EMPTY)) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (c INSERT EMPTY)) u) = ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) v')) /\ (((vsum (c INSERT EMPTY)) (\x. ((% (u x)) x))) = ((vector_sub ((vector_sub y) ((% v) a))) ((% v') b))))))))
T c= c? / c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ ! c==> cIN b1 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b0 b1 c/\ c= csum * * part cINSERT f1 part cEMPTY b0 creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f0 c= cvsum * * part cINSERT f1 part cEMPTY / c% * b0 b1 b1 cvector_sub cvector_sub f3 c% f2 f4 c% f0 f5 c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c? / c/\ ! c==> cIN b1 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b0 b1 c/\ c= csum * * part cINSERT f1 part cEMPTY b0 creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f0 c= cvsum * * part cINSERT f1 part cEMPTY / c% * b0 b1 b1 cvector_sub cvector_sub f3 c% f2 f4 c% f0 f5
- |- ((\n. ((PRE (NUMERAL n)) = (NUMERAL (PRE n)))) n)
T * / c= cPRE cNUMERAL b0 cNUMERAL cPRE b0 f0
- |- (((!n. ((_0 <= (BIT0 n)) = T)) ==> ((\n. ((_0 <= (BIT0 n)) = T)) n)) = ((\n. ((_0 <= (BIT0 n)) = T)) n))
T c= c==> ! c= c<= c_0 cBIT0 b0 cT * / c= c<= c_0 cBIT0 b0 cT f0 * / c= c<= c_0 cBIT0 b0 cT f0
- |- (((!n. ((_0 < (BIT0 n)) = (_0 < n))) ==> ((\n. ((_0 < (BIT0 n)) = (_0 < n))) n)) = ((\n. ((_0 < (BIT0 n)) = (_0 < n))) n))
T c= c==> ! c= c< c_0 cBIT0 b0 c< c_0 b0 * / c= c< c_0 cBIT0 b0 c< c_0 b0 f0 * / c= c< c_0 cBIT0 b0 c< c_0 b0 f0
- (~ (a IN (b INSERT (c INSERT EMPTY)))) |- ((~ (a IN (b INSERT (c INSERT EMPTY)))) /\ ((SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) = (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))))
T c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ ((((lambdai. ((real_sub ((lambdai. ((real_sub ((lambdai. ((real_sub (y $ i)) (a $ i))) $ i)) (b $ i))) $ i)) (c $ i))) $ i) = ((lambdai. (real_of_num (NUMERAL _0))) $ i)) ==> (((lambdai. ((real_add (a $ i)) ((lambdai. ((real_add (b $ i)) (c $ i))) $ i))) $ i) = (y $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ clambda / creal_sub c$ clambda / creal_sub c$ clambda / creal_sub c$ f1 b1 c$ f2 b1 b1 c$ f3 b1 b0 c$ f4 b0 f0 c$ clambda / creal_of_num cNUMERAL c_0 f0 c= c$ clambda / creal_add c$ f2 b0 c$ clambda / creal_add c$ f3 b1 c$ f4 b1 b0 f0 c$ f1 f0
- |- (((BIT1 n) = _0) = F)
T c= c= cBIT1 f0 c_0 cF
- |- ((\e'. (((c IN EMPTY) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC (NUMERAL _0)) = e')) ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = (((COND g') t') e')))))) e')
T * / c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cNUMERAL c_0 f2 c==> c==> c~ f1 c= cSUC cNUMERAL c_0 b0 c= cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND f1 f2 b0 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c/\ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 cF
- |- (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))
T c= c- cBIT0 f0 cBIT1 f1 cPRE cBIT0 c- f0 f1
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?v. (((real_lt (real_of_num (NUMERAL _0))) v) /\ (?v'. (((real_lt (real_of_num (NUMERAL _0))) v') /\ (?v''. (((real_lt (real_of_num (NUMERAL _0))) v'') /\ ((((real_sub ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) v')) v'') = (real_of_num (NUMERAL _0))) /\ (((vector_sub ((vector_sub ((vector_sub y) ((% v) a))) ((% v') b))) ((% v'') c)) = (vec (NUMERAL _0))))))))))) y)))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (?y. (((real_lt (real_of_num (NUMERAL _0))) y) /\ (?z. (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v)))))
T c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_sub creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b3 b4 creal_of_num cNUMERAL c_0 c= cvector_sub cvector_sub cvector_sub b1 c% b2 f0 c% b3 f1 c% b4 f2 cvec cNUMERAL c_0 b1 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1
- |- ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))))
T c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- |- ((\m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))) m)
T * / ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1 f0
- |- (((c IN EMPTY) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC (NUMERAL _0)) = e')) ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = (((COND g') t') e')))))
T c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cNUMERAL c_0 f2 c==> c==> c~ f1 c= cSUC cNUMERAL c_0 f3 c= cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND f1 f2 f3
- |- ((_0 < (BIT0 n)) = (_0 < n))
T c= c< c_0 cBIT0 f0 c< c_0 f0
+ |- ((\g'. (!t'. (!e'. ((((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV)) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = e')) ==> ((((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV b0 c==> c==> b0 c= part cEMPTY b1 c==> c==> c~ b0 c= * part cGSPEC / c? / cSETSPEC b3 c? / c/\ ! c==> cIN b6 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b5 b6 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b5 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b5 b6 b6 b4 b4 b2 c= * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b3 c? / c/\ ! c==> cIN b6 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b5 b6 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b5 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b5 b6 b6 b4 b4 * * * part cCOND b0 b1 b2 f3
- |- ((\m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) m)
T * / ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
+ (((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = ((\x. (((real_mul x) ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (CARD (b INSERT (c INSERT EMPTY)))) (SUC (CARD (b INSERT (c INSERT EMPTY))))) = (((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))))
T c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0
+ |- (((a IN (b INSERT (c INSERT EMPTY))) ==> ((CARD (b INSERT (c INSERT EMPTY))) = t')) ==> (((~ (a IN (b INSERT (c INSERT EMPTY)))) ==> ((SUC (CARD (b INSERT (c INSERT EMPTY)))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (CARD (b INSERT (c INSERT EMPTY)))) (SUC (CARD (b INSERT (c INSERT EMPTY))))) = (((COND (a IN (b INSERT (c INSERT EMPTY)))) t') e'))))
T c==> c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 f4
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) |- ((((((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))) ==> ((\n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))) n)) = ((\n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))) n))
T c= c==> ! c= c- cBIT0 f0 cBIT1 b0 cPRE cBIT0 c- f0 b0 * / c= c- cBIT0 f0 cBIT1 b0 cPRE cBIT0 c- f0 b0 f1 * / c= c- cBIT0 f0 cBIT1 b0 cPRE cBIT0 c- f0 b0 f1
- (c IN EMPTY) |- ((c IN EMPTY) = T)
T c==> cIN f0 part cEMPTY c= cIN f0 part cEMPTY cT
- |- ((\m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) m)
T * / ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 f0
- |- (((BIT0 n) + _0) = (BIT0 n))
T c= c+ cBIT0 f0 c_0 cBIT0 f0
+ |- ((\c. ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = ((a = b) \/ ((a = c) \/ ((b = c) \/ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY))))))))) c)
T * / c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c\/ c= f0 f1 c\/ c= f0 b0 c\/ c= f1 b0 caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2
+ |- ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q'))))
T c==> c= c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 f5 c==> c==> f5 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 f6 c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 c==> f5 f6
- |- ((\n. (((NUMERAL m) < (NUMERAL n)) = (m < n))) n)
T * / c= c< cNUMERAL f0 cNUMERAL b0 c< f0 b0 f1
- |- (((BIT1 n) > _0) = T)
T c= c> cBIT1 f0 c_0 cT
- |- ((\n. ((_0 <= (BIT1 n)) = T)) n)
T * / c= c<= c_0 cBIT1 b0 cT f0
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = ((((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((c IN EMPTY) ==> ((NUMERAL _0) = (NUMERAL _0))) ==> (((~ (c IN EMPTY)) ==> ((SUC (NUMERAL _0)) = e')) ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = (((COND (c IN EMPTY)) (NUMERAL _0)) e')))) = (((~ (c IN EMPTY)) ==> ((SUC (NUMERAL _0)) = e')) ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = (((COND (c IN EMPTY)) (NUMERAL _0)) e'))))
T c= c==> c==> cIN f0 part cEMPTY c= cNUMERAL c_0 cNUMERAL c_0 c==> c==> c~ cIN f0 part cEMPTY c= cSUC cNUMERAL c_0 f1 c= cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND cIN f0 part cEMPTY cNUMERAL c_0 f1 c==> c==> c~ cIN f0 part cEMPTY c= cSUC cNUMERAL c_0 f1 c= cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND cIN f0 part cEMPTY cNUMERAL c_0 f1
+ |- (((!P. (((?u. ((!x. ((x IN EMPTY) ==> ((P x) (u x)))) /\ ((((sum EMPTY) u) = w) /\ (((vsum EMPTY) (\x. ((% (u x)) x))) = y)))) = ((w = (real_of_num (NUMERAL _0))) /\ (y = (vec (NUMERAL _0))))) /\ (((FINITE s) /\ ((!y. (((a IN s) /\ ((P a) y)) ==> ((P a) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) /\ (!x. (!y. (((a IN s) /\ (((P a) x) /\ ((P a) y))) ==> ((P a) ((real_add x) y))))))) ==> ((?u. ((!x. ((x IN (a INSERT s)) ==> ((P x) (u x)))) /\ ((((sum (a INSERT s)) u) = w) /\ (((vsum (a INSERT s)) (\x. ((% (u x)) x))) = y)))) = (?v. (?u. (((P a) v) /\ ((!x. ((x IN s) ==> ((P x) (u x)))) /\ ((((sum s) u) = ((real_sub w) v)) /\ (((vsum s) (\x. ((% (u x)) x))) = ((vector_sub y) ((% v) a)))))))))))) ==> ((\P. (((?u. ((!x. ((x IN EMPTY) ==> ((P x) (u x)))) /\ ((((sum EMPTY) u) = w) /\ (((vsum EMPTY) (\x. ((% (u x)) x))) = y)))) = ((w = (real_of_num (NUMERAL _0))) /\ (y = (vec (NUMERAL _0))))) /\ (((FINITE s) /\ ((!y. (((a IN s) /\ ((P a) y)) ==> ((P a) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) /\ (!x. (!y. (((a IN s) /\ (((P a) x) /\ ((P a) y))) ==> ((P a) ((real_add x) y))))))) ==> ((?u. ((!x. ((x IN (a INSERT s)) ==> ((P x) (u x)))) /\ ((((sum (a INSERT s)) u) = w) /\ (((vsum (a INSERT s)) (\x. ((% (u x)) x))) = y)))) = (?v. (?u. (((P a) v) /\ ((!x. ((x IN s) ==> ((P x) (u x)))) /\ ((((sum s) u) = ((real_sub w) v)) /\ (((vsum s) (\x. ((% (u x)) x))) = ((vector_sub y) ((% v) a)))))))))))) P)) = ((\P. (((?u. ((!x. ((x IN EMPTY) ==> ((P x) (u x)))) /\ ((((sum EMPTY) u) = w) /\ (((vsum EMPTY) (\x. ((% (u x)) x))) = y)))) = ((w = (real_of_num (NUMERAL _0))) /\ (y = (vec (NUMERAL _0))))) /\ (((FINITE s) /\ ((!y. (((a IN s) /\ ((P a) y)) ==> ((P a) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) /\ (!x. (!y. (((a IN s) /\ (((P a) x) /\ ((P a) y))) ==> ((P a) ((real_add x) y))))))) ==> ((?u. ((!x. ((x IN (a INSERT s)) ==> ((P x) (u x)))) /\ ((((sum (a INSERT s)) u) = w) /\ (((vsum (a INSERT s)) (\x. ((% (u x)) x))) = y)))) = (?v. (?u. (((P a) v) /\ ((!x. ((x IN s) ==> ((P x) (u x)))) /\ ((((sum s) u) = ((real_sub w) v)) /\ (((vsum s) (\x. ((% (u x)) x))) = ((vector_sub y) ((% v) a)))))))))))) P))
T c= c==> ! c/\ c= c? / c/\ ! c==> cIN b2 part cEMPTY * * b0 b2 * b1 b2 c/\ c= csum part cEMPTY b1 f0 c= cvsum part cEMPTY / c% * b1 b2 b2 f1 c/\ c= f0 creal_of_num cNUMERAL c_0 c= f1 cvec cNUMERAL c_0 c==> c/\ cFINITE f2 c/\ ! c==> c/\ cIN f3 f2 * * b0 f3 b1 * * b0 f3 creal_div b1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN f3 f2 c/\ * * b0 f3 b1 * * b0 f3 b2 * * b0 f3 creal_add b1 b2 c= c? / c/\ ! c==> cIN b2 * * part cINSERT f3 f2 * * b0 b2 * b1 b2 c/\ c= csum * * part cINSERT f3 f2 b1 f0 c= cvsum * * part cINSERT f3 f2 / c% * b1 b2 b2 f1 c? / c? / c/\ * * b0 f3 b1 c/\ ! c==> cIN b3 f2 * * b0 b3 * b2 b3 c/\ c= csum f2 b2 creal_sub f0 b1 c= cvsum f2 / c% * b2 b3 b3 cvector_sub f1 c% b1 f3 * / c/\ c= c? / c/\ ! c==> cIN b2 part cEMPTY * * b0 b2 * b1 b2 c/\ c= csum part cEMPTY b1 f0 c= cvsum part cEMPTY / c% * b1 b2 b2 f1 c/\ c= f0 creal_of_num cNUMERAL c_0 c= f1 cvec cNUMERAL c_0 c==> c/\ cFINITE f2 c/\ ! c==> c/\ cIN f3 f2 * * b0 f3 b1 * * b0 f3 creal_div b1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN f3 f2 c/\ * * b0 f3 b1 * * b0 f3 b2 * * b0 f3 creal_add b1 b2 c= c? / c/\ ! c==> cIN b2 * * part cINSERT f3 f2 * * b0 b2 * b1 b2 c/\ c= csum * * part cINSERT f3 f2 b1 f0 c= cvsum * * part cINSERT f3 f2 / c% * b1 b2 b2 f1 c? / c? / c/\ * * b0 f3 b1 c/\ ! c==> cIN b3 f2 * * b0 b3 * b2 b3 c/\ c= csum f2 b2 creal_sub f0 b1 c= cvsum f2 / c% * b2 b3 b3 cvector_sub f1 c% b1 f3 f4 * / c/\ c= c? / c/\ ! c==> cIN b2 part cEMPTY * * b0 b2 * b1 b2 c/\ c= csum part cEMPTY b1 f0 c= cvsum part cEMPTY / c% * b1 b2 b2 f1 c/\ c= f0 creal_of_num cNUMERAL c_0 c= f1 cvec cNUMERAL c_0 c==> c/\ cFINITE f2 c/\ ! c==> c/\ cIN f3 f2 * * b0 f3 b1 * * b0 f3 creal_div b1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN f3 f2 c/\ * * b0 f3 b1 * * b0 f3 b2 * * b0 f3 creal_add b1 b2 c= c? / c/\ ! c==> cIN b2 * * part cINSERT f3 f2 * * b0 b2 * b1 b2 c/\ c= csum * * part cINSERT f3 f2 b1 f0 c= cvsum * * part cINSERT f3 f2 / c% * b1 b2 b2 f1 c? / c? / c/\ * * b0 f3 b1 c/\ ! c==> cIN b3 f2 * * b0 b3 * b2 b3 c/\ c= csum f2 b2 creal_sub f0 b1 c= cvsum f2 / c% * b2 b3 b3 cvector_sub f1 c% b1 f3 f4
+ |- ((\e'. (((c IN EMPTY) = g') ==> ((g' ==> ((CARD EMPTY) = t')) ==> (((~ g') ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (c IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND g') t') e')))))) e')
T * / c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cCARD part cEMPTY f2 c==> c==> c~ f1 c= cSUC cCARD part cEMPTY b0 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND f1 f2 b0 f3
- |- (((!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) ==> ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m)) = ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m))
T c= c==> ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0 * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0
+ |- (((~ (x IN EMPTY)) ==> ((x IN EMPTY) = F)) = ((x IN EMPTY) = F))
T c= c==> c~ cIN f0 part cEMPTY c= cIN f0 part cEMPTY cF c= cIN f0 part cEMPTY cF
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- (((!q'. ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q'))))) ==> ((\q'. ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q'))))) q')) = ((\q'. ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 f5 c==> c==> f5 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 b0 c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 c==> f5 b0 * / c==> c= c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 f5 c==> c==> f5 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 b0 c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 c==> f5 b0 f6 * / c==> c= c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 f5 c==> c==> f5 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 b0 c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 c==> f5 b0 f6
- |- ((\n. (((BIT1 n) < _0) = F)) n)
T * / c= c< cBIT1 b0 c_0 cF f0
+ ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) |- (((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c/\ c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 cF
+ ((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) |- (((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) /\ (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = T))
T c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 c/\ c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
- |- (((!e'. (((a IN (b INSERT (c INSERT EMPTY))) = g') ==> ((g' ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = t')) ==> (((~ g') ==> ((SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) = (((COND g') t') e')))))) ==> ((\e'. (((a IN (b INSERT (c INSERT EMPTY))) = g') ==> ((g' ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = t')) ==> (((~ g') ==> ((SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) = (((COND g') t') e')))))) e')) = ((\e'. (((a IN (b INSERT (c INSERT EMPTY))) = g') ==> ((g' ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = t')) ==> (((~ g') ==> ((SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f4 c==> c==> c~ f3 c= cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b0 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND f3 f4 b0 * / c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f4 c==> c==> c~ f3 c= cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b0 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND f3 f4 b0 f5 * / c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f4 c==> c==> c~ f3 c= cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b0 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND f3 f4 b0 f5
+ |- (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n))))))
T c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- ((((((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> T))
T c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 cT
- |- ((\n. ((_0 >= (BIT0 n)) = (_0 >= n))) n)
T * / c= c>= c_0 cBIT0 b0 c>= c_0 b0 f0
+ ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0
- |- (((~ (b IN (c INSERT EMPTY))) ==> ((SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) e')))
T c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f2
+ |- ((\x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) x)
T * / ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 f0
- |- ((\n. (((BIT1 n) * _0) = _0)) n)
T * / c= c* cBIT1 b0 c_0 c_0 f0
- |- ((_0 - _0) = _0)
T c= c- c_0 c_0 c_0
- |- (((!n. ((_0 = (BIT1 n)) = F)) ==> ((\n. ((_0 = (BIT1 n)) = F)) n)) = ((\n. ((_0 = (BIT1 n)) = F)) n))
T c= c==> ! c= c= c_0 cBIT1 b0 cF * / c= c= c_0 cBIT1 b0 cF f0 * / c= c= c_0 cBIT1 b0 cF f0
- |- ((((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))))
T c= * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1
- |- (((!n. (((BIT1 m) = (BIT1 n)) = (m = n))) ==> ((\n. (((BIT1 m) = (BIT1 n)) = (m = n))) n)) = ((\n. (((BIT1 m) = (BIT1 n)) = (m = n))) n))
T c= c==> ! c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 * / c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 f1 * / c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 f1
- |- ((\m. (((BIT0 m) EXP _0) = (BIT1 _0))) m)
T * / c= cEXP cBIT0 b0 c_0 cBIT1 c_0 f0
+ |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((((~ (a = b)) /\ ((~ (a = c)) /\ ((~ (b = c)) /\ (~ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY)))))))) ==> ((interior ((hull convex) (a INSERT (b INSERT (c INSERT EMPTY))))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v)))))) = T)
T c= c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f1 f2 c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part cinterior * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. (((BIT0 n) > (BIT1 m)) = (n > m))) n)
T * / c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 f1
- |- (((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0
- |- ((\q'. (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) (u x)) = q')) ==> (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x))) = (p' ==> q'))))) q')
T * / c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c==> f4 c= creal_lt creal_of_num cNUMERAL c_0 * f5 f0 b0 c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * f5 f0 c==> f4 b0 f6
- |- ((((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV)) ==> (EMPTY = t')) ==> (((~ ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV))) ==> ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = e')) ==> ((((COND ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV))) t') e'))))
T c==> c==> c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV c= part cEMPTY f3 c==> c==> c~ c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 f4 c= * * * part cCOND c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * * * part cCOND c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV f3 f4
+ |- (((~ (c IN EMPTY)) ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (c IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND (c IN EMPTY)) (NUMERAL _0)) e')))
T c==> c==> c~ cIN f0 part cEMPTY c= cSUC cCARD part cEMPTY f1 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND cIN f0 part cEMPTY cNUMERAL c_0 f1
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
- |- (((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) ==> ((\m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) m)) = ((\m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) m))
T c= c==> ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 * / ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 f0 * / ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 f0
- |- ((\n. ((_0 < (BIT0 n)) = (_0 < n))) n)
T * / c= c< c_0 cBIT0 b0 c< c_0 b0 f0
+ |- ((?y. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (?z. (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))) = (((real_lt (real_of_num (NUMERAL _0))) x) /\ (?y. (((real_lt (real_of_num (NUMERAL _0))) y) /\ (?z. (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))
T c= c? / c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add f0 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f0 f1 cvector_add c% b0 f2 c% b1 f3 f4 c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add f0 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f0 f1 cvector_add c% b0 f2 c% b1 f3 f4
+ (~ (a = b)), (~ (a = c)), ((~ (b = c)) /\ (~ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY)))))) |- ((interior ((hull convex) (a INSERT (b INSERT (c INSERT EMPTY))))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v)))))
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c/\ c~ c= f1 f2 c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part cinterior * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1
- |- (((!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) ==> ((\n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) n)) = ((\n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) n))
T c= c==> ! c= cEXP cBIT1 f0 cBIT1 b0 c* cBIT1 f0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 * / c= cEXP cBIT1 f0 cBIT1 b0 c* cBIT1 f0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1 * / c= cEXP cBIT1 f0 cBIT1 b0 c* cBIT1 f0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1
+ (~ (c IN EMPTY)) |- ((~ (c IN EMPTY)) /\ ((SUC (CARD EMPTY)) = (SUC (NUMERAL _0))))
T c==> c~ cIN f0 part cEMPTY c/\ c~ cIN f0 part cEMPTY c= cSUC cCARD part cEMPTY cSUC cNUMERAL c_0
- |- ((_0 EXP _0) = (BIT1 _0))
T c= cEXP c_0 c_0 cBIT1 c_0
- |- ((\m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) m)
T * / ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 f0
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))) ==> ((\n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))) n)) = ((\n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))) n))
T c= c==> ! c= c- cBIT1 f0 cBIT1 b0 cBIT0 c- f0 b0 * / c= c- cBIT1 f0 cBIT1 b0 cBIT0 c- f0 b0 f1 * / c= c- cBIT1 f0 cBIT1 b0 cBIT0 c- f0 b0 f1
+ |- (((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) ==> ((\m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) m)) = ((\m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) m))
T c= c==> ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 * / ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 f0 * / ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 f0
- |- ((\n. ((_0 + (BIT0 n)) = (BIT0 n))) n)
T * / c= c+ c_0 cBIT0 b0 cBIT0 b0 f0
- |- ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m)
T * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0
+ |- (((!g'. (!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((CARD (c INSERT EMPTY)) = t')) ==> (((~ g') ==> ((SUC (CARD (c INSERT EMPTY))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (CARD (c INSERT EMPTY))) (SUC (CARD (c INSERT EMPTY)))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((CARD (c INSERT EMPTY)) = t')) ==> (((~ g') ==> ((SUC (CARD (c INSERT EMPTY))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (CARD (c INSERT EMPTY))) (SUC (CARD (c INSERT EMPTY)))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((CARD (c INSERT EMPTY)) = t')) ==> (((~ g') ==> ((SUC (CARD (c INSERT EMPTY))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (CARD (c INSERT EMPTY))) (SUC (CARD (c INSERT EMPTY)))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= cCARD * * part cINSERT f1 part cEMPTY b1 c==> c==> c~ b0 c= cSUC cCARD * * part cINSERT f1 part cEMPTY b2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND b0 b1 b2 * / ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= cCARD * * part cINSERT f1 part cEMPTY b1 c==> c==> c~ b0 c= cSUC cCARD * * part cINSERT f1 part cEMPTY b2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND b0 b1 b2 f2 * / ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= cCARD * * part cINSERT f1 part cEMPTY b1 c==> c==> c~ b0 c= cSUC cCARD * * part cINSERT f1 part cEMPTY b2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND b0 b1 b2 f2
+ ((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) |- (((real_lt (real_of_num (NUMERAL _0))) y) = T)
T c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 c= creal_lt creal_of_num cNUMERAL c_0 f1 cT
- |- (((!n. (~ (_0 >= (BIT1 n)))) ==> ((\n. (~ (_0 >= (BIT1 n)))) n)) = ((\n. (~ (_0 >= (BIT1 n)))) n))
T c= c==> ! c~ c>= c_0 cBIT1 b0 * / c~ c>= c_0 cBIT1 b0 f0 * / c~ c>= c_0 cBIT1 b0 f0
- |- ((\m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) m)
T * / ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 f0
- (x IN (a INSERT (b INSERT (c INSERT EMPTY)))) |- ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) = T)
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((_0 <= _0) = T) /\ ((!n. (((BIT0 n) <= _0) = (n <= _0))) /\ ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))))))))
T c/\ c= c<= c_0 c_0 cT c/\ ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ |- (((!p'. (!q'. ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 b1 c= c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 c==> b0 b1 * / ! c==> c= c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 b1 c= c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 c==> b0 b1 f3 * / ! c==> c= c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 b1 c= c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 c==> b0 b1 f3
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) |- (((((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (T = ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?v. (((real_lt (real_of_num (NUMERAL _0))) v) /\ (?v'. (((real_lt (real_of_num (NUMERAL _0))) v') /\ (?v''. (((real_lt (real_of_num (NUMERAL _0))) v'') /\ ((((real_sub ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) v')) v'') = (real_of_num (NUMERAL _0))) /\ (((vector_sub ((vector_sub ((vector_sub y) ((% v) a))) ((% v') b))) ((% v'') c)) = (vec (NUMERAL _0))))))))))) y)))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (?y. (((real_lt (real_of_num (NUMERAL _0))) y) /\ (?z. (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v))))))
T c= cT c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_sub creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b3 b4 creal_of_num cNUMERAL c_0 c= cvector_sub cvector_sub cvector_sub b1 c% b2 f0 c% b3 f1 c% b4 f2 cvec cNUMERAL c_0 b1 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1
- |- ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))
T c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- ((~ (c IN EMPTY)) ==> ((SUC (NUMERAL _0)) = (SUC (NUMERAL _0))))
T c==> c~ cIN f0 part cEMPTY c= cSUC cNUMERAL c_0 cSUC cNUMERAL c_0
- |- ((\n. ((ODD (BIT0 n)) = F)) n)
T * / c= cODD cBIT0 b0 cF f0
- |- ((_0 - (BIT1 n)) = _0)
T c= c- c_0 cBIT1 f0 c_0
- (~ (affine_dependent s)) |- ((~ (affine_dependent s)) /\ ((interior ((hull convex) s)) = (((COND ((CARD s) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN s) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum s) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum s) (\x. ((% (u x)) x))) = y))))) y)))))))
T c==> c~ caffine_dependent f0 c/\ c~ caffine_dependent f0 c= * part cinterior * * part chull part cconvex f0 * * * part cCOND c<= cCARD f0 cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 f0 creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum f0 b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum f0 / c% * b2 b3 b3 b1 b1
- |- (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n)))))
T c= c* cBIT0 f0 cBIT1 f1 c+ cBIT0 f0 cBIT0 cBIT0 c* f0 f1
- (~ (b IN (c INSERT EMPTY))) |- ((~ (b IN (c INSERT EMPTY))) /\ ((SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) = (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))
T c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c/\ c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0
+ |- ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))))))
T c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
- |- ((\m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) m)
T * / ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 f0
+ |- (((!q'. ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))) ==> ((\q'. ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))) q')) = ((\q'. ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 f2 c==> c==> f2 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f2 b0 * / c==> c= c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 f2 c==> c==> f2 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f2 b0 f3 * / c==> c= c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 f2 c==> c==> f2 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f2 b0 f3
- |- ((((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV)) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = e')) ==> ((((COND ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND g') t') e')))))
T c==> c= c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV f3 c==> c==> f3 c= part cEMPTY f4 c==> c==> c~ f3 c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 f5 c= * * * part cCOND c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * * * part cCOND f3 f4 f5
- ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0
- |- (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = t')) ==> (((~ g') ==> ((SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = (((COND g') t') e')))))
T c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f3 c==> c==> c~ f2 c= cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f4 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND f2 f3 f4
- |- (((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) ==> ((\m. (((BIT0 m) EXP _0) = (BIT1 _0))) m)) = ((\m. (((BIT0 m) EXP _0) = (BIT1 _0))) m))
T c= c==> ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 * / c= cEXP cBIT0 b0 c_0 cBIT1 c_0 f0 * / c= cEXP cBIT0 b0 c_0 cBIT1 c_0 f0
- |- ((!n. ((ODD (BIT0 n)) = F)) /\ (!n. ((ODD (BIT1 n)) = T)))
T c/\ ! c= cODD cBIT0 b0 cF ! c= cODD cBIT1 b0 cT
- |- (((!n. ((EVEN (NUMERAL n)) = (EVEN n))) ==> ((\n. ((EVEN (NUMERAL n)) = (EVEN n))) n)) = ((\n. ((EVEN (NUMERAL n)) = (EVEN n))) n))
T c= c==> ! c= cEVEN cNUMERAL b0 cEVEN b0 * / c= cEVEN cNUMERAL b0 cEVEN b0 f0 * / c= cEVEN cNUMERAL b0 cEVEN b0 f0
+ |- ((\y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) y)
T * / ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 f1
+ (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) \/ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0))))) |- F
T c==> c\/ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 cF
- |- ((\n. ((ODD (BIT1 n)) = T)) n)
T * / c= cODD cBIT1 b0 cT f0
+ |- (((real_lt (real_of_num (NUMERAL _0))) ((real_div e) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_lt (real_of_num (NUMERAL _0))) e))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_div f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_lt creal_of_num cNUMERAL c_0 f0
+ ((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) |- (((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = T))
T c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 c/\ c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 cT
- |- ((\n. ((_0 = (BIT0 n)) = (_0 = n))) n)
T * / c= c= c_0 cBIT0 b0 c= c_0 b0 f0
- (c = b) |- (b = c)
T c==> c= f0 f1 c= f1 f0
+ |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 cF
- |- ((_0 = _0) = T)
T c= c= c_0 c_0 cT
- |- ((\n. (((BIT0 n) * _0) = _0)) n)
T * / c= c* cBIT0 b0 c_0 c_0 f0
- |- (((BIT1 n) >= (BIT1 m)) = (n >= m))
T c= c>= cBIT1 f0 cBIT1 f1 c>= f0 f1
- |- (((!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))) ==> ((\n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))) n)) = ((\n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))) n))
T c= c==> ! c= c* cNUMERAL f0 cNUMERAL b0 cNUMERAL c* f0 b0 * / c= c* cNUMERAL f0 cNUMERAL b0 cNUMERAL c* f0 b0 f1 * / c= c* cNUMERAL f0 cNUMERAL b0 cNUMERAL c* f0 b0 f1
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) ((vector_add b) c)) $ i) = (y $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i))))) = ((((vector_add a) ((vector_add b) c)) = y) ==> (((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) = (vec (NUMERAL _0)))))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add f0 cvector_add f1 f2 b0 c$ f3 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub cvector_sub cvector_sub f3 f0 f1 f2 b0 c$ cvec cNUMERAL c_0 b0 c==> c= cvector_add f0 cvector_add f1 f2 f3 c= cvector_sub cvector_sub cvector_sub f3 f0 f1 f2 cvec cNUMERAL c_0
- |- (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (((% (u x)) x) = ((% (u x)) x))))
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c% * f4 f0 f0 c% * f4 f0 f0
- |- ((\m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) m)
T * / ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 f0
+ |- ((\q'. ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 f5 c==> c==> f5 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 b0 c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 c==> f5 b0 f6
+ |- ((?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y)))) = (?v. (?u. (((real_lt (real_of_num (NUMERAL _0))) v) /\ ((!x. ((x IN (b INSERT (c INSERT EMPTY))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (b INSERT (c INSERT EMPTY))) u) = ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\x. ((% (u x)) x))) = ((vector_sub y) ((% v) a)))))))))
T c= c? / c/\ ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b0 b1 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b0 b1 b1 f3 c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> cIN b2 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b1 b2 c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b1 b2 b2 cvector_sub f3 c% b0 f0
+ |- ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))
T c==> c= c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 f2 c==> c==> f2 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f3 c= c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f2 f3
+ ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0
- ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0
+ |- ((((FINITE (c INSERT EMPTY)) /\ ((!y. (((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) /\ (!x. (!y. (((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))))))) ==> ((?u. ((!x. ((x IN (b INSERT (c INSERT EMPTY))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (b INSERT (c INSERT EMPTY))) u) = ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\x. ((% (u x)) x))) = ((vector_sub y) ((% v) a)))))) = (?v'. (?u. (((real_lt (real_of_num (NUMERAL _0))) v') /\ ((!x. ((x IN (c INSERT EMPTY)) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (c INSERT EMPTY)) u) = ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) v')) /\ (((vsum (c INSERT EMPTY)) (\x. ((% (u x)) x))) = ((vector_sub ((vector_sub y) ((% v) a))) ((% v') b)))))))))) = ((?u. ((!x. ((x IN (b INSERT (c INSERT EMPTY))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (b INSERT (c INSERT EMPTY))) u) = ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\x. ((% (u x)) x))) = ((vector_sub y) ((% v) a)))))) = (?v'. (?u. (((real_lt (real_of_num (NUMERAL _0))) v') /\ ((!x. ((x IN (c INSERT EMPTY)) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (c INSERT EMPTY)) u) = ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) v')) /\ (((vsum (c INSERT EMPTY)) (\x. ((% (u x)) x))) = ((vector_sub ((vector_sub y) ((% v) a))) ((% v') b))))))))))
T c= c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY c/\ ! c==> c/\ cIN f1 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN f1 * * part cINSERT f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 creal_add b0 b1 c= c? / c/\ ! c==> cIN b1 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b0 b1 c/\ c= csum * * part cINSERT f1 * * part cINSERT f0 part cEMPTY b0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 c= cvsum * * part cINSERT f1 * * part cINSERT f0 part cEMPTY / c% * b0 b1 b1 cvector_sub f3 c% f2 f4 c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> cIN b2 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b1 b2 c/\ c= csum * * part cINSERT f0 part cEMPTY b1 creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 b0 c= cvsum * * part cINSERT f0 part cEMPTY / c% * b1 b2 b2 cvector_sub cvector_sub f3 c% f2 f4 c% b0 f1 c= c? / c/\ ! c==> cIN b1 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b0 b1 c/\ c= csum * * part cINSERT f1 * * part cINSERT f0 part cEMPTY b0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 c= cvsum * * part cINSERT f1 * * part cINSERT f0 part cEMPTY / c% * b0 b1 b1 cvector_sub f3 c% f2 f4 c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> cIN b2 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b1 b2 c/\ c= csum * * part cINSERT f0 part cEMPTY b1 creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 b0 c= cvsum * * part cINSERT f0 part cEMPTY / c% * b1 b2 b2 cvector_sub cvector_sub f3 c% f2 f4 c% b0 f1
+ ((~ (a = b)) /\ ((~ (a = c)) /\ ((~ (b = c)) /\ (~ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY)))))))) |- (((~ (a = b)) /\ ((~ (a = c)) /\ ((~ (b = c)) /\ (~ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY)))))))) /\ ((interior ((hull convex) (a INSERT (b INSERT (c INSERT EMPTY))))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v))))))
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f1 f2 c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f1 f2 c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part cinterior * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((vector_add a) ((vector_add b) c)) $ i) = (y $ i)) ==> ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ cvector_add f1 cvector_add f2 f3 f0 c$ f4 f0 c= c$ cvector_sub cvector_sub cvector_sub f4 f1 f2 f3 f0 c$ cvec cNUMERAL c_0 f0
- |- ((\n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n)))))) n)
T * / c= c* cBIT0 f0 cBIT1 b0 c+ cBIT0 f0 cBIT0 cBIT0 c* f0 b0 f1
+ ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0
- |- ((\n. (((BIT0 n) >= (BIT0 m)) = (n >= m))) n)
T * / c= c>= cBIT0 b0 cBIT0 f0 c>= b0 f0 f1
+ |- ((((~ (a IN (b INSERT (c INSERT EMPTY)))) ==> ((SUC (CARD (b INSERT (c INSERT EMPTY)))) = (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))))) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (CARD (b INSERT (c INSERT EMPTY)))) (SUC (CARD (b INSERT (c INSERT EMPTY))))) = (((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))))) = ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (CARD (b INSERT (c INSERT EMPTY)))) (SUC (CARD (b INSERT (c INSERT EMPTY))))) = (((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))))))
T c= c==> c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0
+ (((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((_0 * (BIT1 n)) = _0)
T c= c* c_0 cBIT1 f0 c_0
+ |- (((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = ((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> q')))) = ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> q'))))
T c= c==> c= c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 c==> c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f2 c= c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 f2 c==> c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f2 c= c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 f2
- |- ((((~ (c IN EMPTY)) ==> ((SUC (NUMERAL _0)) = (SUC (NUMERAL _0)))) ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))
T c= c==> c==> c~ cIN f0 part cEMPTY c= cSUC cNUMERAL c_0 cSUC cNUMERAL c_0 c= cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 c= cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0
- |- ((FINITE (s UNION t)) = ((FINITE s) /\ (FINITE t)))
T c= cFINITE * * part cUNION f0 f1 c/\ cFINITE f0 cFINITE f1
- |- ((_0 = (BIT0 n)) = (_0 = n))
T c= c= c_0 cBIT0 f0 c= c_0 f0
- |- ((\m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) m)
T * / ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
+ |- (((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = T)) ==> ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> T))) = ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> T)))
T c= c==> c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 cT c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 cT c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 cT
+ |- (((FINITE (c INSERT EMPTY)) /\ ((!y. (((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) /\ (!x. (!y. (((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))))))) ==> ((?u. ((!x. ((x IN (b INSERT (c INSERT EMPTY))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (b INSERT (c INSERT EMPTY))) u) = ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\x. ((% (u x)) x))) = ((vector_sub y) ((% v) a)))))) = (?v'. (?u. (((real_lt (real_of_num (NUMERAL _0))) v') /\ ((!x. ((x IN (c INSERT EMPTY)) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (c INSERT EMPTY)) u) = ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) v')) /\ (((vsum (c INSERT EMPTY)) (\x. ((% (u x)) x))) = ((vector_sub ((vector_sub y) ((% v) a))) ((% v') b))))))))))
T c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY c/\ ! c==> c/\ cIN f1 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN f1 * * part cINSERT f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 creal_add b0 b1 c= c? / c/\ ! c==> cIN b1 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b0 b1 c/\ c= csum * * part cINSERT f1 * * part cINSERT f0 part cEMPTY b0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 c= cvsum * * part cINSERT f1 * * part cINSERT f0 part cEMPTY / c% * b0 b1 b1 cvector_sub f3 c% f2 f4 c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> cIN b2 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b1 b2 c/\ c= csum * * part cINSERT f0 part cEMPTY b1 creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 b0 c= cvsum * * part cINSERT f0 part cEMPTY / c% * b1 b2 b2 cvector_sub cvector_sub f3 c% f2 f4 c% b0 f1
+ |- ((?u. (((real_lt (real_of_num (NUMERAL _0))) v) /\ ((!x. ((x IN (b INSERT (c INSERT EMPTY))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (b INSERT (c INSERT EMPTY))) u) = ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\x. ((% (u x)) x))) = ((vector_sub y) ((% v) a))))))) = (((real_lt (real_of_num (NUMERAL _0))) v) /\ (?u. ((!x. ((x IN (b INSERT (c INSERT EMPTY))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (b INSERT (c INSERT EMPTY))) u) = ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\x. ((% (u x)) x))) = ((vector_sub y) ((% v) a))))))))
T c= c? / c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ ! c==> cIN b1 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b0 b1 c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b0 b1 b1 cvector_sub f3 c% f0 f4 c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c? / c/\ ! c==> cIN b1 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b0 b1 c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b0 b1 b1 cvector_sub f3 c% f0 f4
+ |- ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> q')))
T c==> c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 f4 c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 f4
+ |- ((!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) ((vector_add b) c)) $ i) = (y $ i))))) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) ((vector_add b) c)) $ i) = (y $ i))))))
T c==> ! c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub cvector_sub cvector_sub f0 f1 f2 f3 b0 c$ cvec cNUMERAL c_0 b0 c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add f1 cvector_add f2 f3 b0 c$ f0 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub cvector_sub cvector_sub f0 f1 f2 f3 b0 c$ cvec cNUMERAL c_0 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add f1 cvector_add f2 f3 b0 c$ f0 b0
+ |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 cF
- |- ((\m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) m)
T * / ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0
+ |- (((!g'. (!t'. (!e'. (((a IN (b INSERT (c INSERT EMPTY))) = g') ==> ((g' ==> ((CARD (b INSERT (c INSERT EMPTY))) = t')) ==> (((~ g') ==> ((SUC (CARD (b INSERT (c INSERT EMPTY)))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (CARD (b INSERT (c INSERT EMPTY)))) (SUC (CARD (b INSERT (c INSERT EMPTY))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((a IN (b INSERT (c INSERT EMPTY))) = g') ==> ((g' ==> ((CARD (b INSERT (c INSERT EMPTY))) = t')) ==> (((~ g') ==> ((SUC (CARD (b INSERT (c INSERT EMPTY)))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (CARD (b INSERT (c INSERT EMPTY)))) (SUC (CARD (b INSERT (c INSERT EMPTY))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((a IN (b INSERT (c INSERT EMPTY))) = g') ==> ((g' ==> ((CARD (b INSERT (c INSERT EMPTY))) = t')) ==> (((~ g') ==> ((SUC (CARD (b INSERT (c INSERT EMPTY)))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (CARD (b INSERT (c INSERT EMPTY)))) (SUC (CARD (b INSERT (c INSERT EMPTY))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c==> c==> c~ b0 c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND b0 b1 b2 * / ! ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c==> c==> c~ b0 c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND b0 b1 b2 f3 * / ! ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c==> c==> c~ b0 c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND b0 b1 b2 f3
- |- ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))
T c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0
- |- (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))
T c= cEXP cBIT0 f0 cBIT1 f1 c* cBIT0 f0 c* cEXP cBIT0 f0 f1 cEXP cBIT0 f0 f1
+ (~ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY))))) |- ((interior ((hull convex) (a INSERT (b INSERT (c INSERT EMPTY))))) = (((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))))
T c==> c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part cinterior * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1
- |- ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))))))))))
T c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_gt y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ |- ((\P. (((?u. ((!x. ((x IN EMPTY) ==> ((P x) (u x)))) /\ ((((sum EMPTY) u) = w) /\ (((vsum EMPTY) (\x. ((% (u x)) x))) = y)))) = ((w = (real_of_num (NUMERAL _0))) /\ (y = (vec (NUMERAL _0))))) /\ (((FINITE s) /\ ((!y. (((a IN s) /\ ((P a) y)) ==> ((P a) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) /\ (!x. (!y. (((a IN s) /\ (((P a) x) /\ ((P a) y))) ==> ((P a) ((real_add x) y))))))) ==> ((?u. ((!x. ((x IN (a INSERT s)) ==> ((P x) (u x)))) /\ ((((sum (a INSERT s)) u) = w) /\ (((vsum (a INSERT s)) (\x. ((% (u x)) x))) = y)))) = (?v. (?u. (((P a) v) /\ ((!x. ((x IN s) ==> ((P x) (u x)))) /\ ((((sum s) u) = ((real_sub w) v)) /\ (((vsum s) (\x. ((% (u x)) x))) = ((vector_sub y) ((% v) a)))))))))))) P)
T * / c/\ c= c? / c/\ ! c==> cIN b2 part cEMPTY * * b0 b2 * b1 b2 c/\ c= csum part cEMPTY b1 f0 c= cvsum part cEMPTY / c% * b1 b2 b2 f1 c/\ c= f0 creal_of_num cNUMERAL c_0 c= f1 cvec cNUMERAL c_0 c==> c/\ cFINITE f2 c/\ ! c==> c/\ cIN f3 f2 * * b0 f3 b1 * * b0 f3 creal_div b1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN f3 f2 c/\ * * b0 f3 b1 * * b0 f3 b2 * * b0 f3 creal_add b1 b2 c= c? / c/\ ! c==> cIN b2 * * part cINSERT f3 f2 * * b0 b2 * b1 b2 c/\ c= csum * * part cINSERT f3 f2 b1 f0 c= cvsum * * part cINSERT f3 f2 / c% * b1 b2 b2 f1 c? / c? / c/\ * * b0 f3 b1 c/\ ! c==> cIN b3 f2 * * b0 b3 * b2 b3 c/\ c= csum f2 b2 creal_sub f0 b1 c= cvsum f2 / c% * b2 b3 b3 cvector_sub f1 c% b1 f3 f4
- |- ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))
T c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
+ |- (((_0 < _0) = F) /\ ((!n. (((BIT0 n) < _0) = F)) /\ ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))))))))
T c/\ c= c< c_0 c_0 cF c/\ ! c= c< cBIT0 b0 c_0 cF c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
- |- (((BIT1 m) = (BIT1 n)) = (m = n))
T c= c= cBIT1 f0 cBIT1 f1 c= f0 f1
- |- ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))))))))))
T c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (T = ((FINITE (b INSERT (c INSERT EMPTY))) /\ ((!y. (((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) /\ (!x. (!y. (((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))))))))
T c= cT c/\ cFINITE * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ ! c==> c/\ cIN f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 creal_add b0 b1
- |- (((!n. ((EVEN (BIT0 n)) = T)) ==> ((\n. ((EVEN (BIT0 n)) = T)) n)) = ((\n. ((EVEN (BIT0 n)) = T)) n))
T c= c==> ! c= cEVEN cBIT0 b0 cT * / c= cEVEN cBIT0 b0 cT f0 * / c= cEVEN cBIT0 b0 cT f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- (((((real_sub ((real_sub ((real_sub (y $ i)) (a $ i))) (b $ i))) (c $ i)) = (real_of_num (NUMERAL _0))) ==> (((real_add (a $ i)) ((real_add (b $ i)) (c $ i))) = (y $ i))) = ((((lambdai. ((real_sub ((lambdai. ((real_sub ((lambdai. ((real_sub (y $ i)) (a $ i))) $ i)) (b $ i))) $ i)) (c $ i))) $ i) = ((lambdai. (real_of_num (NUMERAL _0))) $ i)) ==> (((lambdai. ((real_add (a $ i)) ((lambdai. ((real_add (b $ i)) (c $ i))) $ i))) $ i) = (y $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c==> c= creal_sub creal_sub creal_sub c$ f1 f0 c$ f2 f0 c$ f3 f0 c$ f4 f0 creal_of_num cNUMERAL c_0 c= creal_add c$ f2 f0 creal_add c$ f3 f0 c$ f4 f0 c$ f1 f0 c==> c= c$ clambda / creal_sub c$ clambda / creal_sub c$ clambda / creal_sub c$ f1 b1 c$ f2 b1 b1 c$ f3 b1 b0 c$ f4 b0 f0 c$ clambda / creal_of_num cNUMERAL c_0 f0 c= c$ clambda / creal_add c$ f2 b0 c$ clambda / creal_add c$ f3 b1 c$ f4 b1 b0 f0 c$ f1 f0
- |- (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (u x)) = q')) ==> (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x))) = ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> q')))
T c==> c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= creal_lt creal_of_num cNUMERAL c_0 * f4 f0 f5 c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * f4 f0 c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5
- |- (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))
T c= c- cBIT1 f0 cBIT1 f1 cBIT0 c- f0 f1
+ |- ((real_neg ((real_sub ((real_sub ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) c)) (real_of_num (NUMERAL _0)))) = ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))
T c= creal_neg creal_sub creal_sub creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 creal_of_num cNUMERAL c_0 creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0))) = ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 c= creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0
+ |- ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> T))
T c= c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 cT
- |- ((\n. ((PRE (BIT0 n)) = (((COND (n = _0)) _0) (BIT1 (PRE n))))) n)
T * / c= cPRE cBIT0 b0 cCOND c= b0 c_0 c_0 cBIT1 cPRE b0 f0
+ (~ (a = b)), (~ (a = c)), (~ (b = c)) |- ((((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v)))))
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f1 f2 c= * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1
- |- ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))
T c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
+ |- ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))
T c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
- |- ((\n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))) n)
T * / c= c- cBIT0 f0 cBIT1 b0 cPRE cBIT0 c- f0 b0 f1
- |- ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))
T c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- |- (((!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) ==> ((\n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) n)) = ((\n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) n))
T c= c==> ! c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 * / c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 f1 * / c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 f1
+ |- (((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 cF
- |- ((_0 >= (BIT1 n)) = F)
T c= c>= c_0 cBIT1 f0 cF
- |- (((!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n)))) ==> ((\n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n)))) n)) = ((\n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n)))) n))
T c= c==> ! c= c- cNUMERAL f0 cNUMERAL b0 cNUMERAL c- f0 b0 * / c= c- cNUMERAL f0 cNUMERAL b0 cNUMERAL c- f0 b0 f1 * / c= c- cNUMERAL f0 cNUMERAL b0 cNUMERAL c- f0 b0 f1
- |- (((!n. ((_0 <= (BIT1 n)) = T)) ==> ((\n. ((_0 <= (BIT1 n)) = T)) n)) = ((\n. ((_0 <= (BIT1 n)) = T)) n))
T c= c==> ! c= c<= c_0 cBIT1 b0 cT * / c= c<= c_0 cBIT1 b0 cT f0 * / c= c<= c_0 cBIT1 b0 cT f0
- |- ((\g'. (!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = t')) ==> (((~ g') ==> ((SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND b0 b1 b2 f2
- |- ((\n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n)))) n)
T * / c= c- cBIT0 f0 cBIT0 b0 cBIT0 c- f0 b0 f1
+ |- (((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = ((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> q')))) = ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> q'))))
T c= c==> c= c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 c==> c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f3 c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 f3 c==> c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f3 c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 f3
- |- ((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2)))
T c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1
+ |- ((!n. (((BIT0 n) <= _0) = (n <= _0))) /\ ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))))))
T c/\ ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
- |- (((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) ==> ((\m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) m)) = ((\m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) m))
T c= c==> ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 * / ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 f0 * / ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 f0
+ |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
+ |- ((\Q. ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x))))) Q)
T * / c= c? / c/\ f0 * b0 b1 c/\ f0 c? / * b0 b1 f1
- ((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) |- ((real_lt (real_of_num (NUMERAL _0))) y)
T c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f3
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) ((vector_add b) c)) $ i) = (y $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i)))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add f0 cvector_add f1 f2 b0 c$ f3 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub cvector_sub cvector_sub f3 f0 f1 f2 b0 c$ cvec cNUMERAL c_0 b0
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((!n. (((BIT0 n) > (BIT0 m)) = (n > m))) ==> ((\n. (((BIT0 n) > (BIT0 m)) = (n > m))) n)) = ((\n. (((BIT0 n) > (BIT0 m)) = (n > m))) n))
T c= c==> ! c= c> cBIT0 b0 cBIT0 f0 c> b0 f0 * / c= c> cBIT0 b0 cBIT0 f0 c> b0 f0 f1 * / c= c> cBIT0 b0 cBIT0 f0 c> b0 f0 f1
+ |- ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> q')))
T c==> c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f4 c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 f4
- |- (((!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))) ==> ((\m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))) m)) = ((\m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))) m))
T c= c==> ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0 * / ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0 f0 * / ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0 f0
- (~ (c IN EMPTY)) |- ((~ (c IN EMPTY)) /\ ((SUC (NUMERAL _0)) = (SUC (NUMERAL _0))))
T c==> c~ cIN f0 part cEMPTY c/\ c~ cIN f0 part cEMPTY c= cSUC cNUMERAL c_0 cSUC cNUMERAL c_0
+ |- (((!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) ==> ((\s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) s)) = ((\s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) s))
T c= c==> ! c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 * / c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 f2 * / c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 f2
- |- (((BIT0 n) = _0) = (n = _0))
T c= c= cBIT0 f0 c_0 c= f0 c_0
+ |- ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> q')))
T c==> c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f3 c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 f3
+ |- ((?z. (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))) = (((real_lt (real_of_num (NUMERAL _0))) y) /\ (?z. (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))
T c= c? / c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f1 creal_add f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f1 f2 cvector_add c% f0 f3 c% b0 f4 f5 c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f1 creal_add f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f1 f2 cvector_add c% f0 f3 c% b0 f4 f5
+ ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
- ((FINITE s) /\ ((!y. (((a IN s) /\ ((P a) y)) ==> ((P a) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) /\ (!x. (!y. (((a IN s) /\ (((P a) x) /\ ((P a) y))) ==> ((P a) ((real_add x) y))))))) |- (((FINITE s) /\ ((!y. (((a IN s) /\ ((P a) y)) ==> ((P a) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) /\ (!x. (!y. (((a IN s) /\ (((P a) x) /\ ((P a) y))) ==> ((P a) ((real_add x) y))))))) /\ ((?u. ((!x. ((x IN (a INSERT s)) ==> ((P x) (u x)))) /\ ((((sum (a INSERT s)) u) = w) /\ (((vsum (a INSERT s)) (\x. ((% (u x)) x))) = y)))) = (?v. (?u. (((P a) v) /\ ((!x. ((x IN s) ==> ((P x) (u x)))) /\ ((((sum s) u) = ((real_sub w) v)) /\ (((vsum s) (\x. ((% (u x)) x))) = ((vector_sub y) ((% v) a))))))))))
T c==> c/\ cFINITE f0 c/\ ! c==> c/\ cIN f1 f0 * * f2 f1 b0 * * f2 f1 creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN f1 f0 c/\ * * f2 f1 b0 * * f2 f1 b1 * * f2 f1 creal_add b0 b1 c/\ c/\ cFINITE f0 c/\ ! c==> c/\ cIN f1 f0 * * f2 f1 b0 * * f2 f1 creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN f1 f0 c/\ * * f2 f1 b0 * * f2 f1 b1 * * f2 f1 creal_add b0 b1 c= c? / c/\ ! c==> cIN b1 * * part cINSERT f1 f0 * * f2 b1 * b0 b1 c/\ c= csum * * part cINSERT f1 f0 b0 f3 c= cvsum * * part cINSERT f1 f0 / c% * b0 b1 b1 f4 c? / c? / c/\ * * f2 f1 b0 c/\ ! c==> cIN b2 f0 * * f2 b2 * b1 b2 c/\ c= csum f0 b1 creal_sub f3 b0 c= cvsum f0 / c% * b1 b2 b2 cvector_sub f4 c% b0 f1
+ (~ (b IN (c INSERT EMPTY))) |- ((~ (b IN (c INSERT EMPTY))) /\ ((SUC (CARD (c INSERT EMPTY))) = (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))
T c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c/\ c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cSUC cCARD * * part cINSERT f1 part cEMPTY cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0
+ (~ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY))))) |- (((((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v))))) = ((interior ((hull convex) (a INSERT (b INSERT (c INSERT EMPTY))))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v))))))
T c==> c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c= * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1 c= * part cinterior * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1
- |- ((_0 > _0) = F)
T c= c> c_0 c_0 cF
- |- (((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) ==> ((\m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) m)) = ((\m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) m))
T c= c==> ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 * / ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 f0 * / ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 f0
- |- (((BIT1 n) >= _0) = T)
T c= c>= cBIT1 f0 c_0 cT
- |- (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))
T c= c- cBIT1 f0 cBIT0 f1 cCOND c<= f1 f0 cBIT1 c- f0 f1 c_0
+ (~ ((((real_sub ((real_sub ((real_sub (y $ i)) (a $ i))) (b $ i))) (c $ i)) = (real_of_num (NUMERAL _0))) ==> (((real_add (a $ i)) ((real_add (b $ i)) (c $ i))) = (y $ i)))) |- ((~ ((((real_sub ((real_sub ((real_sub (y $ i)) (a $ i))) (b $ i))) (c $ i)) = (real_of_num (NUMERAL _0))) ==> (((real_add (a $ i)) ((real_add (b $ i)) (c $ i))) = (y $ i)))) /\ F)
T c==> c~ c==> c= creal_sub creal_sub creal_sub c$ f0 f1 c$ f2 f1 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c= creal_add c$ f2 f1 creal_add c$ f3 f1 c$ f4 f1 c$ f0 f1 c/\ c~ c==> c= creal_sub creal_sub creal_sub c$ f0 f1 c$ f2 f1 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c= creal_add c$ f2 f1 creal_add c$ f3 f1 c$ f4 f1 c$ f0 f1 cF
- |- (((NUMERAL m) < (NUMERAL n)) = (m < n))
T c= c< cNUMERAL f0 cNUMERAL f1 c< f0 f1
+ |- ((\x. (~ (x IN EMPTY))) x)
T * / c~ cIN b0 part cEMPTY f0
+ (((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\q'. ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 f3 c==> c==> f3 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 b0 c= c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 c==> f3 b0 f4
- |- (((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) ==> ((\m. (((BIT1 m) EXP _0) = (BIT1 _0))) m)) = ((\m. (((BIT1 m) EXP _0) = (BIT1 _0))) m))
T c= c==> ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 * / c= cEXP cBIT1 b0 c_0 cBIT1 c_0 f0 * / c= cEXP cBIT1 b0 c_0 cBIT1 c_0 f0
- |- (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))
T c= cEXP cBIT1 f0 cBIT1 f1 c* cBIT1 f0 c* cEXP cBIT1 f0 f1 cEXP cBIT1 f0 f1
- |- ((\n. ((ODD (NUMERAL n)) = (ODD n))) n)
T * / c= cODD cNUMERAL b0 cODD b0 f0
+ |- (((BIT1 m) <= (BIT0 n)) = (m < n))
T c= c<= cBIT1 f0 cBIT0 f1 c< f0 f1
+ |- (((!e'. ((((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV)) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = e')) ==> ((((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND g') t') e')))))) ==> ((\e'. ((((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV)) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = e')) ==> ((((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND g') t') e')))))) e')) = ((\e'. ((((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV)) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = e')) ==> ((((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV f3 c==> c==> f3 c= part cEMPTY f4 c==> c==> c~ f3 c= * part cGSPEC / c? / cSETSPEC b1 c? / c/\ ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b3 b4 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b3 b4 b4 b2 b2 b0 c= * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c? / c/\ ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b3 b4 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b3 b4 b4 b2 b2 * * * part cCOND f3 f4 b0 * / c==> c= c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV f3 c==> c==> f3 c= part cEMPTY f4 c==> c==> c~ f3 c= * part cGSPEC / c? / cSETSPEC b1 c? / c/\ ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b3 b4 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b3 b4 b4 b2 b2 b0 c= * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c? / c/\ ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b3 b4 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b3 b4 b4 b2 b2 * * * part cCOND f3 f4 b0 f5 * / c==> c= c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV f3 c==> c==> f3 c= part cEMPTY f4 c==> c==> c~ f3 c= * part cGSPEC / c? / cSETSPEC b1 c? / c/\ ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b3 b4 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b3 b4 b4 b2 b2 b0 c= * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c? / c/\ ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b3 b4 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b3 b4 b4 b2 b2 * * * part cCOND f3 f4 b0 f5
+ |- ((\p'. (!q'. ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 b1 c= c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 c==> b0 b1 f3
+ |- ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2)))
T c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
- |- ((_0 * _0) = _0)
T c= c* c_0 c_0 c_0
- |- (((BIT0 n) <= _0) = (n <= _0))
T c= c<= cBIT0 f0 c_0 c<= f0 c_0
+ |- ((((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV)) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = e')) ==> ((((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND g') t') e')))))
T c==> c= c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV f3 c==> c==> f3 c= part cEMPTY f4 c==> c==> c~ f3 c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 f5 c= * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * * * part cCOND f3 f4 f5
+ |- (((!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((CARD (c INSERT EMPTY)) = t')) ==> (((~ g') ==> ((SUC (CARD (c INSERT EMPTY))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (CARD (c INSERT EMPTY))) (SUC (CARD (c INSERT EMPTY)))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((CARD (c INSERT EMPTY)) = t')) ==> (((~ g') ==> ((SUC (CARD (c INSERT EMPTY))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (CARD (c INSERT EMPTY))) (SUC (CARD (c INSERT EMPTY)))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((CARD (c INSERT EMPTY)) = t')) ==> (((~ g') ==> ((SUC (CARD (c INSERT EMPTY))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (CARD (c INSERT EMPTY))) (SUC (CARD (c INSERT EMPTY)))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCARD * * part cINSERT f1 part cEMPTY b0 c==> c==> c~ f2 c= cSUC cCARD * * part cINSERT f1 part cEMPTY b1 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND f2 b0 b1 * / ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCARD * * part cINSERT f1 part cEMPTY b0 c==> c==> c~ f2 c= cSUC cCARD * * part cINSERT f1 part cEMPTY b1 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND f2 b0 b1 f3 * / ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCARD * * part cINSERT f1 part cEMPTY b0 c==> c==> c~ f2 c= cSUC cCARD * * part cINSERT f1 part cEMPTY b1 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND f2 b0 b1 f3
- |- (((!n. ((_0 - (BIT1 n)) = _0)) ==> ((\n. ((_0 - (BIT1 n)) = _0)) n)) = ((\n. ((_0 - (BIT1 n)) = _0)) n))
T c= c==> ! c= c- c_0 cBIT1 b0 c_0 * / c= c- c_0 cBIT1 b0 c_0 f0 * / c= c- c_0 cBIT1 b0 c_0 f0
- |- ((\n. (((BIT0 n) - _0) = (BIT0 n))) n)
T * / c= c- cBIT0 b0 c_0 cBIT0 b0 f0
- |- ((\n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))) n)
T * / c= cEXP cBIT0 f0 cBIT0 b0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1
- |- ((((~ (b IN (c INSERT EMPTY))) ==> ((SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) = (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) = ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))))
T c= c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0
- |- ((\p'. (!q'. (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) (u x)) = q')) ==> (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 * f4 f0 b1 c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * f4 f0 c==> b0 b1 f5
+ (((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) ==> F), (((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) \/ ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 cF
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (g i)))) ==> (((sum (m .. n)) f) = ((sum (m .. n)) g)))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 f2 csum * * part c.. f0 f1 f3
+ (a IN (b INSERT (c INSERT EMPTY))) |- ((a IN (b INSERT (c INSERT EMPTY))) /\ ((CARD (b INSERT (c INSERT EMPTY))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))))
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0
- |- ((\m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))) m)
T * / ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1 f0
+ |- (((!m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) ==> ((\m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) m)) = ((\m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) m))
T c= c==> ! ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 * / ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 f0 * / ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 f0
+ |- ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> T))
T c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 cT
+ |- ((!a. (!b. (!c. (((~ (a = b)) /\ ((~ (a = c)) /\ ((~ (b = c)) /\ (~ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY)))))))) ==> ((interior ((hull convex) (a INSERT (b INSERT (c INSERT EMPTY))))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v))))))))) = (!a. (!b. (!c. ((~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) ==> ((interior ((hull convex) (a INSERT (b INSERT (c INSERT EMPTY))))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v))))))))))
T c= ! ! ! c==> c/\ c~ c= b0 b1 c/\ c~ c= b0 b2 c/\ c~ c= b1 b2 c~ caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * part cinterior * * part chull part cconvex * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * part cGSPEC / c? / cSETSPEC b3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ creal_lt creal_of_num cNUMERAL c_0 b6 c/\ creal_lt creal_of_num cNUMERAL c_0 b7 c/\ c= creal_add b5 creal_add b6 b7 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b5 b0 cvector_add c% b6 b1 c% b7 b2 b4 b4 ! ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * part cinterior * * part chull part cconvex * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * part cGSPEC / c? / cSETSPEC b3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ creal_lt creal_of_num cNUMERAL c_0 b6 c/\ creal_lt creal_of_num cNUMERAL c_0 b7 c/\ c= creal_add b5 creal_add b6 b7 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b5 b0 cvector_add c% b6 b1 c% b7 b2 b4 b4
+ |- ((!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) ((vector_add b) c)) $ i) = (y $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i))))) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) ((vector_add b) c)) $ i) = (y $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i))))))
T c==> ! c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add f0 cvector_add f1 f2 b0 c$ f3 b0 c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub cvector_sub cvector_sub f3 f0 f1 f2 b0 c$ cvec cNUMERAL c_0 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add f0 cvector_add f1 f2 b0 c$ f3 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub cvector_sub cvector_sub f3 f0 f1 f2 b0 c$ cvec cNUMERAL c_0 b0
- |- (((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) ==> ((\m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) m)) = ((\m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) m))
T c= c==> ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 * / ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 f0 * / ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 f0
+ |- ((\p'. (!q'. ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 b1 c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 c==> b0 b1 f5
- |- ((\n. (((BIT0 m) <= (BIT1 n)) = (m <= n))) n)
T * / c= c<= cBIT0 f0 cBIT1 b0 c<= f0 b0 f1
+ |- ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))))
T c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0
+ |- (!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) ((vector_add b) c)) $ i) = (y $ i)))))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_sub cvector_sub cvector_sub f1 f2 f3 f4 f0 c$ cvec cNUMERAL c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add f2 cvector_add f3 f4 f0 c$ f1 f0
+ |- ((real_neg ((real_sub ((real_sub ((real_sub ((real_sub (y $ i)) (a $ i))) (b $ i))) (c $ i))) (real_of_num (NUMERAL _0)))) = ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))))
T c= creal_neg creal_sub creal_sub creal_sub creal_sub c$ f0 f1 c$ f2 f1 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_add c$ f4 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1
+ (~ (a = b)), (~ (a = c)), (~ (b = c)), ((~ (b = c)) /\ (~ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY)))))) |- ((interior ((hull convex) (a INSERT (b INSERT (c INSERT EMPTY))))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v)))))
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f1 f2 c==> c/\ c~ c= f1 f2 c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part cinterior * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1
- |- ((\n. (((BIT1 n) + _0) = (BIT1 n))) n)
T * / c= c+ cBIT1 b0 c_0 cBIT1 b0 f0
- |- ((\n. (((BIT0 n) > _0) = (n > _0))) n)
T * / c= c> cBIT0 b0 c_0 c> b0 c_0 f0
- |- (((!e. (((real_add ((real_div e) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div e) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = e)) ==> ((\e. (((real_add ((real_div e) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div e) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = e)) e)) = ((\e. (((real_add ((real_div e) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div e) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = e)) e))
T c= c==> ! c= creal_add creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 * / c= creal_add creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 f0 * / c= creal_add creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 f0
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((?u. (((real_lt (real_of_num (NUMERAL _0))) v'') /\ ((!x. ((x IN EMPTY) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum EMPTY) u) = ((real_sub ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) v')) v'')) /\ (((vsum EMPTY) (\x. ((% (u x)) x))) = ((vector_sub ((vector_sub ((vector_sub y) ((% v) a))) ((% v') b))) ((% v'') c))))))) = (((real_lt (real_of_num (NUMERAL _0))) v'') /\ (?u. ((!x. ((x IN EMPTY) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum EMPTY) u) = ((real_sub ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) v')) v'')) /\ (((vsum EMPTY) (\x. ((% (u x)) x))) = ((vector_sub ((vector_sub ((vector_sub y) ((% v) a))) ((% v') b))) ((% v'') c))))))))
T c= c? / c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ ! c==> cIN b1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b0 b1 c/\ c= csum part cEMPTY b0 creal_sub creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f0 c= cvsum part cEMPTY / c% * b0 b1 b1 cvector_sub cvector_sub cvector_sub f3 c% f1 f4 c% f2 f5 c% f0 f6 c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c? / c/\ ! c==> cIN b1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b0 b1 c/\ c= csum part cEMPTY b0 creal_sub creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f0 c= cvsum part cEMPTY / c% * b0 b1 b1 cvector_sub cvector_sub cvector_sub f3 c% f1 f4 c% f2 f5 c% f0 f6
+ |- ((~ (a IN (b INSERT (c INSERT EMPTY)))) ==> ((SUC (CARD (b INSERT (c INSERT EMPTY)))) = (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))))
T c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0
+ |- ((((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) \/ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) ==> F)
T c==> c\/ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((\g'. (!t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((CARD EMPTY) = t')) ==> (((~ g') ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (c IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= cIN f0 part cEMPTY b0 c==> c==> b0 c= cCARD part cEMPTY b1 c==> c==> c~ b0 c= cSUC cCARD part cEMPTY b2 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND b0 b1 b2 f1
- |- ((~ ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) ==> ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))))
T c==> c~ c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1
- |- ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))
T c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
- |- ((\m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) m)
T * / ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 f0
- |- (~ (_0 >= (BIT1 n)))
T c~ c>= c_0 cBIT1 f0
+ |- (((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = T))
T c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
- |- (((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) ==> ((\m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) m)) = ((\m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) m))
T c= c==> ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 * / ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0 * / ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0
+ |- ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> q')))
T c==> c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 f3 c= c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 f3
- |- ((((c IN EMPTY) = (c IN EMPTY)) ==> (((c IN EMPTY) ==> ((NUMERAL _0) = t')) ==> (((~ (c IN EMPTY)) ==> ((SUC (NUMERAL _0)) = e')) ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = (((COND (c IN EMPTY)) t') e'))))) = (((c IN EMPTY) ==> ((NUMERAL _0) = t')) ==> (((~ (c IN EMPTY)) ==> ((SUC (NUMERAL _0)) = e')) ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = (((COND (c IN EMPTY)) t') e')))))
T c= c==> c= cIN f0 part cEMPTY cIN f0 part cEMPTY c==> c==> cIN f0 part cEMPTY c= cNUMERAL c_0 f1 c==> c==> c~ cIN f0 part cEMPTY c= cSUC cNUMERAL c_0 f2 c= cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND cIN f0 part cEMPTY f1 f2 c==> c==> cIN f0 part cEMPTY c= cNUMERAL c_0 f1 c==> c==> c~ cIN f0 part cEMPTY c= cSUC cNUMERAL c_0 f2 c= cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND cIN f0 part cEMPTY f1 f2
- |- ((\e'. ((((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV)) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = e')) ==> ((((COND ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND g') t') e')))))) e')
T * / c==> c= c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV f3 c==> c==> f3 c= part cEMPTY f4 c==> c==> c~ f3 c= * part cGSPEC / c? / cSETSPEC b1 c? / c/\ ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b3 b4 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b3 b4 b4 b2 b2 b0 c= * * * part cCOND c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c? / c/\ ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b3 b4 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b3 b4 b4 b2 b2 * * * part cCOND f3 f4 b0 f5
- |- ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))
T c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- ((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) |- (((real_lt (real_of_num (NUMERAL _0))) y) = T)
T c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 c= creal_lt creal_of_num cNUMERAL c_0 f3 cT
- |- (((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) ==> ((\m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) m)) = ((\m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) m))
T c= c==> ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 * / ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 f0 * / ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 f0
- (a IN (b INSERT (c INSERT EMPTY))) |- ((a IN (b INSERT (c INSERT EMPTY))) /\ ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))))
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) |- ((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- |- ((\n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n)))) n)
T * / c= c+ cBIT0 f0 cBIT0 b0 cBIT0 c+ f0 b0 f1
+ |- ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q'))))
T c==> c= c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 f3 c==> c==> f3 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 f4 c= c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 c==> f3 f4
- |- ((\n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) n)
T * / c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 f1
- |- ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))
T c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
+ (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> F), (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) \/ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- ((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) |- (((real_lt (real_of_num (NUMERAL _0))) x) = T)
T c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 c= creal_lt creal_of_num cNUMERAL c_0 f2 cT
- |- (((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) ==> ((\m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) m)) = ((\m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) m))
T c= c==> ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 * / ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 f0 * / ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 f0
- |- ((\m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) m)
T * / ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 f0
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = ((((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = T)) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> T))) = ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> T)))
T c= c==> c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 cT c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 cT c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 cT
- |- (((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) ==> ((\m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) m)) = ((\m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) m))
T c= c==> ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 * / ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 f0 * / ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 f0
+ |- (((FINITE (b INSERT (c INSERT EMPTY))) ==> ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) = (((COND (a IN (b INSERT (c INSERT EMPTY)))) (CARD (b INSERT (c INSERT EMPTY)))) (SUC (CARD (b INSERT (c INSERT EMPTY))))))) = ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) = (((COND (a IN (b INSERT (c INSERT EMPTY)))) (CARD (b INSERT (c INSERT EMPTY)))) (SUC (CARD (b INSERT (c INSERT EMPTY)))))))
T c= c==> cFINITE * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= cCARD * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cCOND cIN f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= cCARD * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cCOND cIN f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- ((((COND F) t1) t2) = t2)
T c= cCOND cF f0 f1 f1
- |- ((\n. (((BIT1 n) = _0) = F)) n)
T * / c= c= cBIT1 b0 c_0 cF f0
- |- (((!n. (((BIT1 m) < (BIT0 n)) = (m < n))) ==> ((\n. (((BIT1 m) < (BIT0 n)) = (m < n))) n)) = ((\n. (((BIT1 m) < (BIT0 n)) = (m < n))) n))
T c= c==> ! c= c< cBIT1 f0 cBIT0 b0 c< f0 b0 * / c= c< cBIT1 f0 cBIT0 b0 c< f0 b0 f1 * / c= c< cBIT1 f0 cBIT0 b0 c< f0 b0 f1
+ |- (((c IN EMPTY) = g') ==> ((g' ==> ((CARD EMPTY) = t')) ==> (((~ g') ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (c IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND g') t') e')))))
T c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cCARD part cEMPTY f2 c==> c==> c~ f1 c= cSUC cCARD part cEMPTY f3 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND f1 f2 f3
- |- ((_0 - (BIT0 n)) = _0)
T c= c- c_0 cBIT0 f0 c_0
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) ((vector_add b) c)) $ i) = (y $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i)))) = T)
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add f1 cvector_add f2 f3 f0 c$ f4 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_sub cvector_sub cvector_sub f4 f1 f2 f3 f0 c$ cvec cNUMERAL c_0 f0 cT
- |- ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))))))
T c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
+ |- ((b IN (c INSERT EMPTY)) ==> ((CARD (c INSERT EMPTY)) = (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))
T c==> cIN f0 * * part cINSERT f1 part cEMPTY c= cCARD * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0
- |- ((_0 >= _0) /\ ((!n. ((_0 >= (BIT0 n)) = (_0 >= n))) /\ ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))))))
T c/\ c>= c_0 c_0 c/\ ! c= c>= c_0 cBIT0 b0 c>= c_0 b0 c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))))))))
T c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- (((c IN EMPTY) ==> ((NUMERAL _0) = t')) ==> (((~ (c IN EMPTY)) ==> ((SUC (NUMERAL _0)) = e')) ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = (((COND (c IN EMPTY)) t') e'))))
T c==> c==> cIN f0 part cEMPTY c= cNUMERAL c_0 f1 c==> c==> c~ cIN f0 part cEMPTY c= cSUC cNUMERAL c_0 f2 c= cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND cIN f0 part cEMPTY f1 f2
+ |- (((!p'. (!q'. ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 * / ! c==> c= c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f3 * / ! c==> c= c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f3
+ |- ((\t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((CARD (c INSERT EMPTY)) = t')) ==> (((~ g') ==> ((SUC (CARD (c INSERT EMPTY))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (CARD (c INSERT EMPTY))) (SUC (CARD (c INSERT EMPTY)))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCARD * * part cINSERT f1 part cEMPTY b0 c==> c==> c~ f2 c= cSUC cCARD * * part cINSERT f1 part cEMPTY b1 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND f2 b0 b1 f3
- |- ((\n. (~ (_0 > (BIT1 n)))) n)
T * / c~ c> c_0 cBIT1 b0 f0
- |- ((\m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) m)
T * / ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!a. (!b. (!c. ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = ((a = b) \/ ((a = c) \/ ((b = c) \/ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY))))))))))) ==> ((\a. (!b. (!c. ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = ((a = b) \/ ((a = c) \/ ((b = c) \/ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY))))))))))) a)) = ((\a. (!b. (!c. ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = ((a = b) \/ ((a = c) \/ ((b = c) \/ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY))))))))))) a))
T c= c==> ! ! ! c= ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c= b0 b1 c\/ c= b0 b2 c\/ c= b1 b2 caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c= ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c= b0 b1 c\/ c= b0 b2 c\/ c= b1 b2 caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0 * / ! ! c= ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c= b0 b1 c\/ c= b0 b2 c\/ c= b1 b2 caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0
+ |- (((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = T)) ==> ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> T))) = ((((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> T)))
T c= c==> c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT c= c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 cT c= c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 cT
- |- (((!n. ((ODD (NUMERAL n)) = (ODD n))) ==> ((\n. ((ODD (NUMERAL n)) = (ODD n))) n)) = ((\n. ((ODD (NUMERAL n)) = (ODD n))) n))
T c= c==> ! c= cODD cNUMERAL b0 cODD b0 * / c= cODD cNUMERAL b0 cODD b0 f0 * / c= cODD cNUMERAL b0 cODD b0 f0
+ |- ((!b. (!c. (((~ (a = b)) /\ ((~ (a = c)) /\ ((~ (b = c)) /\ (~ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY)))))))) ==> ((interior ((hull convex) (a INSERT (b INSERT (c INSERT EMPTY))))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v)))))))) = T)
T c= ! ! c==> c/\ c~ c= f0 b0 c/\ c~ c= f0 b1 c/\ c~ c= b0 b1 c~ caffine_dependent * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * part cinterior * * part chull part cconvex * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ creal_lt creal_of_num cNUMERAL c_0 b6 c/\ c= creal_add b4 creal_add b5 b6 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b4 f0 cvector_add c% b5 b0 c% b6 b1 b3 b3 cT
- |- (((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) ==> ((\m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) m)) = ((\m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) m))
T c= c==> ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 * / ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 f0 * / ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 f0
+ |- ((\e. (((real_lt (real_of_num (NUMERAL _0))) ((real_div e) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_lt (real_of_num (NUMERAL _0))) e))) e)
T * / c= creal_lt creal_of_num cNUMERAL c_0 creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_lt creal_of_num cNUMERAL c_0 b0 f0
- ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0
+ |- (((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) ==> ((\s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) s)) = ((\s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) s))
T c= c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 * / ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 f0 * / ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 f0
- |- ((?v'''. (((real_lt (real_of_num (NUMERAL _0))) v'') /\ ((((real_sub ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) v')) v''') = (real_of_num (NUMERAL _0))) /\ (((vector_sub ((vector_sub ((vector_sub y) ((% v) a))) ((% v') b))) ((% v''') c)) = (vec (NUMERAL _0)))))) = (((real_lt (real_of_num (NUMERAL _0))) v'') /\ (?v''. ((((real_sub ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) v')) v'') = (real_of_num (NUMERAL _0))) /\ (((vector_sub ((vector_sub ((vector_sub y) ((% v) a))) ((% v') b))) ((% v'') c)) = (vec (NUMERAL _0)))))))
T c= c? / c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ c= creal_sub creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 b0 creal_of_num cNUMERAL c_0 c= cvector_sub cvector_sub cvector_sub f3 c% f1 f4 c% f2 f5 c% b0 f6 cvec cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c? / c/\ c= creal_sub creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 b0 creal_of_num cNUMERAL c_0 c= cvector_sub cvector_sub cvector_sub f3 c% f1 f4 c% f2 f5 c% b0 f6 cvec cNUMERAL c_0
- |- ((((b IN (c INSERT EMPTY)) = (b IN (c INSERT EMPTY))) ==> (((b IN (c INSERT EMPTY)) ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = t')) ==> (((~ (b IN (c INSERT EMPTY))) ==> ((SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = (((COND (b IN (c INSERT EMPTY))) t') e'))))) = (((b IN (c INSERT EMPTY)) ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = t')) ==> (((~ (b IN (c INSERT EMPTY))) ==> ((SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = (((COND (b IN (c INSERT EMPTY))) t') e')))))
T c= c==> c= cIN f0 * * part cINSERT f1 part cEMPTY cIN f0 * * part cINSERT f1 part cEMPTY c==> c==> cIN f0 * * part cINSERT f1 part cEMPTY c= cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f2 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f3 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND cIN f0 * * part cINSERT f1 part cEMPTY f2 f3 c==> c==> cIN f0 * * part cINSERT f1 part cEMPTY c= cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f2 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f3 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND cIN f0 * * part cINSERT f1 part cEMPTY f2 f3
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0
- ((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) |- ((real_lt (real_of_num (NUMERAL _0))) x)
T c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f1
- |- ((_0 > (BIT1 n)) = F)
T c= c> c_0 cBIT1 f0 cF
+ |- ((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- |- (((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) ==> ((\m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) m)) = ((\m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) m))
T c= c==> ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 * / ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 f0 * / ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 f0
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((vector_add a) ((vector_add b) c)) $ i) = (y $ i)) ==> ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i)))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) ((vector_add b) c)) $ i) = (y $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i))))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) ((vector_add b) c)) $ i) = (y $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i)))))
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ cvector_add f1 cvector_add f2 f3 f0 c$ f4 f0 c= c$ cvector_sub cvector_sub cvector_sub f4 f1 f2 f3 f0 c$ cvec cNUMERAL c_0 f0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add f1 cvector_add f2 f3 f0 c$ f4 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_sub cvector_sub cvector_sub f4 f1 f2 f3 f0 c$ cvec cNUMERAL c_0 f0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add f1 cvector_add f2 f3 f0 c$ f4 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_sub cvector_sub cvector_sub f4 f1 f2 f3 f0 c$ cvec cNUMERAL c_0 f0
- |- (((!n. (((BIT0 n) <= _0) = (n <= _0))) ==> ((\n. (((BIT0 n) <= _0) = (n <= _0))) n)) = ((\n. (((BIT0 n) <= _0) = (n <= _0))) n))
T c= c==> ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 * / c= c<= cBIT0 b0 c_0 c<= b0 c_0 f0 * / c= c<= cBIT0 b0 c_0 c<= b0 c_0 f0
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0))) = ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0
+ |- (T = (FINITE (b INSERT (c INSERT EMPTY))))
T c= cT cFINITE * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- ((\n. ((_0 < (BIT1 n)) = T)) n)
T * / c= c< c_0 cBIT1 b0 cT f0
- |- (((!g. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (((% (u x)) x) = (g x)))) ==> (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = ((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) g)))) ==> ((\g. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (((% (u x)) x) = (g x)))) ==> (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = ((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) g)))) g)) = ((\g. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (((% (u x)) x) = (g x)))) ==> (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = ((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) g)))) g))
T c= c==> ! c==> ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c% * f3 b1 b1 * b0 b1 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * f3 b1 b1 cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * / c==> ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c% * f3 b1 b1 * b0 b1 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * f3 b1 b1 cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 f4 * / c==> ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c% * f3 b1 b1 * b0 b1 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * f3 b1 b1 cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 f4
- |- ((?z'. (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z') c))) = v)))) = (((real_lt (real_of_num (NUMERAL _0))) z) /\ (?z. ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v)))))
T c= c? / c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ c= creal_add f1 creal_add f2 b0 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f1 f3 cvector_add c% f2 f4 c% b0 f5 f6 c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c? / c/\ c= creal_add f1 creal_add f2 b0 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f1 f3 cvector_add c% f2 f4 c% b0 f5 f6
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\p'. (!q'. ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f3
- |- (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))
T c= c* cNUMERAL f0 cNUMERAL f1 cNUMERAL c* f0 f1
- |- (((!q'. (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) (u x)) = q')) ==> (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x))) = (p' ==> q'))))) ==> ((\q'. (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) (u x)) = q')) ==> (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x))) = (p' ==> q'))))) q')) = ((\q'. (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) (u x)) = q')) ==> (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c==> f4 c= creal_lt creal_of_num cNUMERAL c_0 * f5 f0 b0 c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * f5 f0 c==> f4 b0 * / c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c==> f4 c= creal_lt creal_of_num cNUMERAL c_0 * f5 f0 b0 c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * f5 f0 c==> f4 b0 f6 * / c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c==> f4 c= creal_lt creal_of_num cNUMERAL c_0 * f5 f0 b0 c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * f5 f0 c==> f4 b0 f6
- |- (((!s. (!t. ((FINITE (s UNION t)) = ((FINITE s) /\ (FINITE t))))) ==> ((\s. (!t. ((FINITE (s UNION t)) = ((FINITE s) /\ (FINITE t))))) s)) = ((\s. (!t. ((FINITE (s UNION t)) = ((FINITE s) /\ (FINITE t))))) s))
T c= c==> ! ! c= cFINITE * * part cUNION b0 b1 c/\ cFINITE b0 cFINITE b1 * / ! c= cFINITE * * part cUNION b0 b1 c/\ cFINITE b0 cFINITE b1 f0 * / ! c= cFINITE * * part cUNION b0 b1 c/\ cFINITE b0 cFINITE b1 f0
- |- ((\g'. (!t'. (!e'. (((a IN (b INSERT (c INSERT EMPTY))) = g') ==> ((g' ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = t')) ==> (((~ g') ==> ((SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 b2 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND b0 b1 b2 f3
+ ((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) |- (((real_lt (real_of_num (NUMERAL _0))) y) = T)
T c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 c= creal_lt creal_of_num cNUMERAL c_0 f2 cT
+ ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n)))))) ==> ((\n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n)))))) n)) = ((\n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n)))))) n))
T c= c==> ! c= c* cBIT0 f0 cBIT1 b0 c+ cBIT0 f0 cBIT0 cBIT0 c* f0 b0 * / c= c* cBIT0 f0 cBIT1 b0 c+ cBIT0 f0 cBIT0 cBIT0 c* f0 b0 f1 * / c= c* cBIT0 f0 cBIT1 b0 c+ cBIT0 f0 cBIT0 cBIT0 c* f0 b0 f1
- (~ (a IN (b INSERT (c INSERT EMPTY)))) |- ((a IN (b INSERT (c INSERT EMPTY))) = F)
T c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- |- (((!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))) ==> ((\n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))) n)) = ((\n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))) n))
T c= c==> ! c= cEXP cNUMERAL f0 cNUMERAL b0 cNUMERAL cEXP f0 b0 * / c= cEXP cNUMERAL f0 cNUMERAL b0 cNUMERAL cEXP f0 b0 f1 * / c= cEXP cNUMERAL f0 cNUMERAL b0 cNUMERAL cEXP f0 b0 f1
- |- (((BIT0 m) <= (BIT0 n)) = (m <= n))
T c= c<= cBIT0 f0 cBIT0 f1 c<= f0 f1
+ (~ ((((real_sub ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) c) = (real_of_num (NUMERAL _0))) = (((real_add a) ((real_add b) c)) = (real_of_num (NUMERAL (BIT1 _0)))))) |- ((~ ((((real_sub ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) c) = (real_of_num (NUMERAL _0))) = (((real_add a) ((real_add b) c)) = (real_of_num (NUMERAL (BIT1 _0)))))) /\ F)
T c==> c~ c= c= creal_sub creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c~ c= c= creal_sub creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 f2 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = T))
T c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
+ |- (((FINITE (c INSERT EMPTY)) ==> ((CARD (b INSERT (c INSERT EMPTY))) = (((COND (b IN (c INSERT EMPTY))) (CARD (c INSERT EMPTY))) (SUC (CARD (c INSERT EMPTY)))))) = ((CARD (b INSERT (c INSERT EMPTY))) = (((COND (b IN (c INSERT EMPTY))) (CARD (c INSERT EMPTY))) (SUC (CARD (c INSERT EMPTY))))))
T c= c==> cFINITE * * part cINSERT f0 part cEMPTY c= cCARD * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cCOND cIN f1 * * part cINSERT f0 part cEMPTY cCARD * * part cINSERT f0 part cEMPTY cSUC cCARD * * part cINSERT f0 part cEMPTY c= cCARD * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cCOND cIN f1 * * part cINSERT f0 part cEMPTY cCARD * * part cINSERT f0 part cEMPTY cSUC cCARD * * part cINSERT f0 part cEMPTY
- |- ((\t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((NUMERAL _0) = t')) ==> (((~ g') ==> ((SUC (NUMERAL _0)) = e')) ==> ((((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cNUMERAL c_0 b0 c==> c==> c~ f1 c= cSUC cNUMERAL c_0 b1 c= cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND f1 b0 b1 f2
- |- ((\m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) m)
T * / ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 f0
+ |- ((((~ (c IN EMPTY)) ==> ((SUC (CARD EMPTY)) = (SUC (NUMERAL _0)))) ==> ((((COND (c IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) = ((((COND (c IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))
T c= c==> c==> c~ cIN f0 part cEMPTY c= cSUC cCARD part cEMPTY cSUC cNUMERAL c_0 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND cIN f0 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0
- |- ((ODD (NUMERAL n)) = (ODD n))
T c= cODD cNUMERAL f0 cODD f0
- |- ((\m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) m)
T * / ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. ((_0 - (BIT1 n)) = _0)) n)
T * / c= c- c_0 cBIT1 b0 c_0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) |- ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0
- |- (((~ (_0 > _0)) ==> ((_0 > _0) = F)) = ((_0 > _0) = F))
T c= c==> c~ c> c_0 c_0 c= c> c_0 c_0 cF c= c> c_0 c_0 cF
- |- (((!n. (((BIT0 m) < (BIT1 n)) = (m <= n))) ==> ((\n. (((BIT0 m) < (BIT1 n)) = (m <= n))) n)) = ((\n. (((BIT0 m) < (BIT1 n)) = (m <= n))) n))
T c= c==> ! c= c< cBIT0 f0 cBIT1 b0 c<= f0 b0 * / c= c< cBIT0 f0 cBIT1 b0 c<= f0 b0 f1 * / c= c< cBIT0 f0 cBIT1 b0 c<= f0 b0 f1
- |- (((~ (a IN (b INSERT (c INSERT EMPTY)))) ==> ((SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) = (((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) e')))
T c==> c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f3 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f3
+ |- ((\s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) s)
T * / c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 f2
- |- ((_0 < (BIT1 n)) = T)
T c= c< c_0 cBIT1 f0 cT
- ((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) |- ((a IN (b INSERT (c INSERT EMPTY))) = T)
T c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i)) ==> ((((vector_add a) ((vector_add b) c)) $ i) = (y $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ cvector_sub cvector_sub cvector_sub f1 f2 f3 f4 f0 c$ cvec cNUMERAL c_0 f0 c= c$ cvector_add f2 cvector_add f3 f4 f0 c$ f1 f0
+ |- (((!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) ==> ((\n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) n)) = ((\n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) n))
T c= c==> ! c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 * / c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 f1 * / c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 f1
- |- (((!m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) ==> ((\m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) m)) = ((\m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) m))
T c= c==> ! ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 * / ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 f0 * / ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 f0
- |- (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))
T c= c* cBIT1 f0 cBIT1 f1 c+ cBIT1 f0 c+ cBIT0 f1 cBIT0 cBIT0 c* f0 f1
+ |- (((!g'. (!t'. (!e'. ((((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV)) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = e')) ==> ((((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV)) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = e')) ==> ((((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV)) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = e')) ==> ((((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV b0 c==> c==> b0 c= part cEMPTY b1 c==> c==> c~ b0 c= * part cGSPEC / c? / cSETSPEC b3 c? / c/\ ! c==> cIN b6 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b5 b6 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b5 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b5 b6 b6 b4 b4 b2 c= * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b3 c? / c/\ ! c==> cIN b6 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b5 b6 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b5 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b5 b6 b6 b4 b4 * * * part cCOND b0 b1 b2 * / ! ! c==> c= c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV b0 c==> c==> b0 c= part cEMPTY b1 c==> c==> c~ b0 c= * part cGSPEC / c? / cSETSPEC b3 c? / c/\ ! c==> cIN b6 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b5 b6 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b5 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b5 b6 b6 b4 b4 b2 c= * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b3 c? / c/\ ! c==> cIN b6 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b5 b6 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b5 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b5 b6 b6 b4 b4 * * * part cCOND b0 b1 b2 f3 * / ! ! c==> c= c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV b0 c==> c==> b0 c= part cEMPTY b1 c==> c==> c~ b0 c= * part cGSPEC / c? / cSETSPEC b3 c? / c/\ ! c==> cIN b6 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b5 b6 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b5 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b5 b6 b6 b4 b4 b2 c= * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b3 c? / c/\ ! c==> cIN b6 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b5 b6 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b5 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b5 b6 b6 b4 b4 * * * part cCOND b0 b1 b2 f3
+ |- ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v)))))
T c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1
- |- (((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) ==> ((\m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) m)) = ((\m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) m))
T c= c==> ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 * / ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 f0 * / ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 f0
- |- (~ (_0 > (BIT0 n)))
T c~ c> c_0 cBIT0 f0
- |- ((\m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))) m)
T * / ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 f0
- ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0
+ |- (((((COND ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v))))) = ((((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v))))))
T c= c= * * * part cCOND c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1 c= * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1
+ |- ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q'))))
T c==> c= c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 f4 c==> c==> f4 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 f5 c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 c==> f4 f5
+ ((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) |- (((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = T)) = (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = T))
T c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 c= c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 cT c= creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 cT
+ |- ((!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e')))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 cT
+ |- ((((COND (b IN (c INSERT EMPTY))) (CARD (c INSERT EMPTY))) (SUC (CARD (c INSERT EMPTY)))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))
T c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0
+ |- ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))
T c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
+ |- ((\x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))))) x)
T * / ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 creal_add b0 b1 f0
+ |- ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> q')))
T c==> c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 f5 c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 f5
+ |- (((!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))) ==> ((\m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))) m)) = ((\m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))) m))
T c= c==> ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1 * / ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1 f0 * / ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1 f0
+ |- ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))))
T c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
+ |- ((~ ((((real_sub ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) c) = (real_of_num (NUMERAL _0))) = (((real_add a) ((real_add b) c)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)
T c==> c~ c= c= creal_sub creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 f2 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((!p'. (!q'. ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 b1 c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 c==> b0 b1 * / ! c==> c= c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 b1 c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 c==> b0 b1 f5 * / ! c==> c= c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 b1 c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 f4 creal_lt creal_of_num cNUMERAL c_0 creal_add f3 f4 c==> b0 b1 f5
+ |- (((!t'. (!e'. ((((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV)) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = e')) ==> ((((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV)) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = e')) ==> ((((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV)) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = e')) ==> ((((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV f3 c==> c==> f3 c= part cEMPTY b0 c==> c==> c~ f3 c= * part cGSPEC / c? / cSETSPEC b2 c? / c/\ ! c==> cIN b5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b4 b5 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b4 b5 b5 b3 b3 b1 c= * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c? / c/\ ! c==> cIN b5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b4 b5 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b4 b5 b5 b3 b3 * * * part cCOND f3 b0 b1 * / ! c==> c= c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV f3 c==> c==> f3 c= part cEMPTY b0 c==> c==> c~ f3 c= * part cGSPEC / c? / cSETSPEC b2 c? / c/\ ! c==> cIN b5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b4 b5 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b4 b5 b5 b3 b3 b1 c= * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c? / c/\ ! c==> cIN b5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b4 b5 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b4 b5 b5 b3 b3 * * * part cCOND f3 b0 b1 f4 * / ! c==> c= c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV f3 c==> c==> f3 c= part cEMPTY b0 c==> c==> c~ f3 c= * part cGSPEC / c? / cSETSPEC b2 c? / c/\ ! c==> cIN b5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b4 b5 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b4 b5 b5 b3 b3 b1 c= * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c? / c/\ ! c==> cIN b5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b4 b5 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b4 b5 b5 b3 b3 * * * part cCOND f3 b0 b1 f4
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))
T c==> c= c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 f3 c==> c==> f3 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f4 c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 f4
+ |- (((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = T))
T c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
+ |- (T = ((FINITE EMPTY) /\ ((!y. (((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) /\ (!x. (!y. (((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))))))))
T c= cT c/\ cFINITE part cEMPTY c/\ ! c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 creal_add b0 b1
+ |- ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))))
T c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!Q. ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x))))) ==> ((\Q. ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x))))) Q)) = ((\Q. ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x))))) Q))
T c= c==> ! c= c? / c/\ f0 * b0 b1 c/\ f0 c? / * b0 b1 * / c= c? / c/\ f0 * b0 b1 c/\ f0 c? / * b0 b1 f1 * / c= c? / c/\ f0 * b0 b1 c/\ f0 c? / * b0 b1 f1
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- ((((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (T = (FINITE (c INSERT EMPTY)))
T c= cT cFINITE * * part cINSERT f0 part cEMPTY
+ ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV)) |- (((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV)) /\ (EMPTY = EMPTY))
T c==> c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV c/\ c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV c= part cEMPTY part cEMPTY
+ |- (((!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))))) ==> ((\x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))))) x)) = ((\x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))))) x))
T c= c==> ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 creal_add b0 b1 * / ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 creal_add b0 b1 f0 * / ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 creal_add b0 b1 f0
+ |- (((b IN (c INSERT EMPTY)) ==> ((CARD (c INSERT EMPTY)) = t')) ==> (((~ (b IN (c INSERT EMPTY))) ==> ((SUC (CARD (c INSERT EMPTY))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (CARD (c INSERT EMPTY))) (SUC (CARD (c INSERT EMPTY)))) = (((COND (b IN (c INSERT EMPTY))) t') e'))))
T c==> c==> cIN f0 * * part cINSERT f1 part cEMPTY c= cCARD * * part cINSERT f1 part cEMPTY f2 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cSUC cCARD * * part cINSERT f1 part cEMPTY f3 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND cIN f0 * * part cINSERT f1 part cEMPTY f2 f3
+ |- ((c IN EMPTY) ==> ((CARD EMPTY) = (NUMERAL _0)))
T c==> cIN f0 part cEMPTY c= cCARD part cEMPTY cNUMERAL c_0
+ ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) |- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0
+ |- (((!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((CARD EMPTY) = t')) ==> (((~ g') ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (c IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND g') t') e')))))) ==> ((\e'. (((c IN EMPTY) = g') ==> ((g' ==> ((CARD EMPTY) = t')) ==> (((~ g') ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (c IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND g') t') e')))))) e')) = ((\e'. (((c IN EMPTY) = g') ==> ((g' ==> ((CARD EMPTY) = t')) ==> (((~ g') ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (c IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cCARD part cEMPTY f2 c==> c==> c~ f1 c= cSUC cCARD part cEMPTY b0 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND f1 f2 b0 * / c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cCARD part cEMPTY f2 c==> c==> c~ f1 c= cSUC cCARD part cEMPTY b0 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND f1 f2 b0 f3 * / c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cCARD part cEMPTY f2 c==> c==> c~ f1 c= cSUC cCARD part cEMPTY b0 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND f1 f2 b0 f3
+ |- (((!g'. (!t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((CARD EMPTY) = t')) ==> (((~ g') ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (c IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((CARD EMPTY) = t')) ==> (((~ g') ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (c IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((CARD EMPTY) = t')) ==> (((~ g') ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (c IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= cIN f0 part cEMPTY b0 c==> c==> b0 c= cCARD part cEMPTY b1 c==> c==> c~ b0 c= cSUC cCARD part cEMPTY b2 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND b0 b1 b2 * / ! ! c==> c= cIN f0 part cEMPTY b0 c==> c==> b0 c= cCARD part cEMPTY b1 c==> c==> c~ b0 c= cSUC cCARD part cEMPTY b2 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND b0 b1 b2 f1 * / ! ! c==> c= cIN f0 part cEMPTY b0 c==> c==> b0 c= cCARD part cEMPTY b1 c==> c==> c~ b0 c= cSUC cCARD part cEMPTY b2 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND b0 b1 b2 f1
+ ((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) |- (((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) /\ (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = T))
T c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 c/\ c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ (~ (a = b)), (~ (a = c)), (~ (b = c)) |- ((((COND ((((COND ((a = b) \/ (a = c))) (((COND (b = c)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (b = c)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v)))))
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f1 f2 c= * * * part cCOND c<= cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1
+ |- ((F \/ t) = t)
T c= c\/ cF f0 f0
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((lambdai. ((real_sub ((lambdai. ((real_sub ((lambdai. ((real_sub (y $ i)) (a $ i))) $ i)) (b $ i))) $ i)) (c $ i))) $ i) = ((lambdai. (real_of_num (NUMERAL _0))) $ i)) ==> (((lambdai. ((real_add (a $ i)) ((lambdai. ((real_add (b $ i)) (c $ i))) $ i))) $ i) = (y $ i)))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i)) ==> ((((vector_add a) ((vector_add b) c)) $ i) = (y $ i)))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ clambda / creal_sub c$ clambda / creal_sub c$ clambda / creal_sub c$ f1 b1 c$ f2 b1 b1 c$ f3 b1 b0 c$ f4 b0 f0 c$ clambda / creal_of_num cNUMERAL c_0 f0 c= c$ clambda / creal_add c$ f2 b0 c$ clambda / creal_add c$ f3 b1 c$ f4 b1 b0 f0 c$ f1 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ cvector_sub cvector_sub cvector_sub f1 f2 f3 f4 f0 c$ cvec cNUMERAL c_0 f0 c= c$ cvector_add f2 cvector_add f3 f4 f0 c$ f1 f0
+ ((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) |- (((real_lt (real_of_num (NUMERAL _0))) y) = T)
T c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 c= creal_lt creal_of_num cNUMERAL c_0 f3 cT
+ |- ((\n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) n)
T * / c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 f0
+ |- ((x IN EMPTY) = F)
T c= cIN f0 part cEMPTY cF
+ |- (((!q'. ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))) ==> ((\q'. ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))) q')) = ((\q'. ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 f3 c==> c==> f3 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 b0 * / c==> c= c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 f3 c==> c==> f3 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 b0 f4 * / c==> c= c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 f3 c==> c==> f3 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 b0 f4
+ |- (((!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2)))))) ==> ((\t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2)))))) t1)) = ((\t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2)))))) t1))
T c= c==> ! ! c/\ c= c~ c/\ b0 b1 c\/ c~ b0 c~ b1 c= c~ c\/ b0 b1 c/\ c~ b0 c~ b1 * / ! c/\ c= c~ c/\ b0 b1 c\/ c~ b0 c~ b1 c= c~ c\/ b0 b1 c/\ c~ b0 c~ b1 f0 * / ! c/\ c= c~ c/\ b0 b1 c\/ c~ b0 c~ b1 c= c~ c\/ b0 b1 c/\ c~ b0 c~ b1 f0
+ |- (((!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))) ==> ((\s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))) s)) = ((\s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))) s))
T c= c==> ! c==> cFINITE b0 c= cCARD * * part cINSERT f0 b0 cCOND cIN f0 b0 cCARD b0 cSUC cCARD b0 * / c==> cFINITE b0 c= cCARD * * part cINSERT f0 b0 cCOND cIN f0 b0 cCARD b0 cSUC cCARD b0 f1 * / c==> cFINITE b0 c= cCARD * * part cINSERT f0 b0 cCOND cIN f0 b0 cCARD b0 cSUC cCARD b0 f1
+ |- (((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = ((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)))) ==> ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> q')))) = ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> q'))))
T c= c==> c= c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 c==> c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 f4 c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 f4 c==> c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 f4 c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 f4
+ ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = ((\x. (((real_mul x) ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) |- (((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0
+ |- ((?u. ((!x. ((x IN EMPTY) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum EMPTY) u) = ((real_sub ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) v')) v'')) /\ (((vsum EMPTY) (\x. ((% (u x)) x))) = ((vector_sub ((vector_sub ((vector_sub y) ((% v) a))) ((% v') b))) ((% v'') c)))))) = ((((real_sub ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) v')) v'') = (real_of_num (NUMERAL _0))) /\ (((vector_sub ((vector_sub ((vector_sub y) ((% v) a))) ((% v') b))) ((% v'') c)) = (vec (NUMERAL _0)))))
T c= c? / c/\ ! c==> cIN b1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b0 b1 c/\ c= csum part cEMPTY b0 creal_sub creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 c= cvsum part cEMPTY / c% * b0 b1 b1 cvector_sub cvector_sub cvector_sub f3 c% f0 f4 c% f1 f5 c% f2 f6 c/\ c= creal_sub creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 creal_of_num cNUMERAL c_0 c= cvector_sub cvector_sub cvector_sub f3 c% f0 f4 c% f1 f5 c% f2 f6 cvec cNUMERAL c_0
+ |- ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))
T c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((lambdai. ((real_sub ((lambdai. ((real_sub ((lambdai. ((real_sub (y $ i)) (a $ i))) $ i)) (b $ i))) $ i)) (c $ i))) $ i) = ((lambdai. (real_of_num (NUMERAL _0))) $ i)) ==> (((lambdai. ((real_add (a $ i)) ((lambdai. ((real_add (b $ i)) (c $ i))) $ i))) $ i) = (y $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ clambda / creal_sub c$ clambda / creal_sub c$ clambda / creal_sub c$ f1 b1 c$ f2 b1 b1 c$ f3 b1 b0 c$ f4 b0 f0 c$ clambda / creal_of_num cNUMERAL c_0 f0 c= c$ clambda / creal_add c$ f2 b0 c$ clambda / creal_add c$ f3 b1 c$ f4 b1 b0 f0 c$ f1 f0
+ |- ((?u. ((!x. ((x IN (c INSERT EMPTY)) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (c INSERT EMPTY)) u) = ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) v')) /\ (((vsum (c INSERT EMPTY)) (\x. ((% (u x)) x))) = ((vector_sub ((vector_sub y) ((% v) a))) ((% v') b)))))) = (?v''. (?u. (((real_lt (real_of_num (NUMERAL _0))) v'') /\ ((!x. ((x IN EMPTY) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum EMPTY) u) = ((real_sub ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) v')) v'')) /\ (((vsum EMPTY) (\x. ((% (u x)) x))) = ((vector_sub ((vector_sub ((vector_sub y) ((% v) a))) ((% v') b))) ((% v'') c)))))))))
T c= c? / c/\ ! c==> cIN b1 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b0 b1 c/\ c= csum * * part cINSERT f0 part cEMPTY b0 creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c= cvsum * * part cINSERT f0 part cEMPTY / c% * b0 b1 b1 cvector_sub cvector_sub f3 c% f1 f4 c% f2 f5 c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> cIN b2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b1 b2 c/\ c= csum part cEMPTY b1 creal_sub creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 b0 c= cvsum part cEMPTY / c% * b1 b2 b2 cvector_sub cvector_sub cvector_sub f3 c% f1 f4 c% f2 f5 c% b0 f0
+ |- ((((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?v. (((real_lt (real_of_num (NUMERAL _0))) v) /\ (?v'. (((real_lt (real_of_num (NUMERAL _0))) v') /\ (?v''. (((real_lt (real_of_num (NUMERAL _0))) v'') /\ ((((real_add v) ((real_add v') v'')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% v) a)) ((vector_add ((% v') b)) ((% v'') c))) = y))))))))) y)))) = (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?v. (((real_lt (real_of_num (NUMERAL _0))) v) /\ (?v'. (((real_lt (real_of_num (NUMERAL _0))) v') /\ (?v''. (((real_lt (real_of_num (NUMERAL _0))) v'') /\ ((((real_add v) ((real_add v') v'')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% v) a)) ((vector_add ((% v') b)) ((% v'') c))) = y))))))))) y))))) = T) = (((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?v. (((real_lt (real_of_num (NUMERAL _0))) v) /\ (?v'. (((real_lt (real_of_num (NUMERAL _0))) v') /\ (?v''. (((real_lt (real_of_num (NUMERAL _0))) v'') /\ ((((real_add v) ((real_add v') v'')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% v) a)) ((vector_add ((% v') b)) ((% v'') c))) = y))))))))) y)))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (?y. (((real_lt (real_of_num (NUMERAL _0))) y) /\ (?z. (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v))))) = T))
T c= c= c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1 cT c= c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1 cT
+ |- ((((~ ((((real_add (a $ i)) ((real_add (b $ i)) (c $ i))) = (y $ i)) ==> (((real_sub ((real_sub ((real_sub (y $ i)) (a $ i))) (b $ i))) (c $ i)) = (real_of_num (NUMERAL _0))))) ==> F) ==> ((((real_add (a $ i)) ((real_add (b $ i)) (c $ i))) = (y $ i)) ==> (((real_sub ((real_sub ((real_sub (y $ i)) (a $ i))) (b $ i))) (c $ i)) = (real_of_num (NUMERAL _0))))) = ((((real_add (a $ i)) ((real_add (b $ i)) (c $ i))) = (y $ i)) ==> (((real_sub ((real_sub ((real_sub (y $ i)) (a $ i))) (b $ i))) (c $ i)) = (real_of_num (NUMERAL _0)))))
T c= c==> c==> c~ c==> c= creal_add c$ f0 f1 creal_add c$ f2 f1 c$ f3 f1 c$ f4 f1 c= creal_sub creal_sub creal_sub c$ f4 f1 c$ f0 f1 c$ f2 f1 c$ f3 f1 creal_of_num cNUMERAL c_0 cF c==> c= creal_add c$ f0 f1 creal_add c$ f2 f1 c$ f3 f1 c$ f4 f1 c= creal_sub creal_sub creal_sub c$ f4 f1 c$ f0 f1 c$ f2 f1 c$ f3 f1 creal_of_num cNUMERAL c_0 c==> c= creal_add c$ f0 f1 creal_add c$ f2 f1 c$ f3 f1 c$ f4 f1 c= creal_sub creal_sub creal_sub c$ f4 f1 c$ f0 f1 c$ f2 f1 c$ f3 f1 creal_of_num cNUMERAL c_0
+ |- ((\t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))) t2)
T * / c/\ c= c~ c/\ f0 b0 c\/ c~ f0 c~ b0 c= c~ c\/ f0 b0 c/\ c~ f0 c~ b0 f1
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) ((vector_add b) c)) $ i) = (y $ i)))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub cvector_sub cvector_sub f0 f1 f2 f3 b0 c$ cvec cNUMERAL c_0 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add f1 cvector_add f2 f3 b0 c$ f0 b0
+ |- ((\e'. ((((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV)) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = e')) ==> ((((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND g') t') e')))))) e')
T * / c==> c= c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV f3 c==> c==> f3 c= part cEMPTY f4 c==> c==> c~ f3 c= * part cGSPEC / c? / cSETSPEC b1 c? / c/\ ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b3 b4 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b3 b4 b4 b2 b2 b0 c= * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c? / c/\ ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b3 b4 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b3 b4 b4 b2 b2 * * * part cCOND f3 f4 b0 f5
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = T))
T c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 cT
+ |- (((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = ((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)))) ==> ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> q')))) = ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> q'))))
T c= c==> c= c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 c==> c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 f3 c= c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 f3 c==> c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 f3 c= c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 f3
+ |- ((((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV)) ==> (EMPTY = t')) ==> (((~ ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV))) ==> ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = e')) ==> ((((COND ((CARD (a INSERT (b INSERT (c INSERT EMPTY)))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (((COND ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV))) t') e'))))
T c==> c==> c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV c= part cEMPTY f3 c==> c==> c~ c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 f4 c= * * * part cCOND c<= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * * * part cCOND c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV f3 f4
+ |- (((~ (b IN (c INSERT EMPTY))) ==> ((SUC (CARD (c INSERT EMPTY))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (CARD (c INSERT EMPTY))) (SUC (CARD (c INSERT EMPTY)))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) e')))
T c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cSUC cCARD * * part cINSERT f1 part cEMPTY f2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f2
+ ((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) |- (((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = T)) = (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = T))
T c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 c= c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 cT c= creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 cT
+ |- ((~ ((((real_add (a $ i)) ((real_add (b $ i)) (c $ i))) = (y $ i)) ==> (((real_sub ((real_sub ((real_sub (y $ i)) (a $ i))) (b $ i))) (c $ i)) = (real_of_num (NUMERAL _0))))) ==> F)
T c==> c~ c==> c= creal_add c$ f0 f1 creal_add c$ f2 f1 c$ f3 f1 c$ f4 f1 c= creal_sub creal_sub creal_sub c$ f4 f1 c$ f0 f1 c$ f2 f1 c$ f3 f1 creal_of_num cNUMERAL c_0 cF
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) ((vector_add b) c)) $ i) = (y $ i)))) = T)
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_sub cvector_sub cvector_sub f1 f2 f3 f4 f0 c$ cvec cNUMERAL c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add f2 cvector_add f3 f4 f0 c$ f1 f0 cT
+ |- ((\x. ((FINITE (x INSERT s)) = (FINITE s))) x)
T * / c= cFINITE * * part cINSERT b0 f0 cFINITE f0 f1
+ (~ (a IN (b INSERT (c INSERT EMPTY)))) |- ((~ (a IN (b INSERT (c INSERT EMPTY)))) /\ ((SUC (CARD (b INSERT (c INSERT EMPTY)))) = (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))))
T c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0
+ |- (((NUMERAL m) <= (NUMERAL n)) = (m <= n))
T c= c<= cNUMERAL f0 cNUMERAL f1 c<= f0 f1
+ |- ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))
T c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ |- (((!q'. ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q'))))) ==> ((\q'. ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q'))))) q')) = ((\q'. ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 f3 c==> c==> f3 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 b0 c= c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 c==> f3 b0 * / c==> c= c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 f3 c==> c==> f3 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 b0 c= c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 c==> f3 b0 f4 * / c==> c= c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 f3 c==> c==> f3 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 b0 c= c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 c==> f3 b0 f4
+ |- ((CARD (c INSERT EMPTY)) = (((COND (c IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))))
T c= cCARD * * part cINSERT f0 part cEMPTY cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY
+ (~ (a = b)), (~ (a = c)), (~ (b = c)) |- ((((COND ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v)))))
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f1 f2 c= * * * part cCOND c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1
+ |- ((((FINITE EMPTY) /\ ((!y. (((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) /\ (!x. (!y. (((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))))))) ==> ((?u. ((!x. ((x IN (c INSERT EMPTY)) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (c INSERT EMPTY)) u) = ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) v')) /\ (((vsum (c INSERT EMPTY)) (\x. ((% (u x)) x))) = ((vector_sub ((vector_sub y) ((% v) a))) ((% v') b)))))) = (?v''. (?u. (((real_lt (real_of_num (NUMERAL _0))) v'') /\ ((!x. ((x IN EMPTY) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum EMPTY) u) = ((real_sub ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) v')) v'')) /\ (((vsum EMPTY) (\x. ((% (u x)) x))) = ((vector_sub ((vector_sub ((vector_sub y) ((% v) a))) ((% v') b))) ((% v'') c)))))))))) = ((?u. ((!x. ((x IN (c INSERT EMPTY)) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (c INSERT EMPTY)) u) = ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) v')) /\ (((vsum (c INSERT EMPTY)) (\x. ((% (u x)) x))) = ((vector_sub ((vector_sub y) ((% v) a))) ((% v') b)))))) = (?v''. (?u. (((real_lt (real_of_num (NUMERAL _0))) v'') /\ ((!x. ((x IN EMPTY) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum EMPTY) u) = ((real_sub ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) v')) v'')) /\ (((vsum EMPTY) (\x. ((% (u x)) x))) = ((vector_sub ((vector_sub ((vector_sub y) ((% v) a))) ((% v') b))) ((% v'') c))))))))))
T c= c==> c/\ cFINITE part cEMPTY c/\ ! c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 creal_add b0 b1 c= c? / c/\ ! c==> cIN b1 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b0 b1 c/\ c= csum * * part cINSERT f0 part cEMPTY b0 creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c= cvsum * * part cINSERT f0 part cEMPTY / c% * b0 b1 b1 cvector_sub cvector_sub f3 c% f1 f4 c% f2 f5 c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> cIN b2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b1 b2 c/\ c= csum part cEMPTY b1 creal_sub creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 b0 c= cvsum part cEMPTY / c% * b1 b2 b2 cvector_sub cvector_sub cvector_sub f3 c% f1 f4 c% f2 f5 c% b0 f0 c= c? / c/\ ! c==> cIN b1 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b0 b1 c/\ c= csum * * part cINSERT f0 part cEMPTY b0 creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c= cvsum * * part cINSERT f0 part cEMPTY / c% * b0 b1 b1 cvector_sub cvector_sub f3 c% f1 f4 c% f2 f5 c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> cIN b2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b1 b2 c/\ c= csum part cEMPTY b1 creal_sub creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 b0 c= cvsum part cEMPTY / c% * b1 b2 b2 cvector_sub cvector_sub cvector_sub f3 c% f1 f4 c% f2 f5 c% b0 f0
+ |- (T = ((FINITE (c INSERT EMPTY)) /\ ((!y. (((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) /\ (!x. (!y. (((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))))))))
T c= cT c/\ cFINITE * * part cINSERT f0 part cEMPTY c/\ ! c==> c/\ cIN f1 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 creal_div b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN f1 * * part cINSERT f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 creal_add b0 b1
+ |- ((\q'. ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = q')) ==> ((((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 f4 c==> c==> f4 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 b0 c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 c==> f4 b0 f5
+ |- ((\n. (((BIT1 m) < (BIT1 n)) = (m < n))) n)
T * / c= c< cBIT1 f0 cBIT1 b0 c< f0 b0 f1
+ |- ((\b. (!c. ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = ((a = b) \/ ((a = c) \/ ((b = c) \/ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY)))))))))) b)
T * / ! c= ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c= f0 b0 c\/ c= f0 b1 c\/ c= b0 b1 caffine_dependent * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1
+ |- (FINITE (c INSERT EMPTY))
T cFINITE * * part cINSERT f0 part cEMPTY
+ |- ((\m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) m)
T * / ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 f0
+ |- ((\P. (!Q. ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x)))))) P)
T * / ! c= c? / c/\ b0 * b1 b2 c/\ b0 c? / * b1 b2 f0
+ (((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) |- (((((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((c IN EMPTY) = (c IN EMPTY)) ==> (((c IN EMPTY) ==> ((CARD EMPTY) = t')) ==> (((~ (c IN EMPTY)) ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (c IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND (c IN EMPTY)) t') e'))))) = (((c IN EMPTY) ==> ((CARD EMPTY) = t')) ==> (((~ (c IN EMPTY)) ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (c IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND (c IN EMPTY)) t') e')))))
T c= c==> c= cIN f0 part cEMPTY cIN f0 part cEMPTY c==> c==> cIN f0 part cEMPTY c= cCARD part cEMPTY f1 c==> c==> c~ cIN f0 part cEMPTY c= cSUC cCARD part cEMPTY f2 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND cIN f0 part cEMPTY f1 f2 c==> c==> cIN f0 part cEMPTY c= cCARD part cEMPTY f1 c==> c==> c~ cIN f0 part cEMPTY c= cSUC cCARD part cEMPTY f2 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND cIN f0 part cEMPTY f1 f2
+ |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((\g'. (!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((CARD (c INSERT EMPTY)) = t')) ==> (((~ g') ==> ((SUC (CARD (c INSERT EMPTY))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (CARD (c INSERT EMPTY))) (SUC (CARD (c INSERT EMPTY)))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= cCARD * * part cINSERT f1 part cEMPTY b1 c==> c==> c~ b0 c= cSUC cCARD * * part cINSERT f1 part cEMPTY b2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND b0 b1 b2 f2
+ |- (((!b. (!c. ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = ((a = b) \/ ((a = c) \/ ((b = c) \/ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY)))))))))) ==> ((\b. (!c. ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = ((a = b) \/ ((a = c) \/ ((b = c) \/ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY)))))))))) b)) = ((\b. (!c. ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = ((a = b) \/ ((a = c) \/ ((b = c) \/ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY)))))))))) b))
T c= c==> ! ! c= ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c= f0 b0 c\/ c= f0 b1 c\/ c= b0 b1 caffine_dependent * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! c= ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c= f0 b0 c\/ c= f0 b1 c\/ c= b0 b1 caffine_dependent * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1 * / ! c= ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c= f0 b0 c\/ c= f0 b1 c\/ c= b0 b1 caffine_dependent * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ ((((lambdai. ((real_add (a $ i)) ((lambdai. ((real_add (b $ i)) (c $ i))) $ i))) $ i) = (y $ i)) ==> (((lambdai. ((real_sub ((lambdai. ((real_sub ((lambdai. ((real_sub (y $ i)) (a $ i))) $ i)) (b $ i))) $ i)) (c $ i))) $ i) = ((lambdai. (real_of_num (NUMERAL _0))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ clambda / creal_add c$ f1 b0 c$ clambda / creal_add c$ f2 b1 c$ f3 b1 b0 f0 c$ f4 f0 c= c$ clambda / creal_sub c$ clambda / creal_sub c$ clambda / creal_sub c$ f4 b1 c$ f1 b1 b1 c$ f2 b1 b0 c$ f3 b0 f0 c$ clambda / creal_of_num cNUMERAL c_0 f0
+ (((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) |- ((((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ (c IN EMPTY) |- ((c IN EMPTY) /\ ((CARD EMPTY) = (NUMERAL _0)))
T c==> cIN f0 part cEMPTY c/\ cIN f0 part cEMPTY c= cCARD part cEMPTY cNUMERAL c_0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- (((((real_add (a $ i)) ((real_add (b $ i)) (c $ i))) = (y $ i)) ==> (((real_sub ((real_sub ((real_sub (y $ i)) (a $ i))) (b $ i))) (c $ i)) = (real_of_num (NUMERAL _0)))) = ((((lambdai. ((real_add (a $ i)) ((lambdai. ((real_add (b $ i)) (c $ i))) $ i))) $ i) = (y $ i)) ==> (((lambdai. ((real_sub ((lambdai. ((real_sub ((lambdai. ((real_sub (y $ i)) (a $ i))) $ i)) (b $ i))) $ i)) (c $ i))) $ i) = ((lambdai. (real_of_num (NUMERAL _0))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c==> c= creal_add c$ f1 f0 creal_add c$ f2 f0 c$ f3 f0 c$ f4 f0 c= creal_sub creal_sub creal_sub c$ f4 f0 c$ f1 f0 c$ f2 f0 c$ f3 f0 creal_of_num cNUMERAL c_0 c==> c= c$ clambda / creal_add c$ f1 b0 c$ clambda / creal_add c$ f2 b1 c$ f3 b1 b0 f0 c$ f4 f0 c= c$ clambda / creal_sub c$ clambda / creal_sub c$ clambda / creal_sub c$ f4 b1 c$ f1 b1 b1 c$ f2 b1 b0 c$ f3 b0 f0 c$ clambda / creal_of_num cNUMERAL c_0 f0
+ |- ((\m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))) m)
T * / ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1 f0
+ |- (((!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) ==> ((\y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) y)) = ((\y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) y))
T c= c==> ! ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 * / ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 f1 * / ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 f1
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!n. (((BIT1 m) <= (BIT0 n)) = (m < n))) ==> ((\n. (((BIT1 m) <= (BIT0 n)) = (m < n))) n)) = ((\n. (((BIT1 m) <= (BIT0 n)) = (m < n))) n))
T c= c==> ! c= c<= cBIT1 f0 cBIT0 b0 c< f0 b0 * / c= c<= cBIT1 f0 cBIT0 b0 c< f0 b0 f1 * / c= c<= cBIT1 f0 cBIT0 b0 c< f0 b0 f1
+ |- ((real_neg ((real_sub ((real_add a) ((real_add b) c))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= creal_neg creal_sub creal_add f0 creal_add f1 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((((COND (a IN (b INSERT (c INSERT EMPTY)))) (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))))) (SUC (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) (SUC (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))))) <= (dimindex UNIV)) ==> (EMPTY = EMPTY))
T c==> c<= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cSUC cCOND cIN f2 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 cdimindex part cUNIV c= part cEMPTY part cEMPTY
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((lambdai. ((real_add (a $ i)) ((lambdai. ((real_add (b $ i)) (c $ i))) $ i))) $ i) = (y $ i)) ==> (((lambdai. ((real_sub ((lambdai. ((real_sub ((lambdai. ((real_sub (y $ i)) (a $ i))) $ i)) (b $ i))) $ i)) (c $ i))) $ i) = ((lambdai. (real_of_num (NUMERAL _0))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ clambda / creal_add c$ f1 b0 c$ clambda / creal_add c$ f2 b1 c$ f3 b1 b0 f0 c$ f4 f0 c= c$ clambda / creal_sub c$ clambda / creal_sub c$ clambda / creal_sub c$ f4 b1 c$ f1 b1 b1 c$ f2 b1 b0 c$ f3 b0 f0 c$ clambda / creal_of_num cNUMERAL c_0 f0
+ |- (!p'. (!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3
+ (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) \/ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) |- ((((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) \/ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) /\ F)
T c==> c\/ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c\/ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ (((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) = ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) ==> ((\x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) x)) = ((\x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) x))
T c= c==> ! ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 * / ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 f0 * / ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 f0
+ ((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) |- (((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = T))
T c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 c/\ c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 cT
+ |- (((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q')))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3 cT
+ (~ (a = b)), ((~ (a = b)) /\ ((~ (a = c)) /\ ((~ (b = c)) /\ (~ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY)))))))) |- ((interior ((hull convex) (a INSERT (b INSERT (c INSERT EMPTY))))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v)))))
T c==> c~ c= f0 f1 c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f1 f2 c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part cinterior * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) |- ((((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((x = (real_of_num (NUMERAL _0))) /\ ((real_gt y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 creal_gt f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 f1 creal_of_num cNUMERAL c_0
+ |- ((T /\ t) = t)
T c= c/\ cT f0 f0
+ |- (!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) ((vector_add b) c)) $ i) = (y $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i)))))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add f1 cvector_add f2 f3 f0 c$ f4 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_sub cvector_sub cvector_sub f4 f1 f2 f3 f0 c$ cvec cNUMERAL c_0 f0
+ |- (((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = T)) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> T))) = ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> T)))
T c= c==> c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 cT c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 cT
+ |- ((~ (c IN EMPTY)) ==> ((SUC (CARD EMPTY)) = (SUC (NUMERAL _0))))
T c==> c~ cIN f0 part cEMPTY c= cSUC cCARD part cEMPTY cSUC cNUMERAL c_0
+ (~ (a = b)), (~ (a = c)), (~ (b = c)) |- (((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v))))) = ((((COND ((((COND ((a = b) \/ (a = c))) (((COND (b = c)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (b = c)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) <= (dimindex UNIV))) EMPTY) (GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y))))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v))))))
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f1 f2 c= c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1 c= * * * part cCOND c<= cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cdimindex part cUNIV part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) $ i) = ((vec (NUMERAL _0)) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) ((vector_add b) c)) $ i) = (y $ i))))) = ((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) = (vec (NUMERAL _0))) ==> (((vector_add a) ((vector_add b) c)) = y)))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub cvector_sub cvector_sub f0 f1 f2 f3 b0 c$ cvec cNUMERAL c_0 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add f1 cvector_add f2 f3 b0 c$ f0 b0 c==> c= cvector_sub cvector_sub cvector_sub f0 f1 f2 f3 cvec cNUMERAL c_0 c= cvector_add f1 cvector_add f2 f3 f0
+ |- ((\y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))) y)
T * / c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 b0 f1
+ (~ ((((real_sub ((real_sub ((real_sub (y $ i)) (a $ i))) (b $ i))) (c $ i)) = (real_of_num (NUMERAL _0))) ==> (((real_add (a $ i)) ((real_add (b $ i)) (c $ i))) = (y $ i)))) |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) \/ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))))
T c==> c~ c==> c= creal_sub creal_sub creal_sub c$ f0 f1 c$ f2 f1 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c= creal_add c$ f2 f1 creal_add c$ f3 f1 c$ f4 f1 c$ f0 f1 c\/ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f2 f1 creal_add c$ f3 f1 creal_add c$ f4 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 c$ f0 f1 creal_of_num cNUMERAL c_0
+ |- ((\n. (((BIT1 m) <= (BIT0 n)) = (m < n))) n)
T * / c= c<= cBIT1 f0 cBIT0 b0 c< f0 b0 f1
+ ((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) |- (((c IN EMPTY) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) /\ (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = T))
T c==> c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 c/\ c/\ cIN f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f1 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
+ |- ((((b IN (c INSERT EMPTY)) = (b IN (c INSERT EMPTY))) ==> (((b IN (c INSERT EMPTY)) ==> ((CARD (c INSERT EMPTY)) = t')) ==> (((~ (b IN (c INSERT EMPTY))) ==> ((SUC (CARD (c INSERT EMPTY))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (CARD (c INSERT EMPTY))) (SUC (CARD (c INSERT EMPTY)))) = (((COND (b IN (c INSERT EMPTY))) t') e'))))) = (((b IN (c INSERT EMPTY)) ==> ((CARD (c INSERT EMPTY)) = t')) ==> (((~ (b IN (c INSERT EMPTY))) ==> ((SUC (CARD (c INSERT EMPTY))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (CARD (c INSERT EMPTY))) (SUC (CARD (c INSERT EMPTY)))) = (((COND (b IN (c INSERT EMPTY))) t') e')))))
T c= c==> c= cIN f0 * * part cINSERT f1 part cEMPTY cIN f0 * * part cINSERT f1 part cEMPTY c==> c==> cIN f0 * * part cINSERT f1 part cEMPTY c= cCARD * * part cINSERT f1 part cEMPTY f2 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cSUC cCARD * * part cINSERT f1 part cEMPTY f3 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND cIN f0 * * part cINSERT f1 part cEMPTY f2 f3 c==> c==> cIN f0 * * part cINSERT f1 part cEMPTY c= cCARD * * part cINSERT f1 part cEMPTY f2 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cSUC cCARD * * part cINSERT f1 part cEMPTY f3 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND cIN f0 * * part cINSERT f1 part cEMPTY f2 f3
+ |- ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))
T c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((\s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) s)
T * / ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 f0
+ (((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) |- (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
+ ((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) |- (((b IN (c INSERT EMPTY)) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)) = T))
T c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 c/\ c/\ cIN f0 * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f3 c= creal_lt creal_of_num cNUMERAL c_0 creal_add f2 f3 cT
+ ((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) |- (((((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i))))) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 c= c==> c= creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0
+ |- ((\a. (!b. (!c. ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = ((a = b) \/ ((a = c) \/ ((b = c) \/ (affine_dependent (a INSERT (b INSERT (c INSERT EMPTY))))))))))) a)
T * / ! ! c= ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c= b0 b1 c\/ c= b0 b2 c\/ c= b1 b2 caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\n. ((SUC (BIT0 n)) = (BIT1 n))) n)
T * / c= cSUC cBIT0 b0 cBIT1 b0 f0
+ (((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) |- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y))) = (((c IN EMPTY) /\ (((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y))) ==> T))
T c= c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_add f1 f2 c==> c/\ cIN f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f2 cT
+ (((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. ((FINITE (x INSERT s)) = (FINITE s))) ==> ((\x. ((FINITE (x INSERT s)) = (FINITE s))) x)) = ((\x. ((FINITE (x INSERT s)) = (FINITE s))) x))
T c= c==> ! c= cFINITE * * part cINSERT b0 f0 cFINITE f0 * / c= cFINITE * * part cINSERT b0 f0 cFINITE f0 f1 * / c= cFINITE * * part cINSERT b0 f0 cFINITE f0 f1
+ |- (((((vector_add a) ((vector_add b) c)) = y) ==> (((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) = (vec (NUMERAL _0)))) = (((((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) = (vec (NUMERAL _0))) ==> (((vector_add a) ((vector_add b) c)) = y)) /\ ((((vector_add a) ((vector_add b) c)) = y) ==> (((vector_sub ((vector_sub ((vector_sub y) a)) b)) c) = (vec (NUMERAL _0))))))
T c= c==> c= cvector_add f0 cvector_add f1 f2 f3 c= cvector_sub cvector_sub cvector_sub f3 f0 f1 f2 cvec cNUMERAL c_0 c/\ c==> c= cvector_sub cvector_sub cvector_sub f3 f0 f1 f2 cvec cNUMERAL c_0 c= cvector_add f0 cvector_add f1 f2 f3 c==> c= cvector_add f0 cvector_add f1 f2 f3 c= cvector_sub cvector_sub cvector_sub f3 f0 f1 f2 cvec cNUMERAL c_0
+ |- ((((a IN (b INSERT (c INSERT EMPTY))) = (a IN (b INSERT (c INSERT EMPTY)))) ==> (((a IN (b INSERT (c INSERT EMPTY))) ==> ((CARD (b INSERT (c INSERT EMPTY))) = t')) ==> (((~ (a IN (b INSERT (c INSERT EMPTY)))) ==> ((SUC (CARD (b INSERT (c INSERT EMPTY)))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (CARD (b INSERT (c INSERT EMPTY)))) (SUC (CARD (b INSERT (c INSERT EMPTY))))) = (((COND (a IN (b INSERT (c INSERT EMPTY)))) t') e'))))) = (((a IN (b INSERT (c INSERT EMPTY))) ==> ((CARD (b INSERT (c INSERT EMPTY))) = t')) ==> (((~ (a IN (b INSERT (c INSERT EMPTY)))) ==> ((SUC (CARD (b INSERT (c INSERT EMPTY)))) = e')) ==> ((((COND (a IN (b INSERT (c INSERT EMPTY)))) (CARD (b INSERT (c INSERT EMPTY)))) (SUC (CARD (b INSERT (c INSERT EMPTY))))) = (((COND (a IN (b INSERT (c INSERT EMPTY)))) t') e')))))
T c= c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 f4 c==> c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 f4
+ ((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0))))) |- (((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0))))) /\ F)
T c==> c\/ c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c\/ c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
+ |- ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))))))
T c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
+ |- ((!n. (((BIT0 n) < _0) = F)) /\ ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))))))))
T c/\ ! c= c< cBIT0 b0 c_0 cF c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
+ |- ((CARD (b INSERT (c INSERT EMPTY))) = (((COND (b IN (c INSERT EMPTY))) (CARD (c INSERT EMPTY))) (SUC (CARD (c INSERT EMPTY)))))
T c= cCARD * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY
+ (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0)))) ==> F), (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (a $ i)) ((real_add (b $ i)) ((real_add (c $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (y $ i)))))) (real_of_num (NUMERAL _0)))) \/ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (c $ i))) (y $ i))))) (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_add c$ f2 f1 creal_add c$ f3 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 cF
+ |- (((!n. (((BIT1 m) < (BIT1 n)) = (m < n))) ==> ((\n. (((BIT1 m) < (BIT1 n)) = (m < n))) n)) = ((\n. (((BIT1 m) < (BIT1 n)) = (m < n))) n))
T c= c==> ! c= c< cBIT1 f0 cBIT1 b0 c< f0 b0 * / c= c< cBIT1 f0 cBIT1 b0 c< f0 b0 f1 * / c= c< cBIT1 f0 cBIT1 b0 c< f0 b0 f1
+ |- ((((b IN (c INSERT EMPTY)) ==> ((CARD (c INSERT EMPTY)) = (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0))))) ==> (((~ (b IN (c INSERT EMPTY))) ==> ((SUC (CARD (c INSERT EMPTY))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (CARD (c INSERT EMPTY))) (SUC (CARD (c INSERT EMPTY)))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) e')))) = (((~ (b IN (c INSERT EMPTY))) ==> ((SUC (CARD (c INSERT EMPTY))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (CARD (c INSERT EMPTY))) (SUC (CARD (c INSERT EMPTY)))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (NUMERAL _0)) (SUC (NUMERAL _0)))) e'))))
T c= c==> c==> cIN f0 * * part cINSERT f1 part cEMPTY c= cCARD * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cSUC cCARD * * part cINSERT f1 part cEMPTY f2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f2 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cSUC cCARD * * part cINSERT f1 part cEMPTY f2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cNUMERAL c_0 cSUC cNUMERAL c_0 f2
+ |- (((c IN EMPTY) ==> ((CARD EMPTY) = t')) ==> (((~ (c IN EMPTY)) ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (c IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND (c IN EMPTY)) t') e'))))
T c==> c==> cIN f0 part cEMPTY c= cCARD part cEMPTY f1 c==> c==> c~ cIN f0 part cEMPTY c= cSUC cCARD part cEMPTY f2 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND cIN f0 part cEMPTY f1 f2
+ |- ((!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))) = T)
T c= ! ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c==> c==> c~ f1 c= f3 b1 c= cCOND f0 f2 f3 cCOND f1 b0 b1 cT
+ |- ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))))
T c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((b IN (c INSERT EMPTY)) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> T))
T c= c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 creal_div f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cIN f0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f2 cT
+ |- (((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?v. (((real_lt (real_of_num (NUMERAL _0))) v) /\ (?v'. (((real_lt (real_of_num (NUMERAL _0))) v') /\ (?v''. (((real_lt (real_of_num (NUMERAL _0))) v'') /\ ((((real_sub ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) v)) v')) v'') = (real_of_num (NUMERAL _0))) /\ (((vector_sub ((vector_sub ((vector_sub y) ((% v) a))) ((% v') b))) ((% v'') c)) = (vec (NUMERAL _0))))))))))) y)))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (?y. (((real_lt (real_of_num (NUMERAL _0))) y) /\ (?z. (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v))))) = ((GSPEC (\GEN%PVAR%1796. (?y. (((SETSPEC GEN%PVAR%1796) (?u. ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (u x)))) /\ ((((sum (a INSERT (b INSERT (c INSERT EMPTY)))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (a INSERT (b INSERT (c INSERT EMPTY)))) (\x. ((% (u x)) x))) = y))))) y)))) = (GSPEC (\GEN%PVAR%1798. (?v. (((SETSPEC GEN%PVAR%1798) (?x. (?y. (?z. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((((real_add x) ((real_add y) z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% x) a)) ((vector_add ((% y) b)) ((% z) c))) = v))))))))) v))))))
T c= c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_sub creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b3 b4 creal_of_num cNUMERAL c_0 c= cvector_sub cvector_sub cvector_sub b1 c% b2 f0 c% b3 f1 c% b4 f2 cvec cNUMERAL c_0 b1 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1 c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 * b2 b3 c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1 b1
+ |- ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((a IN (b INSERT (c INSERT EMPTY))) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div y) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))
T c==> c= c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 f4 c==> c==> f4 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f5 c= c==> c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt creal_of_num cNUMERAL c_0 creal_div f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f4 f5
