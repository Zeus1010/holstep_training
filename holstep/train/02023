N Lp_ineqs_proofs.dart4_f_fan_pair_ext_power2
C |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((packing V) ==> ((V SUBSET ball_annulus) ==> (!d. (((d IN (dart_of_fan (V , E))) /\ ((CARD ((face (hypermap_of_fan (V , E))) d)) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((((POWER (f_fan_pair_ext (V , E))) (NUMERAL (BIT0 (BIT1 _0)))) d) = (((POWER (inverse (f_fan_pair_ext (V , E)))) (NUMERAL (BIT0 (BIT1 _0)))) d))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus ! c==> c/\ cIN b0 * part cdart_of_fan c, f0 f1 c= cCARD * * part cface chypermap_of_fan c, f0 f1 b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cPOWER * part cf_fan_pair_ext c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 cPOWER * part cinverse * part cf_fan_pair_ext c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b0
D TRUTH
A |- T
T cT
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D LE_ADD
A |- (!m. (!n. (m <= (m + n))))
T c<= f0 c+ f0 f1
D ADD_SUB
A |- (!m. (!n. (((m + n) - n) = m)))
T c= c- c+ f0 f1 f1 f0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D Hypermap.face_map_and_darts
A |- (!H. ((FINITE (dart H)) /\ ((permutes (face_map H)) (dart H))))
T c/\ cFINITE * part cdart f0 cpermutes * part cface_map f0 * part cdart f0
D Hypermap.face
A |- (!H. (!x. (((face H) x) = ((orbit_map (face_map H)) x))))
T c= * * part cface f0 f1 * * part corbit_map * part cface_map f0 f1
D Hypermap_and_fan.COMPONENTS_HYPERMAP_OF_FAN
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((dart (hypermap_of_fan (V , E))) = (dart_of_fan (V , E))) /\ (((edge_map (hypermap_of_fan (V , E))) = (e_fan_pair_ext (V , E))) /\ (((node_map (hypermap_of_fan (V , E))) = (n_fan_pair_ext (V , E))) /\ ((face_map (hypermap_of_fan (V , E))) = (f_fan_pair_ext (V , E)))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c/\ c= * part cdart chypermap_of_fan c, f0 f1 * part cdart_of_fan c, f0 f1 c/\ c= * part cedge_map chypermap_of_fan c, f0 f1 * part ce_fan_pair_ext c, f0 f1 c/\ c= * part cnode_map chypermap_of_fan c, f0 f1 * part cn_fan_pair_ext c, f0 f1 c= * part cface_map chypermap_of_fan c, f0 f1 * part cf_fan_pair_ext c, f0 f1
D Hypermap_and_fan.FINITE_ORBIT_MAP_INVERSE
A |- (!f. (!s. (!x. (!n. (!k. (((FINITE s) /\ (((permutes f) s) /\ (((CARD ((orbit_map f) x)) = n) /\ (k <= n)))) ==> ((((POWER (inverse f)) k) x) = (((POWER f) (n - k)) x))))))))
T c==> c/\ cFINITE f0 c/\ cpermutes f1 f0 c/\ c= cCARD * * part corbit_map f1 f2 f3 c<= f4 f3 c= cPOWER * part cinverse f1 f4 f2 cPOWER f1 c- f3 f4 f2
