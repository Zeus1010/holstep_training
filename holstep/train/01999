N LIM_COMPONENT_LE
C |- (!net. (!f. (!g. (!k. (!l. (!m. (((~ (trivial_limit net)) /\ ((((--> f) l) net) /\ ((((--> g) m) net) /\ (((eventually (\x. ((real_le ((f x) $ k)) ((g x) $ k)))) net) /\ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))))))) ==> ((real_le (l $ k)) (m $ k)))))))))
T c==> c/\ c~ ctrivial_limit f0 c/\ c--> f1 f2 f0 c/\ c--> f3 f4 f0 c/\ ceventually / creal_le c$ * f1 b0 f5 c$ * f3 b0 f5 f0 c/\ c<= cNUMERAL cBIT1 c_0 f5 c<= f5 cdimindex part cUNIV creal_le c$ f2 f5 c$ f4 f5
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D VECTOR_SUB_COMPONENT
A |- (!x. (!y. (!i. ((((vector_sub x) y) $ i) = ((real_sub (x $ i)) (y $ i))))))
T c= c$ cvector_sub f0 f1 f2 creal_sub c$ f0 f2 c$ f1 f2
D LIM_SUB
A |- (!net. (!f. (!g. (!l. (!m. (((((--> f) l) net) /\ (((--> g) m) net)) ==> (((--> (\x. ((vector_sub (f x)) (g x)))) ((vector_sub l) m)) net)))))))
T c==> c/\ c--> f0 f1 f2 c--> f3 f4 f2 c--> / cvector_sub * f0 b0 * f3 b0 cvector_sub f1 f4 f2
D LIM_COMPONENT_LBOUND
A |- (!net. (!f. (!l. (!b. (!k. (((~ (trivial_limit net)) /\ ((((--> f) l) net) /\ (((eventually (\x. ((real_le b) ((f x) $ k)))) net) /\ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV)))))) ==> ((real_le b) (l $ k))))))))
T c==> c/\ c~ ctrivial_limit f0 c/\ c--> f1 f2 f0 c/\ ceventually / creal_le f3 c$ * f1 b0 f4 f0 c/\ c<= cNUMERAL cBIT1 c_0 f4 c<= f4 cdimindex part cUNIV creal_le f3 c$ f2 f4
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ |- (((!x. (!y. (((real_le y) x) = ((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y))))) ==> ((\x. (!y. (((real_le y) x) = ((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y))))) x)) = ((\x. (!y. (((real_le y) x) = ((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y))))) x))
T c= c==> ! ! c= creal_le b1 b0 creal_le creal_of_num cNUMERAL c_0 creal_sub b0 b1 * / ! c= creal_le b1 b0 creal_le creal_of_num cNUMERAL c_0 creal_sub b0 b1 f0 * / ! c= creal_le b1 b0 creal_le creal_of_num cNUMERAL c_0 creal_sub b0 b1 f0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
