N COVERING_SPACE_LIFT_HOMOTOPY_ALT
C |- (!p. (!c. (!s. (!h. (!f. (!u. ((((covering_space (c , p)) s) /\ (((continuous_on h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart y) (vec (NUMERAL _0)))) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c)))))) ==> (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z))))))))))))))))
T c==> c/\ ccovering_space c, f0 f1 f2 c/\ ccontinuous_on f3 * * part cPCROSS f4 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE f3 * * part cPCROSS f4 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c/\ ! c==> cIN b0 f4 c= * f3 cpastecart b0 cvec cNUMERAL c_0 * f1 * f5 b0 c/\ ccontinuous_on f5 f4 cSUBSET * * part cIMAGE f5 f4 f0 c? / c/\ ccontinuous_on b0 * * part cPCROSS f4 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f4 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ ! c==> cIN b1 f4 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f5 b1 ! c==> cIN b1 * * part cPCROSS f4 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 b1 * f1 * b0 b1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D LEFT_OR_FORALL_THM
A |- (!P. (!Q. (((!x. (P x)) \/ Q) = (!x. ((P x) \/ Q)))))
T c= c\/ ! * f0 b0 f1 ! c\/ * f0 b0 f1
D o_THM
A |- (!f. (!g. (!x. (((f o g) x) = (f (g x))))))
T c= co f0 f1 f2 * f0 * f1 f2
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D IN_IMAGE
A |- (!y. (!s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s)))))))
T c= cIN f0 * * part cIMAGE f1 f2 c? / c/\ c= f0 * f1 b0 cIN b0 f2
D IMAGE_o
A |- (!f. (!g. (!s. (((IMAGE (f o g)) s) = ((IMAGE f) ((IMAGE g) s))))))
T c= * * part cIMAGE * * part co f0 f1 f2 * * part cIMAGE f0 * * part cIMAGE f1 f2
D FORALL_IN_IMAGE
A |- (!f. (!s. ((!y. ((y IN ((IMAGE f) s)) ==> (P y))) = (!x. ((x IN s) ==> (P (f x)))))))
T c= ! c==> cIN b0 * * part cIMAGE f0 f1 * f2 b0 ! c==> cIN b0 f1 * f2 * f0 b0
D FSTCART_PASTECART
A |- (!x. (!y. ((fstcart ((pastecart x) y)) = x)))
T c= cfstcart cpastecart f0 f1 f0
D SNDCART_PASTECART
A |- (!x. (!y. ((sndcart ((pastecart x) y)) = y)))
T c= csndcart cpastecart f0 f1 f1
D FORALL_IN_PCROSS
A |- ((!z. ((z IN (s PCROSS t)) ==> (P z))) = (!x. (!y. (((x IN s) /\ (y IN t)) ==> (P ((pastecart x) y))))))
T c= ! c==> cIN b0 * * part cPCROSS f0 f1 * f2 b0 ! ! c==> c/\ cIN b0 f0 cIN b1 f1 * f2 cpastecart b0 b1
D PASTECART_IN_PCROSS
A |- (!s. (!t. (!x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))))))
T c= cIN cpastecart f0 f1 * * part cPCROSS f2 f3 c/\ cIN f0 f2 cIN f1 f3
D LINEAR_FSTCART
A |- (linear fstcart)
T clinear part cfstcart
D LINEAR_SNDCART
A |- (linear sndcart)
T clinear part csndcart
D CONTINUOUS_ON_SUBSET
A |- (!f. (!s. (!t. ((((continuous_on f) s) /\ (t SUBSET s)) ==> ((continuous_on f) t)))))
T c==> c/\ ccontinuous_on f0 f1 cSUBSET f2 f1 ccontinuous_on f0 f2
D CONTINUOUS_ON_COMPOSE
A |- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 ccontinuous_on * * part co f2 f0 f1
D LINEAR_CONTINUOUS_ON
A |- (!f. (!s. ((linear f) ==> ((continuous_on f) s))))
T c==> clinear f0 ccontinuous_on f0 f1
D CONTINUOUS_ON_PASTECART
A |- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s)))))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 ccontinuous_on / cpastecart * f0 b0 * f2 b0 f1
D COVERING_SPACE_LIFT_HOMOTOPY
A |- (!p. (!c. (!s. (!h. (!f. (!u. ((((covering_space (c , p)) s) /\ (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c)))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))
T c==> c/\ ccovering_space c, f0 f1 f2 c/\ ccontinuous_on f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c/\ cSUBSET * * part cIMAGE f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 f2 c/\ ! c==> cIN b0 f4 c= * f3 cpastecart cvec cNUMERAL c_0 b0 * f1 * f5 b0 c/\ ccontinuous_on f5 f4 cSUBSET * * part cIMAGE f5 f4 f0 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 f0 c/\ ! c==> cIN b1 f4 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f5 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c= * f3 b1 * f1 * b0 b1
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 ! ! c==> ccontinuous_on f0 b0 c==> cSUBSET b1 b0 ccontinuous_on f0 b1
+ (!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) |- ((\y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) y)
T c==> ! c==> cIN b0 f0 c= * f1 cpastecart cvec cNUMERAL c_0 b0 * f2 b0 * / c==> cIN b0 f0 c= * f1 cpastecart cvec cNUMERAL c_0 b0 * f2 b0 f3
- |- (((!p'. (!q'. (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((h z) = (p (k z))) = q')) ==> (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((h z) = (p (k z))) = q')) ==> (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((h z) = (p (k z))) = q')) ==> (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c==> c==> b0 c= c= * f2 f0 * f3 * f4 f0 b1 c= c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f2 f0 * f3 * f4 f0 c==> b0 b1 * / ! c==> c= cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c==> c==> b0 c= c= * f2 f0 * f3 * f4 f0 b1 c= c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f2 f0 * f3 * f4 f0 c==> b0 b1 f5 * / ! c==> c= cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c==> c==> b0 c= c= * f2 f0 * f3 * f4 f0 b1 c= c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f2 f0 * f3 * f4 f0 c==> b0 b1 f5
- |- ((\p'. (!q'. ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((h ((pastecart x) y)) = (p (k ((pastecart y) x)))) = q')) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p (k ((pastecart y) x))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c==> c==> b0 c= c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0 b1 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0 c==> b0 b1 f6
+ ((continuous_on h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- (((((continuous_on (\z. ((pastecart (sndcart z)) (fstcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((continuous_on h) ((IMAGE (\z. ((pastecart (sndcart z)) (fstcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)))) ==> ((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u))) = ((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)))
T c==> ccontinuous_on f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c==> c/\ ccontinuous_on / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f0 * * part cIMAGE / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1
- (t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- (((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((IMAGE h) t) SUBSET s)) ==> (((IMAGE h) t) SUBSET s))
T c==> cSUBSET f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c==> cSUBSET f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cSUBSET * * part cIMAGE f2 f0 f3 cSUBSET * * part cIMAGE f2 f0 f3
+ |- (((!q'. (((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = p') ==> ((p' ==> (((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x)))) = q')) ==> (((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x))))) = (p' ==> q'))))) ==> ((\q'. (((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = p') ==> ((p' ==> (((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x)))) = q')) ==> (((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x))))) = (p' ==> q'))))) q')) = ((\q'. (((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = p') ==> ((p' ==> (((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x)))) = q')) ==> (((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 f3 c==> c==> f3 c= c= * f4 cpastecart csndcart cpastecart f0 f1 cfstcart cpastecart f0 f1 * f5 * f6 cpastecart f0 f1 b0 c= c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= * f4 cpastecart csndcart cpastecart f0 f1 cfstcart cpastecart f0 f1 * f5 * f6 cpastecart f0 f1 c==> f3 b0 * / c==> c= cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 f3 c==> c==> f3 c= c= * f4 cpastecart csndcart cpastecart f0 f1 cfstcart cpastecart f0 f1 * f5 * f6 cpastecart f0 f1 b0 c= c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= * f4 cpastecart csndcart cpastecart f0 f1 cfstcart cpastecart f0 f1 * f5 * f6 cpastecart f0 f1 c==> f3 b0 f7 * / c==> c= cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 f3 c==> c==> f3 c= c= * f4 cpastecart csndcart cpastecart f0 f1 cfstcart cpastecart f0 f1 * f5 * f6 cpastecart f0 f1 b0 c= c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= * f4 cpastecart csndcart cpastecart f0 f1 cfstcart cpastecart f0 f1 * f5 * f6 cpastecart f0 f1 c==> f3 b0 f7
+ |- (((!s. ((linear f) ==> ((continuous_on f) s))) ==> ((\s. ((linear f) ==> ((continuous_on f) s))) s)) = ((\s. ((linear f) ==> ((continuous_on f) s))) s))
T c= c==> ! c==> clinear f0 ccontinuous_on f0 b0 * / c==> clinear f0 ccontinuous_on f0 b0 f1 * / c==> clinear f0 ccontinuous_on f0 b0 f1
+ |- (!k. (((\k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))))))) k) ==> (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))))))))))
T c==> * / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f1 c/\ ! c==> cIN b1 f0 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f2 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= * f3 cpastecart csndcart b1 cfstcart b1 * f4 * b0 b1 f5 c? / c/\ ccontinuous_on b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ ! c==> cIN b1 f0 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f2 b1 ! c==> cIN b1 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 b1 * f4 * b0 b1
+ |- (((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) = ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u))) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) ==> ((((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) ==> (((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) ==> q')))) = ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) ==> ((((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) ==> (((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) ==> q'))))
T c= c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 c==> c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 c= cIN * / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 cIN * / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 f3 c==> c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 c= cIN * / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 cIN * / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 f3
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ |- (((!x. (!y. ((sndcart ((pastecart x) y)) = y))) ==> ((\x. (!y. ((sndcart ((pastecart x) y)) = y))) x)) = ((\x. (!y. ((sndcart ((pastecart x) y)) = y))) x))
T c= c==> ! ! c= csndcart cpastecart b0 b1 b1 * / ! c= csndcart cpastecart b0 b1 b1 f0 * / ! c= csndcart cpastecart b0 b1 b1 f0
+ ((continuous_on h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- ((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u))
T c==> ccontinuous_on f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1
+ ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) |- (((continuous_on (\z. ((pastecart (sndcart z)) (fstcart z)))) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((continuous_on k) ((IMAGE (\z. ((pastecart (sndcart z)) (fstcart z)))) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))))
T c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ ccontinuous_on / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 * * part cIMAGE / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- (((IMAGE f) u) SUBSET c) |- ((((t SUBSET u) ==> (((IMAGE f) t) SUBSET c)) ==> ((t SUBSET u) ==> (((IMAGE f) t) SUBSET c))) = ((t SUBSET u) ==> (((IMAGE f) t) SUBSET c)))
T c==> cSUBSET * * part cIMAGE f0 f1 f2 c= c==> c==> cSUBSET f3 f1 cSUBSET * * part cIMAGE f0 f3 f2 c==> cSUBSET f3 f1 cSUBSET * * part cIMAGE f0 f3 f2 c==> cSUBSET f3 f1 cSUBSET * * part cIMAGE f0 f3 f2
- (!t. ((t SUBSET u) ==> ((continuous_on f) t))) |- ((\t. ((t SUBSET u) ==> ((continuous_on f) t))) t)
T c==> ! c==> cSUBSET b0 f0 ccontinuous_on f1 b0 * / c==> cSUBSET b0 f0 ccontinuous_on f1 b0 f2
- |- (((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))) = ((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))))
T c= c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1 c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1
- |- ((!x'. ((~ (t x')) \/ (s x))) = ((!x. (~ (t x))) \/ (s x)))
T c= ! c\/ c~ * f0 b0 * f1 f2 c\/ ! c~ * f0 b0 * f1 f2
+ (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- ((\f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) f)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 * / ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 f0
+ |- ((\y. ((sndcart ((pastecart x) y)) = y)) y)
T * / c= csndcart cpastecart f0 b0 b0 f1
+ (!x. ((t x) ==> (s x))), (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))), ((x = (k x')) /\ (t x')) |- (((c (k x')) ==> F) = F)
T c==> ! c==> * f0 b0 * f1 b0 c==> ! c==> c? / c/\ c= b0 * f2 b1 * f1 b1 * f3 b0 c==> c/\ c= f4 * f2 f5 * f0 f5 c= c==> * f3 * f2 f5 cF cF
+ (!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))) |- ((\f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))) f)
T c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 * / ! c==> ccovering_space c, f0 f1 f2 c==> c/\ ccontinuous_on f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c/\ cSUBSET * * part cIMAGE f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 f2 c/\ ! c==> cIN b2 b1 c= * f3 cpastecart cvec cNUMERAL c_0 b2 * f1 * b0 b2 c/\ ccontinuous_on b0 b1 cSUBSET * * part cIMAGE b0 b1 f0 c? / c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 f0 c/\ ! c==> cIN b3 b1 c= * b2 cpastecart cvec cNUMERAL c_0 b3 * b0 b3 ! c==> cIN b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= * f3 b3 * f1 * b2 b3 f4
- |- (((!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) ==> ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)) = ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s))
T c= c==> ! ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
- |- (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((h z) = (p (k z))) = q')) ==> (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))) = ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> q')))
T c==> c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c= * f2 f0 * f3 * f4 f0 f5 c= c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f2 f0 * f3 * f4 f0 c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f5
- |- (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))) = q')) ==> (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))) = ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> q')))
T c==> c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0 f5 c= c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0 c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f5
- (z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = T)
T c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT
+ |- ((\f. (!s. ((linear f) ==> ((continuous_on f) s)))) f)
T * / ! c==> clinear b0 ccontinuous_on b0 b1 f0
+ |- (((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((h ((pastecart x) y)) = (p ((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart x) y)))) = ((h ((pastecart x) y)) = (p (k ((pastecart y) x)))))) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p ((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart x) y))))) = (((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p (k ((pastecart y) x))))))) = ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p ((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart x) y))))) = (((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p (k ((pastecart y) x)))))))
T c= c==> c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c= * f3 cpastecart f0 f2 * f4 co f5 / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f2 c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 cpastecart f0 f2 * f4 co f5 / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f2 c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 cpastecart f0 f2 * f4 co f5 / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f2 c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0
- ((x = (k x')) /\ (t x')) |- (F = F)
T c==> c/\ c= f0 * f1 f2 * f3 f2 c= cF cF
+ |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (~ (t x')), ((x = (k x')) /\ (t x')) |- ((~ (t x')) /\ (t x'))
T c==> c~ * f0 f1 c==> c/\ c= f2 * f3 f1 * f0 f1 c/\ c~ * f0 f1 * f0 f1
+ |- (((continuous_on fstcart) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = T)
T c= ccontinuous_on part cfstcart * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT
+ |- (((linear sndcart) ==> (((continuous_on sndcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = T)) = (((continuous_on sndcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = T))
T c= c==> clinear part csndcart c= ccontinuous_on part csndcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 cT c= ccontinuous_on part csndcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 cT
+ |- ((\y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))) y)
T * / c= cIN cpastecart f0 b0 * * part cPCROSS f1 f2 c/\ cIN f0 f1 cIN b0 f2 f3
- |- (T = (((~ (t _783163)) \/ (s _783163)) = ((s _783163) \/ (~ (t _783163)))))
T c= cT c= c\/ c~ * f0 f1 * f2 f1 c\/ * f2 f1 c~ * f0 f1
- |- ((!x'. ((~ (x = (k x'))) \/ (~ (s x)))) = ((!x. (~ (x = (k x)))) \/ (~ (s x))))
T c= ! c\/ c~ c= f0 * f1 b0 c~ * f2 f3 c\/ ! c~ c= f0 * f1 b0 c~ * f2 f3
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ |- ((\f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) f)
T * / ! c==> c/\ ccontinuous_on b0 b1 ccontinuous_on f0 * * part cIMAGE b0 b1 ccontinuous_on * * part co f0 b0 b1 f1
+ ((continuous_on h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- ((((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) = (((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)))
T c==> ccontinuous_on f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2
- ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F), (((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)) |- (((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) /\ ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))
T c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c/\ c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF
+ |- (((y IN u) ==> ((((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart y) (vec (NUMERAL _0)))) = (f y)) = q')) ==> (((y IN u) ==> (((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart y) (vec (NUMERAL _0)))) = (f y))) = ((y IN u) ==> q')))
T c==> c==> cIN f0 f1 c= c= co f2 / cpastecart csndcart b0 cfstcart b0 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 f4 c= c==> cIN f0 f1 c= co f2 / cpastecart csndcart b0 cfstcart b0 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 c==> cIN f0 f1 f4
- (!t. ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((continuous_on h) t))) |- (((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((continuous_on h) t)) = T)
T c==> ! c==> cSUBSET b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f1 b0 c= c==> cSUBSET f2 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f1 f2 cT
- (((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) |- (((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = T)
T c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c= ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cT
+ |- (((!x. (((\k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))))))) x) ==> (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z))))))))))) ==> ((?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))))))) ==> (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z))))))))))) = ((?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))))))) ==> (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))))))))))
T c= c==> ! c==> * / c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f1 c/\ ! c==> cIN b2 f0 c= * b1 cpastecart cvec cNUMERAL c_0 b2 * f2 b2 ! c==> cIN b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= * f3 cpastecart csndcart b2 cfstcart b2 * f4 * b1 b2 b0 c? / c/\ ccontinuous_on b1 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ ! c==> cIN b2 f0 c= * b1 cpastecart b2 cvec cNUMERAL c_0 * f2 b2 ! c==> cIN b2 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 b2 * f4 * b1 b2 c==> c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f1 c/\ ! c==> cIN b1 f0 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f2 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= * f3 cpastecart csndcart b1 cfstcart b1 * f4 * b0 b1 c? / c/\ ccontinuous_on b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ ! c==> cIN b1 f0 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f2 b1 ! c==> cIN b1 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 b1 * f4 * b0 b1 c==> c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f1 c/\ ! c==> cIN b1 f0 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f2 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= * f3 cpastecart csndcart b1 cfstcart b1 * f4 * b0 b1 c? / c/\ ccontinuous_on b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ ! c==> cIN b1 f0 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f2 b1 ! c==> cIN b1 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 b1 * f4 * b0 b1
- |- ((((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)) ==> (((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)))
T c==> c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF
+ |- (((!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))) ==> ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))) s)) = ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))) s))
T c= c==> ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cpastecart * f0 b1 * f1 b1 b0 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cpastecart * f0 b1 * f1 b1 b0 f2 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cpastecart * f0 b1 * f1 b1 b0 f2
- (((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)), ((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))) |- ((?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))))))) = T)
T c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c==> c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1 c= c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1 cT
- |- ((!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((continuous_on k) t))) ==> (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((continuous_on k) t))))
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0
+ |- ((linear sndcart) = T)
T c= clinear part csndcart cT
+ |- (((!p'. (!q'. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) = p') ==> ((p' ==> ((((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) ==> (((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) = p') ==> ((p' ==> ((((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) ==> (((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) = p') ==> ((p' ==> ((((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) ==> (((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 b0 c==> c==> b0 c= cIN * / cpastecart csndcart b2 cfstcart b2 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 cIN * / cpastecart csndcart b2 cfstcart b2 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 * / ! c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 b0 c==> c==> b0 c= cIN * / cpastecart csndcart b2 cfstcart b2 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 cIN * / cpastecart csndcart b2 cfstcart b2 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 f3 * / ! c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 b0 c==> c==> b0 c= cIN * / cpastecart csndcart b2 cfstcart b2 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 cIN * / cpastecart csndcart b2 cfstcart b2 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 f3
+ (((IMAGE h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) |- (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)
T c==> cSUBSET * * part cIMAGE f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2
+ |- ((\q'. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = p') ==> ((p' ==> ((((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z))) = q')) ==> (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z)))) = (p' ==> q'))))) q')
T * / c==> c= cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c==> c==> f2 c= c= co f3 / cpastecart csndcart b1 cfstcart b1 f0 * f4 * f5 f0 b0 c= c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= co f3 / cpastecart csndcart b1 cfstcart b1 f0 * f4 * f5 f0 c==> f2 b0 f6
+ (!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) |- ((((continuous_on (k o (\z. ((pastecart (sndcart z)) (fstcart z))))) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE (k o (\z. ((pastecart (sndcart z)) (fstcart z))))) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ (!x. (!y. (((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p (k ((pastecart y) x))))))))) = (((continuous_on (k o (\z. ((pastecart (sndcart z)) (fstcart z))))) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE (k o (\z. ((pastecart (sndcart z)) (fstcart z))))) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> (((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p ((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) z)))))))))
T c==> ! c==> cIN b0 f0 c= * f1 cpastecart cvec cNUMERAL c_0 b0 * f2 b0 c= c/\ ccontinuous_on * * part co f1 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE * * part co f1 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 ! ! c==> c/\ cIN b0 f0 cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 cpastecart b0 b1 * f5 * f1 cpastecart b1 b0 c/\ ccontinuous_on * * part co f1 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE * * part co f1 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c/\ ! c==> cIN b0 f0 c= co f1 / cpastecart csndcart b1 cfstcart b1 cpastecart b0 cvec cNUMERAL c_0 * f2 b0 ! c==> cIN b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 b0 * f5 co f1 / cpastecart csndcart b1 cfstcart b1 b0
- (y IN u) |- (T = (y IN u))
T c==> cIN f0 f1 c= cT cIN f0 f1
+ |- ((!s. (!h. (!f. (!u. ((((covering_space (c , p)) s) /\ (((continuous_on h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart y) (vec (NUMERAL _0)))) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c)))))) ==> (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))))))))))))) = T)
T c= ! ! ! ! c==> c/\ ccovering_space c, f0 f1 b0 c/\ ccontinuous_on b1 * * part cPCROSS b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c/\ ! c==> cIN b4 b3 c= * b1 cpastecart b4 cvec cNUMERAL c_0 * f1 * b2 b4 c/\ ccontinuous_on b2 b3 cSUBSET * * part cIMAGE b2 b3 f0 c? / c/\ ccontinuous_on b4 * * part cPCROSS b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b4 * * part cPCROSS b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ ! c==> cIN b5 b3 c= * b4 cpastecart b5 cvec cNUMERAL c_0 * b2 b5 ! c==> cIN b5 * * part cPCROSS b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * b1 b5 * f1 * b4 b5 cT
+ (!x. ((t x) ==> (s x))), (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))), (~ (c x)) |- (((!x. (((\x. ((x = (k x)) /\ (t x))) x) ==> F)) ==> ((?x. ((x = (k x)) /\ (t x))) ==> F)) = ((?x. ((x = (k x)) /\ (t x))) ==> F))
T c==> ! c==> * f0 b0 * f1 b0 c==> ! c==> c? / c/\ c= b0 * f2 b1 * f1 b1 * f3 b0 c==> c~ * f3 f4 c= c==> ! c==> * / c/\ c= f4 * f2 b1 * f0 b1 b0 cF c==> c? / c/\ c= f4 * f2 b0 * f0 b0 cF c==> c? / c/\ c= f4 * f2 b0 * f0 b0 cF
+ ((covering_space (c , p)) s) |- (!f. (!u. ((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z))))))))))))
T c==> ccovering_space c, f0 f1 f2 ! ! c==> c/\ ccontinuous_on * * part co f3 / cpastecart csndcart b2 cfstcart b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c/\ cSUBSET * * part cIMAGE * * part co f3 / cpastecart csndcart b2 cfstcart b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 f2 c/\ ! c==> cIN b2 b1 c= co f3 / cpastecart csndcart b3 cfstcart b3 cpastecart cvec cNUMERAL c_0 b2 * f1 * b0 b2 c/\ ccontinuous_on b0 b1 cSUBSET * * part cIMAGE b0 b1 f0 c? / c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 f0 c/\ ! c==> cIN b3 b1 c= * b2 cpastecart cvec cNUMERAL c_0 b3 * b0 b3 ! c==> cIN b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= co f3 / cpastecart csndcart b4 cfstcart b4 b3 * f1 * b2 b3
+ |- (((!x. (!y. ((fstcart ((pastecart x) y)) = x))) ==> ((\x. (!y. ((fstcart ((pastecart x) y)) = x))) x)) = ((\x. (!y. ((fstcart ((pastecart x) y)) = x))) x))
T c= c==> ! ! c= cfstcart cpastecart b0 b1 b0 * / ! c= cfstcart cpastecart b0 b1 b0 f0 * / ! c= cfstcart cpastecart b0 b1 b0 f0
- ((covering_space (c , p)) s) |- (((covering_space (c , p)) s) = T)
T c==> ccovering_space c, f0 f1 f2 c= ccovering_space c, f0 f1 f2 cT
- (((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)), ((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))) |- (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))
T c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c==> c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1
+ |- ((!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p ((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) z))))) = (!x. (!y. (((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p ((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart x) y))))))))
T c= ! c==> cIN b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f1 b0 * f2 co f3 / cpastecart csndcart b1 cfstcart b1 b0 ! ! c==> c/\ cIN b0 f0 cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f1 cpastecart b0 b1 * f2 co f3 / cpastecart csndcart b2 cfstcart b2 cpastecart b0 b1
+ ((continuous_on h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((continuous_on h) t))
T c==> ccontinuous_on f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cSUBSET f2 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 f2
- |- ((!c. (!t. (!k. (!s. ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x))))))))) = (!c. (!t. (!k. (!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))))))
T c= ! ! ! ! c==> ! c==> c? / c/\ c= b4 * b2 b5 * b3 b5 * b0 b4 c==> ! c==> * b1 b4 * b3 b4 ! c==> c? / c/\ c= b4 * b2 b5 * b1 b5 * b0 b4 ! ! ! ! c==> c~ c==> ! c==> c? / c/\ c= b4 * b2 b5 * b3 b5 * b0 b4 c==> ! c==> * b1 b4 * b3 b4 ! c==> c? / c/\ c= b4 * b2 b5 * b1 b5 * b0 b4 cF
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))), (((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) |- ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) /\ ((continuous_on (g o f)) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 c/\ c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 ccontinuous_on * * part co f2 f0 f1
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
- ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) |- (((!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((continuous_on k) t))) ==> (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((continuous_on k) t)))) = (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((continuous_on k) t))))
T c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f0 b0 ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f0 b0 ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f0 b0
+ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))))), ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) |- (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))))))))
T c==> c/\ cSUBSET * * part cIMAGE f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c/\ ! c==> cIN b0 f1 c= * f0 cpastecart cvec cNUMERAL c_0 b0 * f3 b0 ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f4 cpastecart csndcart b0 cfstcart b0 * f5 * f0 b0 c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c? / c/\ ccontinuous_on b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f3 b1 ! c==> cIN b1 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 b1 * f5 * b0 b1
- ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) |- (((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) /\ ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))
T c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c/\ c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF
- ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((IMAGE k) t) SUBSET c)) |- (((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((IMAGE k) t) SUBSET c)) /\ ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((IMAGE k) t) SUBSET c)))
T c==> c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE f2 f0 f3 c/\ c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE f2 f0 f3 c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE f2 f0 f3
+ |- ((\p'. (!q'. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = p') ==> ((p' ==> ((((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z))) = q')) ==> (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z)))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 b0 c==> c==> b0 c= c= co f2 / cpastecart csndcart b2 cfstcart b2 f0 * f3 * f4 f0 b1 c= c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= co f2 / cpastecart csndcart b2 cfstcart b2 f0 * f3 * f4 f0 c==> b0 b1 f5
+ (x IN u), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = T) ==> ((T ==> (((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x)))) = q')) ==> (((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x))))) = (T ==> q')))) = ((T ==> (((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x)))) = q')) ==> (((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x))))) = (T ==> q'))))
T c==> cIN f0 f1 c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c==> c= cIN cpastecart f2 f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cT c==> c==> cT c= c= * f3 cpastecart csndcart cpastecart f2 f0 cfstcart cpastecart f2 f0 * f4 * f5 cpastecart f2 f0 f6 c= c==> cIN cpastecart f2 f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f3 cpastecart csndcart cpastecart f2 f0 cfstcart cpastecart f2 f0 * f4 * f5 cpastecart f2 f0 c==> cT f6 c==> c==> cT c= c= * f3 cpastecart csndcart cpastecart f2 f0 cfstcart cpastecart f2 f0 * f4 * f5 cpastecart f2 f0 f6 c= c==> cIN cpastecart f2 f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f3 cpastecart csndcart cpastecart f2 f0 cfstcart cpastecart f2 f0 * f4 * f5 cpastecart f2 f0 c==> cT f6
+ ((continuous_on f) u) |- (((continuous_on f) u) = T)
T c==> ccontinuous_on f0 f1 c= ccontinuous_on f0 f1 cT
+ |- (((IMAGE (\z. ((pastecart (sndcart z)) (fstcart z)))) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u))
T cSUBSET * * part cIMAGE / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0
- |- ((?x. (P x)) = ((P T) \/ (P F)))
T c= c? / * f0 b0 c\/ * f0 cT * f0 cF
+ ((covering_space (c , p)) s) |- ((((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z)))))))))) ==> (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))))))))) = (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z))))))))))
T c==> ccovering_space c, f0 f1 f2 c= c==> c==> c/\ ccontinuous_on * * part co f3 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c/\ cSUBSET * * part cIMAGE * * part co f3 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 f2 c/\ ! c==> cIN b0 f4 c= co f3 / cpastecart csndcart b1 cfstcart b1 cpastecart cvec cNUMERAL c_0 b0 * f1 * f5 b0 c/\ ccontinuous_on f5 f4 cSUBSET * * part cIMAGE f5 f4 f0 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 f0 c/\ ! c==> cIN b1 f4 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f5 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c= co f3 / cpastecart csndcart b2 cfstcart b2 b1 * f1 * b0 b1 c? / c/\ ccontinuous_on b0 * * part cPCROSS f4 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f4 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ ! c==> cIN b1 f4 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f5 b1 ! c==> cIN b1 * * part cPCROSS f4 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 b1 * f1 * b0 b1 c? / c/\ ccontinuous_on b0 * * part cPCROSS f4 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f4 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ ! c==> cIN b1 f4 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f5 b1 ! c==> cIN b1 * * part cPCROSS f4 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 b1 * f1 * b0 b1
- |- ((\q'. (((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) = p') ==> ((p' ==> ((?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))))))) = q')) ==> (((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b1 cfstcart b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b1 cfstcart b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 f3 c==> c==> f3 c= c? / c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f4 c/\ ! c==> cIN b2 f1 c= * b1 cpastecart cvec cNUMERAL c_0 b2 * f5 b2 ! c==> cIN b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b2 cfstcart b2 * f6 * b1 b2 b0 c= c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b1 cfstcart b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b1 cfstcart b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c? / c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f4 c/\ ! c==> cIN b2 f1 c= * b1 cpastecart cvec cNUMERAL c_0 b2 * f5 b2 ! c==> cIN b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b2 cfstcart b2 * f6 * b1 b2 c==> f3 b0 f7
+ |- (((((continuous_on sndcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((continuous_on fstcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u))) ==> (((continuous_on (\z. ((pastecart (sndcart z)) (fstcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = T)) = (((continuous_on (\z. ((pastecart (sndcart z)) (fstcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = T))
T c= c==> c/\ ccontinuous_on part csndcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= ccontinuous_on / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 cT c= ccontinuous_on / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 cT
+ (!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))) |- ((!c. (!s. (((covering_space (c , p)) s) ==> (!h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z)))))))))))))))) = T)
T c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 c= ! ! c==> ccovering_space c, b0 f0 b1 ! ! ! c==> c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b1 c/\ ! c==> cIN b5 b4 c= * b2 cpastecart cvec cNUMERAL c_0 b5 * f0 * b3 b5 c/\ ccontinuous_on b3 b4 cSUBSET * * part cIMAGE b3 b4 b0 c? / c/\ ccontinuous_on b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b0 c/\ ! c==> cIN b6 b4 c= * b5 cpastecart cvec cNUMERAL c_0 b6 * b3 b6 ! c==> cIN b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c= * b2 b6 * f0 * b5 b6 cT
- ((x = (k x')) /\ (t x')) |- (((~ (t _783163)) \/ (s _783163)) = ((~ (t _783163)) \/ (s _783163)))
T c==> c/\ c= f0 * f1 f2 * f3 f2 c= c\/ c~ * f3 f4 * f5 f4 c\/ c~ * f3 f4 * f5 f4
+ (!y. ((y IN u) ==> ((h ((pastecart y) (vec (NUMERAL _0)))) = (p (f y))))), (((IMAGE f) u) SUBSET c), (((IMAGE h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s), ((continuous_on f) u), ((continuous_on h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))), ((covering_space (c , p)) s) |- (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))))))))
T c==> ! c==> cIN b0 f0 c= * f1 cpastecart b0 cvec cNUMERAL c_0 * f2 * f3 b0 c==> cSUBSET * * part cIMAGE f3 f0 f4 c==> cSUBSET * * part cIMAGE f1 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f5 c==> ccontinuous_on f3 f0 c==> ccontinuous_on f1 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> ccovering_space c, f4 f2 f5 c? / c/\ ccontinuous_on b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c/\ ! c==> cIN b1 f0 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f3 b1 ! c==> cIN b1 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f1 b1 * f2 * b0 b1
- (~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) |- ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) /\ F)
T c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 c/\ c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF
+ (!y. ((y IN u) ==> ((h ((pastecart y) (vec (NUMERAL _0)))) = (p (f y))))) |- ((y IN u) ==> ((((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))) = T))
T c==> ! c==> cIN b0 f0 c= * f1 cpastecart b0 cvec cNUMERAL c_0 * f2 * f3 b0 c==> cIN f4 f0 c= c= co f1 / cpastecart csndcart b0 cfstcart b0 cpastecart cvec cNUMERAL c_0 f4 * f2 * f3 f4 cT
- |- (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))) = ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))))
T c= c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f2 f0 * f3 * f4 f0 c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f2 f0 * f3 * f4 f0
+ |- ((\y. ((fstcart ((pastecart x) y)) = x)) y)
T * / c= cfstcart cpastecart f0 b0 f0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((!t. ((t SUBSET u) ==> ((continuous_on f) t))) ==> (!t. ((t SUBSET u) ==> ((continuous_on f) t))))
T c==> ! c==> cSUBSET b0 f0 ccontinuous_on f1 b0 ! c==> cSUBSET b0 f0 ccontinuous_on f1 b0
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
+ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))) |- ((((x IN u) /\ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) t)) = (p (k ((pastecart t) x))))) = T)
T c==> ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= * f1 cpastecart csndcart b0 cfstcart b0 * f2 * f3 b0 c= c==> c/\ cIN f4 f0 cIN f5 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f1 cpastecart f4 f5 * f2 * f3 cpastecart f5 f4 cT
+ ((covering_space (c , p)) s) |- ((\h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))) (h o (\z. ((pastecart (sndcart z)) (fstcart z)))))
T c==> ccovering_space c, f0 f1 f2 * / ! ! c==> c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 f2 c/\ ! c==> cIN b3 b2 c= * b0 cpastecart cvec cNUMERAL c_0 b3 * f1 * b1 b3 c/\ ccontinuous_on b1 b2 cSUBSET * * part cIMAGE b1 b2 f0 c? / c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 f0 c/\ ! c==> cIN b4 b2 c= * b3 cpastecart cvec cNUMERAL c_0 b4 * b1 b4 ! c==> cIN b4 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 c= * b0 b4 * f1 * b3 b4 * * part co f3 / cpastecart csndcart b0 cfstcart b0
+ |- ((\g. (!s. (((IMAGE (f o g)) s) = ((IMAGE f) ((IMAGE g) s))))) g)
T * / ! c= * * part cIMAGE * * part co f0 b0 b1 * * part cIMAGE f0 * * part cIMAGE b0 b1 f1
- |- (((!q'. (((y IN u) = p') ==> ((p' ==> (((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)) = q')) ==> (((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y))) = (p' ==> q'))))) ==> ((\q'. (((y IN u) = p') ==> ((p' ==> (((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)) = q')) ==> (((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y))) = (p' ==> q'))))) q')) = ((\q'. (((y IN u) = p') ==> ((p' ==> (((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)) = q')) ==> (((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cIN f0 f1 f2 c==> c==> f2 c= c= * f3 cpastecart f0 cvec cNUMERAL c_0 * f4 f0 b0 c= c==> cIN f0 f1 c= * f3 cpastecart f0 cvec cNUMERAL c_0 * f4 f0 c==> f2 b0 * / c==> c= cIN f0 f1 f2 c==> c==> f2 c= c= * f3 cpastecart f0 cvec cNUMERAL c_0 * f4 f0 b0 c= c==> cIN f0 f1 c= * f3 cpastecart f0 cvec cNUMERAL c_0 * f4 f0 c==> f2 b0 f5 * / c==> c= cIN f0 f1 f2 c==> c==> f2 c= c= * f3 cpastecart f0 cvec cNUMERAL c_0 * f4 f0 b0 c= c==> cIN f0 f1 c= * f3 cpastecart f0 cvec cNUMERAL c_0 * f4 f0 c==> f2 b0 f5
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))), (((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) /\ ((continuous_on (g o f)) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 c/\ ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 ccontinuous_on * * part co f2 f0 f1
+ |- ((\s. ((linear f) ==> ((continuous_on f) s))) s)
T * / c==> clinear f0 ccontinuous_on f0 b0 f1
- |- (((!q'. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = p') ==> ((p' ==> (((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))) = q')) ==> (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))) = (p' ==> q'))))) ==> ((\q'. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = p') ==> ((p' ==> (((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))) = q')) ==> (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))) = (p' ==> q'))))) q')) = ((\q'. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = p') ==> ((p' ==> (((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))) = q')) ==> (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c==> c==> f2 c= c= * f3 cpastecart csndcart f0 cfstcart f0 * f4 * f5 f0 b0 c= c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f3 cpastecart csndcart f0 cfstcart f0 * f4 * f5 f0 c==> f2 b0 * / c==> c= cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c==> c==> f2 c= c= * f3 cpastecart csndcart f0 cfstcart f0 * f4 * f5 f0 b0 c= c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f3 cpastecart csndcart f0 cfstcart f0 * f4 * f5 f0 c==> f2 b0 f6 * / c==> c= cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c==> c==> f2 c= c= * f3 cpastecart csndcart f0 cfstcart f0 * f4 * f5 f0 b0 c= c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f3 cpastecart csndcart f0 cfstcart f0 * f4 * f5 f0 c==> f2 b0 f6
+ |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) ==> (!g. (!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 ! ! ! c==> c/\ ccontinuous_on b1 b2 ccontinuous_on b0 * * part cIMAGE b1 b2 ccontinuous_on * * part co b0 b1 b2
- (t SUBSET u) |- ((!t. ((t SUBSET u) ==> ((continuous_on f) t))) ==> ((continuous_on f) t))
T c==> cSUBSET f0 f1 c==> ! c==> cSUBSET b0 f1 ccontinuous_on f2 b0 ccontinuous_on f2 f0
- (~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) |- F
T c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF
+ ((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- (((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = T))
T c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cIN * / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cT
+ ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) |- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((continuous_on k) t)))
T c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f0 b0
+ |- ((!x. ((x IN ((IMAGE k) s)) ==> (x IN c))) ==> ((!x. ((x IN t) ==> (x IN s))) ==> (!x. ((x IN ((IMAGE k) t)) ==> (x IN c)))))
T c==> ! c==> cIN b0 * * part cIMAGE f0 f1 cIN b0 f2 c==> ! c==> cIN b0 f3 cIN b0 f1 ! c==> cIN b0 * * part cIMAGE f0 f3 cIN b0 f2
- (!x. ((t x) ==> (s x))), (~ (s x')), ((x = (k x')) /\ (t x')) |- ((~ (s x')) /\ (s x'))
T c==> ! c==> * f0 b0 * f1 b0 c==> c~ * f1 f2 c==> c/\ c= f3 * f4 f2 * f0 f2 c/\ c~ * f1 f2 * f1 f2
+ ((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- ((x IN u) = T)
T c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cIN f0 f1 cT
+ |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- (((!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) ==> ((\f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) f)) = ((\f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) f))
T c= c==> ! ! c==> c/\ ccontinuous_on b0 b1 ccontinuous_on f0 * * part cIMAGE b0 b1 ccontinuous_on * * part co f0 b0 b1 * / ! c==> c/\ ccontinuous_on b0 b1 ccontinuous_on f0 * * part cIMAGE b0 b1 ccontinuous_on * * part co f0 b0 b1 f1 * / ! c==> c/\ ccontinuous_on b0 b1 ccontinuous_on f0 * * part cIMAGE b0 b1 ccontinuous_on * * part co f0 b0 b1 f1
+ (!y. ((y IN u) ==> ((h ((pastecart y) (vec (NUMERAL _0)))) = (p (f y))))), (((IMAGE f) u) SUBSET c), ((continuous_on f) u) |- (((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z)))))))))) = ((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))))
T c==> ! c==> cIN b0 f0 c= * f1 cpastecart b0 cvec cNUMERAL c_0 * f2 * f3 b0 c==> cSUBSET * * part cIMAGE f3 f0 f4 c==> ccontinuous_on f3 f0 c= c==> c/\ ccontinuous_on * * part co f1 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET * * part cIMAGE * * part co f1 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f5 c/\ ! c==> cIN b0 f0 c= co f1 / cpastecart csndcart b1 cfstcart b1 cpastecart cvec cNUMERAL c_0 b0 * f2 * f3 b0 c/\ ccontinuous_on f3 f0 cSUBSET * * part cIMAGE f3 f0 f4 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f4 c/\ ! c==> cIN b1 f0 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f3 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= co f1 / cpastecart csndcart b2 cfstcart b2 b1 * f2 * b0 b1 c==> c/\ ccontinuous_on * * part co f1 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 cSUBSET * * part cIMAGE * * part co f1 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f5 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f4 c/\ ! c==> cIN b1 f0 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f3 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= * f1 cpastecart csndcart b1 cfstcart b1 * f2 * b0 b1
+ |- ((((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))) ==> (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z))))))))))
T c==> c/\ ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c/\ ! c==> cIN b0 f1 c= * f0 cpastecart cvec cNUMERAL c_0 b0 * f3 b0 ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f4 cpastecart csndcart b0 cfstcart b0 * f5 * f0 b0 c? / c/\ ccontinuous_on b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f3 b1 ! c==> cIN b1 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 b1 * f5 * b0 b1
- (((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) |- ((((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((IMAGE k) t) SUBSET c)) ==> ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((IMAGE k) t) SUBSET c))) = ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((IMAGE k) t) SUBSET c)))
T c==> cSUBSET * * part cIMAGE f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c= c==> c==> cSUBSET f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE f0 f3 f2 c==> cSUBSET f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE f0 f3 f2 c==> cSUBSET f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE f0 f3 f2
- |- ((\p'. (!q'. (((y IN u) = p') ==> ((p' ==> (((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)) = q')) ==> (((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c= * f2 cpastecart cvec cNUMERAL c_0 f0 * f3 f0 b1 c= c==> cIN f0 f1 c= * f2 cpastecart cvec cNUMERAL c_0 f0 * f3 f0 c==> b0 b1 f4
+ |- ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) = p') ==> ((p' ==> ((((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) ==> (((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = (p' ==> q'))))
T c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 f3 c==> c==> f3 c= cIN * / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 cIN * / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> f3 f4
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))) |- ((\z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))) z)
T c==> ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= * f1 cpastecart csndcart b0 cfstcart b0 * f2 * f3 b0 * / c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= * f1 cpastecart csndcart b0 cfstcart b0 * f2 * f3 b0 f4
- ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) |- ((((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))
T c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- (((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = ((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((h ((pastecart x) y)) = (p ((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart x) y)))) = q')) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p ((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart x) y))))) = (((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> q')))) = ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((h ((pastecart x) y)) = (p ((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart x) y)))) = q')) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p ((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart x) y))))) = (((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> q'))))
T c= c==> c= c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c= * f3 cpastecart f0 f2 * f4 co f5 / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f2 f6 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 cpastecart f0 f2 * f4 co f5 / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f2 c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f6 c==> c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c= * f3 cpastecart f0 f2 * f4 co f5 / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f2 f6 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 cpastecart f0 f2 * f4 co f5 / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f2 c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f6
- (!t. ((t SUBSET u) ==> ((continuous_on f) t))) |- ((!t. ((t SUBSET u) ==> ((continuous_on f) t))) /\ (!t. ((t SUBSET u) ==> ((continuous_on f) t))))
T c==> ! c==> cSUBSET b0 f0 ccontinuous_on f1 b0 c/\ ! c==> cSUBSET b0 f0 ccontinuous_on f1 b0 ! c==> cSUBSET b0 f0 ccontinuous_on f1 b0
- (!t. ((t SUBSET u) ==> ((continuous_on f) t))), (t SUBSET u) |- ((t SUBSET u) /\ ((continuous_on f) t))
T c==> ! c==> cSUBSET b0 f0 ccontinuous_on f1 b0 c==> cSUBSET f2 f0 c/\ cSUBSET f2 f0 ccontinuous_on f1 f2
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- ((\s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))) s)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 * * part cIMAGE f0 b0 ccontinuous_on * * part co f1 f0 b0 f2
- ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((IMAGE h) t) SUBSET s)), (t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((IMAGE h) t) SUBSET s))
T c==> c==> cSUBSET f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cSUBSET * * part cIMAGE f2 f0 f3 c==> cSUBSET f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cSUBSET * * part cIMAGE f2 f0 f3
+ |- (((continuous_on sndcart) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = T)
T c= ccontinuous_on part csndcart * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT
+ |- ((\f. (!g. (!s. (((IMAGE (f o g)) s) = ((IMAGE f) ((IMAGE g) s)))))) f)
T * / ! ! c= * * part cIMAGE * * part co b0 b1 b2 * * part cIMAGE b0 * * part cIMAGE b1 b2 f0
+ ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) |- ((continuous_on (k o (\z. ((pastecart (sndcart z)) (fstcart z))))) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))
T c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- (((!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))) ==> ((\t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))) t)) = ((\t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))) t))
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 c= c==> ! c==> ccontinuous_on f0 f1 c==> cSUBSET b0 f1 ccontinuous_on f0 b0 * / c==> ccontinuous_on f0 f1 c==> cSUBSET b0 f1 ccontinuous_on f0 b0 f2 * / c==> ccontinuous_on f0 f1 c==> cSUBSET b0 f1 ccontinuous_on f0 b0 f2
+ |- ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z))) = ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))) ==> (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z)))) = ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))) = (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z)))) = ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))))
T c= c==> c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= c= co f2 / cpastecart csndcart b0 cfstcart b0 f0 * f3 * f4 f0 c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0 c= c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= co f2 / cpastecart csndcart b0 cfstcart b0 f0 * f3 * f4 f0 c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0 c= c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= co f2 / cpastecart csndcart b0 cfstcart b0 f0 * f3 * f4 f0 c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0
+ (!x. ((t x) ==> (s x))), (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))), (~ (c x)) |- (!x'. (((\x. ((x = (k x)) /\ (t x))) x') ==> F))
T c==> ! c==> * f0 b0 * f1 b0 c==> ! c==> c? / c/\ c= b0 * f2 b1 * f1 b1 * f3 b0 c==> c~ * f3 f4 ! c==> * / c/\ c= f4 * f2 b1 * f0 b1 b0 cF
+ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = T)
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT
- |- (((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) = ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x))))))
T c= c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))), (((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c), ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) |- (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))))))))
T c==> c/\ ! c==> cIN b0 f0 c= * f1 cpastecart cvec cNUMERAL c_0 b0 * f2 b0 ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= * f3 cpastecart csndcart b0 cfstcart b0 * f4 * f1 b0 c==> cSUBSET * * part cIMAGE f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f5 c==> ccontinuous_on f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c? / c/\ ccontinuous_on b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f5 c/\ ! c==> cIN b1 f0 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f2 b1 ! c==> cIN b1 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 b1 * f4 * b0 b1
+ |- (T = (((~ (_783161 = (k _783162))) \/ ((~ (s _783162)) \/ (c _783161))) = ((c _783161) \/ ((~ (_783161 = (k _783162))) \/ (~ (s _783162))))))
T c= cT c= c\/ c~ c= f0 * f1 f2 c\/ c~ * f3 f2 * f4 f0 c\/ * f4 f0 c\/ c~ c= f0 * f1 f2 c~ * f3 f2
+ |- (((!q'. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = p') ==> ((p' ==> ((((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z))) = q')) ==> (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z)))) = (p' ==> q'))))) ==> ((\q'. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = p') ==> ((p' ==> ((((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z))) = q')) ==> (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z)))) = (p' ==> q'))))) q')) = ((\q'. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = p') ==> ((p' ==> ((((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z))) = q')) ==> (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c==> c==> f2 c= c= co f3 / cpastecart csndcart b1 cfstcart b1 f0 * f4 * f5 f0 b0 c= c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= co f3 / cpastecart csndcart b1 cfstcart b1 f0 * f4 * f5 f0 c==> f2 b0 * / c==> c= cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c==> c==> f2 c= c= co f3 / cpastecart csndcart b1 cfstcart b1 f0 * f4 * f5 f0 b0 c= c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= co f3 / cpastecart csndcart b1 cfstcart b1 f0 * f4 * f5 f0 c==> f2 b0 f6 * / c==> c= cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c==> c==> f2 c= c= co f3 / cpastecart csndcart b1 cfstcart b1 f0 * f4 * f5 f0 b0 c= c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= co f3 / cpastecart csndcart b1 cfstcart b1 f0 * f4 * f5 f0 c==> f2 b0 f6
+ (z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) |- ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z))) = ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))
T c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= c= co f2 / cpastecart csndcart b0 cfstcart b0 f0 * f3 * f4 f0 c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0
+ (((IMAGE f) u) SUBSET c) |- ((((IMAGE f) u) SUBSET c) = T)
T c==> cSUBSET * * part cIMAGE f0 f1 f2 c= cSUBSET * * part cIMAGE f0 f1 f2 cT
+ |- ((linear f) ==> (((continuous_on f) s) = T))
T c==> clinear f0 c= ccontinuous_on f0 f1 cT
+ |- ((\q'. ((((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z)))))))))) = p') ==> ((p' ==> ((?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z))))))))) = q')) ==> ((((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z)))))))))) ==> (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))))))))) = (p' ==> q'))))) q')
T * / c==> c= c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b1 cfstcart b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b1 cfstcart b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c/\ ! c==> cIN b1 f1 c= co f0 / cpastecart csndcart b2 cfstcart b2 cpastecart cvec cNUMERAL c_0 b1 * f3 * f4 b1 c/\ ccontinuous_on f4 f1 cSUBSET * * part cIMAGE f4 f1 f5 c? / c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f5 c/\ ! c==> cIN b2 f1 c= * b1 cpastecart cvec cNUMERAL c_0 b2 * f4 b2 ! c==> cIN b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= co f0 / cpastecart csndcart b3 cfstcart b3 b2 * f3 * b1 b2 f6 c==> c==> f6 c= c? / c/\ ccontinuous_on b1 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f5 c/\ ! c==> cIN b2 f1 c= * b1 cpastecart b2 cvec cNUMERAL c_0 * f4 b2 ! c==> cIN b2 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f0 b2 * f3 * b1 b2 b0 c= c==> c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b1 cfstcart b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b1 cfstcart b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c/\ ! c==> cIN b1 f1 c= co f0 / cpastecart csndcart b2 cfstcart b2 cpastecart cvec cNUMERAL c_0 b1 * f3 * f4 b1 c/\ ccontinuous_on f4 f1 cSUBSET * * part cIMAGE f4 f1 f5 c? / c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f5 c/\ ! c==> cIN b2 f1 c= * b1 cpastecart cvec cNUMERAL c_0 b2 * f4 b2 ! c==> cIN b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= co f0 / cpastecart csndcart b3 cfstcart b3 b2 * f3 * b1 b2 c? / c/\ ccontinuous_on b1 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f5 c/\ ! c==> cIN b2 f1 c= * b1 cpastecart b2 cvec cNUMERAL c_0 * f4 b2 ! c==> cIN b2 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f0 b2 * f3 * b1 b2 c==> f6 b0 f7
+ (!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))) |- ((!s. (((covering_space (c , p)) s) ==> (!h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))) = T)
T c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 c= ! c==> ccovering_space c, f0 f1 b0 ! ! ! c==> c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b3 c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b3 b0 c/\ ! c==> cIN b4 b3 c= * b1 cpastecart cvec cNUMERAL c_0 b4 * f1 * b2 b4 c/\ ccontinuous_on b2 b3 cSUBSET * * part cIMAGE b2 b3 f0 c? / c/\ ccontinuous_on b4 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b3 c/\ cSUBSET * * part cIMAGE b4 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b3 f0 c/\ ! c==> cIN b5 b3 c= * b4 cpastecart cvec cNUMERAL c_0 b5 * b2 b5 ! c==> cIN b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b3 c= * b1 b5 * f1 * b4 b5 cT
+ (!x. ((t x) ==> (s x))), (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))), (~ (c x)) |- ((?x. ((x = (k x)) /\ (t x))) ==> F)
T c==> ! c==> * f0 b0 * f1 b0 c==> ! c==> c? / c/\ c= b0 * f2 b1 * f1 b1 * f3 b0 c==> c~ * f3 f4 c==> c? / c/\ c= f4 * f2 b0 * f0 b0 cF
+ |- (((!g. (!x. (((f o g) x) = (f (g x))))) ==> ((\g. (!x. (((f o g) x) = (f (g x))))) g)) = ((\g. (!x. (((f o g) x) = (f (g x))))) g))
T c= c==> ! ! c= co f0 b0 b1 * f0 * b0 b1 * / ! c= co f0 b0 b1 * f0 * b0 b1 f1 * / ! c= co f0 b0 b1 * f0 * b0 b1 f1
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ |- (((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x))))) = ((!x. ((x IN ((IMAGE k) s)) ==> (x IN c))) ==> ((!x. ((x IN t) ==> (x IN s))) ==> (!x. ((x IN ((IMAGE k) t)) ==> (x IN c))))))
T c= c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 c==> ! c==> cIN b0 * * part cIMAGE f0 f1 cIN b0 f2 c==> ! c==> cIN b0 f3 cIN b0 f1 ! c==> cIN b0 * * part cIMAGE f0 f3 cIN b0 f2
- |- ((?k. t) = t)
T c= c? / f0 f0
+ |- ((((y IN u) = (y IN u)) ==> (((y IN u) ==> ((((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart y) (vec (NUMERAL _0)))) = (f y)) = q')) ==> (((y IN u) ==> (((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart y) (vec (NUMERAL _0)))) = (f y))) = ((y IN u) ==> q')))) = (((y IN u) ==> ((((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart y) (vec (NUMERAL _0)))) = (f y)) = q')) ==> (((y IN u) ==> (((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart y) (vec (NUMERAL _0)))) = (f y))) = ((y IN u) ==> q'))))
T c= c==> c= cIN f0 f1 cIN f0 f1 c==> c==> cIN f0 f1 c= c= co f2 / cpastecart csndcart b0 cfstcart b0 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 f4 c= c==> cIN f0 f1 c= co f2 / cpastecart csndcart b0 cfstcart b0 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 c==> cIN f0 f1 f4 c==> c==> cIN f0 f1 c= c= co f2 / cpastecart csndcart b0 cfstcart b0 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 f4 c= c==> cIN f0 f1 c= co f2 / cpastecart csndcart b0 cfstcart b0 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 c==> cIN f0 f1 f4
- |- (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))) = ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))
T c= c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0 c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0
+ (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) |- (((!x. (((~ (_783161 = (k x))) \/ (~ (s x))) \/ (c _783161))) ==> ((\x. (((~ (_783161 = (k x))) \/ (~ (s x))) \/ (c _783161))) _783162)) = ((\x. (((~ (_783161 = (k x))) \/ (~ (s x))) \/ (c _783161))) _783162))
T c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c= c==> ! c\/ c\/ c~ c= f3 * f0 b0 c~ * f1 b0 * f2 f3 * / c\/ c\/ c~ c= f3 * f0 b0 c~ * f1 b0 * f2 f3 f4 * / c\/ c\/ c~ c= f3 * f0 b0 c~ * f1 b0 * f2 f3 f4
+ |- ((\p'. (!q'. (((y IN u) = p') ==> ((p' ==> ((((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart y) (vec (NUMERAL _0)))) = (f y)) = q')) ==> (((y IN u) ==> (((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart y) (vec (NUMERAL _0)))) = (f y))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c= co f2 / cpastecart csndcart b2 cfstcart b2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 b1 c= c==> cIN f0 f1 c= co f2 / cpastecart csndcart b2 cfstcart b2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 c==> b0 b1 f4
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- ((\s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t))))) s)
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 * / ! c==> ccontinuous_on f0 b0 c==> cSUBSET b1 b0 ccontinuous_on f0 b1 f1
+ |- (((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = ((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = q')) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u))) = (((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> q')))) = ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = q')) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u))) = (((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> q'))))
T c= c==> c= c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cIN * / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN * / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c==> c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cIN * / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN * / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3
+ |- (((y IN u) = p') ==> ((p' ==> ((((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart y) (vec (NUMERAL _0)))) = (f y)) = q')) ==> (((y IN u) ==> (((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart y) (vec (NUMERAL _0)))) = (f y))) = (p' ==> q'))))
T c==> c= cIN f0 f1 f2 c==> c==> f2 c= c= co f3 / cpastecart csndcart b0 cfstcart b0 cpastecart f0 cvec cNUMERAL c_0 * f4 f0 f5 c= c==> cIN f0 f1 c= co f3 / cpastecart csndcart b0 cfstcart b0 cpastecart f0 cvec cNUMERAL c_0 * f4 f0 c==> f2 f5
- |- ((\p'. (!q'. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = p') ==> ((p' ==> (((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))) = q')) ==> (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 b0 c==> c==> b0 c= c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0 b1 c= c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0 c==> b0 b1 f5
+ ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) |- (((!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((continuous_on k) t))) ==> ((\t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((continuous_on k) t))) t)) = ((\t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((continuous_on k) t))) t))
T c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f0 b0 * / c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f0 b0 f2 * / c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f0 b0 f2
+ |- (((!g. (!s. (((IMAGE (f o g)) s) = ((IMAGE f) ((IMAGE g) s))))) ==> ((\g. (!s. (((IMAGE (f o g)) s) = ((IMAGE f) ((IMAGE g) s))))) g)) = ((\g. (!s. (((IMAGE (f o g)) s) = ((IMAGE f) ((IMAGE g) s))))) g))
T c= c==> ! ! c= * * part cIMAGE * * part co f0 b0 b1 * * part cIMAGE f0 * * part cIMAGE b0 b1 * / ! c= * * part cIMAGE * * part co f0 b0 b1 * * part cIMAGE f0 * * part cIMAGE b0 b1 f1 * / ! c= * * part cIMAGE * * part co f0 b0 b1 * * part cIMAGE f0 * * part cIMAGE b0 b1 f1
- (!x. ((t x) ==> (s x))), (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))), (~ (c x)), ((x = (k x')) /\ (t x')) |- ((~ F) ==> F)
T c==> ! c==> * f0 b0 * f1 b0 c==> ! c==> c? / c/\ c= b0 * f2 b1 * f1 b1 * f3 b0 c==> c~ * f3 f4 c==> c/\ c= f4 * f2 f5 * f0 f5 c==> c~ cF cF
+ |- ((\p'. (!q'. ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> ((((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = q')) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c==> c==> b0 c= cIN * / cpastecart csndcart b2 cfstcart b2 cpastecart f0 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 b1 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN * / cpastecart csndcart b2 cfstcart b2 cpastecart f0 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c==> b0 b1 f3
+ |- (((!t. (!x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))))) ==> ((\t. (!x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))))) t)) = ((\t. (!x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))))) t))
T c= c==> ! ! ! c= cIN cpastecart b1 b2 * * part cPCROSS f0 b0 c/\ cIN b1 f0 cIN b2 b0 * / ! ! c= cIN cpastecart b1 b2 * * part cPCROSS f0 b0 c/\ cIN b1 f0 cIN b2 b0 f1 * / ! ! c= cIN cpastecart b1 b2 * * part cPCROSS f0 b0 c/\ cIN b1 f0 cIN b2 b0 f1
+ (!x. ((t x) ==> (s x))) |- ((~ (t _783163)) \/ (s _783163))
T c==> ! c==> * f0 b0 * f1 b0 c\/ c~ * f0 f2 * f1 f2
+ (!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))), ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))), (((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c), ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) |- (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))))))))
T c==> ! c==> cIN b0 f0 c= * f1 cpastecart cvec cNUMERAL c_0 b0 * f2 b0 c==> c/\ ! c==> cIN b0 f0 c= * f1 cpastecart cvec cNUMERAL c_0 b0 * f2 b0 ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= * f3 cpastecart csndcart b0 cfstcart b0 * f4 * f1 b0 c==> cSUBSET * * part cIMAGE f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f5 c==> ccontinuous_on f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c? / c/\ ccontinuous_on b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f5 c/\ ! c==> cIN b1 f0 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f2 b1 ! c==> cIN b1 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 b1 * f4 * b0 b1
+ |- (((!f. (!g. (!x. (((f o g) x) = (f (g x)))))) ==> ((\f. (!g. (!x. (((f o g) x) = (f (g x)))))) f)) = ((\f. (!g. (!x. (((f o g) x) = (f (g x)))))) f))
T c= c==> ! ! ! c= co b0 b1 b2 * b0 * b1 b2 * / ! ! c= co b0 b1 b2 * b0 * b1 b2 f0 * / ! ! c= co b0 b1 b2 * b0 * b1 b2 f0
+ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))), (((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) |- ((((IMAGE (k o (\z. ((pastecart (sndcart z)) (fstcart z))))) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ (!x. (!y. (((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p (k ((pastecart y) x))))))))
T c==> ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= * f1 cpastecart csndcart b0 cfstcart b0 * f2 * f3 b0 c==> cSUBSET * * part cIMAGE f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f4 c/\ cSUBSET * * part cIMAGE * * part co f3 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 ! ! c==> c/\ cIN b0 f0 cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f1 cpastecart b0 b1 * f2 * f3 cpastecart b1 b0
- |- ((((y IN u) ==> (((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)) = ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) ==> (((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y))) = ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y))))) = (((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y))) = ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))))
T c= c==> c==> cIN f0 f1 c= c= * f2 cpastecart cvec cNUMERAL c_0 f0 * f3 f0 c= * f2 cpastecart cvec cNUMERAL c_0 f0 * f3 f0 c= c==> cIN f0 f1 c= * f2 cpastecart cvec cNUMERAL c_0 f0 * f3 f0 c==> cIN f0 f1 c= * f2 cpastecart cvec cNUMERAL c_0 f0 * f3 f0 c= c==> cIN f0 f1 c= * f2 cpastecart cvec cNUMERAL c_0 f0 * f3 f0 c==> cIN f0 f1 c= * f2 cpastecart cvec cNUMERAL c_0 f0 * f3 f0
+ |- ((\x. (!y. ((fstcart ((pastecart x) y)) = x))) x)
T * / ! c= cfstcart cpastecart b0 b1 b0 f0
+ |- (((!f. (!s. ((linear f) ==> ((continuous_on f) s)))) ==> ((\f. (!s. ((linear f) ==> ((continuous_on f) s)))) f)) = ((\f. (!s. ((linear f) ==> ((continuous_on f) s)))) f))
T c= c==> ! ! c==> clinear b0 ccontinuous_on b0 b1 * / ! c==> clinear b0 ccontinuous_on b0 b1 f0 * / ! c==> clinear b0 ccontinuous_on b0 b1 f0
+ |- (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = p') ==> ((p' ==> ((((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z))) = q')) ==> (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z)))) = (p' ==> q'))))
T c==> c= cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c==> c==> f2 c= c= co f3 / cpastecart csndcart b0 cfstcart b0 f0 * f4 * f5 f0 f6 c= c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= co f3 / cpastecart csndcart b0 cfstcart b0 f0 * f4 * f5 f0 c==> f2 f6
+ ((!y. ((y IN u) ==> ((h ((pastecart y) (vec (NUMERAL _0)))) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))), (((IMAGE h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s), ((continuous_on h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))), ((covering_space (c , p)) s) |- (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))))))))
T c==> c/\ ! c==> cIN b0 f0 c= * f1 cpastecart b0 cvec cNUMERAL c_0 * f2 * f3 b0 c/\ ccontinuous_on f3 f0 cSUBSET * * part cIMAGE f3 f0 f4 c==> cSUBSET * * part cIMAGE f1 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f5 c==> ccontinuous_on f1 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> ccovering_space c, f4 f2 f5 c? / c/\ ccontinuous_on b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c/\ ! c==> cIN b1 f0 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f3 b1 ! c==> cIN b1 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f1 b1 * f2 * b0 b1
+ |- (((!c. (!s. (((covering_space (c , p)) s) ==> (!h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z)))))))))))))))) ==> ((\c. (!s. (((covering_space (c , p)) s) ==> (!h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z)))))))))))))))) c)) = ((\c. (!s. (((covering_space (c , p)) s) ==> (!h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z)))))))))))))))) c))
T c= c==> ! ! c==> ccovering_space c, b0 f0 b1 ! ! ! c==> c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b1 c/\ ! c==> cIN b5 b4 c= * b2 cpastecart cvec cNUMERAL c_0 b5 * f0 * b3 b5 c/\ ccontinuous_on b3 b4 cSUBSET * * part cIMAGE b3 b4 b0 c? / c/\ ccontinuous_on b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b0 c/\ ! c==> cIN b6 b4 c= * b5 cpastecart cvec cNUMERAL c_0 b6 * b3 b6 ! c==> cIN b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c= * b2 b6 * f0 * b5 b6 * / ! c==> ccovering_space c, b0 f0 b1 ! ! ! c==> c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b1 c/\ ! c==> cIN b5 b4 c= * b2 cpastecart cvec cNUMERAL c_0 b5 * f0 * b3 b5 c/\ ccontinuous_on b3 b4 cSUBSET * * part cIMAGE b3 b4 b0 c? / c/\ ccontinuous_on b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b0 c/\ ! c==> cIN b6 b4 c= * b5 cpastecart cvec cNUMERAL c_0 b6 * b3 b6 ! c==> cIN b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c= * b2 b6 * f0 * b5 b6 f1 * / ! c==> ccovering_space c, b0 f0 b1 ! ! ! c==> c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b1 c/\ ! c==> cIN b5 b4 c= * b2 cpastecart cvec cNUMERAL c_0 b5 * f0 * b3 b5 c/\ ccontinuous_on b3 b4 cSUBSET * * part cIMAGE b3 b4 b0 c? / c/\ ccontinuous_on b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b0 c/\ ! c==> cIN b6 b4 c= * b5 cpastecart cvec cNUMERAL c_0 b6 * b3 b6 ! c==> cIN b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c= * b2 b6 * f0 * b5 b6 f1
+ |- (((y IN u) = p') ==> ((p' ==> ((((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))) = q')) ==> (((y IN u) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart (vec (NUMERAL _0))) y)) = (p (f y)))) = (p' ==> q'))))
T c==> c= cIN f0 f1 f2 c==> c==> f2 c= c= co f3 / cpastecart csndcart b0 cfstcart b0 cpastecart cvec cNUMERAL c_0 f0 * f4 * f5 f0 f6 c= c==> cIN f0 f1 c= co f3 / cpastecart csndcart b0 cfstcart b0 cpastecart cvec cNUMERAL c_0 f0 * f4 * f5 f0 c==> f2 f6
+ (!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))), ((covering_space (c , p)) s) |- ((!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z)))))))))))) = T)
T c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 c==> ccovering_space c, f0 f1 f2 c= ! ! c==> c/\ ccontinuous_on f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c/\ cSUBSET * * part cIMAGE f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 f2 c/\ ! c==> cIN b2 b1 c= * f3 cpastecart cvec cNUMERAL c_0 b2 * f1 * b0 b2 c/\ ccontinuous_on b0 b1 cSUBSET * * part cIMAGE b0 b1 f0 c? / c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 f0 c/\ ! c==> cIN b3 b1 c= * b2 cpastecart cvec cNUMERAL c_0 b3 * b0 b3 ! c==> cIN b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= * f3 b3 * f1 * b2 b3 cT
+ |- (((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((h ((pastecart x) y)) = (p ((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart x) y)))) = ((h ((pastecart x) y)) = (p (k ((pastecart y) x))))))
T c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c= * f3 cpastecart f0 f2 * f4 co f5 / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f2 c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0
- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((continuous_on k) t))), (t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) |- ((continuous_on k) t)
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 c==> cSUBSET f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 f2
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- |- ((\p'. (!q'. ((((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))) = p') ==> ((p' ==> ((?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z))))))))) = q')) ==> ((((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))) ==> (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b2 cfstcart b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b2 cfstcart b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c? / c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b3 f1 c= * b2 cpastecart cvec cNUMERAL c_0 b3 * f4 b3 ! c==> cIN b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b3 cfstcart b3 * f5 * b2 b3 b0 c==> c==> b0 c= c? / c/\ ccontinuous_on b2 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c/\ ! c==> cIN b3 f1 c= * b2 cpastecart b3 cvec cNUMERAL c_0 * f4 b3 ! c==> cIN b3 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f0 b3 * f5 * b2 b3 b1 c= c==> c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b2 cfstcart b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b2 cfstcart b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c? / c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b3 f1 c= * b2 cpastecart cvec cNUMERAL c_0 b3 * f4 b3 ! c==> cIN b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b3 cfstcart b3 * f5 * b2 b3 c? / c/\ ccontinuous_on b2 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c/\ ! c==> cIN b3 f1 c= * b2 cpastecart b3 cvec cNUMERAL c_0 * f4 b3 ! c==> cIN b3 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f0 b3 * f5 * b2 b3 c==> b0 b1 f6
+ (!x. ((t x) ==> (s x))) |- ((t _783163) ==> (s _783163))
T c==> ! c==> * f0 b0 * f1 b0 c==> * f0 f2 * f1 f2
- |- ((\p'. (!q'. (((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) = p') ==> ((p' ==> ((?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))))))) = q')) ==> (((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b2 cfstcart b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b2 cfstcart b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 b0 c==> c==> b0 c= c? / c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b3 f1 c= * b2 cpastecart cvec cNUMERAL c_0 b3 * f4 b3 ! c==> cIN b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b3 cfstcart b3 * f5 * b2 b3 b1 c= c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b2 cfstcart b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b2 cfstcart b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c? / c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b3 f1 c= * b2 cpastecart cvec cNUMERAL c_0 b3 * f4 b3 ! c==> cIN b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b3 cfstcart b3 * f5 * b2 b3 c==> b0 b1 f6
+ |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- |- ((((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))) ==> (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))))))))) = (((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))) ==> (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))))))))))
T c= c==> c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1 c? / c/\ ccontinuous_on b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f4 b1 ! c==> cIN b1 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f0 b1 * f5 * b0 b1 c==> c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1 c? / c/\ ccontinuous_on b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f4 b1 ! c==> cIN b1 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f0 b1 * f5 * b0 b1
+ |- (((!p'. (!q'. ((((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x))))) = p') ==> ((p' ==> (((h ((pastecart x) t)) = (p (k ((pastecart t) x)))) = q')) ==> ((((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x))))) ==> ((h ((pastecart x) t)) = (p (k ((pastecart t) x))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x))))) = p') ==> ((p' ==> (((h ((pastecart x) t)) = (p (k ((pastecart t) x)))) = q')) ==> ((((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x))))) ==> ((h ((pastecart x) t)) = (p (k ((pastecart t) x))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x))))) = p') ==> ((p' ==> (((h ((pastecart x) t)) = (p (k ((pastecart t) x)))) = q')) ==> ((((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x))))) ==> ((h ((pastecart x) t)) = (p (k ((pastecart t) x))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= * f3 cpastecart csndcart cpastecart f0 f1 cfstcart cpastecart f0 f1 * f4 * f5 cpastecart f0 f1 b0 c==> c==> b0 c= c= * f3 cpastecart f1 f0 * f4 * f5 cpastecart f0 f1 b1 c= c==> c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= * f3 cpastecart csndcart cpastecart f0 f1 cfstcart cpastecart f0 f1 * f4 * f5 cpastecart f0 f1 c= * f3 cpastecart f1 f0 * f4 * f5 cpastecart f0 f1 c==> b0 b1 * / ! c==> c= c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= * f3 cpastecart csndcart cpastecart f0 f1 cfstcart cpastecart f0 f1 * f4 * f5 cpastecart f0 f1 b0 c==> c==> b0 c= c= * f3 cpastecart f1 f0 * f4 * f5 cpastecart f0 f1 b1 c= c==> c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= * f3 cpastecart csndcart cpastecart f0 f1 cfstcart cpastecart f0 f1 * f4 * f5 cpastecart f0 f1 c= * f3 cpastecart f1 f0 * f4 * f5 cpastecart f0 f1 c==> b0 b1 f6 * / ! c==> c= c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= * f3 cpastecart csndcart cpastecart f0 f1 cfstcart cpastecart f0 f1 * f4 * f5 cpastecart f0 f1 b0 c==> c==> b0 c= c= * f3 cpastecart f1 f0 * f4 * f5 cpastecart f0 f1 b1 c= c==> c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= * f3 cpastecart csndcart cpastecart f0 f1 cfstcart cpastecart f0 f1 * f4 * f5 cpastecart f0 f1 c= * f3 cpastecart f1 f0 * f4 * f5 cpastecart f0 f1 c==> b0 b1 f6
- T |- (T = T)
T c==> cT c= cT cT
+ |- (((!q'. ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((h ((pastecart x) y)) = (p ((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart x) y)))) = q')) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p ((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart x) y))))) = (p' ==> q'))))) ==> ((\q'. ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((h ((pastecart x) y)) = (p ((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart x) y)))) = q')) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p ((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart x) y))))) = (p' ==> q'))))) q')) = ((\q'. ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((h ((pastecart x) y)) = (p ((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart x) y)))) = q')) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p ((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart x) y))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c==> c==> f3 c= c= * f4 cpastecart f0 f2 * f5 co f6 / cpastecart csndcart b1 cfstcart b1 cpastecart f0 f2 b0 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 cpastecart f0 f2 * f5 co f6 / cpastecart csndcart b1 cfstcart b1 cpastecart f0 f2 c==> f3 b0 * / c==> c= c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c==> c==> f3 c= c= * f4 cpastecart f0 f2 * f5 co f6 / cpastecart csndcart b1 cfstcart b1 cpastecart f0 f2 b0 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 cpastecart f0 f2 * f5 co f6 / cpastecart csndcart b1 cfstcart b1 cpastecart f0 f2 c==> f3 b0 f7 * / c==> c= c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c==> c==> f3 c= c= * f4 cpastecart f0 f2 * f5 co f6 / cpastecart csndcart b1 cfstcart b1 cpastecart f0 f2 b0 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 cpastecart f0 f2 * f5 co f6 / cpastecart csndcart b1 cfstcart b1 cpastecart f0 f2 c==> f3 b0 f7
+ (((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) |- (((IMAGE (k o (\z. ((pastecart (sndcart z)) (fstcart z))))) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c)
T c==> cSUBSET * * part cIMAGE f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2
+ (!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))) |- ((\c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z)))))))))))))))) c)
T c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 * / ! ! ! ! c==> ccovering_space c, b0 f0 b1 c==> c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b1 c/\ ! c==> cIN b5 b4 c= * b2 cpastecart cvec cNUMERAL c_0 b5 * f0 * b3 b5 c/\ ccontinuous_on b3 b4 cSUBSET * * part cIMAGE b3 b4 b0 c? / c/\ ccontinuous_on b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b0 c/\ ! c==> cIN b6 b4 c= * b5 cpastecart cvec cNUMERAL c_0 b6 * b3 b6 ! c==> cIN b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c= * b2 b6 * f0 * b5 b6 f1
+ (!x. ((t x) ==> (s x))), (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))), (?x. ((x = (k x)) /\ (t x))), (~ (c x)) |- ((~ (c x)) /\ F)
T c==> ! c==> * f0 b0 * f1 b0 c==> ! c==> c? / c/\ c= b0 * f2 b1 * f1 b1 * f3 b0 c==> c? / c/\ c= f4 * f2 b0 * f0 b0 c==> c~ * f3 f4 c/\ c~ * f3 f4 cF
+ |- ((\p'. (!q'. (((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) = p') ==> ((p' ==> ((?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z))))))))) = q')) ==> (((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z)))))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b2 cfstcart b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b2 cfstcart b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c/\ ! c==> cIN b2 f1 c= co f0 / cpastecart csndcart b3 cfstcart b3 cpastecart cvec cNUMERAL c_0 b2 * f3 * f4 b2 c/\ ccontinuous_on f4 f1 cSUBSET * * part cIMAGE f4 f1 f5 b0 c==> c==> b0 c= c? / c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f5 c/\ ! c==> cIN b3 f1 c= * b2 cpastecart cvec cNUMERAL c_0 b3 * f4 b3 ! c==> cIN b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= co f0 / cpastecart csndcart b4 cfstcart b4 b3 * f3 * b2 b3 b1 c= c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b2 cfstcart b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b2 cfstcart b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c/\ ! c==> cIN b2 f1 c= co f0 / cpastecart csndcart b3 cfstcart b3 cpastecart cvec cNUMERAL c_0 b2 * f3 * f4 b2 c/\ ccontinuous_on f4 f1 cSUBSET * * part cIMAGE f4 f1 f5 c? / c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f5 c/\ ! c==> cIN b3 f1 c= * b2 cpastecart cvec cNUMERAL c_0 b3 * f4 b3 ! c==> cIN b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= co f0 / cpastecart csndcart b4 cfstcart b4 b3 * f3 * b2 b3 c==> b0 b1 f6
- |- ((\q'. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = p') ==> ((p' ==> (((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))) = q')) ==> (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))) = (p' ==> q'))))) q')
T * / c==> c= cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c==> c==> f2 c= c= * f3 cpastecart csndcart f0 cfstcart f0 * f4 * f5 f0 b0 c= c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f3 cpastecart csndcart f0 cfstcart f0 * f4 * f5 f0 c==> f2 b0 f6
+ (((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) |- ((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) /\ ((?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z))))))))) = (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))))
T c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c/\ c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c= c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= co f0 / cpastecart csndcart b2 cfstcart b2 b1 * f5 * b0 b1 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1
+ |- (((h ((pastecart x) t)) = (p (k ((pastecart t) x)))) ==> (((h ((pastecart x) t)) = (p (k ((pastecart t) x)))) = T))
T c==> c= * f0 cpastecart f1 f2 * f3 * f4 cpastecart f2 f1 c= c= * f0 cpastecart f1 f2 * f3 * f4 cpastecart f2 f1 cT
- |- ((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> ((?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))))))) = (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))))
T c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c= c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1
+ ((covering_space (c , p)) s) |- ((\f. (!u. ((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z)))))))))))) f)
T c==> ccovering_space c, f0 f1 f2 * / ! c==> c/\ ccontinuous_on * * part co f3 / cpastecart csndcart b2 cfstcart b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c/\ cSUBSET * * part cIMAGE * * part co f3 / cpastecart csndcart b2 cfstcart b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 f2 c/\ ! c==> cIN b2 b1 c= co f3 / cpastecart csndcart b3 cfstcart b3 cpastecart cvec cNUMERAL c_0 b2 * f1 * b0 b2 c/\ ccontinuous_on b0 b1 cSUBSET * * part cIMAGE b0 b1 f0 c? / c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 f0 c/\ ! c==> cIN b3 b1 c= * b2 cpastecart cvec cNUMERAL c_0 b3 * b0 b3 ! c==> cIN b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= co f3 / cpastecart csndcart b4 cfstcart b4 b3 * f1 * b2 b3 f4
+ |- ((\s. (((IMAGE (f o g)) s) = ((IMAGE f) ((IMAGE g) s)))) s)
T * / c= * * part cIMAGE * * part co f0 f1 b0 * * part cIMAGE f0 * * part cIMAGE f1 b0 f2
+ (!x. ((t x) ==> (s x))), (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))), (~ (c x)) |- ((((\x. ((x = (k x)) /\ (t x))) x') ==> F) = T)
T c==> ! c==> * f0 b0 * f1 b0 c==> ! c==> c? / c/\ c= b0 * f2 b1 * f1 b1 * f3 b0 c==> c~ * f3 f4 c= c==> * / c/\ c= f4 * f2 b0 * f0 b0 f5 cF cT
- |- ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)
T * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
- |- (((!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)) ==> ((\s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)) s)) = ((\s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)) s))
T c= c==> ! c==> c~ c==> ! c==> c? / c/\ c= b1 * f0 b2 * b0 b2 * f1 b1 c==> ! c==> * f2 b1 * b0 b1 ! c==> c? / c/\ c= b1 * f0 b2 * f2 b2 * f1 b1 cF * / c==> c~ c==> ! c==> c? / c/\ c= b1 * f0 b2 * b0 b2 * f1 b1 c==> ! c==> * f2 b1 * b0 b1 ! c==> c? / c/\ c= b1 * f0 b2 * f2 b2 * f1 b1 cF f3 * / c==> c~ c==> ! c==> c? / c/\ c= b1 * f0 b2 * b0 b2 * f1 b1 c==> ! c==> * f2 b1 * b0 b1 ! c==> c? / c/\ c= b1 * f0 b2 * f2 b2 * f1 b1 cF f3
+ (!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))) |- ((!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))) /\ (!p. (!c. (!s. (((covering_space (c , p)) s) ==> (!h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))))
T c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 c/\ ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 ! ! ! c==> ccovering_space c, b1 b0 b2 ! ! ! c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7
+ (((IMAGE h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s), ((continuous_on h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- (((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))) ==> (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z))))))))))
T c==> cSUBSET * * part cIMAGE f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c==> ccontinuous_on f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1 c? / c/\ ccontinuous_on b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f4 b1 ! c==> cIN b1 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f0 b1 * f5 * b0 b1
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ (!x. ((t x) ==> (s x))), ((x = (k x')) /\ (t x')) |- (((((k x') = (k x')) /\ (s x')) ==> (c (k x'))) = (c (k x')))
T c==> ! c==> * f0 b0 * f1 b0 c==> c/\ c= f2 * f3 f4 * f0 f4 c= c==> c/\ c= * f3 f4 * f3 f4 * f1 f4 * f5 * f3 f4 * f5 * f3 f4
- |- ((!t. (!k. (!s. ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))))) = T)
T c= ! ! ! c==> ! c==> c? / c/\ c= b3 * b1 b4 * b2 b4 * f0 b3 c==> ! c==> * b0 b3 * b2 b3 ! c==> c? / c/\ c= b3 * b1 b4 * b0 b4 * f0 b3 cT
+ (!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))) |- (((covering_space (c , p)) s) ==> (!h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))
T c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 c==> ccovering_space c, f0 f1 f2 ! ! ! c==> c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 f2 c/\ ! c==> cIN b3 b2 c= * b0 cpastecart cvec cNUMERAL c_0 b3 * f1 * b1 b3 c/\ ccontinuous_on b1 b2 cSUBSET * * part cIMAGE b1 b2 f0 c? / c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 f0 c/\ ! c==> cIN b4 b2 c= * b3 cpastecart cvec cNUMERAL c_0 b4 * b1 b4 ! c==> cIN b4 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 c= * b0 b4 * f1 * b3 b4
- |- ((_783178 = _783179) ==> ((c _783179) \/ (~ (c _783178))))
T c==> c= f0 f1 c\/ * f2 f1 c~ * f2 f0
+ |- ((\q'. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) = p') ==> ((p' ==> ((((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) ==> (((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 f3 c==> c==> f3 c= cIN * / cpastecart csndcart b1 cfstcart b1 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 cIN * / cpastecart csndcart b1 cfstcart b1 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> f3 b0 f4
+ |- ((s x') = (((k x') = (k x')) /\ (s x')))
T c= * f0 f1 c/\ c= * f2 f1 * f2 f1 * f0 f1
- |- ((\q'. ((((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))) = p') ==> ((p' ==> ((?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z))))))))) = q')) ==> ((((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))) ==> (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))))))))) = (p' ==> q'))))) q')
T * / c==> c= c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b1 cfstcart b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b1 cfstcart b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c? / c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b2 f1 c= * b1 cpastecart cvec cNUMERAL c_0 b2 * f4 b2 ! c==> cIN b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b2 cfstcart b2 * f5 * b1 b2 f6 c==> c==> f6 c= c? / c/\ ccontinuous_on b1 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c/\ ! c==> cIN b2 f1 c= * b1 cpastecart b2 cvec cNUMERAL c_0 * f4 b2 ! c==> cIN b2 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f0 b2 * f5 * b1 b2 b0 c= c==> c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b1 cfstcart b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b1 cfstcart b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c? / c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b2 f1 c= * b1 cpastecart cvec cNUMERAL c_0 b2 * f4 b2 ! c==> cIN b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b2 cfstcart b2 * f5 * b1 b2 c? / c/\ ccontinuous_on b1 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c/\ ! c==> cIN b2 f1 c= * b1 cpastecart b2 cvec cNUMERAL c_0 * f4 b2 ! c==> cIN b2 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f0 b2 * f5 * b1 b2 c==> f6 b0 f7
- |- (((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((h ((pastecart x) y)) = (p (k ((pastecart y) x)))) = ((h ((pastecart x) y)) = (p (k ((pastecart y) x)))))) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p (k ((pastecart y) x))))) = (((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p (k ((pastecart y) x))))))) = ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p (k ((pastecart y) x))))) = (((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p (k ((pastecart y) x)))))))
T c= c==> c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0 c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0 c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0 c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0
+ |- (((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))) ==> ((?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z))))))))) = (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))))))))))
T c==> c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1 c= c? / c/\ ccontinuous_on b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f4 b1 ! c==> cIN b1 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f0 b1 * f5 * b0 b1 c? / c/\ ccontinuous_on b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f4 b1 ! c==> cIN b1 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f0 b1 * f5 * b0 b1
- |- (((!q'. (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((h z) = (p (k z))) = q')) ==> (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))) = (p' ==> q'))))) ==> ((\q'. (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((h z) = (p (k z))) = q')) ==> (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))) = (p' ==> q'))))) q')) = ((\q'. (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((h z) = (p (k z))) = q')) ==> (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c==> c==> f2 c= c= * f3 f0 * f4 * f5 f0 b0 c= c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 f0 * f4 * f5 f0 c==> f2 b0 * / c==> c= cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c==> c==> f2 c= c= * f3 f0 * f4 * f5 f0 b0 c= c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 f0 * f4 * f5 f0 c==> f2 b0 f6 * / c==> c= cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c==> c==> f2 c= c= * f3 f0 * f4 * f5 f0 b0 c= c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 f0 * f4 * f5 f0 c==> f2 b0 f6
+ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))), ((x IN u) /\ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- (((x IN u) /\ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((h ((pastecart x) t)) = (p (k ((pastecart t) x)))))
T c==> ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= * f1 cpastecart csndcart b0 cfstcart b0 * f2 * f3 b0 c==> c/\ cIN f4 f0 cIN f5 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ c/\ cIN f4 f0 cIN f5 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f1 cpastecart f4 f5 * f2 * f3 cpastecart f5 f4
+ |- ((((continuous_on (k o (\z. ((pastecart (sndcart z)) (fstcart z))))) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE (k o (\z. ((pastecart (sndcart z)) (fstcart z))))) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> (((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p ((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) z)))))))) = ((\k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z))))))))) (k o (\z. ((pastecart (sndcart z)) (fstcart z))))))
T c= c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c/\ ! c==> cIN b0 f1 c= co f0 / cpastecart csndcart b1 cfstcart b1 cpastecart b0 cvec cNUMERAL c_0 * f3 b0 ! c==> cIN b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 b0 * f5 co f0 / cpastecart csndcart b1 cfstcart b1 b0 * / c/\ ccontinuous_on b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f3 b1 ! c==> cIN b1 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 b1 * f5 * b0 b1 * * part co f0 / cpastecart csndcart b0 cfstcart b0
+ |- ((\p'. (!q'. (((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = p') ==> ((p' ==> (((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x)))) = q')) ==> (((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x))))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 b0 c==> c==> b0 c= c= * f3 cpastecart csndcart cpastecart f0 f1 cfstcart cpastecart f0 f1 * f4 * f5 cpastecart f0 f1 b1 c= c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= * f3 cpastecart csndcart cpastecart f0 f1 cfstcart cpastecart f0 f1 * f4 * f5 cpastecart f0 f1 c==> b0 b1 f6
+ ((h ((pastecart x) t)) = (p (k ((pastecart t) x)))) |- (((h ((pastecart x) t)) = (p (k ((pastecart t) x)))) /\ (((h ((pastecart x) t)) = (p (k ((pastecart t) x)))) = T))
T c==> c= * f0 cpastecart f1 f2 * f3 * f4 cpastecart f2 f1 c/\ c= * f0 cpastecart f1 f2 * f3 * f4 cpastecart f2 f1 c= c= * f0 cpastecart f1 f2 * f3 * f4 cpastecart f2 f1 cT
+ |- (((!q'. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) = p') ==> ((p' ==> ((((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) ==> (((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = (p' ==> q'))))) ==> ((\q'. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) = p') ==> ((p' ==> ((((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) ==> (((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = (p' ==> q'))))) q')) = ((\q'. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) = p') ==> ((p' ==> ((((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) ==> (((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 f3 c==> c==> f3 c= cIN * / cpastecart csndcart b1 cfstcart b1 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 cIN * / cpastecart csndcart b1 cfstcart b1 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> f3 b0 * / c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 f3 c==> c==> f3 c= cIN * / cpastecart csndcart b1 cfstcart b1 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 cIN * / cpastecart csndcart b1 cfstcart b1 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> f3 b0 f4 * / c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 f3 c==> c==> f3 c= cIN * / cpastecart csndcart b1 cfstcart b1 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 cIN * / cpastecart csndcart b1 cfstcart b1 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> f3 b0 f4
+ |- ((\t. (!x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))))) t)
T * / ! ! c= cIN cpastecart b1 b2 * * part cPCROSS f0 b0 c/\ cIN b1 f0 cIN b2 b0 f1
- |- (((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))
T c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF
+ |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!x. ((P x) \/ Q)) = ((!x. (P x)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ |- (((~ (c x)) ==> F) = (c x))
T c= c==> c~ * f0 f1 cF * f0 f1
+ |- (((y IN u) ==> ((((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))) = q')) ==> (((y IN u) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart (vec (NUMERAL _0))) y)) = (p (f y)))) = ((y IN u) ==> q')))
T c==> c==> cIN f0 f1 c= c= co f2 / cpastecart csndcart b0 cfstcart b0 cpastecart cvec cNUMERAL c_0 f0 * f3 * f4 f0 f5 c= c==> cIN f0 f1 c= co f2 / cpastecart csndcart b0 cfstcart b0 cpastecart cvec cNUMERAL c_0 f0 * f3 * f4 f0 c==> cIN f0 f1 f5
+ |- (((!s. (((continuous_on f) s) ==> (!t. ((t SUBSET s) ==> ((continuous_on f) t))))) ==> ((\s. (((continuous_on f) s) ==> (!t. ((t SUBSET s) ==> ((continuous_on f) t))))) s)) = ((\s. (((continuous_on f) s) ==> (!t. ((t SUBSET s) ==> ((continuous_on f) t))))) s))
T c= c==> ! c==> ccontinuous_on f0 b0 ! c==> cSUBSET b1 b0 ccontinuous_on f0 b1 * / c==> ccontinuous_on f0 b0 ! c==> cSUBSET b1 b0 ccontinuous_on f0 b1 f1 * / c==> ccontinuous_on f0 b0 ! c==> cSUBSET b1 b0 ccontinuous_on f0 b1 f1
+ (!x. ((t x) ==> (s x))), (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))), (~ (c x)) |- (((\x. ((x = (k x)) /\ (t x))) x') ==> F)
T c==> ! c==> * f0 b0 * f1 b0 c==> ! c==> c? / c/\ c= b0 * f2 b1 * f1 b1 * f3 b0 c==> c~ * f3 f4 c==> * / c/\ c= f4 * f2 b0 * f0 b0 f5 cF
- |- (((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((IMAGE k) t) SUBSET c)) ==> ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((IMAGE k) t) SUBSET c)))
T c==> c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE f2 f0 f3 c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE f2 f0 f3
- |- ((((y IN u) = (y IN u)) ==> (((y IN u) ==> (((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)) = q')) ==> (((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y))) = ((y IN u) ==> q')))) = (((y IN u) ==> (((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)) = q')) ==> (((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y))) = ((y IN u) ==> q'))))
T c= c==> c= cIN f0 f1 cIN f0 f1 c==> c==> cIN f0 f1 c= c= * f2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 f4 c= c==> cIN f0 f1 c= * f2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 c==> cIN f0 f1 f4 c==> c==> cIN f0 f1 c= c= * f2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 f4 c= c==> cIN f0 f1 c= * f2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 c==> cIN f0 f1 f4
+ |- ((!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))) ==> (!p. (!c. (!s. (((covering_space (c , p)) s) ==> (!h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))))
T c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 ! ! ! c==> ccovering_space c, b1 b0 b2 ! ! ! c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7
+ |- (((!f. (!g. (!s. (((IMAGE (f o g)) s) = ((IMAGE f) ((IMAGE g) s)))))) ==> ((\f. (!g. (!s. (((IMAGE (f o g)) s) = ((IMAGE f) ((IMAGE g) s)))))) f)) = ((\f. (!g. (!s. (((IMAGE (f o g)) s) = ((IMAGE f) ((IMAGE g) s)))))) f))
T c= c==> ! ! ! c= * * part cIMAGE * * part co b0 b1 b2 * * part cIMAGE b0 * * part cIMAGE b1 b2 * / ! ! c= * * part cIMAGE * * part co b0 b1 b2 * * part cIMAGE b0 * * part cIMAGE b1 b2 f0 * / ! ! c= * * part cIMAGE * * part co b0 b1 b2 * * part cIMAGE b0 * * part cIMAGE b1 b2 f0
+ |- (((!x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t))))) ==> ((\x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t))))) x)) = ((\x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t))))) x))
T c= c==> ! ! c= cIN cpastecart b0 b1 * * part cPCROSS f0 f1 c/\ cIN b0 f0 cIN b1 f1 * / ! c= cIN cpastecart b0 b1 * * part cPCROSS f0 f1 c/\ cIN b0 f0 cIN b1 f1 f2 * / ! c= cIN cpastecart b0 b1 * * part cPCROSS f0 f1 c/\ cIN b0 f0 cIN b1 f1 f2
+ |- (T = (linear sndcart))
T c= cT clinear part csndcart
+ ((continuous_on h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- ((\t. ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((continuous_on h) t))) t)
T c==> ccontinuous_on f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * / c==> cSUBSET b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 f2
+ (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) |- ((\x. (!x. (((~ (x = (k x))) \/ (~ (s x))) \/ (c x)))) _783161)
T c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 * / ! c\/ c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 f3
+ (!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) |- ((((y IN u) ==> ((((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart y) (vec (NUMERAL _0)))) = (f y)) = T)) ==> (((y IN u) ==> (((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart y) (vec (NUMERAL _0)))) = (f y))) = ((y IN u) ==> T))) = (((y IN u) ==> (((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart y) (vec (NUMERAL _0)))) = (f y))) = ((y IN u) ==> T)))
T c==> ! c==> cIN b0 f0 c= * f1 cpastecart cvec cNUMERAL c_0 b0 * f2 b0 c= c==> c==> cIN f3 f0 c= c= co f1 / cpastecart csndcart b0 cfstcart b0 cpastecart f3 cvec cNUMERAL c_0 * f2 f3 cT c= c==> cIN f3 f0 c= co f1 / cpastecart csndcart b0 cfstcart b0 cpastecart f3 cvec cNUMERAL c_0 * f2 f3 c==> cIN f3 f0 cT c= c==> cIN f3 f0 c= co f1 / cpastecart csndcart b0 cfstcart b0 cpastecart f3 cvec cNUMERAL c_0 * f2 f3 c==> cIN f3 f0 cT
- |- ((((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))) = p') ==> ((p' ==> ((?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z))))))))) = q')) ==> ((((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))) ==> (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))))))))) = (p' ==> q'))))
T c==> c= c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1 f6 c==> c==> f6 c= c? / c/\ ccontinuous_on b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f4 b1 ! c==> cIN b1 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f0 b1 * f5 * b0 b1 f7 c= c==> c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1 c? / c/\ ccontinuous_on b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f4 b1 ! c==> cIN b1 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f0 b1 * f5 * b0 b1 c==> f6 f7
- |- ((\s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)) s)
T * / c==> c~ c==> ! c==> c? / c/\ c= b1 * f0 b2 * b0 b2 * f1 b1 c==> ! c==> * f2 b1 * b0 b1 ! c==> c? / c/\ c= b1 * f0 b2 * f2 b2 * f1 b1 cF f3
+ (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) |- (!x. (!x. (((~ (x = (k x))) \/ (~ (s x))) \/ (c x))))
T c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! ! c\/ c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0
- |- ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p (k ((pastecart y) x))))) = (((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p (k ((pastecart y) x))))))
T c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0 c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0
+ |- ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) ==> ((((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) ==> (((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) ==> q')))
T c==> c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 c= cIN * / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 cIN * / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 f3
+ |- (((continuous_on (\z. ((pastecart (sndcart z)) (fstcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = T)
T c= ccontinuous_on / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 cT
- ((continuous_on f) u) |- (((!t. ((t SUBSET u) ==> ((continuous_on f) t))) ==> ((\t. ((t SUBSET u) ==> ((continuous_on f) t))) t)) = ((\t. ((t SUBSET u) ==> ((continuous_on f) t))) t))
T c==> ccontinuous_on f0 f1 c= c==> ! c==> cSUBSET b0 f1 ccontinuous_on f0 b0 * / c==> cSUBSET b0 f1 ccontinuous_on f0 b0 f2 * / c==> cSUBSET b0 f1 ccontinuous_on f0 b0 f2
+ |- ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z))) = ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))
T c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= c= co f2 / cpastecart csndcart b0 cfstcart b0 f0 * f3 * f4 f0 c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0
- |- (((!p'. (!q'. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = p') ==> ((p' ==> (((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))) = q')) ==> (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = p') ==> ((p' ==> (((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))) = q')) ==> (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = p') ==> ((p' ==> (((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))) = q')) ==> (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 b0 c==> c==> b0 c= c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0 b1 c= c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0 c==> b0 b1 * / ! c==> c= cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 b0 c==> c==> b0 c= c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0 b1 c= c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0 c==> b0 b1 f5 * / ! c==> c= cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 b0 c==> c==> b0 c= c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0 b1 c= c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0 c==> b0 b1 f5
+ (!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))), (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))), (((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c), ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) |- (((continuous_on (k o (\z. ((pastecart (sndcart z)) (fstcart z))))) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE (k o (\z. ((pastecart (sndcart z)) (fstcart z))))) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> (((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p ((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) z))))))))
T c==> ! c==> cIN b0 f0 c= * f1 cpastecart cvec cNUMERAL c_0 b0 * f2 b0 c==> ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= * f3 cpastecart csndcart b0 cfstcart b0 * f4 * f1 b0 c==> cSUBSET * * part cIMAGE f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f5 c==> ccontinuous_on f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ ccontinuous_on * * part co f1 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE * * part co f1 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f5 c/\ ! c==> cIN b0 f0 c= co f1 / cpastecart csndcart b1 cfstcart b1 cpastecart b0 cvec cNUMERAL c_0 * f2 b0 ! c==> cIN b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 b0 * f4 co f1 / cpastecart csndcart b1 cfstcart b1 b0
+ |- ((\q'. (((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = p') ==> ((p' ==> (((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x)))) = q')) ==> (((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x))))) = (p' ==> q'))))) q')
T * / c==> c= cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 f3 c==> c==> f3 c= c= * f4 cpastecart csndcart cpastecart f0 f1 cfstcart cpastecart f0 f1 * f5 * f6 cpastecart f0 f1 b0 c= c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= * f4 cpastecart csndcart cpastecart f0 f1 cfstcart cpastecart f0 f1 * f5 * f6 cpastecart f0 f1 c==> f3 b0 f7
+ (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- (!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 ! ! c==> c/\ ccontinuous_on b0 b1 ccontinuous_on f0 * * part cIMAGE b0 b1 ccontinuous_on * * part co f0 b0 b1
- |- (((!t. (!k. (!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)))) ==> ((\t. (!k. (!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)))) t)) = ((\t. (!k. (!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)))) t))
T c= c==> ! ! ! c==> c~ c==> ! c==> c? / c/\ c= b3 * b1 b4 * b2 b4 * f0 b3 c==> ! c==> * b0 b3 * b2 b3 ! c==> c? / c/\ c= b3 * b1 b4 * b0 b4 * f0 b3 cF * / ! ! c==> c~ c==> ! c==> c? / c/\ c= b3 * b1 b4 * b2 b4 * f0 b3 c==> ! c==> * b0 b3 * b2 b3 ! c==> c? / c/\ c= b3 * b1 b4 * b0 b4 * f0 b3 cF f1 * / ! ! c==> c~ c==> ! c==> c? / c/\ c= b3 * b1 b4 * b2 b4 * f0 b3 c==> ! c==> * b0 b3 * b2 b3 ! c==> c? / c/\ c= b3 * b1 b4 * b0 b4 * f0 b3 cF f1
+ (!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))) |- (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z)))))))))))))
T c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 ! ! c==> ccovering_space c, f0 f1 f2 c==> c/\ ccontinuous_on f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c/\ cSUBSET * * part cIMAGE f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 f2 c/\ ! c==> cIN b2 b1 c= * f3 cpastecart cvec cNUMERAL c_0 b2 * f1 * b0 b2 c/\ ccontinuous_on b0 b1 cSUBSET * * part cIMAGE b0 b1 f0 c? / c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 f0 c/\ ! c==> cIN b3 b1 c= * b2 cpastecart cvec cNUMERAL c_0 b3 * b0 b3 ! c==> cIN b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= * f3 b3 * f1 * b2 b3
- (((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)), ((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))) |- ((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) /\ ((?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))))))) = T))
T c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c==> c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1 c/\ c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c= c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1 cT
+ (!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))) |- (!c. (!s. (((covering_space (c , p)) s) ==> (!h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))
T c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 ! ! c==> ccovering_space c, b0 f0 b1 ! ! ! c==> c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b1 c/\ ! c==> cIN b5 b4 c= * b2 cpastecart cvec cNUMERAL c_0 b5 * f0 * b3 b5 c/\ ccontinuous_on b3 b4 cSUBSET * * part cIMAGE b3 b4 b0 c? / c/\ ccontinuous_on b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b0 c/\ ! c==> cIN b6 b4 c= * b5 cpastecart cvec cNUMERAL c_0 b6 * b3 b6 ! c==> cIN b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c= * b2 b6 * f0 * b5 b6
+ |- (((!q'. (((y IN u) = p') ==> ((p' ==> ((((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart y) (vec (NUMERAL _0)))) = (f y)) = q')) ==> (((y IN u) ==> (((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart y) (vec (NUMERAL _0)))) = (f y))) = (p' ==> q'))))) ==> ((\q'. (((y IN u) = p') ==> ((p' ==> ((((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart y) (vec (NUMERAL _0)))) = (f y)) = q')) ==> (((y IN u) ==> (((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart y) (vec (NUMERAL _0)))) = (f y))) = (p' ==> q'))))) q')) = ((\q'. (((y IN u) = p') ==> ((p' ==> ((((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart y) (vec (NUMERAL _0)))) = (f y)) = q')) ==> (((y IN u) ==> (((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart y) (vec (NUMERAL _0)))) = (f y))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cIN f0 f1 f2 c==> c==> f2 c= c= co f3 / cpastecart csndcart b1 cfstcart b1 cpastecart f0 cvec cNUMERAL c_0 * f4 f0 b0 c= c==> cIN f0 f1 c= co f3 / cpastecart csndcart b1 cfstcart b1 cpastecart f0 cvec cNUMERAL c_0 * f4 f0 c==> f2 b0 * / c==> c= cIN f0 f1 f2 c==> c==> f2 c= c= co f3 / cpastecart csndcart b1 cfstcart b1 cpastecart f0 cvec cNUMERAL c_0 * f4 f0 b0 c= c==> cIN f0 f1 c= co f3 / cpastecart csndcart b1 cfstcart b1 cpastecart f0 cvec cNUMERAL c_0 * f4 f0 c==> f2 b0 f5 * / c==> c= cIN f0 f1 f2 c==> c==> f2 c= c= co f3 / cpastecart csndcart b1 cfstcart b1 cpastecart f0 cvec cNUMERAL c_0 * f4 f0 b0 c= c==> cIN f0 f1 c= co f3 / cpastecart csndcart b1 cfstcart b1 cpastecart f0 cvec cNUMERAL c_0 * f4 f0 c==> f2 b0 f5
+ ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) |- ((\t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((continuous_on k) t))) t)
T c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 * / c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f0 b0 f2
+ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))), ((x IN u) /\ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))), (x IN u) |- ((h ((pastecart x) t)) = (p (k ((pastecart t) x))))
T c==> ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= * f1 cpastecart csndcart b0 cfstcart b0 * f2 * f3 b0 c==> c/\ cIN f4 f0 cIN f5 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN f4 f0 c= * f1 cpastecart f4 f5 * f2 * f3 cpastecart f5 f4
+ |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))) = ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))) ==> (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))) = ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))) = (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))) = ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))))
T c= c==> c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0 c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0 c= c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0 c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0 c= c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0 c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0
- ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F), (((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)) |- ((((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)) /\ ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))
T c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c/\ c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF
- (!y. ((y IN u) ==> ((h ((pastecart y) (vec (NUMERAL _0)))) = (p (f y))))), (y IN u) |- ((y IN u) /\ ((h ((pastecart y) (vec (NUMERAL _0)))) = (p (f y))))
T c==> ! c==> cIN b0 f0 c= * f1 cpastecart b0 cvec cNUMERAL c_0 * f2 * f3 b0 c==> cIN f4 f0 c/\ cIN f4 f0 c= * f1 cpastecart f4 cvec cNUMERAL c_0 * f2 * f3 f4
- |- (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((h z) = (p (k z))) = q')) ==> (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))) = (p' ==> q'))))
T c==> c= cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c==> c==> f2 c= c= * f3 f0 * f4 * f5 f0 f6 c= c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 f0 * f4 * f5 f0 c==> f2 f6
- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((continuous_on k) t))), (t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) |- ((!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((continuous_on k) t))) /\ ((continuous_on k) t))
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 c==> cSUBSET f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 ccontinuous_on f1 f2
+ (((continuous_on f) s) /\ ((continuous_on g) s)) |- ((((continuous_on f) s) /\ ((continuous_on g) s)) /\ (((continuous_on (\x. ((pastecart (f x)) (g x)))) s) = T))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 c/\ c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 c= ccontinuous_on / cpastecart * f0 b0 * f2 b0 f1 cT
+ (!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))), ((covering_space (c , p)) s) |- ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))
T c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 c==> ccovering_space c, f0 f1 f2 c==> c/\ ccontinuous_on f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c/\ cSUBSET * * part cIMAGE f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 f2 c/\ ! c==> cIN b0 f4 c= * f3 cpastecart cvec cNUMERAL c_0 b0 * f1 * f5 b0 c/\ ccontinuous_on f5 f4 cSUBSET * * part cIMAGE f5 f4 f0 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 f0 c/\ ! c==> cIN b1 f4 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f5 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c= * f3 b1 * f1 * b0 b1
- |- ((y IN u) ==> (((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)) = ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y))))
T c==> cIN f0 f1 c= c= * f2 cpastecart cvec cNUMERAL c_0 f0 * f3 f0 c= * f2 cpastecart cvec cNUMERAL c_0 f0 * f3 f0
+ (!y. ((y IN u) ==> ((h ((pastecart y) (vec (NUMERAL _0)))) = (p (f y))))), ((!y. ((y IN u) ==> ((h ((pastecart y) (vec (NUMERAL _0)))) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))), (((IMAGE h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s), ((continuous_on h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))), ((covering_space (c , p)) s) |- (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))))))))
T c==> ! c==> cIN b0 f0 c= * f1 cpastecart b0 cvec cNUMERAL c_0 * f2 * f3 b0 c==> c/\ ! c==> cIN b0 f0 c= * f1 cpastecart b0 cvec cNUMERAL c_0 * f2 * f3 b0 c/\ ccontinuous_on f3 f0 cSUBSET * * part cIMAGE f3 f0 f4 c==> cSUBSET * * part cIMAGE f1 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f5 c==> ccontinuous_on f1 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> ccovering_space c, f4 f2 f5 c? / c/\ ccontinuous_on b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c/\ ! c==> cIN b1 f0 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f3 b1 ! c==> cIN b1 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f1 b1 * f2 * b0 b1
- |- (((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> ((?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))))))) = q')) ==> (((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))) = ((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> q')))
T c==> c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c= c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1 f6 c= c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1 c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 f6
+ ((\k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))))))) k) |- (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))))))
T c==> * / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f1 c/\ ! c==> cIN b1 f0 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f2 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= * f3 cpastecart csndcart b1 cfstcart b1 * f4 * b0 b1 f5 c/\ ccontinuous_on f5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET * * part cIMAGE f5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f1 c/\ ! c==> cIN b0 f0 c= * f5 cpastecart cvec cNUMERAL c_0 b0 * f2 b0 ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= * f3 cpastecart csndcart b0 cfstcart b0 * f4 * f5 b0
+ (((IMAGE h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) |- ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((IMAGE h) t) SUBSET s))
T c==> cSUBSET * * part cIMAGE f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c==> cSUBSET f3 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cSUBSET * * part cIMAGE f0 f3 f2
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- (((!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t))))) ==> ((\s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t))))) s)) = ((\s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t))))) s))
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 c= c==> ! ! c==> ccontinuous_on f0 b0 c==> cSUBSET b1 b0 ccontinuous_on f0 b1 * / ! c==> ccontinuous_on f0 b0 c==> cSUBSET b1 b0 ccontinuous_on f0 b1 f1 * / ! c==> ccontinuous_on f0 b0 c==> cSUBSET b1 b0 ccontinuous_on f0 b1 f1
- |- (((!q'. ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((h ((pastecart x) y)) = (p (k ((pastecart y) x)))) = q')) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p (k ((pastecart y) x))))) = (p' ==> q'))))) ==> ((\q'. ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((h ((pastecart x) y)) = (p (k ((pastecart y) x)))) = q')) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p (k ((pastecart y) x))))) = (p' ==> q'))))) q')) = ((\q'. ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((h ((pastecart x) y)) = (p (k ((pastecart y) x)))) = q')) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p (k ((pastecart y) x))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c==> c==> f3 c= c= * f4 cpastecart f0 f2 * f5 * f6 cpastecart f2 f0 b0 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 cpastecart f0 f2 * f5 * f6 cpastecart f2 f0 c==> f3 b0 * / c==> c= c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c==> c==> f3 c= c= * f4 cpastecart f0 f2 * f5 * f6 cpastecart f2 f0 b0 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 cpastecart f0 f2 * f5 * f6 cpastecart f2 f0 c==> f3 b0 f7 * / c==> c= c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c==> c==> f3 c= c= * f4 cpastecart f0 f2 * f5 * f6 cpastecart f2 f0 b0 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 cpastecart f0 f2 * f5 * f6 cpastecart f2 f0 c==> f3 b0 f7
+ (((IMAGE h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s), ((continuous_on h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- (((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s))
T c==> cSUBSET * * part cIMAGE f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c==> ccontinuous_on f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2
+ (!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))) |- (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))
T c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 ! ! ! ! ! c==> ccovering_space c, b0 f0 b1 c==> c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b1 c/\ ! c==> cIN b5 b4 c= * b2 cpastecart cvec cNUMERAL c_0 b5 * f0 * b3 b5 c/\ ccontinuous_on b3 b4 cSUBSET * * part cIMAGE b3 b4 b0 c? / c/\ ccontinuous_on b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b0 c/\ ! c==> cIN b6 b4 c= * b5 cpastecart cvec cNUMERAL c_0 b6 * b3 b6 ! c==> cIN b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c= * b2 b6 * f0 * b5 b6
- (_783180 = _783181) |- ((_783180 = _783181) /\ ((k _783180) = (k _783181)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * f2 f0 * f2 f1
- |- (((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y))) = ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y))))
T c= c==> cIN f0 f1 c= * f2 cpastecart cvec cNUMERAL c_0 f0 * f3 f0 c==> cIN f0 f1 c= * f2 cpastecart cvec cNUMERAL c_0 f0 * f3 f0
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- ((\t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))) t)
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 * / c==> ccontinuous_on f0 f1 c==> cSUBSET b0 f1 ccontinuous_on f0 b0 f2
+ (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))), ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) |- (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))))))))
T c==> c/\ ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c/\ ! c==> cIN b0 f1 c= * f0 cpastecart cvec cNUMERAL c_0 b0 * f3 b0 ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f4 cpastecart csndcart b0 cfstcart b0 * f5 * f0 b0 c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c? / c/\ ccontinuous_on b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f3 b1 ! c==> cIN b1 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 b1 * f5 * b0 b1
- |- ((!x'. ((~ (x = (k x))) \/ (~ (s x')))) = ((~ (x = (k x))) \/ (!x. (~ (s x)))))
T c= ! c\/ c~ c= f0 * f1 f2 c~ * f3 b0 c\/ c~ c= f0 * f1 f2 ! c~ * f3 b0
+ (((IMAGE h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) |- (((IMAGE h) ((IMAGE (\z. ((pastecart (sndcart z)) (fstcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u))) SUBSET s)
T c==> cSUBSET * * part cIMAGE f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 cSUBSET * * part cIMAGE f0 * * part cIMAGE / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2
+ |- ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u))) = (((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> T))
T c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN * / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT
+ (!y. ((y IN u) ==> ((h ((pastecart y) (vec (NUMERAL _0)))) = (p (f y))))) |- (((y IN u) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart (vec (NUMERAL _0))) y)) = (p (f y)))) = ((y IN u) ==> T))
T c==> ! c==> cIN b0 f0 c= * f1 cpastecart b0 cvec cNUMERAL c_0 * f2 * f3 b0 c= c==> cIN f4 f0 c= co f1 / cpastecart csndcart b0 cfstcart b0 cpastecart cvec cNUMERAL c_0 f4 * f2 * f3 f4 c==> cIN f4 f0 cT
+ (((IMAGE h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s), ((continuous_on h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- (((?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))))))) ==> (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))))))))) = ((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) /\ ((?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))))))) ==> (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z))))))))))))
T c==> cSUBSET * * part cIMAGE f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c==> ccontinuous_on f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c==> c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1 c? / c/\ ccontinuous_on b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f4 b1 ! c==> cIN b1 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f0 b1 * f5 * b0 b1 c/\ c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c==> c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1 c? / c/\ ccontinuous_on b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f4 b1 ! c==> cIN b1 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f0 b1 * f5 * b0 b1
- |- ((((y IN u) = (y IN u)) ==> (((y IN u) ==> (((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)) = q')) ==> (((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y))) = ((y IN u) ==> q')))) = (((y IN u) ==> (((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)) = q')) ==> (((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y))) = ((y IN u) ==> q'))))
T c= c==> c= cIN f0 f1 cIN f0 f1 c==> c==> cIN f0 f1 c= c= * f2 cpastecart cvec cNUMERAL c_0 f0 * f3 f0 f4 c= c==> cIN f0 f1 c= * f2 cpastecart cvec cNUMERAL c_0 f0 * f3 f0 c==> cIN f0 f1 f4 c==> c==> cIN f0 f1 c= c= * f2 cpastecart cvec cNUMERAL c_0 f0 * f3 f0 f4 c= c==> cIN f0 f1 c= * f2 cpastecart cvec cNUMERAL c_0 f0 * f3 f0 c==> cIN f0 f1 f4
+ |- (T ==> (((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x)))) = ((h ((pastecart x) t)) = (p (k ((pastecart t) x))))))
T c==> cT c= c= * f0 cpastecart csndcart cpastecart f1 f2 cfstcart cpastecart f1 f2 * f3 * f4 cpastecart f1 f2 c= * f0 cpastecart f2 f1 * f3 * f4 cpastecart f1 f2
- |- (((y IN u) = p') ==> ((p' ==> (((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)) = q')) ==> (((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y))) = (p' ==> q'))))
T c==> c= cIN f0 f1 f2 c==> c==> f2 c= c= * f3 cpastecart f0 cvec cNUMERAL c_0 * f4 f0 f5 c= c==> cIN f0 f1 c= * f3 cpastecart f0 cvec cNUMERAL c_0 * f4 f0 c==> f2 f5
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ (x IN u), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x))))) ==> ((h ((pastecart x) t)) = (p (k ((pastecart t) x))))) = (((h ((pastecart x) t)) = (p (k ((pastecart t) x)))) ==> T))
T c==> cIN f0 f1 c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c==> c==> cIN cpastecart f2 f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f3 cpastecart csndcart cpastecart f2 f0 cfstcart cpastecart f2 f0 * f4 * f5 cpastecart f2 f0 c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0 c==> c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0 cT
- (!t. ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((continuous_on h) t))), (t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- ((!t. ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((continuous_on h) t))) /\ ((continuous_on h) t))
T c==> ! c==> cSUBSET b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f1 b0 c==> cSUBSET f2 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ ! c==> cSUBSET b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f1 b0 ccontinuous_on f1 f2
+ |- ((!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) ==> (!f. (!s. (((continuous_on f) s) ==> (!t. ((t SUBSET s) ==> ((continuous_on f) t)))))))
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 ! ! c==> ccontinuous_on b0 b1 ! c==> cSUBSET b2 b1 ccontinuous_on b0 b2
+ |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
+ |- ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((h ((pastecart x) y)) = (p ((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart x) y)))) = q')) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p ((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart x) y))))) = (p' ==> q'))))
T c==> c= c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c==> c==> f3 c= c= * f4 cpastecart f0 f2 * f5 co f6 / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f2 f7 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 cpastecart f0 f2 * f5 co f6 / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f2 c==> f3 f7
- ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((IMAGE h) t) SUBSET s)) |- (((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((IMAGE h) t) SUBSET s)) /\ ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((IMAGE h) t) SUBSET s)))
T c==> c==> cSUBSET f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cSUBSET * * part cIMAGE f2 f0 f3 c/\ c==> cSUBSET f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cSUBSET * * part cIMAGE f2 f0 f3 c==> cSUBSET f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cSUBSET * * part cIMAGE f2 f0 f3
+ (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- (((!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) ==> ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) g)) = ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) g))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c= c==> ! ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 * * part cIMAGE f0 b1 ccontinuous_on * * part co b0 f0 b1 * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 * * part cIMAGE f0 b1 ccontinuous_on * * part co b0 f0 b1 f1 * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 * * part cIMAGE f0 b1 ccontinuous_on * * part co b0 f0 b1 f1
- (((IMAGE h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) |- ((((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((IMAGE h) t) SUBSET s)) ==> ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((IMAGE h) t) SUBSET s))) = ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((IMAGE h) t) SUBSET s)))
T c==> cSUBSET * * part cIMAGE f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= c==> c==> cSUBSET f3 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cSUBSET * * part cIMAGE f0 f3 f2 c==> cSUBSET f3 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cSUBSET * * part cIMAGE f0 f3 f2 c==> cSUBSET f3 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cSUBSET * * part cIMAGE f0 f3 f2
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
+ |- (((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) ==> ((((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = T)) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) ==> (((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) ==> T))) = ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) ==> (((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) ==> T)))
T c= c==> c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 c= cIN * / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 cIN * / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 cT c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 cIN * / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 cT
+ |- (((!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))) ==> (!p. (!c. (!s. (((covering_space (c , p)) s) ==> (!h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z)))))))))))))))))) = (!p. (!c. (!s. (((covering_space (c , p)) s) ==> (!h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))))
T c= c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 ! ! ! c==> ccovering_space c, b1 b0 b2 ! ! ! c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 ! ! ! c==> ccovering_space c, b1 b0 b2 ! ! ! c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7
- ((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- (((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((h ((pastecart x) y)) = (p (k ((pastecart y) x)))) = ((h ((pastecart x) y)) = (p (k ((pastecart y) x))))))
T c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0 c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0
+ |- ((\p'. (!q'. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) = p') ==> ((p' ==> ((((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) ==> (((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 b0 c==> c==> b0 c= cIN * / cpastecart csndcart b2 cfstcart b2 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 cIN * / cpastecart csndcart b2 cfstcart b2 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 f3
+ |- ((\c. (!s. (((covering_space (c , p)) s) ==> (!h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z)))))))))))))))) c)
T * / ! c==> ccovering_space c, b0 f0 b1 ! ! ! c==> c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b1 c/\ ! c==> cIN b5 b4 c= * b2 cpastecart cvec cNUMERAL c_0 b5 * f0 * b3 b5 c/\ ccontinuous_on b3 b4 cSUBSET * * part cIMAGE b3 b4 b0 c? / c/\ ccontinuous_on b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b0 c/\ ! c==> cIN b6 b4 c= * b5 cpastecart cvec cNUMERAL c_0 b6 * b3 b6 ! c==> cIN b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c= * b2 b6 * f0 * b5 b6 f1
+ |- (T = (((continuous_on sndcart) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((continuous_on fstcart) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))))
T c= cT c/\ ccontinuous_on part csndcart * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on part cfstcart * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- |- ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((h z) = (p (k z))) = ((h z) = (p (k z)))))
T c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c= * f2 f0 * f3 * f4 f0 c= * f2 f0 * f3 * f4 f0
+ |- ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))) s)
T * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cpastecart * f0 b1 * f1 b1 b0 f2
- (((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)) |- ((((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)) /\ (((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)))
T c==> c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c/\ c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF
+ (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) /\ (!g. (!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c/\ ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 ! ! ! c==> c/\ ccontinuous_on b1 b2 ccontinuous_on b0 * * part cIMAGE b1 b2 ccontinuous_on * * part co b0 b1 b2
+ ((continuous_on h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- ((continuous_on h) ((IMAGE (\z. ((pastecart (sndcart z)) (fstcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)))
T c==> ccontinuous_on f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 * * part cIMAGE / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1
- (!t. ((t SUBSET u) ==> ((continuous_on f) t))), (t SUBSET u) |- ((!t. ((t SUBSET u) ==> ((continuous_on f) t))) /\ ((continuous_on f) t))
T c==> ! c==> cSUBSET b0 f0 ccontinuous_on f1 b0 c==> cSUBSET f2 f0 c/\ ! c==> cSUBSET b0 f0 ccontinuous_on f1 b0 ccontinuous_on f1 f2
- (((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) |- ((((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) = T)
T c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c= cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 cT
+ |- ((\g. (!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) g)
T * / ! ! c==> c/\ ccontinuous_on b1 b2 ccontinuous_on b0 * * part cIMAGE b1 b2 ccontinuous_on * * part co b0 b1 b2 f0
+ ((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))) |- (((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))) /\ ((?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z))))))))) = (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))))))))))
T c==> c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1 c/\ c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1 c= c? / c/\ ccontinuous_on b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f4 b1 ! c==> cIN b1 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f0 b1 * f5 * b0 b1 c? / c/\ ccontinuous_on b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f4 b1 ! c==> cIN b1 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f0 b1 * f5 * b0 b1
+ (((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) |- (((IMAGE k) ((IMAGE (\z. ((pastecart (sndcart z)) (fstcart z)))) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) SUBSET c)
T c==> cSUBSET * * part cIMAGE f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 cSUBSET * * part cIMAGE f0 * * part cIMAGE / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2
- |- ((\p'. (!q'. (((y IN u) = p') ==> ((p' ==> (((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)) = q')) ==> (((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c= * f2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 b1 c= c==> cIN f0 f1 c= * f2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 c==> b0 b1 f4
+ (((continuous_on h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart y) (vec (NUMERAL _0)))) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))), ((covering_space (c , p)) s) |- (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))))))))
T c==> c/\ ccontinuous_on f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c/\ ! c==> cIN b0 f1 c= * f0 cpastecart b0 cvec cNUMERAL c_0 * f3 * f4 b0 c/\ ccontinuous_on f4 f1 cSUBSET * * part cIMAGE f4 f1 f5 c==> ccovering_space c, f5 f3 f2 c? / c/\ ccontinuous_on b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f5 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f4 b1 ! c==> cIN b1 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f0 b1 * f3 * b0 b1
+ |- (((linear fstcart) ==> (((continuous_on fstcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = T)) = (((continuous_on fstcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = T))
T c= c==> clinear part cfstcart c= ccontinuous_on part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 cT c= ccontinuous_on part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 cT
- |- ((\q'. (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((h z) = (p (k z))) = q')) ==> (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))) = (p' ==> q'))))) q')
T * / c==> c= cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c==> c==> f2 c= c= * f3 f0 * f4 * f5 f0 b0 c= c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 f0 * f4 * f5 f0 c==> f2 b0 f6
+ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))), (((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c), ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) |- (((continuous_on (k o (\z. ((pastecart (sndcart z)) (fstcart z))))) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE (k o (\z. ((pastecart (sndcart z)) (fstcart z))))) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ (!x. (!y. (((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p (k ((pastecart y) x)))))))))
T c==> ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= * f1 cpastecart csndcart b0 cfstcart b0 * f2 * f3 b0 c==> cSUBSET * * part cIMAGE f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f4 c==> ccontinuous_on f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ ccontinuous_on * * part co f3 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE * * part co f3 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 ! ! c==> c/\ cIN b0 f0 cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f1 cpastecart b0 b1 * f2 * f3 cpastecart b1 b0
- (t SUBSET u) |- (((t SUBSET u) ==> (((IMAGE f) t) SUBSET c)) ==> (((IMAGE f) t) SUBSET c))
T c==> cSUBSET f0 f1 c==> c==> cSUBSET f0 f1 cSUBSET * * part cIMAGE f2 f0 f3 cSUBSET * * part cIMAGE f2 f0 f3
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- (!s. (((continuous_on f) s) ==> (!t. ((t SUBSET s) ==> ((continuous_on f) t)))))
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 ! c==> ccontinuous_on f0 b0 ! c==> cSUBSET b1 b0 ccontinuous_on f0 b1
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
+ |- ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> ((((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = q')) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u))) = (p' ==> q'))))
T c==> c= c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c==> c==> f3 c= cIN * / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f4 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN * / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c==> f3 f4
+ |- (((!x. (((f o g) x) = (f (g x)))) ==> ((\x. (((f o g) x) = (f (g x)))) x)) = ((\x. (((f o g) x) = (f (g x)))) x))
T c= c==> ! c= co f0 f1 b0 * f0 * f1 b0 * / c= co f0 f1 b0 * f0 * f1 b0 f2 * / c= co f0 f1 b0 * f0 * f1 b0 f2
+ |- ((\p'. (!q'. ((((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x))))) = p') ==> ((p' ==> (((h ((pastecart x) t)) = (p (k ((pastecart t) x)))) = q')) ==> ((((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x))))) ==> ((h ((pastecart x) t)) = (p (k ((pastecart t) x))))) = (p' ==> q')))))) p')
T * / ! c==> c= c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= * f3 cpastecart csndcart cpastecart f0 f1 cfstcart cpastecart f0 f1 * f4 * f5 cpastecart f0 f1 b0 c==> c==> b0 c= c= * f3 cpastecart f1 f0 * f4 * f5 cpastecart f0 f1 b1 c= c==> c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= * f3 cpastecart csndcart cpastecart f0 f1 cfstcart cpastecart f0 f1 * f4 * f5 cpastecart f0 f1 c= * f3 cpastecart f1 f0 * f4 * f5 cpastecart f0 f1 c==> b0 b1 f6
- |- ((_783180 = _783181) ==> ((k _783180) = (k _783181)))
T c==> c= f0 f1 c= * f2 f0 * f2 f1
+ ((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- ((y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = T)
T c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT
+ (!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))), ((covering_space (c , p)) s) |- (((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z)))))))))) = T)
T c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 c==> ccovering_space c, f0 f1 f2 c= c==> c/\ ccontinuous_on f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c/\ cSUBSET * * part cIMAGE f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 f2 c/\ ! c==> cIN b0 f4 c= * f3 cpastecart cvec cNUMERAL c_0 b0 * f1 * f5 b0 c/\ ccontinuous_on f5 f4 cSUBSET * * part cIMAGE f5 f4 f0 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 f0 c/\ ! c==> cIN b1 f4 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f5 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c= * f3 b1 * f1 * b0 b1 cT
+ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))) |- ((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x)))))
T c==> ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= * f1 cpastecart csndcart b0 cfstcart b0 * f2 * f3 b0 c==> cIN cpastecart f4 f5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= * f1 cpastecart csndcart cpastecart f4 f5 cfstcart cpastecart f4 f5 * f2 * f3 cpastecart f4 f5
- |- ((!x'. ((!x. ((~ (x' = (k x))) \/ (~ (s x)))) \/ (c x))) = ((!x. (!x. ((~ (x = (k x))) \/ (~ (s x))))) \/ (c x)))
T c= ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 f3 c\/ ! ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 f3
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
- |- (((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((IMAGE h) t) SUBSET s)) ==> ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((IMAGE h) t) SUBSET s)))
T c==> c==> cSUBSET f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cSUBSET * * part cIMAGE f2 f0 f3 c==> cSUBSET f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cSUBSET * * part cIMAGE f2 f0 f3
- ((continuous_on h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- (((continuous_on h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = T)
T c==> ccontinuous_on f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= ccontinuous_on f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT
+ |- ((((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x))))) = p') ==> ((p' ==> (((h ((pastecart x) t)) = (p (k ((pastecart t) x)))) = q')) ==> ((((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x))))) ==> ((h ((pastecart x) t)) = (p (k ((pastecart t) x))))) = (p' ==> q'))))
T c==> c= c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= * f3 cpastecart csndcart cpastecart f0 f1 cfstcart cpastecart f0 f1 * f4 * f5 cpastecart f0 f1 f6 c==> c==> f6 c= c= * f3 cpastecart f1 f0 * f4 * f5 cpastecart f0 f1 f7 c= c==> c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= * f3 cpastecart csndcart cpastecart f0 f1 cfstcart cpastecart f0 f1 * f4 * f5 cpastecart f0 f1 c= * f3 cpastecart f1 f0 * f4 * f5 cpastecart f0 f1 c==> f6 f7
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- ((!s. (((continuous_on f) s) ==> (!t. ((t SUBSET s) ==> ((continuous_on f) t))))) = T)
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 c= ! c==> ccontinuous_on f0 b0 ! c==> cSUBSET b1 b0 ccontinuous_on f0 b1 cT
+ |- ((\p'. (!q'. ((((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z)))))))))) = p') ==> ((p' ==> ((?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z))))))))) = q')) ==> ((((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((h o (\z. ((pastecart (sndcart z)) (fstcart z)))) z) = (p (k z)))))))))) ==> (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b2 cfstcart b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b2 cfstcart b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c/\ ! c==> cIN b2 f1 c= co f0 / cpastecart csndcart b3 cfstcart b3 cpastecart cvec cNUMERAL c_0 b2 * f3 * f4 b2 c/\ ccontinuous_on f4 f1 cSUBSET * * part cIMAGE f4 f1 f5 c? / c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f5 c/\ ! c==> cIN b3 f1 c= * b2 cpastecart cvec cNUMERAL c_0 b3 * f4 b3 ! c==> cIN b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= co f0 / cpastecart csndcart b4 cfstcart b4 b3 * f3 * b2 b3 b0 c==> c==> b0 c= c? / c/\ ccontinuous_on b2 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f5 c/\ ! c==> cIN b3 f1 c= * b2 cpastecart b3 cvec cNUMERAL c_0 * f4 b3 ! c==> cIN b3 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f0 b3 * f3 * b2 b3 b1 c= c==> c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b2 cfstcart b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b2 cfstcart b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c/\ ! c==> cIN b2 f1 c= co f0 / cpastecart csndcart b3 cfstcart b3 cpastecart cvec cNUMERAL c_0 b2 * f3 * f4 b2 c/\ ccontinuous_on f4 f1 cSUBSET * * part cIMAGE f4 f1 f5 c? / c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f5 c/\ ! c==> cIN b3 f1 c= * b2 cpastecart cvec cNUMERAL c_0 b3 * f4 b3 ! c==> cIN b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= co f0 / cpastecart csndcart b4 cfstcart b4 b3 * f3 * b2 b3 c? / c/\ ccontinuous_on b2 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f5 c/\ ! c==> cIN b3 f1 c= * b2 cpastecart b3 cvec cNUMERAL c_0 * f4 b3 ! c==> cIN b3 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f0 b3 * f3 * b2 b3 c==> b0 b1 f6
+ |- (((!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))) ==> ((\s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))) s)) = ((\s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))) s))
T c= c==> ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 * * part cIMAGE f0 b0 ccontinuous_on * * part co f1 f0 b0 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 * * part cIMAGE f0 b0 ccontinuous_on * * part co f1 f0 b0 f2 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 * * part cIMAGE f0 b0 ccontinuous_on * * part co f1 f0 b0 f2
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t))))
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 ! c==> ccontinuous_on f0 f1 c==> cSUBSET b0 f1 ccontinuous_on f0 b0
- |- (((!p'. (!q'. ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((h ((pastecart x) y)) = (p (k ((pastecart y) x)))) = q')) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p (k ((pastecart y) x))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((h ((pastecart x) y)) = (p (k ((pastecart y) x)))) = q')) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p (k ((pastecart y) x))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((h ((pastecart x) y)) = (p (k ((pastecart y) x)))) = q')) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p (k ((pastecart y) x))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c==> c==> b0 c= c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0 b1 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0 c==> b0 b1 * / ! c==> c= c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c==> c==> b0 c= c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0 b1 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0 c==> b0 b1 f6 * / ! c==> c= c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c==> c==> b0 c= c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0 b1 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0 c==> b0 b1 f6
- (_783178 = _783179) |- ((_783178 = _783179) /\ ((c _783179) \/ (~ (c _783178))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ * f2 f1 c~ * f2 f0
+ (!x. ((t x) ==> (s x))), (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))), (?x. ((x = (k x)) /\ (t x))) |- ((~ (c x)) ==> F)
T c==> ! c==> * f0 b0 * f1 b0 c==> ! c==> c? / c/\ c= b0 * f2 b1 * f1 b1 * f3 b0 c==> c? / c/\ c= f4 * f2 b0 * f0 b0 c==> c~ * f3 f4 cF
+ |- (((!p'. (!q'. (((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = p') ==> ((p' ==> (((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x)))) = q')) ==> (((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = p') ==> ((p' ==> (((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x)))) = q')) ==> (((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = p') ==> ((p' ==> (((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x)))) = q')) ==> (((((pastecart t) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart ((pastecart t) x))) (fstcart ((pastecart t) x)))) = (p (k ((pastecart t) x))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 b0 c==> c==> b0 c= c= * f3 cpastecart csndcart cpastecart f0 f1 cfstcart cpastecart f0 f1 * f4 * f5 cpastecart f0 f1 b1 c= c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= * f3 cpastecart csndcart cpastecart f0 f1 cfstcart cpastecart f0 f1 * f4 * f5 cpastecart f0 f1 c==> b0 b1 * / ! c==> c= cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 b0 c==> c==> b0 c= c= * f3 cpastecart csndcart cpastecart f0 f1 cfstcart cpastecart f0 f1 * f4 * f5 cpastecart f0 f1 b1 c= c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= * f3 cpastecart csndcart cpastecart f0 f1 cfstcart cpastecart f0 f1 * f4 * f5 cpastecart f0 f1 c==> b0 b1 f6 * / ! c==> c= cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 b0 c==> c==> b0 c= c= * f3 cpastecart csndcart cpastecart f0 f1 cfstcart cpastecart f0 f1 * f4 * f5 cpastecart f0 f1 b1 c= c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= * f3 cpastecart csndcart cpastecart f0 f1 cfstcart cpastecart f0 f1 * f4 * f5 cpastecart f0 f1 c==> b0 b1 f6
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- ((\f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) f)
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 * / ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 f0
- |- (((y IN u) ==> (((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)) = q')) ==> (((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y))) = ((y IN u) ==> q')))
T c==> c==> cIN f0 f1 c= c= * f2 cpastecart cvec cNUMERAL c_0 f0 * f3 f0 f4 c= c==> cIN f0 f1 c= * f2 cpastecart cvec cNUMERAL c_0 f0 * f3 f0 c==> cIN f0 f1 f4
+ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))) |- (((x IN u) /\ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) t)) = (p (k ((pastecart t) x)))))
T c==> ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= * f1 cpastecart csndcart b0 cfstcart b0 * f2 * f3 b0 c==> c/\ cIN f4 f0 cIN f5 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f1 cpastecart f4 f5 * f2 * f3 cpastecart f5 f4
- (~ ((k x') = (k x'))) |- ((~ ((k x') = (k x'))) /\ ((k x') = (k x')))
T c==> c~ c= * f0 f1 * f0 f1 c/\ c~ c= * f0 f1 * f0 f1 c= * f0 f1 * f0 f1
- (((IMAGE h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) |- ((((IMAGE h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) = T)
T c==> cSUBSET * * part cIMAGE f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= cSUBSET * * part cIMAGE f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 cT
+ (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- ((!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))) = T)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c= ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 * * part cIMAGE f0 b0 ccontinuous_on * * part co f1 f0 b0 cT
+ |- (((linear sndcart) ==> (((continuous_on sndcart) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = T)) = (((continuous_on sndcart) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = T))
T c= c==> clinear part csndcart c= ccontinuous_on part csndcart * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT c= ccontinuous_on part csndcart * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT
- |- ((\c. (!t. (!k. (!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))))) c)
T * / ! ! ! c==> c~ c==> ! c==> c? / c/\ c= b4 * b2 b5 * b3 b5 * b0 b4 c==> ! c==> * b1 b4 * b3 b4 ! c==> c? / c/\ c= b4 * b2 b5 * b1 b5 * b0 b4 cF f0
- (((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) ==> ((continuous_on (g o f)) s))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 ccontinuous_on * * part co f2 f0 f1
- |- ((((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) ==> (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((h z) = (p (k z))) = q')) ==> (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))) = ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> q')))) = (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((h z) = (p (k z))) = q')) ==> (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))) = ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> q'))))
T c= c==> c= cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c= * f2 f0 * f3 * f4 f0 f5 c= c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f2 f0 * f3 * f4 f0 c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f5 c==> c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c= * f2 f0 * f3 * f4 f0 f5 c= c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f2 f0 * f3 * f4 f0 c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f5
+ |- ((\p'. (!q'. ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((h ((pastecart x) y)) = (p ((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart x) y)))) = q')) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p ((k o (\z. ((pastecart (sndcart z)) (fstcart z)))) ((pastecart x) y))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c==> c==> b0 c= c= * f3 cpastecart f0 f2 * f4 co f5 / cpastecart csndcart b2 cfstcart b2 cpastecart f0 f2 b1 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 cpastecart f0 f2 * f4 co f5 / cpastecart csndcart b2 cfstcart b2 cpastecart f0 f2 c==> b0 b1 f6
+ |- ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) ==> (((\z. ((pastecart (sndcart z)) (fstcart z))) ((pastecart x) y)) IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN u)) ==> T))
T c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 cIN * / cpastecart csndcart b0 cfstcart b0 cpastecart f0 f1 * * part cPCROSS f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2 cT
- (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))), (z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) |- ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))
T c==> ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= * f1 cpastecart csndcart b0 cfstcart b0 * f2 * f3 b0 c==> cIN f4 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= * f1 cpastecart csndcart f4 cfstcart f4 * f2 * f3 f4
- |- (((((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)) ==> (((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))) = (((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)))
T c= c==> c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF
- ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) |- (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = T)
T c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cT
- ((x = (k x')) /\ (t x')) |- ((~ (t x')) ==> (t x'))
T c==> c/\ c= f0 * f1 f2 * f3 f2 c==> c~ * f3 f2 * f3 f2
- |- ((\q'. (((y IN u) = p') ==> ((p' ==> (((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)) = q')) ==> (((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y))) = (p' ==> q'))))) q')
T * / c==> c= cIN f0 f1 f2 c==> c==> f2 c= c= * f3 cpastecart f0 cvec cNUMERAL c_0 * f4 f0 b0 c= c==> cIN f0 f1 c= * f3 cpastecart f0 cvec cNUMERAL c_0 * f4 f0 c==> f2 b0 f5
- |- ((!s. ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) = T)
T c= ! c==> ! c==> c? / c/\ c= b1 * f0 b2 * b0 b2 * f1 b1 c==> ! c==> * f2 b1 * b0 b1 ! c==> c? / c/\ c= b1 * f0 b2 * f2 b2 * f1 b1 cT
- |- ((\k. (!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))) k)
T * / ! c==> c~ c==> ! c==> c? / c/\ c= b2 * b0 b3 * b1 b3 * f0 b2 c==> ! c==> * f1 b2 * b1 b2 ! c==> c? / c/\ c= b2 * b0 b3 * f1 b3 * f0 b2 cF f2
- ((continuous_on f) u) |- (((!t. ((t SUBSET u) ==> ((continuous_on f) t))) ==> (!t. ((t SUBSET u) ==> ((continuous_on f) t)))) = (!t. ((t SUBSET u) ==> ((continuous_on f) t))))
T c==> ccontinuous_on f0 f1 c= c==> ! c==> cSUBSET b0 f1 ccontinuous_on f0 b0 ! c==> cSUBSET b0 f1 ccontinuous_on f0 b0 ! c==> cSUBSET b0 f1 ccontinuous_on f0 b0
- ((continuous_on h) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- (((!t. ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((continuous_on h) t))) ==> (!t. ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((continuous_on h) t)))) = (!t. ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((continuous_on h) t))))
T c==> ccontinuous_on f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c==> ! c==> cSUBSET b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 ! c==> cSUBSET b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 ! c==> cSUBSET b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0
- (t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- ((!t. ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((continuous_on h) t))) ==> ((continuous_on h) t))
T c==> cSUBSET f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> ! c==> cSUBSET b0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f2 b0 ccontinuous_on f2 f0
- (y IN u) |- ((y IN u) /\ (((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)) = ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y))))
T c==> cIN f0 f1 c/\ cIN f0 f1 c= c= * f2 cpastecart cvec cNUMERAL c_0 f0 * f3 f0 c= * f2 cpastecart cvec cNUMERAL c_0 f0 * f3 f0
- |- ((!t. ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((continuous_on h) t))) ==> (!t. ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((continuous_on h) t))))
T c==> ! c==> cSUBSET b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f1 b0 ! c==> cSUBSET b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f1 b0
- ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((IMAGE h) t) SUBSET s)), (t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- (((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((IMAGE h) t) SUBSET s)) /\ (((IMAGE h) t) SUBSET s))
T c==> c==> cSUBSET f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cSUBSET * * part cIMAGE f2 f0 f3 c==> cSUBSET f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ c==> cSUBSET f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cSUBSET * * part cIMAGE f2 f0 f3 cSUBSET * * part cIMAGE f2 f0 f3
- |- ((~ ((k x') = (k x'))) ==> ((k x') = (k x')))
T c==> c~ c= * f0 f1 * f0 f1 c= * f0 f1 * f0 f1
- ((t SUBSET u) ==> (((IMAGE f) t) SUBSET c)), (t SUBSET u) |- (((t SUBSET u) ==> (((IMAGE f) t) SUBSET c)) /\ (((IMAGE f) t) SUBSET c))
T c==> c==> cSUBSET f0 f1 cSUBSET * * part cIMAGE f2 f0 f3 c==> cSUBSET f0 f1 c/\ c==> cSUBSET f0 f1 cSUBSET * * part cIMAGE f2 f0 f3 cSUBSET * * part cIMAGE f2 f0 f3
- |- (((t SUBSET u) ==> (((IMAGE f) t) SUBSET c)) ==> ((t SUBSET u) ==> (((IMAGE f) t) SUBSET c)))
T c==> c==> cSUBSET f0 f1 cSUBSET * * part cIMAGE f2 f0 f3 c==> cSUBSET f0 f1 cSUBSET * * part cIMAGE f2 f0 f3
- |- ((!x. (P \/ (Q x))) = (P \/ (!x. (Q x))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- (!x. ((t x) ==> (s x))), (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))), (~ (c (k x'))), ((x = (k x')) /\ (t x')) |- ((~ (c (k x'))) /\ (c (k x')))
T c==> ! c==> * f0 b0 * f1 b0 c==> ! c==> c? / c/\ c= b0 * f2 b1 * f1 b1 * f3 b0 c==> c~ * f3 * f2 f4 c==> c/\ c= f5 * f2 f4 * f0 f4 c/\ c~ * f3 * f2 f4 * f3 * f2 f4
- |- ((\t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) t)
T * / c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 f1
- (!t. ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((continuous_on h) t))), (t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((continuous_on h) t))
T c==> ! c==> cSUBSET b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f1 b0 c==> cSUBSET f2 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET f2 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f1 f2
- |- ((((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)) = ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))
T c= c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF
- |- (((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x))))) = T)
T c= c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cT
- |- ((\q'. (((y IN u) = p') ==> ((p' ==> (((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)) = q')) ==> (((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y))) = (p' ==> q'))))) q')
T * / c==> c= cIN f0 f1 f2 c==> c==> f2 c= c= * f3 cpastecart cvec cNUMERAL c_0 f0 * f4 f0 b0 c= c==> cIN f0 f1 c= * f3 cpastecart cvec cNUMERAL c_0 f0 * f4 f0 c==> f2 b0 f5
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- ((x = (k x')) /\ (t x')) |- ((t x') = (t x'))
T c==> c/\ c= f0 * f1 f2 * f3 f2 c= * f3 f2 * f3 f2
- |- ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((h ((pastecart x) y)) = (p (k ((pastecart y) x)))) = q')) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p (k ((pastecart y) x))))) = (((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> q')))
T c==> c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0 f6 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0 c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f6
- (!x. ((t x) ==> (s x))), ((x = (k x')) /\ (t x')) |- ((~ (s x')) ==> (s x'))
T c==> ! c==> * f0 b0 * f1 b0 c==> c/\ c= f2 * f3 f4 * f0 f4 c==> c~ * f1 f4 * f1 f4
- |- (((!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) ==> ((\t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) t)) = ((\t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) t))
T c= c==> ! c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 * / c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 f1 * / c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 f1
- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((continuous_on k) t))) |- ((!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((continuous_on k) t))) /\ (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((continuous_on k) t))))
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 c/\ ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0
- (!t. ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((continuous_on h) t))), (t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- ((continuous_on h) t)
T c==> ! c==> cSUBSET b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f1 b0 c==> cSUBSET f2 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f1 f2
- |- ((~ (_783180 = _783181)) \/ ((k _783180) = (k _783181)))
T c\/ c~ c= f0 f1 c= * f2 f0 * f2 f1
- (!t. ((t SUBSET u) ==> ((continuous_on f) t))) |- (((t SUBSET u) ==> ((continuous_on f) t)) = T)
T c==> ! c==> cSUBSET b0 f0 ccontinuous_on f1 b0 c= c==> cSUBSET f2 f0 ccontinuous_on f1 f2 cT
- (z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((h z) = (p (k z))) = ((h z) = (p (k z)))))
T c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c= * f2 f0 * f3 * f4 f0 c= * f2 f0 * f3 * f4 f0
- ((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))) |- ((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> ((?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))))))) = T))
T c==> c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1 c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c= c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1 cT
- |- ((y IN u) ==> (((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)) = ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y))))
T c==> cIN f0 f1 c= c= * f2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 c= * f2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0
- (!t. ((t SUBSET u) ==> ((continuous_on f) t))), (t SUBSET u) |- ((continuous_on f) t)
T c==> ! c==> cSUBSET b0 f0 ccontinuous_on f1 b0 c==> cSUBSET f2 f0 ccontinuous_on f1 f2
- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((continuous_on k) t))) |- (((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((continuous_on k) t)) = T)
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 c= c==> cSUBSET f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 f2 cT
- |- ((\q'. ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((h ((pastecart x) y)) = (p (k ((pastecart y) x)))) = q')) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p (k ((pastecart y) x))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c==> c==> f3 c= c= * f4 cpastecart f0 f2 * f5 * f6 cpastecart f2 f0 b0 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 cpastecart f0 f2 * f5 * f6 cpastecart f2 f0 c==> f3 b0 f7
- (((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) |- ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) = T)
T c==> cSUBSET * * part cIMAGE f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c= cSUBSET * * part cIMAGE f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 cT
- ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((IMAGE k) t) SUBSET c)), (t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) |- (((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((IMAGE k) t) SUBSET c)) /\ (((IMAGE k) t) SUBSET c))
T c==> c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE f2 f0 f3 c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE f2 f0 f3 cSUBSET * * part cIMAGE f2 f0 f3
- ((x = (k x')) /\ (t x')) |- (((~ (_783161 = (k _783162))) \/ ((~ (s _783162)) \/ (c _783161))) = ((~ (_783161 = (k _783162))) \/ ((~ (s _783162)) \/ (c _783161))))
T c==> c/\ c= f0 * f1 f2 * f3 f2 c= c\/ c~ c= f4 * f1 f5 c\/ c~ * f6 f5 * f7 f4 c\/ c~ c= f4 * f1 f5 c\/ c~ * f6 f5 * f7 f4
- |- (((!c. (!t. (!k. (!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))))) ==> ((\c. (!t. (!k. (!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))))) c)) = ((\c. (!t. (!k. (!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))))) c))
T c= c==> ! ! ! ! c==> c~ c==> ! c==> c? / c/\ c= b4 * b2 b5 * b3 b5 * b0 b4 c==> ! c==> * b1 b4 * b3 b4 ! c==> c? / c/\ c= b4 * b2 b5 * b1 b5 * b0 b4 cF * / ! ! ! c==> c~ c==> ! c==> c? / c/\ c= b4 * b2 b5 * b3 b5 * b0 b4 c==> ! c==> * b1 b4 * b3 b4 ! c==> c? / c/\ c= b4 * b2 b5 * b1 b5 * b0 b4 cF f0 * / ! ! ! c==> c~ c==> ! c==> c? / c/\ c= b4 * b2 b5 * b3 b5 * b0 b4 c==> ! c==> * b1 b4 * b3 b4 ! c==> c? / c/\ c= b4 * b2 b5 * b1 b5 * b0 b4 cF f0
- (y IN u) |- ((y IN u) /\ (((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)) = ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y))))
T c==> cIN f0 f1 c/\ cIN f0 f1 c= c= * f2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 c= * f2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0
- (!x. ((t x) ==> (s x))), (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))), ((x = (k x')) /\ (t x')) |- ((~ (c (k x'))) ==> (c (k x')))
T c==> ! c==> * f0 b0 * f1 b0 c==> ! c==> c? / c/\ c= b0 * f2 b1 * f1 b1 * f3 b0 c==> c/\ c= f4 * f2 f5 * f0 f5 c==> c~ * f3 * f2 f5 * f3 * f2 f5
- |- (((!k. (!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))) ==> ((\k. (!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))) k)) = ((\k. (!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))) k))
T c= c==> ! ! c==> c~ c==> ! c==> c? / c/\ c= b2 * b0 b3 * b1 b3 * f0 b2 c==> ! c==> * f1 b2 * b1 b2 ! c==> c? / c/\ c= b2 * b0 b3 * f1 b3 * f0 b2 cF * / ! c==> c~ c==> ! c==> c? / c/\ c= b2 * b0 b3 * b1 b3 * f0 b2 c==> ! c==> * f1 b2 * b1 b2 ! c==> c? / c/\ c= b2 * b0 b3 * f1 b3 * f0 b2 cF f2 * / ! c==> c~ c==> ! c==> c? / c/\ c= b2 * b0 b3 * b1 b3 * f0 b2 c==> ! c==> * f1 b2 * b1 b2 ! c==> c? / c/\ c= b2 * b0 b3 * f1 b3 * f0 b2 cF f2
- |- ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = (z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u))) ==> (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))) = q')) ==> (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))) = ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> q')))) = (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))) = q')) ==> (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))) = ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> q'))))
T c= c==> c= cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c==> c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0 f5 c= c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0 c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f5 c==> c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0 f5 c= c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0 c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f5
- |- (((y IN u) = p') ==> ((p' ==> (((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)) = q')) ==> (((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y))) = (p' ==> q'))))
T c==> c= cIN f0 f1 f2 c==> c==> f2 c= c= * f3 cpastecart cvec cNUMERAL c_0 f0 * f4 f0 f5 c= c==> cIN f0 f1 c= * f3 cpastecart cvec cNUMERAL c_0 f0 * f4 f0 c==> f2 f5
- |- (((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = ((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((h ((pastecart x) y)) = (p (k ((pastecart y) x)))) = q')) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p (k ((pastecart y) x))))) = (((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> q')))) = ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((h ((pastecart x) y)) = (p (k ((pastecart y) x)))) = q')) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p (k ((pastecart y) x))))) = (((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> q'))))
T c= c==> c= c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0 f6 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0 c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f6 c==> c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0 f6 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0 c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f6
- |- ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))) = ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))
T c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0 c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0
- |- ((!x. (P x)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- (((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y))) = ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y))))
T c= c==> cIN f0 f1 c= * f2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 c==> cIN f0 f1 c= * f2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0
- |- ((?x'. ((x = (k x')) /\ (t x))) = ((?x. (x = (k x))) /\ (t x)))
T c= c? / c/\ c= f0 * f1 b0 * f2 f3 c/\ c? / c= f0 * f1 b0 * f2 f3
- |- ((((y IN u) ==> (((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)) = ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) ==> (((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y))) = ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y))))) = (((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y))) = ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))))
T c= c==> c==> cIN f0 f1 c= c= * f2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 c= * f2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 c= c==> cIN f0 f1 c= * f2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 c==> cIN f0 f1 c= * f2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 c= c==> cIN f0 f1 c= * f2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 c==> cIN f0 f1 c= * f2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0
- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((continuous_on k) t))), (t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) |- ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((continuous_on k) t))
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 c==> cSUBSET f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 f2
- ((t SUBSET u) ==> (((IMAGE f) t) SUBSET c)), (t SUBSET u) |- ((t SUBSET u) /\ (((IMAGE f) t) SUBSET c))
T c==> c==> cSUBSET f0 f1 cSUBSET * * part cIMAGE f2 f0 f3 c==> cSUBSET f0 f1 c/\ cSUBSET f0 f1 cSUBSET * * part cIMAGE f2 f0 f3
- (z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) |- ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))) = ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))
T c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0 c= * f2 cpastecart csndcart f0 cfstcart f0 * f3 * f4 f0
- |- (((y IN u) ==> (((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)) = q')) ==> (((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y))) = ((y IN u) ==> q')))
T c==> c==> cIN f0 f1 c= c= * f2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 f4 c= c==> cIN f0 f1 c= * f2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 c==> cIN f0 f1 f4
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))), (((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) |- ((continuous_on (g o f)) s)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 ccontinuous_on * * part co f2 f0 f1
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- (((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)) = T)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c= c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 ccontinuous_on * * part co f2 f0 f1 cT
- (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))), (z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) |- ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))
T c==> ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= * f1 cpastecart csndcart b0 cfstcart b0 * f2 * f3 b0 c==> cIN f4 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cIN f4 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= * f1 cpastecart csndcart f4 cfstcart f4 * f2 * f3 f4
- |- ((!k. (!s. ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x))))))) = T)
T c= ! ! c==> ! c==> c? / c/\ c= b2 * b0 b3 * b1 b3 * f0 b2 c==> ! c==> * f1 b2 * b1 b2 ! c==> c? / c/\ c= b2 * b0 b3 * f1 b3 * f0 b2 cT
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- |- ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x))))
T c= c? / c/\ f0 * f1 b0 c/\ f0 c? / * f1 b0
- (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))))))) |- ((?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))))))) /\ (?k. (((continuous_on k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE k) (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)))) /\ (!z. ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z))))))))))
T c==> c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f1 c/\ ! c==> cIN b1 f0 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f2 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= * f3 cpastecart csndcart b1 cfstcart b1 * f4 * b0 b1 c/\ c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f1 c/\ ! c==> cIN b1 f0 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f2 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= * f3 cpastecart csndcart b1 cfstcart b1 * f4 * b0 b1 c? / c/\ ccontinuous_on b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ ! c==> cIN b1 f0 c= * b0 cpastecart b1 cvec cNUMERAL c_0 * f2 b1 ! c==> cIN b1 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f3 b1 * f4 * b0 b1
- |- (((\z. (f z)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((continuous_on k) t))) |- ((\t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((continuous_on k) t))) t)
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 * / c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 f2
- |- (((!q'. (((y IN u) = p') ==> ((p' ==> (((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)) = q')) ==> (((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y))) = (p' ==> q'))))) ==> ((\q'. (((y IN u) = p') ==> ((p' ==> (((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)) = q')) ==> (((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y))) = (p' ==> q'))))) q')) = ((\q'. (((y IN u) = p') ==> ((p' ==> (((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)) = q')) ==> (((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cIN f0 f1 f2 c==> c==> f2 c= c= * f3 cpastecart cvec cNUMERAL c_0 f0 * f4 f0 b0 c= c==> cIN f0 f1 c= * f3 cpastecart cvec cNUMERAL c_0 f0 * f4 f0 c==> f2 b0 * / c==> c= cIN f0 f1 f2 c==> c==> f2 c= c= * f3 cpastecart cvec cNUMERAL c_0 f0 * f4 f0 b0 c= c==> cIN f0 f1 c= * f3 cpastecart cvec cNUMERAL c_0 f0 * f4 f0 c==> f2 b0 f5 * / c==> c= cIN f0 f1 f2 c==> c==> f2 c= c= * f3 cpastecart cvec cNUMERAL c_0 f0 * f4 f0 b0 c= c==> cIN f0 f1 c= * f3 cpastecart cvec cNUMERAL c_0 f0 * f4 f0 c==> f2 b0 f5
- (_783178 = _783179) |- ((((c _783178) = (c _783179)) ==> ((c _783179) \/ (~ (c _783178)))) = ((c _783179) \/ (~ (c _783178))))
T c==> c= f0 f1 c= c==> c= * f2 f0 * f2 f1 c\/ * f2 f1 c~ * f2 f0 c\/ * f2 f1 c~ * f2 f0
- |- (((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((h ((pastecart x) y)) = (p (k ((pastecart y) x)))) = ((h ((pastecart x) y)) = (p (k ((pastecart y) x))))))
T c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0 c= * f3 cpastecart f0 f2 * f4 * f5 cpastecart f2 f0
- ((t SUBSET u) ==> (((IMAGE f) t) SUBSET c)) |- (((t SUBSET u) ==> (((IMAGE f) t) SUBSET c)) /\ ((t SUBSET u) ==> (((IMAGE f) t) SUBSET c)))
T c==> c==> cSUBSET f0 f1 cSUBSET * * part cIMAGE f2 f0 f3 c/\ c==> cSUBSET f0 f1 cSUBSET * * part cIMAGE f2 f0 f3 c==> cSUBSET f0 f1 cSUBSET * * part cIMAGE f2 f0 f3
- |- ((~ (_783178 = _783179)) \/ ((c _783179) \/ (~ (c _783178))))
T c\/ c~ c= f0 f1 c\/ * f2 f1 c~ * f2 f0
- (!x. ((t x) ==> (s x))), (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))), (~ F), (~ (c x)), ((x = (k x')) /\ (t x')) |- ((~ F) /\ F)
T c==> ! c==> * f0 b0 * f1 b0 c==> ! c==> c? / c/\ c= b0 * f2 b1 * f1 b1 * f3 b0 c==> c~ cF c==> c~ * f3 f4 c==> c/\ c= f4 * f2 f5 * f0 f5 c/\ c~ cF cF
- (t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) |- ((!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((continuous_on k) t))) ==> ((continuous_on k) t))
T c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f2 b0 ccontinuous_on f2 f0
- (!t. ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((continuous_on h) t))) |- ((\t. ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((continuous_on h) t))) t)
T c==> ! c==> cSUBSET b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f1 b0 * / c==> cSUBSET b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f1 b0 f2
- |- (((!p'. (!q'. (((y IN u) = p') ==> ((p' ==> (((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)) = q')) ==> (((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((y IN u) = p') ==> ((p' ==> (((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)) = q')) ==> (((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((y IN u) = p') ==> ((p' ==> (((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)) = q')) ==> (((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c= * f2 cpastecart cvec cNUMERAL c_0 f0 * f3 f0 b1 c= c==> cIN f0 f1 c= * f2 cpastecart cvec cNUMERAL c_0 f0 * f3 f0 c==> b0 b1 * / ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c= * f2 cpastecart cvec cNUMERAL c_0 f0 * f3 f0 b1 c= c==> cIN f0 f1 c= * f2 cpastecart cvec cNUMERAL c_0 f0 * f3 f0 c==> b0 b1 f4 * / ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c= * f2 cpastecart cvec cNUMERAL c_0 f0 * f3 f0 b1 c= c==> cIN f0 f1 c= * f2 cpastecart cvec cNUMERAL c_0 f0 * f3 f0 c==> b0 b1 f4
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- (((!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))) ==> ((\s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))) s)) = ((\s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c= c==> ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 * * part cIMAGE f0 b0 ccontinuous_on * * part co f1 f0 b0 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 * * part cIMAGE f0 b0 ccontinuous_on * * part co f1 f0 b0 f2 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 * * part cIMAGE f0 b0 ccontinuous_on * * part co f1 f0 b0 f2
- |- ((\p'. (!q'. (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((h z) = (p (k z))) = q')) ==> (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c==> c==> b0 c= c= * f2 f0 * f3 * f4 f0 b1 c= c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f2 f0 * f3 * f4 f0 c==> b0 b1 f5
- |- ((((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((h z) = (p (k z))) = ((h z) = (p (k z))))) ==> (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))) = ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))))) = (((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z)))) = ((z IN (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h z) = (p (k z))))))
T c= c==> c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c= * f2 f0 * f3 * f4 f0 c= * f2 f0 * f3 * f4 f0 c= c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f2 f0 * f3 * f4 f0 c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f2 f0 * f3 * f4 f0 c= c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f2 f0 * f3 * f4 f0 c==> cIN f0 * * part cPCROSS f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f2 f0 * f3 * f4 f0
- (t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) |- (((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((IMAGE k) t) SUBSET c)) ==> (((IMAGE k) t) SUBSET c))
T c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c==> c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE f2 f0 f3 cSUBSET * * part cIMAGE f2 f0 f3
- |- ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((h ((pastecart x) y)) = (p (k ((pastecart y) x)))) = q')) ==> ((((x IN u) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((h ((pastecart x) y)) = (p (k ((pastecart y) x))))) = (p' ==> q'))))
T c==> c= c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c==> c==> f3 c= c= * f4 cpastecart f0 f2 * f5 * f6 cpastecart f2 f0 f7 c= c==> c/\ cIN f0 f1 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 cpastecart f0 f2 * f5 * f6 cpastecart f2 f0 c==> f3 f7
- (!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))), (y IN u) |- ((y IN u) /\ ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))
T c==> ! c==> cIN b0 f0 c= * f1 cpastecart cvec cNUMERAL c_0 b0 * f2 b0 c==> cIN f3 f0 c/\ cIN f3 f0 c= * f1 cpastecart cvec cNUMERAL c_0 f3 * f2 f3
- ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((IMAGE k) t) SUBSET c)), (t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) |- ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE k) t) SUBSET c))
T c==> c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE f2 f0 f3 c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE f2 f0 f3
- |- (((!p'. (!q'. (((y IN u) = p') ==> ((p' ==> (((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)) = q')) ==> (((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((y IN u) = p') ==> ((p' ==> (((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)) = q')) ==> (((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((y IN u) = p') ==> ((p' ==> (((k ((pastecart y) (vec (NUMERAL _0)))) = (f y)) = q')) ==> (((y IN u) ==> ((k ((pastecart y) (vec (NUMERAL _0)))) = (f y))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c= * f2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 b1 c= c==> cIN f0 f1 c= * f2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 c==> b0 b1 * / ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c= * f2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 b1 c= c==> cIN f0 f1 c= * f2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 c==> b0 b1 f4 * / ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c= * f2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 b1 c= c==> cIN f0 f1 c= * f2 cpastecart f0 cvec cNUMERAL c_0 * f3 f0 c==> b0 b1 f4
- (!t. ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((continuous_on h) t))) |- ((!t. ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((continuous_on h) t))) /\ (!t. ((t SUBSET (u PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((continuous_on h) t))))
T c==> ! c==> cSUBSET b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f1 b0 c/\ ! c==> cSUBSET b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f1 b0 ! c==> cSUBSET b0 * * part cPCROSS f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f1 b0
- (z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) |- ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = T)
T c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cT
- |- ((?x. ((P x) /\ Q)) = ((?x. (P x)) /\ Q))
T c= c? / c/\ * f0 b0 f1 c/\ c? / * f0 b0 f1
- ((continuous_on f) u) |- ((\t. ((t SUBSET u) ==> ((continuous_on f) t))) t)
T c==> ccontinuous_on f0 f1 * / c==> cSUBSET b0 f1 ccontinuous_on f0 b0 f2
- |- ((\t. (!k. (!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)))) t)
T * / ! ! c==> c~ c==> ! c==> c? / c/\ c= b3 * b1 b4 * b2 b4 * f0 b3 c==> ! c==> * b0 b3 * b2 b3 ! c==> c? / c/\ c= b3 * b1 b4 * b0 b4 * f0 b3 cF f1
- |- (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) = p') ==> ((p' ==> (((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))) = q')) ==> (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))) = (p' ==> q'))))
T c==> c= cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c==> c==> f2 c= c= * f3 cpastecart csndcart f0 cfstcart f0 * f4 * f5 f0 f6 c= c==> cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f3 cpastecart csndcart f0 cfstcart f0 * f4 * f5 f0 c==> f2 f6
- (((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) |- ((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) /\ ((?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))))))) = (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))))
T c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c/\ c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c= c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f3 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f4 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f5 * b0 b1
- |- (((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) = p') ==> ((p' ==> ((?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z))))))))) = q')) ==> (((((continuous_on (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ (((IMAGE (h o (\z. ((pastecart (sndcart z)) (fstcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s)) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h ((pastecart (sndcart z)) (fstcart z))) = (p (k z)))))))))) = (p' ==> q'))))
T c==> c= c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 f3 c==> c==> f3 c= c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f4 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f5 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f6 * b0 b1 f7 c= c==> c/\ ccontinuous_on * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cSUBSET * * part cIMAGE * * part co f0 / cpastecart csndcart b0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f4 c/\ ! c==> cIN b1 f1 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f5 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= * f0 cpastecart csndcart b1 cfstcart b1 * f6 * b0 b1 c==> f3 f7
