N CACS_BOUNDS
C |- (!z. (((real_lt (real_abs (Re z))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (Re (cacs z))) /\ ((real_lt (Re (cacs z))) pi))))
T c==> creal_lt creal_abs cRe f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cRe ccacs f0 creal_lt cRe ccacs f0 cpi
D IM_CLOG_POS_LT_IMP
A |- (!z. (((real_lt (real_of_num (NUMERAL _0))) (Im z)) ==> (((real_lt (real_of_num (NUMERAL _0))) (Im (clog z))) /\ ((real_lt (Im (clog z))) pi))))
T c==> creal_lt creal_of_num cNUMERAL c_0 cIm f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cIm cclog f0 creal_lt cIm cclog f0 cpi
D CACS_RANGE_LEMMA
A |- (!z. (((real_lt (real_abs (Re z))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Im ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))))))))
T c==> creal_lt creal_abs cRe f0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_of_num cNUMERAL c_0 cIm cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0
D RE_CACS
A |- (!z. ((Re (cacs z)) = (Im (clog ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))))))))
T c= cRe ccacs f0 cIm cclog cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0
+ ((real_lt (real_abs (Re z))) (real_of_num (NUMERAL (BIT1 _0)))) |- (((real_lt (real_of_num (NUMERAL _0))) (Im (clog ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))))))) /\ ((real_lt (Im (clog ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))))))) pi))
T c==> creal_lt creal_abs cRe f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cIm cclog cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_lt cIm cclog cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cpi
+ |- (((!z. (((real_lt (real_of_num (NUMERAL _0))) (Im z)) ==> (((real_lt (real_of_num (NUMERAL _0))) (Im (clog z))) /\ ((real_lt (Im (clog z))) pi)))) ==> ((\z. (((real_lt (real_of_num (NUMERAL _0))) (Im z)) ==> (((real_lt (real_of_num (NUMERAL _0))) (Im (clog z))) /\ ((real_lt (Im (clog z))) pi)))) z)) = ((\z. (((real_lt (real_of_num (NUMERAL _0))) (Im z)) ==> (((real_lt (real_of_num (NUMERAL _0))) (Im (clog z))) /\ ((real_lt (Im (clog z))) pi)))) z))
T c= c==> ! c==> creal_lt creal_of_num cNUMERAL c_0 cIm b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cIm cclog b0 creal_lt cIm cclog b0 cpi * / c==> creal_lt creal_of_num cNUMERAL c_0 cIm b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cIm cclog b0 creal_lt cIm cclog b0 cpi f0 * / c==> creal_lt creal_of_num cNUMERAL c_0 cIm b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cIm cclog b0 creal_lt cIm cclog b0 cpi f0
- ((real_lt (real_abs (Re z))) (real_of_num (NUMERAL (BIT1 _0)))) |- (T = ((real_lt (real_of_num (NUMERAL _0))) (Im ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c==> creal_lt creal_abs cRe f0 creal_of_num cNUMERAL cBIT1 c_0 c= cT creal_lt creal_of_num cNUMERAL c_0 cIm cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0
- (!z. (((real_lt (real_of_num (NUMERAL _0))) (Im z)) ==> (((real_lt (real_of_num (NUMERAL _0))) (Im (clog z))) /\ ((real_lt (Im (clog z))) pi)))) |- ((((real_lt (real_of_num (NUMERAL _0))) (Im z)) ==> (((real_lt (real_of_num (NUMERAL _0))) (Im (clog z))) /\ ((real_lt (Im (clog z))) pi))) = T)
T c==> ! c==> creal_lt creal_of_num cNUMERAL c_0 cIm b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cIm cclog b0 creal_lt cIm cclog b0 cpi c= c==> creal_lt creal_of_num cNUMERAL c_0 cIm f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cIm cclog f0 creal_lt cIm cclog f0 cpi cT
+ |- ((((real_lt (real_abs (Re z))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (Re (cacs z))) /\ ((real_lt (Re (cacs z))) pi))) = T)
T c= c==> creal_lt creal_abs cRe f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cRe ccacs f0 creal_lt cRe ccacs f0 cpi cT
- ((real_lt (real_abs (Re z))) (real_of_num (NUMERAL (BIT1 _0)))) |- (T = ((real_lt (real_abs (Re z))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> creal_lt creal_abs cRe f0 creal_of_num cNUMERAL cBIT1 c_0 c= cT creal_lt creal_abs cRe f0 creal_of_num cNUMERAL cBIT1 c_0
- (!z. (((real_lt (real_of_num (NUMERAL _0))) (Im z)) ==> (((real_lt (real_of_num (NUMERAL _0))) (Im (clog z))) /\ ((real_lt (Im (clog z))) pi)))), ((real_lt (real_of_num (NUMERAL _0))) (Im z)) |- ((!z. (((real_lt (real_of_num (NUMERAL _0))) (Im z)) ==> (((real_lt (real_of_num (NUMERAL _0))) (Im (clog z))) /\ ((real_lt (Im (clog z))) pi)))) /\ (((real_lt (real_of_num (NUMERAL _0))) (Im (clog z))) /\ ((real_lt (Im (clog z))) pi)))
T c==> ! c==> creal_lt creal_of_num cNUMERAL c_0 cIm b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cIm cclog b0 creal_lt cIm cclog b0 cpi c==> creal_lt creal_of_num cNUMERAL c_0 cIm f0 c/\ ! c==> creal_lt creal_of_num cNUMERAL c_0 cIm b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cIm cclog b0 creal_lt cIm cclog b0 cpi c/\ creal_lt creal_of_num cNUMERAL c_0 cIm cclog f0 creal_lt cIm cclog f0 cpi
- (!z. (((real_lt (real_of_num (NUMERAL _0))) (Im z)) ==> (((real_lt (real_of_num (NUMERAL _0))) (Im (clog z))) /\ ((real_lt (Im (clog z))) pi)))) |- ((!z. (((real_lt (real_of_num (NUMERAL _0))) (Im z)) ==> (((real_lt (real_of_num (NUMERAL _0))) (Im (clog z))) /\ ((real_lt (Im (clog z))) pi)))) /\ (!z. (((real_lt (real_of_num (NUMERAL _0))) (Im z)) ==> (((real_lt (real_of_num (NUMERAL _0))) (Im (clog z))) /\ ((real_lt (Im (clog z))) pi)))))
T c==> ! c==> creal_lt creal_of_num cNUMERAL c_0 cIm b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cIm cclog b0 creal_lt cIm cclog b0 cpi c/\ ! c==> creal_lt creal_of_num cNUMERAL c_0 cIm b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cIm cclog b0 creal_lt cIm cclog b0 cpi ! c==> creal_lt creal_of_num cNUMERAL c_0 cIm b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cIm cclog b0 creal_lt cIm cclog b0 cpi
- ((real_lt (real_abs (Re z))) (real_of_num (NUMERAL (BIT1 _0)))) |- (((real_lt (real_abs (Re z))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_lt (real_of_num (NUMERAL _0))) (Im ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))))) = T))
T c==> creal_lt creal_abs cRe f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_lt creal_abs cRe f0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_of_num cNUMERAL c_0 cIm cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cT
- (!z. (((real_lt (real_of_num (NUMERAL _0))) (Im z)) ==> (((real_lt (real_of_num (NUMERAL _0))) (Im (clog z))) /\ ((real_lt (Im (clog z))) pi)))), ((real_lt (real_of_num (NUMERAL _0))) (Im z)) |- (((real_lt (real_of_num (NUMERAL _0))) (Im z)) /\ (((real_lt (real_of_num (NUMERAL _0))) (Im (clog z))) /\ ((real_lt (Im (clog z))) pi)))
T c==> ! c==> creal_lt creal_of_num cNUMERAL c_0 cIm b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cIm cclog b0 creal_lt cIm cclog b0 cpi c==> creal_lt creal_of_num cNUMERAL c_0 cIm f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cIm f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cIm cclog f0 creal_lt cIm cclog f0 cpi
- (!z. (((real_lt (real_of_num (NUMERAL _0))) (Im z)) ==> (((real_lt (real_of_num (NUMERAL _0))) (Im (clog z))) /\ ((real_lt (Im (clog z))) pi)))) |- ((\z. (((real_lt (real_of_num (NUMERAL _0))) (Im z)) ==> (((real_lt (real_of_num (NUMERAL _0))) (Im (clog z))) /\ ((real_lt (Im (clog z))) pi)))) z)
T c==> ! c==> creal_lt creal_of_num cNUMERAL c_0 cIm b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cIm cclog b0 creal_lt cIm cclog b0 cpi * / c==> creal_lt creal_of_num cNUMERAL c_0 cIm b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cIm cclog b0 creal_lt cIm cclog b0 cpi f0
- |- ((!z. (((real_lt (real_of_num (NUMERAL _0))) (Im z)) ==> (((real_lt (real_of_num (NUMERAL _0))) (Im (clog z))) /\ ((real_lt (Im (clog z))) pi)))) ==> (!z. (((real_lt (real_of_num (NUMERAL _0))) (Im z)) ==> (((real_lt (real_of_num (NUMERAL _0))) (Im (clog z))) /\ ((real_lt (Im (clog z))) pi)))))
T c==> ! c==> creal_lt creal_of_num cNUMERAL c_0 cIm b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cIm cclog b0 creal_lt cIm cclog b0 cpi ! c==> creal_lt creal_of_num cNUMERAL c_0 cIm b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cIm cclog b0 creal_lt cIm cclog b0 cpi
- (!z. (((real_lt (real_of_num (NUMERAL _0))) (Im z)) ==> (((real_lt (real_of_num (NUMERAL _0))) (Im (clog z))) /\ ((real_lt (Im (clog z))) pi)))), ((real_lt (real_of_num (NUMERAL _0))) (Im z)) |- (((real_lt (real_of_num (NUMERAL _0))) (Im (clog z))) /\ ((real_lt (Im (clog z))) pi))
T c==> ! c==> creal_lt creal_of_num cNUMERAL c_0 cIm b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cIm cclog b0 creal_lt cIm cclog b0 cpi c==> creal_lt creal_of_num cNUMERAL c_0 cIm f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cIm cclog f0 creal_lt cIm cclog f0 cpi
+ |- ((\z. (((real_lt (real_abs (Re z))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Im ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))))))) z)
T * / c==> creal_lt creal_abs cRe b0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_of_num cNUMERAL c_0 cIm cvector_add b0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow b0 cNUMERAL cBIT0 cBIT1 c_0 f0
- ((real_lt (real_abs (Re z))) (real_of_num (NUMERAL (BIT1 _0)))) |- (((real_lt (real_abs (Re z))) (real_of_num (NUMERAL (BIT1 _0)))) = T)
T c==> creal_lt creal_abs cRe f0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_abs cRe f0 creal_of_num cNUMERAL cBIT1 c_0 cT
+ |- (((!z. ((Re (cacs z)) = (Im (clog ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))))))) ==> ((\z. ((Re (cacs z)) = (Im (clog ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))))))) z)) = ((\z. ((Re (cacs z)) = (Im (clog ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))))))) z))
T c= c==> ! c= cRe ccacs b0 cIm cclog cvector_add b0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow b0 cNUMERAL cBIT0 cBIT1 c_0 * / c= cRe ccacs b0 cIm cclog cvector_add b0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow b0 cNUMERAL cBIT0 cBIT1 c_0 f0 * / c= cRe ccacs b0 cIm cclog cvector_add b0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow b0 cNUMERAL cBIT0 cBIT1 c_0 f0
+ ((real_lt (real_abs (Re z))) (real_of_num (NUMERAL (BIT1 _0)))) |- ((((real_lt (real_of_num (NUMERAL _0))) (Im ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))))) ==> (((real_lt (real_of_num (NUMERAL _0))) (Im (clog ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))))))) /\ ((real_lt (Im (clog ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))))))) pi))) = (((real_lt (real_of_num (NUMERAL _0))) (Im (clog ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))))))) /\ ((real_lt (Im (clog ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))))))) pi)))
T c==> creal_lt creal_abs cRe f0 creal_of_num cNUMERAL cBIT1 c_0 c= c==> creal_lt creal_of_num cNUMERAL c_0 cIm cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cIm cclog cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_lt cIm cclog cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ creal_lt creal_of_num cNUMERAL c_0 cIm cclog cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_lt cIm cclog cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cpi
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (Im (clog ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))))))) /\ ((real_lt (Im (clog ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))))))) pi)) = (((real_lt (real_of_num (NUMERAL _0))) (Re (cacs z))) /\ ((real_lt (Re (cacs z))) pi)))
T c= c/\ creal_lt creal_of_num cNUMERAL c_0 cIm cclog cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_lt cIm cclog cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ creal_lt creal_of_num cNUMERAL c_0 cRe ccacs f0 creal_lt cRe ccacs f0 cpi
+ |- ((\z. (((real_lt (real_of_num (NUMERAL _0))) (Im z)) ==> (((real_lt (real_of_num (NUMERAL _0))) (Im (clog z))) /\ ((real_lt (Im (clog z))) pi)))) z)
T * / c==> creal_lt creal_of_num cNUMERAL c_0 cIm b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cIm cclog b0 creal_lt cIm cclog b0 cpi f0
+ |- ((\z. ((Re (cacs z)) = (Im (clog ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))))))) z)
T * / c= cRe ccacs b0 cIm cclog cvector_add b0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow b0 cNUMERAL cBIT0 cBIT1 c_0 f0
+ ((real_lt (real_abs (Re z))) (real_of_num (NUMERAL (BIT1 _0)))) |- (((real_lt (real_abs (Re z))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_lt (real_of_num (NUMERAL _0))) (Re (cacs z))) /\ ((real_lt (Re (cacs z))) pi)))
T c==> creal_lt creal_abs cRe f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_lt creal_abs cRe f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cRe ccacs f0 creal_lt cRe ccacs f0 cpi
+ |- (((!z. (((real_lt (real_abs (Re z))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Im ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))))))) ==> ((\z. (((real_lt (real_abs (Re z))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Im ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))))))) z)) = ((\z. (((real_lt (real_abs (Re z))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Im ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))))))) z))
T c= c==> ! c==> creal_lt creal_abs cRe b0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_of_num cNUMERAL c_0 cIm cvector_add b0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow b0 cNUMERAL cBIT0 cBIT1 c_0 * / c==> creal_lt creal_abs cRe b0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_of_num cNUMERAL c_0 cIm cvector_add b0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow b0 cNUMERAL cBIT0 cBIT1 c_0 f0 * / c==> creal_lt creal_abs cRe b0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_of_num cNUMERAL c_0 cIm cvector_add b0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow b0 cNUMERAL cBIT0 cBIT1 c_0 f0
