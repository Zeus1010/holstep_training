N Tame_list.split_at_nil_take_drop
C |- (!f. (!u. ((((split_at_rec u) NIL) f) = (((take ((indexl u) f)) f) , ((dropl (SUC ((indexl u) f))) f)))))
T c= csplit_at_rec f0 cNIL f1 c, ctake cindexl f0 f1 f1 cdropl cSUC cindexl f0 f1 f1
D TRUTH
A |- T
T cT
D APPEND
A |- ((!l. (((APPEND NIL) l) = l)) /\ (!h. (!t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))))))
T c/\ ! c= cAPPEND cNIL b0 b0 ! ! ! c= cAPPEND cCONS b0 b1 b2 cCONS b0 cAPPEND b1 b2
D Tame_list.split_at_take_drop
A |- (!f. (!u. (!b. ((((split_at_rec u) b) f) = (((APPEND b) ((take ((indexl u) f)) f)) , ((dropl (SUC ((indexl u) f))) f))))))
T c= csplit_at_rec f0 f1 f2 c, cAPPEND f1 ctake cindexl f0 f2 f2 cdropl cSUC cindexl f0 f2 f2
+ |- ((\u. (!b. ((((split_at_rec u) b) f) = (((APPEND b) ((take ((indexl u) f)) f)) , ((dropl (SUC ((indexl u) f))) f))))) u)
T * / ! c= csplit_at_rec b0 b1 f0 c, cAPPEND b1 ctake cindexl b0 f0 f0 cdropl cSUC cindexl b0 f0 f0 f1
+ |- ((!u. t) = t)
T c= ! f0 f0
+ |- ((\b. ((((split_at_rec u) b) f) = (((APPEND b) ((take ((indexl u) f)) f)) , ((dropl (SUC ((indexl u) f))) f)))) b)
T * / c= csplit_at_rec f0 b0 f1 c, cAPPEND b0 ctake cindexl f0 f1 f1 cdropl cSUC cindexl f0 f1 f1 f2
- |- ((\l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))) l)
T * / c= cAPPEND cCONS f0 f1 b0 cCONS f0 cAPPEND f1 b0 f2
- |- (((!h. (!t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))))) ==> ((\h. (!t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))))) h)) = ((\h. (!t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))))) h))
T c= c==> ! ! ! c= cAPPEND cCONS b0 b1 b2 cCONS b0 cAPPEND b1 b2 * / ! ! c= cAPPEND cCONS b0 b1 b2 cCONS b0 cAPPEND b1 b2 f0 * / ! ! c= cAPPEND cCONS b0 b1 b2 cCONS b0 cAPPEND b1 b2 f0
+ |- ((\l. (((APPEND NIL) l) = l)) l)
T * / c= cAPPEND cNIL b0 b0 f0
+ |- (T = (!f. (!u. ((((split_at_rec u) NIL) f) = (((take ((indexl u) f)) f) , ((dropl (SUC ((indexl u) f))) f))))))
T c= cT ! ! c= csplit_at_rec b1 cNIL b0 c, ctake cindexl b1 b0 b0 cdropl cSUC cindexl b1 b0 b0
+ |- (((!f. (!u. (!b. ((((split_at_rec u) b) f) = (((APPEND b) ((take ((indexl u) f)) f)) , ((dropl (SUC ((indexl u) f))) f)))))) ==> ((\f. (!u. (!b. ((((split_at_rec u) b) f) = (((APPEND b) ((take ((indexl u) f)) f)) , ((dropl (SUC ((indexl u) f))) f)))))) f)) = ((\f. (!u. (!b. ((((split_at_rec u) b) f) = (((APPEND b) ((take ((indexl u) f)) f)) , ((dropl (SUC ((indexl u) f))) f)))))) f))
T c= c==> ! ! ! c= csplit_at_rec b1 b2 b0 c, cAPPEND b2 ctake cindexl b1 b0 b0 cdropl cSUC cindexl b1 b0 b0 * / ! ! c= csplit_at_rec b1 b2 b0 c, cAPPEND b2 ctake cindexl b1 b0 b0 cdropl cSUC cindexl b1 b0 b0 f0 * / ! ! c= csplit_at_rec b1 b2 b0 c, cAPPEND b2 ctake cindexl b1 b0 b0 cdropl cSUC cindexl b1 b0 b0 f0
- |- (((!t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l))))) ==> ((\t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l))))) t)) = ((\t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l))))) t))
T c= c==> ! ! c= cAPPEND cCONS f0 b0 b1 cCONS f0 cAPPEND b0 b1 * / ! c= cAPPEND cCONS f0 b0 b1 cCONS f0 cAPPEND b0 b1 f1 * / ! c= cAPPEND cCONS f0 b0 b1 cCONS f0 cAPPEND b0 b1 f1
+ |- (((!u. (!b. ((((split_at_rec u) b) f) = (((APPEND b) ((take ((indexl u) f)) f)) , ((dropl (SUC ((indexl u) f))) f))))) ==> ((\u. (!b. ((((split_at_rec u) b) f) = (((APPEND b) ((take ((indexl u) f)) f)) , ((dropl (SUC ((indexl u) f))) f))))) u)) = ((\u. (!b. ((((split_at_rec u) b) f) = (((APPEND b) ((take ((indexl u) f)) f)) , ((dropl (SUC ((indexl u) f))) f))))) u))
T c= c==> ! ! c= csplit_at_rec b0 b1 f0 c, cAPPEND b1 ctake cindexl b0 f0 f0 cdropl cSUC cindexl b0 f0 f0 * / ! c= csplit_at_rec b0 b1 f0 c, cAPPEND b1 ctake cindexl b0 f0 f0 cdropl cSUC cindexl b0 f0 f0 f1 * / ! c= csplit_at_rec b0 b1 f0 c, cAPPEND b1 ctake cindexl b0 f0 f0 cdropl cSUC cindexl b0 f0 f0 f1
- |- ((\h. (!t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))))) h)
T * / ! ! c= cAPPEND cCONS b0 b1 b2 cCONS b0 cAPPEND b1 b2 f0
- |- (((!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))) ==> ((\l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))) l)) = ((\l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))) l))
T c= c==> ! c= cAPPEND cCONS f0 f1 b0 cCONS f0 cAPPEND f1 b0 * / c= cAPPEND cCONS f0 f1 b0 cCONS f0 cAPPEND f1 b0 f2 * / c= cAPPEND cCONS f0 f1 b0 cCONS f0 cAPPEND f1 b0 f2
- |- (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))
T c= cAPPEND cCONS f0 f1 f2 cCONS f0 cAPPEND f1 f2
- |- ((\t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l))))) t)
T * / ! c= cAPPEND cCONS f0 b0 b1 cCONS f0 cAPPEND b0 b1 f1
