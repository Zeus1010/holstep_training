N List_hypermap.f_list_ext_orbit
C |- (!L. (!x. ((((MEM x) (list_of_darts L)) /\ (uniq (list_of_darts L))) ==> (((orbit_map (f_list_ext L)) x) = (set_of_list ((find_face L) x))))))
T c==> c/\ cMEM f0 clist_of_darts f1 cuniq clist_of_darts f1 c= * * part corbit_map * part cf_list_ext f1 f0 * part cset_of_list cfind_face f1 f0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D o_THM
A |- (!f. (!g. (!x. (((f o g) x) = (f (g x))))))
T c= co f0 f1 f2 * f0 * f1 f2
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D DIVISION
A |- (!m. (!n. ((~ (n = (NUMERAL _0))) ==> ((m = (((m DIV n) * n) + (m MOD n))) /\ ((m MOD n) < n)))))
T c==> c~ c= f0 cNUMERAL c_0 c/\ c= f1 c+ c* cDIV f1 f0 f0 cMOD f1 f0 c< cMOD f1 f0 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_eq
A |- (!x. (!y. ((x = y) = ((real_of_int x) = (real_of_int y)))))
T c= c= f0 f1 c= creal_of_int f0 creal_of_int f1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_OF_NUM_EQ
A |- (!m. (!n. (((int_of_num m) = (int_of_num n)) = (m = n))))
T c= c= cint_of_num f0 cint_of_num f1 c= f0 f1
D INT_OF_NUM_LT
A |- (!m. (!n. (((int_lt (int_of_num m)) (int_of_num n)) = (m < n))))
T c= cint_lt cint_of_num f0 cint_of_num f1 c< f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D IN_SET_OF_LIST
A |- (!x. (!l. ((x IN (set_of_list l)) = ((MEM x) l))))
T c= cIN f0 * part cset_of_list f1 cMEM f0 f1
D Fan.POWER_0
A |- (!f. (((POWER f) (NUMERAL _0)) = I))
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
D Hypermap.orbit_map
A |- (!f. (!x. (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5390. (?n. (((SETSPEC GEN%PVAR%5390) (n >= (NUMERAL _0))) (((POWER f) n) x))))))))
T c= * * part corbit_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER f0 b1 f1
D Hypermap.COM_POWER
A |- (!n. (!f. (((POWER f) (SUC n)) = (f o ((POWER f) n)))))
T c= * * part cPOWER f0 cSUC f1 * * part co f0 * * part cPOWER f0 f1
D Hypermap_and_fan.ORBIT_MAP_RES
A |- (!f. (!x. (!s. (((x IN s) /\ ((permutes ((res f) s)) s)) ==> (((orbit_map ((res f) s)) x) = ((orbit_map f) x))))))
T c==> c/\ cIN f0 f1 cpermutes * * part cres f2 f1 f1 c= * * part corbit_map * * part cres f2 f1 f0 * * part corbit_map f2 f0
D Seq.index_mem
A |- (!x. (!s. ((((indexl x) s) < (sizel s)) = ((MEM x) s))))
T c= c< cindexl f0 f1 csizel f1 cMEM f0 f1
D Seq.mem_nth
A |- (!x0. (!s. (!n. ((n < (sizel s)) ==> ((MEM (((nth x0) s) n)) s)))))
T c==> c< f0 csizel f1 cMEM cnth f2 f1 f0 f1
D Seq2.next_el_power
A |- (!x0. (!s. (!x. (!i. (((uniq s) /\ ((MEM x) s)) ==> ((((POWER (next_el s)) i) x) = (((nth x0) s) ((((indexl x) s) + i) MOD (sizel s)))))))))
T c==> c/\ cuniq f0 cMEM f1 f0 c= cPOWER * part cnext_el f0 f2 f1 cnth f3 f0 cMOD c+ cindexl f1 f0 f2 csizel f0
D Seq2.next_el_orbit
A |- (!s. (!x. (((uniq s) /\ ((MEM x) s)) ==> (((orbit_map (next_el s)) x) = (set_of_list s)))))
T c==> c/\ cuniq f0 cMEM f1 f0 c= * * part corbit_map * part cnext_el f0 f1 * part cset_of_list f0
D List_hypermap.darts_of_list
A |- (!L. ((darts_of_list L) = (set_of_list (list_of_darts L))))
T c= * part cdarts_of_list f0 * part cset_of_list clist_of_darts f0
D List_hypermap.f_list
A |- (!L. (!d. (((f_list L) d) = ((next_el ((find_face L) d)) d))))
T c= cf_list f0 f1 cnext_el cfind_face f0 f1 f1
D List_hypermap.f_list_ext
A |- (!L. ((f_list_ext L) = ((res (f_list L)) (darts_of_list L))))
T c= * part cf_list_ext f0 * * part cres * part cf_list f0 * part cdarts_of_list f0
D List_hypermap.dart_in_face
A |- (!d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d)))))
T c= cMEM f0 clist_of_darts f1 cMEM f0 cfind_face f1 f0
D List_hypermap.uniq_find_face
A |- (!d. (!L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) d)))))
T c==> cuniq clist_of_darts f0 cuniq cfind_face f0 f1
D List_hypermap.f_list_ext_permutes_darts
A |- (!L. ((uniq (list_of_darts L)) ==> ((permutes (f_list_ext L)) (darts_of_list L))))
T c==> cuniq clist_of_darts f0 cpermutes * part cf_list_ext f0 * part cdarts_of_list f0
D List_hypermap.mem_find_face_imp_faces_eq
A |- (!d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2))))))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2
+ (~ ((NUMERAL _0) = n)) |- ((~ ((NUMERAL _0) = n)) /\ (((m MOD n) < n) = T))
T c==> c~ c= cNUMERAL c_0 f0 c/\ c~ c= cNUMERAL c_0 f0 c= c< cMOD f1 f0 f0 cT
+ (!n. ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) |- ((GSPEC (\GEN%PVAR%5390. (?n. (((SETSPEC GEN%PVAR%5390) (n >= (NUMERAL _0))) (((POWER (f_list L)) n) x))))) = ((orbit_map (next_el ((find_face L) x))) x))
T c==> ! c= cPOWER * part cf_list f0 b0 f1 cPOWER * part cnext_el cfind_face f0 f1 b0 f1 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * part cf_list f0 b1 f1 * * part corbit_map * part cnext_el cfind_face f0 f1 f1
+ |- ((\p'. (!q'. (((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) = p') ==> ((p' ==> ((((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x)) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x)))) = q')) ==> (((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) ==> (((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x)) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x))))) = (p' ==> q')))))) p')
T * / ! c==> c= c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 b0 c==> c==> b0 c= c==> c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 b1 c= c==> c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c==> c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c==> b0 b1 f3
- |- (((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) ==> (((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x)) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x))))) ==> ((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) ==> (((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x)) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x))))))
T c==> c==> c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c==> c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c==> c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c==> c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
+ |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))) |- ((((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))) = T)
T c==> ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 c= c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0 cT
+ |- ((\L. ((f_list_ext L) = ((res (f_list L)) (darts_of_list L)))) L)
T * / c= * part cf_list_ext b0 * * part cres * part cf_list b0 * part cdarts_of_list b0 f0
+ (((real_ge (real_of_int _10061198)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10061199)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198)) = (real_of_num (NUMERAL _0)))))) |- ((real_ge (real_of_int _10061199)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
+ |- (((~ ((int_lt (int_of_num ((indexl x) ((find_face L) x)))) (int_of_num (sizel ((find_face L) x))))) \/ (~ ((int_of_num (NUMERAL _0)) = (int_of_num (sizel ((find_face L) x)))))) = ((((indexl x) ((find_face L) x)) < (sizel ((find_face L) x))) ==> (~ ((NUMERAL _0) = (sizel ((find_face L) x))))))
T c= c\/ c~ cint_lt cint_of_num cindexl f0 cfind_face f1 f0 cint_of_num csizel cfind_face f1 f0 c~ c= cint_of_num cNUMERAL c_0 cint_of_num csizel cfind_face f1 f0 c==> c< cindexl f0 cfind_face f1 f0 csizel cfind_face f1 f0 c~ c= cNUMERAL c_0 csizel cfind_face f1 f0
+ ((MEM x) ((find_face L) x)) |- ((((((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))) < (sizel ((find_face L) x))) = T) ==> (((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))) < (sizel ((find_face L) x)))) = ((~ ((NUMERAL _0) = (sizel ((find_face L) x)))) /\ (((((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))) < (sizel ((find_face L) x))) = T) ==> (((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))) < (sizel ((find_face L) x))))))
T c==> cMEM f0 cfind_face f1 f0 c= c==> c= c< cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 csizel cfind_face f1 f0 cT c< cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 csizel cfind_face f1 f0 c/\ c~ c= cNUMERAL c_0 csizel cfind_face f1 f0 c==> c= c< cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 csizel cfind_face f1 f0 cT c< cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 csizel cfind_face f1 f0
- (((real_ge (real_of_int _10061198)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10061199)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198)) = (real_of_num (NUMERAL _0)))))) |- (((!x. (((real_mul x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\x. (((real_mul x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) /\ ((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x)))) ==> (((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) /\ ((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x))))) = (((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) /\ ((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x)))))
T c= c==> c==> c/\ c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c==> c/\ c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c==> c/\ c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
+ |- ((((f_list L) (((POWER (f_list L)) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x))) = (((f_list L) (((POWER (f_list L)) n) x)) = (((next_el ((find_face L) x)) o ((POWER (next_el ((find_face L) x))) n)) x)))
T c= c= cf_list f0 cPOWER * part cf_list f0 f1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 f1 f2 c= cf_list f0 cPOWER * part cf_list f0 f1 f2 co * part cnext_el cfind_face f0 f2 * * part cPOWER * part cnext_el cfind_face f0 f2 f1 f2
- |- (((((indexl x) ((find_face L) x)) < (sizel ((find_face L) x))) ==> (~ ((NUMERAL _0) = (sizel ((find_face L) x))))) = T)
T c= c==> c< cindexl f0 cfind_face f1 f0 csizel cfind_face f1 f0 c~ c= cNUMERAL c_0 csizel cfind_face f1 f0 cT
- (uniq (list_of_darts L)), (n = n1), ((MEM x) ((find_face L) x)) |- ((n = n1) /\ ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x)))
T c==> cuniq clist_of_darts f0 c==> c= f1 f2 c==> cMEM f3 cfind_face f0 f3 c/\ c= f1 f2 c= cPOWER * part cf_list f0 f1 f3 cPOWER * part cnext_el cfind_face f0 f3 f1 f3
+ |- (((!L. (((res (f_list L)) (darts_of_list L)) = (f_list_ext L))) ==> ((\L. (((res (f_list L)) (darts_of_list L)) = (f_list_ext L))) L)) = ((\L. (((res (f_list L)) (darts_of_list L)) = (f_list_ext L))) L))
T c= c==> ! c= * * part cres * part cf_list b0 * part cdarts_of_list b0 * part cf_list_ext b0 * / c= * * part cres * part cf_list b0 * part cdarts_of_list b0 * part cf_list_ext b0 f0 * / c= * * part cres * part cf_list b0 * part cdarts_of_list b0 * part cf_list_ext b0 f0
+ |- (((!l. ((x IN (set_of_list l)) = ((MEM x) l))) ==> ((\l. ((x IN (set_of_list l)) = ((MEM x) l))) l)) = ((\l. ((x IN (set_of_list l)) = ((MEM x) l))) l))
T c= c==> ! c= cIN f0 * part cset_of_list b0 cMEM f0 b0 * / c= cIN f0 * part cset_of_list b0 cMEM f0 b0 f1 * / c= cIN f0 * part cset_of_list b0 cMEM f0 b0 f1
- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))) |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c==> c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0 c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)) |- (((MEM x) ((find_face L) x)) /\ (((orbit_map (f_list L)) x) = (set_of_list ((find_face L) x))))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 c/\ cMEM f1 cfind_face f0 f1 c= * * part corbit_map * part cf_list f0 f1 * part cset_of_list cfind_face f0 f1
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ |- (((!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))) ==> ((\P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))) P)) = ((\P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))) P))
T c= c==> ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 * / c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 f0 * / c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 f0
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10061198)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10061199)) /\ (((real_le ((real_add (real_of_int _10061199)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198)) /\ ((real_of_num (NUMERAL _0)) = (real_of_int _10061198))))))) |- (((real_ge (real_of_int _10061198)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10061199)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198)) = (real_of_num (NUMERAL _0))))))
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c= creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- ((\f. (((POWER f) (SUC n)) = (f o ((POWER f) n)))) f)
T * / c= * * part cPOWER b0 cSUC f0 * * part co b0 * * part cPOWER b0 f0 f1
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
- (((real_ge (real_of_int _10061198)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10061199)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198)) = (real_of_num (NUMERAL _0)))))) |- ((\x. (((real_mul x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((m < n) = ((int_lt (int_of_num m)) (int_of_num n)))
T c= c< f0 f1 cint_lt cint_of_num f0 cint_of_num f1
+ |- ((\L. ((darts_of_list L) = (set_of_list (list_of_darts L)))) L)
T * / c= * part cdarts_of_list b0 * part cset_of_list clist_of_darts b0 f0
+ |- (((!x. (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5390. (?n. (((SETSPEC GEN%PVAR%5390) (n >= (NUMERAL _0))) (((POWER f) n) x))))))) ==> ((\x. (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5390. (?n. (((SETSPEC GEN%PVAR%5390) (n >= (NUMERAL _0))) (((POWER f) n) x))))))) x)) = ((\x. (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5390. (?n. (((SETSPEC GEN%PVAR%5390) (n >= (NUMERAL _0))) (((POWER f) n) x))))))) x))
T c= c==> ! c= * * part corbit_map f0 b0 * part cGSPEC / c? / cSETSPEC b1 c>= b2 cNUMERAL c_0 cPOWER f0 b2 b0 * / c= * * part corbit_map f0 b0 * part cGSPEC / c? / cSETSPEC b1 c>= b2 cNUMERAL c_0 cPOWER f0 b2 b0 f1 * / c= * * part corbit_map f0 b0 * part cGSPEC / c? / cSETSPEC b1 c>= b2 cNUMERAL c_0 cPOWER f0 b2 b0 f1
+ (((MEM x) (list_of_darts L)) /\ (uniq (list_of_darts L))) |- ((((MEM x) (list_of_darts L)) /\ (uniq (list_of_darts L))) /\ (((orbit_map (f_list_ext L)) x) = (set_of_list ((find_face L) x))))
T c==> c/\ cMEM f0 clist_of_darts f1 cuniq clist_of_darts f1 c/\ c/\ cMEM f0 clist_of_darts f1 cuniq clist_of_darts f1 c= * * part corbit_map * part cf_list_ext f1 f0 * part cset_of_list cfind_face f1 f0
- |- ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)
T * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
+ |- ((\d. (!L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) d))))) d)
T * / ! c==> cuniq clist_of_darts b1 cuniq cfind_face b1 b0 f0
+ ((MEM x) (list_of_darts L)) |- (T = (((MEM x) (list_of_darts L)) /\ T))
T c==> cMEM f0 clist_of_darts f1 c= cT c/\ cMEM f0 clist_of_darts f1 cT
- (!d1. (!d2. (((MEM d1) ((find_face L) d2)) ==> (((find_face L) d1) = ((find_face L) d2))))), ((MEM d1) ((find_face L) d2)) |- (((MEM d1) ((find_face L) d2)) /\ (((find_face L) d1) = ((find_face L) d2)))
T c==> ! ! c==> cMEM b0 cfind_face f0 b1 c= cfind_face f0 b0 cfind_face f0 b1 c==> cMEM f1 cfind_face f0 f2 c/\ cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2
+ (((MEM d) ((find_face L) d)) = ((MEM d) (list_of_darts L))) |- (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d)))
T c==> c= cMEM f0 cfind_face f1 f0 cMEM f0 clist_of_darts f1 c= cMEM f0 clist_of_darts f1 cMEM f0 cfind_face f1 f0
+ (uniq (list_of_darts L)), ((MEM x) (list_of_darts L)) |- (((orbit_map (f_list L)) x) = (set_of_list ((find_face L) x)))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 c= * * part corbit_map * part cf_list f0 f1 * part cset_of_list cfind_face f0 f1
+ |- (((!s. (!x. (((uniq s) /\ ((MEM x) s)) ==> (((orbit_map (next_el s)) x) = (set_of_list s))))) ==> ((\s. (!x. (((uniq s) /\ ((MEM x) s)) ==> (((orbit_map (next_el s)) x) = (set_of_list s))))) s)) = ((\s. (!x. (((uniq s) /\ ((MEM x) s)) ==> (((orbit_map (next_el s)) x) = (set_of_list s))))) s))
T c= c==> ! ! c==> c/\ cuniq b0 cMEM b1 b0 c= * * part corbit_map * part cnext_el b0 b1 * part cset_of_list b0 * / ! c==> c/\ cuniq b0 cMEM b1 b0 c= * * part corbit_map * part cnext_el b0 b1 * part cset_of_list b0 f0 * / ! c==> c/\ cuniq b0 cMEM b1 b0 c= * * part corbit_map * part cnext_el b0 b1 * part cset_of_list b0 f0
+ (uniq (list_of_darts L)), ((MEM x) (list_of_darts L)) |- (((orbit_map ((res (f_list L)) (darts_of_list L))) x) = (set_of_list ((find_face L) x)))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 c= * * part corbit_map * * part cres * part cf_list f0 * part cdarts_of_list f0 f1 * part cset_of_list cfind_face f0 f1
+ |- (((T /\ A) = A) /\ ((A /\ T) = A))
T c/\ c= c/\ cT f0 f0 c= c/\ f0 cT f0
+ |- ((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) ==> ((((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x)) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x)))) = T))
T c==> c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c= c==> c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cT
+ |- (((!s. (((x IN s) /\ ((permutes ((res f) s)) s)) ==> (((orbit_map ((res f) s)) x) = ((orbit_map f) x)))) ==> ((\s. (((x IN s) /\ ((permutes ((res f) s)) s)) ==> (((orbit_map ((res f) s)) x) = ((orbit_map f) x)))) s)) = ((\s. (((x IN s) /\ ((permutes ((res f) s)) s)) ==> (((orbit_map ((res f) s)) x) = ((orbit_map f) x)))) s))
T c= c==> ! c==> c/\ cIN f0 b0 cpermutes * * part cres f1 b0 b0 c= * * part corbit_map * * part cres f1 b0 f0 * * part corbit_map f1 f0 * / c==> c/\ cIN f0 b0 cpermutes * * part cres f1 b0 b0 c= * * part corbit_map * * part cres f1 b0 f0 * * part corbit_map f1 f0 f2 * / c==> c/\ cIN f0 b0 cpermutes * * part cres f1 b0 b0 c= * * part corbit_map * * part cres f1 b0 f0 * * part corbit_map f1 f0 f2
+ (((real_ge (real_of_int _10061198)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10061199)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198)) = (real_of_num (NUMERAL _0)))))) |- (((real_ge ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = ((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198)) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!x. (((uniq s) /\ ((MEM x) s)) ==> (((orbit_map (next_el s)) x) = (set_of_list s)))) ==> ((\x. (((uniq s) /\ ((MEM x) s)) ==> (((orbit_map (next_el s)) x) = (set_of_list s)))) x)) = ((\x. (((uniq s) /\ ((MEM x) s)) ==> (((orbit_map (next_el s)) x) = (set_of_list s)))) x))
T c= c==> ! c==> c/\ cuniq f0 cMEM b0 f0 c= * * part corbit_map * part cnext_el f0 b0 * part cset_of_list f0 * / c==> c/\ cuniq f0 cMEM b0 f0 c= * * part corbit_map * part cnext_el f0 b0 * part cset_of_list f0 f1 * / c==> c/\ cuniq f0 cMEM b0 f0 c= * * part corbit_map * part cnext_el f0 b0 * part cset_of_list f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((MEM d1) ((find_face L) d2)) |- ((!d1. (!d2. (((MEM d1) ((find_face L) d2)) ==> (((find_face L) d1) = ((find_face L) d2))))) ==> (((find_face L) d1) = ((find_face L) d2)))
T c==> cMEM f0 cfind_face f1 f2 c==> ! ! c==> cMEM b0 cfind_face f1 b1 c= cfind_face f1 b0 cfind_face f1 b1 c= cfind_face f1 f0 cfind_face f1 f2
+ |- (((x IN (darts_of_list L)) /\ ((permutes (f_list_ext L)) (darts_of_list L))) = ((x IN (darts_of_list L)) /\ ((permutes ((res (f_list L)) (darts_of_list L))) (darts_of_list L))))
T c= c/\ cIN f0 * part cdarts_of_list f1 cpermutes * part cf_list_ext f1 * part cdarts_of_list f1 c/\ cIN f0 * part cdarts_of_list f1 cpermutes * * part cres * part cf_list f1 * part cdarts_of_list f1 * part cdarts_of_list f1
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
- (uniq (list_of_darts L)), (n = n1), ((MEM x) ((find_face L) x)) |- ((((POWER (f_list L)) n1) x) = (((POWER (next_el ((find_face L) x))) n) x))
T c==> cuniq clist_of_darts f0 c==> c= f1 f2 c==> cMEM f3 cfind_face f0 f3 c= cPOWER * part cf_list f0 f2 f3 cPOWER * part cnext_el cfind_face f0 f3 f1 f3
+ |- (((!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2))))) ==> ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2))))) d2)) = ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2))))) d2))
T c= c==> ! ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1 * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1
- |- ((y = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) y) = (real_of_num (NUMERAL _0)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10061198)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10061199)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198)) = (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)) |- (((\n1. (n = n1)) n1) ==> ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x)))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 c==> * / c= f2 b0 f3 c= cPOWER * part cf_list f0 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
+ |- (((!L. (((MEM d) ((find_face L) d)) = ((MEM d) (list_of_darts L)))) ==> ((\L. (((MEM d) ((find_face L) d)) = ((MEM d) (list_of_darts L)))) L)) = ((\L. (((MEM d) ((find_face L) d)) = ((MEM d) (list_of_darts L)))) L))
T c= c==> ! c= cMEM f0 cfind_face b0 f0 cMEM f0 clist_of_darts b0 * / c= cMEM f0 cfind_face b0 f0 cMEM f0 clist_of_darts b0 f1 * / c= cMEM f0 cfind_face b0 f0 cMEM f0 clist_of_darts b0 f1
+ (uniq (list_of_darts L)), (((orbit_map ((res (f_list L)) (darts_of_list L))) x) = ((orbit_map (f_list L)) x)), ((MEM x) (list_of_darts L)) |- (((orbit_map ((res (f_list L)) (darts_of_list L))) x) = (set_of_list ((find_face L) x)))
T c==> cuniq clist_of_darts f0 c==> c= * * part corbit_map * * part cres * part cf_list f0 * part cdarts_of_list f0 f1 * * part corbit_map * part cf_list f0 f1 c==> cMEM f1 clist_of_darts f0 c= * * part corbit_map * * part cres * part cf_list f0 * part cdarts_of_list f0 f1 * part cset_of_list cfind_face f0 f1
+ |- ((((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x))) = (((f_list L) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x))))
T c= c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cf_list f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
+ (uniq (list_of_darts L)) |- (T ==> (((MEM d1) ((find_face L) d2)) ==> (((find_face L) d1) = ((find_face L) d2))))
T c==> cuniq clist_of_darts f0 c==> cT c==> cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2
+ ((MEM x) ((find_face L) x)) |- (T /\ ((MEM x) ((find_face L) x)))
T c==> cMEM f0 cfind_face f1 f0 c/\ cT cMEM f0 cfind_face f1 f0
- |- ((~ ((NUMERAL _0) = n)) ==> ((((m DIV n) * n) + (m MOD n)) = m))
T c==> c~ c= cNUMERAL c_0 f0 c= c+ c* cDIV f1 f0 f0 cMOD f1 f0 f1
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num ((indexl x) ((find_face L) x)))) ==> ((~ ((int_lt (int_of_num ((indexl x) ((find_face L) x)))) (int_of_num (sizel ((find_face L) x))))) \/ (~ ((int_of_num (NUMERAL _0)) = (int_of_num (sizel ((find_face L) x))))))) = ((~ ((int_lt (int_of_num ((indexl x) ((find_face L) x)))) (int_of_num (sizel ((find_face L) x))))) \/ (~ ((int_of_num (NUMERAL _0)) = (int_of_num (sizel ((find_face L) x)))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num cindexl f0 cfind_face f1 f0 c\/ c~ cint_lt cint_of_num cindexl f0 cfind_face f1 f0 cint_of_num csizel cfind_face f1 f0 c~ c= cint_of_num cNUMERAL c_0 cint_of_num csizel cfind_face f1 f0 c\/ c~ cint_lt cint_of_num cindexl f0 cfind_face f1 f0 cint_of_num csizel cfind_face f1 f0 c~ c= cint_of_num cNUMERAL c_0 cint_of_num csizel cfind_face f1 f0
- |- ((!d1. (!d2. (((MEM d1) ((find_face L) d2)) ==> (((find_face L) d1) = ((find_face L) d2))))) ==> (!d1. (!d2. (((MEM d1) ((find_face L) d2)) ==> (((find_face L) d1) = ((find_face L) d2))))))
T c==> ! ! c==> cMEM b0 cfind_face f0 b1 c= cfind_face f0 b0 cfind_face f0 b1 ! ! c==> cMEM b0 cfind_face f0 b1 c= cfind_face f0 b0 cfind_face f0 b1
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (uniq (list_of_darts L)), ((MEM x) (list_of_darts L)) |- ((((uniq (list_of_darts L)) /\ ((((permutes (f_list_ext L)) (darts_of_list L)) = T) ==> ((x IN (darts_of_list L)) /\ ((permutes (f_list_ext L)) (darts_of_list L))))) ==> (((uniq (list_of_darts L)) ==> (((permutes (f_list_ext L)) (darts_of_list L)) = T)) ==> ((x IN (darts_of_list L)) /\ ((permutes (f_list_ext L)) (darts_of_list L))))) = (((uniq (list_of_darts L)) ==> (((permutes (f_list_ext L)) (darts_of_list L)) = T)) ==> ((x IN (darts_of_list L)) /\ ((permutes (f_list_ext L)) (darts_of_list L)))))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 c= c==> c/\ cuniq clist_of_darts f0 c==> c= cpermutes * part cf_list_ext f0 * part cdarts_of_list f0 cT c/\ cIN f1 * part cdarts_of_list f0 cpermutes * part cf_list_ext f0 * part cdarts_of_list f0 c==> c==> cuniq clist_of_darts f0 c= cpermutes * part cf_list_ext f0 * part cdarts_of_list f0 cT c/\ cIN f1 * part cdarts_of_list f0 cpermutes * part cf_list_ext f0 * part cdarts_of_list f0 c==> c==> cuniq clist_of_darts f0 c= cpermutes * part cf_list_ext f0 * part cdarts_of_list f0 cT c/\ cIN f1 * part cdarts_of_list f0 cpermutes * part cf_list_ext f0 * part cdarts_of_list f0
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ ((MEM x) (list_of_darts L)) |- ((((permutes (f_list_ext L)) (darts_of_list L)) = T) ==> ((x IN (darts_of_list L)) /\ ((permutes (f_list_ext L)) (darts_of_list L))))
T c==> cMEM f0 clist_of_darts f1 c==> c= cpermutes * part cf_list_ext f1 * part cdarts_of_list f1 cT c/\ cIN f0 * part cdarts_of_list f1 cpermutes * part cf_list_ext f1 * part cdarts_of_list f1
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((MEM x) ((find_face L) x)) |- ((uniq ((find_face L) x)) = ((uniq ((find_face L) x)) /\ ((MEM x) ((find_face L) x))))
T c==> cMEM f0 cfind_face f1 f0 c= cuniq cfind_face f1 f0 c/\ cuniq cfind_face f1 f0 cMEM f0 cfind_face f1 f0
+ (uniq (list_of_darts L)), ((MEM x) (list_of_darts L)) |- ((((orbit_map ((res (f_list L)) (darts_of_list L))) x) = ((orbit_map (f_list L)) x)) ==> (((orbit_map ((res (f_list L)) (darts_of_list L))) x) = (set_of_list ((find_face L) x))))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 c==> c= * * part corbit_map * * part cres * part cf_list f0 * part cdarts_of_list f0 f1 * * part corbit_map * part cf_list f0 f1 c= * * part corbit_map * * part cres * part cf_list f0 * part cdarts_of_list f0 f1 * part cset_of_list cfind_face f0 f1
- (((real_ge (real_of_int _10061198)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10061199)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198)) = (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10061199)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10061199))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10061199))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ (((real_ge (real_of_int _10061198)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10061199)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198)) = (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) ==> (((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x)) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x))))) = ((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) ==> T))
T c= c==> c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c==> c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c==> c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 cT
+ (((MEM x) (list_of_darts L)) /\ (uniq (list_of_darts L))), ((MEM x) (list_of_darts L)) |- (((orbit_map (f_list_ext L)) x) = (set_of_list ((find_face L) x)))
T c==> c/\ cMEM f0 clist_of_darts f1 cuniq clist_of_darts f1 c==> cMEM f0 clist_of_darts f1 c= * * part corbit_map * part cf_list_ext f1 f0 * part cset_of_list cfind_face f1 f0
+ |- (((MEM d) ((find_face L) d)) = ((MEM d) (list_of_darts L)))
T c= cMEM f0 cfind_face f1 f0 cMEM f0 clist_of_darts f1
+ (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)) |- ((((uniq ((find_face L) x)) /\ ((MEM x) ((find_face L) x))) ==> ((((POWER (next_el ((find_face L) x))) n) x) = (((nth x) ((find_face L) x)) ((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x)))))) ==> ((MEM (((POWER (next_el ((find_face L) x))) n) x)) ((find_face L) x)))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 c==> c==> c/\ cuniq cfind_face f0 f1 cMEM f1 cfind_face f0 f1 c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnth f1 cfind_face f0 f1 cMOD c+ cindexl f1 cfind_face f0 f1 f2 csizel cfind_face f0 f1 cMEM cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (uniq (list_of_darts L)) |- ((!d2. ((T /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))) = T)
T c==> cuniq clist_of_darts f0 c= ! c==> c/\ cT cMEM f1 cfind_face f0 b0 c= cfind_face f0 f1 cfind_face f0 b0 cT
+ (uniq (list_of_darts L)), ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x)), ((MEM x) ((find_face L) x)) |- ((((f_list L) o ((POWER (f_list L)) n)) x) = (((POWER (next_el ((find_face L) x))) (SUC n)) x))
T c==> cuniq clist_of_darts f0 c==> c= cPOWER * part cf_list f0 f1 f2 cPOWER * part cnext_el cfind_face f0 f2 f1 f2 c==> cMEM f2 cfind_face f0 f2 c= co * part cf_list f0 * * part cPOWER * part cf_list f0 f1 f2 cPOWER * part cnext_el cfind_face f0 f2 cSUC f1 f2
+ |- ((((~ ((NUMERAL _0) = (sizel ((find_face L) x)))) ==> ((((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))) < (sizel ((find_face L) x))) = T)) ==> (((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))) < (sizel ((find_face L) x)))) = (((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))) < (sizel ((find_face L) x))))
T c= c==> c==> c~ c= cNUMERAL c_0 csizel cfind_face f0 f1 c= c< cMOD c+ cindexl f1 cfind_face f0 f1 f2 csizel cfind_face f0 f1 csizel cfind_face f0 f1 cT c< cMOD c+ cindexl f1 cfind_face f0 f1 f2 csizel cfind_face f0 f1 csizel cfind_face f0 f1 c< cMOD c+ cindexl f1 cfind_face f0 f1 f2 csizel cfind_face f0 f1 csizel cfind_face f0 f1
+ |- ((((((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))) < (sizel ((find_face L) x))) ==> (((MEM (((nth x) ((find_face L) x)) ((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))))) ((find_face L) x)) = T)) ==> ((MEM (((nth x) ((find_face L) x)) ((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))))) ((find_face L) x))) = ((MEM (((nth x) ((find_face L) x)) ((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))))) ((find_face L) x)))
T c= c==> c==> c< cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 csizel cfind_face f1 f0 c= cMEM cnth f0 cfind_face f1 f0 cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 cfind_face f1 f0 cT cMEM cnth f0 cfind_face f1 f0 cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 cfind_face f1 f0 cMEM cnth f0 cfind_face f1 f0 cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 cfind_face f1 f0
+ (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)) |- (!n. (((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x)) ==> ((((POWER (f_list L)) (SUC n)) x) = (((POWER (next_el ((find_face L) x))) (SUC n)) x))))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 ! c==> c= cPOWER * part cf_list f0 b0 f1 cPOWER * part cnext_el cfind_face f0 f1 b0 f1 c= cPOWER * part cf_list f0 cSUC b0 f1 cPOWER * part cnext_el cfind_face f0 f1 cSUC b0 f1
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- (!d1. (!d2. (((MEM d1) ((find_face L) d2)) ==> (((find_face L) d1) = ((find_face L) d2))))) |- ((!d2. (((MEM d1) ((find_face L) d2)) ==> (((find_face L) d1) = ((find_face L) d2)))) = T)
T c==> ! ! c==> cMEM b0 cfind_face f0 b1 c= cfind_face f0 b0 cfind_face f0 b1 c= ! c==> cMEM f1 cfind_face f0 b0 c= cfind_face f0 f1 cfind_face f0 b0 cT
+ |- (((!s. (!n. ((n < (sizel s)) ==> ((MEM (((nth x0) s) n)) s)))) ==> ((\s. (!n. ((n < (sizel s)) ==> ((MEM (((nth x0) s) n)) s)))) s)) = ((\s. (!n. ((n < (sizel s)) ==> ((MEM (((nth x0) s) n)) s)))) s))
T c= c==> ! ! c==> c< b1 csizel b0 cMEM cnth f0 b0 b1 b0 * / ! c==> c< b1 csizel b0 cMEM cnth f0 b0 b1 b0 f1 * / ! c==> c< b1 csizel b0 cMEM cnth f0 b0 b1 b0 f1
+ |- ((\d. (!L. (((MEM d) ((find_face L) d)) = ((MEM d) (list_of_darts L))))) d)
T * / ! c= cMEM b0 cfind_face b1 b0 cMEM b0 clist_of_darts b1 f0
+ |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- ((\x. (((uniq s) /\ ((MEM x) s)) ==> (((orbit_map (next_el s)) x) = (set_of_list s)))) x)
T * / c==> c/\ cuniq f0 cMEM b0 f0 c= * * part corbit_map * part cnext_el f0 b0 * part cset_of_list f0 f1
- (uniq (list_of_darts L)), (((orbit_map (f_list L)) x) = ((orbit_map (next_el ((find_face L) x))) x)), ((MEM x) ((find_face L) x)) |- ((((orbit_map (f_list L)) x) = ((orbit_map (next_el ((find_face L) x))) x)) /\ (((orbit_map (f_list L)) x) = (set_of_list ((find_face L) x))))
T c==> cuniq clist_of_darts f0 c==> c= * * part corbit_map * part cf_list f0 f1 * * part corbit_map * part cnext_el cfind_face f0 f1 f1 c==> cMEM f1 cfind_face f0 f1 c/\ c= * * part corbit_map * part cf_list f0 f1 * * part corbit_map * part cnext_el cfind_face f0 f1 f1 c= * * part corbit_map * part cf_list f0 f1 * part cset_of_list cfind_face f0 f1
- |- (!n1. (((\n1. (n = n1)) n1) ==> (?n1. (n = n1))))
T c==> * / c= f0 b0 f1 c? / c= f0 b0
+ |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10061198)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10061199)) /\ (((real_le ((real_add (real_of_int _10061199)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198)) /\ ((real_of_num (NUMERAL _0)) = (real_of_int _10061198))))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c= creal_of_num cNUMERAL c_0 creal_of_int f0 cF
- (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)) |- (((!n. ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) ==> ((\n. ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) n1)) = ((\n. ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) n1))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 c= c==> ! c= cPOWER * part cf_list f0 b0 f1 cPOWER * part cnext_el cfind_face f0 f1 b0 f1 * / c= cPOWER * part cf_list f0 b0 f1 cPOWER * part cnext_el cfind_face f0 f1 b0 f1 f2 * / c= cPOWER * part cf_list f0 b0 f1 cPOWER * part cnext_el cfind_face f0 f1 b0 f1 f2
+ ((MEM x) ((find_face L) x)) |- (((((POWER (next_el ((find_face L) x))) n) x) = (((nth x) ((find_face L) x)) ((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))))) ==> ((MEM (((POWER (next_el ((find_face L) x))) n) x)) ((find_face L) x)))
T c==> cMEM f0 cfind_face f1 f0 c==> c= cPOWER * part cnext_el cfind_face f1 f0 f2 f0 cnth f0 cfind_face f1 f0 cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 cMEM cPOWER * part cnext_el cfind_face f1 f0 f2 f0 cfind_face f1 f0
+ (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)) |- ((((((POWER (next_el ((find_face L) x))) n) x) = (((nth x) ((find_face L) x)) ((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))))) ==> ((MEM (((POWER (next_el ((find_face L) x))) n) x)) ((find_face L) x))) = (((uniq ((find_face L) x)) /\ ((MEM x) ((find_face L) x))) /\ (((((POWER (next_el ((find_face L) x))) n) x) = (((nth x) ((find_face L) x)) ((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))))) ==> ((MEM (((POWER (next_el ((find_face L) x))) n) x)) ((find_face L) x)))))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 c= c==> c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnth f1 cfind_face f0 f1 cMOD c+ cindexl f1 cfind_face f0 f1 f2 csizel cfind_face f0 f1 cMEM cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c/\ c/\ cuniq cfind_face f0 f1 cMEM f1 cfind_face f0 f1 c==> c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnth f1 cfind_face f0 f1 cMOD c+ cindexl f1 cfind_face f0 f1 f2 csizel cfind_face f0 f1 cMEM cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1
- |- ((\n1. (n = n1)) n)
T * / c= f0 b0 f0
+ |- ((((MEM x) (list_of_darts L)) /\ T) = ((x IN (set_of_list (list_of_darts L))) /\ T))
T c= c/\ cMEM f0 clist_of_darts f1 cT c/\ cIN f0 * part cset_of_list clist_of_darts f1 cT
+ (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)) |- (((((((POWER (f_list L)) (NUMERAL _0)) x) = (((POWER (next_el ((find_face L) x))) (NUMERAL _0)) x)) /\ (!n. (((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x)) ==> ((((POWER (f_list L)) (SUC n)) x) = (((POWER (next_el ((find_face L) x))) (SUC n)) x))))) ==> (!n. ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x)))) = (!n. ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x))))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 c= c==> c/\ c= cPOWER * part cf_list f0 cNUMERAL c_0 f1 cPOWER * part cnext_el cfind_face f0 f1 cNUMERAL c_0 f1 ! c==> c= cPOWER * part cf_list f0 b0 f1 cPOWER * part cnext_el cfind_face f0 f1 b0 f1 c= cPOWER * part cf_list f0 cSUC b0 f1 cPOWER * part cnext_el cfind_face f0 f1 cSUC b0 f1 ! c= cPOWER * part cf_list f0 b0 f1 cPOWER * part cnext_el cfind_face f0 f1 b0 f1 ! c= cPOWER * part cf_list f0 b0 f1 cPOWER * part cnext_el cfind_face f0 f1 b0 f1
+ |- ((!n. (((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x)) ==> ((((POWER (f_list L)) (SUC n)) x) = (((POWER (next_el ((find_face L) x))) (SUC n)) x)))) = (((((POWER (f_list L)) (NUMERAL _0)) x) = (((POWER (next_el ((find_face L) x))) (NUMERAL _0)) x)) /\ (!n. (((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x)) ==> ((((POWER (f_list L)) (SUC n)) x) = (((POWER (next_el ((find_face L) x))) (SUC n)) x))))))
T c= ! c==> c= cPOWER * part cf_list f0 b0 f1 cPOWER * part cnext_el cfind_face f0 f1 b0 f1 c= cPOWER * part cf_list f0 cSUC b0 f1 cPOWER * part cnext_el cfind_face f0 f1 cSUC b0 f1 c/\ c= cPOWER * part cf_list f0 cNUMERAL c_0 f1 cPOWER * part cnext_el cfind_face f0 f1 cNUMERAL c_0 f1 ! c==> c= cPOWER * part cf_list f0 b0 f1 cPOWER * part cnext_el cfind_face f0 f1 b0 f1 c= cPOWER * part cf_list f0 cSUC b0 f1 cPOWER * part cnext_el cfind_face f0 f1 cSUC b0 f1
+ ((MEM x) ((find_face L) x)) |- ((((((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))) < (sizel ((find_face L) x))) /\ ((((MEM (((nth x) ((find_face L) x)) ((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))))) ((find_face L) x)) = T) ==> ((MEM (((nth x) ((find_face L) x)) ((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))))) ((find_face L) x)))) ==> (((((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))) < (sizel ((find_face L) x))) ==> (((MEM (((nth x) ((find_face L) x)) ((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))))) ((find_face L) x)) = T)) ==> ((MEM (((nth x) ((find_face L) x)) ((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))))) ((find_face L) x)))) = (((((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))) < (sizel ((find_face L) x))) ==> (((MEM (((nth x) ((find_face L) x)) ((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))))) ((find_face L) x)) = T)) ==> ((MEM (((nth x) ((find_face L) x)) ((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))))) ((find_face L) x))))
T c==> cMEM f0 cfind_face f1 f0 c= c==> c/\ c< cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 csizel cfind_face f1 f0 c==> c= cMEM cnth f0 cfind_face f1 f0 cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 cfind_face f1 f0 cT cMEM cnth f0 cfind_face f1 f0 cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 cfind_face f1 f0 c==> c==> c< cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 csizel cfind_face f1 f0 c= cMEM cnth f0 cfind_face f1 f0 cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 cfind_face f1 f0 cT cMEM cnth f0 cfind_face f1 f0 cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 cfind_face f1 f0 c==> c==> c< cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 csizel cfind_face f1 f0 c= cMEM cnth f0 cfind_face f1 f0 cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 cfind_face f1 f0 cT cMEM cnth f0 cfind_face f1 f0 cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 cfind_face f1 f0
- ((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) |- ((!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))) ==> (!n. (P n)))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 c==> ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 ! * f0 b0
+ ((((POWER (next_el ((find_face L) x))) n) x) = (((nth x) ((find_face L) x)) ((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))))), ((MEM x) ((find_face L) x)) |- ((MEM (((POWER (next_el ((find_face L) x))) n) x)) ((find_face L) x))
T c==> c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnth f1 cfind_face f0 f1 cMOD c+ cindexl f1 cfind_face f0 f1 f2 csizel cfind_face f0 f1 c==> cMEM f1 cfind_face f0 f1 cMEM cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1
+ (uniq (list_of_darts L)) |- (!d1. (!d2. ((T /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))
T c==> cuniq clist_of_darts f0 ! ! c==> c/\ cT cMEM b0 cfind_face f0 b1 c= cfind_face f0 b0 cfind_face f0 b1
- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))), ((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) |- (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) /\ (!n. (P n)))
T c==> ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 c/\ c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
+ (uniq (list_of_darts L)), ((MEM x) (list_of_darts L)) |- (((orbit_map (f_list_ext L)) x) = (set_of_list ((find_face L) x)))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 c= * * part corbit_map * part cf_list_ext f0 f1 * part cset_of_list cfind_face f0 f1
+ |- (((!g. (!x. (((f o g) x) = (f (g x))))) ==> ((\g. (!x. (((f o g) x) = (f (g x))))) g)) = ((\g. (!x. (((f o g) x) = (f (g x))))) g))
T c= c==> ! ! c= co f0 b0 b1 * f0 * b0 b1 * / ! c= co f0 b0 b1 * f0 * b0 b1 f1 * / ! c= co f0 b0 b1 * f0 * b0 b1 f1
- (n = n1) |- (((((POWER (f_list L)) n1) x) = (((POWER (next_el ((find_face L) x))) n1) x)) = ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x)))
T c==> c= f0 f1 c= c= cPOWER * part cf_list f2 f1 f3 cPOWER * part cnext_el cfind_face f2 f3 f1 f3 c= cPOWER * part cf_list f2 f0 f3 cPOWER * part cnext_el cfind_face f2 f3 f0 f3
+ ((MEM x) ((find_face L) x)) |- ((((~ ((NUMERAL _0) = (sizel ((find_face L) x)))) /\ (((((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))) < (sizel ((find_face L) x))) = T) ==> (((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))) < (sizel ((find_face L) x))))) ==> (((~ ((NUMERAL _0) = (sizel ((find_face L) x)))) ==> ((((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))) < (sizel ((find_face L) x))) = T)) ==> (((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))) < (sizel ((find_face L) x))))) = (((~ ((NUMERAL _0) = (sizel ((find_face L) x)))) ==> ((((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))) < (sizel ((find_face L) x))) = T)) ==> (((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))) < (sizel ((find_face L) x)))))
T c==> cMEM f0 cfind_face f1 f0 c= c==> c/\ c~ c= cNUMERAL c_0 csizel cfind_face f1 f0 c==> c= c< cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 csizel cfind_face f1 f0 cT c< cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 csizel cfind_face f1 f0 c==> c==> c~ c= cNUMERAL c_0 csizel cfind_face f1 f0 c= c< cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 csizel cfind_face f1 f0 cT c< cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 csizel cfind_face f1 f0 c==> c==> c~ c= cNUMERAL c_0 csizel cfind_face f1 f0 c= c< cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 csizel cfind_face f1 f0 cT c< cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 csizel cfind_face f1 f0
- ((MEM x) (list_of_darts L)) |- (((MEM x) (list_of_darts L)) /\ ((uniq (list_of_darts L)) ==> (((orbit_map (f_list_ext L)) x) = (set_of_list ((find_face L) x)))))
T c==> cMEM f0 clist_of_darts f1 c/\ cMEM f0 clist_of_darts f1 c==> cuniq clist_of_darts f1 c= * * part corbit_map * part cf_list_ext f1 f0 * part cset_of_list cfind_face f1 f0
- (n = n1) |- (((((POWER (f_list L)) n1) x) = (((POWER (next_el ((find_face L) x))) n) x)) = ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x)))
T c==> c= f0 f1 c= c= cPOWER * part cf_list f2 f1 f3 cPOWER * part cnext_el cfind_face f2 f3 f0 f3 c= cPOWER * part cf_list f2 f0 f3 cPOWER * part cnext_el cfind_face f2 f3 f0 f3
- (((real_ge (real_of_int _10061198)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10061199)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198)) = (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10061199)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
- (((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)), ((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) ==> (((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x)) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x))))) |- (((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) ==> (((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x)) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x))))) /\ (((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x)) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x)))))
T c==> c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c==> c==> c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c==> c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c/\ c==> c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c==> c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c==> c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. (!s. (((MEM x) s) = (((indexl x) s) < (sizel s))))) ==> ((\x. (!s. (((MEM x) s) = (((indexl x) s) < (sizel s))))) x)) = ((\x. (!s. (((MEM x) s) = (((indexl x) s) < (sizel s))))) x))
T c= c==> ! ! c= cMEM b0 b1 c< cindexl b0 b1 csizel b1 * / ! c= cMEM b0 b1 c< cindexl b0 b1 csizel b1 f0 * / ! c= cMEM b0 b1 c< cindexl b0 b1 csizel b1 f0
+ |- (((!L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) d)))) ==> ((\L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) d)))) L)) = ((\L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) d)))) L))
T c= c==> ! c==> cuniq clist_of_darts b0 cuniq cfind_face b0 f0 * / c==> cuniq clist_of_darts b0 cuniq cfind_face b0 f0 f1 * / c==> cuniq clist_of_darts b0 cuniq cfind_face b0 f0 f1
+ |- ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) ((indexl x) ((find_face L) x)))
T * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 cindexl f0 cfind_face f1 f0
+ |- (((!x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) ==> ((\x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) x)) = ((\x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) x))
T c= c==> ! ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 * / ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 f0 * / ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 f0
+ |- (((!f. (!g. (!x. (((f o g) x) = (f (g x)))))) ==> ((\f. (!g. (!x. (((f o g) x) = (f (g x)))))) f)) = ((\f. (!g. (!x. (((f o g) x) = (f (g x)))))) f))
T c= c==> ! ! ! c= co b0 b1 b2 * b0 * b1 b2 * / ! ! c= co b0 b1 b2 * b0 * b1 b2 f0 * / ! ! c= co b0 b1 b2 * b0 * b1 b2 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. (!s. (((x IN s) /\ ((permutes ((res f) s)) s)) ==> (((orbit_map ((res f) s)) x) = ((orbit_map f) x))))) ==> ((\x. (!s. (((x IN s) /\ ((permutes ((res f) s)) s)) ==> (((orbit_map ((res f) s)) x) = ((orbit_map f) x))))) x)) = ((\x. (!s. (((x IN s) /\ ((permutes ((res f) s)) s)) ==> (((orbit_map ((res f) s)) x) = ((orbit_map f) x))))) x))
T c= c==> ! ! c==> c/\ cIN b0 b1 cpermutes * * part cres f0 b1 b1 c= * * part corbit_map * * part cres f0 b1 b0 * * part corbit_map f0 b0 * / ! c==> c/\ cIN b0 b1 cpermutes * * part cres f0 b1 b1 c= * * part corbit_map * * part cres f0 b1 b0 * * part corbit_map f0 b0 f1 * / ! c==> c/\ cIN b0 b1 cpermutes * * part cres f0 b1 b1 c= * * part corbit_map * * part cres f0 b1 b0 * * part corbit_map f0 b0 f1
+ (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)) |- ((MEM (((POWER (next_el ((find_face L) x))) n) x)) ((find_face L) x))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 cMEM cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1
+ ((f_list_ext L) = ((res (f_list L)) (darts_of_list L))) |- (((res (f_list L)) (darts_of_list L)) = (f_list_ext L))
T c==> c= * part cf_list_ext f0 * * part cres * part cf_list f0 * part cdarts_of_list f0 c= * * part cres * part cf_list f0 * part cdarts_of_list f0 * part cf_list_ext f0
+ |- ((I x) = (((POWER (next_el ((find_face L) x))) (NUMERAL _0)) x))
T c= cI f0 cPOWER * part cnext_el cfind_face f1 f0 cNUMERAL c_0 f0
+ |- (((int_le (int_of_num (NUMERAL _0))) (int_of_num ((indexl x) ((find_face L) x)))) ==> ((~ ((int_lt (int_of_num ((indexl x) ((find_face L) x)))) (int_of_num (sizel ((find_face L) x))))) \/ (~ ((int_of_num (NUMERAL _0)) = (int_of_num (sizel ((find_face L) x)))))))
T c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num cindexl f0 cfind_face f1 f0 c\/ c~ cint_lt cint_of_num cindexl f0 cfind_face f1 f0 cint_of_num csizel cfind_face f1 f0 c~ c= cint_of_num cNUMERAL c_0 cint_of_num csizel cfind_face f1 f0
+ ((MEM x) (list_of_darts L)) |- (((MEM x) (list_of_darts L)) = T)
T c==> cMEM f0 clist_of_darts f1 c= cMEM f0 clist_of_darts f1 cT
- (!d1. (!d2. (((MEM d1) ((find_face L) d2)) ==> (((find_face L) d1) = ((find_face L) d2))))) |- ((!d1. (!d2. (((MEM d1) ((find_face L) d2)) ==> (((find_face L) d1) = ((find_face L) d2))))) /\ (!d1. (!d2. (((MEM d1) ((find_face L) d2)) ==> (((find_face L) d1) = ((find_face L) d2))))))
T c==> ! ! c==> cMEM b0 cfind_face f0 b1 c= cfind_face f0 b0 cfind_face f0 b1 c/\ ! ! c==> cMEM b0 cfind_face f0 b1 c= cfind_face f0 b0 cfind_face f0 b1 ! ! c==> cMEM b0 cfind_face f0 b1 c= cfind_face f0 b0 cfind_face f0 b1
- |- ((T ==> A) = A)
T c= c==> cT f0 f0
+ (uniq (list_of_darts L)), ((MEM x) (list_of_darts L)) |- (((x IN (darts_of_list L)) /\ ((permutes ((res (f_list L)) (darts_of_list L))) (darts_of_list L))) /\ ((((orbit_map ((res (f_list L)) (darts_of_list L))) x) = ((orbit_map (f_list L)) x)) ==> (((orbit_map ((res (f_list L)) (darts_of_list L))) x) = (set_of_list ((find_face L) x)))))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 c/\ c/\ cIN f1 * part cdarts_of_list f0 cpermutes * * part cres * part cf_list f0 * part cdarts_of_list f0 * part cdarts_of_list f0 c==> c= * * part corbit_map * * part cres * part cf_list f0 * part cdarts_of_list f0 f1 * * part corbit_map * part cf_list f0 f1 c= * * part corbit_map * * part cres * part cf_list f0 * part cdarts_of_list f0 f1 * part cset_of_list cfind_face f0 f1
- (((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)), ((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) ==> (((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x)) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x))))) |- ((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x)) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x)))))
T c==> c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c==> c==> c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c==> c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c/\ c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c==> c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
- (((real_ge (real_of_int _10061198)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10061199)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198)) = (real_of_num (NUMERAL _0)))))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198))) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- (((!d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) ==> ((\d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) d1)) = ((\d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) d1))
T c= c==> ! ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 * / ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 f0 * / ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 f0
+ (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)) |- (((((orbit_map (next_el ((find_face L) x))) x) = (set_of_list ((find_face L) x))) ==> (((orbit_map (next_el ((find_face L) x))) x) = (set_of_list ((find_face L) x)))) = (((uniq ((find_face L) x)) /\ ((MEM x) ((find_face L) x))) /\ ((((orbit_map (next_el ((find_face L) x))) x) = (set_of_list ((find_face L) x))) ==> (((orbit_map (next_el ((find_face L) x))) x) = (set_of_list ((find_face L) x))))))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 c= c==> c= * * part corbit_map * part cnext_el cfind_face f0 f1 f1 * part cset_of_list cfind_face f0 f1 c= * * part corbit_map * part cnext_el cfind_face f0 f1 f1 * part cset_of_list cfind_face f0 f1 c/\ c/\ cuniq cfind_face f0 f1 cMEM f1 cfind_face f0 f1 c==> c= * * part corbit_map * part cnext_el cfind_face f0 f1 f1 * part cset_of_list cfind_face f0 f1 c= * * part corbit_map * part cnext_el cfind_face f0 f1 f1 * part cset_of_list cfind_face f0 f1
+ ((MEM x) (list_of_darts L)) |- ((x IN (set_of_list (list_of_darts L))) /\ T)
T c==> cMEM f0 clist_of_darts f1 c/\ cIN f0 * part cset_of_list clist_of_darts f1 cT
+ ((MEM x) ((find_face L) x)) |- (((~ ((NUMERAL _0) = (sizel ((find_face L) x)))) ==> ((((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))) < (sizel ((find_face L) x))) = T)) ==> (((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))) < (sizel ((find_face L) x))))
T c==> cMEM f0 cfind_face f1 f0 c==> c==> c~ c= cNUMERAL c_0 csizel cfind_face f1 f0 c= c< cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 csizel cfind_face f1 f0 cT c< cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 csizel cfind_face f1 f0
- (((orbit_map (next_el ((find_face L) x))) x) = (set_of_list ((find_face L) x))) |- (((set_of_list ((find_face L) x)) = (set_of_list ((find_face L) x))) = (((orbit_map (next_el ((find_face L) x))) x) = (set_of_list ((find_face L) x))))
T c==> c= * * part corbit_map * part cnext_el cfind_face f0 f1 f1 * part cset_of_list cfind_face f0 f1 c= c= * part cset_of_list cfind_face f0 f1 * part cset_of_list cfind_face f0 f1 c= * * part corbit_map * part cnext_el cfind_face f0 f1 f1 * part cset_of_list cfind_face f0 f1
+ |- ((\L. (((res (f_list L)) (darts_of_list L)) = (f_list_ext L))) L)
T * / c= * * part cres * part cf_list b0 * part cdarts_of_list b0 * part cf_list_ext b0 f0
+ (uniq (list_of_darts L)), ((MEM x) (list_of_darts L)) |- ((x IN (darts_of_list L)) /\ ((permutes (f_list_ext L)) (darts_of_list L)))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 c/\ cIN f1 * part cdarts_of_list f0 cpermutes * part cf_list_ext f0 * part cdarts_of_list f0
+ (!d1. (!d2. (((MEM d1) ((find_face L) d2)) ==> (((find_face L) d1) = ((find_face L) d2))))), (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)) |- ((!d1. (!d2. (((MEM d1) ((find_face L) d2)) ==> (((find_face L) d1) = ((find_face L) d2))))) /\ (((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)))
T c==> ! ! c==> cMEM b0 cfind_face f0 b1 c= cfind_face f0 b0 cfind_face f0 b1 c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 c/\ ! ! c==> cMEM b0 cfind_face f0 b1 c= cfind_face f0 b0 cfind_face f0 b1 c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (!d1. (!d2. (((MEM d1) ((find_face L) d2)) ==> (((find_face L) d1) = ((find_face L) d2))))), ((MEM d1) ((find_face L) d2)) |- ((!d1. (!d2. (((MEM d1) ((find_face L) d2)) ==> (((find_face L) d1) = ((find_face L) d2))))) /\ (((find_face L) d1) = ((find_face L) d2)))
T c==> ! ! c==> cMEM b0 cfind_face f0 b1 c= cfind_face f0 b0 cfind_face f0 b1 c==> cMEM f1 cfind_face f0 f2 c/\ ! ! c==> cMEM b0 cfind_face f0 b1 c= cfind_face f0 b0 cfind_face f0 b1 c= cfind_face f0 f1 cfind_face f0 f2
+ (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)) |- (((orbit_map (next_el ((find_face L) x))) x) = (set_of_list ((find_face L) x)))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 c= * * part corbit_map * part cnext_el cfind_face f0 f1 f1 * part cset_of_list cfind_face f0 f1
- (((real_ge (real_of_int _10061198)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10061199)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198)) = (real_of_num (NUMERAL _0)))))) |- (!x. (((real_mul x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198))) = (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ (uniq (list_of_darts L1)), ((MEM d1) ((find_face L1) d2)) |- ((uniq (list_of_darts L1)) /\ (((find_face L1) d1) = ((find_face L1) d2)))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f2 c/\ cuniq clist_of_darts f0 c= cfind_face f0 f1 cfind_face f0 f2
+ (((res (f_list L)) (darts_of_list L)) = (f_list_ext L)) |- ((f_list_ext L) = ((res (f_list L)) (darts_of_list L)))
T c==> c= * * part cres * part cf_list f0 * part cdarts_of_list f0 * part cf_list_ext f0 c= * part cf_list_ext f0 * * part cres * part cf_list f0 * part cdarts_of_list f0
+ |- (((A /\ B) ==> C) ==> (A ==> (B ==> C)))
T c==> c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2
+ (uniq (list_of_darts L)) |- (!d1. (!d2. (((MEM d1) ((find_face L) d2)) ==> (((find_face L) d1) = ((find_face L) d2)))))
T c==> cuniq clist_of_darts f0 ! ! c==> cMEM b0 cfind_face f0 b1 c= cfind_face f0 b0 cfind_face f0 b1
+ ((MEM x) ((find_face L) x)) |- (((((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))) < (sizel ((find_face L) x))) ==> (((MEM (((nth x) ((find_face L) x)) ((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))))) ((find_face L) x)) = T)) ==> ((MEM (((nth x) ((find_face L) x)) ((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))))) ((find_face L) x)))
T c==> cMEM f0 cfind_face f1 f0 c==> c==> c< cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 csizel cfind_face f1 f0 c= cMEM cnth f0 cfind_face f1 f0 cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 cfind_face f1 f0 cT cMEM cnth f0 cfind_face f1 f0 cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 cfind_face f1 f0
+ (!d1. (!d2. (((MEM d1) ((find_face L) d2)) ==> (((find_face L) d1) = ((find_face L) d2))))), (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)) |- (((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x))
T c==> ! ! c==> cMEM b0 cfind_face f0 b1 c= cfind_face f0 b0 cfind_face f0 b1 c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1
+ (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)) |- (((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x)) = ((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) /\ ((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x))))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 c= c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c/\ c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)) |- ((((MEM (((POWER (next_el ((find_face L) x))) n) x)) ((find_face L) x)) ==> (((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x))) = (((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 c= c==> cMEM cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1
- (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)) |- ((((\n1. (n = n1)) n1) ==> ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) = T)
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 c= c==> * / c= f2 b0 f3 c= cPOWER * part cf_list f0 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cT
- ((x IN s) /\ ((permutes ((res f) s)) s)) |- (((x IN s) /\ ((permutes ((res f) s)) s)) /\ (((orbit_map ((res f) s)) x) = ((orbit_map f) x)))
T c==> c/\ cIN f0 f1 cpermutes * * part cres f2 f1 f1 c/\ c/\ cIN f0 f1 cpermutes * * part cres f2 f1 f1 c= * * part corbit_map * * part cres f2 f1 f0 * * part corbit_map f2 f0
+ (uniq (list_of_darts L)), ((MEM x) (list_of_darts L)) |- (((((x IN (darts_of_list L)) /\ ((permutes ((res (f_list L)) (darts_of_list L))) (darts_of_list L))) /\ ((((orbit_map ((res (f_list L)) (darts_of_list L))) x) = ((orbit_map (f_list L)) x)) ==> (((orbit_map ((res (f_list L)) (darts_of_list L))) x) = (set_of_list ((find_face L) x))))) ==> ((((x IN (darts_of_list L)) /\ ((permutes ((res (f_list L)) (darts_of_list L))) (darts_of_list L))) ==> (((orbit_map ((res (f_list L)) (darts_of_list L))) x) = ((orbit_map (f_list L)) x))) ==> (((orbit_map ((res (f_list L)) (darts_of_list L))) x) = (set_of_list ((find_face L) x))))) = ((((x IN (darts_of_list L)) /\ ((permutes ((res (f_list L)) (darts_of_list L))) (darts_of_list L))) ==> (((orbit_map ((res (f_list L)) (darts_of_list L))) x) = ((orbit_map (f_list L)) x))) ==> (((orbit_map ((res (f_list L)) (darts_of_list L))) x) = (set_of_list ((find_face L) x)))))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 c= c==> c/\ c/\ cIN f1 * part cdarts_of_list f0 cpermutes * * part cres * part cf_list f0 * part cdarts_of_list f0 * part cdarts_of_list f0 c==> c= * * part corbit_map * * part cres * part cf_list f0 * part cdarts_of_list f0 f1 * * part corbit_map * part cf_list f0 f1 c= * * part corbit_map * * part cres * part cf_list f0 * part cdarts_of_list f0 f1 * part cset_of_list cfind_face f0 f1 c==> c==> c/\ cIN f1 * part cdarts_of_list f0 cpermutes * * part cres * part cf_list f0 * part cdarts_of_list f0 * part cdarts_of_list f0 c= * * part corbit_map * * part cres * part cf_list f0 * part cdarts_of_list f0 f1 * * part corbit_map * part cf_list f0 f1 c= * * part corbit_map * * part cres * part cf_list f0 * part cdarts_of_list f0 f1 * part cset_of_list cfind_face f0 f1 c==> c==> c/\ cIN f1 * part cdarts_of_list f0 cpermutes * * part cres * part cf_list f0 * part cdarts_of_list f0 * part cdarts_of_list f0 c= * * part corbit_map * * part cres * part cf_list f0 * part cdarts_of_list f0 f1 * * part corbit_map * part cf_list f0 f1 c= * * part corbit_map * * part cres * part cf_list f0 * part cdarts_of_list f0 f1 * part cset_of_list cfind_face f0 f1
- (((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) |- (((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) ==> (((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x)) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x))))) ==> (((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x)) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x)))))
T c==> c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c==> c==> c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c==> c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c==> c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
- |- (((MEM x) (list_of_darts L)) ==> ((uniq (list_of_darts L)) ==> (((orbit_map (f_list_ext L)) x) = (set_of_list ((find_face L) x)))))
T c==> cMEM f0 clist_of_darts f1 c==> cuniq clist_of_darts f1 c= * * part corbit_map * part cf_list_ext f1 f0 * part cset_of_list cfind_face f1 f0
- |- (T = ((set_of_list ((find_face L) x)) = (set_of_list ((find_face L) x))))
T c= cT c= * part cset_of_list cfind_face f0 f1 * part cset_of_list cfind_face f0 f1
- |- ((n = n1) = ((\n1. (n = n1)) n1))
T c= c= f0 f1 * / c= f0 b0 f1
+ |- (((!f. (((POWER f) (NUMERAL _0)) = I)) ==> ((\f. (((POWER f) (NUMERAL _0)) = I)) f)) = ((\f. (((POWER f) (NUMERAL _0)) = I)) f))
T c= c==> ! c= * * part cPOWER b0 cNUMERAL c_0 part cI * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0 * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0
+ |- ((\x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) x)
T * / ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 f0
+ (((real_ge (real_of_int _10061198)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10061199)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198)) = (real_of_num (NUMERAL _0)))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10061199)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
+ ((MEM d1) ((find_face L) d2)) |- ((uniq (list_of_darts L)) ==> (((find_face L) d1) = ((find_face L) d2)))
T c==> cMEM f0 cfind_face f1 f2 c==> cuniq clist_of_darts f1 c= cfind_face f1 f0 cfind_face f1 f2
+ |- ((\s. (!x'. (!i. (((uniq s) /\ ((MEM x') s)) ==> ((((POWER (next_el s)) i) x') = (((nth x) s) ((((indexl x') s) + i) MOD (sizel s)))))))) s)
T * / ! ! c==> c/\ cuniq b0 cMEM b1 b0 c= cPOWER * part cnext_el b0 b2 b1 cnth f0 b0 cMOD c+ cindexl b1 b0 b2 csizel b0 f1
+ |- ((\f. (!x. (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5390. (?n. (((SETSPEC GEN%PVAR%5390) (n >= (NUMERAL _0))) (((POWER f) n) x)))))))) f)
T * / ! c= * * part corbit_map b0 b1 * part cGSPEC / c? / cSETSPEC b2 c>= b3 cNUMERAL c_0 cPOWER b0 b3 b1 f0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))) |- ((\P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))) P)
T c==> ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 * / c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 f0
+ ((MEM x) ((find_face L) x)) |- (((MEM x) ((find_face L) x)) = T)
T c==> cMEM f0 cfind_face f1 f0 c= cMEM f0 cfind_face f1 f0 cT
- |- (T = ((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x)))
T c= cT c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
+ |- ((\L. (!d. (((f_list L) d) = ((next_el ((find_face L) d)) d)))) L)
T * / ! c= cf_list b0 b1 cnext_el cfind_face b0 b1 b1 f0
+ |- (~ (~ (((int_le (int_of_num (NUMERAL _0))) _10061198) ==> (((int_le (int_of_num (NUMERAL _0))) _10061199) ==> ((~ ((int_lt _10061199) _10061198)) \/ (~ ((int_of_num (NUMERAL _0)) = _10061198)))))))
T c~ c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c\/ c~ cint_lt f1 f0 c~ c= cint_of_num cNUMERAL c_0 f0
+ (uniq (list_of_darts L)), ((MEM x) (list_of_darts L)) |- (((uniq (list_of_darts L)) ==> (((permutes (f_list_ext L)) (darts_of_list L)) = T)) ==> ((x IN (darts_of_list L)) /\ ((permutes (f_list_ext L)) (darts_of_list L))))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 c==> c==> cuniq clist_of_darts f0 c= cpermutes * part cf_list_ext f0 * part cdarts_of_list f0 cT c/\ cIN f1 * part cdarts_of_list f0 cpermutes * part cf_list_ext f0 * part cdarts_of_list f0
+ ((((m DIV n) * n) + (m MOD n)) = m) |- (m = (((m DIV n) * n) + (m MOD n)))
T c==> c= c+ c* cDIV f0 f1 f1 cMOD f0 f1 f0 c= f0 c+ c* cDIV f0 f1 f1 cMOD f0 f1
+ (uniq (list_of_darts L)), ((MEM x) (list_of_darts L)) |- (((((orbit_map ((res (f_list L)) (darts_of_list L))) x) = ((orbit_map (f_list L)) x)) ==> (((orbit_map ((res (f_list L)) (darts_of_list L))) x) = (set_of_list ((find_face L) x)))) = (((x IN (darts_of_list L)) /\ ((permutes ((res (f_list L)) (darts_of_list L))) (darts_of_list L))) /\ ((((orbit_map ((res (f_list L)) (darts_of_list L))) x) = ((orbit_map (f_list L)) x)) ==> (((orbit_map ((res (f_list L)) (darts_of_list L))) x) = (set_of_list ((find_face L) x))))))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 c= c==> c= * * part corbit_map * * part cres * part cf_list f0 * part cdarts_of_list f0 f1 * * part corbit_map * part cf_list f0 f1 c= * * part corbit_map * * part cres * part cf_list f0 * part cdarts_of_list f0 f1 * part cset_of_list cfind_face f0 f1 c/\ c/\ cIN f1 * part cdarts_of_list f0 cpermutes * * part cres * part cf_list f0 * part cdarts_of_list f0 * part cdarts_of_list f0 c==> c= * * part corbit_map * * part cres * part cf_list f0 * part cdarts_of_list f0 f1 * * part corbit_map * part cf_list f0 f1 c= * * part corbit_map * * part cres * part cf_list f0 * part cdarts_of_list f0 f1 * part cset_of_list cfind_face f0 f1
+ (!n. ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) |- ((\n. ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) n)
T c==> ! c= cPOWER * part cf_list f0 b0 f1 cPOWER * part cnext_el cfind_face f0 f1 b0 f1 * / c= cPOWER * part cf_list f0 b0 f1 cPOWER * part cnext_el cfind_face f0 f1 b0 f1 f2
+ (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)) |- (((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x)) ==> ((((POWER (f_list L)) (SUC n)) x) = (((POWER (next_el ((find_face L) x))) (SUC n)) x)))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 c==> c= cPOWER * part cf_list f0 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cPOWER * part cf_list f0 cSUC f2 f1 cPOWER * part cnext_el cfind_face f0 f1 cSUC f2 f1
- |- ((((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) ==> (((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x)) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x))))) ==> ((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) ==> (((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x)) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x)))))) = ((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) ==> (((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x)) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x))))))
T c= c==> c==> c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c==> c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c==> c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c==> c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c==> c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c==> c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
+ (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)) |- (((uniq ((find_face L) x)) /\ ((MEM x) ((find_face L) x))) /\ (((((POWER (next_el ((find_face L) x))) n) x) = (((nth x) ((find_face L) x)) ((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))))) ==> ((MEM (((POWER (next_el ((find_face L) x))) n) x)) ((find_face L) x))))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 c/\ c/\ cuniq cfind_face f0 f1 cMEM f1 cfind_face f0 f1 c==> c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnth f1 cfind_face f0 f1 cMOD c+ cindexl f1 cfind_face f0 f1 f2 csizel cfind_face f0 f1 cMEM cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((real_ge x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 f1 creal_of_num cNUMERAL c_0
+ (n = (NUMERAL _0)) |- ((NUMERAL _0) = n)
T c==> c= f0 cNUMERAL c_0 c= cNUMERAL c_0 f0
- (((real_ge (real_of_int _10061198)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10061199)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198)) = (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!s. (!x'. (!i. (((uniq s) /\ ((MEM x') s)) ==> ((((POWER (next_el s)) i) x') = (((nth x) s) ((((indexl x') s) + i) MOD (sizel s)))))))) ==> ((\s. (!x'. (!i. (((uniq s) /\ ((MEM x') s)) ==> ((((POWER (next_el s)) i) x') = (((nth x) s) ((((indexl x') s) + i) MOD (sizel s)))))))) s)) = ((\s. (!x'. (!i. (((uniq s) /\ ((MEM x') s)) ==> ((((POWER (next_el s)) i) x') = (((nth x) s) ((((indexl x') s) + i) MOD (sizel s)))))))) s))
T c= c==> ! ! ! c==> c/\ cuniq b0 cMEM b1 b0 c= cPOWER * part cnext_el b0 b2 b1 cnth f0 b0 cMOD c+ cindexl b1 b0 b2 csizel b0 * / ! ! c==> c/\ cuniq b0 cMEM b1 b0 c= cPOWER * part cnext_el b0 b2 b1 cnth f0 b0 cMOD c+ cindexl b1 b0 b2 csizel b0 f1 * / ! ! c==> c/\ cuniq b0 cMEM b1 b0 c= cPOWER * part cnext_el b0 b2 b1 cnth f0 b0 cMOD c+ cindexl b1 b0 b2 csizel b0 f1
+ |- ((((uniq (list_of_darts L)) ==> ((uniq ((find_face L) x)) = T)) ==> ((uniq ((find_face L) x)) /\ ((MEM x) ((find_face L) x)))) = ((uniq ((find_face L) x)) /\ ((MEM x) ((find_face L) x))))
T c= c==> c==> cuniq clist_of_darts f0 c= cuniq cfind_face f0 f1 cT c/\ cuniq cfind_face f0 f1 cMEM f1 cfind_face f0 f1 c/\ cuniq cfind_face f0 f1 cMEM f1 cfind_face f0 f1
+ |- (((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) /\ ((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x))))
T c==> c/\ c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
+ ((MEM x) ((find_face L) x)) |- (~ ((NUMERAL _0) = (sizel ((find_face L) x))))
T c==> cMEM f0 cfind_face f1 f0 c~ c= cNUMERAL c_0 csizel cfind_face f1 f0
+ |- ((\n. (!f. (((POWER f) (SUC n)) = (f o ((POWER f) n))))) n)
T * / ! c= * * part cPOWER b1 cSUC b0 * * part co b1 * * part cPOWER b1 b0 f0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- (((!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) ==> ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) ((indexl x) ((find_face L) x)))) = ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) ((indexl x) ((find_face L) x))))
T c= c==> ! cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 cindexl f0 cfind_face f1 f0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 cindexl f0 cfind_face f1 f0
+ ((MEM x) (list_of_darts L)) |- ((MEM x) ((find_face L) x))
T c==> cMEM f0 clist_of_darts f1 cMEM f0 cfind_face f1 f0
+ (uniq (list_of_darts L)) |- (((!d1. (!d2. (((MEM d1) ((find_face L) d2)) ==> (((find_face L) d1) = ((find_face L) d2))))) ==> (((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x))) = (((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)))
T c==> cuniq clist_of_darts f0 c= c==> ! ! c==> cMEM b0 cfind_face f0 b1 c= cfind_face f0 b0 cfind_face f0 b1 c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1
+ |- ((\s. (!x. (((uniq s) /\ ((MEM x) s)) ==> (((orbit_map (next_el s)) x) = (set_of_list s))))) s)
T * / ! c==> c/\ cuniq b0 cMEM b1 b0 c= * * part corbit_map * part cnext_el b0 b1 * part cset_of_list b0 f0
+ |- ((uniq (list_of_darts L)) ==> ((uniq ((find_face L) d)) = T))
T c==> cuniq clist_of_darts f0 c= cuniq cfind_face f0 f1 cT
+ |- ((\s. (((x IN s) /\ ((permutes ((res f) s)) s)) ==> (((orbit_map ((res f) s)) x) = ((orbit_map f) x)))) s)
T * / c==> c/\ cIN f0 b0 cpermutes * * part cres f1 b0 b0 c= * * part corbit_map * * part cres f1 b0 f0 * * part corbit_map f1 f0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (uniq (list_of_darts L)) |- ((T /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))
T c==> cuniq clist_of_darts f0 c==> c/\ cT cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2
+ ((((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))) < (sizel ((find_face L) x))) = T) |- (((((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))) < (sizel ((find_face L) x))) = T) /\ (((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))) < (sizel ((find_face L) x))))
T c==> c= c< cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 csizel cfind_face f1 f0 cT c/\ c= c< cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 csizel cfind_face f1 f0 cT c< cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 csizel cfind_face f1 f0
+ ((MEM x) (list_of_darts L)) |- (((MEM x) (list_of_darts L)) /\ T)
T c==> cMEM f0 clist_of_darts f1 c/\ cMEM f0 clist_of_darts f1 cT
+ (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)) |- (((((uniq ((find_face L) x)) /\ ((MEM x) ((find_face L) x))) /\ (((((POWER (next_el ((find_face L) x))) n) x) = (((nth x) ((find_face L) x)) ((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))))) ==> ((MEM (((POWER (next_el ((find_face L) x))) n) x)) ((find_face L) x)))) ==> ((((uniq ((find_face L) x)) /\ ((MEM x) ((find_face L) x))) ==> ((((POWER (next_el ((find_face L) x))) n) x) = (((nth x) ((find_face L) x)) ((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x)))))) ==> ((MEM (((POWER (next_el ((find_face L) x))) n) x)) ((find_face L) x)))) = ((((uniq ((find_face L) x)) /\ ((MEM x) ((find_face L) x))) ==> ((((POWER (next_el ((find_face L) x))) n) x) = (((nth x) ((find_face L) x)) ((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x)))))) ==> ((MEM (((POWER (next_el ((find_face L) x))) n) x)) ((find_face L) x))))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 c= c==> c/\ c/\ cuniq cfind_face f0 f1 cMEM f1 cfind_face f0 f1 c==> c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnth f1 cfind_face f0 f1 cMOD c+ cindexl f1 cfind_face f0 f1 f2 csizel cfind_face f0 f1 cMEM cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c==> c==> c/\ cuniq cfind_face f0 f1 cMEM f1 cfind_face f0 f1 c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnth f1 cfind_face f0 f1 cMOD c+ cindexl f1 cfind_face f0 f1 f2 csizel cfind_face f0 f1 cMEM cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c==> c==> c/\ cuniq cfind_face f0 f1 cMEM f1 cfind_face f0 f1 c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnth f1 cfind_face f0 f1 cMOD c+ cindexl f1 cfind_face f0 f1 f2 csizel cfind_face f0 f1 cMEM cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1
+ ((((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))) < (sizel ((find_face L) x))) = T) |- (T = (((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))) < (sizel ((find_face L) x))))
T c==> c= c< cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 csizel cfind_face f1 f0 cT c= cT c< cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 csizel cfind_face f1 f0
+ ((MEM x) (list_of_darts L)) |- ((x IN (darts_of_list L)) /\ T)
T c==> cMEM f0 clist_of_darts f1 c/\ cIN f0 * part cdarts_of_list f1 cT
- (((real_ge (real_of_int _10061198)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10061199)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198)) = (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10061199))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ (uniq (list_of_darts L)), ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x)), ((MEM x) ((find_face L) x)) |- (((f_list L) (((POWER (f_list L)) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x)))
T c==> cuniq clist_of_darts f0 c==> c= cPOWER * part cf_list f0 f1 f2 cPOWER * part cnext_el cfind_face f0 f2 f1 f2 c==> cMEM f2 cfind_face f0 f2 c= cf_list f0 cPOWER * part cf_list f0 f1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 f1 f2
- (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)) |- ((?n1. (n = n1)) ==> ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x)))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 c==> c? / c= f2 b0 c= cPOWER * part cf_list f0 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
+ ((uniq ((find_face L) x)) = T), ((MEM x) ((find_face L) x)) |- ((uniq ((find_face L) x)) /\ ((MEM x) ((find_face L) x)))
T c==> c= cuniq cfind_face f0 f1 cT c==> cMEM f1 cfind_face f0 f1 c/\ cuniq cfind_face f0 f1 cMEM f1 cfind_face f0 f1
+ |- (((!x'. (!i. (((uniq s) /\ ((MEM x') s)) ==> ((((POWER (next_el s)) i) x') = (((nth x) s) ((((indexl x') s) + i) MOD (sizel s))))))) ==> ((\x'. (!i. (((uniq s) /\ ((MEM x') s)) ==> ((((POWER (next_el s)) i) x') = (((nth x) s) ((((indexl x') s) + i) MOD (sizel s))))))) x')) = ((\x'. (!i. (((uniq s) /\ ((MEM x') s)) ==> ((((POWER (next_el s)) i) x') = (((nth x) s) ((((indexl x') s) + i) MOD (sizel s))))))) x'))
T c= c==> ! ! c==> c/\ cuniq f0 cMEM b0 f0 c= cPOWER * part cnext_el f0 b1 b0 cnth f1 f0 cMOD c+ cindexl b0 f0 b1 csizel f0 * / ! c==> c/\ cuniq f0 cMEM b0 f0 c= cPOWER * part cnext_el f0 b1 b0 cnth f1 f0 cMOD c+ cindexl b0 f0 b1 csizel f0 f2 * / ! c==> c/\ cuniq f0 cMEM b0 f0 c= cPOWER * part cnext_el f0 b1 b0 cnth f1 f0 cMOD c+ cindexl b0 f0 b1 csizel f0 f2
+ |- (((!x0. (!s. (!x. (!i. (((uniq s) /\ ((MEM x) s)) ==> ((((POWER (next_el s)) i) x) = (((nth x0) s) ((((indexl x) s) + i) MOD (sizel s))))))))) ==> ((\x0. (!s. (!x. (!i. (((uniq s) /\ ((MEM x) s)) ==> ((((POWER (next_el s)) i) x) = (((nth x0) s) ((((indexl x) s) + i) MOD (sizel s))))))))) x)) = ((\x0. (!s. (!x. (!i. (((uniq s) /\ ((MEM x) s)) ==> ((((POWER (next_el s)) i) x) = (((nth x0) s) ((((indexl x) s) + i) MOD (sizel s))))))))) x))
T c= c==> ! ! ! ! c==> c/\ cuniq b1 cMEM b2 b1 c= cPOWER * part cnext_el b1 b3 b2 cnth b0 b1 cMOD c+ cindexl b2 b1 b3 csizel b1 * / ! ! ! c==> c/\ cuniq b1 cMEM b2 b1 c= cPOWER * part cnext_el b1 b3 b2 cnth b0 b1 cMOD c+ cindexl b2 b1 b3 csizel b1 f0 * / ! ! ! c==> c/\ cuniq b1 cMEM b2 b1 c= cPOWER * part cnext_el b1 b3 b2 cnth b0 b1 cMOD c+ cindexl b2 b1 b3 csizel b1 f0
- |- ((?n1. (n = n1)) ==> (?n1. (n = n1)))
T c==> c? / c= f0 b0 c? / c= f0 b0
+ |- (((res (f_list L)) (darts_of_list L)) = (f_list_ext L))
T c= * * part cres * part cf_list f0 * part cdarts_of_list f0 * part cf_list_ext f0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)
T * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
+ (((MEM (((nth x) ((find_face L) x)) ((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))))) ((find_face L) x)) = T) |- ((((MEM (((nth x) ((find_face L) x)) ((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))))) ((find_face L) x)) = T) /\ ((MEM (((nth x) ((find_face L) x)) ((((indexl x) ((find_face L) x)) + n) MOD (sizel ((find_face L) x))))) ((find_face L) x)))
T c==> c= cMEM cnth f0 cfind_face f1 f0 cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 cfind_face f1 f0 cT c/\ c= cMEM cnth f0 cfind_face f1 f0 cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 cfind_face f1 f0 cT cMEM cnth f0 cfind_face f1 f0 cMOD c+ cindexl f0 cfind_face f1 f0 f2 csizel cfind_face f1 f0 cfind_face f1 f0
- (~ ((NUMERAL _0) = n)) |- ((~ ((NUMERAL _0) = n)) /\ ((((m DIV n) * n) + (m MOD n)) = m))
T c==> c~ c= cNUMERAL c_0 f0 c/\ c~ c= cNUMERAL c_0 f0 c= c+ c* cDIV f1 f0 f0 cMOD f1 f0 f1
+ |- (((!x0. (!s. (!n. ((n < (sizel s)) ==> ((MEM (((nth x0) s) n)) s))))) ==> ((\x0. (!s. (!n. ((n < (sizel s)) ==> ((MEM (((nth x0) s) n)) s))))) x0)) = ((\x0. (!s. (!n. ((n < (sizel s)) ==> ((MEM (((nth x0) s) n)) s))))) x0))
T c= c==> ! ! ! c==> c< b2 csizel b1 cMEM cnth b0 b1 b2 b1 * / ! ! c==> c< b2 csizel b1 cMEM cnth b0 b1 b2 b1 f0 * / ! ! c==> c< b2 csizel b1 cMEM cnth b0 b1 b2 b1 f0
- ((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) /\ ((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x))), (((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) /\ ((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x)))) |- ((((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) /\ ((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x)))) /\ (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x))))
T c==> c/\ c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c==> c==> c/\ c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c/\ c==> c/\ c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
- (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)), ((\n1. (n = n1)) n1) |- (((\n1. (n = n1)) n1) /\ ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x)))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 c==> * / c= f2 b0 f3 c/\ * / c= f2 b0 f3 c= cPOWER * part cf_list f0 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
- (n = n1) |- (n1 = n)
T c==> c= f0 f1 c= f1 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) /\ ((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x))), (((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) /\ ((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x)))) |- (((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) /\ ((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) /\ (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x))))
T c==> c/\ c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c==> c==> c/\ c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c/\ c/\ c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
- ((\n1. (n = n1)) n1) |- (((n = n1) ==> (?n1. (n = n1))) = (?n1. (n = n1)))
T c==> * / c= f0 b0 f1 c= c==> c= f0 f1 c? / c= f0 b0 c? / c= f0 b0
- |- (((!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))) ==> (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))) = (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))))
T c= c==> ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_ge (real_of_int _10061199)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10061199)) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
- |- ((n = n) = ((\n1. (n = n1)) n))
T c= c= f0 f0 * / c= f0 b0 f0
- (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)) |- (((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x)) = T)
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 c= c= cPOWER * part cf_list f0 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cT
- (((real_ge (real_of_int _10061198)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10061199)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198)) = (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) ==> ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)) = ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P))
T c= c==> ! ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)) |- ((((orbit_map (f_list L)) x) = ((orbit_map (next_el ((find_face L) x))) x)) ==> (((orbit_map (f_list L)) x) = (set_of_list ((find_face L) x))))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 c==> c= * * part corbit_map * part cf_list f0 f1 * * part corbit_map * part cnext_el cfind_face f0 f1 f1 c= * * part corbit_map * part cf_list f0 f1 * part cset_of_list cfind_face f0 f1
- ((\n1. (n = n1)) n1) |- (n = n1)
T c==> * / c= f0 b0 f1 c= f0 f1
- (n = n1) |- ((n = n1) /\ (?n1. (n = n1)))
T c==> c= f0 f1 c/\ c= f0 f1 c? / c= f0 b0
- (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)) |- ((\n. ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) n1)
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 * / c= cPOWER * part cf_list f0 b0 f1 cPOWER * part cnext_el cfind_face f0 f1 b0 f1 f2
- |- ((x IN (darts_of_list L)) = ((x IN (darts_of_list L)) /\ T))
T c= cIN f0 * part cdarts_of_list f1 c/\ cIN f0 * part cdarts_of_list f1 cT
- ((\n1. (n = n1)) n1) |- (((\n1. (n = n1)) n1) /\ (?n1. (n = n1)))
T c==> * / c= f0 b0 f1 c/\ * / c= f0 b0 f1 c? / c= f0 b0
- (!n. ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) |- ((!n. ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) /\ (((orbit_map (f_list L)) x) = ((orbit_map (next_el ((find_face L) x))) x)))
T c==> ! c= cPOWER * part cf_list f0 b0 f1 cPOWER * part cnext_el cfind_face f0 f1 b0 f1 c/\ ! c= cPOWER * part cf_list f0 b0 f1 cPOWER * part cnext_el cfind_face f0 f1 b0 f1 c= * * part corbit_map * part cf_list f0 f1 * * part corbit_map * part cnext_el cfind_face f0 f1 f1
- (n = n1) |- (((((POWER (f_list L)) n1) x) = (((POWER (next_el ((find_face L) x))) n1) x)) = ((((POWER (f_list L)) n1) x) = (((POWER (next_el ((find_face L) x))) n) x)))
T c==> c= f0 f1 c= c= cPOWER * part cf_list f2 f1 f3 cPOWER * part cnext_el cfind_face f2 f3 f1 f3 c= cPOWER * part cf_list f2 f1 f3 cPOWER * part cnext_el cfind_face f2 f3 f0 f3
- |- ((!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))) ==> (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))))
T c==> ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1
- |- (((?n1. (n = n1)) ==> ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) = ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x)))
T c= c==> c? / c= f0 b0 c= cPOWER * part cf_list f1 f0 f2 cPOWER * part cnext_el cfind_face f1 f2 f0 f2 c= cPOWER * part cf_list f1 f0 f2 cPOWER * part cnext_el cfind_face f1 f2 f0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)) |- (!n1. (((\n1. (n = n1)) n1) ==> ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x))))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 ! c==> * / c= f2 b1 b0 c= cPOWER * part cf_list f0 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
- (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)) |- (((!x. (((\n1. (n = n1)) x) ==> ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x)))) ==> ((?n1. (n = n1)) ==> ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x)))) = ((?n1. (n = n1)) ==> ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x))))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 c= c==> ! c==> * / c= f2 b1 b0 c= cPOWER * part cf_list f0 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c==> c? / c= f2 b0 c= cPOWER * part cf_list f0 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c==> c? / c= f2 b0 c= cPOWER * part cf_list f0 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
- (uniq (list_of_darts L)) |- ((uniq (list_of_darts L)) = T)
T c==> cuniq clist_of_darts f0 c= cuniq clist_of_darts f0 cT
- (((real_ge (real_of_int _10061198)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10061199)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198)) = (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!x. (((\n1. (n = n1)) x) ==> (?n1. (n = n1)))) ==> ((?n1. (n = n1)) ==> (?n1. (n = n1)))) = ((?n1. (n = n1)) ==> (?n1. (n = n1))))
T c= c==> ! c==> * / c= f0 b1 b0 c? / c= f0 b1 c==> c? / c= f0 b0 c? / c= f0 b0 c==> c? / c= f0 b0 c? / c= f0 b0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (T = ((((indexl x) ((find_face L) x)) < (sizel ((find_face L) x))) ==> (~ ((NUMERAL _0) = (sizel ((find_face L) x))))))
T c= cT c==> c< cindexl f0 cfind_face f1 f0 csizel cfind_face f1 f0 c~ c= cNUMERAL c_0 csizel cfind_face f1 f0
- ((MEM x) (list_of_darts L)) |- (T = ((MEM x) (list_of_darts L)))
T c==> cMEM f0 clist_of_darts f1 c= cT cMEM f0 clist_of_darts f1
- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))), ((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) |- (!n. (P n))
T c==> ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
- |- ((n = n1) ==> (?n1. (n = n1)))
T c==> c= f0 f1 c? / c= f0 b0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)) |- ((n = n1) ==> ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x)))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 c==> c= f2 f3 c= cPOWER * part cf_list f0 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))) |- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))
T c==> c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0 c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) /\ ((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x)))) |- ((((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) /\ ((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x)))) /\ (((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) /\ ((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x)))))
T c==> c==> c/\ c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c/\ c==> c/\ c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c==> c/\ c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
- (((real_ge (real_of_int _10061198)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10061199)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198)) = (real_of_num (NUMERAL _0)))))) |- (((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198)) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- (((real_ge ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!d1. (!d2. (((MEM d1) ((find_face L) d2)) ==> (((find_face L) d1) = ((find_face L) d2))))) |- ((((MEM d1) ((find_face L) d2)) ==> (((find_face L) d1) = ((find_face L) d2))) = T)
T c==> ! ! c==> cMEM b0 cfind_face f0 b1 c= cfind_face f0 b0 cfind_face f0 b1 c= c==> cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2 cT
- ((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) ==> (((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x)) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x))))) |- (((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) ==> (((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x)) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x))))) /\ ((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) ==> (((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x)) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x))))))
T c==> c==> c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c==> c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c/\ c==> c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c==> c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c==> c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c==> c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
- (n = n1) |- ((\n1. (n = n1)) n1)
T c==> c= f0 f1 * / c= f0 b0 f1
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((GSPEC (\GEN%PVAR%5390. (?n. (((SETSPEC GEN%PVAR%5390) (n >= (NUMERAL _0))) (((POWER (next_el ((find_face L) x))) n) x))))) = (GSPEC (\GEN%PVAR%5390. (?n. (((SETSPEC GEN%PVAR%5390) (n >= (NUMERAL _0))) (((POWER (next_el ((find_face L) x))) n) x)))))))
T c= cT c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * part cnext_el cfind_face f0 f1 b1 f1 * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * part cnext_el cfind_face f0 f1 b1 f1
- (((real_ge (real_of_int _10061198)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10061199)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198)) = (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!n. ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) |- (((GSPEC (\GEN%PVAR%5390. (?n. (((SETSPEC GEN%PVAR%5390) (n >= (NUMERAL _0))) (((POWER (next_el ((find_face L) x))) n) x))))) = (GSPEC (\GEN%PVAR%5390. (?n. (((SETSPEC GEN%PVAR%5390) (n >= (NUMERAL _0))) (((POWER (next_el ((find_face L) x))) n) x)))))) = ((GSPEC (\GEN%PVAR%5390. (?n. (((SETSPEC GEN%PVAR%5390) (n >= (NUMERAL _0))) (((POWER (f_list L)) n) x))))) = (GSPEC (\GEN%PVAR%5390. (?n. (((SETSPEC GEN%PVAR%5390) (n >= (NUMERAL _0))) (((POWER (next_el ((find_face L) x))) n) x)))))))
T c==> ! c= cPOWER * part cf_list f0 b0 f1 cPOWER * part cnext_el cfind_face f0 f1 b0 f1 c= c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * part cnext_el cfind_face f0 f1 b1 f1 * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * part cnext_el cfind_face f0 f1 b1 f1 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * part cf_list f0 b1 f1 * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * part cnext_el cfind_face f0 f1 b1 f1
- (((real_ge (real_of_int _10061198)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10061199)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061198)) = (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10061198)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10061199))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) /\ ((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) |- ((((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) /\ ((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x)))) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x))))
T c==> c/\ c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c==> c==> c/\ c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
- (uniq (list_of_darts L)), ((MEM x) (list_of_darts L)) |- ((uniq (list_of_darts L)) /\ (((orbit_map (f_list_ext L)) x) = (set_of_list ((find_face L) x))))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 c/\ cuniq clist_of_darts f0 c= * * part corbit_map * part cf_list_ext f0 f1 * part cset_of_list cfind_face f0 f1
- ((\n1. (n = n1)) n1) |- (((n = n1) ==> ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) = ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x)))
T c==> * / c= f0 b0 f1 c= c==> c= f0 f1 c= cPOWER * part cf_list f2 f0 f3 cPOWER * part cnext_el cfind_face f2 f3 f0 f3 c= cPOWER * part cf_list f2 f0 f3 cPOWER * part cnext_el cfind_face f2 f3 f0 f3
- |- (?n1. (n = n1))
T c? / c= f0 b0
- (uniq (list_of_darts L)), (n = n1), ((MEM x) ((find_face L) x)) |- ((((POWER (f_list L)) n1) x) = (((POWER (next_el ((find_face L) x))) n1) x))
T c==> cuniq clist_of_darts f0 c==> c= f1 f2 c==> cMEM f3 cfind_face f0 f3 c= cPOWER * part cf_list f0 f2 f3 cPOWER * part cnext_el cfind_face f0 f3 f2 f3
- ((uniq s) /\ ((MEM x) s)) |- (((uniq s) /\ ((MEM x) s)) /\ (((orbit_map (next_el s)) x) = (set_of_list s)))
T c==> c/\ cuniq f0 cMEM f1 f0 c/\ c/\ cuniq f0 cMEM f1 f0 c= * * part corbit_map * part cnext_el f0 f1 * part cset_of_list f0
- (uniq (list_of_darts L)) |- (T = (uniq (list_of_darts L)))
T c==> cuniq clist_of_darts f0 c= cT cuniq clist_of_darts f0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) ==> ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)) = ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q))
T c= c==> ! c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))) |- ((!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))) /\ (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))))
T c==> ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 c/\ ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1
- |- ((((\n1. (n = n1)) n1) ==> (?n1. (n = n1))) = T)
T c= c==> * / c= f0 b0 f1 c? / c= f0 b0 cT
- |- ((((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) /\ ((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x)))) ==> (((((find_face L) (((POWER (next_el ((find_face L) x))) n) x)) = ((find_face L) x)) /\ ((((POWER (next_el ((find_face L) x))) n) x) = (((POWER (next_el ((find_face L) x))) n) x))) ==> (((next_el ((find_face L) (((POWER (next_el ((find_face L) x))) n) x))) (((POWER (next_el ((find_face L) x))) n) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) n) x)))))
T c==> c==> c/\ c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c==> c/\ c= cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cfind_face f0 f1 c= cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 c= cnext_el cfind_face f0 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1 cnext_el cfind_face f0 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (uniq (list_of_darts L)), (n = n1), ((MEM x) ((find_face L) x)) |- ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x))
T c==> cuniq clist_of_darts f0 c==> c= f1 f2 c==> cMEM f3 cfind_face f0 f3 c= cPOWER * part cf_list f0 f1 f3 cPOWER * part cnext_el cfind_face f0 f3 f1 f3
- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))), ((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) |- ((!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))) /\ (!n. (P n)))
T c==> ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 c/\ ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 ! * f0 b0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (uniq (list_of_darts L)), ((MEM x) ((find_face L) x)) |- ((((POWER (f_list L)) n) x) = (((POWER (next_el ((find_face L) x))) n) x))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f1 c= cPOWER * part cf_list f0 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- ((uniq s) /\ ((MEM x') s)) |- (((uniq s) /\ ((MEM x') s)) /\ ((((POWER (next_el s)) i) x') = (((nth x) s) ((((indexl x') s) + i) MOD (sizel s)))))
T c==> c/\ cuniq f0 cMEM f1 f0 c/\ c/\ cuniq f0 cMEM f1 f0 c= cPOWER * part cnext_el f0 f2 f1 cnth f3 f0 cMOD c+ cindexl f1 f0 f2 csizel f0
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
