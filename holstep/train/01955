N CONTRACTIBLE_PCROSS
C |- (!s. (!t. (((contractible s) /\ (contractible t)) ==> (contractible (s PCROSS t)))))
T c==> c/\ ccontractible f0 ccontractible f1 ccontractible * * part cPCROSS f0 f1
D TRUTH
A |- T
T cT
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D FORALL_IN_IMAGE
A |- (!f. (!s. ((!y. ((y IN ((IMAGE f) s)) ==> (P y))) = (!x. ((x IN s) ==> (P (f x)))))))
T c= ! c==> cIN b0 * * part cIMAGE f0 f1 * f2 b0 ! c==> cIN b0 f1 * f2 * f0 b0
D FSTCART_PASTECART
A |- (!x. (!y. ((fstcart ((pastecart x) y)) = x)))
T c= cfstcart cpastecart f0 f1 f0
D SNDCART_PASTECART
A |- (!x. (!y. ((sndcart ((pastecart x) y)) = y)))
T c= csndcart cpastecart f0 f1 f1
D FORALL_PASTECART
A |- ((!p. (P p)) = (!x. (!y. (P ((pastecart x) y)))))
T c= ! * f0 b0 ! ! * f0 cpastecart b0 b1
D FORALL_IN_PCROSS
A |- ((!z. ((z IN (s PCROSS t)) ==> (P z))) = (!x. (!y. (((x IN s) /\ (y IN t)) ==> (P ((pastecart x) y))))))
T c= ! c==> cIN b0 * * part cPCROSS f0 f1 * f2 b0 ! ! c==> c/\ cIN b0 f0 cIN b1 f1 * f2 cpastecart b0 b1
D PASTECART_IN_PCROSS
A |- (!s. (!t. (!x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))))))
T c= cIN cpastecart f0 f1 * * part cPCROSS f2 f3 c/\ cIN f0 f2 cIN f1 f3
D LINEAR_FSTCART
A |- (linear fstcart)
T clinear part cfstcart
D LINEAR_SNDCART
A |- (linear sndcart)
T clinear part csndcart
D CONTINUOUS_ON_SUBSET
A |- (!f. (!s. (!t. ((((continuous_on f) s) /\ (t SUBSET s)) ==> ((continuous_on f) t)))))
T c==> c/\ ccontinuous_on f0 f1 cSUBSET f2 f1 ccontinuous_on f0 f2
D CONTINUOUS_ON_COMPOSE
A |- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 ccontinuous_on * * part co f2 f0 f1
D LINEAR_CONTINUOUS_ON
A |- (!f. (!s. ((linear f) ==> ((continuous_on f) s))))
T c==> clinear f0 ccontinuous_on f0 f1
D CONTINUOUS_ON_PASTECART
A |- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s)))))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 ccontinuous_on / cpastecart * f0 b0 * f2 b0 f1
D homotopic_with
A |- (!X. (!Y. (!p. (!q. (!P. (((((homotopic_with P) (X , Y)) p) q) = (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) SUBSET Y) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = (p x))) /\ ((!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (q x))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (P (\x. (h ((pastecart t) x)))))))))))))))))
T c= chomotopic_with f0 c, f1 f2 f3 f4 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 f2 c/\ ! c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f3 b1 c/\ ! c= * b0 cpastecart cvec cNUMERAL cBIT1 c_0 b1 * f4 b1 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * f0 / * b0 cpastecart b1 b2
D contractible
A |- (!s. ((contractible s) = (?a. ((((homotopic_with (\x. T)) (s , s)) (\x. x)) (\x. a)))))
T c= ccontractible f0 c? / chomotopic_with / cT c, f0 f0 / b1 / b0
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 ! ! c==> ccontinuous_on f0 b0 c==> cSUBSET b1 b0 ccontinuous_on f0 b1
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))))) |- ((!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))) = T)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cpastecart * b0 b3 * b1 b3 b2 c= ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cpastecart * f0 b1 * f1 b1 b0 cT
+ |- ((\q'. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (((pastecart x) y) IN (s PCROSS t))) = p') ==> ((p' ==> ((((\z. ((pastecart (h ((pastecart (fstcart z)) (fstcart (sndcart z))))) (k ((pastecart (fstcart z)) (sndcart (sndcart z)))))) ((pastecart x) ((pastecart x) y))) IN (s PCROSS t)) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (((pastecart x) y) IN (s PCROSS t))) ==> (((\z. ((pastecart (h ((pastecart (fstcart z)) (fstcart (sndcart z))))) (k ((pastecart (fstcart z)) (sndcart (sndcart z)))))) ((pastecart x) ((pastecart x) y))) IN (s PCROSS t))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN cpastecart f1 f2 * * part cPCROSS f3 f4 f5 c==> c==> f5 c= cIN * / cpastecart * f6 cpastecart cfstcart b1 cfstcart csndcart b1 * f7 cpastecart cfstcart b1 csndcart csndcart b1 cpastecart f0 cpastecart f1 f2 * * part cPCROSS f3 f4 b0 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN cpastecart f1 f2 * * part cPCROSS f3 f4 cIN * / cpastecart * f6 cpastecart cfstcart b1 cfstcart csndcart b1 * f7 cpastecart cfstcart b1 csndcart csndcart b1 cpastecart f0 cpastecart f1 f2 * * part cPCROSS f3 f4 c==> f5 b0 f8
+ |- (((continuous_on f) s) ==> (!t. ((t SUBSET s) ==> ((continuous_on f) t))))
T c==> ccontinuous_on f0 f1 ! c==> cSUBSET b0 f1 ccontinuous_on f0 b0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))))) |- ((!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s)))) = T)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cpastecart * b0 b3 * b1 b3 b2 c= ! ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cpastecart * f0 b2 * b0 b2 b1 cT
+ |- (((!s. ((linear f) ==> ((continuous_on f) s))) ==> ((\s. ((linear f) ==> ((continuous_on f) s))) s)) = ((\s. ((linear f) ==> ((continuous_on f) s))) s))
T c= c==> ! c==> clinear f0 ccontinuous_on f0 b0 * / c==> clinear f0 ccontinuous_on f0 b0 f1 * / c==> clinear f0 ccontinuous_on f0 b0 f1
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ |- (((!x. (!y. ((sndcart ((pastecart x) y)) = y))) ==> ((\x. (!y. ((sndcart ((pastecart x) y)) = y))) x)) = ((\x. (!y. ((sndcart ((pastecart x) y)) = y))) x))
T c= c==> ! ! c= csndcart cpastecart b0 b1 b1 * / ! c= csndcart cpastecart b0 b1 b1 f0 * / ! c= csndcart cpastecart b0 b1 b1 f0
+ |- (((((pastecart x) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) ==> (((pastecart (fstcart ((pastecart x) ((pastecart x) y)))) (fstcart (sndcart ((pastecart x) ((pastecart x) y))))) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s))) = (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((x IN s) /\ (y IN t))) ==> T))
T c= c==> cIN cpastecart f0 cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f3 f4 cIN cpastecart cfstcart cpastecart f0 cpastecart f1 f2 cfstcart csndcart cpastecart f0 cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN f1 f3 cIN f2 f4 cT
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- ((\f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) f)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 * / ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 f0
+ (!x. ((k ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = b)) |- ((k ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = b)
T c==> ! c= * f0 cpastecart cvec cNUMERAL cBIT1 c_0 b0 f1 c= * f0 cpastecart cvec cNUMERAL cBIT1 c_0 f2 f1
+ |- ((\y. ((sndcart ((pastecart x) y)) = y)) y)
T * / c= csndcart cpastecart f0 b0 b0 f1
+ |- (((!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) ==> ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)) = ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s))
T c= c==> ! ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
+ ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((x IN s) /\ (y IN t))) |- (y IN t)
T c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN f1 f2 cIN f3 f4 cIN f3 f4
+ |- ((\f. (!s. ((linear f) ==> ((continuous_on f) s)))) f)
T * / ! c==> clinear b0 ccontinuous_on b0 b1 f0
+ |- ((!x. (!x. (!y. ((((pastecart x) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) ==> (((pastecart (fstcart ((pastecart x) ((pastecart x) y)))) (fstcart (sndcart ((pastecart x) ((pastecart x) y))))) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)))))) = (((IMAGE (\z. ((pastecart (fstcart z)) (fstcart (sndcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)))
T c= ! ! ! c==> cIN cpastecart b0 cpastecart b1 b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f0 f1 cIN cpastecart cfstcart cpastecart b0 cpastecart b1 b2 cfstcart csndcart cpastecart b0 cpastecart b1 b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 cSUBSET * * part cIMAGE / cpastecart cfstcart b0 cfstcart csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0
+ (!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = x)), (!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = a)), (!x. ((k ((pastecart (vec (NUMERAL _0))) x)) = x)), (!x. ((k ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = b)), (!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN s)) ==> ((h ((pastecart x) y)) IN s)))), (!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN t)) ==> ((k ((pastecart x) y)) IN t)))) |- (((continuous_on (\z. ((pastecart (h ((pastecart (fstcart z)) (fstcart (sndcart z))))) (k ((pastecart (fstcart z)) (sndcart (sndcart z))))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) = (((continuous_on (\z. ((pastecart (h ((pastecart (fstcart z)) (fstcart (sndcart z))))) (k ((pastecart (fstcart z)) (sndcart (sndcart z))))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) /\ ((!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (s PCROSS t))) ==> (((\z. ((pastecart (h ((pastecart (fstcart z)) (fstcart (sndcart z))))) (k ((pastecart (fstcart z)) (sndcart (sndcart z)))))) ((pastecart x) y)) IN (s PCROSS t))))) /\ ((!x. (((\z. ((pastecart (h ((pastecart (fstcart z)) (fstcart (sndcart z))))) (k ((pastecart (fstcart z)) (sndcart (sndcart z)))))) ((pastecart (vec (NUMERAL _0))) x)) = x)) /\ (!x. (((\z. ((pastecart (h ((pastecart (fstcart z)) (fstcart (sndcart z))))) (k ((pastecart (fstcart z)) (sndcart (sndcart z)))))) ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = ((pastecart a) b)))))))
T c==> ! c= * f0 cpastecart cvec cNUMERAL c_0 b0 b0 c==> ! c= * f0 cpastecart cvec cNUMERAL cBIT1 c_0 b0 f1 c==> ! c= * f2 cpastecart cvec cNUMERAL c_0 b0 b0 c==> ! c= * f2 cpastecart cvec cNUMERAL cBIT1 c_0 b0 f3 c==> ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 f4 cIN * f0 cpastecart b0 b1 f4 c==> ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 f5 cIN * f2 cpastecart b0 b1 f5 c= ccontinuous_on / cpastecart * f0 cpastecart cfstcart b0 cfstcart csndcart b0 * f2 cpastecart cfstcart b0 csndcart csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f4 f5 c/\ ccontinuous_on / cpastecart * f0 cpastecart cfstcart b0 cfstcart csndcart b0 * f2 cpastecart cfstcart b0 csndcart csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f4 f5 c/\ ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 * * part cPCROSS f4 f5 cIN * / cpastecart * f0 cpastecart cfstcart b2 cfstcart csndcart b2 * f2 cpastecart cfstcart b2 csndcart csndcart b2 cpastecart b0 b1 * * part cPCROSS f4 f5 c/\ ! c= * / cpastecart * f0 cpastecart cfstcart b1 cfstcart csndcart b1 * f2 cpastecart cfstcart b1 csndcart csndcart b1 cpastecart cvec cNUMERAL c_0 b0 b0 ! c= * / cpastecart * f0 cpastecart cfstcart b1 cfstcart csndcart b1 * f2 cpastecart cfstcart b1 csndcart csndcart b1 cpastecart cvec cNUMERAL cBIT1 c_0 b0 cpastecart f1 f3
+ ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((x IN s) /\ (y IN t))) |- (T = ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (x IN s)))
T c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN f1 f2 cIN f3 f4 c= cT c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 f2
+ |- ((\y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))) y)
T * / c= cIN cpastecart f0 b0 * * part cPCROSS f1 f2 c/\ cIN f0 f1 cIN b0 f2 f3
+ |- (((continuous_on fstcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) /\ ((continuous_on (\z. (sndcart (sndcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))))
T c/\ ccontinuous_on part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f0 f1 ccontinuous_on / csndcart csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f0 f1
+ |- (((!p'. (!q'. (((((pastecart x) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) = p') ==> ((p' ==> ((((pastecart (fstcart ((pastecart x) ((pastecart x) y)))) (fstcart (sndcart ((pastecart x) ((pastecart x) y))))) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) = q')) ==> (((((pastecart x) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) ==> (((pastecart (fstcart ((pastecart x) ((pastecart x) y)))) (fstcart (sndcart ((pastecart x) ((pastecart x) y))))) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((pastecart x) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) = p') ==> ((p' ==> ((((pastecart (fstcart ((pastecart x) ((pastecart x) y)))) (fstcart (sndcart ((pastecart x) ((pastecart x) y))))) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) = q')) ==> (((((pastecart x) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) ==> (((pastecart (fstcart ((pastecart x) ((pastecart x) y)))) (fstcart (sndcart ((pastecart x) ((pastecart x) y))))) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((pastecart x) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) = p') ==> ((p' ==> ((((pastecart (fstcart ((pastecart x) ((pastecart x) y)))) (fstcart (sndcart ((pastecart x) ((pastecart x) y))))) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) = q')) ==> (((((pastecart x) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) ==> (((pastecart (fstcart ((pastecart x) ((pastecart x) y)))) (fstcart (sndcart ((pastecart x) ((pastecart x) y))))) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cIN cpastecart f0 cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f3 f4 b0 c==> c==> b0 c= cIN cpastecart cfstcart cpastecart f0 cpastecart f1 f2 cfstcart csndcart cpastecart f0 cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 b1 c= c==> cIN cpastecart f0 cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f3 f4 cIN cpastecart cfstcart cpastecart f0 cpastecart f1 f2 cfstcart csndcart cpastecart f0 cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c==> b0 b1 * / ! c==> c= cIN cpastecart f0 cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f3 f4 b0 c==> c==> b0 c= cIN cpastecart cfstcart cpastecart f0 cpastecart f1 f2 cfstcart csndcart cpastecart f0 cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 b1 c= c==> cIN cpastecart f0 cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f3 f4 cIN cpastecart cfstcart cpastecart f0 cpastecart f1 f2 cfstcart csndcart cpastecart f0 cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c==> b0 b1 f5 * / ! c==> c= cIN cpastecart f0 cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f3 f4 b0 c==> c==> b0 c= cIN cpastecart cfstcart cpastecart f0 cpastecart f1 f2 cfstcart csndcart cpastecart f0 cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 b1 c= c==> cIN cpastecart f0 cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f3 f4 cIN cpastecart cfstcart cpastecart f0 cpastecart f1 f2 cfstcart csndcart cpastecart f0 cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c==> b0 b1 f5
+ ((\x. (f (g x))) = (f o g)) |- ((f o g) = (\x. (f (g x))))
T c==> c= / * f0 * f1 b0 * * part co f0 f1 c= * * part co f0 f1 / * f0 * f1 b0
- |- ((\f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) f)
T * / ! c==> c/\ ccontinuous_on b0 b1 ccontinuous_on f0 * * part cIMAGE b0 b1 ccontinuous_on * * part co f0 b0 b1 f1
+ |- ((\s. ((contractible s) = (?a. ((((homotopic_with (\x. T)) (s , s)) (\x. x)) (\x. a))))) s)
T * / c= ccontractible b0 c? / chomotopic_with / cT c, b0 b0 / b2 / b1 f0
+ (!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN s)) ==> ((h ((pastecart x) y)) IN s)))), ((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) |- ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = x)) ==> ((!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = a)) ==> (!a. (!h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS t)) ==> ((!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN t)) ==> ((h ((pastecart x) y)) IN t)))) ==> ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = x)) ==> ((!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = a)) ==> (?a. (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) /\ ((!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (s PCROSS t))) ==> ((h ((pastecart x) y)) IN (s PCROSS t))))) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = x)) /\ (!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = a)))))))))))))))
T c==> ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 f0 cIN * f1 cpastecart b0 b1 f0 c==> ccontinuous_on f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c==> ! c= * f1 cpastecart cvec cNUMERAL c_0 b0 b0 c==> ! c= * f1 cpastecart cvec cNUMERAL cBIT1 c_0 b0 f2 ! ! c==> ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c==> ! ! c==> c/\ cIN b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b3 f3 cIN * b1 cpastecart b2 b3 f3 c==> ! c= * b1 cpastecart cvec cNUMERAL c_0 b2 b2 c==> ! c= * b1 cpastecart cvec cNUMERAL cBIT1 c_0 b2 b0 c? / c? / c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f0 f3 c/\ ! ! c==> c/\ cIN b4 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b5 * * part cPCROSS f0 f3 cIN * b3 cpastecart b4 b5 * * part cPCROSS f0 f3 c/\ ! c= * b3 cpastecart cvec cNUMERAL c_0 b4 b4 ! c= * b3 cpastecart cvec cNUMERAL cBIT1 c_0 b4 b2
+ |- (((!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))) ==> ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))) s)) = ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))) s))
T c= c==> ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cpastecart * f0 b1 * f1 b1 b0 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cpastecart * f0 b1 * f1 b1 b0 f2 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cpastecart * f0 b1 * f1 b1 b0 f2
- |- ((!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) ==> ((continuous_on h) t))) ==> (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) ==> ((continuous_on h) t))))
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0
+ |- ((linear sndcart) = T)
T c= clinear part csndcart cT
+ |- (((?h. (P h)) ==> Q) = (!h. ((P h) ==> Q)))
T c= c==> c? / * f0 b0 f1 ! c==> * f0 b0 f1
+ |- (((!x. (!y. ((fstcart ((pastecart x) y)) = x))) ==> ((\x. (!y. ((fstcart ((pastecart x) y)) = x))) x)) = ((\x. (!y. ((fstcart ((pastecart x) y)) = x))) x))
T c= c==> ! ! c= cfstcart cpastecart b0 b1 b0 * / ! c= cfstcart cpastecart b0 b1 b0 f0 * / ! c= cfstcart cpastecart b0 b1 b0 f0
+ (!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = x)), (!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = a)), (!x. ((k ((pastecart (vec (NUMERAL _0))) x)) = x)), (!x. ((k ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = b)), (!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN s)) ==> ((h ((pastecart x) y)) IN s)))), (!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN t)) ==> ((k ((pastecart x) y)) IN t)))), ((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)), ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS t)) |- ((\a. (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) /\ ((!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (s PCROSS t))) ==> ((h ((pastecart x) y)) IN (s PCROSS t))))) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = x)) /\ (!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = a))))))) ((pastecart a) b))
T c==> ! c= * f0 cpastecart cvec cNUMERAL c_0 b0 b0 c==> ! c= * f0 cpastecart cvec cNUMERAL cBIT1 c_0 b0 f1 c==> ! c= * f2 cpastecart cvec cNUMERAL c_0 b0 b0 c==> ! c= * f2 cpastecart cvec cNUMERAL cBIT1 c_0 b0 f3 c==> ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 f4 cIN * f0 cpastecart b0 b1 f4 c==> ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 f5 cIN * f2 cpastecart b0 b1 f5 c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c==> ccontinuous_on f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f5 * / c? / c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f4 f5 c/\ ! ! c==> c/\ cIN b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b3 * * part cPCROSS f4 f5 cIN * b1 cpastecart b2 b3 * * part cPCROSS f4 f5 c/\ ! c= * b1 cpastecart cvec cNUMERAL c_0 b2 b2 ! c= * b1 cpastecart cvec cNUMERAL cBIT1 c_0 b2 b0 cpastecart f1 f3
- |- ((linear (fstcart o sndcart)) = (linear (\z. (fstcart (sndcart z)))))
T c= clinear * * part co part cfstcart part csndcart clinear / cfstcart csndcart b0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))), (((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) |- ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) /\ ((continuous_on (g o f)) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 c/\ c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 ccontinuous_on * * part co f2 f0 f1
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))))), (((continuous_on f) s) /\ ((continuous_on g) s)) |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))))) /\ ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cpastecart * b0 b3 * b1 b3 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 c/\ ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cpastecart * b0 b3 * b1 b3 b2 ccontinuous_on / cpastecart * f0 b0 * f2 b0 f1
- ((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) |- (((!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) ==> ((continuous_on h) t))) ==> (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) ==> ((continuous_on h) t)))) = (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) ==> ((continuous_on h) t))))
T c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f0 b0 ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f0 b0 ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f0 b0
+ |- (((!p'. (!q'. (((((pastecart x) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) = p') ==> ((p' ==> ((((pastecart (fstcart ((pastecart x) ((pastecart x) y)))) (sndcart (sndcart ((pastecart x) ((pastecart x) y))))) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS t)) = q')) ==> (((((pastecart x) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) ==> (((pastecart (fstcart ((pastecart x) ((pastecart x) y)))) (sndcart (sndcart ((pastecart x) ((pastecart x) y))))) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS t))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((pastecart x) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) = p') ==> ((p' ==> ((((pastecart (fstcart ((pastecart x) ((pastecart x) y)))) (sndcart (sndcart ((pastecart x) ((pastecart x) y))))) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS t)) = q')) ==> (((((pastecart x) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) ==> (((pastecart (fstcart ((pastecart x) ((pastecart x) y)))) (sndcart (sndcart ((pastecart x) ((pastecart x) y))))) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS t))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((pastecart x) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) = p') ==> ((p' ==> ((((pastecart (fstcart ((pastecart x) ((pastecart x) y)))) (sndcart (sndcart ((pastecart x) ((pastecart x) y))))) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS t)) = q')) ==> (((((pastecart x) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) ==> (((pastecart (fstcart ((pastecart x) ((pastecart x) y)))) (sndcart (sndcart ((pastecart x) ((pastecart x) y))))) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS t))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cIN cpastecart f0 cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f3 f4 b0 c==> c==> b0 c= cIN cpastecart cfstcart cpastecart f0 cpastecart f1 f2 csndcart csndcart cpastecart f0 cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 b1 c= c==> cIN cpastecart f0 cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f3 f4 cIN cpastecart cfstcart cpastecart f0 cpastecart f1 f2 csndcart csndcart cpastecart f0 cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c==> b0 b1 * / ! c==> c= cIN cpastecart f0 cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f3 f4 b0 c==> c==> b0 c= cIN cpastecart cfstcart cpastecart f0 cpastecart f1 f2 csndcart csndcart cpastecart f0 cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 b1 c= c==> cIN cpastecart f0 cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f3 f4 cIN cpastecart cfstcart cpastecart f0 cpastecart f1 f2 csndcart csndcart cpastecart f0 cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c==> b0 b1 f5 * / ! c==> c= cIN cpastecart f0 cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f3 f4 b0 c==> c==> b0 c= cIN cpastecart cfstcart cpastecart f0 cpastecart f1 f2 csndcart csndcart cpastecart f0 cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 b1 c= c==> cIN cpastecart f0 cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f3 f4 cIN cpastecart cfstcart cpastecart f0 cpastecart f1 f2 csndcart csndcart cpastecart f0 cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c==> b0 b1 f5
+ |- (((?a. (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS t)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS t)) SUBSET t) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = x)) /\ (!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = a))))))) ==> (?a. (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) SUBSET (s PCROSS t)) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = x)) /\ (!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = a)))))))) = (!a. ((?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS t)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS t)) SUBSET t) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = x)) /\ (!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = a)))))) ==> (?a. (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) SUBSET (s PCROSS t)) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = x)) /\ (!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = a))))))))))
T c= c==> c? / c? / c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f0 c/\ ! c= * b1 cpastecart cvec cNUMERAL c_0 b2 b2 ! c= * b1 cpastecart cvec cNUMERAL cBIT1 c_0 b2 b0 c? / c? / c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f1 f0 c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f1 f0 * * part cPCROSS f1 f0 c/\ ! c= * b1 cpastecart cvec cNUMERAL c_0 b2 b2 ! c= * b1 cpastecart cvec cNUMERAL cBIT1 c_0 b2 b0 ! c==> c? / c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f0 c/\ ! c= * b1 cpastecart cvec cNUMERAL c_0 b2 b2 ! c= * b1 cpastecart cvec cNUMERAL cBIT1 c_0 b2 b0 c? / c? / c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f1 f0 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f1 f0 * * part cPCROSS f1 f0 c/\ ! c= * b2 cpastecart cvec cNUMERAL c_0 b3 b3 ! c= * b2 cpastecart cvec cNUMERAL cBIT1 c_0 b3 b1
+ (!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = x)), (!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = a)), (!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN s)) ==> ((h ((pastecart x) y)) IN s)))), ((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) |- (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS t)) ==> ((!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN t)) ==> ((k ((pastecart x) y)) IN t)))) ==> ((!x. ((k ((pastecart (vec (NUMERAL _0))) x)) = x)) ==> ((!x. ((k ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = b)) ==> (?a. (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) /\ ((!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (s PCROSS t))) ==> ((h ((pastecart x) y)) IN (s PCROSS t))))) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = x)) /\ (!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = a)))))))))))
T c==> ! c= * f0 cpastecart cvec cNUMERAL c_0 b0 b0 c==> ! c= * f0 cpastecart cvec cNUMERAL cBIT1 c_0 b0 f1 c==> ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 f2 cIN * f0 cpastecart b0 b1 f2 c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c==> ccontinuous_on f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c==> ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 f4 cIN * f3 cpastecart b0 b1 f4 c==> ! c= * f3 cpastecart cvec cNUMERAL c_0 b0 b0 c==> ! c= * f3 cpastecart cvec cNUMERAL cBIT1 c_0 b0 f5 c? / c? / c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f2 f4 c/\ ! ! c==> c/\ cIN b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b3 * * part cPCROSS f2 f4 cIN * b1 cpastecart b2 b3 * * part cPCROSS f2 f4 c/\ ! c= * b1 cpastecart cvec cNUMERAL c_0 b2 b2 ! c= * b1 cpastecart cvec cNUMERAL cBIT1 c_0 b2 b0
+ (!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = x)), (!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = a)), (!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN s)) ==> ((h ((pastecart x) y)) IN s)))), ((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) |- (!h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS t)) ==> ((!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN t)) ==> ((h ((pastecart x) y)) IN t)))) ==> ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = x)) ==> ((!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = b)) ==> (?a. (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) /\ ((!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (s PCROSS t))) ==> ((h ((pastecart x) y)) IN (s PCROSS t))))) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = x)) /\ (!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = a))))))))))))
T c==> ! c= * f0 cpastecart cvec cNUMERAL c_0 b0 b0 c==> ! c= * f0 cpastecart cvec cNUMERAL cBIT1 c_0 b0 f1 c==> ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 f2 cIN * f0 cpastecart b0 b1 f2 c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 ! c==> ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c==> ! ! c==> c/\ cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b2 f3 cIN * b0 cpastecart b1 b2 f3 c==> ! c= * b0 cpastecart cvec cNUMERAL c_0 b1 b1 c==> ! c= * b0 cpastecart cvec cNUMERAL cBIT1 c_0 b1 f4 c? / c? / c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f2 f3 c/\ ! ! c==> c/\ cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b4 * * part cPCROSS f2 f3 cIN * b2 cpastecart b3 b4 * * part cPCROSS f2 f3 c/\ ! c= * b2 cpastecart cvec cNUMERAL c_0 b3 b3 ! c= * b2 cpastecart cvec cNUMERAL cBIT1 c_0 b3 b1
+ |- ((\y. ((fstcart ((pastecart x) y)) = x)) y)
T * / c= cfstcart cpastecart f0 b0 f0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) ==> ((!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN s)) ==> ((h ((pastecart x) y)) IN s)))) ==> ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = x)) ==> ((!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = a)) ==> (!a. (!h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS t)) ==> ((!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN t)) ==> ((h ((pastecart x) y)) IN t)))) ==> ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = x)) ==> ((!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = a)) ==> (?a. (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) /\ ((!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (s PCROSS t))) ==> ((h ((pastecart x) y)) IN (s PCROSS t))))) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = x)) /\ (!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = a))))))))))))))))) = T)
T c= c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c==> ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 f1 cIN * f0 cpastecart b0 b1 f1 c==> ! c= * f0 cpastecart cvec cNUMERAL c_0 b0 b0 c==> ! c= * f0 cpastecart cvec cNUMERAL cBIT1 c_0 b0 f2 ! ! c==> ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c==> ! ! c==> c/\ cIN b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b3 f3 cIN * b1 cpastecart b2 b3 f3 c==> ! c= * b1 cpastecart cvec cNUMERAL c_0 b2 b2 c==> ! c= * b1 cpastecart cvec cNUMERAL cBIT1 c_0 b2 b0 c? / c? / c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f1 f3 c/\ ! ! c==> c/\ cIN b4 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b5 * * part cPCROSS f1 f3 cIN * b3 cpastecart b4 b5 * * part cPCROSS f1 f3 c/\ ! c= * b3 cpastecart cvec cNUMERAL c_0 b4 b4 ! c= * b3 cpastecart cvec cNUMERAL cBIT1 c_0 b4 b2 cT
+ |- ((!y. ((((pastecart x) y) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) ==> (((\z. ((pastecart (fstcart z)) (fstcart (sndcart z)))) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)))) = (!x. (!y. ((((pastecart x) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) ==> (((\z. ((pastecart (fstcart z)) (fstcart (sndcart z)))) ((pastecart x) ((pastecart x) y))) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s))))))
T c= ! c==> cIN cpastecart f0 b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f1 f2 cIN * / cpastecart cfstcart b1 cfstcart csndcart b1 cpastecart f0 b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ! ! c==> cIN cpastecart f0 cpastecart b0 b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f1 f2 cIN * / cpastecart cfstcart b2 cfstcart csndcart b2 cpastecart f0 cpastecart b0 b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))), (((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) /\ ((continuous_on (g o f)) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 c/\ ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 ccontinuous_on * * part co f2 f0 f1
+ |- ((\s. ((linear f) ==> ((continuous_on f) s))) s)
T * / c==> clinear f0 ccontinuous_on f0 b0 f1
- |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) ==> (!g. (!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 ! ! ! c==> c/\ ccontinuous_on b1 b2 ccontinuous_on b0 * * part cIMAGE b1 b2 ccontinuous_on * * part co b0 b1 b2
+ ((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) |- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) ==> ((continuous_on h) t)))
T c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f0 b0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))))) |- ((\f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))))) f)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cpastecart * b0 b3 * b1 b3 b2 * / ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cpastecart * b0 b3 * b1 b3 b2 f0
- |- (((!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) ==> ((\f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) f)) = ((\f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) f))
T c= c==> ! ! c==> c/\ ccontinuous_on b0 b1 ccontinuous_on f0 * * part cIMAGE b0 b1 ccontinuous_on * * part co f0 b0 b1 * / ! c==> c/\ ccontinuous_on b0 b1 ccontinuous_on f0 * * part cIMAGE b0 b1 ccontinuous_on * * part co f0 b0 b1 f1 * / ! c==> c/\ ccontinuous_on b0 b1 ccontinuous_on f0 * * part cIMAGE b0 b1 ccontinuous_on * * part co f0 b0 b1 f1
+ (!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN t)) ==> ((k ((pastecart x) y)) IN t)))) |- (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN t)) ==> ((k ((pastecart x) y)) IN t)))
T c==> ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 f0 cIN * f1 cpastecart b0 b1 f0 ! c==> c/\ cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b0 f0 cIN * f1 cpastecart f2 b0 f0
+ |- (((!s. ((contractible s) = (?a. ((((homotopic_with (\x. T)) (s , s)) (\x. x)) (\x. a))))) ==> ((\s. ((contractible s) = (?a. ((((homotopic_with (\x. T)) (s , s)) (\x. x)) (\x. a))))) s)) = ((\s. ((contractible s) = (?a. ((((homotopic_with (\x. T)) (s , s)) (\x. x)) (\x. a))))) s))
T c= c==> ! c= ccontractible b0 c? / chomotopic_with / cT c, b0 b0 / b2 / b1 * / c= ccontractible b0 c? / chomotopic_with / cT c, b0 b0 / b2 / b1 f0 * / c= ccontractible b0 c? / chomotopic_with / cT c, b0 b0 / b2 / b1 f0
+ |- (((continuous_on sndcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) /\ ((continuous_on fstcart) ((IMAGE sndcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t)))))
T c/\ ccontinuous_on part csndcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f0 f1 ccontinuous_on part cfstcart * * part cIMAGE part csndcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f0 f1
+ ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS t)) |- ((continuous_on k) ((IMAGE (\z. ((pastecart (fstcart z)) (sndcart (sndcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))))
T c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f0 * * part cIMAGE / cpastecart cfstcart b0 csndcart csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f2 f1
+ |- ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((x IN s) /\ (y IN t))) ==> ((((pastecart (fstcart ((pastecart x) ((pastecart x) y)))) (sndcart (sndcart ((pastecart x) ((pastecart x) y))))) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS t)) = q')) ==> (((((pastecart x) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) ==> (((pastecart (fstcart ((pastecart x) ((pastecart x) y)))) (sndcart (sndcart ((pastecart x) ((pastecart x) y))))) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS t))) = (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((x IN s) /\ (y IN t))) ==> q')))
T c==> c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN f1 f2 cIN f3 f4 c= cIN cpastecart cfstcart cpastecart f0 cpastecart f1 f3 csndcart csndcart cpastecart f0 cpastecart f1 f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 f5 c= c==> cIN cpastecart f0 cpastecart f1 f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f2 f4 cIN cpastecart cfstcart cpastecart f0 cpastecart f1 f3 csndcart csndcart cpastecart f0 cpastecart f1 f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN f1 f2 cIN f3 f4 f5
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- ((\s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))) s)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 * * part cIMAGE f0 b0 ccontinuous_on * * part co f1 f0 b0 f2
+ |- (((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((x IN s) /\ (y IN t))) ==> ((((pastecart (fstcart ((pastecart x) ((pastecart x) y)))) (fstcart (sndcart ((pastecart x) ((pastecart x) y))))) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) = T)) ==> (((((pastecart x) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) ==> (((pastecart (fstcart ((pastecart x) ((pastecart x) y)))) (fstcart (sndcart ((pastecart x) ((pastecart x) y))))) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s))) = (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((x IN s) /\ (y IN t))) ==> T))) = (((((pastecart x) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) ==> (((pastecart (fstcart ((pastecart x) ((pastecart x) y)))) (fstcart (sndcart ((pastecart x) ((pastecart x) y))))) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s))) = (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((x IN s) /\ (y IN t))) ==> T)))
T c= c==> c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN f1 f2 cIN f3 f4 c= cIN cpastecart cfstcart cpastecart f0 cpastecart f1 f3 cfstcart csndcart cpastecart f0 cpastecart f1 f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 cT c= c==> cIN cpastecart f0 cpastecart f1 f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f2 f4 cIN cpastecart cfstcart cpastecart f0 cpastecart f1 f3 cfstcart csndcart cpastecart f0 cpastecart f1 f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN f1 f2 cIN f3 f4 cT c= c==> cIN cpastecart f0 cpastecart f1 f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f2 f4 cIN cpastecart cfstcart cpastecart f0 cpastecart f1 f3 cfstcart csndcart cpastecart f0 cpastecart f1 f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN f1 f2 cIN f3 f4 cT
+ |- ((\Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q)))) Q)
T * / c= c==> c? / * f0 b1 b0 ! c==> * f0 b1 b0 f1
+ |- ((!x. ((x IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) ==> ((h x) IN (s PCROSS t)))) = (!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (s PCROSS t))) ==> ((h ((pastecart x) y)) IN (s PCROSS t))))))
T c= ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f0 f1 cIN * f2 b0 * * part cPCROSS f0 f1 ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 * * part cPCROSS f0 f1 cIN * f2 cpastecart b0 b1 * * part cPCROSS f0 f1
+ |- ((!x. ((x IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) ==> (((\z. ((pastecart (fstcart z)) (fstcart (sndcart z)))) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)))) = (!x. (!y. ((((pastecart x) y) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) ==> (((\z. ((pastecart (fstcart z)) (fstcart (sndcart z)))) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s))))))
T c= ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f0 f1 cIN * / cpastecart cfstcart b1 cfstcart csndcart b1 b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ! ! c==> cIN cpastecart b0 b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f0 f1 cIN * / cpastecart cfstcart b2 cfstcart csndcart b2 cpastecart b0 b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- (((!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))) ==> ((\t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))) t)) = ((\t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))) t))
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 c= c==> ! c==> ccontinuous_on f0 f1 c==> cSUBSET b0 f1 ccontinuous_on f0 b0 * / c==> ccontinuous_on f0 f1 c==> cSUBSET b0 f1 ccontinuous_on f0 b0 f2 * / c==> ccontinuous_on f0 f1 c==> cSUBSET b0 f1 ccontinuous_on f0 b0 f2
+ |- (((!P. (!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))))) ==> ((\P. (!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))))) P)) = ((\P. (!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))))) P))
T c= c==> ! ! c= c==> c? / * b0 b2 b1 ! c==> * b0 b2 b1 * / ! c= c==> c? / * b0 b2 b1 ! c==> * b0 b2 b1 f0 * / ! c= c==> c? / * b0 b2 b1 ! c==> * b0 b2 b1 f0
+ ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((x IN s) /\ (y IN t))) |- (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((x IN s) /\ (y IN t))) /\ ((((pastecart (fstcart ((pastecart x) ((pastecart x) y)))) (sndcart (sndcart ((pastecart x) ((pastecart x) y))))) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS t)) = T))
T c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN f1 f2 cIN f3 f4 c/\ c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN f1 f2 cIN f3 f4 c= cIN cpastecart cfstcart cpastecart f0 cpastecart f1 f3 csndcart csndcart cpastecart f0 cpastecart f1 f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 cT
+ |- (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((x IN s) /\ (y IN t))) ==> ((((pastecart (fstcart ((pastecart x) ((pastecart x) y)))) (sndcart (sndcart ((pastecart x) ((pastecart x) y))))) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS t)) = T))
T c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN f1 f2 cIN f3 f4 c= cIN cpastecart cfstcart cpastecart f0 cpastecart f1 f3 csndcart csndcart cpastecart f0 cpastecart f1 f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 cT
+ |- (((((IMAGE (\z. ((pastecart (fstcart z)) (sndcart (sndcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS t)) ==> ((continuous_on k) ((IMAGE (\z. ((pastecart (fstcart z)) (sndcart (sndcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))))) = ((continuous_on k) ((IMAGE (\z. ((pastecart (fstcart z)) (sndcart (sndcart z))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t)))))
T c= c==> cSUBSET * * part cIMAGE / cpastecart cfstcart b0 csndcart csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f2 * * part cIMAGE / cpastecart cfstcart b0 csndcart csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f0 f1 ccontinuous_on f2 * * part cIMAGE / cpastecart cfstcart b0 csndcart csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f0 f1
+ ((f o g) = (\x. (f (g x)))) |- ((\x. (f (g x))) = (f o g))
T c==> c= * * part co f0 f1 / * f0 * f1 b0 c= / * f0 * f1 b0 * * part co f0 f1
+ |- ((?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) /\ ((!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (s PCROSS t))) ==> ((h ((pastecart x) y)) IN (s PCROSS t))))) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = x)) /\ (!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = ((pastecart a) b))))))) = ((\a. (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) /\ ((!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (s PCROSS t))) ==> ((h ((pastecart x) y)) IN (s PCROSS t))))) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = x)) /\ (!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = a))))))) ((pastecart a) b)))
T c= c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f0 f1 c/\ ! ! c==> c/\ cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b2 * * part cPCROSS f0 f1 cIN * b0 cpastecart b1 b2 * * part cPCROSS f0 f1 c/\ ! c= * b0 cpastecart cvec cNUMERAL c_0 b1 b1 ! c= * b0 cpastecart cvec cNUMERAL cBIT1 c_0 b1 cpastecart f2 f3 * / c? / c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f0 f1 c/\ ! ! c==> c/\ cIN b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b3 * * part cPCROSS f0 f1 cIN * b1 cpastecart b2 b3 * * part cPCROSS f0 f1 c/\ ! c= * b1 cpastecart cvec cNUMERAL c_0 b2 b2 ! c= * b1 cpastecart cvec cNUMERAL cBIT1 c_0 b2 b0 cpastecart f2 f3
+ |- (((!P. (((((homotopic_with P) (X , Y)) p) q) = (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) SUBSET Y) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = (p x))) /\ ((!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (q x))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (P (\x. (h ((pastecart t) x))))))))))))) ==> ((\P. (((((homotopic_with P) (X , Y)) p) q) = (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) SUBSET Y) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = (p x))) /\ ((!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (q x))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (P (\x. (h ((pastecart t) x))))))))))))) P)) = ((\P. (((((homotopic_with P) (X , Y)) p) q) = (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS X)) SUBSET Y) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = (p x))) /\ ((!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (q x))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (P (\x. (h ((pastecart t) x))))))))))))) P))
T c= c==> ! c= chomotopic_with b0 c, f0 f1 f2 f3 c? / c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f1 c/\ ! c= * b1 cpastecart cvec cNUMERAL c_0 b2 * f2 b2 c/\ ! c= * b1 cpastecart cvec cNUMERAL cBIT1 c_0 b2 * f3 b2 ! c==> cIN b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * b0 / * b1 cpastecart b2 b3 * / c= chomotopic_with b0 c, f0 f1 f2 f3 c? / c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f1 c/\ ! c= * b1 cpastecart cvec cNUMERAL c_0 b2 * f2 b2 c/\ ! c= * b1 cpastecart cvec cNUMERAL cBIT1 c_0 b2 * f3 b2 ! c==> cIN b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * b0 / * b1 cpastecart b2 b3 f4 * / c= chomotopic_with b0 c, f0 f1 f2 f3 c? / c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 f1 c/\ ! c= * b1 cpastecart cvec cNUMERAL c_0 b2 * f2 b2 c/\ ! c= * b1 cpastecart cvec cNUMERAL cBIT1 c_0 b2 * f3 b2 ! c==> cIN b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * b0 / * b1 cpastecart b2 b3 f4
+ |- ((linear f) ==> (((continuous_on f) s) = T))
T c==> clinear f0 c= ccontinuous_on f0 f1 cT
+ ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((x IN s) /\ (y IN t))) |- ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN t)) ==> (((k ((pastecart x) y)) IN t) = T)) = (((k ((pastecart x) y)) IN t) = T))
T c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN f1 f2 cIN f3 f4 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f3 f4 c= cIN * f5 cpastecart f0 f3 f4 cT c= cIN * f5 cpastecart f0 f3 f4 cT
- |- ((?h. t) = t)
T c= c? / f0 f0
+ |- (T = (((continuous_on fstcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) /\ ((continuous_on (\z. (fstcart (sndcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t)))))
T c= cT c/\ ccontinuous_on part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f0 f1 ccontinuous_on / cfstcart csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f0 f1
+ |- ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((x IN s) /\ (y IN t))) ==> ((((pastecart (fstcart ((pastecart x) ((pastecart x) y)))) (fstcart (sndcart ((pastecart x) ((pastecart x) y))))) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) = q')) ==> (((((pastecart x) ((pastecart x) y)) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) ==> (((pastecart (fstcart ((pastecart x) ((pastecart x) y)))) (fstcart (sndcart ((pastecart x) ((pastecart x) y))))) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s))) = (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((x IN s) /\ (y IN t))) ==> q')))
T c==> c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN f1 f2 cIN f3 f4 c= cIN cpastecart cfstcart cpastecart f0 cpastecart f1 f3 cfstcart csndcart cpastecart f0 cpastecart f1 f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 f5 c= c==> cIN cpastecart f0 cpastecart f1 f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f2 f4 cIN cpastecart cfstcart cpastecart f0 cpastecart f1 f3 cfstcart csndcart cpastecart f0 cpastecart f1 f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN f1 f2 cIN f3 f4 f5
+ |- ((\z. (f (g z))) = (f o g))
T c= / * f0 * f1 b0 * * part co f0 f1
+ (!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = x)), (!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = a)), (!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN s)) ==> ((h ((pastecart x) y)) IN s)))), ((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)), ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS t)) |- (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS t)) /\ ((!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN t)) ==> ((k ((pastecart x) y)) IN t)))) ==> ((!x. ((k ((pastecart (vec (NUMERAL _0))) x)) = x)) ==> ((!x. ((k ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = b)) ==> (?a. (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (s PCROSS t))) /\ ((!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (s PCROSS t))) ==> ((h ((pastecart x) y)) IN (s PCROSS t))))) /\ ((!x. ((h ((pastecart (vec (NUMERAL _0))) x)) = x)) /\ (!x. ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = a)))))))))))
T c==> ! c= * f0 cpastecart cvec cNUMERAL c_0 b0 b0 c==> ! c= * f0 cpastecart cvec cNUMERAL cBIT1 c_0 b0 f1 c==> ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 f2 cIN * f0 cpastecart b0 b1 f2 c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c==> ccontinuous_on f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c/\ ccontinuous_on f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c==> ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 f4 cIN * f3 cpastecart b0 b1 f4 c==> ! c= * f3 cpastecart cvec cNUMERAL c_0 b0 b0 c==> ! c= * f3 cpastecart cvec cNUMERAL cBIT1 c_0 b0 f5 c? / c? / c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS f2 f4 c/\ ! ! c==> c/\ cIN b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b3 * * part cPCROSS f2 f4 cIN * b1 cpastecart b2 b3 * * part cPCROSS f2 f4 c/\ ! c= * b1 cpastecart cvec cNUMERAL c_0 b2 b2 ! c= * b1 cpastecart cvec cNUMERAL cBIT1 c_0 b2 b0
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- ((\s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t))))) s)
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 * / ! c==> ccontinuous_on f0 b0 c==> cSUBSET b1 b0 ccontinuous_on f0 b1 f1
+ ((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) |- (((!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) ==> ((continuous_on h) t))) ==> ((\t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) ==> ((continuous_on h) t))) t)) = ((\t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) ==> ((continuous_on h) t))) t))
T c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f0 b0 * / c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f0 b0 f2 * / c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f0 b0 f2
- |- ((\z'. ((pastecart (fstcart z)) (fstcart (sndcart z')))) = ((pastecart (fstcart z)) o (\z. (fstcart (sndcart z)))))
T c= / cpastecart cfstcart f0 cfstcart csndcart b0 * * part co * part cpastecart cfstcart f0 / cfstcart csndcart b0
- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) ==> ((continuous_on h) t))), (t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) |- ((continuous_on h) t)
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 c==> cSUBSET f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 f2
- (((continuous_on f) s) /\ ((continuous_on g) s)) |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))))) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cpastecart * b0 b3 * b1 b3 b2 ccontinuous_on / cpastecart * f0 b0 * f2 b0 f1
- |- (((continuous_on (\z. z)) s) = T)
T c= ccontinuous_on / b0 f0 cT
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- (!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 ! ! c==> c/\ ccontinuous_on b0 b1 ccontinuous_on f0 * * part cIMAGE b0 b1 ccontinuous_on * * part co f0 b0 b1
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))))) |- (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cpastecart * b0 b3 * b1 b3 b2 ! ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cpastecart * f0 b2 * b0 b2 b1
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))))), (((continuous_on f) s) /\ ((continuous_on g) s)) |- ((continuous_on (\x. ((pastecart (f x)) (g x)))) s)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cpastecart * b0 b3 * b1 b3 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 ccontinuous_on / cpastecart * f0 b0 * f2 b0 f1
- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) ==> ((continuous_on h) t))), (t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) |- ((!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) ==> ((continuous_on h) t))) /\ ((continuous_on h) t))
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 c==> cSUBSET f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 ccontinuous_on f1 f2
- |- ((continuous_on (\x. x)) s)
T ccontinuous_on / b0 f0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- (((!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) ==> ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) g)) = ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) g))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c= c==> ! ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 * * part cIMAGE f0 b1 ccontinuous_on * * part co b0 f0 b1 * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 * * part cIMAGE f0 b1 ccontinuous_on * * part co b0 f0 b1 f1 * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 * * part cIMAGE f0 b1 ccontinuous_on * * part co b0 f0 b1 f1
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))))) |- ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))) s)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cpastecart * b0 b3 * b1 b3 b2 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cpastecart * f0 b1 * f1 b1 b0 f2
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) /\ (!g. (!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c/\ ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 ! ! ! c==> c/\ ccontinuous_on b1 b2 ccontinuous_on b0 * * part cIMAGE b1 b2 ccontinuous_on * * part co b0 b1 b2
- |- ((\g. (!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) g)
T * / ! ! c==> c/\ ccontinuous_on b1 b2 ccontinuous_on b0 * * part cIMAGE b1 b2 ccontinuous_on * * part co b0 b1 b2 f0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- ((!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))) = T)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c= ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 * * part cIMAGE f0 b0 ccontinuous_on * * part co f1 f0 b0 cT
- (((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) ==> ((continuous_on (g o f)) s))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 ccontinuous_on * * part co f2 f0 f1
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))))) |- (((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s)) = T)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cpastecart * b0 b3 * b1 b3 b2 c= c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 ccontinuous_on / cpastecart * f0 b0 * f2 b0 f1 cT
- ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS t)) |- (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS t)) = T)
T c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cT
- |- (((!s. ((continuous_on (\x. x)) s)) ==> ((\s. ((continuous_on (\x. x)) s)) s)) = ((\s. ((continuous_on (\x. x)) s)) s))
T c= c==> ! ccontinuous_on / b1 b0 * / ccontinuous_on / b1 b0 f0 * / ccontinuous_on / b1 b0 f0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))))) |- ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s)))) g)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cpastecart * b0 b3 * b1 b3 b2 * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cpastecart * f0 b2 * b0 b2 b1 f1
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- ((!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) = T)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c= ! ! c==> c/\ ccontinuous_on b0 b1 ccontinuous_on f0 * * part cIMAGE b0 b1 ccontinuous_on * * part co f0 b0 b1 cT
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))))) |- (((!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s)))) ==> ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s)))) g)) = ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s)))) g))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cpastecart * b0 b3 * b1 b3 b2 c= c==> ! ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cpastecart * f0 b2 * b0 b2 b1 * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cpastecart * f0 b2 * b0 b2 b1 f1 * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cpastecart * f0 b2 * b0 b2 b1 f1
- |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))))) ==> (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))))))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cpastecart * b0 b3 * b1 b3 b2 ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cpastecart * b0 b3 * b1 b3 b2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) ==> ((continuous_on h) t))) |- ((!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) ==> ((continuous_on h) t))) /\ (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) ==> ((continuous_on h) t))))
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 c/\ ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 * * part cIMAGE f0 b0 ccontinuous_on * * part co f1 f0 b0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))))) |- (((!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))) ==> ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))) s)) = ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cpastecart * b0 b3 * b1 b3 b2 c= c==> ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cpastecart * f0 b1 * f1 b1 b0 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cpastecart * f0 b1 * f1 b1 b0 f2 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cpastecart * f0 b1 * f1 b1 b0 f2
- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) ==> ((continuous_on h) t))) |- (((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) ==> ((continuous_on h) t)) = T)
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 c= c==> cSUBSET f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 f2 cT
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))))), (((continuous_on f) s) /\ ((continuous_on g) s)) |- ((((continuous_on f) s) /\ ((continuous_on g) s)) /\ ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cpastecart * b0 b3 * b1 b3 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 c/\ c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 ccontinuous_on / cpastecart * f0 b0 * f2 b0 f1
- |- (((!g. (!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) ==> ((\g. (!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) g)) = ((\g. (!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) g))
T c= c==> ! ! ! c==> c/\ ccontinuous_on b1 b2 ccontinuous_on b0 * * part cIMAGE b1 b2 ccontinuous_on * * part co b0 b1 b2 * / ! ! c==> c/\ ccontinuous_on b1 b2 ccontinuous_on b0 * * part cIMAGE b1 b2 ccontinuous_on * * part co b0 b1 b2 f0 * / ! ! c==> c/\ ccontinuous_on b1 b2 ccontinuous_on b0 * * part cIMAGE b1 b2 ccontinuous_on * * part co b0 b1 b2 f0
- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) ==> ((continuous_on h) t))), (t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) |- ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) /\ ((continuous_on h) t))
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 c==> cSUBSET f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ cSUBSET f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 f2
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))), (((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) |- ((continuous_on (g o f)) s)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 ccontinuous_on * * part co f2 f0 f1
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- (((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)) = T)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c= c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 ccontinuous_on * * part co f2 f0 f1 cT
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))))) |- (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s)))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cpastecart * b0 b3 * b1 b3 b2 ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cpastecart * f0 b1 * f1 b1 b0
- |- (((\z. (f z)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((linear (sndcart o sndcart)) = (linear (\z. (sndcart (sndcart z)))))
T c= clinear * * part co part csndcart part csndcart clinear / csndcart csndcart b0
- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) ==> ((continuous_on h) t))) |- ((\t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) ==> ((continuous_on h) t))) t)
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 * / c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 ccontinuous_on f1 b0 f2
- |- (((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))))) ==> (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s)))))) = (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))))))
T c= c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cpastecart * b0 b3 * b1 b3 b2 ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cpastecart * b0 b3 * b1 b3 b2 ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cpastecart * b0 b3 * b1 b3 b2
- |- (((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) ==> (!g. (!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))))) = (!g. (!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))))
T c= c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 ! ! ! c==> c/\ ccontinuous_on b1 b2 ccontinuous_on b0 * * part cIMAGE b1 b2 ccontinuous_on * * part co b0 b1 b2 ! ! ! c==> c/\ ccontinuous_on b1 b2 ccontinuous_on b0 * * part cIMAGE b1 b2 ccontinuous_on * * part co b0 b1 b2
- (t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) |- ((!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS s)) ==> ((continuous_on h) t))) ==> ((continuous_on h) t))
T c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ccontinuous_on f2 b0 ccontinuous_on f2 f0
- |- ((\s. ((continuous_on (\x. x)) s)) s)
T * / ccontinuous_on / b1 b0 f0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- (((!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))) ==> ((\s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))) s)) = ((\s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c= c==> ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 * * part cIMAGE f0 b0 ccontinuous_on * * part co f1 f0 b0 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 * * part cIMAGE f0 b0 ccontinuous_on * * part co f1 f0 b0 f2 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 * * part cIMAGE f0 b0 ccontinuous_on * * part co f1 f0 b0 f2
- |- ((\z'. ((pastecart (fstcart z)) (sndcart (sndcart z')))) = ((pastecart (fstcart z)) o (\z. (sndcart (sndcart z)))))
T c= / cpastecart cfstcart f0 csndcart csndcart b0 * * part co * part cpastecart cfstcart f0 / csndcart csndcart b0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) g)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 * * part cIMAGE f0 b1 ccontinuous_on * * part co b0 f0 b1 f1
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 ! ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 * * part cIMAGE f0 b1 ccontinuous_on * * part co b0 f0 b1
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))))) |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))))) /\ (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))))))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cpastecart * b0 b3 * b1 b3 b2 c/\ ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cpastecart * b0 b3 * b1 b3 b2 ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cpastecart * b0 b3 * b1 b3 b2
