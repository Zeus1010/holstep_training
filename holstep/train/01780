N Elllnyz.list_of_faces_rev
C |- (!x. (!f. (((MEM f) (list_of_faces x)) ==> ((MEM ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f)))) (list_of_faces ((MAP REVERSE) x))))))
T c==> cMEM f0 clist_of_faces f1 cMEM crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b0 cFST b0 f0 clist_of_faces cMAP part cREVERSE f1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D FUN_EQ_THM
A |- (!f. (!g. ((f = g) = (!x. ((f x) = (g x))))))
T c= c= f0 f1 ! c= * f0 b0 * f1 b0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D o_THM
A |- (!f. (!g. (!x. (((f o g) x) = (f (g x))))))
T c= co f0 f1 f2 * f0 * f1 f2
D MAP_o
A |- (!f. (!g. (!l. (((MAP (g o f)) l) = ((MAP g) ((MAP f) l))))))
T c= cMAP * * part co f0 f1 f2 cMAP f0 cMAP f1 f2
D MEM_MAP
A |- (!f. (!y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x))))))))
T c= cMEM f0 cMAP f1 f2 c? / c/\ cMEM b0 f2 c= f0 * f1 b0
D List_hypermap.list_of_faces
A |- (!L. ((list_of_faces L) = ((MAP list_pairs) L)))
T c= clist_of_faces f0 cMAP part clist_pairs f0
D Tame_list.list_pairs2_rev
A |- (!x. ((list_pairs (REVERSE x)) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))
T c= clist_pairs cREVERSE f0 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b0 cFST b0 clist_pairs f0
- |- ((_10269101 = _10269102) ==> ((REVERSE _10269101) = (REVERSE _10269102)))
T c==> c= f0 f1 c= cREVERSE f0 cREVERSE f1
+ |- ((!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x)))))))))) = (!x. (!f. (((MEM f) ((MAP list_pairs) x)) ==> ((MEM ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f)))) ((MAP (\x. ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x)))))) x))))))
T c= ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 ! ! c==> cMEM b1 cMAP part clist_pairs b0 cMEM crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b2 cFST b2 b1 cMAP / crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 b0
+ |- (T = ((list_pairs o REVERSE) = (\x. ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x)))))))
T c= cT c= * * part co part clist_pairs part cREVERSE / crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b1 cFST b1 clist_pairs b0
- (((MEM x') x) /\ (f = (list_pairs x'))) |- ((~ ((MEM x') x)) ==> ((MEM x') x))
T c==> c/\ cMEM f0 f1 c= f2 clist_pairs f0 c==> c~ cMEM f0 f1 cMEM f0 f1
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (_10269091 = _10269092)) \/ ((BIT1 _10269091) = (BIT1 _10269092)))
T c\/ c~ c= f0 f1 c= cBIT1 f0 cBIT1 f1
- |- ((_10269115 = _10269117) ==> ((~ (_10269116 = _10269118)) \/ ((_10269115 , _10269116) = (_10269117 , _10269118))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- |- ((~ (_10269095 = _10269096)) \/ ((list_pairs _10269095) = (list_pairs _10269096)))
T c\/ c~ c= f0 f1 c= clist_pairs f0 clist_pairs f1
+ |- ((_10269076 = (\d. ((SND d) , (FST d)))) = (!d. ((_10269076 d) = ((SND d) , (FST d)))))
T c= c= f0 / c, cSND b0 cFST b0 ! c= * f0 b0 c, cSND b0 cFST b0
- (!d. ((_10269076 d) = ((SND d) , (FST d)))) |- (((I _10269076) _10269077) = ((SND _10269077) , (FST _10269077)))
T c==> ! c= * f0 b0 c, cSND b0 cFST b0 c= cI f0 f1 c, cSND f1 cFST f1
+ (((MEM x') x) /\ (f = (list_pairs x'))) |- (((~ ((MEM _10269078) x)) \/ (~ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs _10269078))))))) = ((~ ((MEM _10269078) x)) \/ (~ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x')))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs _10269078))))))))
T c==> c/\ cMEM f0 f1 c= f2 clist_pairs f0 c= c\/ c~ cMEM f3 f1 c~ c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f4 f2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f4 clist_pairs f3 c\/ c~ cMEM f3 f1 c~ c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f4 clist_pairs f0 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f4 clist_pairs f3
+ |- (((!x. ((list_pairs (REVERSE x)) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x)))))) ==> ((\x. ((list_pairs (REVERSE x)) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x)))))) x)) = ((\x. ((list_pairs (REVERSE x)) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x)))))) x))
T c= c==> ! c= clist_pairs cREVERSE b0 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b1 cFST b1 clist_pairs b0 * / c= clist_pairs cREVERSE b0 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b1 cFST b1 clist_pairs b0 f0 * / c= clist_pairs cREVERSE b0 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b1 cFST b1 clist_pairs b0 f0
- |- ((?x. (P x)) = ((P T) \/ (P F)))
T c= c? / * f0 b0 c\/ * f0 cT * f0 cF
+ (?x. (((MEM x) x) /\ (f = (list_pairs x)))) |- ((~ (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))) ==> F)
T c==> c? / c/\ cMEM b0 f0 c= f1 clist_pairs b0 c==> c~ c? / c/\ cMEM b0 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f2 f1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f2 clist_pairs b0 cF
+ (~ (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))) |- (!x. ((~ ((MEM x) x)) \/ (~ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x))))))))
T c==> c~ c? / c/\ cMEM b0 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 f2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs b0 ! c\/ c~ cMEM b0 f0 c~ c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 f2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs b0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (_10269115 = _10269117), (_10269116 = _10269118) |- ((_10269116 = _10269118) /\ ((_10269115 , _10269116) = (_10269117 , _10269118)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= c, f0 f2 c, f1 f3
- (~ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x')))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x')))))) |- ((~ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x')))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x')))))) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x')))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x'))))))
T c==> c~ c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f0 clist_pairs f1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f0 clist_pairs f1 c/\ c~ c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f0 clist_pairs f1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f0 clist_pairs f1 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f0 clist_pairs f1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f0 clist_pairs f1
+ (~ (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))) |- (((!x. ((~ ((MEM x) x)) \/ (~ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))) ==> ((\x. ((~ ((MEM x) x)) \/ (~ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))) _10269078)) = ((\x. ((~ ((MEM x) x)) \/ (~ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))) _10269078))
T c==> c~ c? / c/\ cMEM b0 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 f2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs b0 c= c==> ! c\/ c~ cMEM b0 f0 c~ c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 f2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs b0 * / c\/ c~ cMEM b0 f0 c~ c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 f2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs b0 f3 * / c\/ c~ cMEM b0 f0 c~ c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 f2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs b0 f3
- |- ((_10269095 = _10269096) ==> ((list_pairs _10269095) = (list_pairs _10269096)))
T c==> c= f0 f1 c= clist_pairs f0 clist_pairs f1
+ |- (((!L. ((list_of_faces L) = ((MAP list_pairs) L))) ==> ((\L. ((list_of_faces L) = ((MAP list_pairs) L))) L)) = ((\L. ((list_of_faces L) = ((MAP list_pairs) L))) L))
T c= c==> ! c= clist_of_faces b0 cMAP part clist_pairs b0 * / c= clist_of_faces b0 cMAP part clist_pairs b0 f0 * / c= clist_of_faces b0 cMAP part clist_pairs b0 f0
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- ((\g. (!l. (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l)))) g)
T * / ! c= cMAP b0 cMAP f0 b1 cMAP * * part co b0 f0 b1 f1
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ |- (((_10269076 = (\d. ((SND d) , (FST d)))) ==> ((!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x)))))))))) = (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))))))) = T)
T c= c==> c= f0 / c, cSND b0 cFST b0 c= ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f0 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f0 clist_pairs b2 cT
+ |- ((\l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))) l)
T * / c= cMEM f0 cMAP f1 b0 c? / c/\ cMEM b1 b0 c= f0 * f1 b1 f2
+ |- ((\l. (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l))) l)
T * / c= cMAP f0 cMAP f1 b0 cMAP * * part co f0 f1 b0 f2
+ (((MAP (g o f)) l) = ((MAP g) ((MAP f) l))) |- (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l))
T c==> c= cMAP * * part co f0 f1 f2 cMAP f0 cMAP f1 f2 c= cMAP f0 cMAP f1 f2 cMAP * * part co f0 f1 f2
+ (((MEM x') x) /\ (f = (list_pairs x'))) |- ((((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x')))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x'))))) = (((MEM x') x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x')))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x')))))))
T c==> c/\ cMEM f0 f1 c= f2 clist_pairs f0 c= c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f3 clist_pairs f0 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f3 clist_pairs f0 c/\ cMEM f0 f1 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f3 clist_pairs f0 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f3 clist_pairs f0
+ |- ((!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x))))))))) = T)
T c= ! c==> c? / c/\ cMEM b1 f0 c= b0 clist_pairs b1 c? / c/\ cMEM b1 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 b0 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs b1 cT
- |- ((?x'. (((MEM x) x) /\ (f = (list_pairs x')))) = (((MEM x) x) /\ (?x. (f = (list_pairs x)))))
T c= c? / c/\ cMEM f0 f1 c= f2 clist_pairs b0 c/\ cMEM f0 f1 c? / c= f2 clist_pairs b0
+ |- (((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F) = (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x)))))))))))
T c= c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2
- |- ((f x) = ((I f) x))
T c= * f0 f1 cI f0 f1
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ (~ (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))), (((MEM x') x) /\ (f = (list_pairs x'))) |- ((((MEM _10269078) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x')))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs _10269078)))))) ==> F)
T c==> c~ c? / c/\ cMEM b0 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 f2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs b0 c==> c/\ cMEM f3 f0 c= f2 clist_pairs f3 c==> c/\ cMEM f4 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs f3 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs f4 cF
+ (~ (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))), (((MEM x') x) /\ (f = (list_pairs x'))) |- ((~ ((MEM _10269078) x)) \/ (~ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x')))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs _10269078)))))))
T c==> c~ c? / c/\ cMEM b0 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 f2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs b0 c==> c/\ cMEM f3 f0 c= f2 clist_pairs f3 c\/ c~ cMEM f4 f0 c~ c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs f3 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs f4
+ |- ((\y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x))))))) y)
T * / ! c= cMEM b0 cMAP f0 b1 c? / c/\ cMEM b2 b1 c= b0 * f0 b2 f1
+ |- (((!g. (!x. (((f o g) x) = (f (g x))))) ==> ((\g. (!x. (((f o g) x) = (f (g x))))) g)) = ((\g. (!x. (((f o g) x) = (f (g x))))) g))
T c= c==> ! ! c= co f0 b0 b1 * f0 * b0 b1 * / ! c= co f0 b0 b1 * f0 * b0 b1 f1 * / ! c= co f0 b0 b1 * f0 * b0 b1 f1
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?x. t) = t)
T c= c? / f0 f0
- |- ((!x'. ((~ ((MEM x) x)) \/ (~ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x')))))))) = ((~ ((MEM x) x)) \/ (!x. (~ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))))
T c= ! c\/ c~ cMEM f0 f1 c~ c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f2 f3 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f2 clist_pairs b0 c\/ c~ cMEM f0 f1 ! c~ c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f2 f3 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f2 clist_pairs b0
- (_10269087 = _10269089), (_10269088 = _10269090) |- ((_10269088 = _10269090) /\ (((MEM _10269089) _10269090) \/ (~ ((MEM _10269087) _10269088))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ cMEM f1 f3 c~ cMEM f0 f2
+ |- ((!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x)))))))))) = (!_10269076. ((!d. ((_10269076 d) = ((SND d) , (FST d)))) ==> (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))))))))
T c= ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 ! c==> ! c= * b0 b1 c, cSND b1 cFST b1 ! ! c==> c? / c/\ cMEM b3 b1 c= b2 clist_pairs b3 c? / c/\ cMEM b3 b1 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP b0 b2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP b0 clist_pairs b3
+ |- (((!f. (!g. (!x. (((f o g) x) = (f (g x)))))) ==> ((\f. (!g. (!x. (((f o g) x) = (f (g x)))))) f)) = ((\f. (!g. (!x. (((f o g) x) = (f (g x)))))) f))
T c= c==> ! ! ! c= co b0 b1 b2 * b0 * b1 b2 * / ! ! c= co b0 b1 b2 * b0 * b1 b2 f0 * / ! ! c= co b0 b1 b2 * b0 * b1 b2 f0
+ |- (((~ (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))) ==> F) = (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x))))))))
T c= c==> c~ c? / c/\ cMEM b0 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 f2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs b0 cF c? / c/\ cMEM b0 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 f2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs b0
- (_10269107 = _10269109), (_10269108 = _10269110) |- ((_10269108 = _10269110) /\ (((I _10269107) _10269108) = ((I _10269109) _10269110)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= cI f0 f2 cI f1 f3
- |- ((~ (_10269115 = _10269117)) \/ ((~ (_10269116 = _10269118)) \/ ((_10269115 , _10269116) = (_10269117 , _10269118))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- (_10269087 = _10269089) |- ((_10269087 = _10269089) /\ ((~ (_10269088 = _10269090)) \/ (((MEM _10269089) _10269090) \/ (~ ((MEM _10269087) _10269088)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cMEM f1 f3 c~ cMEM f0 f2
- |- ((_10269087 = _10269089) ==> ((~ (_10269088 = _10269090)) \/ (((MEM _10269089) _10269090) \/ (~ ((MEM _10269087) _10269088)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cMEM f1 f3 c~ cMEM f0 f2
- (_10269097 = _10269099) |- ((_10269098 = _10269100) ==> (((MAP _10269097) _10269098) = ((MAP _10269099) _10269100)))
T c==> c= f0 f1 c==> c= f2 f3 c= cMAP f0 f2 cMAP f1 f3
+ (((MEM x') x) /\ (f = (list_pairs x'))) |- (((((MEM x') x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x')))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x')))))) ==> F) = F)
T c==> c/\ cMEM f0 f1 c= f2 clist_pairs f0 c= c==> c/\ cMEM f0 f1 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f3 clist_pairs f0 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f3 clist_pairs f0 cF cF
- |- ((((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F) ==> ((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F)) ==> (((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F) ==> ((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F)))
T c==> c==> c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF c==> c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF
+ |- (((!g. ((f = g) = (!x. ((f x) = (g x))))) ==> ((\g. ((f = g) = (!x. ((f x) = (g x))))) g)) = ((\g. ((f = g) = (!x. ((f x) = (g x))))) g))
T c= c==> ! c= c= f0 b0 ! c= * f0 b1 * b0 b1 * / c= c= f0 b0 ! c= * f0 b1 * b0 b1 f1 * / c= c= f0 b0 ! c= * f0 b1 * b0 b1 f1
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!x. ((P x) \/ Q)) = ((!x. (P x)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
- |- ((!x'. ((~ ((MEM x') x)) \/ (~ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))) = ((!x. (~ ((MEM x) x))) \/ (~ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x))))))))
T c= ! c\/ c~ cMEM b0 f0 c~ c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 f2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs f3 c\/ ! c~ cMEM b0 f0 c~ c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 f2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs f3
- ((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F) |- (((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F) /\ ((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F))
T c==> c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF c/\ c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF
+ |- (((!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))) ==> ((\l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))) l)) = ((\l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))) l))
T c= c==> ! c= cMEM f0 cMAP f1 b0 c? / c/\ cMEM b1 b0 c= f0 * f1 b1 * / c= cMEM f0 cMAP f1 b0 c? / c/\ cMEM b1 b0 c= f0 * f1 b1 f2 * / c= cMEM f0 cMAP f1 b0 c? / c/\ cMEM b1 b0 c= f0 * f1 b1 f2
- (!d. ((_10269076 d) = ((SND d) , (FST d)))) |- ((\d. (((I _10269076) d) = ((SND d) , (FST d)))) _10269077)
T c==> ! c= * f0 b0 c, cSND b0 cFST b0 * / c= cI f0 b0 c, cSND b0 cFST b0 f1
- (_10269111 = _10269112) |- ((_10269111 = _10269112) /\ ((SND _10269111) = (SND _10269112)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cSND f0 cSND f1
+ |- ((\f. (!y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))))) f)
T * / ! ! c= cMEM b1 cMAP b0 b2 c? / c/\ cMEM b3 b2 c= b1 * b0 b3 f0
+ (~ (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))) |- ((((\x. (((MEM x) x) /\ (f = (list_pairs x)))) x') ==> F) = T)
T c==> c~ c? / c/\ cMEM b0 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 f2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs b0 c= c==> * / c/\ cMEM b0 f0 c= f2 clist_pairs b0 f3 cF cT
+ ((list_pairs o REVERSE) = (\x. ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x)))))) |- ((!x. (!f. (((MEM f) ((MAP list_pairs) x)) ==> ((MEM ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f)))) ((MAP (list_pairs o REVERSE)) x))))) = (!x. (!f. (((MEM f) ((MAP list_pairs) x)) ==> ((MEM ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f)))) ((MAP (\x. ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x)))))) x))))))
T c==> c= * * part co part clist_pairs part cREVERSE / crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b1 cFST b1 clist_pairs b0 c= ! ! c==> cMEM b1 cMAP part clist_pairs b0 cMEM crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b2 cFST b2 b1 cMAP * * part co part clist_pairs part cREVERSE b0 ! ! c==> cMEM b1 cMAP part clist_pairs b0 cMEM crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b2 cFST b2 b1 cMAP / crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 b0
+ |- (((!d. ((_10269076 d) = ((SND d) , (FST d)))) ==> (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x))))))))))) = T)
T c= c==> ! c= * f0 b0 c, cSND b0 cFST b0 ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f0 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f0 clist_pairs b2 cT
- |- ((?x'. (((MEM x') x) /\ (f = (list_pairs x)))) = ((?x. ((MEM x) x)) /\ (f = (list_pairs x))))
T c= c? / c/\ cMEM b0 f0 c= f1 clist_pairs f2 c/\ c? / cMEM b0 f0 c= f1 clist_pairs f2
+ |- ((!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x)))))))))) = (!_10269076. ((_10269076 = (\d. ((SND d) , (FST d)))) ==> (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))))))))
T c= ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 ! c==> c= b0 / c, cSND b1 cFST b1 ! ! c==> c? / c/\ cMEM b3 b1 c= b2 clist_pairs b3 c? / c/\ cMEM b3 b1 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP b0 b2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP b0 clist_pairs b3
- (~ (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))), (((MEM x') x) /\ (f = (list_pairs x'))) |- ((~ F) ==> F)
T c==> c~ c? / c/\ cMEM b0 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 f2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs b0 c==> c/\ cMEM f3 f0 c= f2 clist_pairs f3 c==> c~ cF cF
- |- ((_10269104 = _10269106) ==> ((~ (_10269103 = _10269105)) \/ (((rot _10269103) _10269104) = ((rot _10269105) _10269106))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= crot f2 f0 crot f3 f1
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- (_10269093 = _10269094) |- ((_10269093 = _10269094) /\ ((NUMERAL _10269093) = (NUMERAL _10269094)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- (_10269091 = _10269092) |- ((_10269091 = _10269092) /\ ((BIT1 _10269091) = (BIT1 _10269092)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT1 f0 cBIT1 f1
- (((MEM x') x) /\ (f = (list_pairs x'))) |- (((MEM x') x) = ((MEM x') x))
T c==> c/\ cMEM f0 f1 c= f2 clist_pairs f0 c= cMEM f0 f1 cMEM f0 f1
+ (~ (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))) |- (!x'. (((\x. (((MEM x) x) /\ (f = (list_pairs x)))) x') ==> F))
T c==> c~ c? / c/\ cMEM b0 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 f2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs b0 ! c==> * / c/\ cMEM b1 f0 c= f2 clist_pairs b1 b0 cF
+ |- ((!_10269076. ((!d. ((_10269076 d) = ((SND d) , (FST d)))) ==> (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))))))) = ((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F))
T c= ! c==> ! c= * b0 b1 c, cSND b1 cFST b1 ! ! c==> c? / c/\ cMEM b3 b1 c= b2 clist_pairs b3 c? / c/\ cMEM b3 b1 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP b0 b2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP b0 clist_pairs b3 c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF
+ |- ((\L. ((list_of_faces L) = ((MAP list_pairs) L))) L)
T * / c= clist_of_faces b0 cMAP part clist_pairs b0 f0
- |- ((~ (_10269093 = _10269094)) \/ ((NUMERAL _10269093) = (NUMERAL _10269094)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- |- ((_10269107 = _10269109) ==> ((~ (_10269108 = _10269110)) \/ (((I _10269107) _10269108) = ((I _10269109) _10269110))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cI f0 f2 cI f1 f3
+ |- (((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))) = T)
T c= c==> c? / c/\ cMEM b0 f0 c= f1 clist_pairs b0 c? / c/\ cMEM b0 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f2 f1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f2 clist_pairs b0 cT
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((!f. (!g. ((f = g) = (!x. ((f x) = (g x)))))) ==> ((\f. (!g. ((f = g) = (!x. ((f x) = (g x)))))) f)) = ((\f. (!g. ((f = g) = (!x. ((f x) = (g x)))))) f))
T c= c==> ! ! c= c= b0 b1 ! c= * b0 b2 * b1 b2 * / ! c= c= b0 b1 ! c= * b0 b2 * b1 b2 f0 * / ! c= c= b0 b1 ! c= * b0 b2 * b1 b2 f0
+ ((\x. (((MEM x) x) /\ (f = (list_pairs x)))) x') |- (((((MEM x') x) /\ (f = (list_pairs x'))) ==> F) = F)
T c==> * / c/\ cMEM b0 f0 c= f1 clist_pairs b0 f2 c= c==> c/\ cMEM f2 f0 c= f1 clist_pairs f2 cF cF
+ (?x. (((MEM x) x) /\ (f = (list_pairs x)))) |- ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) /\ (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x))))))))
T c==> c? / c/\ cMEM b0 f0 c= f1 clist_pairs b0 c/\ c? / c/\ cMEM b0 f0 c= f1 clist_pairs b0 c? / c/\ cMEM b0 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f2 f1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f2 clist_pairs b0
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- |- ((~ (_10269097 = _10269099)) \/ ((~ (_10269098 = _10269100)) \/ (((MAP _10269097) _10269098) = ((MAP _10269099) _10269100))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cMAP f0 f2 cMAP f1 f3
- |- ((_10269093 = _10269094) ==> ((NUMERAL _10269093) = (NUMERAL _10269094)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ |- (((~ a) \/ (~ b)) = (~ (a /\ b)))
T c= c\/ c~ f0 c~ f1 c~ c/\ f0 f1
+ |- ((\g. ((f = g) = (!x. ((f x) = (g x))))) g)
T * / c= c= f0 b0 ! c= * f0 b1 * b0 b1 f1
- |- ((((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F) ==> ((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F)) = ((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F))
T c= c==> c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF
+ |- (((!l. (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l))) ==> ((\l. (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l))) l)) = ((\l. (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l))) l))
T c= c==> ! c= cMAP f0 cMAP f1 b0 cMAP * * part co f0 f1 b0 * / c= cMAP f0 cMAP f1 b0 cMAP * * part co f0 f1 b0 f2 * / c= cMAP f0 cMAP f1 b0 cMAP * * part co f0 f1 b0 f2
+ |- (!_10269076. ((_10269076 = (\d. ((SND d) , (FST d)))) ==> ((!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x)))))))))) = (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))))))))
T c==> c= f0 / c, cSND b0 cFST b0 c= ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f0 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f0 clist_pairs b2
+ |- ((!x. (!f. (((MEM f) ((MAP list_pairs) x)) ==> ((MEM ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f)))) ((MAP (list_pairs o REVERSE)) x))))) = (!x. (!f. (((MEM f) (list_of_faces x)) ==> ((MEM ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f)))) (list_of_faces ((MAP REVERSE) x)))))))
T c= ! ! c==> cMEM b1 cMAP part clist_pairs b0 cMEM crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b2 cFST b2 b1 cMAP * * part co part clist_pairs part cREVERSE b0 ! ! c==> cMEM b1 clist_of_faces b0 cMEM crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b2 cFST b2 b1 clist_of_faces cMAP part cREVERSE b0
+ |- (!_10269076. ((!d. ((_10269076 d) = ((SND d) , (FST d)))) ==> (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x))))))))))))
T c==> ! c= * f0 b0 c, cSND b0 cFST b0 ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f0 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f0 clist_pairs b2
+ |- (((!x. (((f o g) x) = (f (g x)))) ==> ((\x. (((f o g) x) = (f (g x)))) x)) = ((\x. (((f o g) x) = (f (g x)))) x))
T c= c==> ! c= co f0 f1 b0 * f0 * f1 b0 * / c= co f0 f1 b0 * f0 * f1 b0 f2 * / c= co f0 f1 b0 * f0 * f1 b0 f2
+ (~ (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))) |- ((\x. ((~ ((MEM x) x)) \/ (~ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))) _10269078)
T c==> c~ c? / c/\ cMEM b0 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 f2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs b0 * / c\/ c~ cMEM b0 f0 c~ c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 f2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs b0 f3
- |- ((~ (_10269101 = _10269102)) \/ ((REVERSE _10269101) = (REVERSE _10269102)))
T c\/ c~ c= f0 f1 c= cREVERSE f0 cREVERSE f1
- |- ((_10269111 = _10269112) ==> ((SND _10269111) = (SND _10269112)))
T c==> c= f0 f1 c= cSND f0 cSND f1
- ((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F) |- ((((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F) ==> ((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F)) ==> ((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F))
T c==> c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF c==> c==> c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF
+ (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l)) |- (((MAP (g o f)) l) = ((MAP g) ((MAP f) l)))
T c==> c= cMAP f0 cMAP f1 f2 cMAP * * part co f0 f1 f2 c= cMAP * * part co f0 f1 f2 cMAP f0 cMAP f1 f2
- |- ((_10269091 = _10269092) ==> ((BIT1 _10269091) = (BIT1 _10269092)))
T c==> c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ |- ((\f. (!g. ((f = g) = (!x. ((f x) = (g x)))))) f)
T * / ! c= c= b0 b1 ! c= * b0 b2 * b1 b2 f0
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- |- ((_10269097 = _10269099) ==> ((~ (_10269098 = _10269100)) \/ (((MAP _10269097) _10269098) = ((MAP _10269099) _10269100))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cMAP f0 f2 cMAP f1 f3
- (_10269104 = _10269106) |- ((_10269103 = _10269105) ==> (((rot _10269103) _10269104) = ((rot _10269105) _10269106)))
T c==> c= f0 f1 c==> c= f2 f3 c= crot f2 f0 crot f3 f1
+ |- (((!g. (!l. (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l)))) ==> ((\g. (!l. (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l)))) g)) = ((\g. (!l. (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l)))) g))
T c= c==> ! ! c= cMAP b0 cMAP f0 b1 cMAP * * part co b0 f0 b1 * / ! c= cMAP b0 cMAP f0 b1 cMAP * * part co b0 f0 b1 f1 * / ! c= cMAP b0 cMAP f0 b1 cMAP * * part co b0 f0 b1 f1
+ (~ (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))), ((\x. (((MEM x) x) /\ (f = (list_pairs x)))) x') |- (((\x. (((MEM x) x) /\ (f = (list_pairs x)))) x') /\ F)
T c==> c~ c? / c/\ cMEM b0 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 f2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs b0 c==> * / c/\ cMEM b0 f0 c= f2 clist_pairs b0 f3 c/\ * / c/\ cMEM b0 f0 c= f2 clist_pairs b0 f3 cF
+ (~ (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))) |- (((\x. (((MEM x) x) /\ (f = (list_pairs x)))) x') ==> F)
T c==> c~ c? / c/\ cMEM b0 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 f2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs b0 c==> * / c/\ cMEM b0 f0 c= f2 clist_pairs b0 f3 cF
- |- ((~ (_10269104 = _10269106)) \/ ((~ (_10269103 = _10269105)) \/ (((rot _10269103) _10269104) = ((rot _10269105) _10269106))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= crot f2 f0 crot f3 f1
- (_10269097 = _10269099) |- ((_10269097 = _10269099) /\ ((~ (_10269098 = _10269100)) \/ (((MAP _10269097) _10269098) = ((MAP _10269099) _10269100))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cMAP f0 f2 cMAP f1 f3
- (_10269095 = _10269096) |- ((_10269095 = _10269096) /\ ((list_pairs _10269095) = (list_pairs _10269096)))
T c==> c= f0 f1 c/\ c= f0 f1 c= clist_pairs f0 clist_pairs f1
+ |- ((\f. (!g. (!x. (((f o g) x) = (f (g x)))))) f)
T * / ! ! c= co b0 b1 b2 * b0 * b1 b2 f0
+ |- ((s = (\d. (t d))) = (!d. ((s d) = (t d))))
T c= c= f0 / * f1 b0 ! c= * f0 b0 * f1 b0
- |- ((!x. (P \/ (Q x))) = (P \/ (!x. (Q x))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- (_10269101 = _10269102) |- ((_10269101 = _10269102) /\ ((REVERSE _10269101) = (REVERSE _10269102)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cREVERSE f0 cREVERSE f1
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- (((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F) ==> ((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F)) |- ((((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F) ==> ((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F)) /\ (((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F) ==> ((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F)))
T c==> c==> c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF c/\ c==> c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF c==> c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
+ ((list_pairs o REVERSE) = (\x. ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x)))))) |- (!x. (!f. (((MEM f) ((MAP list_pairs) x)) ==> ((MEM ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f)))) ((MAP (list_pairs o REVERSE)) x)))))
T c==> c= * * part co part clist_pairs part cREVERSE / crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b1 cFST b1 clist_pairs b0 ! ! c==> cMEM b1 cMAP part clist_pairs b0 cMEM crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b2 cFST b2 b1 cMAP * * part co part clist_pairs part cREVERSE b0
- (_10269087 = _10269089), (_10269088 = _10269090) |- (((((MEM _10269087) _10269088) = ((MEM _10269089) _10269090)) ==> (((MEM _10269089) _10269090) \/ (~ ((MEM _10269087) _10269088)))) = (((MEM _10269089) _10269090) \/ (~ ((MEM _10269087) _10269088))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cMEM f0 f2 cMEM f1 f3 c\/ cMEM f1 f3 c~ cMEM f0 f2 c\/ cMEM f1 f3 c~ cMEM f0 f2
- (_10269115 = _10269117) |- ((_10269115 = _10269117) /\ ((~ (_10269116 = _10269118)) \/ ((_10269115 , _10269116) = (_10269117 , _10269118))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- |- ((~ (_10269087 = _10269089)) \/ ((~ (_10269088 = _10269090)) \/ (((MEM _10269089) _10269090) \/ (~ ((MEM _10269087) _10269088)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cMEM f1 f3 c~ cMEM f0 f2
+ (((MEM x') x) /\ (f = (list_pairs x'))) |- (((MEM x') x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x')))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x'))))))
T c==> c/\ cMEM f0 f1 c= f2 clist_pairs f0 c/\ cMEM f0 f1 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f3 clist_pairs f0 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f3 clist_pairs f0
- ((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F), (((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F) ==> ((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F)) |- (((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F) /\ ((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F))
T c==> c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF c==> c==> c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF c/\ c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF
- (_10269087 = _10269089) |- ((_10269088 = _10269090) ==> (((MEM _10269089) _10269090) \/ (~ ((MEM _10269087) _10269088))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cMEM f1 f3 c~ cMEM f0 f2
+ |- ((!_10269076. ((_10269076 = c) ==> (P = (Q _10269076)))) ==> (P = (!_10269076. ((_10269076 = c) ==> (Q _10269076)))))
T c==> ! c==> c= b0 f0 c= f1 * f2 b0 c= f1 ! c==> c= b0 f0 * f2 b0
- (((MEM x') x) /\ (f = (list_pairs x'))) |- ((((I _10269076) _10269077) = ((SND _10269077) , (FST _10269077))) = (((I _10269076) _10269077) = ((SND _10269077) , (FST _10269077))))
T c==> c/\ cMEM f0 f1 c= f2 clist_pairs f0 c= c= cI f3 f4 c, cSND f4 cFST f4 c= cI f3 f4 c, cSND f4 cFST f4
+ |- (((!f. (!y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))))) ==> ((\f. (!y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))))) f)) = ((\f. (!y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))))) f))
T c= c==> ! ! ! c= cMEM b1 cMAP b0 b2 c? / c/\ cMEM b3 b2 c= b1 * b0 b3 * / ! ! c= cMEM b1 cMAP b0 b2 c? / c/\ cMEM b3 b2 c= b1 * b0 b3 f0 * / ! ! c= cMEM b1 cMAP b0 b2 c? / c/\ cMEM b3 b2 c= b1 * b0 b3 f0
+ |- ((\x. ((list_pairs (REVERSE x)) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x)))))) x)
T * / c= clist_pairs cREVERSE b0 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b1 cFST b1 clist_pairs b0 f0
+ (!d. ((_10269076 d) = ((SND d) , (FST d)))) |- ((!d. ((_10269076 d) = ((SND d) , (FST d)))) /\ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))))))
T c==> ! c= * f0 b0 c, cSND b0 cFST b0 c/\ ! c= * f0 b0 c, cSND b0 cFST b0 ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f0 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f0 clist_pairs b2
- |- (((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F) ==> ((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F))
T c==> c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF
- (~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) |- ((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) /\ F)
T c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 c/\ c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF
+ (?x. (((MEM x) x) /\ (f = (list_pairs x)))), (~ (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))) |- ((~ (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))) /\ F)
T c==> c? / c/\ cMEM b0 f0 c= f1 clist_pairs b0 c==> c~ c? / c/\ cMEM b0 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f2 f1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f2 clist_pairs b0 c/\ c~ c? / c/\ cMEM b0 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f2 f1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f2 clist_pairs b0 cF
- (_10269107 = _10269109) |- ((_10269107 = _10269109) /\ ((~ (_10269108 = _10269110)) \/ (((I _10269107) _10269108) = ((I _10269109) _10269110))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cI f0 f2 cI f1 f3
+ |- (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x))))))))))
T c==> c? / c/\ cMEM b0 f0 c= f1 clist_pairs b0 c? / c/\ cMEM b0 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f2 f1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f2 clist_pairs b0
+ |- ((list_pairs o REVERSE) = (\x. ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))
T c= * * part co part clist_pairs part cREVERSE / crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b1 cFST b1 clist_pairs b0
+ |- (!x. (!f. (((MEM f) ((MAP list_pairs) x)) ==> ((MEM ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f)))) ((MAP (\x. ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x)))))) x)))))
T c==> cMEM f0 cMAP part clist_pairs f1 cMEM crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b0 cFST b0 f0 cMAP / crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b1 cFST b1 clist_pairs b0 f1
- |- (((((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F) ==> ((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F)) ==> (((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F) ==> ((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F))) = (((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F) ==> ((~ (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))) ==> F)))
T c= c==> c==> c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF c==> c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF c==> c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF c==> c~ ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 cF
- |- ((~ (_10269107 = _10269109)) \/ ((~ (_10269108 = _10269110)) \/ (((I _10269107) _10269108) = ((I _10269109) _10269110))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cI f0 f2 cI f1 f3
+ |- (((!y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x))))))) ==> ((\y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x))))))) y)) = ((\y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x))))))) y))
T c= c==> ! ! c= cMEM b0 cMAP f0 b1 c? / c/\ cMEM b2 b1 c= b0 * f0 b2 * / ! c= cMEM b0 cMAP f0 b1 c? / c/\ cMEM b2 b1 c= b0 * f0 b2 f1 * / ! c= cMEM b0 cMAP f0 b1 c? / c/\ cMEM b2 b1 c= b0 * f0 b2 f1
+ |- (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l))
T c= cMAP f0 cMAP f1 f2 cMAP * * part co f0 f1 f2
- |- ((!f. (P f)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- (_10269107 = _10269109) |- ((_10269108 = _10269110) ==> (((I _10269107) _10269108) = ((I _10269109) _10269110)))
T c==> c= f0 f1 c==> c= f2 f3 c= cI f0 f2 cI f1 f3
- (~ ((MEM x') x)), (((MEM x') x) /\ (f = (list_pairs x'))) |- ((~ ((MEM x') x)) /\ ((MEM x') x))
T c==> c~ cMEM f0 f1 c==> c/\ cMEM f0 f1 c= f2 clist_pairs f0 c/\ c~ cMEM f0 f1 cMEM f0 f1
- (!d. ((_10269076 d) = ((SND d) , (FST d)))) |- (((!d. (((I _10269076) d) = ((SND d) , (FST d)))) ==> ((\d. (((I _10269076) d) = ((SND d) , (FST d)))) _10269077)) = ((\d. (((I _10269076) d) = ((SND d) , (FST d)))) _10269077))
T c==> ! c= * f0 b0 c, cSND b0 cFST b0 c= c==> ! c= cI f0 b0 c, cSND b0 cFST b0 * / c= cI f0 b0 c, cSND b0 cFST b0 f1 * / c= cI f0 b0 c, cSND b0 cFST b0 f1
- (((MEM x') x) /\ (f = (list_pairs x'))) |- (F = F)
T c==> c/\ cMEM f0 f1 c= f2 clist_pairs f0 c= cF cF
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (_10269111 = _10269112)) \/ ((SND _10269111) = (SND _10269112)))
T c\/ c~ c= f0 f1 c= cSND f0 cSND f1
+ |- (((!_10269076. ((_10269076 = (\d. ((SND d) , (FST d)))) ==> ((!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x)))))))))) = (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x))))))))))))) ==> ((!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x)))))))))) = (!_10269076. ((_10269076 = (\d. ((SND d) , (FST d)))) ==> (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))))))))) = ((!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x)))))))))) = (!_10269076. ((_10269076 = (\d. ((SND d) , (FST d)))) ==> (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x))))))))))))))
T c= c==> ! c==> c= b0 / c, cSND b1 cFST b1 c= ! ! c==> c? / c/\ cMEM b3 b1 c= b2 clist_pairs b3 c? / c/\ cMEM b3 b1 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b4 cFST b4 b2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b4 cFST b4 clist_pairs b3 ! ! c==> c? / c/\ cMEM b3 b1 c= b2 clist_pairs b3 c? / c/\ cMEM b3 b1 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP b0 b2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP b0 clist_pairs b3 c= ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 ! c==> c= b0 / c, cSND b1 cFST b1 ! ! c==> c? / c/\ cMEM b3 b1 c= b2 clist_pairs b3 c? / c/\ cMEM b3 b1 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP b0 b2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP b0 clist_pairs b3 c= ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 ! c==> c= b0 / c, cSND b1 cFST b1 ! ! c==> c? / c/\ cMEM b3 b1 c= b2 clist_pairs b3 c? / c/\ cMEM b3 b1 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP b0 b2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP b0 clist_pairs b3
+ ((\x. (((MEM x) x) /\ (f = (list_pairs x)))) x') |- (((MEM x') x) /\ (f = (list_pairs x')))
T c==> * / c/\ cMEM b0 f0 c= f1 clist_pairs b0 f2 c/\ cMEM f2 f0 c= f1 clist_pairs f2
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
+ (~ (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))) |- ((((MEM x') x) /\ (f = (list_pairs x'))) ==> F)
T c==> c~ c? / c/\ cMEM b0 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 f2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs b0 c==> c/\ cMEM f3 f0 c= f2 clist_pairs f3 cF
+ |- (((!f. (!g. (!l. (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l))))) ==> ((\f. (!g. (!l. (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l))))) f)) = ((\f. (!g. (!l. (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l))))) f))
T c= c==> ! ! ! c= cMAP b1 cMAP b0 b2 cMAP * * part co b1 b0 b2 * / ! ! c= cMAP b1 cMAP b0 b2 cMAP * * part co b1 b0 b2 f0 * / ! ! c= cMAP b1 cMAP b0 b2 cMAP * * part co b1 b0 b2 f0
- (_10269113 = _10269114) |- ((_10269113 = _10269114) /\ ((FST _10269113) = (FST _10269114)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cFST f0 cFST f1
- |- ((?x'. (((MEM x') x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))) = ((?x. ((MEM x) x)) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x)))))))
T c= c? / c/\ cMEM b0 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b1 cFST b1 f1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b1 cFST b1 clist_pairs f2 c/\ c? / cMEM b0 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b0 cFST b0 f1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b0 cFST b0 clist_pairs f2
- |- ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x))))
T c= c? / c/\ f0 * f1 b0 c/\ f0 c? / * f1 b0
+ |- ((!_10269076. ((_10269076 = (\d. ((SND d) , (FST d)))) ==> ((!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x)))))))))) = (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x))))))))))))) ==> ((!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x)))))))))) = (!_10269076. ((_10269076 = (\d. ((SND d) , (FST d)))) ==> (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x))))))))))))))
T c==> ! c==> c= b0 / c, cSND b1 cFST b1 c= ! ! c==> c? / c/\ cMEM b3 b1 c= b2 clist_pairs b3 c? / c/\ cMEM b3 b1 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b4 cFST b4 b2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b4 cFST b4 clist_pairs b3 ! ! c==> c? / c/\ cMEM b3 b1 c= b2 clist_pairs b3 c? / c/\ cMEM b3 b1 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP b0 b2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP b0 clist_pairs b3 c= ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 ! c==> c= b0 / c, cSND b1 cFST b1 ! ! c==> c? / c/\ cMEM b3 b1 c= b2 clist_pairs b3 c? / c/\ cMEM b3 b1 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP b0 b2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP b0 clist_pairs b3
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
+ |- (!x. (!f. (((MEM f) ((MAP list_pairs) x)) ==> ((MEM ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f)))) ((MAP (list_pairs o REVERSE)) x)))))
T c==> cMEM f0 cMAP part clist_pairs f1 cMEM crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b0 cFST b0 f0 cMAP * * part co part clist_pairs part cREVERSE f1
+ |- ((\x. (((f o g) x) = (f (g x)))) x)
T * / c= co f0 f1 b0 * f0 * f1 b0 f2
- |- ((~ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x')))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x')))))) ==> (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x')))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x'))))))
T c==> c~ c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f0 clist_pairs f1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f0 clist_pairs f1 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f0 clist_pairs f1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f0 clist_pairs f1
+ |- ((\f. (!g. (!l. (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l))))) f)
T * / ! ! c= cMAP b1 cMAP b0 b2 cMAP * * part co b1 b0 b2 f0
+ (~ (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))) |- (((!x. (((\x. (((MEM x) x) /\ (f = (list_pairs x)))) x) ==> F)) ==> ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> F)) = ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> F))
T c==> c~ c? / c/\ cMEM b0 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 f2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs b0 c= c==> ! c==> * / c/\ cMEM b1 f0 c= f2 clist_pairs b1 b0 cF c==> c? / c/\ cMEM b0 f0 c= f2 clist_pairs b0 cF c==> c? / c/\ cMEM b0 f0 c= f2 clist_pairs b0 cF
+ (~ (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))) |- ((~ ((MEM _10269078) x)) \/ (~ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs _10269078)))))))
T c==> c~ c? / c/\ cMEM b0 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 f2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs b0 c\/ c~ cMEM f3 f0 c~ c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 f2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs f3
+ |- ((~ p) = (p ==> F))
T c= c~ f0 c==> f0 cF
+ ((list_pairs o REVERSE) = (\x. ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x)))))) |- ((!x. (!f. (((MEM f) ((MAP list_pairs) x)) ==> ((MEM ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f)))) ((MAP (\x. ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x)))))) x))))) = (!x. (!f. (((MEM f) ((MAP list_pairs) x)) ==> ((MEM ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f)))) ((MAP (list_pairs o REVERSE)) x))))))
T c==> c= * * part co part clist_pairs part cREVERSE / crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b1 cFST b1 clist_pairs b0 c= ! ! c==> cMEM b1 cMAP part clist_pairs b0 cMEM crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b2 cFST b2 b1 cMAP / crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 b0 ! ! c==> cMEM b1 cMAP part clist_pairs b0 cMEM crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b2 cFST b2 b1 cMAP * * part co part clist_pairs part cREVERSE b0
+ (_10269076 = (\d. ((SND d) , (FST d)))) |- ((\d. ((SND d) , (FST d))) = _10269076)
T c==> c= f0 / c, cSND b0 cFST b0 c= / c, cSND b0 cFST b0 f0
+ (~ (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))), (((MEM x') x) /\ (f = (list_pairs x'))) |- ((((MEM x') x) /\ (f = (list_pairs x'))) /\ F)
T c==> c~ c? / c/\ cMEM b0 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 f2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs b0 c==> c/\ cMEM f3 f0 c= f2 clist_pairs f3 c/\ c/\ cMEM f3 f0 c= f2 clist_pairs f3 cF
+ (~ (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x)))))))) |- ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> F)
T c==> c~ c? / c/\ cMEM b0 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 f2 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f1 clist_pairs b0 c==> c? / c/\ cMEM b0 f0 c= f2 clist_pairs b0 cF
+ (_10269076 = (\d. ((SND d) , (FST d)))) |- ((_10269076 = (\d. ((SND d) , (FST d)))) /\ ((!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x)))))))))) = (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP _10269076) (list_pairs x))))))))))))
T c==> c= f0 / c, cSND b0 cFST b0 c/\ c= f0 / c, cSND b0 cFST b0 c= ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b3 cFST b3 clist_pairs b2 ! ! c==> c? / c/\ cMEM b2 b0 c= b1 clist_pairs b2 c? / c/\ cMEM b2 b0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f0 b1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP f0 clist_pairs b2
+ |- ((\g. (!x. (((f o g) x) = (f (g x))))) g)
T * / ! c= co f0 b0 b1 * f0 * b0 b1 f1
+ |- (!x. (!f. ((?x. (((MEM x) x) /\ (f = (list_pairs x)))) ==> (?x. (((MEM x) x) /\ (((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) f))) = ((rot (NUMERAL (BIT1 _0))) (REVERSE ((MAP (\d. ((SND d) , (FST d)))) (list_pairs x))))))))))
T c==> c? / c/\ cMEM b0 f0 c= f1 clist_pairs b0 c? / c/\ cMEM b0 f0 c= crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b1 cFST b1 f1 crot cNUMERAL cBIT1 c_0 cREVERSE cMAP / c, cSND b1 cFST b1 clist_pairs b0
