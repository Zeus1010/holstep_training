N Oxlzlez.CC_4_BETA_BUMP_EXPLICIT
C |- (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((((((cc_4 V) u0) u1) f) i) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((critical_edge_y (distance ((f i) , (f (SUC i))))) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))))))))))))) ==> ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ ccc_4 f0 f1 f2 f5 f6 c/\ ccritical_edge_y cdistance c, f1 f2 c/\ ccritical_edge_y cdistance c, * f5 f6 * f5 cSUC f6 c/\ creal_lt cdistance c, f1 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f1 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f2 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f2 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c= cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f5 f6 * f5 cSUC f6 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D COND_ELIM_THM
A |- ((P (((COND c) x) y)) = ((c ==> (P x)) /\ ((~ c) ==> (P y))))
T c= * f0 cCOND f1 f2 f3 c/\ c==> f1 * f0 f2 c==> c~ f1 * f0 f3
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D BIT0
A |- (!n. ((BIT0 n) = (n + n)))
T c= cBIT0 f0 c+ f0 f0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D MULT_ASSOC
A |- (!m. (!n. (!p. ((m * (n * p)) = ((m * n) * p)))))
T c= c* f0 c* f1 f2 c* c* f0 f1 f2
D MULT_AC
A |- (((m * n) = (n * m)) /\ ((((m * n) * p) = (m * (n * p))) /\ ((m * (n * p)) = (n * (m * p)))))
T c/\ c= c* f0 f1 c* f1 f0 c/\ c= c* c* f0 f1 f2 c* f0 c* f1 f2 c= c* f0 c* f1 f2 c* f1 c* f0 f2
D EQ_MULT_LCANCEL
A |- (!m. (!n. (!p. (((m * n) = (m * p)) = ((m = (NUMERAL _0)) \/ (n = p))))))
T c= c= c* f0 f1 c* f0 f2 c\/ c= f0 cNUMERAL c_0 c= f1 f2
D MULT_2
A |- (!n. (((NUMERAL (BIT0 (BIT1 _0))) * n) = (n + n)))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 f0 c+ f0 f0
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D ARITH_EQ
A |- ((!m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) /\ (((_0 = _0) = T) /\ ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))))))
T c/\ ! ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 c/\ c= c= c_0 c_0 cT c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D REAL_LE_MUL
A |- (!x. (!y. ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) ==> ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f1
D REAL_MUL_LINV
A |- (!x. ((~ (x = (real_of_num (NUMERAL _0)))) ==> (((real_mul (real_inv x)) x) = (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c~ c= f0 creal_of_num cNUMERAL c_0 c= creal_mul creal_inv f0 f0 creal_of_num cNUMERAL cBIT1 c_0
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D real_div
A |- (!x. (!y. (((real_div x) y) = ((real_mul x) (real_inv y)))))
T c= creal_div f0 f1 creal_mul f0 creal_inv f1
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D Real_ext.REAL_SV_LMUL_0
A |- (!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0))))
T c= creal_mul creal_of_num cNUMERAL c_0 f0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_LT_LE
A |- (!x. (!y. (((real_lt x) y) = (((real_le x) y) /\ (~ (x = y))))))
T c= creal_lt f0 f1 c/\ creal_le f0 f1 c~ c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_ENTIRE
A |- (!x. (!y. ((((real_mul x) y) = (real_of_num (NUMERAL _0))) = ((x = (real_of_num (NUMERAL _0))) \/ (y = (real_of_num (NUMERAL _0)))))))
T c= c= creal_mul f0 f1 creal_of_num cNUMERAL c_0 c\/ c= f0 creal_of_num cNUMERAL c_0 c= f1 creal_of_num cNUMERAL c_0
D REAL_MUL_RID
A |- (!x. (((real_mul x) (real_of_num (NUMERAL (BIT1 _0)))) = x))
T c= creal_mul f0 creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_MUL_AC
A |- ((((real_mul m) n) = ((real_mul n) m)) /\ ((((real_mul ((real_mul m) n)) p) = ((real_mul m) ((real_mul n) p))) /\ (((real_mul m) ((real_mul n) p)) = ((real_mul n) ((real_mul m) p)))))
T c/\ c= creal_mul f0 f1 creal_mul f1 f0 c/\ c= creal_mul creal_mul f0 f1 f2 creal_mul f0 creal_mul f1 f2 c= creal_mul f0 creal_mul f1 f2 creal_mul f1 creal_mul f0 f2
D Real_ext.REAL_PROP_POS_MUL2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_mul x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_mul f0 f1
D REAL_LT_01
A |- ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))
T creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
D REAL_INV_INV
A |- (!x. ((real_inv (real_inv x)) = x))
T c= creal_inv creal_inv f0 f0
D REAL_INV_NEG
A |- (!x. ((real_inv (real_neg x)) = (real_neg (real_inv x))))
T c= creal_inv creal_neg f0 creal_neg creal_inv f0
D REAL_DIV_1
A |- (!x. (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x))
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_INV_MUL
A |- (!x. (!y. ((real_inv ((real_mul x) y)) = ((real_mul (real_inv x)) (real_inv y)))))
T c= creal_inv creal_mul f0 f1 creal_mul creal_inv f0 creal_inv f1
D REAL_INV_DIV
A |- (!x. (!y. ((real_inv ((real_div x) y)) = ((real_div y) x))))
T c= creal_inv creal_div f0 f1 creal_div f1 f0
D DECIMAL
A |- (!x. (!y. (((DECIMAL x) y) = ((real_div (real_of_num x)) (real_of_num y)))))
T c= cDECIMAL f0 f1 creal_div creal_of_num f0 creal_of_num f1
D RAT_LEMMA2
A |- ((((real_lt (real_of_num (NUMERAL _0))) y1) /\ ((real_lt (real_of_num (NUMERAL _0))) y2)) ==> (((real_add ((real_div x1) y1)) ((real_div x2) y2)) = ((real_mul ((real_add ((real_mul x1) y2)) ((real_mul x2) y1))) ((real_mul (real_inv y1)) (real_inv y2)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 c= creal_add creal_div f2 f0 creal_div f3 f1 creal_mul creal_add creal_mul f2 f1 creal_mul f3 f0 creal_mul creal_inv f0 creal_inv f1
D RAT_LEMMA5
A |- ((((real_lt (real_of_num (NUMERAL _0))) y1) /\ ((real_lt (real_of_num (NUMERAL _0))) y2)) ==> ((((real_div x1) y1) = ((real_div x2) y2)) = (((real_mul x1) y2) = ((real_mul x2) y1))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 c= c= creal_div f2 f0 creal_div f3 f1 c= creal_mul f2 f1 creal_mul f3 f0
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D Sphere.critical_edge_y
A |- (!y. ((critical_edge_y y) = (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) y) /\ ((real_le y) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus)))))
T c= ccritical_edge_y f0 c/\ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus f0 creal_le f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus
D Basics.EL_EXPLICIT
A |- (!h. (!t. ((((EL (NUMERAL _0)) ((CONS h) t)) = h) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS h) t)) = ((EL (NUMERAL _0)) t)) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t))))))))))
T c/\ c= cEL cNUMERAL c_0 cCONS f0 f1 f0 c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL c_0 f1 c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
D Bump.CRITICAL_EDGEX_ALT
A |- (!V. (!X. (!e. ((e IN ((critical_edgeX V) X)) = ((e IN ((edgeX V) X)) /\ (((real_le hminus) (radV e)) /\ ((real_le (radV e)) hplus)))))))
T c= cIN f0 * * part ccritical_edgeX f1 f2 c/\ cIN f0 * * part cedgeX f1 f2 c/\ creal_le chminus cradV f0 creal_le cradV f0 chplus
D Bump.SUBCRITICAL_EDGEX_ALT
A |- (!V. (!X. (!e. ((e IN ((subcritical_edgeX V) X)) = ((e IN ((edgeX V) X)) /\ ((real_lt (radV e)) hminus))))))
T c= cIN f0 * * part csubcritical_edgeX f1 f2 c/\ cIN f0 * * part cedgeX f1 f2 creal_lt cradV f0 chminus
D Bump.MCELL4_EDGE_OPP
A |- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((mcell4 V) ul)))))) ==> ((((VX V) ((mcell4 V) ul)) DIFF (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))) = (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part cmcell4 f0 f1 c= * * part cDIFF * * part cVX f0 * * part cmcell4 f0 f1 * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 part cEMPTY * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY
D Bump.BETA_BUMP_ALT
A |- (!V. (!X. (!r. (!e. (((saturated V) /\ ((packing V) /\ (((mcell_set V) X) /\ ((\e. (((VX V) X) DIFF e)) = r)))) ==> ((((beta_bump_v1 V) e) X) = (((COND ((~ (negligible X)) /\ ((e IN ((critical_edgeX V) X)) /\ (((r e) IN ((critical_edgeX V) X)) /\ (!f. ((f IN ((edgeX V) X)) ==> ((f = e) \/ ((f = (r e)) \/ (f IN ((subcritical_edgeX V) X)))))))))) ((real_sub (bump (radV e))) (bump (radV (r e))))) (real_of_num (NUMERAL _0)))))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cmcell_set f0 f1 c= / * * part cDIFF * * part cVX f0 f1 b0 f2 c= cbeta_bump_v1 f0 f3 f1 cCOND c/\ c~ cnegligible f1 c/\ cIN f3 * * part ccritical_edgeX f0 f1 c/\ cIN * f2 f3 * * part ccritical_edgeX f0 f1 ! c==> cIN b0 * * part cedgeX f0 f1 c\/ c= b0 f3 c\/ c= b0 * f2 f3 cIN b0 * * part csubcritical_edgeX f0 f1 creal_sub cbump cradV f3 cbump cradV * f2 f3 creal_of_num cNUMERAL c_0
D Leaf_cell.CC_CELL_IN_MCELL_SET
A |- (!V. (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V)))))
T c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 cIN * * part ccc_cell f0 f1 * part cmcell_set f0
D Oxlzlez.RADV2
A |- (!u. (!v. ((radV (u INSERT (v INSERT EMPTY))) = ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u , v))))))
T c= cradV * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1
D Oxlzlez.MCELL4_EDGE_EXPLICIT
A |- (!V. (!u0. (!u1. (!u2. (!u3. (((packing V) /\ ((saturated V) /\ ((~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))) ==> (((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))) = ((u0 INSERT (u1 INSERT EMPTY)) INSERT ((u0 INSERT (u2 INSERT EMPTY)) INSERT ((u0 INSERT (u3 INSERT EMPTY)) INSERT ((u1 INSERT (u2 INSERT EMPTY)) INSERT ((u1 INSERT (u3 INSERT EMPTY)) INSERT ((u2 INSERT (u3 INSERT EMPTY)) INSERT EMPTY)))))))))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS f3 cCONS f4 cNIL cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cCONS f4 cNIL c= * * part cedgeX f0 * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS f3 cCONS f4 cNIL * * part cINSERT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY * * part cINSERT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT * * part cINSERT f3 * * part cINSERT f4 part cEMPTY part cEMPTY
D Oxlzlez.CC_4_PROPS
A |- (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 ccc_4 f0 f1 f2 f5 f6 c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt chl cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c/\ c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY c/\ cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * * * part cwedge_ge f1 f2 * f5 f6 * f5 cSUC f6 c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 part cEMPTY c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 cSUC f6 part cEMPTY c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 cSUC f6 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))))) /\ (((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))))) ==> F))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f4 f5 * f4 cSUC f5 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c/\ c/\ cpacking f3 c/\ csaturated f3 c/\ cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f6 ccc_4 f3 f0 f1 f4 f5 c==> c/\ c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt chl cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY c/\ cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge f0 f1 * f4 f5 * f4 cSUC f5 c/\ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 cSUC f5 part cEMPTY c/\ cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c/\ cleaf f3 cCONS f0 cCONS f1 cCONS * f4 cSUC f5 cNIL c/\ c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL cF
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((f' = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) ==> ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((real_lt (radV f')) hminus)))), ((f' = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((real_lt (radV f')) hminus)))
T c==> c==> c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY c\/ c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY creal_lt cradV f0 chminus c==> c\/ c= f0 * * part cINSERT f4 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> creal_lt cdistance c, f4 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c\/ c= f0 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY c\/ c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY creal_lt cradV f0 chminus
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F)))))))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> c< cNUMERAL cBIT1 c_0 f4 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c==> ccc_4 f3 f0 f1 f5 f6 c==> ccritical_edge_y cdistance c, * f5 f6 * f5 cSUC f6 c==> creal_lt cdistance c, f0 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * * * part cwedge_ge f0 f1 * f5 f6 * f5 cSUC f6 c==> c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f5 cSUC f6 cNIL c==> c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f5 f6 * f5 cSUC f6 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cnegligible * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL cF
+ (~ (~ (((~ ((real_le y) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x))) \/ (~ ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) x))) /\ (((real_le y) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) \/ ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) x))))) |- ((~ (~ (((~ ((real_le y) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x))) \/ (~ ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) x))) /\ (((real_le y) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) \/ ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) x))))) /\ F)
T c==> c~ c~ c/\ c\/ c~ creal_le f0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 c~ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c\/ creal_le f0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ c~ c~ c/\ c\/ c~ creal_le f0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 c~ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c\/ creal_le f0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 cF
+ |- ((\u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F))))))))))))))))))))))))))))) u0)
T * / ! ! ! c==> cpacking b1 c==> csaturated b1 c==> cleaf_rank b1 cCONS b0 cCONS f0 cNIL b3 b2 f1 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b2 c==> ccc_4 b1 b0 f0 f1 f2 c==> ccritical_edge_y cdistance c, b0 f0 c==> ccritical_edge_y cdistance c, * f1 f2 * f1 cSUC f2 c==> creal_lt cdistance c, b0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, b0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS b0 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY * * part ccc_cell b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY c==> cSUBSET * * part ccc_cell b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL * * * * part cwedge_ge b0 f0 * f1 f2 * f1 cSUC f2 c==> c= * * part ccc_cell b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL * * part cmcell4 b1 cCONS b0 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT * f1 f2 part cEMPTY c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT * f1 cSUC f2 part cEMPTY c==> cleaf b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL c==> cleaf b1 cCONS b0 cCONS f0 cCONS * f1 cSUC f2 cNIL c==> c~ cnegligible * * part ccc_cell b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL c==> cbarV b1 cNUMERAL cBIT1 cBIT1 c_0 cCONS b0 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c==> cnegligible * * part cmcell4 b1 cCONS b0 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL cF f3
- |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
+ (packing V), (saturated V), ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((((((cc_4 V) u0) u1) f) i) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((critical_edge_y (distance ((f i) , (f (SUC i))))) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)))))))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> cpacking f0 c==> csaturated f0 c==> c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ ccc_4 f0 f1 f2 f5 f6 c/\ ccritical_edge_y cdistance c, f1 f2 c/\ ccritical_edge_y cdistance c, * f5 f6 * f5 cSUC f6 c/\ creal_lt cdistance c, f1 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f1 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f2 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f2 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c= cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f5 f6 * f5 cSUC f6 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
- (_7302064 = _7302068), (_7302065 = _7302069) |- ((_7302066 = _7302070) ==> ((~ (_7302067 = _7302071)) \/ (((((wedge_ge _7302064) _7302065) _7302066) _7302067) = ((((wedge_ge _7302068) _7302069) _7302070) _7302071))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c= * * * * part cwedge_ge f0 f2 f4 f6 * * * * part cwedge_ge f1 f3 f5 f7
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ ((((VX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) DIFF (u0 INSERT (u1 INSERT EMPTY))) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) |- (((((COND (((u0 INSERT (u1 INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ ((((f i) INSERT ((f (SUC i)) INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (!f. ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f IN ((subcritical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))) ((real_sub (bump (radV (u0 INSERT (u1 INSERT EMPTY))))) (bump (radV ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) (real_of_num (NUMERAL _0))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = ((((COND (((u0 INSERT (u1 INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (((((VX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) DIFF (u0 INSERT (u1 INSERT EMPTY))) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (!f. ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = (((VX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) DIFF (u0 INSERT (u1 INSERT EMPTY)))) \/ (f IN ((subcritical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))) ((real_sub (bump (radV (u0 INSERT (u1 INSERT EMPTY))))) (bump (radV (((VX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) DIFF (u0 INSERT (u1 INSERT EMPTY))))))) (real_of_num (NUMERAL _0))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> c= * * part cDIFF * * part cVX f0 * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c= c= cCOND c/\ cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccritical_edgeX f0 * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ cIN * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccritical_edgeX f0 * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL ! c==> cIN b0 * * part cedgeX f0 * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c\/ c= b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c= b0 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY cIN b0 * * part csubcritical_edgeX f0 * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL creal_sub cbump cradV * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cbump cradV * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCOND c/\ cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccritical_edgeX f0 * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ cIN * * part cDIFF * * part cVX f0 * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccritical_edgeX f0 * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL ! c==> cIN b0 * * part cedgeX f0 * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c\/ c= b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c= b0 * * part cDIFF * * part cVX f0 * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part csubcritical_edgeX f0 * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL creal_sub cbump cradV * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cbump cradV * * part cDIFF * * part cVX f0 * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))))
T c==> cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) /\ (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c/\ cpacking f5 c/\ csaturated f5 c/\ cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c~ cnegligible * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) |- ((saturated V) /\ ((packing V) /\ (((mcell_set V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((\e. (((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) DIFF e)) = (\e. (((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) DIFF e))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ csaturated f0 c/\ cpacking f0 c/\ cmcell_set f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= / * * part cDIFF * * part cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL b0 / * * part cDIFF * * part cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL b0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f4 f5 * f4 cSUC f5 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY c/\ cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge f0 f1 * f4 f5 * f4 cSUC f5 c/\ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 cSUC f5 part cEMPTY c/\ cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c/\ cleaf f3 cCONS f0 cCONS f1 cCONS * f4 cSUC f5 cNIL c/\ c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 cF
+ |- ((!V. (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V))))) ==> (!ul. (!V. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V))))))
T c==> ! ! c==> c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 cIN * * part ccc_cell b0 b1 * part cmcell_set b0 ! ! c==> c/\ csaturated b1 c/\ cpacking b1 cleaf b1 b0 cIN * * part ccc_cell b1 b0 * part cmcell_set b1
+ (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) |- ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> cSUBSET * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL * * * * part cwedge_ge f0 f1 * f2 f3 * f2 cSUC f3 c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> cleaf f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS * f2 cSUC f3 cNIL c==> c~ cnegligible * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> cbarV f4 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c~ cnegligible * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL
- |- ((~ (_7302008 = _7302010)) \/ ((~ (_7302009 = _7302011)) \/ ((_7302010 SUBSET _7302011) \/ (~ (_7302008 SUBSET _7302009)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
+ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- F
T c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL cF
+ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) |- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) /\ (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))
T c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
+ (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) (distance ((f i) , (f (SUC i))))) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus))), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- ((((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) (distance ((f i) , (f (SUC i))))) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus))) /\ (!f. (((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ (((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))) /\ ((real_lt (radV f)) hminus)))))))
T c==> c/\ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cdistance c, * f0 f1 * f0 cSUC f1 creal_le cdistance c, * f0 f1 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus c==> creal_lt cdistance c, f2 * f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ c/\ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cdistance c, * f0 f1 * f0 cSUC f1 creal_le cdistance c, * f0 f1 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus ! c==> c\/ c= b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c= b0 * * part cINSERT f2 * * part cINSERT * f0 f1 part cEMPTY c\/ c= b0 * * part cINSERT f2 * * part cINSERT * f0 cSUC f1 part cEMPTY c\/ c= b0 * * part cINSERT f3 * * part cINSERT * f0 f1 part cEMPTY c\/ c= b0 * * part cINSERT f3 * * part cINSERT * f0 cSUC f1 part cEMPTY c= b0 * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c\/ c= b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c= b0 * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c/\ c\/ c= b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c= b0 * * part cINSERT f2 * * part cINSERT * f0 f1 part cEMPTY c\/ c= b0 * * part cINSERT f2 * * part cINSERT * f0 cSUC f1 part cEMPTY c\/ c= b0 * * part cINSERT f3 * * part cINSERT * f0 f1 part cEMPTY c\/ c= b0 * * part cINSERT f3 * * part cINSERT * f0 cSUC f1 part cEMPTY c= b0 * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY creal_lt cradV b0 chminus
- |- ((~ (_7302073 = _7302075)) \/ ((~ (_7302072 = _7302074)) \/ (((hull _7302072) _7302073) = ((hull _7302074) _7302075))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
- (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((NUMERAL _0) < (NUMERAL (BIT0 (BIT1 _0)))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 cT
- (_7302040 = _7302045), (_7302036 = _7302041), (_7302039 = _7302044), (_7302037 = _7302042), (_7302038 = _7302043) |- ((((((leaf_rank _7302041) _7302042) _7302043) _7302044) _7302045) \/ (~ (((((leaf_rank _7302036) _7302037) _7302038) _7302039) _7302040)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c\/ cleaf_rank f3 f7 f9 f5 f1 c~ cleaf_rank f2 f6 f8 f4 f0
- (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) |- (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL)))))
T c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS cI f3 f4 cCONS cI f3 cSUC f4 cNIL
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- (T = (((~ (_7302002 = _7302003)) \/ ((negligible _7302003) \/ (~ (negligible _7302002)))) = ((negligible _7302003) \/ ((~ (_7302002 = _7302003)) \/ (~ (negligible _7302002))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ cnegligible f1 c~ cnegligible f0 c\/ cnegligible f1 c\/ c~ c= f0 f1 c~ cnegligible f0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))))) ==> F) = (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))))) /\ (((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))))) ==> F)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c< cNUMERAL cBIT1 c_0 f4 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c==> ccc_4 f3 f0 f1 f5 f6 c= c==> c/\ c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt chl cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY c/\ cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * * * part cwedge_ge f0 f1 * f5 f6 * f5 cSUC f6 c/\ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 cSUC f6 part cEMPTY c/\ cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c/\ cleaf f3 cCONS f0 cCONS f1 cCONS * f5 cSUC f6 cNIL c/\ c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL cF c/\ c/\ cpacking f3 c/\ csaturated f3 c/\ cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 ccc_4 f3 f0 f1 f5 f6 c==> c/\ c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt chl cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY c/\ cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * * * part cwedge_ge f0 f1 * f5 f6 * f5 cSUC f6 c/\ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 cSUC f6 part cEMPTY c/\ cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c/\ cleaf f3 cCONS f0 cCONS f1 cCONS * f5 cSUC f6 cNIL c/\ c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL cF
+ |- (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t))
T c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT1 c_0 f1
+ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))
T c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
+ |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
- |- ((~ (_7302108 = _7302109)) \/ ((BIT1 _7302108) = (BIT1 _7302109)))
T c\/ c~ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL))))))
T c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cCONS cI f3 cSUC f4 cNIL c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL
+ |- ((\X. (!e. ((e IN ((subcritical_edgeX V) X)) = ((e IN ((edgeX V) X)) /\ ((real_lt (radV e)) hminus))))) X)
T * / ! c= cIN b1 * * part csubcritical_edgeX f0 b0 c/\ cIN b1 * * part cedgeX f0 b0 creal_lt cradV b1 chminus f1
- |- ((~ (_7302056 = _7302058)) \/ ((~ (_7302057 = _7302059)) \/ (((real_sub _7302056) _7302057) = ((real_sub _7302058) _7302059))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= creal_sub f0 f2 creal_sub f1 f3
+ ((NUMERAL (BIT1 _0)) < n) |- (((NUMERAL (BIT1 _0)) < n) /\ ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))))))))))))
T c==> c< cNUMERAL cBIT1 c_0 f0 c/\ c< cNUMERAL cBIT1 c_0 f0 c==> ccc_4 f1 f2 f3 f4 f5 c==> ccritical_edge_y cdistance c, f2 f3 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> creal_lt cdistance c, f2 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f1 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f2 cCONS f3 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY * * part ccc_cell f1 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL c==> c~ ccoplanar * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cSUBSET * * part ccc_cell f1 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL * * * * part cwedge_ge f2 f3 * f4 f5 * f4 cSUC f5 c==> c= * * part ccc_cell f1 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL * * part cmcell4 f1 cCONS f2 cCONS f3 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT * f4 f5 part cEMPTY c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cleaf f1 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL c==> cleaf f1 cCONS f2 cCONS f3 cCONS * f4 cSUC f5 cNIL c==> c~ cnegligible * * part ccc_cell f1 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL c==> cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS f2 cCONS f3 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f2 f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f4 f5 * f4 cSUC f5 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cnegligible * * part cmcell4 f1 cCONS f2 cCONS f3 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL
- |- ((_7302102 = _7302104) ==> ((~ (_7302103 = _7302105)) \/ ((_7302102 , _7302103) = (_7302104 , _7302105))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0
+ (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) (distance (u0 , u1))) /\ ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus))) |- (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) (distance (u0 , u1))) = T)
T c==> c/\ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cdistance c, f0 f1 creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus c= creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cdistance c, f0 f1 cT
+ |- (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))))))))))))))))
T c==> c< cNUMERAL cBIT1 c_0 f0 c==> ccc_4 f1 f2 f3 f4 f5 c==> ccritical_edge_y cdistance c, f2 f3 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> creal_lt cdistance c, f2 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f1 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f2 cCONS f3 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY * * part ccc_cell f1 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL c==> c~ ccoplanar * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cSUBSET * * part ccc_cell f1 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL * * * * part cwedge_ge f2 f3 * f4 f5 * f4 cSUC f5 c==> c= * * part ccc_cell f1 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL * * part cmcell4 f1 cCONS f2 cCONS f3 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT * f4 f5 part cEMPTY c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cleaf f1 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL c==> cleaf f1 cCONS f2 cCONS f3 cCONS * f4 cSUC f5 cNIL c==> c~ cnegligible * * part ccc_cell f1 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL c==> cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS f2 cCONS f3 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c~ cnegligible * * part cmcell4 f1 cCONS f2 cCONS f3 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL
+ |- ((\n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F)))))))))))))))))))))))))))) n)
T * / ! c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL b1 b0 f3 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b0 c==> ccc_4 f0 f1 f2 f3 f4 c==> ccritical_edge_y cdistance c, f1 f2 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL cF f5
+ ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- ((f' = (u1 INSERT ((f i) INSERT EMPTY))) ==> ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((real_lt (radV f')) hminus))))
T c==> creal_lt cdistance c, f0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= f3 * * part cINSERT f0 * * part cINSERT * f1 f2 part cEMPTY c\/ c= f3 * * part cINSERT f4 * * part cINSERT f0 part cEMPTY c\/ c= f3 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY creal_lt cradV f3 chminus
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cnegligible * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL cF
+ |- (T = ((~ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c= cT c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))))))
T c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> cSUBSET * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL * * * * part cwedge_ge f0 f1 * f2 f3 * f2 cSUC f3 c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> cleaf f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS * f2 cSUC f3 cNIL c==> c~ cnegligible * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> cbarV f4 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c~ cnegligible * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL
+ ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- (((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))) ==> ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ (((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))) /\ ((real_lt (radV f')) hminus)))))
T c==> creal_lt cdistance c, f0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c\/ c= f4 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c\/ c= f4 * * part cINSERT f0 * * part cINSERT * f1 f2 part cEMPTY c\/ c= f4 * * part cINSERT f0 * * part cINSERT * f1 cSUC f2 part cEMPTY c\/ c= f4 * * part cINSERT f3 * * part cINSERT * f1 f2 part cEMPTY c\/ c= f4 * * part cINSERT f3 * * part cINSERT * f1 cSUC f2 part cEMPTY c= f4 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY c\/ c= f4 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c\/ c= f4 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY c/\ c\/ c= f4 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c\/ c= f4 * * part cINSERT f0 * * part cINSERT * f1 f2 part cEMPTY c\/ c= f4 * * part cINSERT f0 * * part cINSERT * f1 cSUC f2 part cEMPTY c\/ c= f4 * * part cINSERT f3 * * part cINSERT * f1 f2 part cEMPTY c\/ c= f4 * * part cINSERT f3 * * part cINSERT * f1 cSUC f2 part cEMPTY c= f4 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY creal_lt cradV f4 chminus
+ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL)))))) = ((((mcell4 V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL))))) /\ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL))))))))
T c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c= cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cCONS cI f3 cSUC f4 cNIL c/\ c= * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cCONS cI f3 cSUC f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cCONS cI f3 cSUC f4 cNIL
+ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) = (((real_gt ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- ((~ (x = y)) = (((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y) \/ ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x)))
T c= c~ c= f0 f1 c\/ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
+ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL))))))
T c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cCONS cI f3 cSUC f4 cNIL
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((u0 INSERT (u1 INSERT EMPTY)) IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (((real_le hminus) (radV (u0 INSERT (u1 INSERT EMPTY)))) /\ ((real_le (radV (u0 INSERT (u1 INSERT EMPTY)))) hplus))) /\ (((((f i) INSERT ((f (SUC i)) INSERT EMPTY)) IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (((real_le hminus) (radV ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))) /\ ((real_le (radV ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))) hplus))) /\ (!f. ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ ((real_lt (radV f)) hminus))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c/\ c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cedgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ creal_le chminus cradV * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_le cradV * * part cINSERT f0 * * part cINSERT f1 part cEMPTY chplus c/\ c/\ cIN * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part cedgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ creal_le chminus cradV * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY creal_le cradV * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY chplus ! c==> cIN b0 * * part cedgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c/\ cIN b0 * * part cedgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL creal_lt cradV b0 chminus
- (_7302023 = _7302028), (_7302020 = _7302025), (_7302024 = _7302029), (_7302021 = _7302026), (_7302022 = _7302027) |- ((_7302024 = _7302029) /\ ((((((cc_4 _7302025) _7302026) _7302027) _7302028) _7302029) \/ (~ (((((cc_4 _7302020) _7302021) _7302022) _7302023) _7302024))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c/\ c= f4 f5 c\/ ccc_4 f3 f7 f9 f1 f5 c~ ccc_4 f2 f6 f8 f0 f4
+ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((_7302004 = _7302006) ==> ((~ (_7302005 = _7302007)) \/ (((leaf _7302006) _7302007) \/ (~ ((leaf _7302004) _7302005)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cleaf f1 f3 c~ cleaf f0 f2
+ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL))))) = ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))))))
T c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c= c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cCONS cI f3 cSUC f4 cNIL c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL
+ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- (((negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL))))) ==> F) = F)
T c==> cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c= c==> cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL cF cF
- |- (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((COND (((u0 INSERT (u1 INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ ((((f i) INSERT ((f (SUC i)) INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (!f. ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f IN ((subcritical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))) ((real_sub (bump (radV (u0 INSERT (u1 INSERT EMPTY))))) (bump (radV ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) (real_of_num (NUMERAL _0))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c= cCOND c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccritical_edgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ cIN * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccritical_edgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL ! c==> cIN b0 * * part cedgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY cIN b0 * * part csubcritical_edgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL creal_sub cbump cradV * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cbump cradV * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t))
T c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 c_0 f1
+ (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> cleaf f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS * f2 cSUC f3 cNIL c==> c~ cnegligible * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> cbarV f4 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c~ cnegligible * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL
+ |- ((\u0. (!u1. (!u2. (!u3. (((packing V) /\ ((saturated V) /\ ((~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))) ==> (((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))) = ((u0 INSERT (u1 INSERT EMPTY)) INSERT ((u0 INSERT (u2 INSERT EMPTY)) INSERT ((u0 INSERT (u3 INSERT EMPTY)) INSERT ((u1 INSERT (u2 INSERT EMPTY)) INSERT ((u1 INSERT (u3 INSERT EMPTY)) INSERT ((u2 INSERT (u3 INSERT EMPTY)) INSERT EMPTY)))))))))))) u0)
T * / ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ c~ cnegligible * * part cmcell4 f0 cCONS b0 cCONS b1 cCONS b2 cCONS b3 cNIL cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS b0 cCONS b1 cCONS b2 cCONS b3 cNIL c= * * part cedgeX f0 * * part cmcell4 f0 cCONS b0 cCONS b1 cCONS b2 cCONS b3 cNIL * * part cINSERT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT * * part cINSERT b0 * * part cINSERT b3 part cEMPTY * * part cINSERT * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT * * part cINSERT b1 * * part cINSERT b3 part cEMPTY * * part cINSERT * * part cINSERT b2 * * part cINSERT b3 part cEMPTY part cEMPTY f1
- (((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (~ (((u0 INSERT (u1 INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ ((((f i) INSERT ((f (SUC i)) INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (!f. ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f IN ((subcritical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c~ c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccritical_edgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ cIN * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccritical_edgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL ! c==> cIN b0 * * part cedgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY cIN b0 * * part csubcritical_edgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\X. (!e. ((e IN ((critical_edgeX V) X)) = ((e IN ((edgeX V) X)) /\ (((real_le hminus) (radV e)) /\ ((real_le (radV e)) hplus)))))) X)
T * / ! c= cIN b1 * * part ccritical_edgeX f0 b0 c/\ cIN b1 * * part cedgeX f0 b0 c/\ creal_le chminus cradV b1 creal_le cradV b1 chplus f1
+ |- ((\e. ((e IN ((subcritical_edgeX V) X)) = ((e IN ((edgeX V) X)) /\ ((real_lt (radV e)) hminus)))) e)
T * / c= cIN b0 * * part csubcritical_edgeX f0 f1 c/\ cIN b0 * * part cedgeX f0 f1 creal_lt cradV b0 chminus f2
- (_7301996 = _7301999) |- ((_7301998 = _7302001) ==> ((~ (_7301997 = _7302000)) \/ ((((barV _7301999) _7302000) _7302001) \/ (~ (((barV _7301996) _7301997) _7301998)))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ cbarV f1 f5 f3 c~ cbarV f0 f4 f2
- (_7302021 = _7302026), (_7302022 = _7302027) |- ((_7302020 = _7302025) ==> ((~ (_7302023 = _7302028)) \/ ((~ (_7302024 = _7302029)) \/ ((((((cc_4 _7302025) _7302026) _7302027) _7302028) _7302029) \/ (~ (((((cc_4 _7302020) _7302021) _7302022) _7302023) _7302024))))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f5 f1 f3 f7 f9 c~ ccc_4 f4 f0 f2 f6 f8
- (_7302040 = _7302045), (_7302036 = _7302041), (_7302038 = _7302043) |- ((_7302037 = _7302042) ==> ((~ (_7302039 = _7302044)) \/ ((((((leaf_rank _7302041) _7302042) _7302043) _7302044) _7302045) \/ (~ (((((leaf_rank _7302036) _7302037) _7302038) _7302039) _7302040)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f5 f9 f1 c~ cleaf_rank f2 f6 f4 f8 f0
- (_7302046 = _7302047) |- ((((saturated _7302046) = (saturated _7302047)) ==> ((saturated _7302047) \/ (~ (saturated _7302046)))) = ((saturated _7302047) \/ (~ (saturated _7302046))))
T c==> c= f0 f1 c= c==> c= csaturated f0 csaturated f1 c\/ csaturated f1 c~ csaturated f0 c\/ csaturated f1 c~ csaturated f0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c==> cnegligible * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL cF
+ |- ((t \/ T) = T)
T c= c\/ f0 cT cT
+ (((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- (_7302056 = _7302058), (_7302057 = _7302059) |- ((_7302057 = _7302059) /\ (((real_sub _7302056) _7302057) = ((real_sub _7302058) _7302059)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= creal_sub f0 f2 creal_sub f1 f3
+ |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) (distance (u0 , u1))) /\ ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus))) |- (((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus)) = T)
T c==> c/\ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cdistance c, f0 f1 creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus c= creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus cT
+ (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0)))) |- ((((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), ((critical_edge_y (distance ((f i) , (f (SUC i))))) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)))))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> c/\ ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c/\ creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f0 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f1 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c= cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f4 f5 * f4 cSUC f5 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ ((f' = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))))), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- (((f' = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))))) /\ ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((real_lt (radV f')) hminus))))
T c==> c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT * f2 f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT * f2 cSUC f3 part cEMPTY c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> creal_lt cdistance c, f1 * f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f4 * f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f4 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT * f2 f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT * f2 cSUC f3 part cEMPTY c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c\/ c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY creal_lt cradV f0 chminus
+ (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f4 f5 * f4 cSUC f5 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt chl cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY c/\ cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge f0 f1 * f4 f5 * f4 cSUC f5 c/\ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 cSUC f5 part cEMPTY c/\ cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c/\ cleaf f3 cCONS f0 cCONS f1 cCONS * f4 cSUC f5 cNIL c/\ c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> c/\ creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f0 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f1 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c= cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f4 f5 * f4 cSUC f5 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- (~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) |- (~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance (((I f) i) , ((I f) (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f2 f3 * f2 cSUC f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, cI f2 f3 cI f2 cSUC f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0
+ |- ((\y. ((critical_edge_y y) = (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) y) /\ ((real_le y) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus))))) y)
T * / c= ccritical_edge_y b0 c/\ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus b0 creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus f0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> c/\ creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f1 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c= cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f4 f5 * f4 cSUC f5 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F)))))))))))))))))))))))))))))) u0)
T * / ! ! ! c==> cpacking b1 c==> csaturated b1 c==> cleaf_rank b1 cCONS b0 cCONS f0 cNIL b3 b2 f1 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b2 c==> ccc_4 b1 b0 f0 f1 f2 c==> ccritical_edge_y cdistance c, b0 f0 c==> ccritical_edge_y cdistance c, * f1 f2 * f1 cSUC f2 c==> creal_lt cdistance c, b0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, b0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS b0 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY * * part ccc_cell b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY c==> cSUBSET * * part ccc_cell b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL * * * * part cwedge_ge b0 f0 * f1 f2 * f1 cSUC f2 c==> c= * * part ccc_cell b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL * * part cmcell4 b1 cCONS b0 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT * f1 f2 part cEMPTY c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT * f1 cSUC f2 part cEMPTY c==> cleaf b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL c==> cleaf b1 cCONS b0 cCONS f0 cCONS * f1 cSUC f2 cNIL c==> c~ cnegligible * * part ccc_cell b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL c==> cbarV b1 cNUMERAL cBIT1 cBIT1 c_0 cCONS b0 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, b0 f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f1 f2 * f1 cSUC f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cnegligible * * part cmcell4 b1 cCONS b0 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL cF f3
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f4 f5 * f4 cSUC f5 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY c/\ cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge f0 f1 * f4 f5 * f4 cSUC f5 c/\ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 cSUC f5 part cEMPTY c/\ cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c/\ cleaf f3 cCONS f0 cCONS f1 cCONS * f4 cSUC f5 cNIL c/\ c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 cF
+ ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- ((((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) (distance ((f i) , (f (SUC i))))) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus))) ==> ((((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) (distance ((f i) , (f (SUC i))))) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus))) /\ (!f. (((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ (((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))) /\ ((real_lt (radV f)) hminus))))))))
T c==> creal_lt cdistance c, f0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c/\ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cdistance c, * f1 f2 * f1 cSUC f2 creal_le cdistance c, * f1 f2 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus c/\ c/\ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cdistance c, * f1 f2 * f1 cSUC f2 creal_le cdistance c, * f1 f2 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus ! c==> c\/ c= b0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c\/ c= b0 * * part cINSERT f0 * * part cINSERT * f1 f2 part cEMPTY c\/ c= b0 * * part cINSERT f0 * * part cINSERT * f1 cSUC f2 part cEMPTY c\/ c= b0 * * part cINSERT f3 * * part cINSERT * f1 f2 part cEMPTY c\/ c= b0 * * part cINSERT f3 * * part cINSERT * f1 cSUC f2 part cEMPTY c= b0 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY c\/ c= b0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c\/ c= b0 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY c/\ c\/ c= b0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c\/ c= b0 * * part cINSERT f0 * * part cINSERT * f1 f2 part cEMPTY c\/ c= b0 * * part cINSERT f0 * * part cINSERT * f1 cSUC f2 part cEMPTY c\/ c= b0 * * part cINSERT f3 * * part cINSERT * f1 f2 part cEMPTY c\/ c= b0 * * part cINSERT f3 * * part cINSERT * f1 cSUC f2 part cEMPTY c= b0 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY creal_lt cradV b0 chminus
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((NUMERAL (BIT1 _0)) < n) /\ ((((((cc_4 V) u0) u1) f) i) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((critical_edge_y (distance ((f i) , (f (SUC i))))) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))))))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ ccc_4 f3 f0 f1 f5 f6 c/\ ccritical_edge_y cdistance c, f0 f1 c/\ ccritical_edge_y cdistance c, * f5 f6 * f5 cSUC f6 c/\ creal_lt cdistance c, f0 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f0 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f1 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f1 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c= cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f5 f6 * f5 cSUC f6 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((!f. (!u1. (!u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! c==> cpacking b3 c==> csaturated b3 c==> cleaf_rank b3 cCONS b2 cCONS b1 cNIL b5 b4 b0 c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b5 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b4 c==> ccc_4 b3 b2 b1 b0 f0 c==> ccritical_edge_y cdistance c, b2 b1 c==> ccritical_edge_y cdistance c, * b0 f0 * b0 cSUC f0 c==> creal_lt cdistance c, b2 * b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, b2 * b0 cSUC f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, b1 * b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, b1 * b0 cSUC f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke b3 cCONS b2 cCONS b1 cCONS * b0 f0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS b2 cCONS b1 cCONS * b0 f0 cCONS * b0 cSUC f0 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT * b0 f0 * * part cINSERT * b0 cSUC f0 part cEMPTY * * part ccc_cell b3 cCONS b2 cCONS b1 cCONS * b0 f0 cNIL c==> c~ ccoplanar * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT * b0 f0 * * part cINSERT * b0 cSUC f0 part cEMPTY c==> cSUBSET * * part ccc_cell b3 cCONS b2 cCONS b1 cCONS * b0 f0 cNIL * * * * part cwedge_ge b2 b1 * b0 f0 * b0 cSUC f0 c==> c= * * part ccc_cell b3 cCONS b2 cCONS b1 cCONS * b0 f0 cNIL * * part cmcell4 b3 cCONS b2 cCONS b1 cCONS * b0 f0 cCONS * b0 cSUC f0 cNIL c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT * b0 f0 part cEMPTY c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT * b0 cSUC f0 part cEMPTY c==> cleaf b3 cCONS b2 cCONS b1 cCONS * b0 f0 cNIL c==> cleaf b3 cCONS b2 cCONS b1 cCONS * b0 cSUC f0 cNIL c==> c~ cnegligible * * part ccc_cell b3 cCONS b2 cCONS b1 cCONS * b0 f0 cNIL c==> cbarV b3 cNUMERAL cBIT1 cBIT1 c_0 cCONS b2 cCONS b1 cCONS * b0 f0 cCONS * b0 cSUC f0 cNIL c~ cnegligible * * part cmcell4 b3 cCONS b2 cCONS b1 cCONS * b0 f0 cCONS * b0 cSUC f0 cNIL cT
+ |- ((\f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))) f)
T * / ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 b0 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 ccc_4 f0 f1 f2 b0 b1 c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt chl cCONS f1 cCONS f2 cCONS * b0 b1 cCONS * b0 cSUC b1 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * b0 b1 * * part cINSERT * b0 cSUC b1 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL c/\ c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * b0 b1 * * part cINSERT * b0 cSUC b1 part cEMPTY c/\ cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL * * * * part cwedge_ge f1 f2 * b0 b1 * b0 cSUC b1 c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * b0 b1 cCONS * b0 cSUC b1 cNIL c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * b0 b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * b0 cSUC b1 part cEMPTY c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * b0 cSUC b1 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * b0 b1 cCONS * b0 cSUC b1 cNIL f5
+ |- ((\V. (!ul. (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((mcell4 V) ul)))))) ==> ((((VX V) ((mcell4 V) ul)) DIFF (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))) = (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))) V)
T * / ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c~ cnegligible * * part cmcell4 b0 b1 c= * * part cDIFF * * part cVX b0 * * part cmcell4 b0 b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY f0
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))))))))
T c==> ccritical_edge_y cdistance c, * f0 f1 * f0 cSUC f1 c==> creal_lt cdistance c, f2 * f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f4 cCONS f2 cCONS f3 cCONS * f0 f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f2 cCONS f3 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY * * part ccc_cell f4 cCONS f2 cCONS f3 cCONS * f0 f1 cNIL c==> c~ ccoplanar * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c==> cSUBSET * * part ccc_cell f4 cCONS f2 cCONS f3 cCONS * f0 f1 cNIL * * * * part cwedge_ge f2 f3 * f0 f1 * f0 cSUC f1 c==> c= * * part ccc_cell f4 cCONS f2 cCONS f3 cCONS * f0 f1 cNIL * * part cmcell4 f4 cCONS f2 cCONS f3 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT * f0 f1 part cEMPTY c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT * f0 cSUC f1 part cEMPTY c==> cleaf f4 cCONS f2 cCONS f3 cCONS * f0 f1 cNIL c==> cleaf f4 cCONS f2 cCONS f3 cCONS * f0 cSUC f1 cNIL c==> c~ cnegligible * * part ccc_cell f4 cCONS f2 cCONS f3 cCONS * f0 f1 cNIL c==> cbarV f4 cNUMERAL cBIT1 cBIT1 c_0 cCONS f2 cCONS f3 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL c~ cnegligible * * part cmcell4 f4 cCONS f2 cCONS f3 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL
- (_7302050 = _7302052), (_7302051 = _7302053) |- ((_7302051 = _7302053) /\ (((real_div _7302050) _7302051) = ((real_div _7302052) _7302053)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= creal_div f0 f2 creal_div f1 f3
+ |- (((((saturated V) /\ ((packing V) /\ (((mcell_set V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((\e. (((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) DIFF e)) = (\e. (((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) DIFF e)))))) ==> ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (((COND ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((u0 INSERT (u1 INSERT EMPTY)) IN ((critical_edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((((\e. (((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) DIFF e)) (u0 INSERT (u1 INSERT EMPTY))) IN ((critical_edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (!f. ((f IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((\e. (((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) DIFF e)) (u0 INSERT (u1 INSERT EMPTY)))) \/ (f IN ((subcritical_edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))))) ((real_sub (bump (radV (u0 INSERT (u1 INSERT EMPTY))))) (bump (radV ((\e. (((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) DIFF e)) (u0 INSERT (u1 INSERT EMPTY))))))) (real_of_num (NUMERAL _0))))) ==> ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) = ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c= c==> c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cmcell_set f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= / * * part cDIFF * * part cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL b0 / * * part cDIFF * * part cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL b0 c= cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCOND c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccritical_edgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cIN * / * * part cDIFF * * part cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccritical_edgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL ! c==> cIN b0 * * part cedgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c\/ c= b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c= b0 * / * * part cDIFF * * part cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL b1 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part csubcritical_edgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_sub cbump cradV * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cbump cradV * / * * part cDIFF * * part cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL c_0 c= cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F)
T c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL cF
+ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) |- (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL))))))
T c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL
- |- ((~ (_7302060 = _7302062)) \/ ((~ (_7302061 = _7302063)) \/ (((mcell4 _7302060) _7302061) = ((mcell4 _7302062) _7302063))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cmcell4 f0 f2 * * part cmcell4 f1 f3
+ |- (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))))))))))))
T c==> creal_lt cdistance c, f0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f0 cCONS f3 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY c==> cSUBSET * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL * * * * part cwedge_ge f0 f3 * f1 f2 * f1 cSUC f2 c==> c= * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL * * part cmcell4 f4 cCONS f0 cCONS f3 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT * f1 f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT * f1 cSUC f2 part cEMPTY c==> cleaf f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL c==> cleaf f4 cCONS f0 cCONS f3 cCONS * f1 cSUC f2 cNIL c==> c~ cnegligible * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL c==> cbarV f4 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f3 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f1 f2 * f1 cSUC f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cnegligible * * part cmcell4 f4 cCONS f0 cCONS f3 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL
- |- ((_7302060 = _7302062) ==> ((~ (_7302061 = _7302063)) \/ (((mcell4 _7302060) _7302061) = ((mcell4 _7302062) _7302063))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cmcell4 f0 f2 * * part cmcell4 f1 f3
- |- ((_7302064 = _7302068) ==> ((~ (_7302065 = _7302069)) \/ ((~ (_7302066 = _7302070)) \/ ((~ (_7302067 = _7302071)) \/ (((((wedge_ge _7302064) _7302065) _7302066) _7302067) = ((((wedge_ge _7302068) _7302069) _7302070) _7302071))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c= * * * * part cwedge_ge f0 f2 f4 f6 * * * * part cwedge_ge f1 f3 f5 f7
+ ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) ==> ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((real_lt (radV f')) hminus))))
T c==> creal_lt cdistance c, f0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= f3 * * part cINSERT f0 * * part cINSERT * f1 cSUC f2 part cEMPTY c\/ c= f3 * * part cINSERT f4 * * part cINSERT f0 part cEMPTY c\/ c= f3 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY creal_lt cradV f3 chminus
+ |- (((!u2. (!u3. (((packing V) /\ ((saturated V) /\ ((~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))) ==> (((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))) = ((u0 INSERT (u1 INSERT EMPTY)) INSERT ((u0 INSERT (u2 INSERT EMPTY)) INSERT ((u0 INSERT (u3 INSERT EMPTY)) INSERT ((u1 INSERT (u2 INSERT EMPTY)) INSERT ((u1 INSERT (u3 INSERT EMPTY)) INSERT ((u2 INSERT (u3 INSERT EMPTY)) INSERT EMPTY)))))))))) ==> ((\u2. (!u3. (((packing V) /\ ((saturated V) /\ ((~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))) ==> (((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))) = ((u0 INSERT (u1 INSERT EMPTY)) INSERT ((u0 INSERT (u2 INSERT EMPTY)) INSERT ((u0 INSERT (u3 INSERT EMPTY)) INSERT ((u1 INSERT (u2 INSERT EMPTY)) INSERT ((u1 INSERT (u3 INSERT EMPTY)) INSERT ((u2 INSERT (u3 INSERT EMPTY)) INSERT EMPTY)))))))))) (f i))) = ((\u2. (!u3. (((packing V) /\ ((saturated V) /\ ((~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))) ==> (((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))) = ((u0 INSERT (u1 INSERT EMPTY)) INSERT ((u0 INSERT (u2 INSERT EMPTY)) INSERT ((u0 INSERT (u3 INSERT EMPTY)) INSERT ((u1 INSERT (u2 INSERT EMPTY)) INSERT ((u1 INSERT (u3 INSERT EMPTY)) INSERT ((u2 INSERT (u3 INSERT EMPTY)) INSERT EMPTY)))))))))) (f i)))
T c= c==> ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS b0 cCONS b1 cNIL cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS b0 cCONS b1 cNIL c= * * part cedgeX f0 * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS b0 cCONS b1 cNIL * * part cINSERT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT * * part cINSERT f1 * * part cINSERT b1 part cEMPTY * * part cINSERT * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part cINSERT * * part cINSERT f2 * * part cINSERT b1 part cEMPTY * * part cINSERT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY part cEMPTY * / ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS b0 cCONS b1 cNIL cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS b0 cCONS b1 cNIL c= * * part cedgeX f0 * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS b0 cCONS b1 cNIL * * part cINSERT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT * * part cINSERT f1 * * part cINSERT b1 part cEMPTY * * part cINSERT * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part cINSERT * * part cINSERT f2 * * part cINSERT b1 part cEMPTY * * part cINSERT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY part cEMPTY * f3 f4 * / ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS b0 cCONS b1 cNIL cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS b0 cCONS b1 cNIL c= * * part cedgeX f0 * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS b0 cCONS b1 cNIL * * part cINSERT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT * * part cINSERT f1 * * part cINSERT b1 part cEMPTY * * part cINSERT * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part cINSERT * * part cINSERT f2 * * part cINSERT b1 part cEMPTY * * part cINSERT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY part cEMPTY * f3 f4
+ (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- ((((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = ((u0 INSERT (u1 INSERT EMPTY)) INSERT ((u0 INSERT ((f i) INSERT EMPTY)) INSERT ((u0 INSERT ((f (SUC i)) INSERT EMPTY)) INSERT ((u1 INSERT ((f i) INSERT EMPTY)) INSERT ((u1 INSERT ((f (SUC i)) INSERT EMPTY)) INSERT (((f i) INSERT ((f (SUC i)) INSERT EMPTY)) INSERT EMPTY))))))) ==> ((((u0 INSERT (u1 INSERT EMPTY)) IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) (distance (u0 , u1))) /\ ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus)))) /\ (((((f i) INSERT ((f (SUC i)) INSERT EMPTY)) IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) (distance ((f i) , (f (SUC i))))) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus)))) /\ (!f. ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ ((real_lt (radV f)) hminus)))))))))
T c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f2 f3 * f2 cSUC f3 c==> creal_lt cdistance c, f0 * f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= * * part cedgeX f4 * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL * * part cINSERT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT * * part cINSERT f0 * * part cINSERT * f2 f3 part cEMPTY * * part cINSERT * * part cINSERT f0 * * part cINSERT * f2 cSUC f3 part cEMPTY * * part cINSERT * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY * * part cINSERT * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY * * part cINSERT * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY part cEMPTY c/\ c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cedgeX f4 * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c/\ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cdistance c, f0 f1 creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus c/\ c/\ cIN * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY * * part cedgeX f4 * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c/\ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cdistance c, * f2 f3 * f2 cSUC f3 creal_le cdistance c, * f2 f3 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus ! c==> cIN b0 * * part cedgeX f4 * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c/\ cIN b0 * * part cedgeX f4 * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL creal_lt cradV b0 chminus
+ ((NUMERAL (BIT1 _0)) < n) |- (((NUMERAL (BIT1 _0)) < n) /\ ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))))))))))))))))
T c==> c< cNUMERAL cBIT1 c_0 f0 c/\ c< cNUMERAL cBIT1 c_0 f0 c==> ccc_4 f1 f2 f3 f4 f5 c==> ccritical_edge_y cdistance c, f2 f3 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> creal_lt cdistance c, f2 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f1 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f2 cCONS f3 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY * * part ccc_cell f1 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL c==> c~ ccoplanar * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cSUBSET * * part ccc_cell f1 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL * * * * part cwedge_ge f2 f3 * f4 f5 * f4 cSUC f5 c==> c= * * part ccc_cell f1 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL * * part cmcell4 f1 cCONS f2 cCONS f3 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT * f4 f5 part cEMPTY c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cleaf f1 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL c==> cleaf f1 cCONS f2 cCONS f3 cCONS * f4 cSUC f5 cNIL c==> c~ cnegligible * * part ccc_cell f1 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL c==> cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS f2 cCONS f3 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c~ cnegligible * * part cmcell4 f1 cCONS f2 cCONS f3 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c= cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f4 f5 * f4 cSUC f5 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_7302018 = _7302019) |- ((_7302018 = _7302019) /\ ((critical_edge_y _7302019) \/ (~ (critical_edge_y _7302018))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ ccritical_edge_y f1 c~ ccritical_edge_y f0
- (((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0
- (_7302060 = _7302062) |- ((_7302060 = _7302062) /\ ((~ (_7302061 = _7302063)) \/ (((mcell4 _7302060) _7302061) = ((mcell4 _7302062) _7302063))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cmcell4 f0 f2 * * part cmcell4 f1 f3
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
- (_7302102 = _7302104), (_7302103 = _7302105) |- ((_7302103 = _7302105) /\ ((_7302102 , _7302103) = (_7302104 , _7302105)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= c, f0 f2 c, f1 f3
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- ((~ (_7302080 = _7302081)) \/ ((hl _7302080) = (hl _7302081)))
T c\/ c~ c= f0 f1 c= chl f0 chl f1
+ |- ((((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
+ |- ((!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((((((cc_4 V) u0) u1) f) i) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((critical_edge_y (distance ((f i) , (f (SUC i))))) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))))))))))))) ==> ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))))))) = T)
T c= ! ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS b0 cNIL b1 b2 b3 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b2 c/\ ccc_4 f0 f1 b0 b3 b4 c/\ ccritical_edge_y cdistance c, f1 b0 c/\ ccritical_edge_y cdistance c, * b3 b4 * b3 cSUC b4 c/\ creal_lt cdistance c, f1 * b3 b4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f1 * b3 cSUC b4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, b0 * b3 b4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, b0 * b3 cSUC b4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c= cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS b0 cCONS * b3 b4 cNIL creal_sub cbump creal_div cdistance c, f1 b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * b3 b4 * b3 cSUC b4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
+ (critical_edge_y (distance (u0 , u1))) |- ((critical_edge_y (distance (u0 , u1))) /\ ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))))))))))
T c==> ccritical_edge_y cdistance c, f0 f1 c/\ ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f2 f3 * f2 cSUC f3 c==> creal_lt cdistance c, f0 * f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> cSUBSET * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL * * * * part cwedge_ge f0 f1 * f2 f3 * f2 cSUC f3 c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> cleaf f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS * f2 cSUC f3 cNIL c==> c~ cnegligible * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> cbarV f4 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f2 f3 * f2 cSUC f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cnegligible * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL
+ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))
T c==> cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c/\ cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
+ |- ((\V. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V)))) V)
T * / c==> c/\ csaturated b0 c/\ cpacking b0 cleaf b0 f0 cIN * * part ccc_cell b0 f0 * part cmcell_set b0 f1
+ (critical_edge_y (distance ((f i) , (f (SUC i))))) |- ((critical_edge_y (distance ((f i) , (f (SUC i))))) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))))))))
T c==> ccritical_edge_y cdistance c, * f0 f1 * f0 cSUC f1 c/\ ccritical_edge_y cdistance c, * f0 f1 * f0 cSUC f1 c==> creal_lt cdistance c, f2 * f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f4 cCONS f2 cCONS f3 cCONS * f0 f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f2 cCONS f3 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY * * part ccc_cell f4 cCONS f2 cCONS f3 cCONS * f0 f1 cNIL c==> c~ ccoplanar * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c==> cSUBSET * * part ccc_cell f4 cCONS f2 cCONS f3 cCONS * f0 f1 cNIL * * * * part cwedge_ge f2 f3 * f0 f1 * f0 cSUC f1 c==> c= * * part ccc_cell f4 cCONS f2 cCONS f3 cCONS * f0 f1 cNIL * * part cmcell4 f4 cCONS f2 cCONS f3 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT * f0 f1 part cEMPTY c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT * f0 cSUC f1 part cEMPTY c==> cleaf f4 cCONS f2 cCONS f3 cCONS * f0 f1 cNIL c==> cleaf f4 cCONS f2 cCONS f3 cCONS * f0 cSUC f1 cNIL c==> c~ cnegligible * * part ccc_cell f4 cCONS f2 cCONS f3 cCONS * f0 f1 cNIL c==> cbarV f4 cNUMERAL cBIT1 cBIT1 c_0 cCONS f2 cCONS f3 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL c~ cnegligible * * part cmcell4 f4 cCONS f2 cCONS f3 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL
+ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((!v. ((radV (u INSERT (v INSERT EMPTY))) = ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u , v))))) ==> ((\v. ((radV (u INSERT (v INSERT EMPTY))) = ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u , v))))) v)) = ((\v. ((radV (u INSERT (v INSERT EMPTY))) = ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u , v))))) v))
T c= c==> ! c= cradV * * part cINSERT f0 * * part cINSERT b0 part cEMPTY creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 b0 * / c= cradV * * part cINSERT f0 * * part cINSERT b0 part cEMPTY creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 b0 f1 * / c= cradV * * part cINSERT f0 * * part cINSERT b0 part cEMPTY creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 b0 f1
+ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = T)
T c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cT
+ |- (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))))))
T c==> creal_lt cdistance c, f0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f0 cCONS f3 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY c==> cSUBSET * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL * * * * part cwedge_ge f0 f3 * f1 f2 * f1 cSUC f2 c==> c= * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL * * part cmcell4 f4 cCONS f0 cCONS f3 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT * f1 f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT * f1 cSUC f2 part cEMPTY c==> cleaf f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL c==> cleaf f4 cCONS f0 cCONS f3 cCONS * f1 cSUC f2 cNIL c==> c~ cnegligible * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL c==> cbarV f4 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f3 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c~ cnegligible * * part cmcell4 f4 cCONS f0 cCONS f3 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL
- (_7302004 = _7302006), (_7302005 = _7302007) |- (((((leaf _7302004) _7302005) = ((leaf _7302006) _7302007)) ==> (((leaf _7302006) _7302007) \/ (~ ((leaf _7302004) _7302005)))) = (((leaf _7302006) _7302007) \/ (~ ((leaf _7302004) _7302005))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cleaf f0 f2 cleaf f1 f3 c\/ cleaf f1 f3 c~ cleaf f0 f2 c\/ cleaf f1 f3 c~ cleaf f0 f2
+ |- (~ (~ (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x) = ((real_div x) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c~ c~ c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_div f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (((((cc_4 V) u0) u1) f) i) |- ((((((cc_4 V) u0) u1) f) i) /\ ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))))))))))
T c==> ccc_4 f0 f1 f2 f3 f4 c/\ ccc_4 f0 f1 f2 f3 f4 c==> ccritical_edge_y cdistance c, f1 f2 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- ((((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
- (((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c==> cnegligible * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL cF
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))))) ==> F), (((((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))))) \/ ((((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))))) |- F
T c==> c==> c\/ c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF c==> c\/ c\/ c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c\/ c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (packing V), (saturated V), ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((((((cc_4 V) u0) u1) f) i) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((critical_edge_y (distance ((f i) , (f (SUC i))))) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)))))))))))) |- ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> cpacking f0 c==> csaturated f0 c==> c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ ccc_4 f0 f1 f2 f5 f6 c/\ ccritical_edge_y cdistance c, f1 f2 c/\ ccritical_edge_y cdistance c, * f5 f6 * f5 cSUC f6 c/\ creal_lt cdistance c, f1 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f1 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f2 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f2 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c= cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f5 f6 * f5 cSUC f6 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F))))))))))))))))))))))))))) n)
T * / ! c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL b1 b0 f3 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b0 c==> ccc_4 f0 f1 f2 f3 f4 c==> ccritical_edge_y cdistance c, f1 f2 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL cF f5
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((~ ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) /\ F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f4 f5 * f4 cSUC f5 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c/\ c~ c= cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f4 f5 * f4 cSUC f5 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cF
+ (f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- (T = ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((real_lt (radV f')) hminus))))
T c==> c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> creal_lt cdistance c, f1 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c= cT c\/ c= f0 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY c\/ c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY creal_lt cradV f0 chminus
- (~ ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) |- ((((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) = F)
T c==> c~ c= cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= c= creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cF
- (~ F), (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ c~ cF cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((COND (((u0 INSERT (u1 INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (((((VX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) DIFF (u0 INSERT (u1 INSERT EMPTY))) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (!f. ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = (((VX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) DIFF (u0 INSERT (u1 INSERT EMPTY)))) \/ (f IN ((subcritical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))) ((real_sub (bump (radV (u0 INSERT (u1 INSERT EMPTY))))) (bump (radV (((VX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) DIFF (u0 INSERT (u1 INSERT EMPTY))))))) (real_of_num (NUMERAL _0))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c= cCOND c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccritical_edgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ cIN * * part cDIFF * * part cVX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccritical_edgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL ! c==> cIN b0 * * part cedgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cDIFF * * part cVX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part csubcritical_edgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL creal_sub cbump cradV * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cbump cradV * * part cDIFF * * part cVX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- (_7302008 = _7302010), (_7302009 = _7302011) |- ((_7302009 = _7302011) /\ ((_7302010 SUBSET _7302011) \/ (~ (_7302008 SUBSET _7302009))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
- (((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- ((\u1. (!u2. (!u3. (((packing V) /\ ((saturated V) /\ ((~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))) ==> (((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))) = ((u0 INSERT (u1 INSERT EMPTY)) INSERT ((u0 INSERT (u2 INSERT EMPTY)) INSERT ((u0 INSERT (u3 INSERT EMPTY)) INSERT ((u1 INSERT (u2 INSERT EMPTY)) INSERT ((u1 INSERT (u3 INSERT EMPTY)) INSERT ((u2 INSERT (u3 INSERT EMPTY)) INSERT EMPTY))))))))))) u1)
T * / ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS b0 cCONS b1 cCONS b2 cNIL cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS b0 cCONS b1 cCONS b2 cNIL c= * * part cedgeX f0 * * part cmcell4 f0 cCONS f1 cCONS b0 cCONS b1 cCONS b2 cNIL * * part cINSERT * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT * * part cINSERT f1 * * part cINSERT b1 part cEMPTY * * part cINSERT * * part cINSERT f1 * * part cINSERT b2 part cEMPTY * * part cINSERT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT * * part cINSERT b1 * * part cINSERT b2 part cEMPTY part cEMPTY f2
+ ((f' = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- (((f' = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) /\ ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((real_lt (radV f')) hminus))))
T c==> c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT * f2 f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT * f2 cSUC f3 part cEMPTY c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> creal_lt cdistance c, f1 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f4 * f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f4 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT * f2 f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT * f2 cSUC f3 part cEMPTY c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c\/ c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY creal_lt cradV f0 chminus
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cnegligible * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL cF
+ ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))))
T c==> creal_lt cdistance c, f0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f3 cCONS f4 cCONS f0 cCONS * f1 f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f4 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY * * part ccc_cell f3 cCONS f4 cCONS f0 cCONS * f1 f2 cNIL c==> c~ ccoplanar * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY c==> cSUBSET * * part ccc_cell f3 cCONS f4 cCONS f0 cCONS * f1 f2 cNIL * * * * part cwedge_ge f4 f0 * f1 f2 * f1 cSUC f2 c==> c= * * part ccc_cell f3 cCONS f4 cCONS f0 cCONS * f1 f2 cNIL * * part cmcell4 f3 cCONS f4 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT * f1 f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT * f1 cSUC f2 part cEMPTY c==> cleaf f3 cCONS f4 cCONS f0 cCONS * f1 f2 cNIL c==> cleaf f3 cCONS f4 cCONS f0 cCONS * f1 cSUC f2 cNIL c==> c~ cnegligible * * part ccc_cell f3 cCONS f4 cCONS f0 cCONS * f1 f2 cNIL c==> cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS f4 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c~ cnegligible * * part cmcell4 f3 cCONS f4 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL
+ |- (((!u0. (!u1. (!u2. (!u3. (((packing V) /\ ((saturated V) /\ ((~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))) ==> (((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))) = ((u0 INSERT (u1 INSERT EMPTY)) INSERT ((u0 INSERT (u2 INSERT EMPTY)) INSERT ((u0 INSERT (u3 INSERT EMPTY)) INSERT ((u1 INSERT (u2 INSERT EMPTY)) INSERT ((u1 INSERT (u3 INSERT EMPTY)) INSERT ((u2 INSERT (u3 INSERT EMPTY)) INSERT EMPTY)))))))))))) ==> ((\u0. (!u1. (!u2. (!u3. (((packing V) /\ ((saturated V) /\ ((~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))) ==> (((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))) = ((u0 INSERT (u1 INSERT EMPTY)) INSERT ((u0 INSERT (u2 INSERT EMPTY)) INSERT ((u0 INSERT (u3 INSERT EMPTY)) INSERT ((u1 INSERT (u2 INSERT EMPTY)) INSERT ((u1 INSERT (u3 INSERT EMPTY)) INSERT ((u2 INSERT (u3 INSERT EMPTY)) INSERT EMPTY)))))))))))) u0)) = ((\u0. (!u1. (!u2. (!u3. (((packing V) /\ ((saturated V) /\ ((~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))) ==> (((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))) = ((u0 INSERT (u1 INSERT EMPTY)) INSERT ((u0 INSERT (u2 INSERT EMPTY)) INSERT ((u0 INSERT (u3 INSERT EMPTY)) INSERT ((u1 INSERT (u2 INSERT EMPTY)) INSERT ((u1 INSERT (u3 INSERT EMPTY)) INSERT ((u2 INSERT (u3 INSERT EMPTY)) INSERT EMPTY)))))))))))) u0))
T c= c==> ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ c~ cnegligible * * part cmcell4 f0 cCONS b0 cCONS b1 cCONS b2 cCONS b3 cNIL cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS b0 cCONS b1 cCONS b2 cCONS b3 cNIL c= * * part cedgeX f0 * * part cmcell4 f0 cCONS b0 cCONS b1 cCONS b2 cCONS b3 cNIL * * part cINSERT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT * * part cINSERT b0 * * part cINSERT b3 part cEMPTY * * part cINSERT * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT * * part cINSERT b1 * * part cINSERT b3 part cEMPTY * * part cINSERT * * part cINSERT b2 * * part cINSERT b3 part cEMPTY part cEMPTY * / ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ c~ cnegligible * * part cmcell4 f0 cCONS b0 cCONS b1 cCONS b2 cCONS b3 cNIL cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS b0 cCONS b1 cCONS b2 cCONS b3 cNIL c= * * part cedgeX f0 * * part cmcell4 f0 cCONS b0 cCONS b1 cCONS b2 cCONS b3 cNIL * * part cINSERT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT * * part cINSERT b0 * * part cINSERT b3 part cEMPTY * * part cINSERT * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT * * part cINSERT b1 * * part cINSERT b3 part cEMPTY * * part cINSERT * * part cINSERT b2 * * part cINSERT b3 part cEMPTY part cEMPTY f1 * / ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ c~ cnegligible * * part cmcell4 f0 cCONS b0 cCONS b1 cCONS b2 cCONS b3 cNIL cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS b0 cCONS b1 cCONS b2 cCONS b3 cNIL c= * * part cedgeX f0 * * part cmcell4 f0 cCONS b0 cCONS b1 cCONS b2 cCONS b3 cNIL * * part cINSERT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT * * part cINSERT b0 * * part cINSERT b3 part cEMPTY * * part cINSERT * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT * * part cINSERT b1 * * part cINSERT b3 part cEMPTY * * part cINSERT * * part cINSERT b2 * * part cINSERT b3 part cEMPTY part cEMPTY f1
+ |- ((!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))))))))))))))))))))))) = T)
T c= ! ! ! c==> cpacking b0 c==> csaturated b0 c==> cleaf_rank b0 cCONS f0 cCONS f1 cNIL b2 b1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b1 c==> ccc_4 b0 f0 f1 f2 f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f2 f3 * f2 cSUC f3 c==> creal_lt cdistance c, f0 * f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke b0 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> cSUBSET * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL * * * * part cwedge_ge f0 f1 * f2 f3 * f2 cSUC f3 c==> c= * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL * * part cmcell4 b0 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> cleaf b0 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> cleaf b0 cCONS f0 cCONS f1 cCONS * f2 cSUC f3 cNIL c==> c~ cnegligible * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c~ cnegligible * * part cmcell4 b0 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL cT
+ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))))
T c==> cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c/\ cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
+ |- ((\X. (!r. (!e. (((saturated V) /\ ((packing V) /\ (((mcell_set V) X) /\ ((\e. (((VX V) X) DIFF e)) = r)))) ==> ((((beta_bump_v1 V) e) X) = (((COND ((~ (negligible X)) /\ ((e IN ((critical_edgeX V) X)) /\ (((r e) IN ((critical_edgeX V) X)) /\ (!f. ((f IN ((edgeX V) X)) ==> ((f = e) \/ ((f = (r e)) \/ (f IN ((subcritical_edgeX V) X)))))))))) ((real_sub (bump (radV e))) (bump (radV (r e))))) (real_of_num (NUMERAL _0)))))))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))
T * / ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cmcell_set f0 b0 c= / * * part cDIFF * * part cVX f0 b0 b3 b1 c= cbeta_bump_v1 f0 b2 b0 cCOND c/\ c~ cnegligible b0 c/\ cIN b2 * * part ccritical_edgeX f0 b0 c/\ cIN * b1 b2 * * part ccritical_edgeX f0 b0 ! c==> cIN b3 * * part cedgeX f0 b0 c\/ c= b3 b2 c\/ c= b3 * b1 b2 cIN b3 * * part csubcritical_edgeX f0 b0 creal_sub cbump cradV b2 cbump cradV * b1 b2 creal_of_num cNUMERAL c_0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ |- (((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0
+ |- ((\w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F))))))))))))))))))))))))))) w0)
T * / c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 f3 f4 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f3 c==> ccc_4 f0 f1 f2 f4 f5 c==> ccritical_edge_y cdistance c, f1 f2 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f1 cCONS f2 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f4 f5 cNIL c==> c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f4 f5 cNIL * * * * part cwedge_ge f1 f2 * f4 f5 * f4 cSUC f5 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f4 f5 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f4 f5 part cEMPTY c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f4 f5 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f4 cSUC f5 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f4 f5 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f4 f5 * f4 cSUC f5 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL cF f6
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
+ (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) |- ((~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = ((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) /\ (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c= c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
- (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) |- (~ (collinear (u0 INSERT (u1 INSERT (((I f) (SUC i)) INSERT EMPTY)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT cI f2 cSUC f3 part cEMPTY
- (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- ((~ F) ==> F)
T c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ cF cF
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((~ ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> F) ==> ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) = ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c= c==> c==> c~ c= cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f4 f5 * f4 cSUC f5 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cF c= cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f4 f5 * f4 cSUC f5 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f4 f5 * f4 cSUC f5 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (!i. (!f. (!u1. (!u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))))))))))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> ccritical_edge_y cdistance c, f1 f2 c==> ccritical_edge_y cdistance c, * f5 f6 * f5 cSUC f6 c==> creal_lt cdistance c, f1 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * * * part cwedge_ge f1 f2 * f5 f6 * f5 cSUC f6 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 part cEMPTY c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f5 cSUC f6 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL
+ |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 f1 creal_of_num cNUMERAL c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> c/\ creal_lt cdistance c, f0 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f1 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c= cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f4 f5 * f4 cSUC f5 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))))))))))
T c==> creal_lt cdistance c, f0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f3 cCONS f4 cCONS f0 cCONS * f1 f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f4 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY * * part ccc_cell f3 cCONS f4 cCONS f0 cCONS * f1 f2 cNIL c==> c~ ccoplanar * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY c==> cSUBSET * * part ccc_cell f3 cCONS f4 cCONS f0 cCONS * f1 f2 cNIL * * * * part cwedge_ge f4 f0 * f1 f2 * f1 cSUC f2 c==> c= * * part ccc_cell f3 cCONS f4 cCONS f0 cCONS * f1 f2 cNIL * * part cmcell4 f3 cCONS f4 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT * f1 f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT * f1 cSUC f2 part cEMPTY c==> cleaf f3 cCONS f4 cCONS f0 cCONS * f1 f2 cNIL c==> cleaf f3 cCONS f4 cCONS f0 cCONS * f1 cSUC f2 cNIL c==> c~ cnegligible * * part ccc_cell f3 cCONS f4 cCONS f0 cCONS * f1 f2 cNIL c==> cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS f4 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f4 f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f1 f2 * f1 cSUC f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cnegligible * * part cmcell4 f3 cCONS f4 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c==> creal_lt cdistance c, f1 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge f0 f1 * f4 f5 * f4 cSUC f5 c==> c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 cSUC f5 cNIL c==> c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> cnegligible * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL cF
- (((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (T = ((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c< cNUMERAL cBIT1 c_0 f4 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c==> ccc_4 f3 f0 f1 f5 f6 c= cT c/\ cpacking f3 c/\ csaturated f3 c/\ cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 ccc_4 f3 f0 f1 f5 f6
- |- ((!w0. t) = t)
T c= ! f0 f0
- |- ((~ (_7302090 = _7302091)) \/ ((real_of_num _7302090) = (real_of_num _7302091)))
T c\/ c~ c= f0 f1 c= creal_of_num f0 creal_of_num f1
+ |- ((~ (~ (((~ ((real_le y) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x))) \/ (~ ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) x))) /\ (((real_le y) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) \/ ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) x))))) ==> F)
T c==> c~ c~ c/\ c\/ c~ creal_le f0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 c~ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c\/ creal_le f0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 cF
- |- ((_7302088 = _7302089) ==> ((BIT0 _7302088) = (BIT0 _7302089)))
T c==> c= f0 f1 c= cBIT0 f0 cBIT0 f1
+ |- (((!x. ((P x) = (x IN P))) ==> ((\x. ((P x) = (x IN P))) x)) = ((\x. ((P x) = (x IN P))) x))
T c= c==> ! c= * f0 b0 cIN b0 f0 * / c= * f0 b0 cIN b0 f0 f1 * / c= * f0 b0 cIN b0 f0 f1
+ |- ((\u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))))))) u0)
T * / ! ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS b0 cCONS b1 cNIL b2 b3 b4 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b3 ccc_4 f0 b0 b1 b4 b5 c/\ c= ccc_ke f0 cCONS b0 cCONS b1 cCONS * b4 b5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt chl cCONS b0 cCONS b1 cCONS * b4 b5 cCONS * b4 cSUC b5 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= * * part chull part cconvex * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT * b4 b5 * * part cINSERT * b4 cSUC b5 part cEMPTY * * part ccc_cell f0 cCONS b0 cCONS b1 cCONS * b4 b5 cNIL c/\ c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT * b4 b5 * * part cINSERT * b4 cSUC b5 part cEMPTY c/\ cSUBSET * * part ccc_cell f0 cCONS b0 cCONS b1 cCONS * b4 b5 cNIL * * * * part cwedge_ge b0 b1 * b4 b5 * b4 cSUC b5 c/\ c= * * part ccc_cell f0 cCONS b0 cCONS b1 cCONS * b4 b5 cNIL * * part cmcell4 f0 cCONS b0 cCONS b1 cCONS * b4 b5 cCONS * b4 cSUC b5 cNIL c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT * b4 b5 part cEMPTY c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT * b4 cSUC b5 part cEMPTY c/\ cleaf f0 cCONS b0 cCONS b1 cCONS * b4 b5 cNIL c/\ cleaf f0 cCONS b0 cCONS b1 cCONS * b4 cSUC b5 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS b0 cCONS b1 cCONS * b4 b5 cNIL cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS b0 cCONS b1 cCONS * b4 b5 cCONS * b4 cSUC b5 cNIL f1
+ ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))))))))
T c==> creal_lt cdistance c, f0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f0 cCONS f3 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY c==> cSUBSET * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL * * * * part cwedge_ge f0 f3 * f1 f2 * f1 cSUC f2 c==> c= * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL * * part cmcell4 f4 cCONS f0 cCONS f3 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT * f1 f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT * f1 cSUC f2 part cEMPTY c==> cleaf f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL c==> cleaf f4 cCONS f0 cCONS f3 cCONS * f1 cSUC f2 cNIL c==> c~ cnegligible * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL c==> cbarV f4 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f3 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f1 f2 * f1 cSUC f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cnegligible * * part cmcell4 f4 cCONS f0 cCONS f3 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL
+ (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) |- ((~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = ((packing V) /\ ((saturated V) /\ ((~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c= c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ cpacking f0 c/\ csaturated f0 c/\ c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
- |- ((_7302048 = _7302049) ==> ((packing _7302049) \/ (~ (packing _7302048))))
T c==> c= f0 f1 c\/ cpacking f1 c~ cpacking f0
+ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))
T c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
- (~ ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) |- (~ (((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))
T c==> c~ c= cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ c= creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (((COND ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((u0 INSERT (u1 INSERT EMPTY)) IN ((critical_edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((((\e. (((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) DIFF e)) (u0 INSERT (u1 INSERT EMPTY))) IN ((critical_edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (!f. ((f IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((\e. (((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) DIFF e)) (u0 INSERT (u1 INSERT EMPTY)))) \/ (f IN ((subcritical_edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))))) ((real_sub (bump (radV (u0 INSERT (u1 INSERT EMPTY))))) (bump (radV ((\e. (((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) DIFF e)) (u0 INSERT (u1 INSERT EMPTY))))))) (real_of_num (NUMERAL _0)))) ==> ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c==> c= cbeta_bump_v1 f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cCOND c/\ c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccritical_edgeX f5 * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c/\ cIN * / * * part cDIFF * * part cVX f5 * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccritical_edgeX f5 * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL ! c==> cIN b0 * * part cedgeX f5 * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * / * * part cDIFF * * part cVX f5 * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part csubcritical_edgeX f5 * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL creal_sub cbump cradV * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cbump cradV * / * * part cDIFF * * part cVX f5 * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_of_num cNUMERAL c_0 c= cbeta_bump_v1 f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- ((f' = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) |- (((f' = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) = T)
T c==> c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT * f2 f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT * f2 cSUC f3 part cEMPTY c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c= c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT * f2 f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT * f2 cSUC f3 part cEMPTY c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY cT
+ |- (((!ul. (!V. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V))))) ==> ((\ul. (!V. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V))))) ul)) = ((\ul. (!V. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V))))) ul))
T c= c==> ! ! c==> c/\ csaturated b1 c/\ cpacking b1 cleaf b1 b0 cIN * * part ccc_cell b1 b0 * part cmcell_set b1 * / ! c==> c/\ csaturated b1 c/\ cpacking b1 cleaf b1 b0 cIN * * part ccc_cell b1 b0 * part cmcell_set b1 f0 * / ! c==> c/\ csaturated b1 c/\ cpacking b1 cleaf b1 b0 cIN * * part ccc_cell b1 b0 * part cmcell_set b1 f0
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- ((((mcell4 V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL))))) /\ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL)))))))
T c==> cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ c= * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cCONS cI f3 cSUC f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cCONS cI f3 cSUC f4 cNIL
- |- (T = (((real_sub (bump (radV (u0 INSERT (u1 INSERT EMPTY))))) (bump (radV ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c= cT c= creal_sub cbump cradV * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cbump cradV * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f2 f3 * f2 cSUC f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge f0 f1 * f4 f5 * f4 cSUC f5 c==> c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 cSUC f5 cNIL c==> c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> cnegligible * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL cF
+ ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))) |- (((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((real_lt (radV f')) hminus))) = ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ (((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))) /\ ((real_lt (radV f')) hminus)))))
T c==> c\/ c= f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c\/ c= f0 * * part cINSERT f2 * * part cINSERT * f3 f4 part cEMPTY c\/ c= f0 * * part cINSERT f2 * * part cINSERT * f3 cSUC f4 part cEMPTY c= f0 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c= c\/ c= f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c= f0 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY creal_lt cradV f0 chminus c\/ c= f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c= f0 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c/\ c\/ c= f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c\/ c= f0 * * part cINSERT f2 * * part cINSERT * f3 f4 part cEMPTY c\/ c= f0 * * part cINSERT f2 * * part cINSERT * f3 cSUC f4 part cEMPTY c= f0 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY creal_lt cradV f0 chminus
+ (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))))
T c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
- (_7302030 = _7302032), (_7302031 = _7302033) |- ((((_7302030 < _7302031) = (_7302032 < _7302033)) ==> ((_7302032 < _7302033) \/ (~ (_7302030 < _7302031)))) = ((_7302032 < _7302033) \/ (~ (_7302030 < _7302031))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= c< f0 f2 c< f1 f3 c\/ c< f1 f3 c~ c< f0 f2 c\/ c< f1 f3 c~ c< f0 f2
- (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
+ |- ((~ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_neg (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))
T c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cnegligible * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL cF
+ |- ((\f. (!u1. (!u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F))))))))))))))))))))))))))))))) f)
T * / ! ! ! ! ! c==> cpacking b3 c==> csaturated b3 c==> cleaf_rank b3 cCONS b2 cCONS b1 cNIL b5 b4 b0 c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b5 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b4 c==> ccc_4 b3 b2 b1 b0 f0 c==> ccritical_edge_y cdistance c, b2 b1 c==> ccritical_edge_y cdistance c, * b0 f0 * b0 cSUC f0 c==> creal_lt cdistance c, b2 * b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, b2 * b0 cSUC f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, b1 * b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, b1 * b0 cSUC f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke b3 cCONS b2 cCONS b1 cCONS * b0 f0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS b2 cCONS b1 cCONS * b0 f0 cCONS * b0 cSUC f0 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT * b0 f0 * * part cINSERT * b0 cSUC f0 part cEMPTY * * part ccc_cell b3 cCONS b2 cCONS b1 cCONS * b0 f0 cNIL c==> c~ ccoplanar * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT * b0 f0 * * part cINSERT * b0 cSUC f0 part cEMPTY c==> cSUBSET * * part ccc_cell b3 cCONS b2 cCONS b1 cCONS * b0 f0 cNIL * * * * part cwedge_ge b2 b1 * b0 f0 * b0 cSUC f0 c==> c= * * part ccc_cell b3 cCONS b2 cCONS b1 cCONS * b0 f0 cNIL * * part cmcell4 b3 cCONS b2 cCONS b1 cCONS * b0 f0 cCONS * b0 cSUC f0 cNIL c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT * b0 f0 part cEMPTY c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT * b0 cSUC f0 part cEMPTY c==> cleaf b3 cCONS b2 cCONS b1 cCONS * b0 f0 cNIL c==> cleaf b3 cCONS b2 cCONS b1 cCONS * b0 cSUC f0 cNIL c==> c~ cnegligible * * part ccc_cell b3 cCONS b2 cCONS b1 cCONS * b0 f0 cNIL c==> cbarV b3 cNUMERAL cBIT1 cBIT1 c_0 cCONS b2 cCONS b1 cCONS * b0 f0 cCONS * b0 cSUC f0 cNIL c==> cnegligible * * part cmcell4 b3 cCONS b2 cCONS b1 cCONS * b0 f0 cCONS * b0 cSUC f0 cNIL cF f1
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))) ==> F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f4 f5 * f4 cSUC f5 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c==> c==> c/\ cpacking f3 c/\ csaturated f3 c/\ cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f6 ccc_4 f3 f0 f1 f4 f5 c/\ c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt chl cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY c/\ cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge f0 f1 * f4 f5 * f4 cSUC f5 c/\ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 cSUC f5 part cEMPTY c/\ cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c/\ cleaf f3 cCONS f0 cCONS f1 cCONS * f4 cSUC f5 cNIL c/\ c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL cF
- (_7302038 = _7302043) |- ((_7302038 = _7302043) /\ ((~ (_7302036 = _7302041)) \/ ((~ (_7302040 = _7302045)) \/ ((~ (_7302037 = _7302042)) \/ ((~ (_7302039 = _7302044)) \/ ((((((leaf_rank _7302041) _7302042) _7302043) _7302044) _7302045) \/ (~ (((((leaf_rank _7302036) _7302037) _7302038) _7302039) _7302040))))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f1 f9 f5 c~ cleaf_rank f2 f6 f0 f8 f4
+ |- ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))))))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f3 c==> ccc_4 f4 f0 f1 f5 f6 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f5 f6 * f5 cSUC f6 c==> creal_lt cdistance c, f0 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cSUBSET * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * * * part cwedge_ge f0 f1 * f5 f6 * f5 cSUC f6 c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cleaf f4 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS * f5 cSUC f6 cNIL c==> c~ cnegligible * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> cbarV f4 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f5 f6 * f5 cSUC f6 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cnegligible * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((((cc_4 V) u0) u1) f) i) |- ((((((cc_4 V) u0) u1) f) i) /\ ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))))))))))))))))
T c==> ccc_4 f0 f1 f2 f3 f4 c/\ ccc_4 f0 f1 f2 f3 f4 c==> ccritical_edge_y cdistance c, f1 f2 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
+ |- ((f x) = ((I f) x))
T c= * f0 f1 cI f0 f1
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ c= cbeta_bump_v1 f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c/\ cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c/\ c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ c= cbeta_bump_v1 f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c/\ c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 cF
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- (((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0
+ |- ((((~ ((real_le y) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x))) \/ (~ ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) x))) /\ (((real_le y) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) \/ ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) x))) = (~ ((((real_le y) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) /\ ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) x)) \/ ((~ ((real_le y) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x))) /\ (~ ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) x))))))
T c= c/\ c\/ c~ creal_le f0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 c~ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c\/ creal_le f0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c~ c\/ c/\ creal_le f0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ c~ creal_le f0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 c~ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1
+ |- ((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
+ (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0
+ |- (!r. (!e. (((saturated V) /\ ((packing V) /\ (((mcell_set V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((\e. (((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) DIFF e)) = r)))) ==> ((((beta_bump_v1 V) e) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (((COND ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((e IN ((critical_edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((r e) IN ((critical_edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (!f. ((f IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((f = e) \/ ((f = (r e)) \/ (f IN ((subcritical_edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))))) ((real_sub (bump (radV e))) (bump (radV (r e))))) (real_of_num (NUMERAL _0)))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cmcell_set f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= / * * part cDIFF * * part cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL b0 f5 c= cbeta_bump_v1 f0 f6 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCOND c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cIN f6 * * part ccritical_edgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cIN * f5 f6 * * part ccritical_edgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL ! c==> cIN b0 * * part cedgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c\/ c= b0 f6 c\/ c= b0 * f5 f6 cIN b0 * * part csubcritical_edgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_sub cbump cradV f6 cbump cradV * f5 f6 creal_of_num cNUMERAL c_0
+ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))
T c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
- (_7302072 = _7302074), (_7302073 = _7302075) |- ((_7302072 = _7302074) /\ (((hull _7302072) _7302073) = ((hull _7302074) _7302075)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part chull f0 f2 * * part chull f1 f3
+ |- (((!V. (!X. (!r. (!e. (((saturated V) /\ ((packing V) /\ (((mcell_set V) X) /\ ((\e. (((VX V) X) DIFF e)) = r)))) ==> ((((beta_bump_v1 V) e) X) = (((COND ((~ (negligible X)) /\ ((e IN ((critical_edgeX V) X)) /\ (((r e) IN ((critical_edgeX V) X)) /\ (!f. ((f IN ((edgeX V) X)) ==> ((f = e) \/ ((f = (r e)) \/ (f IN ((subcritical_edgeX V) X)))))))))) ((real_sub (bump (radV e))) (bump (radV (r e))))) (real_of_num (NUMERAL _0))))))))) ==> ((\V. (!X. (!r. (!e. (((saturated V) /\ ((packing V) /\ (((mcell_set V) X) /\ ((\e. (((VX V) X) DIFF e)) = r)))) ==> ((((beta_bump_v1 V) e) X) = (((COND ((~ (negligible X)) /\ ((e IN ((critical_edgeX V) X)) /\ (((r e) IN ((critical_edgeX V) X)) /\ (!f. ((f IN ((edgeX V) X)) ==> ((f = e) \/ ((f = (r e)) \/ (f IN ((subcritical_edgeX V) X)))))))))) ((real_sub (bump (radV e))) (bump (radV (r e))))) (real_of_num (NUMERAL _0))))))))) V)) = ((\V. (!X. (!r. (!e. (((saturated V) /\ ((packing V) /\ (((mcell_set V) X) /\ ((\e. (((VX V) X) DIFF e)) = r)))) ==> ((((beta_bump_v1 V) e) X) = (((COND ((~ (negligible X)) /\ ((e IN ((critical_edgeX V) X)) /\ (((r e) IN ((critical_edgeX V) X)) /\ (!f. ((f IN ((edgeX V) X)) ==> ((f = e) \/ ((f = (r e)) \/ (f IN ((subcritical_edgeX V) X)))))))))) ((real_sub (bump (radV e))) (bump (radV (r e))))) (real_of_num (NUMERAL _0))))))))) V))
T c= c==> ! ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cmcell_set b0 b1 c= / * * part cDIFF * * part cVX b0 b1 b4 b2 c= cbeta_bump_v1 b0 b3 b1 cCOND c/\ c~ cnegligible b1 c/\ cIN b3 * * part ccritical_edgeX b0 b1 c/\ cIN * b2 b3 * * part ccritical_edgeX b0 b1 ! c==> cIN b4 * * part cedgeX b0 b1 c\/ c= b4 b3 c\/ c= b4 * b2 b3 cIN b4 * * part csubcritical_edgeX b0 b1 creal_sub cbump cradV b3 cbump cradV * b2 b3 creal_of_num cNUMERAL c_0 * / ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cmcell_set b0 b1 c= / * * part cDIFF * * part cVX b0 b1 b4 b2 c= cbeta_bump_v1 b0 b3 b1 cCOND c/\ c~ cnegligible b1 c/\ cIN b3 * * part ccritical_edgeX b0 b1 c/\ cIN * b2 b3 * * part ccritical_edgeX b0 b1 ! c==> cIN b4 * * part cedgeX b0 b1 c\/ c= b4 b3 c\/ c= b4 * b2 b3 cIN b4 * * part csubcritical_edgeX b0 b1 creal_sub cbump cradV b3 cbump cradV * b2 b3 creal_of_num cNUMERAL c_0 f0 * / ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cmcell_set b0 b1 c= / * * part cDIFF * * part cVX b0 b1 b4 b2 c= cbeta_bump_v1 b0 b3 b1 cCOND c/\ c~ cnegligible b1 c/\ cIN b3 * * part ccritical_edgeX b0 b1 c/\ cIN * b2 b3 * * part ccritical_edgeX b0 b1 ! c==> cIN b4 * * part cedgeX b0 b1 c\/ c= b4 b3 c\/ c= b4 * b2 b3 cIN b4 * * part csubcritical_edgeX b0 b1 creal_sub cbump cradV b3 cbump cradV * b2 b3 creal_of_num cNUMERAL c_0 f0
+ |- (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))))))))))
T c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f2 f3 * f2 cSUC f3 c==> creal_lt cdistance c, f0 * f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> cSUBSET * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL * * * * part cwedge_ge f0 f1 * f2 f3 * f2 cSUC f3 c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> cleaf f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS * f2 cSUC f3 cNIL c==> c~ cnegligible * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> cbarV f4 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f2 f3 * f2 cSUC f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cnegligible * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL
+ |- ((!u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))))))))))))))))))))))))) = T)
T c= ! ! ! ! c==> cpacking b1 c==> csaturated b1 c==> cleaf_rank b1 cCONS b0 cCONS f0 cNIL b3 b2 f1 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b2 c==> ccc_4 b1 b0 f0 f1 f2 c==> ccritical_edge_y cdistance c, b0 f0 c==> ccritical_edge_y cdistance c, * f1 f2 * f1 cSUC f2 c==> creal_lt cdistance c, b0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, b0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS b0 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY * * part ccc_cell b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY c==> cSUBSET * * part ccc_cell b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL * * * * part cwedge_ge b0 f0 * f1 f2 * f1 cSUC f2 c==> c= * * part ccc_cell b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL * * part cmcell4 b1 cCONS b0 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT * f1 f2 part cEMPTY c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT * f1 cSUC f2 part cEMPTY c==> cleaf b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL c==> cleaf b1 cCONS b0 cCONS f0 cCONS * f1 cSUC f2 cNIL c==> c~ cnegligible * * part ccc_cell b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL c==> cbarV b1 cNUMERAL cBIT1 cBIT1 c_0 cCONS b0 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, b0 f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f1 f2 * f1 cSUC f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cnegligible * * part cmcell4 b1 cCONS b0 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL cT
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((((((cc_4 V) u0) u1) f) i) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((critical_edge_y (distance ((f i) , (f (SUC i))))) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)))))))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c/\ ccc_4 f3 f0 f1 f4 f5 c/\ ccritical_edge_y cdistance c, f0 f1 c/\ ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c/\ creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f0 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f1 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c= cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f4 f5 * f4 cSUC f5 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
+ ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) = T)
T c==> creal_lt cdistance c, f0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c= creal_lt cdistance c, f0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cT
- (((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0
+ |- (((!V. (!u0. (!u1. (!u2. (!u3. (((packing V) /\ ((saturated V) /\ ((~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))) ==> (((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))) = ((u0 INSERT (u1 INSERT EMPTY)) INSERT ((u0 INSERT (u2 INSERT EMPTY)) INSERT ((u0 INSERT (u3 INSERT EMPTY)) INSERT ((u1 INSERT (u2 INSERT EMPTY)) INSERT ((u1 INSERT (u3 INSERT EMPTY)) INSERT ((u2 INSERT (u3 INSERT EMPTY)) INSERT EMPTY))))))))))))) ==> ((\V. (!u0. (!u1. (!u2. (!u3. (((packing V) /\ ((saturated V) /\ ((~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))) ==> (((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))) = ((u0 INSERT (u1 INSERT EMPTY)) INSERT ((u0 INSERT (u2 INSERT EMPTY)) INSERT ((u0 INSERT (u3 INSERT EMPTY)) INSERT ((u1 INSERT (u2 INSERT EMPTY)) INSERT ((u1 INSERT (u3 INSERT EMPTY)) INSERT ((u2 INSERT (u3 INSERT EMPTY)) INSERT EMPTY))))))))))))) V)) = ((\V. (!u0. (!u1. (!u2. (!u3. (((packing V) /\ ((saturated V) /\ ((~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))) ==> (((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))) = ((u0 INSERT (u1 INSERT EMPTY)) INSERT ((u0 INSERT (u2 INSERT EMPTY)) INSERT ((u0 INSERT (u3 INSERT EMPTY)) INSERT ((u1 INSERT (u2 INSERT EMPTY)) INSERT ((u1 INSERT (u3 INSERT EMPTY)) INSERT ((u2 INSERT (u3 INSERT EMPTY)) INSERT EMPTY))))))))))))) V))
T c= c==> ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ c~ cnegligible * * part cmcell4 b0 cCONS b1 cCONS b2 cCONS b3 cCONS b4 cNIL cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 cCONS b1 cCONS b2 cCONS b3 cCONS b4 cNIL c= * * part cedgeX b0 * * part cmcell4 b0 cCONS b1 cCONS b2 cCONS b3 cCONS b4 cNIL * * part cINSERT * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT * * part cINSERT b1 * * part cINSERT b3 part cEMPTY * * part cINSERT * * part cINSERT b1 * * part cINSERT b4 part cEMPTY * * part cINSERT * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT * * part cINSERT b2 * * part cINSERT b4 part cEMPTY * * part cINSERT * * part cINSERT b3 * * part cINSERT b4 part cEMPTY part cEMPTY * / ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ c~ cnegligible * * part cmcell4 b0 cCONS b1 cCONS b2 cCONS b3 cCONS b4 cNIL cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 cCONS b1 cCONS b2 cCONS b3 cCONS b4 cNIL c= * * part cedgeX b0 * * part cmcell4 b0 cCONS b1 cCONS b2 cCONS b3 cCONS b4 cNIL * * part cINSERT * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT * * part cINSERT b1 * * part cINSERT b3 part cEMPTY * * part cINSERT * * part cINSERT b1 * * part cINSERT b4 part cEMPTY * * part cINSERT * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT * * part cINSERT b2 * * part cINSERT b4 part cEMPTY * * part cINSERT * * part cINSERT b3 * * part cINSERT b4 part cEMPTY part cEMPTY f0 * / ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ c~ cnegligible * * part cmcell4 b0 cCONS b1 cCONS b2 cCONS b3 cCONS b4 cNIL cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 cCONS b1 cCONS b2 cCONS b3 cCONS b4 cNIL c= * * part cedgeX b0 * * part cmcell4 b0 cCONS b1 cCONS b2 cCONS b3 cCONS b4 cNIL * * part cINSERT * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT * * part cINSERT b1 * * part cINSERT b3 part cEMPTY * * part cINSERT * * part cINSERT b1 * * part cINSERT b4 part cEMPTY * * part cINSERT * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT * * part cINSERT b2 * * part cINSERT b4 part cEMPTY * * part cINSERT * * part cINSERT b3 * * part cINSERT b4 part cEMPTY part cEMPTY f0
- ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))) |- (((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))) = T)
T c==> c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c= c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY cT
+ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ ((packing V) /\ (saturated V)) |- ((packing V) = T)
T c==> c/\ cpacking f0 csaturated f0 c= cpacking f0 cT
+ (((((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0)))) \/ (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))))) ==> F), (((((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) \/ (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0))))) \/ ((((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0)))) \/ (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0)))))) |- F
T c==> c==> c\/ c/\ creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 cF c==> c\/ c\/ c/\ creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), ((((VX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) DIFF (u0 INSERT (u1 INSERT EMPTY))) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((COND (((u0 INSERT (u1 INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (((((VX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) DIFF (u0 INSERT (u1 INSERT EMPTY))) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (!f. ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = (((VX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) DIFF (u0 INSERT (u1 INSERT EMPTY)))) \/ (f IN ((subcritical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))) ((real_sub (bump (radV (u0 INSERT (u1 INSERT EMPTY))))) (bump (radV (((VX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) DIFF (u0 INSERT (u1 INSERT EMPTY))))))) (real_of_num (NUMERAL _0))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part cDIFF * * part cVX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c= cCOND c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccritical_edgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ cIN * * part cDIFF * * part cVX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccritical_edgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL ! c==> cIN b0 * * part cedgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cDIFF * * part cVX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part csubcritical_edgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL creal_sub cbump cradV * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cbump cradV * * part cDIFF * * part cVX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- (_7302021 = _7302026) |- ((_7302021 = _7302026) /\ ((~ (_7302022 = _7302027)) \/ ((~ (_7302020 = _7302025)) \/ ((~ (_7302023 = _7302028)) \/ ((~ (_7302024 = _7302029)) \/ ((((((cc_4 _7302025) _7302026) _7302027) _7302028) _7302029) \/ (~ (((((cc_4 _7302020) _7302021) _7302022) _7302023) _7302024))))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f5 f1 f3 f7 f9 c~ ccc_4 f4 f0 f2 f6 f8
+ (((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) |- ((((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 cF
- (_7301996 = _7301999), (_7301997 = _7302000), (_7301998 = _7302001) |- ((((((barV _7301996) _7301997) _7301998) = (((barV _7301999) _7302000) _7302001)) ==> ((((barV _7301999) _7302000) _7302001) \/ (~ (((barV _7301996) _7301997) _7301998)))) = ((((barV _7301999) _7302000) _7302001) \/ (~ (((barV _7301996) _7301997) _7301998))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c= c==> c= cbarV f0 f2 f4 cbarV f1 f3 f5 c\/ cbarV f1 f3 f5 c~ cbarV f0 f2 f4 c\/ cbarV f1 f3 f5 c~ cbarV f0 f2 f4
+ |- (((real_le y) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) = ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) x))
T c= creal_le f0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1
- (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) |- ((coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = F)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c= ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY cF
+ |- (((!u. (!v. ((radV (u INSERT (v INSERT EMPTY))) = ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u , v)))))) ==> ((\u. (!v. ((radV (u INSERT (v INSERT EMPTY))) = ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u , v)))))) u)) = ((\u. (!v. ((radV (u INSERT (v INSERT EMPTY))) = ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u , v)))))) u))
T c= c==> ! ! c= cradV * * part cINSERT b0 * * part cINSERT b1 part cEMPTY creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 * / ! c= cradV * * part cINSERT b0 * * part cINSERT b1 part cEMPTY creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 f0 * / ! c= cradV * * part cINSERT b0 * * part cINSERT b1 part cEMPTY creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 f0
+ |- (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))))))
T c==> creal_lt cdistance c, f0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f3 cCONS f4 cCONS f0 cCONS * f1 f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f4 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY * * part ccc_cell f3 cCONS f4 cCONS f0 cCONS * f1 f2 cNIL c==> c~ ccoplanar * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY c==> cSUBSET * * part ccc_cell f3 cCONS f4 cCONS f0 cCONS * f1 f2 cNIL * * * * part cwedge_ge f4 f0 * f1 f2 * f1 cSUC f2 c==> c= * * part ccc_cell f3 cCONS f4 cCONS f0 cCONS * f1 f2 cNIL * * part cmcell4 f3 cCONS f4 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT * f1 f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT * f1 cSUC f2 part cEMPTY c==> cleaf f3 cCONS f4 cCONS f0 cCONS * f1 f2 cNIL c==> cleaf f3 cCONS f4 cCONS f0 cCONS * f1 cSUC f2 cNIL c==> c~ cnegligible * * part ccc_cell f3 cCONS f4 cCONS f0 cCONS * f1 f2 cNIL c==> cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS f4 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f4 f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f1 f2 * f1 cSUC f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cnegligible * * part cmcell4 f3 cCONS f4 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL
+ (packing V) |- ((packing V) /\ ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))))))))))))))))
T c==> cpacking f0 c/\ cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> ccritical_edge_y cdistance c, f1 f2 c==> ccritical_edge_y cdistance c, * f5 f6 * f5 cSUC f6 c==> creal_lt cdistance c, f1 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * * * part cwedge_ge f1 f2 * f5 f6 * f5 cSUC f6 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 part cEMPTY c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f5 cSUC f6 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f5 f6 * f5 cSUC f6 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cnegligible * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL cF
+ (((((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) \/ (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0))))) \/ ((((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0)))) \/ (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0)))))) |- F
T c==> c\/ c\/ c/\ creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 cF
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (packing V), (saturated V), ((packing V) /\ (saturated V)), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) |- ((saturated V) /\ ((packing V) /\ ((mcell_set V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))
T c==> cpacking f0 c==> csaturated f0 c==> c/\ cpacking f0 csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ csaturated f0 c/\ cpacking f0 cmcell_set f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
- |- ((_7302106 = _7302107) ==> ((distance _7302106) = (distance _7302107)))
T c==> c= f0 f1 c= cdistance f0 cdistance f1
- |- (((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
+ |- ((\r. (!e. (((saturated V) /\ ((packing V) /\ (((mcell_set V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((\e. (((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) DIFF e)) = r)))) ==> ((((beta_bump_v1 V) e) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (((COND ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((e IN ((critical_edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((r e) IN ((critical_edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (!f. ((f IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((f = e) \/ ((f = (r e)) \/ (f IN ((subcritical_edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))))) ((real_sub (bump (radV e))) (bump (radV (r e))))) (real_of_num (NUMERAL _0))))))) (\e. (((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) DIFF e)))
T * / ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cmcell_set f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= / * * part cDIFF * * part cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL b2 b0 c= cbeta_bump_v1 f0 b1 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCOND c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cIN b1 * * part ccritical_edgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cIN * b0 b1 * * part ccritical_edgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL ! c==> cIN b2 * * part cedgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c\/ c= b2 b1 c\/ c= b2 * b0 b1 cIN b2 * * part csubcritical_edgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_sub cbump cradV b1 cbump cradV * b0 b1 creal_of_num cNUMERAL c_0 / * * part cDIFF * * part cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL b0
+ |- ((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (_7302008 = _7302010) |- ((_7302009 = _7302011) ==> ((_7302010 SUBSET _7302011) \/ (~ (_7302008 SUBSET _7302009))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
- |- ((~ (_7302012 = _7302013)) \/ ((coplanar _7302013) \/ (~ (coplanar _7302012))))
T c\/ c~ c= f0 f1 c\/ ccoplanar f1 c~ ccoplanar f0
+ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))
T c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
+ |- (~ (((~ ((real_le y) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x))) \/ (~ ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) x))) /\ (((real_le y) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) \/ ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) x))))
T c~ c/\ c\/ c~ creal_le f0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 c~ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c\/ creal_le f0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1
- |- ((~ (_7302050 = _7302052)) \/ ((~ (_7302051 = _7302053)) \/ (((real_div _7302050) _7302051) = ((real_div _7302052) _7302053))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= creal_div f0 f2 creal_div f1 f3
+ (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) |- (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) = (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 c= creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F)))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c==> creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge f0 f1 * f4 f5 * f4 cSUC f5 c==> c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 cSUC f5 cNIL c==> c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> cnegligible * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL cF
- (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) (distance ((f i) , (f (SUC i))))) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus))) |- (((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus)) = T)
T c==> c/\ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cdistance c, * f0 f1 * f0 cSUC f1 creal_le cdistance c, * f0 f1 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus c= creal_le cdistance c, * f0 f1 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus cT
- (_7302023 = _7302028), (_7302020 = _7302025), (_7302021 = _7302026), (_7302022 = _7302027) |- ((_7302023 = _7302028) /\ ((~ (_7302024 = _7302029)) \/ ((((((cc_4 _7302025) _7302026) _7302027) _7302028) _7302029) \/ (~ (((((cc_4 _7302020) _7302021) _7302022) _7302023) _7302024)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c/\ c= f0 f1 c\/ c~ c= f8 f9 c\/ ccc_4 f3 f5 f7 f1 f9 c~ ccc_4 f2 f4 f6 f0 f8
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_7302098 = _7302100), (_7302099 = _7302101) |- ((_7302099 = _7302101) /\ (((I _7302098) _7302099) = ((I _7302100) _7302101)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= cI f0 f2 cI f1 f3
+ (!V. (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V))))) |- (!V. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V))))
T c==> ! ! c==> c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 cIN * * part ccc_cell b0 b1 * part cmcell_set b0 ! c==> c/\ csaturated b0 c/\ cpacking b0 cleaf b0 f0 cIN * * part ccc_cell b0 f0 * part cmcell_set b0
- (_7302030 = _7302032), (_7302031 = _7302033) |- ((_7302031 = _7302033) /\ ((_7302032 < _7302033) \/ (~ (_7302030 < _7302031))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ c< f1 f3 c~ c< f0 f2
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))), (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) /\ F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cnegligible * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c/\ cnegligible * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL cF
+ (((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))) ==> ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((real_lt (radV f')) hminus)))), ((f' = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((real_lt (radV f')) hminus)))
T c==> c==> c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY c\/ c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY creal_lt cradV f0 chminus c==> c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> creal_lt cdistance c, f1 * f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c\/ c= f0 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY c\/ c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY creal_lt cradV f0 chminus
- |- ((~ (_7302102 = _7302104)) \/ ((~ (_7302103 = _7302105)) \/ ((_7302102 , _7302103) = (_7302104 , _7302105))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cnegligible * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge f0 f1 * f4 f5 * f4 cSUC f5 c==> c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 cSUC f5 cNIL c==> c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f4 f5 * f4 cSUC f5 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cnegligible * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = (((~ (x = y)) \/ ((~ (x = z)) \/ (y = z))) = ((y = z) \/ ((~ (x = y)) \/ (~ (x = z))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ c~ c= f0 f2 c= f1 f2 c\/ c= f1 f2 c\/ c~ c= f0 f1 c~ c= f0 f2
+ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))
T c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
+ |- (!u3. (((packing V) /\ ((saturated V) /\ ((~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS u3) NIL))))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS u3) NIL)))))))) ==> (((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS u3) NIL)))))) = ((u0 INSERT (u1 INSERT EMPTY)) INSERT ((u0 INSERT ((f i) INSERT EMPTY)) INSERT ((u0 INSERT (u3 INSERT EMPTY)) INSERT ((u1 INSERT ((f i) INSERT EMPTY)) INSERT ((u1 INSERT (u3 INSERT EMPTY)) INSERT (((f i) INSERT (u3 INSERT EMPTY)) INSERT EMPTY)))))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS f5 cNIL cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS f5 cNIL c= * * part cedgeX f0 * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS f5 cNIL * * part cINSERT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY * * part cINSERT * * part cINSERT f1 * * part cINSERT f5 part cEMPTY * * part cINSERT * * part cINSERT f2 * * part cINSERT * f3 f4 part cEMPTY * * part cINSERT * * part cINSERT f2 * * part cINSERT f5 part cEMPTY * * part cINSERT * * part cINSERT * f3 f4 * * part cINSERT f5 part cEMPTY part cEMPTY
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F)))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge f0 f1 * f4 f5 * f4 cSUC f5 c==> c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 cSUC f5 cNIL c==> c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> cnegligible * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL cF
+ |- (((!P. (!x. ((P x) = (x IN P)))) ==> ((\P. (!x. ((P x) = (x IN P)))) P)) = ((\P. (!x. ((P x) = (x IN P)))) P))
T c= c==> ! ! c= * b0 b1 cIN b1 b0 * / ! c= * b0 b1 cIN b1 b0 f0 * / ! c= * b0 b1 cIN b1 b0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) = (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- (_7302073 = _7302075) |- ((_7302072 = _7302074) ==> (((hull _7302072) _7302073) = ((hull _7302074) _7302075)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
- ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) |- ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_lt chl cCONS f0 cCONS f1 cCONS cI f2 f3 cCONS cI f2 cSUC f3 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))))))))))))))))))
T c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> ccritical_edge_y cdistance c, f1 f2 c==> ccritical_edge_y cdistance c, * f5 f6 * f5 cSUC f6 c==> creal_lt cdistance c, f1 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * * * part cwedge_ge f1 f2 * f5 f6 * f5 cSUC f6 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 part cEMPTY c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f5 cSUC f6 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL
+ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))
T c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F))))))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c==> creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge f0 f1 * f4 f5 * f4 cSUC f5 c==> c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 cSUC f5 cNIL c==> c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f4 f5 * f4 cSUC f5 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cnegligible * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL cF
+ (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))))))))
T c==> creal_lt cdistance c, f0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f0 cCONS f3 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY c==> cSUBSET * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL * * * * part cwedge_ge f0 f3 * f1 f2 * f1 cSUC f2 c==> c= * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL * * part cmcell4 f4 cCONS f0 cCONS f3 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT * f1 f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT * f1 cSUC f2 part cEMPTY c==> cleaf f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL c==> cleaf f4 cCONS f0 cCONS f3 cCONS * f1 cSUC f2 cNIL c==> c~ cnegligible * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL c==> cbarV f4 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f3 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f1 f2 * f1 cSUC f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cnegligible * * part cmcell4 f4 cCONS f0 cCONS f3 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> c/\ creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f1 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c= cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f4 f5 * f4 cSUC f5 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) |- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) = T)
T c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c= cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL cT
- |- ((_7302096 = _7302097) ==> ((SUC _7302096) = (SUC _7302097)))
T c==> c= f0 f1 c= cSUC f0 cSUC f1
- (critical_edge_y (distance ((f i) , (f (SUC i))))) |- ((critical_edge_y (distance ((f i) , (f (SUC i))))) = T)
T c==> ccritical_edge_y cdistance c, * f0 f1 * f0 cSUC f1 c= ccritical_edge_y cdistance c, * f0 f1 * f0 cSUC f1 cT
- |- (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))))))
T c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c/\ c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> cSUBSET * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL * * * * part cwedge_ge f0 f1 * f2 f3 * f2 cSUC f3 c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> cleaf f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS * f2 cSUC f3 cNIL c==> c~ cnegligible * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> cbarV f4 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c~ cnegligible * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0
+ |- (((!u1. (!u2. (!u3. (((packing V) /\ ((saturated V) /\ ((~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))) ==> (((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))) = ((u0 INSERT (u1 INSERT EMPTY)) INSERT ((u0 INSERT (u2 INSERT EMPTY)) INSERT ((u0 INSERT (u3 INSERT EMPTY)) INSERT ((u1 INSERT (u2 INSERT EMPTY)) INSERT ((u1 INSERT (u3 INSERT EMPTY)) INSERT ((u2 INSERT (u3 INSERT EMPTY)) INSERT EMPTY))))))))))) ==> ((\u1. (!u2. (!u3. (((packing V) /\ ((saturated V) /\ ((~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))) ==> (((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))) = ((u0 INSERT (u1 INSERT EMPTY)) INSERT ((u0 INSERT (u2 INSERT EMPTY)) INSERT ((u0 INSERT (u3 INSERT EMPTY)) INSERT ((u1 INSERT (u2 INSERT EMPTY)) INSERT ((u1 INSERT (u3 INSERT EMPTY)) INSERT ((u2 INSERT (u3 INSERT EMPTY)) INSERT EMPTY))))))))))) u1)) = ((\u1. (!u2. (!u3. (((packing V) /\ ((saturated V) /\ ((~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))) ==> (((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))) = ((u0 INSERT (u1 INSERT EMPTY)) INSERT ((u0 INSERT (u2 INSERT EMPTY)) INSERT ((u0 INSERT (u3 INSERT EMPTY)) INSERT ((u1 INSERT (u2 INSERT EMPTY)) INSERT ((u1 INSERT (u3 INSERT EMPTY)) INSERT ((u2 INSERT (u3 INSERT EMPTY)) INSERT EMPTY))))))))))) u1))
T c= c==> ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS b0 cCONS b1 cCONS b2 cNIL cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS b0 cCONS b1 cCONS b2 cNIL c= * * part cedgeX f0 * * part cmcell4 f0 cCONS f1 cCONS b0 cCONS b1 cCONS b2 cNIL * * part cINSERT * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT * * part cINSERT f1 * * part cINSERT b1 part cEMPTY * * part cINSERT * * part cINSERT f1 * * part cINSERT b2 part cEMPTY * * part cINSERT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT * * part cINSERT b1 * * part cINSERT b2 part cEMPTY part cEMPTY * / ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS b0 cCONS b1 cCONS b2 cNIL cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS b0 cCONS b1 cCONS b2 cNIL c= * * part cedgeX f0 * * part cmcell4 f0 cCONS f1 cCONS b0 cCONS b1 cCONS b2 cNIL * * part cINSERT * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT * * part cINSERT f1 * * part cINSERT b1 part cEMPTY * * part cINSERT * * part cINSERT f1 * * part cINSERT b2 part cEMPTY * * part cINSERT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT * * part cINSERT b1 * * part cINSERT b2 part cEMPTY part cEMPTY f2 * / ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS b0 cCONS b1 cCONS b2 cNIL cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS b0 cCONS b1 cCONS b2 cNIL c= * * part cedgeX f0 * * part cmcell4 f0 cCONS f1 cCONS b0 cCONS b1 cCONS b2 cNIL * * part cINSERT * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT * * part cINSERT f1 * * part cINSERT b1 part cEMPTY * * part cINSERT * * part cINSERT f1 * * part cINSERT b2 part cEMPTY * * part cINSERT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT * * part cINSERT b1 * * part cINSERT b2 part cEMPTY part cEMPTY f2
- |- ((~ (_7302116 = _7302118)) \/ ((~ (_7302117 = _7302119)) \/ (((CONS _7302116) _7302117) = ((CONS _7302118) _7302119))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
- (_7302084 = _7302086), (_7302085 = _7302087) |- ((_7302085 = _7302087) /\ (((cc_ke _7302084) _7302085) = ((cc_ke _7302086) _7302087)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= ccc_ke f0 f2 ccc_ke f1 f3
- (_7302050 = _7302052) |- ((_7302051 = _7302053) ==> (((real_div _7302050) _7302051) = ((real_div _7302052) _7302053)))
T c==> c= f0 f1 c==> c= f2 f3 c= creal_div f0 f2 creal_div f1 f3
+ |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((_7302021 = _7302026) ==> ((~ (_7302022 = _7302027)) \/ ((~ (_7302020 = _7302025)) \/ ((~ (_7302023 = _7302028)) \/ ((~ (_7302024 = _7302029)) \/ ((((((cc_4 _7302025) _7302026) _7302027) _7302028) _7302029) \/ (~ (((((cc_4 _7302020) _7302021) _7302022) _7302023) _7302024))))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f5 f1 f3 f7 f9 c~ ccc_4 f4 f0 f2 f6 f8
+ |- (((((real_lt ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus) /\ ((real_lt x) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) \/ ((~ ((real_lt ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) /\ (~ ((real_lt x) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))))) = (((real_lt ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus) = ((real_lt x) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))))
T c= c\/ c/\ creal_lt creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ c~ creal_lt creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus c~ creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c= creal_lt creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus
+ |- (((!V. (!X. (!e. ((e IN ((critical_edgeX V) X)) = ((e IN ((edgeX V) X)) /\ (((real_le hminus) (radV e)) /\ ((real_le (radV e)) hplus))))))) ==> ((\V. (!X. (!e. ((e IN ((critical_edgeX V) X)) = ((e IN ((edgeX V) X)) /\ (((real_le hminus) (radV e)) /\ ((real_le (radV e)) hplus))))))) V)) = ((\V. (!X. (!e. ((e IN ((critical_edgeX V) X)) = ((e IN ((edgeX V) X)) /\ (((real_le hminus) (radV e)) /\ ((real_le (radV e)) hplus))))))) V))
T c= c==> ! ! ! c= cIN b2 * * part ccritical_edgeX b0 b1 c/\ cIN b2 * * part cedgeX b0 b1 c/\ creal_le chminus cradV b2 creal_le cradV b2 chplus * / ! ! c= cIN b2 * * part ccritical_edgeX b0 b1 c/\ cIN b2 * * part cedgeX b0 b1 c/\ creal_le chminus cradV b2 creal_le cradV b2 chplus f0 * / ! ! c= cIN b2 * * part ccritical_edgeX b0 b1 c/\ cIN b2 * * part cedgeX b0 b1 c/\ creal_le chminus cradV b2 creal_le cradV b2 chplus f0
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL))))))
T c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL
- |- ((_7301996 = _7301999) ==> ((~ (_7301998 = _7302001)) \/ ((~ (_7301997 = _7302000)) \/ ((((barV _7301999) _7302000) _7302001) \/ (~ (((barV _7301996) _7301997) _7301998))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ cbarV f1 f5 f3 c~ cbarV f0 f4 f2
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (((!x. (~ (x IN EMPTY))) ==> ((\x. (~ (x IN EMPTY))) x)) = ((\x. (~ (x IN EMPTY))) x))
T c= c==> ! c~ cIN b0 part cEMPTY * / c~ cIN b0 part cEMPTY f0 * / c~ cIN b0 part cEMPTY f0
+ |- ((!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))))))))))))))))))))) = T)
T c= ! c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 f3 f4 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f3 c==> ccc_4 f0 f1 f2 f4 f5 c==> ccritical_edge_y cdistance c, f1 f2 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f1 cCONS f2 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f4 f5 cNIL c==> c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f4 f5 cNIL * * * * part cwedge_ge f1 f2 * f4 f5 * f4 cSUC f5 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f4 f5 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f4 f5 part cEMPTY c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f4 f5 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f4 cSUC f5 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f4 f5 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL cT
- (_7302012 = _7302013) |- ((((coplanar _7302012) = (coplanar _7302013)) ==> ((coplanar _7302013) \/ (~ (coplanar _7302012)))) = ((coplanar _7302013) \/ (~ (coplanar _7302012))))
T c==> c= f0 f1 c= c==> c= ccoplanar f0 ccoplanar f1 c\/ ccoplanar f1 c~ ccoplanar f0 c\/ ccoplanar f1 c~ ccoplanar f0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))))))))))
T c==> ccc_4 f0 f1 f2 f3 f4 c==> ccritical_edge_y cdistance c, f1 f2 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cnegligible * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL cF
+ (!V. (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V))))) |- ((\V. (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V))))) V)
T c==> ! ! c==> c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 cIN * * part ccc_cell b0 b1 * part cmcell_set b0 * / ! c==> c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 cIN * * part ccc_cell b0 b1 * part cmcell_set b0 f0
+ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 cF
- (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) /\ F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cnegligible * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c/\ cnegligible * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL cF
+ |- ((P x) = (x IN P))
T c= * f0 f1 cIN f1 f0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F)))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge f0 f1 * f4 f5 * f4 cSUC f5 c==> c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 cSUC f5 cNIL c==> c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f4 f5 * f4 cSUC f5 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cnegligible * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL cF
+ |- (T = ((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) |- (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = T)
T c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_lt chl cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
+ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) |- ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f3 c==> ccc_4 f4 f0 f1 f5 f6 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f5 f6 * f5 cSUC f6 c==> creal_lt cdistance c, f0 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cSUBSET * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * * * part cwedge_ge f0 f1 * f5 f6 * f5 cSUC f6 c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cleaf f4 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS * f5 cSUC f6 cNIL c==> c~ cnegligible * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> cbarV f4 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c~ cnegligible * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c< cNUMERAL cBIT1 c_0 f4 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c==> ccc_4 f3 f0 f1 f5 f6 c/\ cpacking f3 c/\ csaturated f3 c/\ cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 ccc_4 f3 f0 f1 f5 f6
- |- ((_7302073 = _7302075) ==> ((~ (_7302072 = _7302074)) \/ (((hull _7302072) _7302073) = ((hull _7302074) _7302075))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> ((((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) (distance (u0 , u1))) /\ ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus))) /\ ((((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) (distance ((f i) , (f (SUC i))))) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus))) /\ (!f. (((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ (((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))) /\ ((real_lt (radV f)) hminus))))))))))
T c==> creal_lt cdistance c, f0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> ccritical_edge_y cdistance c, f0 f3 c==> ccritical_edge_y cdistance c, * f1 f2 * f1 cSUC f2 c/\ c/\ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cdistance c, f0 f3 creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus c/\ c/\ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cdistance c, * f1 f2 * f1 cSUC f2 creal_le cdistance c, * f1 f2 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus ! c==> c\/ c= b0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c\/ c= b0 * * part cINSERT f0 * * part cINSERT * f1 f2 part cEMPTY c\/ c= b0 * * part cINSERT f0 * * part cINSERT * f1 cSUC f2 part cEMPTY c\/ c= b0 * * part cINSERT f3 * * part cINSERT * f1 f2 part cEMPTY c\/ c= b0 * * part cINSERT f3 * * part cINSERT * f1 cSUC f2 part cEMPTY c= b0 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY c\/ c= b0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c\/ c= b0 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY c/\ c\/ c= b0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c\/ c= b0 * * part cINSERT f0 * * part cINSERT * f1 f2 part cEMPTY c\/ c= b0 * * part cINSERT f0 * * part cINSERT * f1 cSUC f2 part cEMPTY c\/ c= b0 * * part cINSERT f3 * * part cINSERT * f1 f2 part cEMPTY c\/ c= b0 * * part cINSERT f3 * * part cINSERT * f1 cSUC f2 part cEMPTY c= b0 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY creal_lt cradV b0 chminus
+ (((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) |- ((((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 cF
+ ((((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))))) |- (((((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))))) /\ F)
T c==> c\/ c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ c\/ c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
- (_7302040 = _7302045), (_7302036 = _7302041), (_7302039 = _7302044), (_7302037 = _7302042), (_7302038 = _7302043) |- ((_7302039 = _7302044) /\ ((((((leaf_rank _7302041) _7302042) _7302043) _7302044) _7302045) \/ (~ (((((leaf_rank _7302036) _7302037) _7302038) _7302039) _7302040))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c/\ c= f4 f5 c\/ cleaf_rank f3 f7 f9 f5 f1 c~ cleaf_rank f2 f6 f8 f4 f0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c~ cnegligible * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
+ ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- (((f' = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) ==> ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((real_lt (radV f')) hminus))))
T c==> creal_lt cdistance c, f0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c\/ c= f3 * * part cINSERT f0 * * part cINSERT * f1 f2 part cEMPTY c\/ c= f3 * * part cINSERT f0 * * part cINSERT * f1 cSUC f2 part cEMPTY c= f3 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY c\/ c= f3 * * part cINSERT f4 * * part cINSERT f0 part cEMPTY c\/ c= f3 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY creal_lt cradV f3 chminus
+ (f' = (u0 INSERT ((f i) INSERT EMPTY))), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((real_lt (radV f')) hminus)))
T c==> c= f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c==> creal_lt cdistance c, f1 * f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c\/ c= f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c\/ c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY creal_lt cradV f0 chminus
+ (!V. (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V))))) |- ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V))) = T)
T c==> ! ! c==> c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 cIN * * part ccc_cell b0 b1 * part cmcell_set b0 c= c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 cIN * * part ccc_cell f0 f1 * part cmcell_set f0 cT
+ (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) hminus))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0
+ |- (((!X. (!e. ((e IN ((subcritical_edgeX V) X)) = ((e IN ((edgeX V) X)) /\ ((real_lt (radV e)) hminus))))) ==> ((\X. (!e. ((e IN ((subcritical_edgeX V) X)) = ((e IN ((edgeX V) X)) /\ ((real_lt (radV e)) hminus))))) X)) = ((\X. (!e. ((e IN ((subcritical_edgeX V) X)) = ((e IN ((edgeX V) X)) /\ ((real_lt (radV e)) hminus))))) X))
T c= c==> ! ! c= cIN b1 * * part csubcritical_edgeX f0 b0 c/\ cIN b1 * * part cedgeX f0 b0 creal_lt cradV b1 chminus * / ! c= cIN b1 * * part csubcritical_edgeX f0 b0 c/\ cIN b1 * * part cedgeX f0 b0 creal_lt cradV b1 chminus f1 * / ! c= cIN b1 * * part csubcritical_edgeX f0 b0 c/\ cIN b1 * * part cedgeX f0 b0 creal_lt cradV b1 chminus f1
- (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- (_7302040 = _7302045), (_7302036 = _7302041), (_7302037 = _7302042), (_7302038 = _7302043) |- ((~ (_7302039 = _7302044)) \/ ((((((leaf_rank _7302041) _7302042) _7302043) _7302044) _7302045) \/ (~ (((((leaf_rank _7302036) _7302037) _7302038) _7302039) _7302040))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f5 f7 f9 f1 c~ cleaf_rank f2 f4 f6 f8 f0
- |- ((~ (_7302054 = _7302055)) \/ ((bump _7302054) = (bump _7302055)))
T c\/ c~ c= f0 f1 c= cbump f0 cbump f1
- (~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) |- (((~ (((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) ==> ((((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) = F)) = ((((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) = F))
T c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f2 f3 * f2 cSUC f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= c==> c~ c= creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f2 f3 * f2 cSUC f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c= creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f2 f3 * f2 cSUC f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF c= c= creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f2 f3 * f2 cSUC f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ ((((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))))) |- (((((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))))) /\ F)
T c==> c\/ c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ c\/ c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
- |- ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t)))
T c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
+ |- (((((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))) ==> F) = F)
T c= c==> c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 ccc_4 f0 f1 f2 f5 f6 c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt chl cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c/\ c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY c/\ cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * * * part cwedge_ge f1 f2 * f5 f6 * f5 cSUC f6 c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 part cEMPTY c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 cSUC f6 part cEMPTY c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 cSUC f6 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL cF cF
- (_7302054 = _7302055) |- ((_7302054 = _7302055) /\ ((bump _7302054) = (bump _7302055)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cbump f0 cbump f1
+ (f' = (u0 INSERT (u1 INSERT EMPTY))) |- ((f' = (u0 INSERT (u1 INSERT EMPTY))) /\ ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((real_lt (radV f')) hminus))))
T c==> c= f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c= f0 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY creal_lt cradV f0 chminus
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- ((\u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))))))))))) u1)
T * / ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS b0 cNIL b1 b2 b3 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b2 ccc_4 f0 f1 b0 b3 b4 c/\ c= ccc_ke f0 cCONS f1 cCONS b0 cCONS * b3 b4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt chl cCONS f1 cCONS b0 cCONS * b3 b4 cCONS * b3 cSUC b4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= * * part chull part cconvex * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT * b3 b4 * * part cINSERT * b3 cSUC b4 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS b0 cCONS * b3 b4 cNIL c/\ c~ ccoplanar * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT * b3 b4 * * part cINSERT * b3 cSUC b4 part cEMPTY c/\ cSUBSET * * part ccc_cell f0 cCONS f1 cCONS b0 cCONS * b3 b4 cNIL * * * * part cwedge_ge f1 b0 * b3 b4 * b3 cSUC b4 c/\ c= * * part ccc_cell f0 cCONS f1 cCONS b0 cCONS * b3 b4 cNIL * * part cmcell4 f0 cCONS f1 cCONS b0 cCONS * b3 b4 cCONS * b3 cSUC b4 cNIL c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT * b3 b4 part cEMPTY c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT * b3 cSUC b4 part cEMPTY c/\ cleaf f0 cCONS f1 cCONS b0 cCONS * b3 b4 cNIL c/\ cleaf f0 cCONS f1 cCONS b0 cCONS * b3 cSUC b4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS b0 cCONS * b3 b4 cNIL cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS b0 cCONS * b3 b4 cCONS * b3 cSUC b4 cNIL f2
- (_7302092 = _7302094), (_7302093 = _7302095) |- ((_7302093 = _7302095) /\ (((real_mul _7302092) _7302093) = ((real_mul _7302094) _7302095)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= creal_mul f0 f2 creal_mul f1 f3
- (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))))) ==> (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL))))))
T c==> cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL
+ |- (((real_mul ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_mul creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
+ (!V. (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V))))) |- (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V))))
T c==> ! ! c==> c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 cIN * * part ccc_cell b0 b1 * part cmcell_set b0 ! c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 b0 cIN * * part ccc_cell f0 b0 * part cmcell_set f0
- |- ((~ (_7302082 = _7302083)) \/ ((sqrt _7302082) = (sqrt _7302083)))
T c\/ c~ c= f0 f1 c= csqrt f0 csqrt f1
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((f' = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((real_lt (radV f')) hminus)))), ((f' = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))))), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((real_lt (radV f')) hminus)))
T c==> c==> c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT * f2 f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT * f2 cSUC f3 part cEMPTY c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c\/ c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY creal_lt cradV f0 chminus c==> c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT * f2 f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT * f2 cSUC f3 part cEMPTY c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> creal_lt cdistance c, f1 * f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c\/ c= f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c\/ c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY creal_lt cradV f0 chminus
+ ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))) |- (((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))) = T)
T c==> c\/ c= f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c\/ c= f0 * * part cINSERT f2 * * part cINSERT * f3 f4 part cEMPTY c\/ c= f0 * * part cINSERT f2 * * part cINSERT * f3 cSUC f4 part cEMPTY c= f0 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c= c\/ c= f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c\/ c= f0 * * part cINSERT f2 * * part cINSERT * f3 f4 part cEMPTY c\/ c= f0 * * part cINSERT f2 * * part cINSERT * f3 cSUC f4 part cEMPTY c= f0 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY cT
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((u0 INSERT (u1 INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ ((((f i) INSERT ((f (SUC i)) INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (!f. ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f IN ((subcritical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccritical_edgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ cIN * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccritical_edgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL ! c==> cIN b0 * * part cedgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY cIN b0 * * part csubcritical_edgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
- (_7302023 = _7302028), (_7302020 = _7302025), (_7302024 = _7302029), (_7302021 = _7302026), (_7302022 = _7302027) |- ((((((cc_4 _7302025) _7302026) _7302027) _7302028) _7302029) \/ (~ (((((cc_4 _7302020) _7302021) _7302022) _7302023) _7302024)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c\/ ccc_4 f3 f7 f9 f1 f5 c~ ccc_4 f2 f6 f8 f0 f4
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
- (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- (!f. (((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ (((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))) /\ ((real_lt (radV f)) hminus))))))
T c==> creal_lt cdistance c, f0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus ! c==> c\/ c= b0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c\/ c= b0 * * part cINSERT f0 * * part cINSERT * f1 f2 part cEMPTY c\/ c= b0 * * part cINSERT f0 * * part cINSERT * f1 cSUC f2 part cEMPTY c\/ c= b0 * * part cINSERT f3 * * part cINSERT * f1 f2 part cEMPTY c\/ c= b0 * * part cINSERT f3 * * part cINSERT * f1 cSUC f2 part cEMPTY c= b0 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY c\/ c= b0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c\/ c= b0 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY c/\ c\/ c= b0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c\/ c= b0 * * part cINSERT f0 * * part cINSERT * f1 f2 part cEMPTY c\/ c= b0 * * part cINSERT f0 * * part cINSERT * f1 cSUC f2 part cEMPTY c\/ c= b0 * * part cINSERT f3 * * part cINSERT * f1 f2 part cEMPTY c\/ c= b0 * * part cINSERT f3 * * part cINSERT * f1 cSUC f2 part cEMPTY c= b0 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY creal_lt cradV b0 chminus
+ |- ((((((u0 INSERT (u1 INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ ((((f i) INSERT ((f (SUC i)) INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (!f. ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f IN ((subcritical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))) ==> (((real_sub (bump (radV (u0 INSERT (u1 INSERT EMPTY))))) (bump (radV ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) /\ ((~ (((u0 INSERT (u1 INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ ((((f i) INSERT ((f (SUC i)) INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (!f. ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f IN ((subcritical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))) ==> ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) = ((((COND (((u0 INSERT (u1 INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ ((((f i) INSERT ((f (SUC i)) INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (!f. ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f IN ((subcritical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))) ((real_sub (bump (radV (u0 INSERT (u1 INSERT EMPTY))))) (bump (radV ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) (real_of_num (NUMERAL _0))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c= c/\ c==> c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ cIN * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL ! c==> cIN b0 * * part cedgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY cIN b0 * * part csubcritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c= creal_sub cbump cradV * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cbump cradV * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ cIN * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL ! c==> cIN b0 * * part cedgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY cIN b0 * * part csubcritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCOND c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ cIN * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL ! c==> cIN b0 * * part cedgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY cIN b0 * * part csubcritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL creal_sub cbump cradV * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cbump cradV * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- (((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))) /\ ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((real_lt (radV f')) hminus))))
T c==> c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> creal_lt cdistance c, f1 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY c\/ c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY creal_lt cradV f0 chminus
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ (((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((((VX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) DIFF (u0 INSERT (u1 INSERT EMPTY))) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) ==> ((((COND (((u0 INSERT (u1 INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (((((VX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) DIFF (u0 INSERT (u1 INSERT EMPTY))) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (!f. ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = (((VX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) DIFF (u0 INSERT (u1 INSERT EMPTY)))) \/ (f IN ((subcritical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))) ((real_sub (bump (radV (u0 INSERT (u1 INSERT EMPTY))))) (bump (radV (((VX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) DIFF (u0 INSERT (u1 INSERT EMPTY))))))) (real_of_num (NUMERAL _0))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c==> c= * * part cDIFF * * part cVX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c= cCOND c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccritical_edgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ cIN * * part cDIFF * * part cVX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccritical_edgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL ! c==> cIN b0 * * part cedgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cDIFF * * part cVX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part csubcritical_edgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL creal_sub cbump cradV * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cbump cradV * * part cDIFF * * part cVX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f3 c==> ccc_4 f4 f0 f1 f5 f6 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f5 f6 * f5 cSUC f6 c==> creal_lt cdistance c, f0 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cSUBSET * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * * * part cwedge_ge f0 f1 * f5 f6 * f5 cSUC f6 c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cleaf f4 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS * f5 cSUC f6 cNIL c==> c~ cnegligible * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> cbarV f4 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c~ cnegligible * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL
+ (saturated V) |- ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))))))))))))))
T c==> csaturated f0 c/\ csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> ccritical_edge_y cdistance c, f1 f2 c==> ccritical_edge_y cdistance c, * f5 f6 * f5 cSUC f6 c==> creal_lt cdistance c, f1 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * * * part cwedge_ge f1 f2 * f5 f6 * f5 cSUC f6 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 part cEMPTY c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f5 cSUC f6 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL
+ |- (((!X. (!r. (!e. (((saturated V) /\ ((packing V) /\ (((mcell_set V) X) /\ ((\e. (((VX V) X) DIFF e)) = r)))) ==> ((((beta_bump_v1 V) e) X) = (((COND ((~ (negligible X)) /\ ((e IN ((critical_edgeX V) X)) /\ (((r e) IN ((critical_edgeX V) X)) /\ (!f. ((f IN ((edgeX V) X)) ==> ((f = e) \/ ((f = (r e)) \/ (f IN ((subcritical_edgeX V) X)))))))))) ((real_sub (bump (radV e))) (bump (radV (r e))))) (real_of_num (NUMERAL _0)))))))) ==> ((\X. (!r. (!e. (((saturated V) /\ ((packing V) /\ (((mcell_set V) X) /\ ((\e. (((VX V) X) DIFF e)) = r)))) ==> ((((beta_bump_v1 V) e) X) = (((COND ((~ (negligible X)) /\ ((e IN ((critical_edgeX V) X)) /\ (((r e) IN ((critical_edgeX V) X)) /\ (!f. ((f IN ((edgeX V) X)) ==> ((f = e) \/ ((f = (r e)) \/ (f IN ((subcritical_edgeX V) X)))))))))) ((real_sub (bump (radV e))) (bump (radV (r e))))) (real_of_num (NUMERAL _0)))))))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) = ((\X. (!r. (!e. (((saturated V) /\ ((packing V) /\ (((mcell_set V) X) /\ ((\e. (((VX V) X) DIFF e)) = r)))) ==> ((((beta_bump_v1 V) e) X) = (((COND ((~ (negligible X)) /\ ((e IN ((critical_edgeX V) X)) /\ (((r e) IN ((critical_edgeX V) X)) /\ (!f. ((f IN ((edgeX V) X)) ==> ((f = e) \/ ((f = (r e)) \/ (f IN ((subcritical_edgeX V) X)))))))))) ((real_sub (bump (radV e))) (bump (radV (r e))))) (real_of_num (NUMERAL _0)))))))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))
T c= c==> ! ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cmcell_set f0 b0 c= / * * part cDIFF * * part cVX f0 b0 b3 b1 c= cbeta_bump_v1 f0 b2 b0 cCOND c/\ c~ cnegligible b0 c/\ cIN b2 * * part ccritical_edgeX f0 b0 c/\ cIN * b1 b2 * * part ccritical_edgeX f0 b0 ! c==> cIN b3 * * part cedgeX f0 b0 c\/ c= b3 b2 c\/ c= b3 * b1 b2 cIN b3 * * part csubcritical_edgeX f0 b0 creal_sub cbump cradV b2 cbump cradV * b1 b2 creal_of_num cNUMERAL c_0 * / ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cmcell_set f0 b0 c= / * * part cDIFF * * part cVX f0 b0 b3 b1 c= cbeta_bump_v1 f0 b2 b0 cCOND c/\ c~ cnegligible b0 c/\ cIN b2 * * part ccritical_edgeX f0 b0 c/\ cIN * b1 b2 * * part ccritical_edgeX f0 b0 ! c==> cIN b3 * * part cedgeX f0 b0 c\/ c= b3 b2 c\/ c= b3 * b1 b2 cIN b3 * * part csubcritical_edgeX f0 b0 creal_sub cbump cradV b2 cbump cradV * b1 b2 creal_of_num cNUMERAL c_0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * / ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cmcell_set f0 b0 c= / * * part cDIFF * * part cVX f0 b0 b3 b1 c= cbeta_bump_v1 f0 b2 b0 cCOND c/\ c~ cnegligible b0 c/\ cIN b2 * * part ccritical_edgeX f0 b0 c/\ cIN * b1 b2 * * part ccritical_edgeX f0 b0 ! c==> cIN b3 * * part cedgeX f0 b0 c\/ c= b3 b2 c\/ c= b3 * b1 b2 cIN b3 * * part csubcritical_edgeX f0 b0 creal_sub cbump cradV b2 cbump cradV * b1 b2 creal_of_num cNUMERAL c_0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
- ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) |- ((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) (SUC i))) NIL))))
T c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS cI f3 cSUC f4 cNIL
+ |- ((~ (~ (~ (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x) = ((real_div x) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> F)
T c==> c~ c~ c~ c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_div f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cF
+ |- (((real_mul ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_mul creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) |- ((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL))))
T c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL
+ (((((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))))) \/ ((((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))))) |- F
T c==> c\/ c\/ c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c\/ c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL))))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL))))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL)))))))
T c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cCONS cI f3 cSUC f4 cNIL c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cCONS cI f3 cSUC f4 cNIL c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cCONS cI f3 cSUC f4 cNIL
+ (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((((u0 INSERT (u1 INSERT EMPTY)) IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) (distance (u0 , u1))) /\ ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus)))) /\ (((((f i) INSERT ((f (SUC i)) INSERT EMPTY)) IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) (distance ((f i) , (f (SUC i))))) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus)))) /\ (!f. ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ ((real_lt (radV f)) hminus)))))))) = ((((u0 INSERT (u1 INSERT EMPTY)) IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (((real_le hminus) (radV (u0 INSERT (u1 INSERT EMPTY)))) /\ ((real_le (radV (u0 INSERT (u1 INSERT EMPTY)))) hplus))) /\ (((((f i) INSERT ((f (SUC i)) INSERT EMPTY)) IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (((real_le hminus) (radV ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))) /\ ((real_le (radV ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))) hplus))) /\ (!f. ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ ((real_lt (radV f)) hminus)))))))))
T c= c/\ c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cedgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cdistance c, f0 f1 creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus c/\ c/\ cIN * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part cedgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cdistance c, * f3 f4 * f3 cSUC f4 creal_le cdistance c, * f3 f4 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus ! c==> cIN b0 * * part cedgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c/\ cIN b0 * * part cedgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL creal_lt cradV b0 chminus c/\ c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cedgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ creal_le chminus cradV * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_le cradV * * part cINSERT f0 * * part cINSERT f1 part cEMPTY chplus c/\ c/\ cIN * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part cedgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ creal_le chminus cradV * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY creal_le cradV * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY chplus ! c==> cIN b0 * * part cedgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c/\ cIN b0 * * part cedgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL creal_lt cradV b0 chminus
+ (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 cF
+ ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- (((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))) ==> ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((real_lt (radV f')) hminus))))
T c==> creal_lt cdistance c, f0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c\/ c= f3 * * part cINSERT f0 * * part cINSERT * f1 cSUC f2 part cEMPTY c= f3 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY c\/ c= f3 * * part cINSERT f4 * * part cINSERT f0 part cEMPTY c\/ c= f3 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY creal_lt cradV f3 chminus
- (((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- ((~ (_7302038 = _7302043)) \/ ((~ (_7302036 = _7302041)) \/ ((~ (_7302040 = _7302045)) \/ ((~ (_7302037 = _7302042)) \/ ((~ (_7302039 = _7302044)) \/ ((((((leaf_rank _7302041) _7302042) _7302043) _7302044) _7302045) \/ (~ (((((leaf_rank _7302036) _7302037) _7302038) _7302039) _7302040))))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f1 f9 f5 c~ cleaf_rank f2 f6 f0 f8 f4
+ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))
T c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ c= cbeta_bump_v1 f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c/\ cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c/\ cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c/\ c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (~ ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c~ c= cbeta_bump_v1 f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 cF
+ (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))))))))
T c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
+ |- ((((~ (~ (((~ ((real_le y) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x))) \/ (~ ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) x))) /\ (((real_le y) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) \/ ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) x))))) ==> F) ==> (~ (((~ ((real_le y) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x))) \/ (~ ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) x))) /\ (((real_le y) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) \/ ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) x))))) = (~ (((~ ((real_le y) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x))) \/ (~ ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) x))) /\ (((real_le y) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) \/ ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) x)))))
T c= c==> c==> c~ c~ c/\ c\/ c~ creal_le f0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 c~ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c\/ creal_le f0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 cF c~ c/\ c\/ c~ creal_le f0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 c~ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c\/ creal_le f0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c~ c/\ c\/ c~ creal_le f0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 c~ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c\/ creal_le f0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1
+ ((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) ==> F), ((((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_7302056 = _7302058) |- ((_7302056 = _7302058) /\ ((~ (_7302057 = _7302059)) \/ (((real_sub _7302056) _7302057) = ((real_sub _7302058) _7302059))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= creal_sub f0 f2 creal_sub f1 f3
+ |- (((((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) (distance (u0 , u1))) /\ ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus))) ==> ((((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) (distance ((f i) , (f (SUC i))))) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus))) ==> ((((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) (distance (u0 , u1))) /\ ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus))) /\ ((((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) (distance ((f i) , (f (SUC i))))) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus))) /\ (!f. (((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ (((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))) /\ ((real_lt (radV f)) hminus)))))))))) = ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> ((((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) (distance (u0 , u1))) /\ ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus))) /\ ((((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) (distance ((f i) , (f (SUC i))))) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus))) /\ (!f. (((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ (((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))) /\ ((real_lt (radV f)) hminus)))))))))))
T c= c==> c/\ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cdistance c, f0 f1 creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus c==> c/\ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cdistance c, * f2 f3 * f2 cSUC f3 creal_le cdistance c, * f2 f3 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus c/\ c/\ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cdistance c, f0 f1 creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus c/\ c/\ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cdistance c, * f2 f3 * f2 cSUC f3 creal_le cdistance c, * f2 f3 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus ! c==> c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cINSERT f0 * * part cINSERT * f2 f3 part cEMPTY c\/ c= b0 * * part cINSERT f0 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= b0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c\/ c= b0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c= b0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c/\ c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cINSERT f0 * * part cINSERT * f2 f3 part cEMPTY c\/ c= b0 * * part cINSERT f0 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= b0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c\/ c= b0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c= b0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY creal_lt cradV b0 chminus c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f2 f3 * f2 cSUC f3 c/\ c/\ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cdistance c, f0 f1 creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus c/\ c/\ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cdistance c, * f2 f3 * f2 cSUC f3 creal_le cdistance c, * f2 f3 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus ! c==> c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cINSERT f0 * * part cINSERT * f2 f3 part cEMPTY c\/ c= b0 * * part cINSERT f0 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= b0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c\/ c= b0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c= b0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c/\ c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cINSERT f0 * * part cINSERT * f2 f3 part cEMPTY c\/ c= b0 * * part cINSERT f0 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= b0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c\/ c= b0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c= b0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY creal_lt cradV b0 chminus
- (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) |- (~ (collinear (u0 INSERT (u1 INSERT (((I f) i) INSERT EMPTY)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT cI f2 f3 part cEMPTY
- (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))))), (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))))) /\ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL))))))
T c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL c==> cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))) |- (((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) y))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) y))) ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) y)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) y))) ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) y)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((~ (((u0 INSERT (u1 INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ ((((f i) INSERT ((f (SUC i)) INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (!f. ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f IN ((subcritical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))) ==> ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c==> c~ c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccritical_edgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ cIN * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccritical_edgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL ! c==> cIN b0 * * part cedgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY cIN b0 * * part csubcritical_edgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (((~ (x IN EMPTY)) ==> ((x IN EMPTY) = F)) = ((x IN EMPTY) = F))
T c= c==> c~ cIN f0 part cEMPTY c= cIN f0 part cEMPTY cF c= cIN f0 part cEMPTY cF
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (_7302040 = _7302045), (_7302036 = _7302041), (_7302038 = _7302043) |- ((_7302040 = _7302045) /\ ((~ (_7302037 = _7302042)) \/ ((~ (_7302039 = _7302044)) \/ ((((((leaf_rank _7302041) _7302042) _7302043) _7302044) _7302045) \/ (~ (((((leaf_rank _7302036) _7302037) _7302038) _7302039) _7302040))))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f0 f1 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f5 f9 f1 c~ cleaf_rank f2 f6 f4 f8 f0
+ |- ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) ==> ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((real_lt (radV f')) hminus))))
T c==> c= f0 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY c\/ c= f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ c= f0 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY creal_lt cradV f0 chminus
- (_7302117 = _7302119), (_7302116 = _7302118) |- ((_7302117 = _7302119) /\ (((CONS _7302116) _7302117) = ((CONS _7302118) _7302119)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= cCONS f2 f0 cCONS f3 f1
- (_7302008 = _7302010), (_7302009 = _7302011) |- ((((_7302008 SUBSET _7302009) = (_7302010 SUBSET _7302011)) ==> ((_7302010 SUBSET _7302011) \/ (~ (_7302008 SUBSET _7302009)))) = ((_7302010 SUBSET _7302011) \/ (~ (_7302008 SUBSET _7302009))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cSUBSET f0 f2 cSUBSET f1 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
- (_7302064 = _7302068), (_7302065 = _7302069), (_7302066 = _7302070) |- ((_7302066 = _7302070) /\ ((~ (_7302067 = _7302071)) \/ (((((wedge_ge _7302064) _7302065) _7302066) _7302067) = ((((wedge_ge _7302068) _7302069) _7302070) _7302071))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f4 f5 c\/ c~ c= f6 f7 c= * * * * part cwedge_ge f0 f2 f4 f6 * * * * part cwedge_ge f1 f3 f5 f7
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ c= cbeta_bump_v1 f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c/\ c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c/\ cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c/\ cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c/\ c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 cF
+ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((real_lt (radV f')) hminus)))
T c==> c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> creal_lt cdistance c, f1 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c\/ c= f0 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY c\/ c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY creal_lt cradV f0 chminus
- |- ((~ (_7302046 = _7302047)) \/ ((saturated _7302047) \/ (~ (saturated _7302046))))
T c\/ c~ c= f0 f1 c\/ csaturated f1 c~ csaturated f0
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) y))) ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) y)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((_7302030 = _7302032) ==> ((~ (_7302031 = _7302033)) \/ ((_7302032 < _7302033) \/ (~ (_7302030 < _7302031)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c< f1 f3 c~ c< f0 f2
+ |- (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))))
T c==> creal_lt cdistance c, f0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f3 cCONS f4 cCONS f0 cCONS * f1 f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f4 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY * * part ccc_cell f3 cCONS f4 cCONS f0 cCONS * f1 f2 cNIL c==> c~ ccoplanar * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY c==> cSUBSET * * part ccc_cell f3 cCONS f4 cCONS f0 cCONS * f1 f2 cNIL * * * * part cwedge_ge f4 f0 * f1 f2 * f1 cSUC f2 c==> c= * * part ccc_cell f3 cCONS f4 cCONS f0 cCONS * f1 f2 cNIL * * part cmcell4 f3 cCONS f4 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT * f1 f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT * f1 cSUC f2 part cEMPTY c==> cleaf f3 cCONS f4 cCONS f0 cCONS * f1 f2 cNIL c==> cleaf f3 cCONS f4 cCONS f0 cCONS * f1 cSUC f2 cNIL c==> c~ cnegligible * * part ccc_cell f3 cCONS f4 cCONS f0 cCONS * f1 f2 cNIL c==> cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS f4 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c~ cnegligible * * part cmcell4 f3 cCONS f4 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL
+ |- ((\x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) x)
T * / ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 f0
- (_7301996 = _7301999), (_7301998 = _7302001) |- ((_7301997 = _7302000) ==> ((((barV _7301999) _7302000) _7302001) \/ (~ (((barV _7301996) _7301997) _7301998))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ cbarV f1 f5 f3 c~ cbarV f0 f4 f2
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((EL (NUMERAL _0)) ((CONS h) t)) = h)
T c= cEL cNUMERAL c_0 cCONS f0 f1 f0
+ (((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- ((_7302012 = _7302013) ==> ((coplanar _7302013) \/ (~ (coplanar _7302012))))
T c==> c= f0 f1 c\/ ccoplanar f1 c~ ccoplanar f0
+ |- ((!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))))))))))))))))) = T)
T c= ! ! c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL b1 b0 f3 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b0 c==> ccc_4 f0 f1 f2 f3 f4 c==> ccritical_edge_y cdistance c, f1 f2 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL cT
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c= cbeta_bump_v1 f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (~ (((u0 INSERT (u1 INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ ((((f i) INSERT ((f (SUC i)) INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (!f. ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f IN ((subcritical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> F) ==> ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) = ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c~ c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccritical_edgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ cIN * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccritical_edgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL ! c==> cIN b0 * * part cedgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY cIN b0 * * part csubcritical_edgeX f5 * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c= c==> c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cF c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) (distance ((f i) , (f (SUC i))))) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus))) |- (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) (distance ((f i) , (f (SUC i))))) = T)
T c==> c/\ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cdistance c, * f0 f1 * f0 cSUC f1 creal_le cdistance c, * f0 f1 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus c= creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cdistance c, * f0 f1 * f0 cSUC f1 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (f' = (u0 INSERT ((f (SUC i)) INSERT EMPTY))), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- ((f' = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) /\ ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((real_lt (radV f')) hminus))))
T c==> c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> creal_lt cdistance c, f1 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c\/ c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY creal_lt cradV f0 chminus
- |- ((~ (_7302021 = _7302026)) \/ ((~ (_7302022 = _7302027)) \/ ((~ (_7302020 = _7302025)) \/ ((~ (_7302023 = _7302028)) \/ ((~ (_7302024 = _7302029)) \/ ((((((cc_4 _7302025) _7302026) _7302027) _7302028) _7302029) \/ (~ (((((cc_4 _7302020) _7302021) _7302022) _7302023) _7302024))))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f5 f1 f3 f7 f9 c~ ccc_4 f4 f0 f2 f6 f8
+ (((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c==> c= * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> cleaf f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> cleaf f4 cCONS f0 cCONS f1 cCONS * f2 cSUC f3 cNIL c==> c~ cnegligible * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> cbarV f4 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f2 f3 * f2 cSUC f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cnegligible * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL
- |- ((~ (_7302092 = _7302094)) \/ ((~ (_7302093 = _7302095)) \/ (((real_mul _7302092) _7302093) = ((real_mul _7302094) _7302095))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= creal_mul f0 f2 creal_mul f1 f3
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ c= cbeta_bump_v1 f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c/\ cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c/\ c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 cF
- |- ((_7302008 = _7302010) ==> ((~ (_7302009 = _7302011)) \/ ((_7302010 SUBSET _7302011) \/ (~ (_7302008 SUBSET _7302009)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
+ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))
T c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
- (_7302110 = _7302111) |- ((_7302110 = _7302111) /\ ((NUMERAL _7302110) = (NUMERAL _7302111)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ (((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- ((((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge f0 f1 * f4 f5 * f4 cSUC f5 c==> c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 cSUC f5 cNIL c==> c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> cnegligible * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL cF
- (_7302092 = _7302094) |- ((_7302093 = _7302095) ==> (((real_mul _7302092) _7302093) = ((real_mul _7302094) _7302095)))
T c==> c= f0 f1 c==> c= f2 f3 c= creal_mul f0 f2 creal_mul f1 f3
+ |- ((!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))))))))))))))))))) = T)
T c= ! ! ! c==> cpacking b0 c==> csaturated b0 c==> cleaf_rank b0 cCONS f0 cCONS f1 cNIL b2 b1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b1 c==> ccc_4 b0 f0 f1 f2 f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f2 f3 * f2 cSUC f3 c==> creal_lt cdistance c, f0 * f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke b0 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> cSUBSET * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL * * * * part cwedge_ge f0 f1 * f2 f3 * f2 cSUC f3 c==> c= * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL * * part cmcell4 b0 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> cleaf b0 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> cleaf b0 cCONS f0 cCONS f1 cCONS * f2 cSUC f3 cNIL c==> c~ cnegligible * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f2 f3 * f2 cSUC f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cnegligible * * part cmcell4 b0 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL cT
+ (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) |- (((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ (_7301996 = _7301999)) \/ ((~ (_7301998 = _7302001)) \/ ((~ (_7301997 = _7302000)) \/ ((((barV _7301999) _7302000) _7302001) \/ (~ (((barV _7301996) _7301997) _7301998))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ cbarV f1 f5 f3 c~ cbarV f0 f4 f2
+ |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((((((cc_4 V) u0) u1) f) i) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((critical_edge_y (distance ((f i) , (f (SUC i))))) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)))))))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ ccc_4 f3 f0 f1 f5 f6 c/\ ccritical_edge_y cdistance c, f0 f1 c/\ ccritical_edge_y cdistance c, * f5 f6 * f5 cSUC f6 c/\ creal_lt cdistance c, f0 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f0 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f1 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f1 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c= cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f5 f6 * f5 cSUC f6 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- (_7302014 = _7302016), (_7302015 = _7302017) |- ((_7302015 = _7302017) /\ (((real_lt _7302016) _7302017) \/ (~ ((real_lt _7302014) _7302015))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ creal_lt f1 f3 c~ creal_lt f0 f2
- (((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))), (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cnegligible * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 cF
- (_7302108 = _7302109) |- ((_7302108 = _7302109) /\ ((BIT1 _7302108) = (BIT1 _7302109)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT1 f0 cBIT1 f1
- (_7301996 = _7301999), (_7301998 = _7302001) |- ((_7301998 = _7302001) /\ ((~ (_7301997 = _7302000)) \/ ((((barV _7301999) _7302000) _7302001) \/ (~ (((barV _7301996) _7301997) _7301998)))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ c~ c= f4 f5 c\/ cbarV f1 f5 f3 c~ cbarV f0 f4 f2
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F)))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge f0 f1 * f4 f5 * f4 cSUC f5 c==> c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 f5 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f4 cSUC f5 part cEMPTY c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 cSUC f5 cNIL c==> c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f4 f5 * f4 cSUC f5 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cnegligible * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\u1. (!u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F)))))))))))))))))))))))))))))) u1)
T * / ! ! ! ! c==> cpacking b2 c==> csaturated b2 c==> cleaf_rank b2 cCONS b1 cCONS b0 cNIL b4 b3 f0 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b3 c==> ccc_4 b2 b1 b0 f0 f1 c==> ccritical_edge_y cdistance c, b1 b0 c==> ccritical_edge_y cdistance c, * f0 f1 * f0 cSUC f1 c==> creal_lt cdistance c, b1 * f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, b1 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, b0 * f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, b0 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS b1 cCONS b0 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY * * part ccc_cell b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL c==> c~ ccoplanar * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c==> cSUBSET * * part ccc_cell b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL * * * * part cwedge_ge b1 b0 * f0 f1 * f0 cSUC f1 c==> c= * * part ccc_cell b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL * * part cmcell4 b2 cCONS b1 cCONS b0 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT * f0 f1 part cEMPTY c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT * f0 cSUC f1 part cEMPTY c==> cleaf b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL c==> cleaf b2 cCONS b1 cCONS b0 cCONS * f0 cSUC f1 cNIL c==> c~ cnegligible * * part ccc_cell b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL c==> cbarV b2 cNUMERAL cBIT1 cBIT1 c_0 cCONS b1 cCONS b0 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL c==> cnegligible * * part cmcell4 b2 cCONS b1 cCONS b0 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL cF f2
- (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- (_7302092 = _7302094) |- ((_7302092 = _7302094) /\ ((~ (_7302093 = _7302095)) \/ (((real_mul _7302092) _7302093) = ((real_mul _7302094) _7302095))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= creal_mul f0 f2 creal_mul f1 f3
- |- ((~ (_7302110 = _7302111)) \/ ((NUMERAL _7302110) = (NUMERAL _7302111)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- (_7302023 = _7302028), (_7302020 = _7302025), (_7302024 = _7302029), (_7302021 = _7302026), (_7302022 = _7302027) |- ((((((((cc_4 _7302020) _7302021) _7302022) _7302023) _7302024) = (((((cc_4 _7302025) _7302026) _7302027) _7302028) _7302029)) ==> ((((((cc_4 _7302025) _7302026) _7302027) _7302028) _7302029) \/ (~ (((((cc_4 _7302020) _7302021) _7302022) _7302023) _7302024)))) = ((((((cc_4 _7302025) _7302026) _7302027) _7302028) _7302029) \/ (~ (((((cc_4 _7302020) _7302021) _7302022) _7302023) _7302024))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c= c==> c= ccc_4 f2 f6 f8 f0 f4 ccc_4 f3 f7 f9 f1 f5 c\/ ccc_4 f3 f7 f9 f1 f5 c~ ccc_4 f2 f6 f8 f0 f4 c\/ ccc_4 f3 f7 f9 f1 f5 c~ ccc_4 f2 f6 f8 f0 f4
- (_7302046 = _7302047) |- ((_7302046 = _7302047) /\ ((saturated _7302047) \/ (~ (saturated _7302046))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ csaturated f1 c~ csaturated f0
+ |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((_7302112 = _7302114) ==> ((~ (_7302113 = _7302115)) \/ ((_7302112 INSERT _7302113) = (_7302114 INSERT _7302115))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- (_7302113 = _7302115), (_7302112 = _7302114) |- ((_7302113 = _7302115) /\ ((_7302112 INSERT _7302113) = (_7302114 INSERT _7302115)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cINSERT f2 f0 * * part cINSERT f3 f1
- |- (((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0
- |- ((_7302098 = _7302100) ==> ((~ (_7302099 = _7302101)) \/ (((I _7302098) _7302099) = ((I _7302100) _7302101))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cI f0 f2 cI f1 f3
+ ((x IN P) = (P x)) |- ((P x) = (x IN P))
T c==> c= cIN f0 f1 * f1 f0 c= * f1 f0 cIN f0 f1
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ (((((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))))) ==> F), (((((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))))) \/ ((((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))))) |- F
T c==> c==> c\/ c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF c==> c\/ c\/ c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c\/ c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
- (_7302014 = _7302016) |- ((_7302014 = _7302016) /\ ((~ (_7302015 = _7302017)) \/ (((real_lt _7302016) _7302017) \/ (~ ((real_lt _7302014) _7302015)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ creal_lt f1 f3 c~ creal_lt f0 f2
+ (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0
+ |- ((\i. (!f. (!u1. (!u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F))))))))))))))))))))))))))))))))) i)
T * / ! ! ! ! ! ! c==> cpacking b4 c==> csaturated b4 c==> cleaf_rank b4 cCONS b3 cCONS b2 cNIL b6 b5 b1 c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b5 c==> ccc_4 b4 b3 b2 b1 b0 c==> ccritical_edge_y cdistance c, b3 b2 c==> ccritical_edge_y cdistance c, * b1 b0 * b1 cSUC b0 c==> creal_lt cdistance c, b3 * b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, b3 * b1 cSUC b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, b2 * b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, b2 * b1 cSUC b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS b3 cCONS b2 cCONS * b1 b0 cCONS * b1 cSUC b0 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT * b1 b0 * * part cINSERT * b1 cSUC b0 part cEMPTY * * part ccc_cell b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL c==> c~ ccoplanar * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT * b1 b0 * * part cINSERT * b1 cSUC b0 part cEMPTY c==> cSUBSET * * part ccc_cell b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL * * * * part cwedge_ge b3 b2 * b1 b0 * b1 cSUC b0 c==> c= * * part ccc_cell b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL * * part cmcell4 b4 cCONS b3 cCONS b2 cCONS * b1 b0 cCONS * b1 cSUC b0 cNIL c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT * b1 b0 part cEMPTY c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT * b1 cSUC b0 part cEMPTY c==> cleaf b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL c==> cleaf b4 cCONS b3 cCONS b2 cCONS * b1 cSUC b0 cNIL c==> c~ cnegligible * * part ccc_cell b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL c==> cbarV b4 cNUMERAL cBIT1 cBIT1 c_0 cCONS b3 cCONS b2 cCONS * b1 b0 cCONS * b1 cSUC b0 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, b3 b2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * b1 b0 * b1 cSUC b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cnegligible * * part cmcell4 b4 cCONS b3 cCONS b2 cCONS * b1 b0 cCONS * b1 cSUC b0 cNIL cF f0
+ |- ((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
+ |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
+ |- ((\V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))))))))))))) V)
T * / ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b4 ccc_4 b0 b1 b2 b5 b6 c/\ c= ccc_ke b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt chl cCONS b1 cCONS b2 cCONS * b5 b6 cCONS * b5 cSUC b6 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= * * part chull part cconvex * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT * b5 b6 * * part cINSERT * b5 cSUC b6 part cEMPTY * * part ccc_cell b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c/\ c~ ccoplanar * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT * b5 b6 * * part cINSERT * b5 cSUC b6 part cEMPTY c/\ cSUBSET * * part ccc_cell b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL * * * * part cwedge_ge b1 b2 * b5 b6 * b5 cSUC b6 c/\ c= * * part ccc_cell b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL * * part cmcell4 b0 cCONS b1 cCONS b2 cCONS * b5 b6 cCONS * b5 cSUC b6 cNIL c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT * b5 b6 part cEMPTY c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT * b5 cSUC b6 part cEMPTY c/\ cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c/\ cleaf b0 cCONS b1 cCONS b2 cCONS * b5 cSUC b6 cNIL c/\ c~ cnegligible * * part ccc_cell b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 cCONS b1 cCONS b2 cCONS * b5 b6 cCONS * b5 cSUC b6 cNIL f0
- (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) |- ((collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY cF
+ |- ((\y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) y)
T * / ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 f1
+ (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = ((u0 INSERT (u1 INSERT EMPTY)) INSERT ((u0 INSERT ((f i) INSERT EMPTY)) INSERT ((u0 INSERT ((f (SUC i)) INSERT EMPTY)) INSERT ((u1 INSERT ((f i) INSERT EMPTY)) INSERT ((u1 INSERT ((f (SUC i)) INSERT EMPTY)) INSERT (((f i) INSERT ((f (SUC i)) INSERT EMPTY)) INSERT EMPTY))))))), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- ((((u0 INSERT (u1 INSERT EMPTY)) IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) (distance (u0 , u1))) /\ ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus)))) /\ (((((f i) INSERT ((f (SUC i)) INSERT EMPTY)) IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) (distance ((f i) , (f (SUC i))))) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus)))) /\ (!f. ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ ((real_lt (radV f)) hminus))))))))
T c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f2 f3 * f2 cSUC f3 c==> c= * * part cedgeX f4 * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL * * part cINSERT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT * * part cINSERT f0 * * part cINSERT * f2 f3 part cEMPTY * * part cINSERT * * part cINSERT f0 * * part cINSERT * f2 cSUC f3 part cEMPTY * * part cINSERT * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY * * part cINSERT * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY * * part cINSERT * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY part cEMPTY c==> creal_lt cdistance c, f0 * f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cedgeX f4 * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c/\ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cdistance c, f0 f1 creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus c/\ c/\ cIN * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY * * part cedgeX f4 * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c/\ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cdistance c, * f2 f3 * f2 cSUC f3 creal_le cdistance c, * f2 f3 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus ! c==> cIN b0 * * part cedgeX f4 * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c/\ cIN b0 * * part cedgeX f4 * * part cmcell4 f4 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL creal_lt cradV b0 chminus
- |- ((~ (_7302004 = _7302006)) \/ ((~ (_7302005 = _7302007)) \/ (((leaf _7302006) _7302007) \/ (~ ((leaf _7302004) _7302005)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cleaf f1 f3 c~ cleaf f0 f2
+ |- ((f' = (u0 INSERT (u1 INSERT EMPTY))) ==> ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((real_lt (radV f')) hminus))))
T c==> c= f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c= f0 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY creal_lt cradV f0 chminus
- |- ((~ (_7302096 = _7302097)) \/ ((SUC _7302096) = (SUC _7302097)))
T c\/ c~ c= f0 f1 c= cSUC f0 cSUC f1
- (_7302116 = _7302118) |- ((_7302117 = _7302119) ==> (((CONS _7302116) _7302117) = ((CONS _7302118) _7302119)))
T c==> c= f0 f1 c==> c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
+ |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f4 f5 * f4 cSUC f5 c==> c/\ creal_lt cdistance c, f0 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f1 * f4 cSUC f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c= cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f4 f5 * f4 cSUC f5 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cnegligible * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL cF
+ |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) IN (mcell_set V)) = ((mcell_set V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))
T c= cIN * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * part cmcell_set f0 cmcell_set f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
- (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cnegligible * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL cF
+ |- ((~ (~ (((~ ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) \/ (~ ((real_le x) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)))) /\ (((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y) \/ ((real_le x) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)))))) ==> F)
T c==> c~ c~ c/\ c\/ c~ creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c~ creal_le f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 c\/ creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_le f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 cF
- |- ((~ (_7302084 = _7302086)) \/ ((~ (_7302085 = _7302087)) \/ (((cc_ke _7302084) _7302085) = ((cc_ke _7302086) _7302087))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= ccc_ke f0 f2 ccc_ke f1 f3
+ |- ((!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((((((cc_4 V) u0) u1) f) i) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((critical_edge_y (distance ((f i) , (f (SUC i))))) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))))))))))))) ==> ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))))) = T)
T c= ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 b2 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b1 c/\ ccc_4 f0 f1 f2 b2 b3 c/\ ccritical_edge_y cdistance c, f1 f2 c/\ ccritical_edge_y cdistance c, * b2 b3 * b2 cSUC b3 c/\ creal_lt cdistance c, f1 * b2 b3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f1 * b2 cSUC b3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f2 * b2 b3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f2 * b2 cSUC b3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c= cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * b2 b3 cNIL creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * b2 b3 * b2 cSUC b3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
+ |- ((((~ ((real_lt ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) \/ (~ ((real_lt x) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)))) /\ (((real_lt ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus) \/ ((real_lt x) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)))) = (~ ((((real_lt ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus) /\ ((real_lt x) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) \/ ((~ ((real_lt ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) /\ (~ ((real_lt x) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)))))))
T c= c/\ c\/ c~ creal_lt creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus c~ creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c\/ creal_lt creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c~ c\/ c/\ creal_lt creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ c~ creal_lt creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus c~ creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus
+ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- ((((((mcell4 V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL))))) /\ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL))))))) ==> (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))))) = (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL))))))
T c==> cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c= c==> c/\ c= * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cCONS cI f3 cSUC f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cCONS cI f3 cSUC f4 cNIL cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c~ cnegligible * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
- (_7302082 = _7302083) |- ((_7302082 = _7302083) /\ ((sqrt _7302082) = (sqrt _7302083)))
T c==> c= f0 f1 c/\ c= f0 f1 c= csqrt f0 csqrt f1
+ |- ((!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((((((cc_4 V) u0) u1) f) i) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((critical_edge_y (distance ((f i) , (f (SUC i))))) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))))))))))))) ==> ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))))) = T)
T c= ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 b0 b1 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b0 c/\ ccc_4 f0 f1 f2 b1 b2 c/\ ccritical_edge_y cdistance c, f1 f2 c/\ ccritical_edge_y cdistance c, * b1 b2 * b1 cSUC b2 c/\ creal_lt cdistance c, f1 * b1 b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f1 * b1 cSUC b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f2 * b1 b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f2 * b1 cSUC b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c= cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * b1 b2 cNIL creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * b1 b2 * b1 cSUC b2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
- (_7302084 = _7302086) |- ((_7302084 = _7302086) /\ ((~ (_7302085 = _7302087)) \/ (((cc_ke _7302084) _7302085) = ((cc_ke _7302086) _7302087))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= ccc_ke f0 f2 ccc_ke f1 f3
+ |- ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t)))))
T c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
+ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))))))))))))))
T c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> ccritical_edge_y cdistance c, f1 f2 c==> ccritical_edge_y cdistance c, * f5 f6 * f5 cSUC f6 c==> creal_lt cdistance c, f1 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * * * part cwedge_ge f1 f2 * f5 f6 * f5 cSUC f6 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 part cEMPTY c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f5 cSUC f6 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f5 f6 * f5 cSUC f6 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL
- (_7302048 = _7302049) |- ((_7302048 = _7302049) /\ ((packing _7302049) \/ (~ (packing _7302048))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ cpacking f1 c~ cpacking f0
+ |- ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))))))))))))))))))
T c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> ccritical_edge_y cdistance c, f1 f2 c==> ccritical_edge_y cdistance c, * f5 f6 * f5 cSUC f6 c==> creal_lt cdistance c, f1 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * * * part cwedge_ge f1 f2 * f5 f6 * f5 cSUC f6 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 part cEMPTY c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f5 cSUC f6 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f5 f6 * f5 cSUC f6 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL
+ ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- ((f' = (u0 INSERT ((f i) INSERT EMPTY))) ==> ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((real_lt (radV f')) hminus))))
T c==> creal_lt cdistance c, f0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= f3 * * part cINSERT f0 * * part cINSERT * f1 f2 part cEMPTY c\/ c= f3 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c\/ c= f3 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY creal_lt cradV f3 chminus
- |- ((_7302110 = _7302111) ==> ((NUMERAL _7302110) = (NUMERAL _7302111)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ (packing V) |- ((packing V) /\ ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))))))))))))))))))))
T c==> cpacking f0 c/\ cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> ccritical_edge_y cdistance c, f1 f2 c==> ccritical_edge_y cdistance c, * f5 f6 * f5 cSUC f6 c==> creal_lt cdistance c, f1 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * * * part cwedge_ge f1 f2 * f5 f6 * f5 cSUC f6 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 part cEMPTY c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f5 cSUC f6 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL
- (critical_edge_y (distance (u0 , u1))) |- ((critical_edge_y (distance (u0 , u1))) = T)
T c==> ccritical_edge_y cdistance c, f0 f1 c= ccritical_edge_y cdistance c, f0 f1 cT
+ (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0
+ (((f' = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))))) ==> ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((real_lt (radV f')) hminus)))), ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))) |- ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((real_lt (radV f')) hminus)))
T c==> c==> c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT * f2 f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT * f2 cSUC f3 part cEMPTY c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c\/ c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY creal_lt cradV f0 chminus c==> c\/ c= f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT * f2 f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT * f2 cSUC f3 part cEMPTY c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c\/ c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY creal_lt cradV f0 chminus
+ |- ((\V. (!X. (!e. ((e IN ((critical_edgeX V) X)) = ((e IN ((edgeX V) X)) /\ (((real_le hminus) (radV e)) /\ ((real_le (radV e)) hplus))))))) V)
T * / ! ! c= cIN b2 * * part ccritical_edgeX b0 b1 c/\ cIN b2 * * part cedgeX b0 b1 c/\ creal_le chminus cradV b2 creal_le cradV b2 chplus f0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F))))))))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c< cNUMERAL cBIT1 c_0 f4 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c==> ccc_4 f3 f0 f1 f5 f6 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f5 f6 * f5 cSUC f6 c==> creal_lt cdistance c, f0 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * * * part cwedge_ge f0 f1 * f5 f6 * f5 cSUC f6 c==> c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f5 cSUC f6 cNIL c==> c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f5 f6 * f5 cSUC f6 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cnegligible * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL cF
+ |- (((((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))))) ==> F)
T c==> c\/ c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
- |- ((~ (_7302106 = _7302107)) \/ ((distance _7302106) = (distance _7302107)))
T c\/ c~ c= f0 f1 c= cdistance f0 cdistance f1
+ |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (packing V), (saturated V), ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((((((cc_4 V) u0) u1) f) i) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((critical_edge_y (distance ((f i) , (f (SUC i))))) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))))))))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> cpacking f0 c==> csaturated f0 c==> c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ ccc_4 f0 f1 f2 f5 f6 c/\ ccritical_edge_y cdistance c, f1 f2 c/\ ccritical_edge_y cdistance c, * f5 f6 * f5 cSUC f6 c/\ creal_lt cdistance c, f1 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f1 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f2 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f2 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c= cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f5 f6 * f5 cSUC f6 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))
T c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
+ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) |- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) /\ ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))
T c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
- (_7302056 = _7302058) |- ((_7302057 = _7302059) ==> (((real_sub _7302056) _7302057) = ((real_sub _7302058) _7302059)))
T c==> c= f0 f1 c==> c= f2 f3 c= creal_sub f0 f2 creal_sub f1 f3
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) |- ((mcell_set V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cmcell_set f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ |- (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))))))))))))
T c==> creal_lt cdistance c, f0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f0 cCONS f3 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY c==> cSUBSET * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL * * * * part cwedge_ge f0 f3 * f1 f2 * f1 cSUC f2 c==> c= * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL * * part cmcell4 f4 cCONS f0 cCONS f3 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT * f1 f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT * f1 cSUC f2 part cEMPTY c==> cleaf f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL c==> cleaf f4 cCONS f0 cCONS f3 cCONS * f1 cSUC f2 cNIL c==> c~ cnegligible * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL c==> cbarV f4 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f3 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c~ cnegligible * * part cmcell4 f4 cCONS f0 cCONS f3 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL
+ |- (((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- |- ((~ (_7302112 = _7302114)) \/ ((~ (_7302113 = _7302115)) \/ ((_7302112 INSERT _7302113) = (_7302114 INSERT _7302115))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- (_7302020 = _7302025), (_7302021 = _7302026), (_7302022 = _7302027) |- ((_7302020 = _7302025) /\ ((~ (_7302023 = _7302028)) \/ ((~ (_7302024 = _7302029)) \/ ((((((cc_4 _7302025) _7302026) _7302027) _7302028) _7302029) \/ (~ (((((cc_4 _7302020) _7302021) _7302022) _7302023) _7302024))))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f0 f1 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f1 f3 f5 f7 f9 c~ ccc_4 f0 f2 f4 f6 f8
- (~ (((u0 INSERT (u1 INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ ((((f i) INSERT ((f (SUC i)) INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (!f. ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f IN ((subcritical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))) |- (((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> c~ c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ cIN * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL ! c==> cIN b0 * * part cedgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY cIN b0 * * part csubcritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c= c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) |- (((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) = (((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0
- (_7302021 = _7302026), (_7302022 = _7302027) |- ((_7302022 = _7302027) /\ ((~ (_7302020 = _7302025)) \/ ((~ (_7302023 = _7302028)) \/ ((~ (_7302024 = _7302029)) \/ ((((((cc_4 _7302025) _7302026) _7302027) _7302028) _7302029) \/ (~ (((((cc_4 _7302020) _7302021) _7302022) _7302023) _7302024)))))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f5 f1 f3 f7 f9 c~ ccc_4 f4 f0 f2 f6 f8
- ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- ((real_lt (distance (u1 , ((I f) i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))
T c==> creal_lt cdistance c, f0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f0 cI f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus
+ |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) ==> F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))))))) i)
T * / c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 ccc_4 f0 f1 f2 f5 b0 c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 b0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt chl cCONS f1 cCONS f2 cCONS * f5 b0 cCONS * f5 cSUC b0 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 b0 * * part cINSERT * f5 cSUC b0 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 b0 cNIL c/\ c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 b0 * * part cINSERT * f5 cSUC b0 part cEMPTY c/\ cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 b0 cNIL * * * * part cwedge_ge f1 f2 * f5 b0 * f5 cSUC b0 c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 b0 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 b0 cCONS * f5 cSUC b0 cNIL c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 cSUC b0 part cEMPTY c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 b0 cNIL c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 cSUC b0 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 b0 cNIL cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f5 b0 cCONS * f5 cSUC b0 cNIL f6
+ |- (((!t. ((((EL (NUMERAL _0)) ((CONS h) t)) = h) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS h) t)) = ((EL (NUMERAL _0)) t)) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t))))))))) ==> ((\t. ((((EL (NUMERAL _0)) ((CONS h) t)) = h) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS h) t)) = ((EL (NUMERAL _0)) t)) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t))))))))) t)) = ((\t. ((((EL (NUMERAL _0)) ((CONS h) t)) = h) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS h) t)) = ((EL (NUMERAL _0)) t)) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t))))))))) t))
T c= c==> ! c/\ c= cEL cNUMERAL c_0 cCONS f0 b0 f0 c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL c_0 b0 c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b0 * / c/\ c= cEL cNUMERAL c_0 cCONS f0 b0 f0 c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL c_0 b0 c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b0 f1 * / c/\ c= cEL cNUMERAL c_0 cCONS f0 b0 f0 c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL c_0 b0 c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b0 f1
+ (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((~ ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c==> c~ c= cbeta_bump_v1 f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cF
+ |- (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_gt y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
+ ((f' = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- (((f' = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) /\ ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((real_lt (radV f')) hminus))))
T c==> c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> creal_lt cdistance c, f1 * f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY c\/ c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY creal_lt cradV f0 chminus
- (_7302020 = _7302025), (_7302021 = _7302026), (_7302022 = _7302027) |- ((_7302023 = _7302028) ==> ((~ (_7302024 = _7302029)) \/ ((((((cc_4 _7302025) _7302026) _7302027) _7302028) _7302029) \/ (~ (((((cc_4 _7302020) _7302021) _7302022) _7302023) _7302024)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f1 f3 f5 f7 f9 c~ ccc_4 f0 f2 f4 f6 f8
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F)))))))))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f3 f0 f1 f5 f6 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f5 f6 * f5 cSUC f6 c==> creal_lt cdistance c, f0 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * * * part cwedge_ge f0 f1 * f5 f6 * f5 cSUC f6 c==> c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f5 cSUC f6 cNIL c==> c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> cnegligible * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL cF
+ (f' = (u0 INSERT ((f (SUC i)) INSERT EMPTY))), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- ((f' = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((real_lt (radV f')) hminus)))
T c==> c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c==> creal_lt cdistance c, f1 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c\/ c= f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c\/ c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY creal_lt cradV f0 chminus
+ |- (~ (((~ ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) \/ (~ ((real_le x) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)))) /\ (((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y) \/ ((real_le x) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)))))
T c~ c/\ c\/ c~ creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c~ creal_le f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 c\/ creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_le f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cnegligible * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL cF
- (!V. (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V))))), ((saturated V) /\ ((packing V) /\ ((leaf V) ul))) |- ((!V. (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V))))) /\ (((cc_cell V) ul) IN (mcell_set V)))
T c==> ! ! c==> c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 cIN * * part ccc_cell b0 b1 * part cmcell_set b0 c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 c/\ ! ! c==> c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 cIN * * part ccc_cell b0 b1 * part cmcell_set b0 cIN * * part ccc_cell f0 f1 * part cmcell_set f0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ c= cbeta_bump_v1 f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c/\ cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c/\ cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c/\ c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 cF
- (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) |- ((collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY cF
+ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) /\ (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))
T c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
- |- (((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t))
T c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 f1
- (_7302004 = _7302006) |- ((_7302005 = _7302007) ==> (((leaf _7302006) _7302007) \/ (~ ((leaf _7302004) _7302005))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cleaf f1 f3 c~ cleaf f0 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cnegligible * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL cF
+ |- (((!ul. (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((mcell4 V) ul)))))) ==> ((((VX V) ((mcell4 V) ul)) DIFF (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))) = (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))) ==> ((\ul. (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((mcell4 V) ul)))))) ==> ((((VX V) ((mcell4 V) ul)) DIFF (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))) = (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = ((\ul. (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((mcell4 V) ul)))))) ==> ((((VX V) ((mcell4 V) ul)) DIFF (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))) = (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))
T c= c==> ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c~ cnegligible * * part cmcell4 f0 b0 c= * * part cDIFF * * part cVX f0 * * part cmcell4 f0 b0 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b0 part cEMPTY * / c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c~ cnegligible * * part cmcell4 f0 b0 c= * * part cDIFF * * part cVX f0 * * part cmcell4 f0 b0 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b0 part cEMPTY cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL * / c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c~ cnegligible * * part cmcell4 f0 b0 c= * * part cDIFF * * part cVX f0 * * part cmcell4 f0 b0 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b0 part cEMPTY cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
- (((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))))) ==> F)
T c==> c\/ c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
- (((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) |- ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c= creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f2 f3 * f2 cSUC f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f2 f3 * f2 cSUC f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
+ ((((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))))) |- (((((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))))) /\ F)
T c==> c\/ c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ c\/ c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 cF
+ ((((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) ==> F), ((((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) \/ (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 cF
+ (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) (distance ((f i) , (f (SUC i))))) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus))) |- ((!f. (((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ (((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))) /\ ((real_lt (radV f)) hminus)))))) = ((((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) (distance ((f i) , (f (SUC i))))) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hplus))) /\ (!f. (((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ (((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))) /\ ((real_lt (radV f)) hminus))))))))
T c==> c/\ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cdistance c, * f0 f1 * f0 cSUC f1 creal_le cdistance c, * f0 f1 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus c= ! c==> c\/ c= b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c= b0 * * part cINSERT f2 * * part cINSERT * f0 f1 part cEMPTY c\/ c= b0 * * part cINSERT f2 * * part cINSERT * f0 cSUC f1 part cEMPTY c\/ c= b0 * * part cINSERT f3 * * part cINSERT * f0 f1 part cEMPTY c\/ c= b0 * * part cINSERT f3 * * part cINSERT * f0 cSUC f1 part cEMPTY c= b0 * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c\/ c= b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c= b0 * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c/\ c\/ c= b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c= b0 * * part cINSERT f2 * * part cINSERT * f0 f1 part cEMPTY c\/ c= b0 * * part cINSERT f2 * * part cINSERT * f0 cSUC f1 part cEMPTY c\/ c= b0 * * part cINSERT f3 * * part cINSERT * f0 f1 part cEMPTY c\/ c= b0 * * part cINSERT f3 * * part cINSERT * f0 cSUC f1 part cEMPTY c= b0 * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY creal_lt cradV b0 chminus c/\ c/\ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cdistance c, * f0 f1 * f0 cSUC f1 creal_le cdistance c, * f0 f1 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chplus ! c==> c\/ c= b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c= b0 * * part cINSERT f2 * * part cINSERT * f0 f1 part cEMPTY c\/ c= b0 * * part cINSERT f2 * * part cINSERT * f0 cSUC f1 part cEMPTY c\/ c= b0 * * part cINSERT f3 * * part cINSERT * f0 f1 part cEMPTY c\/ c= b0 * * part cINSERT f3 * * part cINSERT * f0 cSUC f1 part cEMPTY c= b0 * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c\/ c= b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c= b0 * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c/\ c\/ c= b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c= b0 * * part cINSERT f2 * * part cINSERT * f0 f1 part cEMPTY c\/ c= b0 * * part cINSERT f2 * * part cINSERT * f0 cSUC f1 part cEMPTY c\/ c= b0 * * part cINSERT f3 * * part cINSERT * f0 f1 part cEMPTY c\/ c= b0 * * part cINSERT f3 * * part cINSERT * f0 cSUC f1 part cEMPTY c= b0 * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY creal_lt cradV b0 chminus
+ ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))))))))))))
T c==> creal_lt cdistance c, f0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f0 cCONS f3 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT * f1 f2 * * part cINSERT * f1 cSUC f2 part cEMPTY c==> cSUBSET * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL * * * * part cwedge_ge f0 f3 * f1 f2 * f1 cSUC f2 c==> c= * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL * * part cmcell4 f4 cCONS f0 cCONS f3 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT * f1 f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT * f1 cSUC f2 part cEMPTY c==> cleaf f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL c==> cleaf f4 cCONS f0 cCONS f3 cCONS * f1 cSUC f2 cNIL c==> c~ cnegligible * * part ccc_cell f4 cCONS f0 cCONS f3 cCONS * f1 f2 cNIL c==> cbarV f4 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f3 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c~ cnegligible * * part cmcell4 f4 cCONS f0 cCONS f3 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((critical_edge_y (distance (u0 , u1))) ==> ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> F))))))))))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f3 f0 f1 f5 f6 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f5 f6 * f5 cSUC f6 c==> creal_lt cdistance c, f0 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * * * part cwedge_ge f0 f1 * f5 f6 * f5 cSUC f6 c==> c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 f6 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f5 cSUC f6 part cEMPTY c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f5 cSUC f6 cNIL c==> c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f5 f6 * f5 cSUC f6 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cnegligible * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL cF
+ |- ((critical_edge_y (distance ((f i) , (f (SUC i))))) ==> (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> (((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) ==> ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) ==> ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))) ==> ((~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))))))))))))))
T c==> ccritical_edge_y cdistance c, * f0 f1 * f0 cSUC f1 c==> creal_lt cdistance c, f2 * f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f3 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c= ccc_ke f4 cCONS f2 cCONS f3 cCONS * f0 f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt chl cCONS f2 cCONS f3 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * part chull part cconvex * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY * * part ccc_cell f4 cCONS f2 cCONS f3 cCONS * f0 f1 cNIL c==> c~ ccoplanar * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c==> cSUBSET * * part ccc_cell f4 cCONS f2 cCONS f3 cCONS * f0 f1 cNIL * * * * part cwedge_ge f2 f3 * f0 f1 * f0 cSUC f1 c==> c= * * part ccc_cell f4 cCONS f2 cCONS f3 cCONS * f0 f1 cNIL * * part cmcell4 f4 cCONS f2 cCONS f3 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT * f0 f1 part cEMPTY c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT * f0 cSUC f1 part cEMPTY c==> cleaf f4 cCONS f2 cCONS f3 cCONS * f0 f1 cNIL c==> cleaf f4 cCONS f2 cCONS f3 cCONS * f0 cSUC f1 cNIL c==> c~ cnegligible * * part ccc_cell f4 cCONS f2 cCONS f3 cCONS * f0 f1 cNIL c==> cbarV f4 cNUMERAL cBIT1 cBIT1 c_0 cCONS f2 cCONS f3 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f2 f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f0 f1 * f0 cSUC f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cnegligible * * part cmcell4 f4 cCONS f2 cCONS f3 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) |- ((((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (((COND ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((u0 INSERT (u1 INSERT EMPTY)) IN ((critical_edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((((\e. (((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) DIFF e)) (u0 INSERT (u1 INSERT EMPTY))) IN ((critical_edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (!f. ((f IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((\e. (((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) DIFF e)) (u0 INSERT (u1 INSERT EMPTY)))) \/ (f IN ((subcritical_edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))))) ((real_sub (bump (radV (u0 INSERT (u1 INSERT EMPTY))))) (bump (radV ((\e. (((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) DIFF e)) (u0 INSERT (u1 INSERT EMPTY))))))) (real_of_num (NUMERAL _0)))) ==> ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) = (((saturated V) /\ ((packing V) /\ (((mcell_set V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((\e. (((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) DIFF e)) = (\e. (((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) DIFF e)))))) /\ (((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (((COND ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((u0 INSERT (u1 INSERT EMPTY)) IN ((critical_edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((((\e. (((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) DIFF e)) (u0 INSERT (u1 INSERT EMPTY))) IN ((critical_edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (!f. ((f IN ((edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((\e. (((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) DIFF e)) (u0 INSERT (u1 INSERT EMPTY)))) \/ (f IN ((subcritical_edgeX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))))) ((real_sub (bump (radV (u0 INSERT (u1 INSERT EMPTY))))) (bump (radV ((\e. (((VX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) DIFF e)) (u0 INSERT (u1 INSERT EMPTY))))))) (real_of_num (NUMERAL _0)))) ==> ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= c==> c= cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCOND c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccritical_edgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cIN * / * * part cDIFF * * part cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccritical_edgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL ! c==> cIN b0 * * part cedgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c\/ c= b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c= b0 * / * * part cDIFF * * part cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL b1 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part csubcritical_edgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_sub cbump cradV * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cbump cradV * / * * part cDIFF * * part cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL c_0 c= cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c/\ csaturated f0 c/\ cpacking f0 c/\ cmcell_set f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= / * * part cDIFF * * part cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL b0 / * * part cDIFF * * part cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL b0 c==> c= cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCOND c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccritical_edgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cIN * / * * part cDIFF * * part cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccritical_edgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL ! c==> cIN b0 * * part cedgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c\/ c= b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c= b0 * / * * part cDIFF * * part cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL b1 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part csubcritical_edgeX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_sub cbump cradV * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cbump cradV * / * * part cDIFF * * part cVX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL c_0 c= cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ ((((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) \/ (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0))))) |- (((((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) \/ (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0))))) /\ F)
T c==> c\/ c/\ creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 c/\ c\/ c/\ creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 cF
- |- (((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ c= cbeta_bump_v1 f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c/\ c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c/\ cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c/\ cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c/\ c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 cF
- ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) = T)
T c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL c= cleaf f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL cT
- (((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))) |- (~ (coplanar (u0 INSERT (u1 INSERT (((I f) i) INSERT (((I f) (SUC i)) INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT cI f2 f3 * * part cINSERT cI f2 cSUC f3 part cEMPTY
- (_7302076 = _7302078) |- ((_7302076 = _7302078) /\ ((~ (_7302077 = _7302079)) \/ (((cc_cell _7302076) _7302077) = ((cc_cell _7302078) _7302079))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part ccc_cell f0 f2 * * part ccc_cell f1 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((u0 INSERT (u1 INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ ((((f i) INSERT ((f (SUC i)) INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (!f. ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f IN ((subcritical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))))) |- ((((u0 INSERT (u1 INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ ((((f i) INSERT ((f (SUC i)) INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (!f. ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f IN ((subcritical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))) = F)
T c==> c~ c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ cIN * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL ! c==> cIN b0 * * part cedgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY cIN b0 * * part csubcritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c= c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ cIN * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL ! c==> cIN b0 * * part cedgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY cIN b0 * * part csubcritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL cF
- (_7301996 = _7301999), (_7301997 = _7302000), (_7301998 = _7302001) |- ((_7301997 = _7302000) /\ ((((barV _7301999) _7302000) _7302001) \/ (~ (((barV _7301996) _7301997) _7301998))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f2 f3 c\/ cbarV f1 f3 f5 c~ cbarV f0 f2 f4
- |- ((_7302084 = _7302086) ==> ((~ (_7302085 = _7302087)) \/ (((cc_ke _7302084) _7302085) = ((cc_ke _7302086) _7302087))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= ccc_ke f0 f2 ccc_ke f1 f3
- (_7302064 = _7302068) |- ((_7302064 = _7302068) /\ ((~ (_7302065 = _7302069)) \/ ((~ (_7302066 = _7302070)) \/ ((~ (_7302067 = _7302071)) \/ (((((wedge_ge _7302064) _7302065) _7302066) _7302067) = ((((wedge_ge _7302068) _7302069) _7302070) _7302071))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c= * * * * part cwedge_ge f0 f2 f4 f6 * * * * part cwedge_ge f1 f3 f5 f7
- (_7302030 = _7302032) |- ((_7302030 = _7302032) /\ ((~ (_7302031 = _7302033)) \/ ((_7302032 < _7302033) \/ (~ (_7302030 < _7302031)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c< f1 f3 c~ c< f0 f2
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) |- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))) SUBSET ((((wedge_ge u0) u1) ((I f) i)) ((I f) (SUC i))))
T c==> cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL * * * * part cwedge_ge f1 f2 cI f3 f4 cI f3 cSUC f4
- (((u0 INSERT (u1 INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ ((((f i) INSERT ((f (SUC i)) INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (!f. ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f IN ((subcritical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))) |- ((((real_sub (bump (radV (u0 INSERT (u1 INSERT EMPTY))))) (bump (radV ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = (((real_sub (bump (radV (u0 INSERT (u1 INSERT EMPTY))))) (bump (radV ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ cIN * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL ! c==> cIN b0 * * part cedgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY cIN b0 * * part csubcritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c= c= creal_sub cbump cradV * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cbump cradV * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_sub cbump cradV * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cbump cradV * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- ((~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL))))))) ==> (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL)))))))
T c==> cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cCONS cI f3 cSUC f4 cNIL cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cCONS cI f3 cSUC f4 cNIL
- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL))))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL)))))))
T c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cCONS cI f3 cSUC f4 cNIL c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cCONS cI f3 cSUC f4 cNIL
- |- ((_7302108 = _7302109) ==> ((BIT1 _7302108) = (BIT1 _7302109)))
T c==> c= f0 f1 c= cBIT1 f0 cBIT1 f1
- (_7302064 = _7302068), (_7302065 = _7302069) |- ((_7302065 = _7302069) /\ ((~ (_7302066 = _7302070)) \/ ((~ (_7302067 = _7302071)) \/ (((((wedge_ge _7302064) _7302065) _7302066) _7302067) = ((((wedge_ge _7302068) _7302069) _7302070) _7302071)))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c= * * * * part cwedge_ge f0 f2 f4 f6 * * * * part cwedge_ge f1 f3 f5 f7
- (~ ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) |- (((~ (((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) ==> ((((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) = F)) = ((((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) = F))
T c==> c~ c= cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= c==> c~ c= creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= c= creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cF c= c= creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cF
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- (_7302096 = _7302097) |- ((_7302096 = _7302097) /\ ((SUC _7302096) = (SUC _7302097)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cSUC f0 cSUC f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- ((x = y) = ((real_of_int x) = (real_of_int y)))
T c= c= f0 f1 c= creal_of_int f0 creal_of_int f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ (_7302030 = _7302032)) \/ ((~ (_7302031 = _7302033)) \/ ((_7302032 < _7302033) \/ (~ (_7302030 < _7302031)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c< f1 f3 c~ c< f0 f2
- (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))))) |- ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL))))))
T c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL c/\ c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL
- (_7302018 = _7302019) |- ((((critical_edge_y _7302018) = (critical_edge_y _7302019)) ==> ((critical_edge_y _7302019) \/ (~ (critical_edge_y _7302018)))) = ((critical_edge_y _7302019) \/ (~ (critical_edge_y _7302018))))
T c==> c= f0 f1 c= c==> c= ccritical_edge_y f0 ccritical_edge_y f1 c\/ ccritical_edge_y f1 c~ ccritical_edge_y f0 c\/ ccritical_edge_y f1 c~ ccritical_edge_y f0
- (_7302036 = _7302041), (_7302038 = _7302043) |- ((_7302036 = _7302041) /\ ((~ (_7302040 = _7302045)) \/ ((~ (_7302037 = _7302042)) \/ ((~ (_7302039 = _7302044)) \/ ((((((leaf_rank _7302041) _7302042) _7302043) _7302044) _7302045) \/ (~ (((((leaf_rank _7302036) _7302037) _7302038) _7302039) _7302040)))))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f1 f7 f3 f9 f5 c~ cleaf_rank f0 f6 f2 f8 f4
- (_7302020 = _7302025), (_7302021 = _7302026), (_7302022 = _7302027) |- ((~ (_7302023 = _7302028)) \/ ((~ (_7302024 = _7302029)) \/ ((((((cc_4 _7302025) _7302026) _7302027) _7302028) _7302029) \/ (~ (((((cc_4 _7302020) _7302021) _7302022) _7302023) _7302024)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f1 f3 f5 f7 f9 c~ ccc_4 f0 f2 f4 f6 f8
- |- ((~ (_7302034 = _7302035)) \/ ((collinear _7302035) \/ (~ (collinear _7302034))))
T c\/ c~ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0
- (_7302012 = _7302013) |- ((_7302012 = _7302013) /\ ((coplanar _7302013) \/ (~ (coplanar _7302012))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ ccoplanar f1 c~ ccoplanar f0
- (_7302023 = _7302028), (_7302020 = _7302025), (_7302021 = _7302026), (_7302022 = _7302027) |- ((_7302024 = _7302029) ==> ((((((cc_4 _7302025) _7302026) _7302027) _7302028) _7302029) \/ (~ (((((cc_4 _7302020) _7302021) _7302022) _7302023) _7302024))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c\/ ccc_4 f3 f5 f7 f1 f9 c~ ccc_4 f2 f4 f6 f0 f8
- (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t))))
T c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
- (_7302008 = _7302010) |- ((_7302008 = _7302010) /\ ((~ (_7302009 = _7302011)) \/ ((_7302010 SUBSET _7302011) \/ (~ (_7302008 SUBSET _7302009)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
- (_7302030 = _7302032) |- ((_7302031 = _7302033) ==> ((_7302032 < _7302033) \/ (~ (_7302030 < _7302031))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c< f1 f3 c~ c< f0 f2
- (_7302038 = _7302043) |- ((_7302036 = _7302041) ==> ((~ (_7302040 = _7302045)) \/ ((~ (_7302037 = _7302042)) \/ ((~ (_7302039 = _7302044)) \/ ((((((leaf_rank _7302041) _7302042) _7302043) _7302044) _7302045) \/ (~ (((((leaf_rank _7302036) _7302037) _7302038) _7302039) _7302040)))))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f1 f9 f5 c~ cleaf_rank f2 f6 f0 f8 f4
- (_7302112 = _7302114) |- ((_7302113 = _7302115) ==> ((_7302112 INSERT _7302113) = (_7302114 INSERT _7302115)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- |- ((~ (_7302064 = _7302068)) \/ ((~ (_7302065 = _7302069)) \/ ((~ (_7302066 = _7302070)) \/ ((~ (_7302067 = _7302071)) \/ (((((wedge_ge _7302064) _7302065) _7302066) _7302067) = ((((wedge_ge _7302068) _7302069) _7302070) _7302071))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c= * * * * part cwedge_ge f0 f2 f4 f6 * * * * part cwedge_ge f1 f3 f5 f7
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((_7302018 = _7302019) ==> ((critical_edge_y _7302019) \/ (~ (critical_edge_y _7302018))))
T c==> c= f0 f1 c\/ ccritical_edge_y f1 c~ ccritical_edge_y f0
- ((f' = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) |- (((f' = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = T)
T c==> c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c= c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY cT
- |- ((_7302076 = _7302078) ==> ((~ (_7302077 = _7302079)) \/ (((cc_cell _7302076) _7302077) = ((cc_cell _7302078) _7302079))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part ccc_cell f0 f2 * * part ccc_cell f1 f3
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) |- ((((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) = F)
T c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f2 f3 * f2 cSUC f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= c= creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f2 f3 * f2 cSUC f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- (_7302040 = _7302045), (_7302036 = _7302041), (_7302038 = _7302043) |- ((~ (_7302037 = _7302042)) \/ ((~ (_7302039 = _7302044)) \/ ((((((leaf_rank _7302041) _7302042) _7302043) _7302044) _7302045) \/ (~ (((((leaf_rank _7302036) _7302037) _7302038) _7302039) _7302040)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f5 f9 f1 c~ cleaf_rank f2 f6 f4 f8 f0
- |- ((_7302090 = _7302091) ==> ((real_of_num _7302090) = (real_of_num _7302091)))
T c==> c= f0 f1 c= creal_of_num f0 creal_of_num f1
- |- ((_7302034 = _7302035) ==> ((collinear _7302035) \/ (~ (collinear _7302034))))
T c==> c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
- (_7302116 = _7302118) |- ((_7302116 = _7302118) /\ ((~ (_7302117 = _7302119)) \/ (((CONS _7302116) _7302117) = ((CONS _7302118) _7302119))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
- |- (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- (((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- (_7302102 = _7302104) |- ((_7302102 = _7302104) /\ ((~ (_7302103 = _7302105)) \/ ((_7302102 , _7302103) = (_7302104 , _7302105))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- |- ((_7302054 = _7302055) ==> ((bump _7302054) = (bump _7302055)))
T c==> c= f0 f1 c= cbump f0 cbump f1
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c= c* cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- (_7302080 = _7302081) |- ((_7302080 = _7302081) /\ ((hl _7302080) = (hl _7302081)))
T c==> c= f0 f1 c/\ c= f0 f1 c= chl f0 chl f1
- (((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0
- |- (((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t))
T c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) |- (((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = F)
T c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f2 f3 * f2 cSUC f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f2 f3 * f2 cSUC f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cF
- (_7302060 = _7302062), (_7302061 = _7302063) |- ((_7302061 = _7302063) /\ (((mcell4 _7302060) _7302061) = ((mcell4 _7302062) _7302063)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= * * part cmcell4 f0 f2 * * part cmcell4 f1 f3
- |- (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t))
T c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
- (_7302106 = _7302107) |- ((_7302106 = _7302107) /\ ((distance _7302106) = (distance _7302107)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cdistance f0 cdistance f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((_7302092 = _7302094) ==> ((~ (_7302093 = _7302095)) \/ (((real_mul _7302092) _7302093) = ((real_mul _7302094) _7302095))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= creal_mul f0 f2 creal_mul f1 f3
- (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- (((hull convex) (u0 INSERT (u1 INSERT (((I f) i) INSERT (((I f) (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))))
T c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT cI f2 f3 * * part cINSERT cI f2 cSUC f3 part cEMPTY * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS cI f2 f3 cNIL
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_7302098 = _7302100) |- ((_7302098 = _7302100) /\ ((~ (_7302099 = _7302101)) \/ (((I _7302098) _7302099) = ((I _7302100) _7302101))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cI f0 f2 cI f1 f3
- (_7302023 = _7302028), (_7302020 = _7302025), (_7302021 = _7302026), (_7302022 = _7302027) |- ((~ (_7302024 = _7302029)) \/ ((((((cc_4 _7302025) _7302026) _7302027) _7302028) _7302029) \/ (~ (((((cc_4 _7302020) _7302021) _7302022) _7302023) _7302024))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f3 f5 f7 f1 f9 c~ ccc_4 f2 f4 f6 f0 f8
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) = (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- (_7302034 = _7302035) |- ((((collinear _7302034) = (collinear _7302035)) ==> ((collinear _7302035) \/ (~ (collinear _7302034)))) = ((collinear _7302035) \/ (~ (collinear _7302034))))
T c==> c= f0 f1 c= c==> c= ccollinear f0 ccollinear f1 c\/ ccollinear f1 c~ ccollinear f0 c\/ ccollinear f1 c~ ccollinear f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ (_7302014 = _7302016)) \/ ((~ (_7302015 = _7302017)) \/ (((real_lt _7302016) _7302017) \/ (~ ((real_lt _7302014) _7302015)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ creal_lt f1 f3 c~ creal_lt f0 f2
- (~ ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) |- (((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = F)
T c==> c~ c= cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= c= cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cF
- (~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL))))))), (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- ((~ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL))))))) /\ (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL)))))))
T c==> c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cCONS cI f3 cSUC f4 cNIL c==> cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ c~ cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cCONS cI f3 cSUC f4 cNIL cnegligible * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cCONS cI f3 cSUC f4 cNIL
- |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- ((~ (_7302098 = _7302100)) \/ ((~ (_7302099 = _7302101)) \/ (((I _7302098) _7302099) = ((I _7302100) _7302101))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cI f0 f2 cI f1 f3
- (_7302076 = _7302078), (_7302077 = _7302079) |- ((_7302077 = _7302079) /\ (((cc_cell _7302076) _7302077) = ((cc_cell _7302078) _7302079)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= * * part ccc_cell f0 f2 * * part ccc_cell f1 f3
- (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))), (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))), (~ (coplanar (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))), (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (negligible ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (critical_edge_y (distance ((f i) , (f (SUC i))))), (((hull convex) (u0 INSERT (u1 INSERT ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c==> c~ cnegligible * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cnegligible * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cpacking f5 c==> csaturated f5 c==> ccritical_edge_y cdistance c, f0 f1 c==> ccritical_edge_y cdistance c, * f3 f4 * f3 cSUC f4 c==> c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> c= * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * part cmcell4 f5 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c= ccc_ke f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f0 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET * * part ccc_cell f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL * * * * part cwedge_ge f0 f1 * f3 f4 * f3 cSUC f4 c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f4 cNIL c==> cleaf f5 cCONS f0 cCONS f1 cCONS * f3 cSUC f4 cNIL c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f6 f3 c==> ccc_4 f5 f0 f1 f3 f4 cF
- (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- ((_7302038 = _7302043) ==> ((~ (_7302036 = _7302041)) \/ ((~ (_7302040 = _7302045)) \/ ((~ (_7302037 = _7302042)) \/ ((~ (_7302039 = _7302044)) \/ ((((((leaf_rank _7302041) _7302042) _7302043) _7302044) _7302045) \/ (~ (((((leaf_rank _7302036) _7302037) _7302038) _7302039) _7302040))))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f1 f9 f5 c~ cleaf_rank f2 f6 f0 f8 f4
- |- (((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) hminus))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((f' = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))))) |- (((f' = (u0 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u0 INSERT ((f (SUC i)) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f i) INSERT EMPTY))) \/ ((f' = (u1 INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f' = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))))) = T)
T c==> c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT * f2 f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT * f2 cSUC f3 part cEMPTY c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY c= c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c\/ c= f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT * f2 f3 part cEMPTY c\/ c= f0 * * part cINSERT f4 * * part cINSERT * f2 cSUC f3 part cEMPTY c= f0 * * part cINSERT * f2 f3 * * part cINSERT * f2 cSUC f3 part cEMPTY cT
- |- ((!w0. (P w0)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) = T)
T c==> cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 cT
- (_7302098 = _7302100) |- ((_7302099 = _7302101) ==> (((I _7302098) _7302099) = ((I _7302100) _7302101)))
T c==> c= f0 f1 c==> c= f2 f3 c= cI f0 f2 cI f1 f3
- (~ (((mcell4 V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))))), (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- ((~ (((mcell4 V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))))) /\ (((mcell4 V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL))))))
T c==> c~ c= * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cCONS cI f3 cSUC f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ c~ c= * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cCONS cI f3 cSUC f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL c= * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cCONS cI f3 cSUC f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL
- |- ((_7302082 = _7302083) ==> ((sqrt _7302082) = (sqrt _7302083)))
T c==> c= f0 f1 c= csqrt f0 csqrt f1
- |- ((_7302056 = _7302058) ==> ((~ (_7302057 = _7302059)) \/ (((real_sub _7302056) _7302057) = ((real_sub _7302058) _7302059))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= creal_sub f0 f2 creal_sub f1 f3
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) |- ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c= creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f2 f3 * f2 cSUC f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbeta_bump_v1 f4 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c= cbeta_bump_v1 f4 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f2 f3 * f2 cSUC f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_7302088 = _7302089) |- ((_7302088 = _7302089) /\ ((BIT0 _7302088) = (BIT0 _7302089)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- (_7302073 = _7302075) |- ((_7302073 = _7302075) /\ ((~ (_7302072 = _7302074)) \/ (((hull _7302072) _7302073) = ((hull _7302074) _7302075))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
- (_7302112 = _7302114) |- ((_7302112 = _7302114) /\ ((~ (_7302113 = _7302115)) \/ ((_7302112 INSERT _7302113) = (_7302114 INSERT _7302115))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- (_7302036 = _7302041), (_7302038 = _7302043) |- ((_7302040 = _7302045) ==> ((~ (_7302037 = _7302042)) \/ ((~ (_7302039 = _7302044)) \/ ((((((leaf_rank _7302041) _7302042) _7302043) _7302044) _7302045) \/ (~ (((((leaf_rank _7302036) _7302037) _7302038) _7302039) _7302040))))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f1 f7 f3 f9 f5 c~ cleaf_rank f0 f6 f2 f8 f4
- (_7301996 = _7301999), (_7301997 = _7302000), (_7301998 = _7302001) |- ((((barV _7301999) _7302000) _7302001) \/ (~ (((barV _7301996) _7301997) _7301998)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ cbarV f1 f3 f5 c~ cbarV f0 f2 f4
- (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- (_7302040 = _7302045), (_7302036 = _7302041), (_7302037 = _7302042), (_7302038 = _7302043) |- ((_7302037 = _7302042) /\ ((~ (_7302039 = _7302044)) \/ ((((((leaf_rank _7302041) _7302042) _7302043) _7302044) _7302045) \/ (~ (((((leaf_rank _7302036) _7302037) _7302038) _7302039) _7302040)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c/\ c= f4 f5 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f5 f7 f9 f1 c~ cleaf_rank f2 f4 f6 f8 f0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (_7302090 = _7302091) |- ((_7302090 = _7302091) /\ ((real_of_num _7302090) = (real_of_num _7302091)))
T c==> c= f0 f1 c/\ c= f0 f1 c= creal_of_num f0 creal_of_num f1
- (((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- (((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) = (((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_7302014 = _7302016) |- ((_7302015 = _7302017) ==> (((real_lt _7302016) _7302017) \/ (~ ((real_lt _7302014) _7302015))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ creal_lt f1 f3 c~ creal_lt f0 f2
- |- ((~ (_7302088 = _7302089)) \/ ((BIT0 _7302088) = (BIT0 _7302089)))
T c\/ c~ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- |- ((~ (_7302048 = _7302049)) \/ ((packing _7302049) \/ (~ (packing _7302048))))
T c\/ c~ c= f0 f1 c\/ cpacking f1 c~ cpacking f0
- |- ((_7302080 = _7302081) ==> ((hl _7302080) = (hl _7302081)))
T c==> c= f0 f1 c= chl f0 chl f1
- (_7302064 = _7302068) |- ((_7302065 = _7302069) ==> ((~ (_7302066 = _7302070)) \/ ((~ (_7302067 = _7302071)) \/ (((((wedge_ge _7302064) _7302065) _7302066) _7302067) = ((((wedge_ge _7302068) _7302069) _7302070) _7302071)))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c= * * * * part cwedge_ge f0 f2 f4 f6 * * * * part cwedge_ge f1 f3 f5 f7
- (_7302040 = _7302045), (_7302036 = _7302041), (_7302039 = _7302044), (_7302037 = _7302042), (_7302038 = _7302043) |- ((((((((leaf_rank _7302036) _7302037) _7302038) _7302039) _7302040) = (((((leaf_rank _7302041) _7302042) _7302043) _7302044) _7302045)) ==> ((((((leaf_rank _7302041) _7302042) _7302043) _7302044) _7302045) \/ (~ (((((leaf_rank _7302036) _7302037) _7302038) _7302039) _7302040)))) = ((((((leaf_rank _7302041) _7302042) _7302043) _7302044) _7302045) \/ (~ (((((leaf_rank _7302036) _7302037) _7302038) _7302039) _7302040))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c= c==> c= cleaf_rank f2 f6 f8 f4 f0 cleaf_rank f3 f7 f9 f5 f1 c\/ cleaf_rank f3 f7 f9 f5 f1 c~ cleaf_rank f2 f6 f8 f4 f0 c\/ cleaf_rank f3 f7 f9 f5 f1 c~ cleaf_rank f2 f6 f8 f4 f0
- (_7302040 = _7302045), (_7302036 = _7302041), (_7302037 = _7302042), (_7302038 = _7302043) |- ((_7302039 = _7302044) ==> ((((((leaf_rank _7302041) _7302042) _7302043) _7302044) _7302045) \/ (~ (((((leaf_rank _7302036) _7302037) _7302038) _7302039) _7302040))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c\/ cleaf_rank f3 f5 f7 f9 f1 c~ cleaf_rank f2 f4 f6 f8 f0
- ((real_lt (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- ((real_lt (distance (u1 , ((I f) (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))
T c==> creal_lt cdistance c, f0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f0 cI f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus
- (_7302076 = _7302078) |- ((_7302077 = _7302079) ==> (((cc_cell _7302076) _7302077) = ((cc_cell _7302078) _7302079)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part ccc_cell f0 f2 * * part ccc_cell f1 f3
- |- (((\e. (f e)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((_7302116 = _7302118) ==> ((~ (_7302117 = _7302119)) \/ (((CONS _7302116) _7302117) = ((CONS _7302118) _7302119))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
- (_7302036 = _7302041), (_7302038 = _7302043) |- ((~ (_7302040 = _7302045)) \/ ((~ (_7302037 = _7302042)) \/ ((~ (_7302039 = _7302044)) \/ ((((((leaf_rank _7302041) _7302042) _7302043) _7302044) _7302045) \/ (~ (((((leaf_rank _7302036) _7302037) _7302038) _7302039) _7302040))))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f1 f7 f3 f9 f5 c~ cleaf_rank f0 f6 f2 f8 f4
- ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) |- (((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))
T c==> c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f2 f3 * f2 cSUC f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f2 f3 * f2 cSUC f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((_7302050 = _7302052) ==> ((~ (_7302051 = _7302053)) \/ (((real_div _7302050) _7302051) = ((real_div _7302052) _7302053))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= creal_div f0 f2 creal_div f1 f3
- (((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_of_num cNUMERAL c_0
- (~ ((real_of_num (NUMERAL _0)) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) |- (~ (((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_of_num cNUMERAL c_0 creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f2 f3 * f2 cSUC f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ c= creal_sub cbump creal_div cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f2 f3 * f2 cSUC f3 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((u0 INSERT (u1 INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ ((((f i) INSERT ((f (SUC i)) INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (!f. ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f IN ((subcritical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))) |- ((((u0 INSERT (u1 INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ ((((f i) INSERT ((f (SUC i)) INSERT EMPTY)) IN ((critical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) /\ (!f. ((f IN ((edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((f = (u0 INSERT (u1 INSERT EMPTY))) \/ ((f = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) \/ (f IN ((subcritical_edgeX V) ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))) = T)
T c==> c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ cIN * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL ! c==> cIN b0 * * part cedgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY cIN b0 * * part csubcritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c= c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c/\ cIN * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY * * part ccritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL ! c==> cIN b0 * * part cedgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c\/ c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= b0 * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY cIN b0 * * part csubcritical_edgeX f2 * * part cmcell4 f2 cCONS f0 cCONS f1 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL cT
- (_7302014 = _7302016), (_7302015 = _7302017) |- (((((real_lt _7302014) _7302015) = ((real_lt _7302016) _7302017)) ==> (((real_lt _7302016) _7302017) \/ (~ ((real_lt _7302014) _7302015)))) = (((real_lt _7302016) _7302017) \/ (~ ((real_lt _7302014) _7302015))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= creal_lt f0 f2 creal_lt f1 f3 c\/ creal_lt f1 f3 c~ creal_lt f0 f2 c\/ creal_lt f1 f3 c~ creal_lt f0 f2
- (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- (_7302021 = _7302026) |- ((_7302022 = _7302027) ==> ((~ (_7302020 = _7302025)) \/ ((~ (_7302023 = _7302028)) \/ ((~ (_7302024 = _7302029)) \/ ((((((cc_4 _7302025) _7302026) _7302027) _7302028) _7302029) \/ (~ (((((cc_4 _7302020) _7302021) _7302022) _7302023) _7302024)))))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f5 f1 f3 f7 f9 c~ ccc_4 f4 f0 f2 f6 f8
- (_7302004 = _7302006), (_7302005 = _7302007) |- ((_7302005 = _7302007) /\ (((leaf _7302006) _7302007) \/ (~ ((leaf _7302004) _7302005))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ cleaf f1 f3 c~ cleaf f0 f2
- (((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0
- (_7302034 = _7302035) |- ((_7302034 = _7302035) /\ ((collinear _7302035) \/ (~ (collinear _7302034))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_7302084 = _7302086) |- ((_7302085 = _7302087) ==> (((cc_ke _7302084) _7302085) = ((cc_ke _7302086) _7302087)))
T c==> c= f0 f1 c==> c= f2 f3 c= ccc_ke f0 f2 ccc_ke f1 f3
- (_7301996 = _7301999) |- ((_7301996 = _7301999) /\ ((~ (_7301998 = _7302001)) \/ ((~ (_7301997 = _7302000)) \/ ((((barV _7301999) _7302000) _7302001) \/ (~ (((barV _7301996) _7301997) _7301998))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ cbarV f1 f5 f3 c~ cbarV f0 f4 f2
- (_7302064 = _7302068), (_7302065 = _7302069), (_7302066 = _7302070) |- ((_7302067 = _7302071) ==> (((((wedge_ge _7302064) _7302065) _7302066) _7302067) = ((((wedge_ge _7302068) _7302069) _7302070) _7302071)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c= * * * * part cwedge_ge f0 f2 f4 f6 * * * * part cwedge_ge f1 f3 f5 f7
- |- ((_7302014 = _7302016) ==> ((~ (_7302015 = _7302017)) \/ (((real_lt _7302016) _7302017) \/ (~ ((real_lt _7302014) _7302015)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ creal_lt f1 f3 c~ creal_lt f0 f2
- (_7302050 = _7302052) |- ((_7302050 = _7302052) /\ ((~ (_7302051 = _7302053)) \/ (((real_div _7302050) _7302051) = ((real_div _7302052) _7302053))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= creal_div f0 f2 creal_div f1 f3
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (critical_edge_y (distance ((f i) , (f (SUC i))))) |- (critical_edge_y (distance (((I f) i) , ((I f) (SUC i)))))
T c==> ccritical_edge_y cdistance c, * f0 f1 * f0 cSUC f1 ccritical_edge_y cdistance c, cI f0 f1 cI f0 cSUC f1
- ((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) |- (((real_sub (bump ((real_div (distance (u0 , u1))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (bump ((real_div (distance ((f i) , (f (SUC i))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))
T c==> c= cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_sub cbump creal_div cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbump creal_div cdistance c, * f3 f4 * f3 cSUC f4 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
- (((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- (_7302102 = _7302104) |- ((_7302103 = _7302105) ==> ((_7302102 , _7302103) = (_7302104 , _7302105)))
T c==> c= f0 f1 c==> c= f2 f3 c= c, f0 f2 c, f1 f3
- (_7302064 = _7302068), (_7302065 = _7302069), (_7302066 = _7302070), (_7302067 = _7302071) |- ((_7302067 = _7302071) /\ (((((wedge_ge _7302064) _7302065) _7302066) _7302067) = ((((wedge_ge _7302068) _7302069) _7302070) _7302071)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c/\ c= f6 f7 c= * * * * part cwedge_ge f0 f2 f4 f6 * * * * part cwedge_ge f1 f3 f5 f7
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!V. (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V))))), ((saturated V) /\ ((packing V) /\ ((leaf V) ul))) |- (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (((cc_cell V) ul) IN (mcell_set V)))
T c==> ! ! c==> c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 cIN * * part ccc_cell b0 b1 * part cmcell_set b0 c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 c/\ c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 cIN * * part ccc_cell f0 f1 * part cmcell_set f0
- |- ((_7302046 = _7302047) ==> ((saturated _7302047) \/ (~ (saturated _7302046))))
T c==> c= f0 f1 c\/ csaturated f1 c~ csaturated f0
- (((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) hminus))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) hminus)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chminus creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 chminus creal_of_num cNUMERAL c_0
- |- ((~ (_7302018 = _7302019)) \/ ((critical_edge_y _7302019) \/ (~ (critical_edge_y _7302018))))
T c\/ c~ c= f0 f1 c\/ ccritical_edge_y f1 c~ ccritical_edge_y f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((saturated V) /\ ((packing V) /\ ((leaf V) ul))) |- ((!V. (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_cell V) ul) IN (mcell_set V))))) ==> (((cc_cell V) ul) IN (mcell_set V)))
T c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 c==> ! ! c==> c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 cIN * * part ccc_cell b0 b1 * part cmcell_set b0 cIN * * part ccc_cell f0 f1 * part cmcell_set f0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_7302060 = _7302062) |- ((_7302061 = _7302063) ==> (((mcell4 _7302060) _7302061) = ((mcell4 _7302062) _7302063)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cmcell4 f0 f2 * * part cmcell4 f1 f3
- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) |- ((~ (((mcell4 V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))))) ==> (((mcell4 V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) ((CONS ((I f) (SUC i))) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL))))))
T c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c~ c= * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cCONS cI f3 cSUC f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL c= * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cCONS cI f3 cSUC f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL
- (_7302048 = _7302049) |- ((((packing _7302048) = (packing _7302049)) ==> ((packing _7302049) \/ (~ (packing _7302048)))) = ((packing _7302049) \/ (~ (packing _7302048))))
T c==> c= f0 f1 c= c==> c= cpacking f0 cpacking f1 c\/ cpacking f1 c~ cpacking f0 c\/ cpacking f1 c~ cpacking f0
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- ((~ (_7302076 = _7302078)) \/ ((~ (_7302077 = _7302079)) \/ (((cc_cell _7302076) _7302077) = ((cc_cell _7302078) _7302079))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part ccc_cell f0 f2 * * part ccc_cell f1 f3
- (_7302004 = _7302006) |- ((_7302004 = _7302006) /\ ((~ (_7302005 = _7302007)) \/ (((leaf _7302006) _7302007) \/ (~ ((leaf _7302004) _7302005)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cleaf f1 f3 c~ cleaf f0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
