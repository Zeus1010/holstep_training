N Hypermap.lemma_inverse_in_node
C |- (!H. (!x. (!y. ((y IN ((node H) x)) ==> (((inverse (node_map H)) y) IN ((node H) x))))))
T c==> cIN f0 * * part cnode f1 f2 cIN cinverse * part cnode_map f1 f0 * * part cnode f1 f2
D TRUTH
A |- T
T cT
D Hypermap.node_map_and_darts
A |- (!H. ((FINITE (dart H)) /\ ((permutes (node_map H)) (dart H))))
T c/\ cFINITE * part cdart f0 cpermutes * part cnode_map f0 * part cdart f0
D Hypermap.inverse_element_lemma
A |- (!s. (!p. (((FINITE s) /\ ((permutes p) s)) ==> (?j. ((inverse p) = ((POWER p) j))))))
T c==> c/\ cFINITE f0 cpermutes f1 f0 c? / c= * part cinverse f1 * * part cPOWER f1 b0
D Hypermap.lemma_node_identity
A |- (!H. (!x. (!y. ((y IN ((node H) x)) ==> (((node H) x) = ((node H) y))))))
T c==> cIN f0 * * part cnode f1 f2 c= * * part cnode f1 f2 * * part cnode f1 f0
D Hypermap.lemma_in_node2
A |- (!H. (!x. (!n. ((((POWER (node_map H)) n) x) IN ((node H) x)))))
T cIN cPOWER * part cnode_map f0 f1 f2 * * part cnode f0 f2
+ |- ((((\j. ((inverse (node_map H)) = ((POWER (node_map H)) j))) j) ==> (((inverse (node_map H)) y) IN ((node H) y))) = T)
T c= c==> * / c= * part cinverse * part cnode_map f0 * * part cPOWER * part cnode_map f0 b0 f1 cIN cinverse * part cnode_map f0 f2 * * part cnode f0 f2 cT
- (?j. ((inverse (node_map H)) = ((POWER (node_map H)) j))) |- ((?j. ((inverse (node_map H)) = ((POWER (node_map H)) j))) /\ (((inverse (node_map H)) y) IN ((node H) y)))
T c==> c? / c= * part cinverse * part cnode_map f0 * * part cPOWER * part cnode_map f0 b0 c/\ c? / c= * part cinverse * part cnode_map f0 * * part cPOWER * part cnode_map f0 b0 cIN cinverse * part cnode_map f0 f1 * * part cnode f0 f1
